/*! For license information please see LICENSES */
(this.webpackJsonp=this.webpackJsonp||[]).push([[2],{157:function(e,t,r){"use strict";r.r(t),r.d(t,"ACESFilmicToneMapping",(function(){return de})),r.d(t,"AddEquation",(function(){return I})),r.d(t,"AddOperation",(function(){return se})),r.d(t,"AdditiveAnimationBlendMode",(function(){return or})),r.d(t,"AdditiveBlending",(function(){return L})),r.d(t,"AlphaFormat",(function(){return Xe})),r.d(t,"AlwaysDepth",(function(){return Q})),r.d(t,"AlwaysStencilFunc",(function(){return Ur})),r.d(t,"AmbientLight",(function(){return Uf})),r.d(t,"AmbientLightProbe",(function(){return lc})),r.d(t,"AnimationClip",(function(){return Wu})),r.d(t,"AnimationLoader",(function(){return $u})),r.d(t,"AnimationMixer",(function(){return Fc})),r.d(t,"AnimationObjectGroup",(function(){return Dc})),r.d(t,"AnimationUtils",(function(){return Ou})),r.d(t,"ArcCurve",(function(){return lf})),r.d(t,"ArrayCamera",(function(){return Gs})),r.d(t,"ArrowHelper",(function(){return Rd})),r.d(t,"Audio",(function(){return mc})),r.d(t,"AudioAnalyser",(function(){return Ec})),r.d(t,"AudioContext",(function(){return nc})),r.d(t,"AudioListener",(function(){return gc})),r.d(t,"AudioLoader",(function(){return oc})),r.d(t,"AxesHelper",(function(){return Cd})),r.d(t,"AxisHelper",(function(){return Ev})),r.d(t,"BackSide",(function(){return E})),r.d(t,"BasicDepthPacking",(function(){return yr})),r.d(t,"BasicShadowMap",(function(){return m})),r.d(t,"BinaryTextureLoader",(function(){return Cv})),r.d(t,"Bone",(function(){return Pl})),r.d(t,"BooleanKeyframeTrack",(function(){return Fu})),r.d(t,"BoundingBoxHelper",(function(){return Sv})),r.d(t,"Box2",(function(){return Xc})),r.d(t,"Box3",(function(){return Ka})),r.d(t,"Box3Helper",(function(){return Md})),r.d(t,"BoxBufferGeometry",(function(){return Ln})),r.d(t,"BoxGeometry",(function(){return Cn})),r.d(t,"BoxHelper",(function(){return wd})),r.d(t,"BufferAttribute",(function(){return Bi})),r.d(t,"BufferGeometry",(function(){return rn})),r.d(t,"BufferGeometryLoader",(function(){return Xf})),r.d(t,"ByteType",(function(){return De})),r.d(t,"Cache",(function(){return Xu})),r.d(t,"Camera",(function(){return Nn})),r.d(t,"CameraHelper",(function(){return yd})),r.d(t,"CanvasRenderer",(function(){return Ov})),r.d(t,"CanvasTexture",(function(){return ih})),r.d(t,"CatmullRomCurve3",(function(){return vf})),r.d(t,"CineonToneMapping",(function(){return ce})),r.d(t,"CircleBufferGeometry",(function(){return yu})),r.d(t,"CircleGeometry",(function(){return mu})),r.d(t,"ClampToEdgeWrapping",(function(){return Me})),r.d(t,"Clock",(function(){return cc})),r.d(t,"ClosedSplineCurve3",(function(){return xv})),r.d(t,"Color",(function(){return Ri})),r.d(t,"ColorKeyframeTrack",(function(){return Uu})),r.d(t,"CompressedTexture",(function(){return ah})),r.d(t,"CompressedTextureLoader",(function(){return ef})),r.d(t,"ConeBufferGeometry",(function(){return gu})),r.d(t,"ConeGeometry",(function(){return _u})),r.d(t,"CubeCamera",(function(){return Bn})),r.d(t,"CubeGeometry",(function(){return Cn})),r.d(t,"CubeReflectionMapping",(function(){return pe})),r.d(t,"CubeRefractionMapping",(function(){return _e})),r.d(t,"CubeTexture",(function(){return so})),r.d(t,"CubeTextureLoader",(function(){return af})),r.d(t,"CubeUVReflectionMapping",(function(){return be})),r.d(t,"CubeUVRefractionMapping",(function(){return xe})),r.d(t,"CubicBezierCurve",(function(){return mf})),r.d(t,"CubicBezierCurve3",(function(){return yf})),r.d(t,"CubicInterpolant",(function(){return Iu})),r.d(t,"CullFaceBack",(function(){return f})),r.d(t,"CullFaceFront",(function(){return c})),r.d(t,"CullFaceFrontBack",(function(){return d})),r.d(t,"CullFaceNone",(function(){return h})),r.d(t,"Curve",(function(){return of})),r.d(t,"CurvePath",(function(){return Tf})),r.d(t,"CustomBlending",(function(){return k})),r.d(t,"CylinderBufferGeometry",(function(){return pu})),r.d(t,"CylinderGeometry",(function(){return vu})),r.d(t,"Cylindrical",(function(){return Wc})),r.d(t,"DataTexture",(function(){return Un})),r.d(t,"DataTexture2DArray",(function(){return lo})),r.d(t,"DataTexture3D",(function(){return ho})),r.d(t,"DataTextureLoader",(function(){return tf})),r.d(t,"DecrementStencilOp",(function(){return Rr})),r.d(t,"DecrementWrapStencilOp",(function(){return Lr})),r.d(t,"DefaultLoadingManager",(function(){return Zu})),r.d(t,"DepthFormat",(function(){return $e})),r.d(t,"DepthStencilFormat",(function(){return et})),r.d(t,"DepthTexture",(function(){return nh})),r.d(t,"DirectionalLight",(function(){return Ff})),r.d(t,"DirectionalLightHelper",(function(){return _d})),r.d(t,"DirectionalLightShadow",(function(){return Bf})),r.d(t,"DiscreteInterpolant",(function(){return Du})),r.d(t,"DodecahedronBufferGeometry",(function(){return mh})),r.d(t,"DodecahedronGeometry",(function(){return gh})),r.d(t,"DoubleSide",(function(){return S})),r.d(t,"DstAlphaFactor",(function(){return W})),r.d(t,"DstColorFactor",(function(){return Y})),r.d(t,"DynamicBufferAttribute",(function(){return fv})),r.d(t,"DynamicCopyUsage",(function(){return Xr})),r.d(t,"DynamicDrawUsage",(function(){return Vr})),r.d(t,"DynamicReadUsage",(function(){return Hr})),r.d(t,"EdgesGeometry",(function(){return du})),r.d(t,"EdgesHelper",(function(){return Tv})),r.d(t,"EllipseCurve",(function(){return sf})),r.d(t,"EqualDepth",(function(){return te})),r.d(t,"EqualStencilFunc",(function(){return Ir})),r.d(t,"EquirectangularReflectionMapping",(function(){return ge})),r.d(t,"EquirectangularRefractionMapping",(function(){return me})),r.d(t,"Euler",(function(){return xa})),r.d(t,"EventDispatcher",(function(){return Zr})),r.d(t,"ExtrudeBufferGeometry",(function(){return $h})),r.d(t,"ExtrudeGeometry",(function(){return Qh})),r.d(t,"Face3",(function(){return Oi})),r.d(t,"Face4",(function(){return Jd})),r.d(t,"FaceColors",(function(){return ev})),r.d(t,"FileLoader",(function(){return Qu})),r.d(t,"FlatShading",(function(){return T})),r.d(t,"Float32Attribute",(function(){return yv})),r.d(t,"Float32BufferAttribute",(function(){return Wi})),r.d(t,"Float64Attribute",(function(){return bv})),r.d(t,"Float64BufferAttribute",(function(){return qi})),r.d(t,"FloatType",(function(){return Ve})),r.d(t,"Fog",(function(){return Js})),r.d(t,"FogExp2",(function(){return Zs})),r.d(t,"Font",(function(){return rc})),r.d(t,"FontLoader",(function(){return ic})),r.d(t,"FrontFaceDirectionCCW",(function(){return _})),r.d(t,"FrontFaceDirectionCW",(function(){return v})),r.d(t,"FrontSide",(function(){return M})),r.d(t,"Frustum",(function(){return zn})),r.d(t,"GammaEncoding",(function(){return dr})),r.d(t,"Geometry",(function(){return Rn})),r.d(t,"GeometryUtils",(function(){return Pv})),r.d(t,"GreaterDepth",(function(){return ae})),r.d(t,"GreaterEqualDepth",(function(){return re})),r.d(t,"GreaterEqualStencilFunc",(function(){return Fr})),r.d(t,"GreaterStencilFunc",(function(){return Dr})),r.d(t,"GridHelper",(function(){return ud})),r.d(t,"Group",(function(){return Hs})),r.d(t,"HalfFloatType",(function(){return ze})),r.d(t,"HemisphereLight",(function(){return Lf})),r.d(t,"HemisphereLightHelper",(function(){return hd})),r.d(t,"HemisphereLightProbe",(function(){return sc})),r.d(t,"IcosahedronBufferGeometry",(function(){return _h})),r.d(t,"IcosahedronGeometry",(function(){return ph})),r.d(t,"ImageBitmapLoader",(function(){return ec})),r.d(t,"ImageLoader",(function(){return rf})),r.d(t,"ImageUtils",(function(){return ta})),r.d(t,"ImmediateRenderObject",(function(){return Kc})),r.d(t,"IncrementStencilOp",(function(){return Ar})),r.d(t,"IncrementWrapStencilOp",(function(){return Cr})),r.d(t,"InstancedBufferAttribute",(function(){return qf})),r.d(t,"InstancedBufferGeometry",(function(){return Wf})),r.d(t,"InstancedInterleavedBuffer",(function(){return jc})),r.d(t,"InstancedMesh",(function(){return Dl})),r.d(t,"Int16Attribute",(function(){return pv})),r.d(t,"Int16BufferAttribute",(function(){return Vi})),r.d(t,"Int32Attribute",(function(){return gv})),r.d(t,"Int32BufferAttribute",(function(){return Gi})),r.d(t,"Int8Attribute",(function(){return cv})),r.d(t,"Int8BufferAttribute",(function(){return Fi})),r.d(t,"IntType",(function(){return Ue})),r.d(t,"InterleavedBuffer",(function(){return Ks})),r.d(t,"InterleavedBufferAttribute",(function(){return el})),r.d(t,"Interpolant",(function(){return ku})),r.d(t,"InterpolateDiscrete",(function(){return Qt})),r.d(t,"InterpolateLinear",(function(){return $t})),r.d(t,"InterpolateSmooth",(function(){return er})),r.d(t,"InvertStencilOp",(function(){return Pr})),r.d(t,"JSONLoader",(function(){return kv})),r.d(t,"KeepStencilOp",(function(){return Sr})),r.d(t,"KeyframeTrack",(function(){return Bu})),r.d(t,"LOD",(function(){return Tl})),r.d(t,"LatheBufferGeometry",(function(){return hu})),r.d(t,"LatheGeometry",(function(){return lu})),r.d(t,"Layers",(function(){return wa})),r.d(t,"LensFlare",(function(){return Nv})),r.d(t,"LessDepth",(function(){return $})),r.d(t,"LessEqualDepth",(function(){return ee})),r.d(t,"LessEqualStencilFunc",(function(){return Nr})),r.d(t,"LessStencilFunc",(function(){return kr})),r.d(t,"Light",(function(){return Cf})),r.d(t,"LightProbe",(function(){return zf})),r.d(t,"LightShadow",(function(){return Pf})),r.d(t,"Line",(function(){return Gl})),r.d(t,"Line3",(function(){return Jc})),r.d(t,"LineBasicMaterial",(function(){return Bl})),r.d(t,"LineCurve",(function(){return bf})),r.d(t,"LineCurve3",(function(){return xf})),r.d(t,"LineDashedMaterial",(function(){return Lu})),r.d(t,"LineLoop",(function(){return Xl})),r.d(t,"LinePieces",(function(){return Qd})),r.d(t,"LineSegments",(function(){return ql})),r.d(t,"LineStrip",(function(){return Kd})),r.d(t,"LinearEncoding",(function(){return fr})),r.d(t,"LinearFilter",(function(){return Le})),r.d(t,"LinearInterpolant",(function(){return Nu})),r.d(t,"LinearMipMapLinearFilter",(function(){return Ie})),r.d(t,"LinearMipMapNearestFilter",(function(){return Oe})),r.d(t,"LinearMipmapLinearFilter",(function(){return ke})),r.d(t,"LinearMipmapNearestFilter",(function(){return Pe})),r.d(t,"LinearToneMapping",(function(){return he})),r.d(t,"Loader",(function(){return Ju})),r.d(t,"LoaderUtils",(function(){return Hf})),r.d(t,"LoadingManager",(function(){return Yu})),r.d(t,"LogLuvEncoding",(function(){return pr})),r.d(t,"LoopOnce",(function(){return Zt})),r.d(t,"LoopPingPong",(function(){return Kt})),r.d(t,"LoopRepeat",(function(){return Jt})),r.d(t,"LuminanceAlphaFormat",(function(){return Ke})),r.d(t,"LuminanceFormat",(function(){return Je})),r.d(t,"MOUSE",(function(){return o})),r.d(t,"Material",(function(){return Ii})),r.d(t,"MaterialLoader",(function(){return Gf})),r.d(t,"Math",(function(){return Qr})),r.d(t,"MathUtils",(function(){return Qr})),r.d(t,"Matrix3",(function(){return ea})),r.d(t,"Matrix4",(function(){return ma})),r.d(t,"MaxEquation",(function(){return F})),r.d(t,"Mesh",(function(){return xn})),r.d(t,"MeshBasicMaterial",(function(){return Ni})),r.d(t,"MeshDepthMaterial",(function(){return Bs})),r.d(t,"MeshDistanceMaterial",(function(){return Fs})),r.d(t,"MeshFaceMaterial",(function(){return rv})),r.d(t,"MeshLambertMaterial",(function(){return Ru})),r.d(t,"MeshMatcapMaterial",(function(){return Cu})),r.d(t,"MeshNormalMaterial",(function(){return Au})),r.d(t,"MeshPhongMaterial",(function(){return Su})),r.d(t,"MeshPhysicalMaterial",(function(){return Eu})),r.d(t,"MeshStandardMaterial",(function(){return Mu})),r.d(t,"MeshToonMaterial",(function(){return Tu})),r.d(t,"MinEquation",(function(){return B})),r.d(t,"MirroredRepeatWrapping",(function(){return Ee})),r.d(t,"MixOperation",(function(){return oe})),r.d(t,"MultiMaterial",(function(){return av})),r.d(t,"MultiplyBlending",(function(){return O})),r.d(t,"MultiplyOperation",(function(){return ne})),r.d(t,"NearestFilter",(function(){return Se})),r.d(t,"NearestMipMapLinearFilter",(function(){return Ce})),r.d(t,"NearestMipMapNearestFilter",(function(){return Ae})),r.d(t,"NearestMipmapLinearFilter",(function(){return Re})),r.d(t,"NearestMipmapNearestFilter",(function(){return Te})),r.d(t,"NeverDepth",(function(){return K})),r.d(t,"NeverStencilFunc",(function(){return Or})),r.d(t,"NoBlending",(function(){return R})),r.d(t,"NoColors",(function(){return $d})),r.d(t,"NoToneMapping",(function(){return le})),r.d(t,"NormalAnimationBlendMode",(function(){return nr})),r.d(t,"NormalBlending",(function(){return C})),r.d(t,"NotEqualDepth",(function(){return ie})),r.d(t,"NotEqualStencilFunc",(function(){return Br})),r.d(t,"NumberKeyframeTrack",(function(){return ju})),r.d(t,"Object3D",(function(){return Da})),r.d(t,"ObjectLoader",(function(){return Zf})),r.d(t,"ObjectSpaceNormalMap",(function(){return Mr})),r.d(t,"OctahedronBufferGeometry",(function(){return vh})),r.d(t,"OctahedronGeometry",(function(){return dh})),r.d(t,"OneFactor",(function(){return j})),r.d(t,"OneMinusDstAlphaFactor",(function(){return X})),r.d(t,"OneMinusDstColorFactor",(function(){return Z})),r.d(t,"OneMinusSrcAlphaFactor",(function(){return H})),r.d(t,"OneMinusSrcColorFactor",(function(){return z})),r.d(t,"OrthographicCamera",(function(){return Df})),r.d(t,"PCFShadowMap",(function(){return y})),r.d(t,"PCFSoftShadowMap",(function(){return x})),r.d(t,"PMREMGenerator",(function(){return zd})),r.d(t,"ParametricBufferGeometry",(function(){return lh})),r.d(t,"ParametricGeometry",(function(){return sh})),r.d(t,"Particle",(function(){return nv})),r.d(t,"ParticleBasicMaterial",(function(){return lv})),r.d(t,"ParticleSystem",(function(){return ov})),r.d(t,"ParticleSystemMaterial",(function(){return hv})),r.d(t,"Path",(function(){return Af})),r.d(t,"PerspectiveCamera",(function(){return Dn})),r.d(t,"Plane",(function(){return di})),r.d(t,"PlaneBufferGeometry",(function(){return Xn})),r.d(t,"PlaneGeometry",(function(){return qn})),r.d(t,"PlaneHelper",(function(){return Ed})),r.d(t,"PointCloud",(function(){return iv})),r.d(t,"PointCloudMaterial",(function(){return sv})),r.d(t,"PointLight",(function(){return Nf})),r.d(t,"PointLightHelper",(function(){return nd})),r.d(t,"Points",(function(){return $l})),r.d(t,"PointsMaterial",(function(){return Yl})),r.d(t,"PolarGridHelper",(function(){return fd})),r.d(t,"PolyhedronBufferGeometry",(function(){return uh})),r.d(t,"PolyhedronGeometry",(function(){return hh})),r.d(t,"PositionalAudio",(function(){return Mc})),r.d(t,"PropertyBinding",(function(){return Nc})),r.d(t,"PropertyMixer",(function(){return Sc})),r.d(t,"QuadraticBezierCurve",(function(){return wf})),r.d(t,"QuadraticBezierCurve3",(function(){return Mf})),r.d(t,"Quaternion",(function(){return sa})),r.d(t,"QuaternionKeyframeTrack",(function(){return zu})),r.d(t,"QuaternionLinearInterpolant",(function(){return Vu})),r.d(t,"REVISION",(function(){return n})),r.d(t,"RGBADepthPacking",(function(){return xr})),r.d(t,"RGBAFormat",(function(){return Ze})),r.d(t,"RGBAIntegerFormat",(function(){return st})),r.d(t,"RGBA_ASTC_10x10_Format",(function(){return Pt})),r.d(t,"RGBA_ASTC_10x5_Format",(function(){return Rt})),r.d(t,"RGBA_ASTC_10x6_Format",(function(){return Ct})),r.d(t,"RGBA_ASTC_10x8_Format",(function(){return Lt})),r.d(t,"RGBA_ASTC_12x10_Format",(function(){return Ot})),r.d(t,"RGBA_ASTC_12x12_Format",(function(){return kt})),r.d(t,"RGBA_ASTC_4x4_Format",(function(){return bt})),r.d(t,"RGBA_ASTC_5x4_Format",(function(){return xt})),r.d(t,"RGBA_ASTC_5x5_Format",(function(){return wt})),r.d(t,"RGBA_ASTC_6x5_Format",(function(){return Mt})),r.d(t,"RGBA_ASTC_6x6_Format",(function(){return Et})),r.d(t,"RGBA_ASTC_8x5_Format",(function(){return St})),r.d(t,"RGBA_ASTC_8x6_Format",(function(){return Tt})),r.d(t,"RGBA_ASTC_8x8_Format",(function(){return At})),r.d(t,"RGBA_BPTC_Format",(function(){return It})),r.d(t,"RGBA_ETC2_EAC_Format",(function(){return yt})),r.d(t,"RGBA_PVRTC_2BPPV1_Format",(function(){return _t})),r.d(t,"RGBA_PVRTC_4BPPV1_Format",(function(){return pt})),r.d(t,"RGBA_S3TC_DXT1_Format",(function(){return ht})),r.d(t,"RGBA_S3TC_DXT3_Format",(function(){return ut})),r.d(t,"RGBA_S3TC_DXT5_Format",(function(){return ft})),r.d(t,"RGBDEncoding",(function(){return mr})),r.d(t,"RGBEEncoding",(function(){return vr})),r.d(t,"RGBEFormat",(function(){return Qe})),r.d(t,"RGBFormat",(function(){return Ye})),r.d(t,"RGBIntegerFormat",(function(){return ot})),r.d(t,"RGBM16Encoding",(function(){return gr})),r.d(t,"RGBM7Encoding",(function(){return _r})),r.d(t,"RGB_ETC1_Format",(function(){return gt})),r.d(t,"RGB_ETC2_Format",(function(){return mt})),r.d(t,"RGB_PVRTC_2BPPV1_Format",(function(){return vt})),r.d(t,"RGB_PVRTC_4BPPV1_Format",(function(){return ct})),r.d(t,"RGB_S3TC_DXT1_Format",(function(){return lt})),r.d(t,"RGFormat",(function(){return it})),r.d(t,"RGIntegerFormat",(function(){return nt})),r.d(t,"RawShaderMaterial",(function(){return wu})),r.d(t,"Ray",(function(){return hi})),r.d(t,"Raycaster",(function(){return Vc})),r.d(t,"RectAreaLight",(function(){return jf})),r.d(t,"RedFormat",(function(){return tt})),r.d(t,"RedIntegerFormat",(function(){return at})),r.d(t,"ReinhardToneMapping",(function(){return ue})),r.d(t,"RepeatWrapping",(function(){return we})),r.d(t,"ReplaceStencilOp",(function(){return Tr})),r.d(t,"ReverseSubtractEquation",(function(){return D})),r.d(t,"RingBufferGeometry",(function(){return su})),r.d(t,"RingGeometry",(function(){return ou})),r.d(t,"SRGB8_ALPHA8_ASTC_10x10_Format",(function(){return qt})),r.d(t,"SRGB8_ALPHA8_ASTC_10x5_Format",(function(){return Gt})),r.d(t,"SRGB8_ALPHA8_ASTC_10x6_Format",(function(){return Ht})),r.d(t,"SRGB8_ALPHA8_ASTC_10x8_Format",(function(){return Wt})),r.d(t,"SRGB8_ALPHA8_ASTC_12x10_Format",(function(){return Xt})),r.d(t,"SRGB8_ALPHA8_ASTC_12x12_Format",(function(){return Yt})),r.d(t,"SRGB8_ALPHA8_ASTC_4x4_Format",(function(){return Nt})),r.d(t,"SRGB8_ALPHA8_ASTC_5x4_Format",(function(){return Dt})),r.d(t,"SRGB8_ALPHA8_ASTC_5x5_Format",(function(){return Bt})),r.d(t,"SRGB8_ALPHA8_ASTC_6x5_Format",(function(){return Ft})),r.d(t,"SRGB8_ALPHA8_ASTC_6x6_Format",(function(){return Ut})),r.d(t,"SRGB8_ALPHA8_ASTC_8x5_Format",(function(){return jt})),r.d(t,"SRGB8_ALPHA8_ASTC_8x6_Format",(function(){return Vt})),r.d(t,"SRGB8_ALPHA8_ASTC_8x8_Format",(function(){return zt})),r.d(t,"Scene",(function(){return Ba})),r.d(t,"SceneUtils",(function(){return Iv})),r.d(t,"ShaderChunk",(function(){return Yn})),r.d(t,"ShaderLib",(function(){return Zn})),r.d(t,"ShaderMaterial",(function(){return In})),r.d(t,"ShadowMaterial",(function(){return xu})),r.d(t,"Shape",(function(){return Rf})),r.d(t,"ShapeBufferGeometry",(function(){return fu})),r.d(t,"ShapeGeometry",(function(){return uu})),r.d(t,"ShapePath",(function(){return tc})),r.d(t,"ShapeUtils",(function(){return Zh})),r.d(t,"ShortType",(function(){return Be})),r.d(t,"Skeleton",(function(){return Ll})),r.d(t,"SkeletonHelper",(function(){return id})),r.d(t,"SkinnedMesh",(function(){return Al})),r.d(t,"SmoothShading",(function(){return A})),r.d(t,"Sphere",(function(){return ei})),r.d(t,"SphereBufferGeometry",(function(){return nu})),r.d(t,"SphereGeometry",(function(){return iu})),r.d(t,"Spherical",(function(){return Hc})),r.d(t,"SphericalHarmonics3",(function(){return Vf})),r.d(t,"SphericalReflectionMapping",(function(){return ye})),r.d(t,"Spline",(function(){return Mv})),r.d(t,"SplineCurve",(function(){return Ef})),r.d(t,"SplineCurve3",(function(){return wv})),r.d(t,"SpotLight",(function(){return kf})),r.d(t,"SpotLightHelper",(function(){return $c})),r.d(t,"SpotLightShadow",(function(){return Of})),r.d(t,"Sprite",(function(){return gl})),r.d(t,"SpriteMaterial",(function(){return tl})),r.d(t,"SrcAlphaFactor",(function(){return G})),r.d(t,"SrcAlphaSaturateFactor",(function(){return J})),r.d(t,"SrcColorFactor",(function(){return V})),r.d(t,"StaticCopyUsage",(function(){return qr})),r.d(t,"StaticDrawUsage",(function(){return jr})),r.d(t,"StaticReadUsage",(function(){return Gr})),r.d(t,"StereoCamera",(function(){return fc})),r.d(t,"StreamCopyUsage",(function(){return Yr})),r.d(t,"StreamDrawUsage",(function(){return zr})),r.d(t,"StreamReadUsage",(function(){return Wr})),r.d(t,"StringKeyframeTrack",(function(){return Gu})),r.d(t,"SubtractEquation",(function(){return N})),r.d(t,"SubtractiveBlending",(function(){return P})),r.d(t,"TOUCH",(function(){return l})),r.d(t,"TangentSpaceNormalMap",(function(){return wr})),r.d(t,"TetrahedronBufferGeometry",(function(){return ch})),r.d(t,"TetrahedronGeometry",(function(){return fh})),r.d(t,"TextBufferGeometry",(function(){return au})),r.d(t,"TextGeometry",(function(){return ru})),r.d(t,"Texture",(function(){return aa})),r.d(t,"TextureLoader",(function(){return nf})),r.d(t,"TorusBufferGeometry",(function(){return Eh})),r.d(t,"TorusGeometry",(function(){return Mh})),r.d(t,"TorusKnotBufferGeometry",(function(){return wh})),r.d(t,"TorusKnotGeometry",(function(){return xh})),r.d(t,"Triangle",(function(){return Ei})),r.d(t,"TriangleFanDrawMode",(function(){return ur})),r.d(t,"TriangleStripDrawMode",(function(){return lr})),r.d(t,"TrianglesDrawMode",(function(){return sr})),r.d(t,"TubeBufferGeometry",(function(){return bh})),r.d(t,"TubeGeometry",(function(){return yh})),r.d(t,"UVMapping",(function(){return ve})),r.d(t,"Uint16Attribute",(function(){return _v})),r.d(t,"Uint16BufferAttribute",(function(){return zi})),r.d(t,"Uint32Attribute",(function(){return mv})),r.d(t,"Uint32BufferAttribute",(function(){return Hi})),r.d(t,"Uint8Attribute",(function(){return dv})),r.d(t,"Uint8BufferAttribute",(function(){return Ui})),r.d(t,"Uint8ClampedAttribute",(function(){return vv})),r.d(t,"Uint8ClampedBufferAttribute",(function(){return ji})),r.d(t,"Uncharted2ToneMapping",(function(){return fe})),r.d(t,"Uniform",(function(){return Uc})),r.d(t,"UniformsLib",(function(){return Gn})),r.d(t,"UniformsUtils",(function(){return kn})),r.d(t,"UnsignedByteType",(function(){return Ne})),r.d(t,"UnsignedInt248Type",(function(){return qe})),r.d(t,"UnsignedIntType",(function(){return je})),r.d(t,"UnsignedShort4444Type",(function(){return Ge})),r.d(t,"UnsignedShort5551Type",(function(){return He})),r.d(t,"UnsignedShort565Type",(function(){return We})),r.d(t,"UnsignedShortType",(function(){return Fe})),r.d(t,"VSMShadowMap",(function(){return w})),r.d(t,"Vector2",(function(){return $r})),r.d(t,"Vector3",(function(){return ua})),r.d(t,"Vector4",(function(){return ia})),r.d(t,"VectorKeyframeTrack",(function(){return Hu})),r.d(t,"Vertex",(function(){return uv})),r.d(t,"VertexColors",(function(){return tv})),r.d(t,"VideoTexture",(function(){return rh})),r.d(t,"WebGLCubeRenderTarget",(function(){return Fn})),r.d(t,"WebGLMultisampleRenderTarget",(function(){return oa})),r.d(t,"WebGLRenderTarget",(function(){return na})),r.d(t,"WebGLRenderTargetCube",(function(){return Lv})),r.d(t,"WebGLRenderer",(function(){return Ys})),r.d(t,"WebGLUtils",(function(){return zs})),r.d(t,"WireframeGeometry",(function(){return oh})),r.d(t,"WireframeHelper",(function(){return Av})),r.d(t,"WrapAroundEnding",(function(){return ir})),r.d(t,"XHRLoader",(function(){return Rv})),r.d(t,"ZeroCurvatureEnding",(function(){return rr})),r.d(t,"ZeroFactor",(function(){return U})),r.d(t,"ZeroSlopeEnding",(function(){return ar})),r.d(t,"ZeroStencilOp",(function(){return Er})),r.d(t,"sRGBEncoding",(function(){return cr})),void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e}),void 0===Math.sign&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),"name"in Function.prototype==!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(e){if(null==e)throw new TypeError("Cannot convert undefined or null to object");const output=Object(e);for(let e=1;e<arguments.length;e++){const source=arguments[e];if(null!=source)for(const e in source)Object.prototype.hasOwnProperty.call(source,e)&&(output[e]=source[e])}return output});const n="117",o={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},l={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},h=0,f=1,c=2,d=3,v=0,_=1,m=0,y=1,x=2,w=3,M=0,E=1,S=2,T=1,A=2,R=0,C=1,L=2,P=3,O=4,k=5,I=100,N=101,D=102,B=103,F=104,U=200,j=201,V=202,z=203,G=204,H=205,W=206,X=207,Y=208,Z=209,J=210,K=0,Q=1,$=2,ee=3,te=4,re=5,ae=6,ie=7,ne=0,oe=1,se=2,le=0,he=1,ue=2,fe=3,ce=4,de=5,ve=300,pe=301,_e=302,ge=303,me=304,ye=305,be=306,xe=307,we=1e3,Me=1001,Ee=1002,Se=1003,Te=1004,Ae=1004,Re=1005,Ce=1005,Le=1006,Pe=1007,Oe=1007,ke=1008,Ie=1008,Ne=1009,De=1010,Be=1011,Fe=1012,Ue=1013,je=1014,Ve=1015,ze=1016,Ge=1017,He=1018,We=1019,qe=1020,Xe=1021,Ye=1022,Ze=1023,Je=1024,Ke=1025,Qe=Ze,$e=1026,et=1027,tt=1028,at=1029,it=1030,nt=1031,ot=1032,st=1033,lt=33776,ht=33777,ut=33778,ft=33779,ct=35840,vt=35841,pt=35842,_t=35843,gt=36196,mt=37492,yt=37496,bt=37808,xt=37809,wt=37810,Mt=37811,Et=37812,St=37813,Tt=37814,At=37815,Rt=37816,Ct=37817,Lt=37818,Pt=37819,Ot=37820,kt=37821,It=36492,Nt=37840,Dt=37841,Bt=37842,Ft=37843,Ut=37844,jt=37845,Vt=37846,zt=37847,Gt=37848,Ht=37849,Wt=37850,qt=37851,Xt=37852,Yt=37853,Zt=2200,Jt=2201,Kt=2202,Qt=2300,$t=2301,er=2302,rr=2400,ar=2401,ir=2402,nr=2500,or=2501,sr=0,lr=1,ur=2,fr=3e3,cr=3001,dr=3007,vr=3002,pr=3003,_r=3004,gr=3005,mr=3006,yr=3200,xr=3201,wr=0,Mr=1,Er=0,Sr=7680,Tr=7681,Ar=7682,Rr=7683,Cr=34055,Lr=34056,Pr=5386,Or=512,kr=513,Ir=514,Nr=515,Dr=516,Br=517,Fr=518,Ur=519,jr=35044,Vr=35048,zr=35040,Gr=35045,Hr=35049,Wr=35041,qr=35046,Xr=35050,Yr=35042;function Zr(){}Object.assign(Zr.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners[e];if(void 0!==r){var n=r.indexOf(t);-1!==n&&r.splice(n,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var r=t.slice(0),i=0,n=r.length;i<n;i++)r[i].call(this,e)}}}});for(var Jr=[],i=0;i<256;i++)Jr[i]=(i<16?"0":"")+i.toString(16);var Kr,Qr={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(Jr[255&e]+Jr[e>>8&255]+Jr[e>>16&255]+Jr[e>>24&255]+"-"+Jr[255&t]+Jr[t>>8&255]+"-"+Jr[t>>16&15|64]+Jr[t>>24&255]+"-"+Jr[63&r|128]+Jr[r>>8&255]+"-"+Jr[r>>16&255]+Jr[r>>24&255]+Jr[255&n]+Jr[n>>8&255]+Jr[n>>16&255]+Jr[n>>24&255]).toUpperCase()},clamp:function(e,t,r){return Math.max(t,Math.min(r,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,r,n,o){return n+(e-t)*(o-n)/(r-t)},lerp:function(e,t,r){return(1-r)*e+r*t},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*(3-2*e)},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*Qr.DEG2RAD},radToDeg:function(e){return e*Qr.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(q,a,b,e,t){var r=Math.cos,n=Math.sin,o=r(b/2),l=n(b/2),h=r((a+e)/2),f=n((a+e)/2),c=r((a-e)/2),d=n((a-e)/2),v=r((e-a)/2),_=n((e-a)/2);switch(t){case"XYX":q.set(o*f,l*c,l*d,o*h);break;case"YZY":q.set(l*d,o*f,l*c,o*h);break;case"ZXZ":q.set(l*c,l*d,o*f,o*h);break;case"XZX":q.set(o*f,l*_,l*v,o*h);break;case"YXY":q.set(l*v,o*f,l*_,o*h);break;case"ZYZ":q.set(l*_,l*v,o*f,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+t)}}};function $r(e,t){this.x=e||0,this.y=t||0}function ea(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.defineProperties($r.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}}),Object.assign($r.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(s){return this.x+=s,this.y+=s,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},addScaledVector:function(e,s){return this.x+=e.x*s,this.y+=e.y*s,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(s){return this.x-=s,this.y-=s,this},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},applyMatrix3:function(e){var t=this.x,r=this.y,n=e.elements;return this.x=n[0]*t+n[3]*r+n[6],this.y=n[1]*t+n[4]*r+n[7],this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this},clampLength:function(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},cross:function(e){return this.x*e.y-this.y*e.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){return Math.atan2(-this.y,-this.x)+Math.PI},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){var r=Math.cos(t),s=Math.sin(t),n=this.x-e.x,o=this.y-e.y;return this.x=n*r-o*s+e.x,this.y=n*s+o*r+e.y,this},random:function(){return this.x=Math.random(),this.y=Math.random(),this}}),Object.assign(ea.prototype,{isMatrix3:!0,set:function(e,t,r,n,o,l,h,f,c){var d=this.elements;return d[0]=e,d[1]=n,d[2]=h,d[3]=t,d[4]=o,d[5]=f,d[6]=r,d[7]=l,d[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){var t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this},extractBasis:function(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(a,b){var e=a.elements,t=b.elements,r=this.elements,n=e[0],o=e[3],l=e[6],h=e[1],f=e[4],c=e[7],d=e[2],v=e[5],_=e[8],m=t[0],y=t[3],x=t[6],w=t[1],M=t[4],E=t[7],S=t[2],T=t[5],A=t[8];return r[0]=n*m+o*w+l*S,r[3]=n*y+o*M+l*T,r[6]=n*x+o*E+l*A,r[1]=h*m+f*w+c*S,r[4]=h*y+f*M+c*T,r[7]=h*x+f*E+c*A,r[2]=d*m+v*w+_*S,r[5]=d*y+v*M+_*T,r[8]=d*x+v*E+_*A,this},multiplyScalar:function(s){var e=this.elements;return e[0]*=s,e[3]*=s,e[6]*=s,e[1]*=s,e[4]*=s,e[7]*=s,e[2]*=s,e[5]*=s,e[8]*=s,this},determinant:function(){var e=this.elements,a=e[0],b=e[1],t=e[2],r=e[3],n=e[4],o=e[5],g=e[6],l=e[7],i=e[8];return a*n*i-a*o*l-b*r*i+b*o*g+t*r*l-t*n*g},getInverse:function(e,t){void 0!==t&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");var r=e.elements,n=this.elements,o=r[0],l=r[1],h=r[2],f=r[3],c=r[4],d=r[5],v=r[6],_=r[7],m=r[8],y=m*c-d*_,x=d*v-m*f,w=_*f-c*v,M=o*y+l*x+h*w;if(0===M)return this.set(0,0,0,0,0,0,0,0,0);var E=1/M;return n[0]=y*E,n[1]=(h*_-m*l)*E,n[2]=(d*l-h*c)*E,n[3]=x*E,n[4]=(m*o-h*v)*E,n[5]=(h*f-d*o)*E,n[6]=w*E,n[7]=(l*v-_*o)*E,n[8]=(c*o-l*f)*E,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},setUvTransform:function(e,t,r,n,o,l,h){var f=Math.cos(o),s=Math.sin(o);this.set(r*f,r*s,-r*(f*l+s*h)+l+e,-n*s,n*f,-n*(-s*l+f*h)+h+t,0,0,1)},scale:function(e,t){var r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this},rotate:function(e){var t=Math.cos(e),s=Math.sin(e),r=this.elements,n=r[0],o=r[3],l=r[6],h=r[1],f=r[4],c=r[7];return r[0]=t*n+s*h,r[3]=t*o+s*f,r[6]=t*l+s*c,r[1]=-s*n+t*h,r[4]=-s*o+t*f,r[7]=-s*l+t*c,this},translate:function(e,t){var r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this},equals:function(e){for(var t=this.elements,r=e.elements,i=0;i<9;i++)if(t[i]!==r[i])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(var i=0;i<9;i++)this.elements[i]=e[i+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}});var ta={getDataURL:function(image){var canvas;if("undefined"==typeof HTMLCanvasElement)return image.src;if(image instanceof HTMLCanvasElement)canvas=image;else{void 0===Kr&&(Kr=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Kr.width=image.width,Kr.height=image.height;var e=Kr.getContext("2d");image instanceof ImageData?e.putImageData(image,0,0):e.drawImage(image,0,0,image.width,image.height),canvas=Kr}return canvas.width>2048||canvas.height>2048?canvas.toDataURL("image/jpeg",.6):canvas.toDataURL("image/png")}},ra=0;function aa(image,e,t,r,n,o,l,h,f,c){Object.defineProperty(this,"id",{value:ra++}),this.uuid=Qr.generateUUID(),this.name="",this.image=void 0!==image?image:aa.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:aa.DEFAULT_MAPPING,this.wrapS=void 0!==t?t:Me,this.wrapT=void 0!==r?r:Me,this.magFilter=void 0!==n?n:Le,this.minFilter=void 0!==o?o:ke,this.anisotropy=void 0!==f?f:1,this.format=void 0!==l?l:Ze,this.internalFormat=null,this.type=void 0!==h?h:Ne,this.offset=new $r(0,0),this.repeat=new $r(1,1),this.center=new $r(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ea,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==c?c:fr,this.version=0,this.onUpdate=null}function ia(e,t,r,n){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==n?n:1}function na(e,t,r){this.width=e,this.height=t,this.scissor=new ia(0,0,e,t),this.scissorTest=!1,this.viewport=new ia(0,0,e,t),r=r||{},this.texture=new aa(void 0,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=void 0!==r.generateMipmaps&&r.generateMipmaps,this.texture.minFilter=void 0!==r.minFilter?r.minFilter:Le,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.depthTexture=void 0!==r.depthTexture?r.depthTexture:null}function oa(e,t,r){na.call(this,e,t,r),this.samples=4}function sa(e,t,r,n){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==n?n:1}aa.DEFAULT_IMAGE=void 0,aa.DEFAULT_MAPPING=ve,aa.prototype=Object.assign(Object.create(Zr.prototype),{constructor:aa,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(source){return this.name=source.name,this.image=source.image,this.mipmaps=source.mipmaps.slice(0),this.mapping=source.mapping,this.wrapS=source.wrapS,this.wrapT=source.wrapT,this.magFilter=source.magFilter,this.minFilter=source.minFilter,this.anisotropy=source.anisotropy,this.format=source.format,this.internalFormat=source.internalFormat,this.type=source.type,this.offset.copy(source.offset),this.repeat.copy(source.repeat),this.center.copy(source.center),this.rotation=source.rotation,this.matrixAutoUpdate=source.matrixAutoUpdate,this.matrix.copy(source.matrix),this.generateMipmaps=source.generateMipmaps,this.premultiplyAlpha=source.premultiplyAlpha,this.flipY=source.flipY,this.unpackAlignment=source.unpackAlignment,this.encoding=source.encoding,this},toJSON:function(meta){var e=void 0===meta||"string"==typeof meta;if(!e&&void 0!==meta.textures[this.uuid])return meta.textures[this.uuid];var output={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var image=this.image;if(void 0===image.uuid&&(image.uuid=Qr.generateUUID()),!e&&void 0===meta.images[image.uuid]){var t;if(Array.isArray(image)){t=[];for(var i=0,r=image.length;i<r;i++)t.push(ta.getDataURL(image[i]))}else t=ta.getDataURL(image);meta.images[image.uuid]={uuid:image.uuid,url:t}}output.image=image.uuid}return e||(meta.textures[this.uuid]=output),output},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==ve)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case we:e.x=e.x-Math.floor(e.x);break;case Me:e.x=e.x<0?0:1;break;case Ee:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case we:e.y=e.y-Math.floor(e.y);break;case Me:e.y=e.y<0?0:1;break;case Ee:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(aa.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.defineProperties(ia.prototype,{width:{get:function(){return this.z},set:function(e){this.z=e}},height:{get:function(){return this.w},set:function(e){this.w=e}}}),Object.assign(ia.prototype,{isVector4:!0,set:function(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(s){return this.x+=s,this.y+=s,this.z+=s,this.w+=s,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this},addScaledVector:function(e,s){return this.x+=e.x*s,this.y+=e.y*s,this.z+=e.z*s,this.w+=e.w*s,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(s){return this.x-=s,this.y-=s,this.z-=s,this.w-=s,this},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,r=this.y,n=this.z,o=this.w,l=e.elements;return this.x=l[0]*t+l[4]*r+l[8]*n+l[12]*o,this.y=l[1]*t+l[5]*r+l[9]*n+l[13]*o,this.z=l[2]*t+l[6]*r+l[10]*n+l[14]*o,this.w=l[3]*t+l[7]*r+l[11]*n+l[15]*o,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(q){this.w=2*Math.acos(q.w);var s=Math.sqrt(1-q.w*q.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=q.x/s,this.y=q.y/s,this.z=q.z/s),this},setAxisAngleFromRotationMatrix:function(e){var t,r,n,o,l=e.elements,h=l[0],f=l[4],c=l[8],d=l[1],v=l[5],_=l[9],m=l[2],y=l[6],x=l[10];if(Math.abs(f-d)<.01&&Math.abs(c-m)<.01&&Math.abs(_-y)<.01){if(Math.abs(f+d)<.1&&Math.abs(c+m)<.1&&Math.abs(_+y)<.1&&Math.abs(h+v+x-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var w=(h+1)/2,M=(v+1)/2,E=(x+1)/2,S=(f+d)/4,T=(c+m)/4,A=(_+y)/4;return w>M&&w>E?w<.01?(r=0,n=.707106781,o=.707106781):(n=S/(r=Math.sqrt(w)),o=T/r):M>E?M<.01?(r=.707106781,n=0,o=.707106781):(r=S/(n=Math.sqrt(M)),o=A/n):E<.01?(r=.707106781,n=.707106781,o=0):(r=T/(o=Math.sqrt(E)),n=A/o),this.set(r,n,o,t),this}var s=Math.sqrt((y-_)*(y-_)+(c-m)*(c-m)+(d-f)*(d-f));return Math.abs(s)<.001&&(s=1),this.x=(y-_)/s,this.y=(c-m)/s,this.z=(d-f)/s,this.w=Math.acos((h+v+x-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this},clampLength:function(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}),na.prototype=Object.assign(Object.create(Zr.prototype),{constructor:na,isWebGLRenderTarget:!0,setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(source){return this.width=source.width,this.height=source.height,this.viewport.copy(source.viewport),this.texture=source.texture.clone(),this.depthBuffer=source.depthBuffer,this.stencilBuffer=source.stencilBuffer,this.depthTexture=source.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),oa.prototype=Object.assign(Object.create(na.prototype),{constructor:oa,isWebGLMultisampleRenderTarget:!0,copy:function(source){return na.prototype.copy.call(this,source),this.samples=source.samples,this}}),Object.assign(sa,{slerp:function(e,t,r,n){return r.copy(e).slerp(t,n)},slerpFlat:function(e,t,r,n,o,l,h){var f=r[n+0],c=r[n+1],d=r[n+2],v=r[n+3],_=o[l+0],m=o[l+1],y=o[l+2],x=o[l+3];if(v!==x||f!==_||c!==m||d!==y){var s=1-h,w=f*_+c*m+d*y+v*x,M=w>=0?1:-1,E=1-w*w;if(E>Number.EPSILON){var S=Math.sqrt(E),T=Math.atan2(S,w*M);s=Math.sin(s*T)/S,h=Math.sin(h*T)/S}var A=h*M;if(f=f*s+_*A,c=c*s+m*A,d=d*s+y*A,v=v*s+x*A,s===1-h){var R=1/Math.sqrt(f*f+c*c+d*d+v*v);f*=R,c*=R,d*=R,v*=R}}e[t]=f,e[t+1]=c,e[t+2]=d,e[t+3]=v},multiplyQuaternionsFlat:function(e,t,r,n,o,l){var h=r[n],f=r[n+1],c=r[n+2],d=r[n+3],v=o[l],_=o[l+1],m=o[l+2],y=o[l+3];return e[t]=h*y+d*v+f*m-c*_,e[t+1]=f*y+d*_+c*v-h*m,e[t+2]=c*y+d*m+h*_-f*v,e[t+3]=d*y-h*v-f*_-c*m,e}}),Object.defineProperties(sa.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}}}),Object.assign(sa.prototype,{isQuaternion:!0,set:function(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._w=n,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this},setFromEuler:function(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var r=e._x,n=e._y,o=e._z,l=e.order,h=Math.cos,f=Math.sin,c=h(r/2),d=h(n/2),v=h(o/2),_=f(r/2),m=f(n/2),y=f(o/2);switch(l){case"XYZ":this._x=_*d*v+c*m*y,this._y=c*m*v-_*d*y,this._z=c*d*y+_*m*v,this._w=c*d*v-_*m*y;break;case"YXZ":this._x=_*d*v+c*m*y,this._y=c*m*v-_*d*y,this._z=c*d*y-_*m*v,this._w=c*d*v+_*m*y;break;case"ZXY":this._x=_*d*v-c*m*y,this._y=c*m*v+_*d*y,this._z=c*d*y+_*m*v,this._w=c*d*v-_*m*y;break;case"ZYX":this._x=_*d*v-c*m*y,this._y=c*m*v+_*d*y,this._z=c*d*y-_*m*v,this._w=c*d*v+_*m*y;break;case"YZX":this._x=_*d*v+c*m*y,this._y=c*m*v+_*d*y,this._z=c*d*y-_*m*v,this._w=c*d*v-_*m*y;break;case"XZY":this._x=_*d*v-c*m*y,this._y=c*m*v-_*d*y,this._z=c*d*y+_*m*v,this._w=c*d*v+_*m*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return!1!==t&&this._onChangeCallback(),this},setFromAxisAngle:function(e,t){var r=t/2,s=Math.sin(r);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(r),this._onChangeCallback(),this},setFromRotationMatrix:function(e){var s,t=e.elements,r=t[0],n=t[4],o=t[8],l=t[1],h=t[5],f=t[9],c=t[2],d=t[6],v=t[10],_=r+h+v;return _>0?(s=.5/Math.sqrt(_+1),this._w=.25/s,this._x=(d-f)*s,this._y=(o-c)*s,this._z=(l-n)*s):r>h&&r>v?(s=2*Math.sqrt(1+r-h-v),this._w=(d-f)/s,this._x=.25*s,this._y=(n+l)/s,this._z=(o+c)/s):h>v?(s=2*Math.sqrt(1+h-r-v),this._w=(o-c)/s,this._x=(n+l)/s,this._y=.25*s,this._z=(f+d)/s):(s=2*Math.sqrt(1+v-r-h),this._w=(l-n)/s,this._x=(o+c)/s,this._y=(f+d)/s,this._z=.25*s),this._onChangeCallback(),this},setFromUnitVectors:function(e,t){var r=e.dot(t)+1;return r<1e-6?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize()},angleTo:function(q){return 2*Math.acos(Math.abs(Qr.clamp(this.dot(q),-1,1)))},rotateTowards:function(q,e){var t=this.angleTo(q);if(0===t)return this;var r=Math.min(1,e/t);return this.slerp(q,r),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this},multiply:function(q,p){return void 0!==p?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(q,p)):this.multiplyQuaternions(this,q)},premultiply:function(q){return this.multiplyQuaternions(q,this)},multiplyQuaternions:function(a,b){var e=a._x,t=a._y,r=a._z,n=a._w,o=b._x,l=b._y,h=b._z,f=b._w;return this._x=e*f+n*o+t*h-r*l,this._y=t*f+n*l+r*o-e*h,this._z=r*f+n*h+e*l-t*o,this._w=n*f-e*o-t*l-r*h,this._onChangeCallback(),this},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var r=this._x,n=this._y,o=this._z,l=this._w,h=l*e._w+r*e._x+n*e._y+o*e._z;if(h<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,h=-h):this.copy(e),h>=1)return this._w=l,this._x=r,this._y=n,this._z=o,this;var f=1-h*h;if(f<=Number.EPSILON){var s=1-t;return this._w=s*l+t*this._w,this._x=s*r+t*this._x,this._y=s*n+t*this._y,this._z=s*o+t*this._z,this.normalize(),this._onChangeCallback(),this}var c=Math.sqrt(f),d=Math.atan2(c,h),v=Math.sin((1-t)*d)/c,_=Math.sin(t*d)/c;return this._w=l*v+this._w*_,this._x=r*v+this._x*_,this._y=n*v+this._y*_,this._z=o*v+this._z*_,this._onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},fromBufferAttribute:function(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}});var la=new ua,ha=new sa;function ua(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0}Object.assign(ua.prototype,{isVector3:!0,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(s){return this.x+=s,this.y+=s,this.z+=s,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this},addScaledVector:function(e,s){return this.x+=e.x*s,this.y+=e.y*s,this.z+=e.z*s,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(s){return this.x-=s,this.y-=s,this.z-=s,this},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this},applyEuler:function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ha.setFromEuler(e))},applyAxisAngle:function(e,t){return this.applyQuaternion(ha.setFromAxisAngle(e,t))},applyMatrix3:function(e){var t=this.x,r=this.y,n=this.z,o=e.elements;return this.x=o[0]*t+o[3]*r+o[6]*n,this.y=o[1]*t+o[4]*r+o[7]*n,this.z=o[2]*t+o[5]*r+o[8]*n,this},applyNormalMatrix:function(e){return this.applyMatrix3(e).normalize()},applyMatrix4:function(e){var t=this.x,r=this.y,n=this.z,o=e.elements,l=1/(o[3]*t+o[7]*r+o[11]*n+o[15]);return this.x=(o[0]*t+o[4]*r+o[8]*n+o[12])*l,this.y=(o[1]*t+o[5]*r+o[9]*n+o[13])*l,this.z=(o[2]*t+o[6]*r+o[10]*n+o[14])*l,this},applyQuaternion:function(q){var e=this.x,t=this.y,r=this.z,n=q.x,o=q.y,l=q.z,h=q.w,f=h*e+o*r-l*t,c=h*t+l*e-n*r,d=h*r+n*t-o*e,v=-n*e-o*t-l*r;return this.x=f*h+v*-n+c*-l-d*-o,this.y=c*h+v*-o+d*-n-f*-l,this.z=d*h+v*-l+f*-o-c*-n,this},project:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)},unproject:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)},transformDirection:function(e){var t=this.x,r=this.y,n=this.z,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*n,this.y=o[1]*t+o[5]*r+o[9]*n,this.z=o[2]*t+o[6]*r+o[10]*n,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this},clampLength:function(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this},cross:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)},crossVectors:function(a,b){var e=a.x,t=a.y,r=a.z,n=b.x,o=b.y,l=b.z;return this.x=t*l-r*o,this.y=r*n-e*l,this.z=e*o-t*n,this},projectOnVector:function(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);var r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)},projectOnPlane:function(e){return la.copy(this).projectOnVector(e),this.sub(la)},reflect:function(e){return this.sub(la.copy(e).multiplyScalar(2*this.dot(e)))},angleTo:function(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;var r=this.dot(e)/t;return Math.acos(Qr.clamp(r,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,n=this.z-e.z;return t*t+r*r+n*n},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta)},setFromSphericalCoords:function(e,t,r){var n=Math.sin(t)*e;return this.x=n*Math.sin(r),this.y=Math.cos(t)*e,this.z=n*Math.cos(r),this},setFromCylindrical:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)},setFromCylindricalCoords:function(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this},setFromMatrixPosition:function(e){var t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=n,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},setFromMatrix3Column:function(e,t){return this.fromArray(e.elements,3*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}});var fa=new ua,ca=new ma,da=new ua(0,0,0),va=new ua(1,1,1),pa=new ua,_a=new ua,ga=new ua;function ma(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(ma.prototype,{isMatrix4:!0,set:function(e,t,r,n,o,l,h,f,c,d,v,_,m,y,x,w){var M=this.elements;return M[0]=e,M[4]=t,M[8]=r,M[12]=n,M[1]=o,M[5]=l,M[9]=h,M[13]=f,M[2]=c,M[6]=d,M[10]=v,M[14]=_,M[3]=m,M[7]=y,M[11]=x,M[15]=w,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new ma).fromArray(this.elements)},copy:function(e){var t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this},copyPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractBasis:function(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},extractRotation:function(e){var t=this.elements,r=e.elements,n=1/fa.setFromMatrixColumn(e,0).length(),o=1/fa.setFromMatrixColumn(e,1).length(),l=1/fa.setFromMatrixColumn(e,2).length();return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=0,t[4]=r[4]*o,t[5]=r[5]*o,t[6]=r[6]*o,t[7]=0,t[8]=r[8]*l,t[9]=r[9]*l,t[10]=r[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromEuler:function(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,r=e.x,n=e.y,o=e.z,a=Math.cos(r),b=Math.sin(r),l=Math.cos(n),h=Math.sin(n),f=Math.cos(o),c=Math.sin(o);if("XYZ"===e.order){var d=a*f,v=a*c,_=b*f,m=b*c;t[0]=l*f,t[4]=-l*c,t[8]=h,t[1]=v+_*h,t[5]=d-m*h,t[9]=-b*l,t[2]=m-d*h,t[6]=_+v*h,t[10]=a*l}else if("YXZ"===e.order){var y=l*f,x=l*c,w=h*f,M=h*c;t[0]=y+M*b,t[4]=w*b-x,t[8]=a*h,t[1]=a*c,t[5]=a*f,t[9]=-b,t[2]=x*b-w,t[6]=M+y*b,t[10]=a*l}else if("ZXY"===e.order){y=l*f,x=l*c,w=h*f,M=h*c;t[0]=y-M*b,t[4]=-a*c,t[8]=w+x*b,t[1]=x+w*b,t[5]=a*f,t[9]=M-y*b,t[2]=-a*h,t[6]=b,t[10]=a*l}else if("ZYX"===e.order){d=a*f,v=a*c,_=b*f,m=b*c;t[0]=l*f,t[4]=_*h-v,t[8]=d*h+m,t[1]=l*c,t[5]=m*h+d,t[9]=v*h-_,t[2]=-h,t[6]=b*l,t[10]=a*l}else if("YZX"===e.order){var E=a*l,S=a*h,T=b*l,A=b*h;t[0]=l*f,t[4]=A-E*c,t[8]=T*c+S,t[1]=c,t[5]=a*f,t[9]=-b*f,t[2]=-h*f,t[6]=S*c+T,t[10]=E-A*c}else if("XZY"===e.order){E=a*l,S=a*h,T=b*l,A=b*h;t[0]=l*f,t[4]=-c,t[8]=h*f,t[1]=E*c+A,t[5]=a*f,t[9]=S*c-T,t[2]=T*c-S,t[6]=b*f,t[10]=A*c+E}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(q){return this.compose(da,q,va)},lookAt:function(e,t,r){var n=this.elements;return ga.subVectors(e,t),0===ga.lengthSq()&&(ga.z=1),ga.normalize(),pa.crossVectors(r,ga),0===pa.lengthSq()&&(1===Math.abs(r.z)?ga.x+=1e-4:ga.z+=1e-4,ga.normalize(),pa.crossVectors(r,ga)),pa.normalize(),_a.crossVectors(ga,pa),n[0]=pa.x,n[4]=_a.x,n[8]=ga.x,n[1]=pa.y,n[5]=_a.y,n[9]=ga.y,n[2]=pa.z,n[6]=_a.z,n[10]=ga.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(a,b){var e=a.elements,t=b.elements,r=this.elements,n=e[0],o=e[4],l=e[8],h=e[12],f=e[1],c=e[5],d=e[9],v=e[13],_=e[2],m=e[6],y=e[10],x=e[14],w=e[3],M=e[7],E=e[11],S=e[15],T=t[0],A=t[4],R=t[8],C=t[12],L=t[1],P=t[5],O=t[9],k=t[13],I=t[2],N=t[6],D=t[10],B=t[14],F=t[3],U=t[7],j=t[11],V=t[15];return r[0]=n*T+o*L+l*I+h*F,r[4]=n*A+o*P+l*N+h*U,r[8]=n*R+o*O+l*D+h*j,r[12]=n*C+o*k+l*B+h*V,r[1]=f*T+c*L+d*I+v*F,r[5]=f*A+c*P+d*N+v*U,r[9]=f*R+c*O+d*D+v*j,r[13]=f*C+c*k+d*B+v*V,r[2]=_*T+m*L+y*I+x*F,r[6]=_*A+m*P+y*N+x*U,r[10]=_*R+m*O+y*D+x*j,r[14]=_*C+m*k+y*B+x*V,r[3]=w*T+M*L+E*I+S*F,r[7]=w*A+M*P+E*N+S*U,r[11]=w*R+M*O+E*D+S*j,r[15]=w*C+M*k+E*B+S*V,this},multiplyScalar:function(s){var e=this.elements;return e[0]*=s,e[4]*=s,e[8]*=s,e[12]*=s,e[1]*=s,e[5]*=s,e[9]*=s,e[13]*=s,e[2]*=s,e[6]*=s,e[10]*=s,e[14]*=s,e[3]*=s,e[7]*=s,e[11]*=s,e[15]*=s,this},determinant:function(){var e=this.elements,t=e[0],r=e[4],n=e[8],o=e[12],l=e[1],h=e[5],f=e[9],c=e[13],d=e[2],v=e[6],_=e[10],m=e[14];return e[3]*(+o*f*v-n*c*v-o*h*_+r*c*_+n*h*m-r*f*m)+e[7]*(+t*f*m-t*c*_+o*l*_-n*l*m+n*c*d-o*f*d)+e[11]*(+t*c*v-t*h*m-o*l*v+r*l*m+o*h*d-r*c*d)+e[15]*(-n*h*d-t*f*v+t*h*_+n*l*v-r*l*_+r*f*d)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(e,t,r){var n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=r),this},getInverse:function(e,t){void 0!==t&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");var r=this.elements,n=e.elements,o=n[0],l=n[1],h=n[2],f=n[3],c=n[4],d=n[5],v=n[6],_=n[7],m=n[8],y=n[9],x=n[10],w=n[11],M=n[12],E=n[13],S=n[14],T=n[15],A=y*S*_-E*x*_+E*v*w-d*S*w-y*v*T+d*x*T,R=M*x*_-m*S*_-M*v*w+c*S*w+m*v*T-c*x*T,C=m*E*_-M*y*_+M*d*w-c*E*w-m*d*T+c*y*T,L=M*y*v-m*E*v-M*d*x+c*E*x+m*d*S-c*y*S,P=o*A+l*R+h*C+f*L;if(0===P)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var O=1/P;return r[0]=A*O,r[1]=(E*x*f-y*S*f-E*h*w+l*S*w+y*h*T-l*x*T)*O,r[2]=(d*S*f-E*v*f+E*h*_-l*S*_-d*h*T+l*v*T)*O,r[3]=(y*v*f-d*x*f-y*h*_+l*x*_+d*h*w-l*v*w)*O,r[4]=R*O,r[5]=(m*S*f-M*x*f+M*h*w-o*S*w-m*h*T+o*x*T)*O,r[6]=(M*v*f-c*S*f-M*h*_+o*S*_+c*h*T-o*v*T)*O,r[7]=(c*x*f-m*v*f+m*h*_-o*x*_-c*h*w+o*v*w)*O,r[8]=C*O,r[9]=(M*y*f-m*E*f-M*l*w+o*E*w+m*l*T-o*y*T)*O,r[10]=(c*E*f-M*d*f+M*l*_-o*E*_-c*l*T+o*d*T)*O,r[11]=(m*d*f-c*y*f-m*l*_+o*y*_+c*l*w-o*d*w)*O,r[12]=L*O,r[13]=(m*E*h-M*y*h+M*l*x-o*E*x-m*l*S+o*y*S)*O,r[14]=(M*d*h-c*E*h-M*l*v+o*E*v+c*l*S-o*d*S)*O,r[15]=(c*y*h-m*d*h+m*l*v-o*y*v-c*l*x+o*d*x)*O,this},scale:function(e){var t=this.elements,r=e.x,n=e.y,o=e.z;return t[0]*=r,t[4]*=n,t[8]*=o,t[1]*=r,t[5]*=n,t[9]*=o,t[2]*=r,t[6]*=n,t[10]*=o,t[3]*=r,t[7]*=n,t[11]*=o,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,n))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),s=Math.sin(e);return this.set(1,0,0,0,0,t,-s,0,0,s,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),s=Math.sin(e);return this.set(t,0,s,0,0,1,0,0,-s,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),s=Math.sin(e);return this.set(t,-s,0,0,s,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),s=Math.sin(t),n=1-r,o=e.x,l=e.y,h=e.z,f=n*o,c=n*l;return this.set(f*o+r,f*l-s*h,f*h+s*l,0,f*l+s*h,c*l+r,c*h-s*o,0,f*h-s*l,c*h+s*o,n*h*h+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},makeShear:function(e,t,r){return this.set(1,t,r,0,e,1,r,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,r){var n=this.elements,o=t._x,l=t._y,h=t._z,f=t._w,c=o+o,d=l+l,v=h+h,_=o*c,m=o*d,y=o*v,x=l*d,w=l*v,M=h*v,E=f*c,S=f*d,T=f*v,A=r.x,R=r.y,C=r.z;return n[0]=(1-(x+M))*A,n[1]=(m+T)*A,n[2]=(y-S)*A,n[3]=0,n[4]=(m-T)*R,n[5]=(1-(_+M))*R,n[6]=(w+E)*R,n[7]=0,n[8]=(y+S)*C,n[9]=(w-E)*C,n[10]=(1-(_+x))*C,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this},decompose:function(e,t,r){var n=this.elements,o=fa.set(n[0],n[1],n[2]).length(),l=fa.set(n[4],n[5],n[6]).length(),h=fa.set(n[8],n[9],n[10]).length();this.determinant()<0&&(o=-o),e.x=n[12],e.y=n[13],e.z=n[14],ca.copy(this);var f=1/o,c=1/l,d=1/h;return ca.elements[0]*=f,ca.elements[1]*=f,ca.elements[2]*=f,ca.elements[4]*=c,ca.elements[5]*=c,ca.elements[6]*=c,ca.elements[8]*=d,ca.elements[9]*=d,ca.elements[10]*=d,t.setFromRotationMatrix(ca),r.x=o,r.y=l,r.z=h,this},makePerspective:function(e,t,r,n,o,l){void 0===l&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var h=this.elements,f=2*o/(t-e),c=2*o/(r-n),a=(t+e)/(t-e),b=(r+n)/(r-n),d=-(l+o)/(l-o),v=-2*l*o/(l-o);return h[0]=f,h[4]=0,h[8]=a,h[12]=0,h[1]=0,h[5]=c,h[9]=b,h[13]=0,h[2]=0,h[6]=0,h[10]=d,h[14]=v,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this},makeOrthographic:function(e,t,r,n,o,l){var h=this.elements,f=1/(t-e),c=1/(r-n),p=1/(l-o),d=(t+e)*f,v=(r+n)*c,_=(l+o)*p;return h[0]=2*f,h[4]=0,h[8]=0,h[12]=-d,h[1]=0,h[5]=2*c,h[9]=0,h[13]=-v,h[2]=0,h[6]=0,h[10]=-2*p,h[14]=-_,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this},equals:function(e){for(var t=this.elements,r=e.elements,i=0;i<16;i++)if(t[i]!==r[i])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(var i=0;i<16;i++)this.elements[i]=e[i+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}});var ya=new ma,ba=new sa;function xa(e,t,r,n){this._x=e||0,this._y=t||0,this._z=r||0,this._order=n||xa.DefaultOrder}function wa(){this.mask=1}xa.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],xa.DefaultOrder="XYZ",Object.defineProperties(xa.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}}}),Object.assign(xa.prototype,{isEuler:!0,set:function(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._order=n||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this},setFromRotationMatrix:function(e,t,r){var n=Qr.clamp,o=e.elements,l=o[0],h=o[4],f=o[8],c=o[1],d=o[5],v=o[9],_=o[2],m=o[6],y=o[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(n(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(-v,y),this._z=Math.atan2(-h,l)):(this._x=Math.atan2(m,d),this._z=0);break;case"YXZ":this._x=Math.asin(-n(v,-1,1)),Math.abs(v)<.9999999?(this._y=Math.atan2(f,y),this._z=Math.atan2(c,d)):(this._y=Math.atan2(-_,l),this._z=0);break;case"ZXY":this._x=Math.asin(n(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-_,y),this._z=Math.atan2(-h,d)):(this._y=0,this._z=Math.atan2(c,l));break;case"ZYX":this._y=Math.asin(-n(_,-1,1)),Math.abs(_)<.9999999?(this._x=Math.atan2(m,y),this._z=Math.atan2(c,l)):(this._x=0,this._z=Math.atan2(-h,d));break;case"YZX":this._z=Math.asin(n(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-v,d),this._y=Math.atan2(-_,l)):(this._x=0,this._y=Math.atan2(f,y));break;case"XZY":this._z=Math.asin(-n(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(m,d),this._y=Math.atan2(f,l)):(this._x=Math.atan2(-v,y),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==r&&this._onChangeCallback(),this},setFromQuaternion:function(q,e,t){return ya.makeRotationFromQuaternion(q),this.setFromRotationMatrix(ya,e,t)},setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(e){return ba.setFromEuler(this),this.setFromQuaternion(ba,e)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new ua(this._x,this._y,this._z)},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}}),Object.assign(wa.prototype,{set:function(e){this.mask=1<<e|0},enable:function(e){this.mask|=1<<e|0},enableAll:function(){this.mask=-1},toggle:function(e){this.mask^=1<<e|0},disable:function(e){this.mask&=~(1<<e|0)},disableAll:function(){this.mask=0},test:function(e){return 0!=(this.mask&e.mask)}});let Ma=0;const Ea=new ua,Sa=new sa,Ta=new ma,Aa=new ua,Ra=new ua,Ca=new ua,La=new sa,Pa=new ua(1,0,0),Oa=new ua(0,1,0),ka=new ua(0,0,1),Ia={type:"added"},Na={type:"removed"};function Da(){Object.defineProperty(this,"id",{value:Ma++}),this.uuid=Qr.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Da.DefaultUp.clone();var e=new ua,t=new xa,r=new sa,n=new ua(1,1,1);t._onChange((function(){r.setFromEuler(t,!1)})),r._onChange((function(){t.setFromQuaternion(r,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new ma},normalMatrix:{value:new ea}}),this.matrix=new ma,this.matrixWorld=new ma,this.matrixAutoUpdate=Da.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new wa,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function Ba(){Da.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Da.DefaultUp=new ua(0,1,0),Da.DefaultMatrixAutoUpdate=!0,Da.prototype=Object.assign(Object.create(Zr.prototype),{constructor:Da,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(q){return this.quaternion.premultiply(q),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(q){this.quaternion.copy(q)},rotateOnAxis:function(e,t){return Sa.setFromAxisAngle(e,t),this.quaternion.multiply(Sa),this},rotateOnWorldAxis:function(e,t){return Sa.setFromAxisAngle(e,t),this.quaternion.premultiply(Sa),this},rotateX:function(e){return this.rotateOnAxis(Pa,e)},rotateY:function(e){return this.rotateOnAxis(Oa,e)},rotateZ:function(e){return this.rotateOnAxis(ka,e)},translateOnAxis:function(e,t){return Ea.copy(e).applyQuaternion(this.quaternion),this.position.add(Ea.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(Pa,e)},translateY:function(e){return this.translateOnAxis(Oa,e)},translateZ:function(e){return this.translateOnAxis(ka,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(Ta.getInverse(this.matrixWorld))},lookAt:function(e,t,r){e.isVector3?Aa.copy(e):Aa.set(e,t,r);var n=this.parent;this.updateWorldMatrix(!0,!1),Ra.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ta.lookAt(Ra,Aa,this.up):Ta.lookAt(Aa,Ra,this.up),this.quaternion.setFromRotationMatrix(Ta),n&&(Ta.extractRotation(n.matrixWorld),Sa.setFromRotationMatrix(Ta),this.quaternion.premultiply(Sa.inverse()))},add:function(object){if(arguments.length>1){for(var i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return object===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",object),this):(object&&object.isObject3D?(null!==object.parent&&object.parent.remove(object),object.parent=this,this.children.push(object),object.dispatchEvent(Ia)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",object),this)},remove:function(object){if(arguments.length>1){for(var i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}var e=this.children.indexOf(object);return-1!==e&&(object.parent=null,this.children.splice(e,1),object.dispatchEvent(Na)),this},attach:function(object){return this.updateWorldMatrix(!0,!1),Ta.getInverse(this.matrixWorld),null!==object.parent&&(object.parent.updateWorldMatrix(!0,!1),Ta.multiply(object.parent.matrixWorld)),object.applyMatrix4(Ta),object.updateWorldMatrix(!1,!1),this.add(object),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var i=0,r=this.children.length;i<r;i++){var object=this.children[i].getObjectByProperty(e,t);if(void 0!==object)return object}},getWorldPosition:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new ua),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new sa),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Ra,e,Ca),e},getWorldScale:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new ua),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Ra,La,e),e},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new ua),this.updateMatrixWorld(!0);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);for(var t=this.children,i=0,r=t.length;i<r;i++)t[i].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=this.children,i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,i=0,r=t.length;i<r;i++)t[i].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){var r=this.parent;if(!0===e&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t)for(var n=this.children,i=0,o=n.length;i<o;i++)n[i].updateWorldMatrix(!1,!0)},toJSON:function(meta){var e=void 0===meta||"string"==typeof meta,output={};e&&(meta={geometries:{},materials:{},textures:{},images:{},shapes:{}},output.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var object={};function t(e,element){return void 0===e[element.uuid]&&(e[element.uuid]=element.toJSON(meta)),element.uuid}if(object.uuid=this.uuid,object.type=this.type,""!==this.name&&(object.name=this.name),!0===this.castShadow&&(object.castShadow=!0),!0===this.receiveShadow&&(object.receiveShadow=!0),!1===this.visible&&(object.visible=!1),!1===this.frustumCulled&&(object.frustumCulled=!1),0!==this.renderOrder&&(object.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(object.userData=this.userData),object.layers=this.layers.mask,object.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(object.matrixAutoUpdate=!1),this.isInstancedMesh&&(object.type="InstancedMesh",object.count=this.count,object.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){object.geometry=t(meta.geometries,this.geometry);var r=this.geometry.parameters;if(void 0!==r&&void 0!==r.shapes){var n=r.shapes;if(Array.isArray(n))for(var i=0,o=n.length;i<o;i++){var l=n[i];t(meta.shapes,l)}else t(meta.shapes,n)}}if(void 0!==this.material)if(Array.isArray(this.material)){var h=[];for(i=0,o=this.material.length;i<o;i++)h.push(t(meta.materials,this.material[i]));object.material=h}else object.material=t(meta.materials,this.material);if(this.children.length>0){object.children=[];for(i=0;i<this.children.length;i++)object.children.push(this.children[i].toJSON(meta).object)}if(e){var f=_(meta.geometries),c=_(meta.materials),d=_(meta.textures),v=_(meta.images);n=_(meta.shapes);f.length>0&&(output.geometries=f),c.length>0&&(output.materials=c),d.length>0&&(output.textures=d),v.length>0&&(output.images=v),n.length>0&&(output.shapes=n)}return output.object=object,output;function _(e){var t=[];for(var r in e){var data=e[r];delete data.metadata,t.push(data)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(source,e){if(void 0===e&&(e=!0),this.name=source.name,this.up.copy(source.up),this.position.copy(source.position),this.quaternion.copy(source.quaternion),this.scale.copy(source.scale),this.matrix.copy(source.matrix),this.matrixWorld.copy(source.matrixWorld),this.matrixAutoUpdate=source.matrixAutoUpdate,this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate,this.layers.mask=source.layers.mask,this.visible=source.visible,this.castShadow=source.castShadow,this.receiveShadow=source.receiveShadow,this.frustumCulled=source.frustumCulled,this.renderOrder=source.renderOrder,this.userData=JSON.parse(JSON.stringify(source.userData)),!0===e)for(var i=0;i<source.children.length;i++){var t=source.children[i];this.add(t.clone())}return this}}),Ba.prototype=Object.assign(Object.create(Da.prototype),{constructor:Ba,isScene:!0,copy:function(source,e){return Da.prototype.copy.call(this,source,e),null!==source.background&&(this.background=source.background.clone()),null!==source.environment&&(this.environment=source.environment.clone()),null!==source.fog&&(this.fog=source.fog.clone()),null!==source.overrideMaterial&&(this.overrideMaterial=source.overrideMaterial.clone()),this.autoUpdate=source.autoUpdate,this.matrixAutoUpdate=source.matrixAutoUpdate,this},toJSON:function(meta){var data=Da.prototype.toJSON.call(this,meta);return null!==this.background&&(data.object.background=this.background.toJSON(meta)),null!==this.environment&&(data.object.environment=this.environment.toJSON(meta)),null!==this.fog&&(data.object.fog=this.fog.toJSON()),data},dispose:function(){this.dispatchEvent({type:"dispose"})}});var Fa=[new ua,new ua,new ua,new ua,new ua,new ua,new ua,new ua],Ua=new ua,ja=new Ka,Va=new ua,za=new ua,Ga=new ua,Ha=new ua,Wa=new ua,qa=new ua,Xa=new ua,Ya=new ua,Za=new ua,Ja=new ua;function Ka(e,t){this.min=void 0!==e?e:new ua(1/0,1/0,1/0),this.max=void 0!==t?t:new ua(-1/0,-1/0,-1/0)}function Qa(e,t,r,n,o){var i,l;for(i=0,l=e.length-3;i<=l;i+=3){Ja.fromArray(e,i);var h=o.x*Math.abs(Ja.x)+o.y*Math.abs(Ja.y)+o.z*Math.abs(Ja.z),f=t.dot(Ja),c=r.dot(Ja),d=n.dot(Ja);if(Math.max(-Math.max(f,c,d),Math.min(f,c,d))>h)return!1}return!0}Object.assign(Ka.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){for(var t=1/0,r=1/0,n=1/0,o=-1/0,l=-1/0,h=-1/0,i=0,f=e.length;i<f;i+=3){var c=e[i],d=e[i+1],v=e[i+2];c<t&&(t=c),d<r&&(r=d),v<n&&(n=v),c>o&&(o=c),d>l&&(l=d),v>h&&(h=v)}return this.min.set(t,r,n),this.max.set(o,l,h),this},setFromBufferAttribute:function(e){for(var t=1/0,r=1/0,n=1/0,o=-1/0,l=-1/0,h=-1/0,i=0,f=e.count;i<f;i++){var c=e.getX(i),d=e.getY(i),v=e.getZ(i);c<t&&(t=c),d<r&&(r=d),v<n&&(n=v),c>o&&(o=c),d>l&&(l=d),v>h&&(h=v)}return this.min.set(t,r,n),this.max.set(o,l,h),this},setFromPoints:function(e){this.makeEmpty();for(var i=0,t=e.length;i<t;i++)this.expandByPoint(e[i]);return this},setFromCenterAndSize:function(e,t){var r=Ua.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},setFromObject:function(object){return this.makeEmpty(),this.expandByObject(object)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new ua),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new ua),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(object){object.updateWorldMatrix(!1,!1);var e=object.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),ja.copy(e.boundingBox),ja.applyMatrix4(object.matrixWorld),this.union(ja));for(var t=object.children,i=0,r=t.length;i<r;i++)this.expandByObject(t[i]);return this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new ua),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(e){return this.clampPoint(e.center,Ua),Ua.distanceToSquared(e.center)<=e.radius*e.radius},intersectsPlane:function(e){var t,r;return e.normal.x>0?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant},intersectsTriangle:function(e){if(this.isEmpty())return!1;this.getCenter(Xa),Ya.subVectors(this.max,Xa),Va.subVectors(e.a,Xa),za.subVectors(e.b,Xa),Ga.subVectors(e.c,Xa),Ha.subVectors(za,Va),Wa.subVectors(Ga,za),qa.subVectors(Va,Ga);var t=[0,-Ha.z,Ha.y,0,-Wa.z,Wa.y,0,-qa.z,qa.y,Ha.z,0,-Ha.x,Wa.z,0,-Wa.x,qa.z,0,-qa.x,-Ha.y,Ha.x,0,-Wa.y,Wa.x,0,-qa.y,qa.x,0];return!!Qa(t,Va,za,Ga,Ya)&&(!!Qa(t=[1,0,0,0,1,0,0,0,1],Va,za,Ga,Ya)&&(Za.crossVectors(Ha,Wa),Qa(t=[Za.x,Za.y,Za.z],Va,za,Ga,Ya)))},clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new ua),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return Ua.copy(e).clamp(this.min,this.max).sub(e).length()},getBoundingSphere:function(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(Ua).length(),e},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(e){return this.isEmpty()||(Fa[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Fa[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Fa[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Fa[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Fa[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Fa[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Fa[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Fa[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Fa)),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});var $a=new Ka;function ei(e,t){this.center=void 0!==e?e:new ua,this.radius=void 0!==t?t:-1}Object.assign(ei.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(e,t){var r=this.center;void 0!==t?r.copy(t):$a.setFromPoints(e).getCenter(r);for(var n=0,i=0,o=e.length;i<o;i++)n=Math.max(n,r.distanceToSquared(e[i]));return this.radius=Math.sqrt(n),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},isEmpty:function(){return this.radius<0},makeEmpty:function(){return this.center.set(0,0,0),this.radius=-1,this},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius},clampPoint:function(e,t){var r=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new ua),t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t},getBoundingBox:function(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new Ka),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}});var ti=new ua,ri=new ua,ai=new ua,ii=new ua,ni=new ua,oi=new ua,si=new ua;function hi(e,t){this.origin=void 0!==e?e:new ua,this.direction=void 0!==t?t:new ua(0,0,-1)}Object.assign(hi.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new ua),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(e){return this.origin.copy(this.at(e,ti)),this},closestPointToPoint:function(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new ua),t.subVectors(e,this.origin);var r=t.dot(this.direction);return r<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(e){var t=ti.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ti.copy(this.direction).multiplyScalar(t).add(this.origin),ti.distanceToSquared(e))},distanceSqToSegment:function(e,t,r,n){ri.copy(e).add(t).multiplyScalar(.5),ai.copy(t).sub(e).normalize(),ii.copy(this.origin).sub(ri);var o,l,h,f,c=.5*e.distanceTo(t),d=-this.direction.dot(ai),v=ii.dot(this.direction),_=-ii.dot(ai),m=ii.lengthSq(),y=Math.abs(1-d*d);if(y>0)if(l=d*v-_,f=c*y,(o=d*_-v)>=0)if(l>=-f)if(l<=f){var x=1/y;h=(o*=x)*(o+d*(l*=x)+2*v)+l*(d*o+l+2*_)+m}else l=c,h=-(o=Math.max(0,-(d*l+v)))*o+l*(l+2*_)+m;else l=-c,h=-(o=Math.max(0,-(d*l+v)))*o+l*(l+2*_)+m;else l<=-f?h=-(o=Math.max(0,-(-d*c+v)))*o+(l=o>0?-c:Math.min(Math.max(-c,-_),c))*(l+2*_)+m:l<=f?(o=0,h=(l=Math.min(Math.max(-c,-_),c))*(l+2*_)+m):h=-(o=Math.max(0,-(d*c+v)))*o+(l=o>0?c:Math.min(Math.max(-c,-_),c))*(l+2*_)+m;else l=d>0?-c:c,h=-(o=Math.max(0,-(d*l+v)))*o+l*(l+2*_)+m;return r&&r.copy(this.direction).multiplyScalar(o).add(this.origin),n&&n.copy(ai).multiplyScalar(l).add(ri),h},intersectSphere:function(e,t){ti.subVectors(e.center,this.origin);var r=ti.dot(this.direction),n=ti.dot(ti)-r*r,o=e.radius*e.radius;if(n>o)return null;var l=Math.sqrt(o-n),h=r-l,f=r+l;return h<0&&f<0?null:h<0?this.at(f,t):this.at(h,t)},intersectsSphere:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0},intersectBox:function(e,t){var r,n,o,l,h,f,c=1/this.direction.x,d=1/this.direction.y,v=1/this.direction.z,_=this.origin;return c>=0?(r=(e.min.x-_.x)*c,n=(e.max.x-_.x)*c):(r=(e.max.x-_.x)*c,n=(e.min.x-_.x)*c),d>=0?(o=(e.min.y-_.y)*d,l=(e.max.y-_.y)*d):(o=(e.max.y-_.y)*d,l=(e.min.y-_.y)*d),r>l||o>n?null:((o>r||r!=r)&&(r=o),(l<n||n!=n)&&(n=l),v>=0?(h=(e.min.z-_.z)*v,f=(e.max.z-_.z)*v):(h=(e.max.z-_.z)*v,f=(e.min.z-_.z)*v),r>f||h>n?null:((h>r||r!=r)&&(r=h),(f<n||n!=n)&&(n=f),n<0?null:this.at(r>=0?r:n,t)))},intersectsBox:function(e){return null!==this.intersectBox(e,ti)},intersectTriangle:function(a,b,e,t,r){ni.subVectors(b,a),oi.subVectors(e,a),si.crossVectors(ni,oi);var n,o=this.direction.dot(si);if(o>0){if(t)return null;n=1}else{if(!(o<0))return null;n=-1,o=-o}ii.subVectors(this.origin,a);var l=n*this.direction.dot(oi.crossVectors(ii,oi));if(l<0)return null;var h=n*this.direction.dot(ni.cross(ii));if(h<0)return null;if(l+h>o)return null;var f=-n*ii.dot(si);return f<0?null:this.at(f/o,r)},applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}});var ui=new ua,fi=new ua,ci=new ea;function di(e,t){this.normal=void 0!==e?e:new ua(1,0,0),this.constant=void 0!==t?t:0}Object.assign(di.prototype,{isPlane:!0,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,n){return this.normal.set(e,t,r),this.constant=n,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(a,b,e){var t=ui.subVectors(e,b).cross(fi.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(t,a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new ua),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)},intersectLine:function(line,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new ua);var t=line.delta(ui),r=this.normal.dot(t);if(0===r)return 0===this.distanceToPoint(line.start)?e.copy(line.start):void 0;var n=-(line.start.dot(this.normal)+this.constant)/r;return n<0||n>1?void 0:e.copy(t).multiplyScalar(n).add(line.start)},intersectsLine:function(line){var e=this.distanceToPoint(line.start),t=this.distanceToPoint(line.end);return e<0&&t>0||t<0&&e>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new ua),e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(e,t){var r=t||ci.getNormalMatrix(e),n=this.coplanarPoint(ui).applyMatrix4(e),o=this.normal.applyMatrix3(r).normalize();return this.constant=-n.dot(o),this},translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}});var vi=new ua,pi=new ua,_i=new ua,gi=new ua,mi=new ua,yi=new ua,bi=new ua,xi=new ua,wi=new ua,Mi=new ua;function Ei(a,b,e){this.a=void 0!==a?a:new ua,this.b=void 0!==b?b:new ua,this.c=void 0!==e?e:new ua}Object.assign(Ei,{getNormal:function(a,b,e,t){void 0===t&&(console.warn("THREE.Triangle: .getNormal() target is now required"),t=new ua),t.subVectors(e,b),vi.subVectors(a,b),t.cross(vi);var r=t.lengthSq();return r>0?t.multiplyScalar(1/Math.sqrt(r)):t.set(0,0,0)},getBarycoord:function(e,a,b,t,r){vi.subVectors(t,a),pi.subVectors(b,a),_i.subVectors(e,a);var n=vi.dot(vi),o=vi.dot(pi),l=vi.dot(_i),h=pi.dot(pi),f=pi.dot(_i),c=n*h-o*o;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new ua),0===c)return r.set(-2,-1,-1);var d=1/c,u=(h*l-o*f)*d,v=(n*f-o*l)*d;return r.set(1-u-v,v,u)},containsPoint:function(e,a,b,t){return Ei.getBarycoord(e,a,b,t,gi),gi.x>=0&&gi.y>=0&&gi.x+gi.y<=1},getUV:function(e,t,r,n,o,l,h,f){return this.getBarycoord(e,t,r,n,gi),f.set(0,0),f.addScaledVector(o,gi.x),f.addScaledVector(l,gi.y),f.addScaledVector(h,gi.z),f},isFrontFacing:function(a,b,e,t){return vi.subVectors(e,b),pi.subVectors(a,b),vi.cross(pi).dot(t)<0}}),Object.assign(Ei.prototype,{set:function(a,b,e){return this.a.copy(a),this.b.copy(b),this.c.copy(e),this},setFromPointsAndIndices:function(e,t,r,n){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[n]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},getArea:function(){return vi.subVectors(this.c,this.b),pi.subVectors(this.a,this.b),.5*vi.cross(pi).length()},getMidpoint:function(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new ua),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(e){return Ei.getNormal(this.a,this.b,this.c,e)},getPlane:function(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new di),e.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(e,t){return Ei.getBarycoord(e,this.a,this.b,this.c,t)},getUV:function(e,t,r,n,o){return Ei.getUV(e,this.a,this.b,this.c,t,r,n,o)},containsPoint:function(e){return Ei.containsPoint(e,this.a,this.b,this.c)},isFrontFacing:function(e){return Ei.isFrontFacing(this.a,this.b,this.c,e)},intersectsBox:function(e){return e.intersectsTriangle(this)},closestPointToPoint:function(p,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new ua);var t,r,a=this.a,b=this.b,n=this.c;mi.subVectors(b,a),yi.subVectors(n,a),xi.subVectors(p,a);var o=mi.dot(xi),l=yi.dot(xi);if(o<=0&&l<=0)return e.copy(a);wi.subVectors(p,b);var h=mi.dot(wi),f=yi.dot(wi);if(h>=0&&f<=h)return e.copy(b);var c=o*f-h*l;if(c<=0&&o>=0&&h<=0)return t=o/(o-h),e.copy(a).addScaledVector(mi,t);Mi.subVectors(p,n);var d=mi.dot(Mi),v=yi.dot(Mi);if(v>=0&&d<=v)return e.copy(n);var _=d*l-o*v;if(_<=0&&l>=0&&v<=0)return r=l/(l-v),e.copy(a).addScaledVector(yi,r);var m=h*v-d*f;if(m<=0&&f-h>=0&&d-v>=0)return bi.subVectors(n,b),r=(f-h)/(f-h+(d-v)),e.copy(b).addScaledVector(bi,r);var y=1/(m+_+c);return t=_*y,r=c*y,e.copy(a).addScaledVector(mi,t).addScaledVector(yi,r)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}});var Si={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ti={h:0,s:0,l:0},Ai={h:0,s:0,l:0};function Ri(e,g,b){return void 0===g&&void 0===b?this.set(e):this.setRGB(e,g,b)}function Ci(p,q,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?p+6*(q-p)*e:e<.5?q:e<2/3?p+6*(q-p)*(2/3-e):p}function Li(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Pi(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}function Oi(a,b,e,t,r,n){this.a=a,this.b=b,this.c=e,this.normal=t&&t.isVector3?t:new ua,this.vertexNormals=Array.isArray(t)?t:[],this.color=r&&r.isColor?r:new Ri,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0!==n?n:0}Object.assign(Ri.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,g,b){return this.r=e,this.g=g,this.b=b,this},setHSL:function(e,s,t){if(e=Qr.euclideanModulo(e,1),s=Qr.clamp(s,0,1),t=Qr.clamp(t,0,1),0===s)this.r=this.g=this.b=t;else{var p=t<=.5?t*(1+s):t+s-t*s,q=2*t-p;this.r=Ci(q,p,e+1/3),this.g=Ci(q,p,e),this.b=Ci(q,p,e-1/3)}return this},setStyle:function(style){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+style+" will be ignored.")}var t;if(t=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(style)){var r,n=t[1],o=t[2];switch(n){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,e(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,e(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)){var l=parseFloat(r[1])/360,s=parseInt(r[2],10)/100,h=parseInt(r[3],10)/100;return e(r[5]),this.setHSL(l,s,h)}}}else if(t=/^\#([A-Fa-f0-9]+)$/.exec(style)){var f=t[1],c=f.length;if(3===c)return this.r=parseInt(f.charAt(0)+f.charAt(0),16)/255,this.g=parseInt(f.charAt(1)+f.charAt(1),16)/255,this.b=parseInt(f.charAt(2)+f.charAt(2),16)/255,this;if(6===c)return this.r=parseInt(f.charAt(0)+f.charAt(1),16)/255,this.g=parseInt(f.charAt(2)+f.charAt(3),16)/255,this.b=parseInt(f.charAt(4)+f.charAt(5),16)/255,this}return style&&style.length>0?this.setColorName(style):this},setColorName:function(style){var e=Si[style];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+style),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var r=t>0?1/t:1;return this.r=Math.pow(e.r,r),this.g=Math.pow(e.g,r),this.b=Math.pow(e.b,r),this},convertGammaToLinear:function(e){return this.copyGammaToLinear(this,e),this},convertLinearToGamma:function(e){return this.copyLinearToGamma(this,e),this},copySRGBToLinear:function(e){return this.r=Li(e.r),this.g=Li(e.g),this.b=Li(e.b),this},copyLinearToSRGB:function(e){return this.r=Pi(e.r),this.g=Pi(e.g),this.b=Pi(e.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});var t,r,n=this.r,g=this.g,b=this.b,o=Math.max(n,g,b),l=Math.min(n,g,b),h=(l+o)/2;if(l===o)t=0,r=0;else{var f=o-l;switch(r=h<=.5?f/(o+l):f/(2-o-l),o){case n:t=(g-b)/f+(g<b?6:0);break;case g:t=(b-n)/f+2;break;case b:t=(n-g)/f+4}t/=6}return e.h=t,e.s=r,e.l=h,e},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,s,t){return this.getHSL(Ti),Ti.h+=e,Ti.s+=s,Ti.l+=t,this.setHSL(Ti.h,Ti.s,Ti.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(s){return this.r+=s,this.g+=s,this.b+=s,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(s){return this.r*=s,this.g*=s,this.b*=s,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},lerpHSL:function(e,t){this.getHSL(Ti),e.getHSL(Ai);var r=Qr.lerp(Ti.h,Ai.h,t),s=Qr.lerp(Ti.s,Ai.s,t),n=Qr.lerp(Ti.l,Ai.l,t);return this.setHSL(r,s,n),this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}}),Ri.NAMES=Si,Object.assign(Oi.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(source){this.a=source.a,this.b=source.b,this.c=source.c,this.normal.copy(source.normal),this.color.copy(source.color),this.materialIndex=source.materialIndex;for(var i=0,e=source.vertexNormals.length;i<e;i++)this.vertexNormals[i]=source.vertexNormals[i].clone();for(i=0,e=source.vertexColors.length;i<e;i++)this.vertexColors[i]=source.vertexColors[i].clone();return this}});var ki=0;function Ii(){Object.defineProperty(this,"id",{value:ki++}),this.uuid=Qr.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=C,this.side=M,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=G,this.blendDst=H,this.blendEquation=I,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=ee,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Ur,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Sr,this.stencilZFail=Sr,this.stencilZPass=Sr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function Ni(e){Ii.call(this),this.type="MeshBasicMaterial",this.color=new Ri(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ne,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}Ii.prototype=Object.assign(Object.create(Zr.prototype),{constructor:Ii,isMaterial:!0,onBeforeCompile:function(){},setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0!==r)if("shading"!==t){var n=this[t];void 0!==n?n&&n.isColor?n.set(r):n&&n.isVector3&&r&&r.isVector3?n.copy(r):this[t]=r:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===T;else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},toJSON:function(meta){var e=void 0===meta||"string"==typeof meta;e&&(meta={textures:{},images:{}});var data={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function t(e){var t=[];for(var r in e){var data=e[r];delete data.metadata,t.push(data)}return t}if(data.uuid=this.uuid,data.type=this.type,""!==this.name&&(data.name=this.name),this.color&&this.color.isColor&&(data.color=this.color.getHex()),void 0!==this.roughness&&(data.roughness=this.roughness),void 0!==this.metalness&&(data.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(data.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(data.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(data.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(data.specular=this.specular.getHex()),void 0!==this.shininess&&(data.shininess=this.shininess),void 0!==this.clearcoat&&(data.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(data.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid,data.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(data.map=this.map.toJSON(meta).uuid),this.matcap&&this.matcap.isTexture&&(data.matcap=this.matcap.toJSON(meta).uuid),this.alphaMap&&this.alphaMap.isTexture&&(data.alphaMap=this.alphaMap.toJSON(meta).uuid),this.lightMap&&this.lightMap.isTexture&&(data.lightMap=this.lightMap.toJSON(meta).uuid),this.aoMap&&this.aoMap.isTexture&&(data.aoMap=this.aoMap.toJSON(meta).uuid,data.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(data.bumpMap=this.bumpMap.toJSON(meta).uuid,data.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(data.normalMap=this.normalMap.toJSON(meta).uuid,data.normalMapType=this.normalMapType,data.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(data.displacementMap=this.displacementMap.toJSON(meta).uuid,data.displacementScale=this.displacementScale,data.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(data.roughnessMap=this.roughnessMap.toJSON(meta).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(data.metalnessMap=this.metalnessMap.toJSON(meta).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(data.emissiveMap=this.emissiveMap.toJSON(meta).uuid),this.specularMap&&this.specularMap.isTexture&&(data.specularMap=this.specularMap.toJSON(meta).uuid),this.envMap&&this.envMap.isTexture&&(data.envMap=this.envMap.toJSON(meta).uuid,data.reflectivity=this.reflectivity,data.refractionRatio=this.refractionRatio,void 0!==this.combine&&(data.combine=this.combine),void 0!==this.envMapIntensity&&(data.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(data.gradientMap=this.gradientMap.toJSON(meta).uuid),void 0!==this.size&&(data.size=this.size),void 0!==this.sizeAttenuation&&(data.sizeAttenuation=this.sizeAttenuation),this.blending!==C&&(data.blending=this.blending),!0===this.flatShading&&(data.flatShading=this.flatShading),this.side!==M&&(data.side=this.side),this.vertexColors&&(data.vertexColors=!0),this.opacity<1&&(data.opacity=this.opacity),!0===this.transparent&&(data.transparent=this.transparent),data.depthFunc=this.depthFunc,data.depthTest=this.depthTest,data.depthWrite=this.depthWrite,data.stencilWrite=this.stencilWrite,data.stencilWriteMask=this.stencilWriteMask,data.stencilFunc=this.stencilFunc,data.stencilRef=this.stencilRef,data.stencilFuncMask=this.stencilFuncMask,data.stencilFail=this.stencilFail,data.stencilZFail=this.stencilZFail,data.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(data.rotation=this.rotation),!0===this.polygonOffset&&(data.polygonOffset=!0),0!==this.polygonOffsetFactor&&(data.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(data.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(data.linewidth=this.linewidth),void 0!==this.dashSize&&(data.dashSize=this.dashSize),void 0!==this.gapSize&&(data.gapSize=this.gapSize),void 0!==this.scale&&(data.scale=this.scale),!0===this.dithering&&(data.dithering=!0),this.alphaTest>0&&(data.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(data.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(data.wireframe=this.wireframe),this.wireframeLinewidth>1&&(data.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(data.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(data.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(data.morphTargets=!0),!0===this.morphNormals&&(data.morphNormals=!0),!0===this.skinning&&(data.skinning=!0),!1===this.visible&&(data.visible=!1),!1===this.toneMapped&&(data.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(data.userData=this.userData),e){var r=t(meta.textures),n=t(meta.images);r.length>0&&(data.textures=r),n.length>0&&(data.images=n)}return data},clone:function(){return(new this.constructor).copy(this)},copy:function(source){this.name=source.name,this.fog=source.fog,this.blending=source.blending,this.side=source.side,this.flatShading=source.flatShading,this.vertexColors=source.vertexColors,this.opacity=source.opacity,this.transparent=source.transparent,this.blendSrc=source.blendSrc,this.blendDst=source.blendDst,this.blendEquation=source.blendEquation,this.blendSrcAlpha=source.blendSrcAlpha,this.blendDstAlpha=source.blendDstAlpha,this.blendEquationAlpha=source.blendEquationAlpha,this.depthFunc=source.depthFunc,this.depthTest=source.depthTest,this.depthWrite=source.depthWrite,this.stencilWriteMask=source.stencilWriteMask,this.stencilFunc=source.stencilFunc,this.stencilRef=source.stencilRef,this.stencilFuncMask=source.stencilFuncMask,this.stencilFail=source.stencilFail,this.stencilZFail=source.stencilZFail,this.stencilZPass=source.stencilZPass,this.stencilWrite=source.stencilWrite;var e=source.clippingPlanes,t=null;if(null!==e){var r=e.length;t=new Array(r);for(var i=0;i!==r;++i)t[i]=e[i].clone()}return this.clippingPlanes=t,this.clipIntersection=source.clipIntersection,this.clipShadows=source.clipShadows,this.shadowSide=source.shadowSide,this.colorWrite=source.colorWrite,this.precision=source.precision,this.polygonOffset=source.polygonOffset,this.polygonOffsetFactor=source.polygonOffsetFactor,this.polygonOffsetUnits=source.polygonOffsetUnits,this.dithering=source.dithering,this.alphaTest=source.alphaTest,this.premultipliedAlpha=source.premultipliedAlpha,this.visible=source.visible,this.toneMapped=source.toneMapped,this.userData=JSON.parse(JSON.stringify(source.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Ii.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Ni.prototype=Object.create(Ii.prototype),Ni.prototype.constructor=Ni,Ni.prototype.isMeshBasicMaterial=!0,Ni.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.color.copy(source.color),this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this};var Di=new ua;function Bi(e,t,r){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===r,this.usage=jr,this.updateRange={offset:0,count:-1},this.version=0}function Fi(e,t,r){Bi.call(this,new Int8Array(e),t,r)}function Ui(e,t,r){Bi.call(this,new Uint8Array(e),t,r)}function ji(e,t,r){Bi.call(this,new Uint8ClampedArray(e),t,r)}function Vi(e,t,r){Bi.call(this,new Int16Array(e),t,r)}function zi(e,t,r){Bi.call(this,new Uint16Array(e),t,r)}function Gi(e,t,r){Bi.call(this,new Int32Array(e),t,r)}function Hi(e,t,r){Bi.call(this,new Uint32Array(e),t,r)}function Wi(e,t,r){Bi.call(this,new Float32Array(e),t,r)}function qi(e,t,r){Bi.call(this,new Float64Array(e),t,r)}function Xi(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function Yi(e){if(0===e.length)return-1/0;let t=e[0];for(let i=1,r=e.length;i<r;++i)e[i]>t&&(t=e[i]);return t}Object.defineProperty(Bi.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(Bi.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(source){return this.name=source.name,this.array=new source.array.constructor(source.array),this.itemSize=source.itemSize,this.count=source.count,this.normalized=source.normalized,this.usage=source.usage,this},copyAt:function(e,t,r){e*=this.itemSize,r*=t.itemSize;for(var i=0,n=this.itemSize;i<n;i++)this.array[e+i]=t.array[r+i];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,r=0,i=0,n=e.length;i<n;i++){var o=e[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new Ri),t[r++]=o.r,t[r++]=o.g,t[r++]=o.b}return this},copyVector2sArray:function(e){for(var t=this.array,r=0,i=0,n=e.length;i<n;i++){var o=e[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new $r),t[r++]=o.x,t[r++]=o.y}return this},copyVector3sArray:function(e){for(var t=this.array,r=0,i=0,n=e.length;i<n;i++){var o=e[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new ua),t[r++]=o.x,t[r++]=o.y,t[r++]=o.z}return this},copyVector4sArray:function(e){for(var t=this.array,r=0,i=0,n=e.length;i<n;i++){var o=e[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new ia),t[r++]=o.x,t[r++]=o.y,t[r++]=o.z,t[r++]=o.w}return this},applyMatrix3:function(e){for(var i=0,t=this.count;i<t;i++)Di.x=this.getX(i),Di.y=this.getY(i),Di.z=this.getZ(i),Di.applyMatrix3(e),this.setXYZ(i,Di.x,Di.y,Di.z);return this},applyMatrix4:function(e){for(var i=0,t=this.count;i<t;i++)Di.x=this.getX(i),Di.y=this.getY(i),Di.z=this.getZ(i),Di.applyMatrix4(e),this.setXYZ(i,Di.x,Di.y,Di.z);return this},applyNormalMatrix:function(e){for(var i=0,t=this.count;i<t;i++)Di.x=this.getX(i),Di.y=this.getY(i),Di.z=this.getZ(i),Di.applyNormalMatrix(e),this.setXYZ(i,Di.x,Di.y,Di.z);return this},transformDirection:function(e){for(var i=0,t=this.count;i<t;i++)Di.x=this.getX(i),Di.y=this.getY(i),Di.z=this.getZ(i),Di.transformDirection(e),this.setXYZ(i,Di.x,Di.y,Di.z);return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this},setXYZW:function(e,t,r,n,o){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this.array[e+3]=o,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),Fi.prototype=Object.create(Bi.prototype),Fi.prototype.constructor=Fi,Ui.prototype=Object.create(Bi.prototype),Ui.prototype.constructor=Ui,ji.prototype=Object.create(Bi.prototype),ji.prototype.constructor=ji,Vi.prototype=Object.create(Bi.prototype),Vi.prototype.constructor=Vi,zi.prototype=Object.create(Bi.prototype),zi.prototype.constructor=zi,Gi.prototype=Object.create(Bi.prototype),Gi.prototype.constructor=Gi,Hi.prototype=Object.create(Bi.prototype),Hi.prototype.constructor=Hi,Wi.prototype=Object.create(Bi.prototype),Wi.prototype.constructor=Wi,qi.prototype=Object.create(Bi.prototype),qi.prototype.constructor=qi,Object.assign(Xi.prototype,{computeGroups:function(e){for(var t,r=[],n=void 0,o=e.faces,i=0;i<o.length;i++){var l=o[i];l.materialIndex!==n&&(n=l.materialIndex,void 0!==t&&(t.count=3*i-t.start,r.push(t)),t={start:3*i,materialIndex:n})}void 0!==t&&(t.count=3*i-t.start,r.push(t)),this.groups=r},fromGeometry:function(e){var t,r=e.faces,n=e.vertices,o=e.faceVertexUvs,l=o[0]&&o[0].length>0,h=o[1]&&o[1].length>0,f=e.morphTargets,c=f.length;if(c>0){t=[];for(var i=0;i<c;i++)t[i]={name:f[i].name,data:[]};this.morphTargets.position=t}var d,v=e.morphNormals,_=v.length;if(_>0){d=[];for(i=0;i<_;i++)d[i]={name:v[i].name,data:[]};this.morphTargets.normal=d}var m=e.skinIndices,y=e.skinWeights,x=m.length===n.length,w=y.length===n.length;n.length>0&&0===r.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(i=0;i<r.length;i++){var M=r[i];this.vertices.push(n[M.a],n[M.b],n[M.c]);var E=M.vertexNormals;if(3===E.length)this.normals.push(E[0],E[1],E[2]);else{var S=M.normal;this.normals.push(S,S,S)}var T,A=M.vertexColors;if(3===A.length)this.colors.push(A[0],A[1],A[2]);else{var R=M.color;this.colors.push(R,R,R)}if(!0===l)void 0!==(T=o[0][i])?this.uvs.push(T[0],T[1],T[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",i),this.uvs.push(new $r,new $r,new $r));if(!0===h)void 0!==(T=o[1][i])?this.uvs2.push(T[0],T[1],T[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",i),this.uvs2.push(new $r,new $r,new $r));for(var C=0;C<c;C++){var L=f[C].vertices;t[C].data.push(L[M.a],L[M.b],L[M.c])}for(C=0;C<_;C++){var P=v[C].vertexNormals[i];d[C].data.push(P.a,P.b,P.c)}x&&this.skinIndices.push(m[M.a],m[M.b],m[M.c]),w&&this.skinWeights.push(y[M.a],y[M.b],y[M.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this}});var Zi=1,Ji=new ma,Ki=new Da,Qi=new ua,$i=new Ka,en=new Ka,tn=new ua;function rn(){Object.defineProperty(this,"id",{value:Zi+=2}),this.uuid=Qr.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}rn.prototype=Object.assign(Object.create(Zr.prototype),{constructor:rn,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(Yi(e)>65535?Hi:zi)(e,1):this.index=e},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,r){this.groups.push({start:e,count:t,materialIndex:void 0!==r?r:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){var t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);var r=this.attributes.normal;if(void 0!==r){var n=(new ea).getNormalMatrix(e);r.applyNormalMatrix(n),r.needsUpdate=!0}var o=this.attributes.tangent;return void 0!==o&&(o.transformDirection(e),o.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(e){return Ji.makeRotationX(e),this.applyMatrix4(Ji),this},rotateY:function(e){return Ji.makeRotationY(e),this.applyMatrix4(Ji),this},rotateZ:function(e){return Ji.makeRotationZ(e),this.applyMatrix4(Ji),this},translate:function(e,t,r){return Ji.makeTranslation(e,t,r),this.applyMatrix4(Ji),this},scale:function(e,t,r){return Ji.makeScale(e,t,r),this.applyMatrix4(Ji),this},lookAt:function(e){return Ki.lookAt(e),Ki.updateMatrix(),this.applyMatrix4(Ki.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Qi).negate(),this.translate(Qi.x,Qi.y,Qi.z),this},setFromObject:function(object){var e=object.geometry;if(object.isPoints||object.isLine){var t=new Wi(3*e.vertices.length,3),r=new Wi(3*e.colors.length,3);if(this.setAttribute("position",t.copyVector3sArray(e.vertices)),this.setAttribute("color",r.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var n=new Wi(e.lineDistances.length,1);this.setAttribute("lineDistance",n.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else object.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(e){for(var t=[],i=0,r=e.length;i<r;i++){var n=e[i];t.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Wi(t,3)),this},updateFromObject:function(object){var e,t=object.geometry;if(object.isMesh){var r=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(r=void 0,t.elementsNeedUpdate=!1),void 0===r)return this.fromGeometry(t);r.verticesNeedUpdate=t.verticesNeedUpdate,r.normalsNeedUpdate=t.normalsNeedUpdate,r.colorsNeedUpdate=t.colorsNeedUpdate,r.uvsNeedUpdate=t.uvsNeedUpdate,r.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=r}return!0===t.verticesNeedUpdate&&(void 0!==(e=this.attributes.position)&&(e.copyVector3sArray(t.vertices),e.needsUpdate=!0),t.verticesNeedUpdate=!1),!0===t.normalsNeedUpdate&&(void 0!==(e=this.attributes.normal)&&(e.copyVector3sArray(t.normals),e.needsUpdate=!0),t.normalsNeedUpdate=!1),!0===t.colorsNeedUpdate&&(void 0!==(e=this.attributes.color)&&(e.copyColorsArray(t.colors),e.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(void 0!==(e=this.attributes.uv)&&(e.copyVector2sArray(t.uvs),e.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(void 0!==(e=this.attributes.lineDistance)&&(e.copyArray(t.lineDistances),e.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(object.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new Xi).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(3*e.vertices.length);if(this.setAttribute("position",new Bi(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){var r=new Float32Array(3*e.normals.length);this.setAttribute("normal",new Bi(r,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var n=new Float32Array(3*e.colors.length);this.setAttribute("color",new Bi(n,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var o=new Float32Array(2*e.uvs.length);this.setAttribute("uv",new Bi(o,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var l=new Float32Array(2*e.uvs2.length);this.setAttribute("uv2",new Bi(l,2).copyVector2sArray(e.uvs2))}for(var h in this.groups=e.groups,e.morphTargets){for(var f=[],c=e.morphTargets[h],i=0,d=c.length;i<d;i++){var v=c[i],_=new Wi(3*v.data.length,3);_.name=v.name,f.push(_.copyVector3sArray(v.data))}this.morphAttributes[h]=f}if(e.skinIndices.length>0){var m=new Wi(4*e.skinIndices.length,4);this.setAttribute("skinIndex",m.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var y=new Wi(4*e.skinWeights.length,4);this.setAttribute("skinWeight",y.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Ka);var e=this.attributes.position,t=this.morphAttributes.position;if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(var i=0,r=t.length;i<r;i++){var n=t[i];$i.setFromBufferAttribute(n),this.morphTargetsRelative?(tn.addVectors(this.boundingBox.min,$i.min),this.boundingBox.expandByPoint(tn),tn.addVectors(this.boundingBox.max,$i.max),this.boundingBox.expandByPoint(tn)):(this.boundingBox.expandByPoint($i.min),this.boundingBox.expandByPoint($i.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new ei);var e=this.attributes.position,t=this.morphAttributes.position;if(e){var r=this.boundingSphere.center;if($i.setFromBufferAttribute(e),t)for(var i=0,n=t.length;i<n;i++){var o=t[i];en.setFromBufferAttribute(o),this.morphTargetsRelative?(tn.addVectors($i.min,en.min),$i.expandByPoint(tn),tn.addVectors($i.max,en.max),$i.expandByPoint(tn)):($i.expandByPoint(en.min),$i.expandByPoint(en.max))}$i.getCenter(r);var l=0;for(i=0,n=e.count;i<n;i++)tn.fromBufferAttribute(e,i),l=Math.max(l,r.distanceToSquared(tn));if(t)for(i=0,n=t.length;i<n;i++){o=t[i];for(var h=this.morphTargetsRelative,f=0,c=o.count;f<c;f++)tn.fromBufferAttribute(o,f),h&&(Qi.fromBufferAttribute(e,f),tn.add(Qi)),l=Math.max(l,r.distanceToSquared(tn))}this.boundingSphere.radius=Math.sqrt(l),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes;if(t.position){var r=t.position.array;if(void 0===t.normal)this.setAttribute("normal",new Bi(new Float32Array(r.length),3));else for(var n=t.normal.array,i=0,o=n.length;i<o;i++)n[i]=0;var l,h,f,c=t.normal.array,d=new ua,v=new ua,_=new ua,m=new ua,y=new ua;if(e){var x=e.array;for(i=0,o=e.count;i<o;i+=3)l=3*x[i+0],h=3*x[i+1],f=3*x[i+2],d.fromArray(r,l),v.fromArray(r,h),_.fromArray(r,f),m.subVectors(_,v),y.subVectors(d,v),m.cross(y),c[l]+=m.x,c[l+1]+=m.y,c[l+2]+=m.z,c[h]+=m.x,c[h+1]+=m.y,c[h+2]+=m.z,c[f]+=m.x,c[f+1]+=m.y,c[f+2]+=m.z}else for(i=0,o=r.length;i<o;i+=9)d.fromArray(r,i),v.fromArray(r,i+3),_.fromArray(r,i+6),m.subVectors(_,v),y.subVectors(d,v),m.cross(y),c[i]=m.x,c[i+1]=m.y,c[i+2]=m.z,c[i+3]=m.x,c[i+4]=m.y,c[i+5]=m.z,c[i+6]=m.x,c[i+7]=m.y,c[i+8]=m.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var r=this.attributes;for(var n in r)if(void 0!==e.attributes[n])for(var o=r[n].array,l=e.attributes[n],h=l.array,f=l.itemSize*t,c=Math.min(h.length,o.length-f),i=0,d=f;i<c;i++,d++)o[d]=h[i];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)},normalizeNormals:function(){for(var e=this.attributes.normal,i=0,t=e.count;i<t;i++)tn.x=e.getX(i),tn.y=e.getY(i),tn.z=e.getZ(i),tn.normalize(),e.setXYZ(i,tn.x,tn.y,tn.z)},toNonIndexed:function(){function e(e,t){for(var r=e.array,n=e.itemSize,o=e.normalized,l=new r.constructor(t.length*n),h=0,f=0,i=0,c=t.length;i<c;i++){h=t[i]*n;for(var d=0;d<n;d++)l[f++]=r[h++]}return new Bi(l,n,o)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new rn,r=this.index.array,n=this.attributes;for(var o in n){var l=e(n[o],r);t.setAttribute(o,l)}var h=this.morphAttributes;for(o in h){for(var f=[],c=h[o],i=0,d=c.length;i<d;i++){l=e(c[i],r);f.push(l)}t.morphAttributes[o]=f}t.morphTargetsRelative=this.morphTargetsRelative;for(var v=this.groups,_=(i=0,v.length);i<_;i++){var m=v[i];t.addGroup(m.start,m.count,m.materialIndex)}return t},toJSON:function(){var data={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(data.uuid=this.uuid,data.type=this.type,""!==this.name&&(data.name=this.name),Object.keys(this.userData).length>0&&(data.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(var t in e)void 0!==e[t]&&(data[t]=e[t]);return data}data.data={attributes:{}};var r=this.index;null!==r&&(data.data.index={type:r.array.constructor.name,array:Array.prototype.slice.call(r.array)});var n=this.attributes;for(var t in n){var o=(v=n[t]).toJSON();""!==v.name&&(o.name=v.name),data.data.attributes[t]=o}var l={},h=!1;for(var t in this.morphAttributes){for(var f=this.morphAttributes[t],c=[],i=0,d=f.length;i<d;i++){var v;o=(v=f[i]).toJSON();""!==v.name&&(o.name=v.name),c.push(o)}c.length>0&&(l[t]=c,h=!0)}h&&(data.data.morphAttributes=l,data.data.morphTargetsRelative=this.morphTargetsRelative);var _=this.groups;_.length>0&&(data.data.groups=JSON.parse(JSON.stringify(_)));var m=this.boundingSphere;return null!==m&&(data.data.boundingSphere={center:m.center.toArray(),radius:m.radius}),data},clone:function(){return(new rn).copy(this)},copy:function(source){var e,i,t;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=source.name;var r=source.index;null!==r&&this.setIndex(r.clone());var n=source.attributes;for(e in n){var o=n[e];this.setAttribute(e,o.clone())}var l=source.morphAttributes;for(e in l){var h=[],f=l[e];for(i=0,t=f.length;i<t;i++)h.push(f[i].clone());this.morphAttributes[e]=h}this.morphTargetsRelative=source.morphTargetsRelative;var c=source.groups;for(i=0,t=c.length;i<t;i++){var d=c[i];this.addGroup(d.start,d.count,d.materialIndex)}var v=source.boundingBox;null!==v&&(this.boundingBox=v.clone());var _=source.boundingSphere;return null!==_&&(this.boundingSphere=_.clone()),this.drawRange.start=source.drawRange.start,this.drawRange.count=source.drawRange.count,this.userData=source.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var an=new ma,nn=new hi,on=new ei,sn=new ua,ln=new ua,hn=new ua,un=new ua,fn=new ua,cn=new ua,dn=new ua,vn=new ua,pn=new ua,_n=new $r,gn=new $r,mn=new $r,yn=new ua,bn=new ua;function xn(e,t){Da.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new rn,this.material=void 0!==t?t:new Ni,this.updateMorphTargets()}function wn(object,e,t,r,n,o,l,h){if(null===(e.side===E?r.intersectTriangle(l,o,n,!0,h):r.intersectTriangle(n,o,l,e.side!==S,h)))return null;bn.copy(h),bn.applyMatrix4(object.matrixWorld);var f=t.ray.origin.distanceTo(bn);return f<t.near||f>t.far?null:{distance:f,point:bn.clone(),object:object}}function Mn(object,e,t,r,n,o,l,h,f,a,b,c){sn.fromBufferAttribute(n,a),ln.fromBufferAttribute(n,b),hn.fromBufferAttribute(n,c);var d=object.morphTargetInfluences;if(e.morphTargets&&o&&d){dn.set(0,0,0),vn.set(0,0,0),pn.set(0,0,0);for(var i=0,v=o.length;i<v;i++){var _=d[i],m=o[i];0!==_&&(un.fromBufferAttribute(m,a),fn.fromBufferAttribute(m,b),cn.fromBufferAttribute(m,c),l?(dn.addScaledVector(un,_),vn.addScaledVector(fn,_),pn.addScaledVector(cn,_)):(dn.addScaledVector(un.sub(sn),_),vn.addScaledVector(fn.sub(ln),_),pn.addScaledVector(cn.sub(hn),_)))}sn.add(dn),ln.add(vn),hn.add(pn)}object.isSkinnedMesh&&(object.boneTransform(a,sn),object.boneTransform(b,ln),object.boneTransform(c,hn));var y=wn(object,e,t,r,sn,ln,hn,yn);if(y){h&&(_n.fromBufferAttribute(h,a),gn.fromBufferAttribute(h,b),mn.fromBufferAttribute(h,c),y.uv=Ei.getUV(yn,sn,ln,hn,_n,gn,mn,new $r)),f&&(_n.fromBufferAttribute(f,a),gn.fromBufferAttribute(f,b),mn.fromBufferAttribute(f,c),y.uv2=Ei.getUV(yn,sn,ln,hn,_n,gn,mn,new $r));var x=new Oi(a,b,c);Ei.getNormal(sn,ln,hn,x.normal),y.face=x}return y}xn.prototype=Object.assign(Object.create(Da.prototype),{constructor:xn,isMesh:!0,copy:function(source){return Da.prototype.copy.call(this,source),void 0!==source.morphTargetInfluences&&(this.morphTargetInfluences=source.morphTargetInfluences.slice()),void 0!==source.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary)),this},updateMorphTargets:function(){var e,t,r,n=this.geometry;if(n.isBufferGeometry){var o=n.morphAttributes,l=Object.keys(o);if(l.length>0){var h=o[l[0]];if(void 0!==h)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,t=h.length;e<t;e++)r=h[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=e}}else{var f=n.morphTargets;void 0!==f&&f.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){var r,n=this.geometry,o=this.material,l=this.matrixWorld;if(void 0!==o&&(null===n.boundingSphere&&n.computeBoundingSphere(),on.copy(n.boundingSphere),on.applyMatrix4(l),!1!==e.ray.intersectsSphere(on)&&(an.getInverse(l),nn.copy(e.ray).applyMatrix4(an),null===n.boundingBox||!1!==nn.intersectsBox(n.boundingBox))))if(n.isBufferGeometry){var a,b,h,i,f,c,d,v,_,m=n.index,y=n.attributes.position,x=n.morphAttributes.position,w=n.morphTargetsRelative,M=n.attributes.uv,E=n.attributes.uv2,S=n.groups,T=n.drawRange;if(null!==m)if(Array.isArray(o))for(i=0,c=S.length;i<c;i++)for(_=o[(v=S[i]).materialIndex],f=Math.max(v.start,T.start),d=Math.min(v.start+v.count,T.start+T.count);f<d;f+=3)a=m.getX(f),b=m.getX(f+1),h=m.getX(f+2),(r=Mn(this,_,e,nn,y,x,w,M,E,a,b,h))&&(r.faceIndex=Math.floor(f/3),r.face.materialIndex=v.materialIndex,t.push(r));else for(i=Math.max(0,T.start),c=Math.min(m.count,T.start+T.count);i<c;i+=3)a=m.getX(i),b=m.getX(i+1),h=m.getX(i+2),(r=Mn(this,o,e,nn,y,x,w,M,E,a,b,h))&&(r.faceIndex=Math.floor(i/3),t.push(r));else if(void 0!==y)if(Array.isArray(o))for(i=0,c=S.length;i<c;i++)for(_=o[(v=S[i]).materialIndex],f=Math.max(v.start,T.start),d=Math.min(v.start+v.count,T.start+T.count);f<d;f+=3)(r=Mn(this,_,e,nn,y,x,w,M,E,a=f,b=f+1,h=f+2))&&(r.faceIndex=Math.floor(f/3),r.face.materialIndex=v.materialIndex,t.push(r));else for(i=Math.max(0,T.start),c=Math.min(y.count,T.start+T.count);i<c;i+=3)(r=Mn(this,o,e,nn,y,x,w,M,E,a=i,b=i+1,h=i+2))&&(r.faceIndex=Math.floor(i/3),t.push(r))}else if(n.isGeometry){var A,R,C,L,P=Array.isArray(o),O=n.vertices,k=n.faces,I=n.faceVertexUvs[0];I.length>0&&(L=I);for(var N=0,D=k.length;N<D;N++){var B=k[N],F=P?o[B.materialIndex]:o;if(void 0!==F&&(A=O[B.a],R=O[B.b],C=O[B.c],r=wn(this,F,e,nn,A,R,C,yn))){if(L&&L[N]){var U=L[N];_n.copy(U[0]),gn.copy(U[1]),mn.copy(U[2]),r.uv=Ei.getUV(yn,A,R,C,_n,gn,mn,new $r)}r.face=B,r.faceIndex=N,t.push(r)}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var En=0,Sn=new ma,Tn=new Da,An=new ua;function Rn(){Object.defineProperty(this,"id",{value:En+=2}),this.uuid=Qr.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Rn.prototype=Object.assign(Object.create(Zr.prototype),{constructor:Rn,isGeometry:!0,applyMatrix4:function(e){for(var t=(new ea).getNormalMatrix(e),i=0,r=this.vertices.length;i<r;i++){this.vertices[i].applyMatrix4(e)}for(i=0,r=this.faces.length;i<r;i++){var n=this.faces[i];n.normal.applyMatrix3(t).normalize();for(var o=0,l=n.vertexNormals.length;o<l;o++)n.vertexNormals[o].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return Sn.makeRotationX(e),this.applyMatrix4(Sn),this},rotateY:function(e){return Sn.makeRotationY(e),this.applyMatrix4(Sn),this},rotateZ:function(e){return Sn.makeRotationZ(e),this.applyMatrix4(Sn),this},translate:function(e,t,r){return Sn.makeTranslation(e,t,r),this.applyMatrix4(Sn),this},scale:function(e,t,r){return Sn.makeScale(e,t,r),this.applyMatrix4(Sn),this},lookAt:function(e){return Tn.lookAt(e),Tn.updateMatrix(),this.applyMatrix4(Tn.matrix),this},fromBufferGeometry:function(e){var t=this,r=null!==e.index?e.index.array:void 0,n=e.attributes;if(void 0===n.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var o=n.position.array,l=void 0!==n.normal?n.normal.array:void 0,h=void 0!==n.color?n.color.array:void 0,f=void 0!==n.uv?n.uv.array:void 0,c=void 0!==n.uv2?n.uv2.array:void 0;void 0!==c&&(this.faceVertexUvs[1]=[]);for(var i=0;i<o.length;i+=3)t.vertices.push((new ua).fromArray(o,i)),void 0!==h&&t.colors.push((new Ri).fromArray(h,i));function d(a,b,e,r){var n=void 0===h?[]:[t.colors[a].clone(),t.colors[b].clone(),t.colors[e].clone()],o=new Oi(a,b,e,void 0===l?[]:[(new ua).fromArray(l,3*a),(new ua).fromArray(l,3*b),(new ua).fromArray(l,3*e)],n,r);t.faces.push(o),void 0!==f&&t.faceVertexUvs[0].push([(new $r).fromArray(f,2*a),(new $r).fromArray(f,2*b),(new $r).fromArray(f,2*e)]),void 0!==c&&t.faceVertexUvs[1].push([(new $r).fromArray(c,2*a),(new $r).fromArray(c,2*b),(new $r).fromArray(c,2*e)])}var v=e.groups;if(v.length>0)for(i=0;i<v.length;i++)for(var _=v[i],m=_.start,y=m,x=m+_.count;y<x;y+=3)void 0!==r?d(r[y],r[y+1],r[y+2],_.materialIndex):d(y,y+1,y+2,_.materialIndex);else if(void 0!==r)for(i=0;i<r.length;i+=3)d(r[i],r[i+1],r[i+2]);else for(i=0;i<o.length/3;i+=3)d(i,i+1,i+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(An).negate(),this.translate(An.x,An.y,An.z),this},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,s=0===t?1:1/t,r=new ma;return r.set(s,0,0,-s*e.x,0,s,0,-s*e.y,0,0,s,-s*e.z,0,0,0,1),this.applyMatrix4(r),this},computeFaceNormals:function(){for(var e=new ua,t=new ua,r=0,n=this.faces.length;r<n;r++){var o=this.faces[r],l=this.vertices[o.a],h=this.vertices[o.b],f=this.vertices[o.c];e.subVectors(f,h),t.subVectors(l,h),e.cross(t),e.normalize(),o.normal.copy(e)}},computeVertexNormals:function(e){var t,r,n,o,l,h;for(void 0===e&&(e=!0),h=new Array(this.vertices.length),t=0,r=this.vertices.length;t<r;t++)h[t]=new ua;if(e){var f,c,d,v=new ua,_=new ua;for(n=0,o=this.faces.length;n<o;n++)l=this.faces[n],f=this.vertices[l.a],c=this.vertices[l.b],d=this.vertices[l.c],v.subVectors(d,c),_.subVectors(f,c),v.cross(_),h[l.a].add(v),h[l.b].add(v),h[l.c].add(v)}else for(this.computeFaceNormals(),n=0,o=this.faces.length;n<o;n++)h[(l=this.faces[n]).a].add(l.normal),h[l.b].add(l.normal),h[l.c].add(l.normal);for(t=0,r=this.vertices.length;t<r;t++)h[t].normalize();for(n=0,o=this.faces.length;n<o;n++){var m=(l=this.faces[n]).vertexNormals;3===m.length?(m[0].copy(h[l.a]),m[1].copy(h[l.b]),m[2].copy(h[l.c])):(m[0]=h[l.a].clone(),m[1]=h[l.b].clone(),m[2]=h[l.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var e,t,r;for(this.computeFaceNormals(),e=0,t=this.faces.length;e<t;e++){var n=(r=this.faces[e]).vertexNormals;3===n.length?(n[0].copy(r.normal),n[1].copy(r.normal),n[2].copy(r.normal)):(n[0]=r.normal.clone(),n[1]=r.normal.clone(),n[2]=r.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var i,e,t,r,n;for(t=0,r=this.faces.length;t<r;t++)for((n=this.faces[t]).__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),i=0,e=n.vertexNormals.length;i<e;i++)n.__originalVertexNormals[i]?n.__originalVertexNormals[i].copy(n.vertexNormals[i]):n.__originalVertexNormals[i]=n.vertexNormals[i].clone();var o=new Rn;for(o.faces=this.faces,i=0,e=this.morphTargets.length;i<e;i++){if(!this.morphNormals[i]){this.morphNormals[i]={},this.morphNormals[i].faceNormals=[],this.morphNormals[i].vertexNormals=[];var l=this.morphNormals[i].faceNormals,h=this.morphNormals[i].vertexNormals;for(t=0,r=this.faces.length;t<r;t++)f=new ua,c={a:new ua,b:new ua,c:new ua},l.push(f),h.push(c)}var f,c,d=this.morphNormals[i];for(o.vertices=this.morphTargets[i].vertices,o.computeFaceNormals(),o.computeVertexNormals(),t=0,r=this.faces.length;t<r;t++)n=this.faces[t],f=d.faceNormals[t],c=d.vertexNormals[t],f.copy(n.normal),c.a.copy(n.vertexNormals[0]),c.b.copy(n.vertexNormals[1]),c.c.copy(n.vertexNormals[2])}for(t=0,r=this.faces.length;t<r;t++)(n=this.faces[t]).normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Ka),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new ei),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(e&&e.isGeometry){var n,o=this.vertices.length,l=this.vertices,h=e.vertices,f=this.faces,c=e.faces,d=this.colors,v=e.colors;void 0===r&&(r=0),void 0!==t&&(n=(new ea).getNormalMatrix(t));for(var i=0,_=h.length;i<_;i++){var m=h[i].clone();void 0!==t&&m.applyMatrix4(t),l.push(m)}for(i=0,_=v.length;i<_;i++)d.push(v[i].clone());for(i=0,_=c.length;i<_;i++){var y,x,w,M=c[i],E=M.vertexNormals,S=M.vertexColors;(y=new Oi(M.a+o,M.b+o,M.c+o)).normal.copy(M.normal),void 0!==n&&y.normal.applyMatrix3(n).normalize();for(var T=0,A=E.length;T<A;T++)x=E[T].clone(),void 0!==n&&x.applyMatrix3(n).normalize(),y.vertexNormals.push(x);y.color.copy(M.color);for(T=0,A=S.length;T<A;T++)w=S[T],y.vertexColors.push(w.clone());y.materialIndex=M.materialIndex+r,f.push(y)}for(i=0,_=e.faceVertexUvs.length;i<_;i++){var R=e.faceVertexUvs[i];void 0===this.faceVertexUvs[i]&&(this.faceVertexUvs[i]=[]);for(T=0,A=R.length;T<A;T++){for(var C=R[T],L=[],P=0,O=C.length;P<O;P++)L.push(C[P].clone());this.faceVertexUvs[i].push(L)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e)},mergeMesh:function(e){e&&e.isMesh?(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)},mergeVertices:function(){var e,t,i,r,n,o,l,h,f={},c=[],d=[],v=Math.pow(10,4);for(i=0,r=this.vertices.length;i<r;i++)e=this.vertices[i],void 0===f[t=Math.round(e.x*v)+"_"+Math.round(e.y*v)+"_"+Math.round(e.z*v)]?(f[t]=i,c.push(this.vertices[i]),d[i]=c.length-1):d[i]=d[f[t]];var _=[];for(i=0,r=this.faces.length;i<r;i++){(n=this.faces[i]).a=d[n.a],n.b=d[n.b],n.c=d[n.c],o=[n.a,n.b,n.c];for(var m=0;m<3;m++)if(o[m]===o[(m+1)%3]){_.push(i);break}}for(i=_.length-1;i>=0;i--){var y=_[i];for(this.faces.splice(y,1),l=0,h=this.faceVertexUvs.length;l<h;l++)this.faceVertexUvs[l].splice(y,1)}var x=this.vertices.length-c.length;return this.vertices=c,x},setFromPoints:function(e){this.vertices=[];for(var i=0,t=e.length;i<t;i++){var r=e[i];this.vertices.push(new ua(r.x,r.y,r.z||0))}return this},sortFacesByMaterialIndex:function(){for(var e=this.faces,t=e.length,i=0;i<t;i++)e[i]._id=i;e.sort((function(a,b){return a.materialIndex-b.materialIndex}));var r,n,o=this.faceVertexUvs[0],l=this.faceVertexUvs[1];o&&o.length===t&&(r=[]),l&&l.length===t&&(n=[]);for(i=0;i<t;i++){var h=e[i]._id;r&&r.push(o[h]),n&&n.push(l[h])}r&&(this.faceVertexUvs[0]=r),n&&(this.faceVertexUvs[1]=n)},toJSON:function(){var data={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(data.uuid=this.uuid,data.type=this.type,""!==this.name&&(data.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var t in e)void 0!==e[t]&&(data[t]=e[t]);return data}for(var r=[],i=0;i<this.vertices.length;i++){var n=this.vertices[i];r.push(n.x,n.y,n.z)}var o=[],l=[],h={},f=[],c={},d=[],v={};for(i=0;i<this.faces.length;i++){var _=this.faces[i],m=void 0!==this.faceVertexUvs[0][i],y=_.normal.length()>0,x=_.vertexNormals.length>0,w=1!==_.color.r||1!==_.color.g||1!==_.color.b,M=_.vertexColors.length>0,E=0;if(E=R(E,0,0),E=R(E,1,!0),E=R(E,2,!1),E=R(E,3,m),E=R(E,4,y),E=R(E,5,x),E=R(E,6,w),E=R(E,7,M),o.push(E),o.push(_.a,_.b,_.c),o.push(_.materialIndex),m){var S=this.faceVertexUvs[0][i];o.push(P(S[0]),P(S[1]),P(S[2]))}if(y&&o.push(C(_.normal)),x){var T=_.vertexNormals;o.push(C(T[0]),C(T[1]),C(T[2]))}if(w&&o.push(L(_.color)),M){var A=_.vertexColors;o.push(L(A[0]),L(A[1]),L(A[2]))}}function R(e,t,r){return r?e|1<<t:e&~(1<<t)}function C(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==h[t]||(h[t]=l.length/3,l.push(e.x,e.y,e.z)),h[t]}function L(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==c[t]||(c[t]=f.length,f.push(e.getHex())),c[t]}function P(e){var t=e.x.toString()+e.y.toString();return void 0!==v[t]||(v[t]=d.length/2,d.push(e.x,e.y)),v[t]}return data.data={},data.data.vertices=r,data.data.normals=l,f.length>0&&(data.data.colors=f),d.length>0&&(data.data.uvs=[d]),data.data.faces=o,data},clone:function(){return(new Rn).copy(this)},copy:function(source){var i,e,t,r,n,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=source.name;var l=source.vertices;for(i=0,e=l.length;i<e;i++)this.vertices.push(l[i].clone());var h=source.colors;for(i=0,e=h.length;i<e;i++)this.colors.push(h[i].clone());var f=source.faces;for(i=0,e=f.length;i<e;i++)this.faces.push(f[i].clone());for(i=0,e=source.faceVertexUvs.length;i<e;i++){var c=source.faceVertexUvs[i];for(void 0===this.faceVertexUvs[i]&&(this.faceVertexUvs[i]=[]),t=0,r=c.length;t<r;t++){var d=c[t],v=[];for(n=0,o=d.length;n<o;n++){var _=d[n];v.push(_.clone())}this.faceVertexUvs[i].push(v)}}var m=source.morphTargets;for(i=0,e=m.length;i<e;i++){var y={};if(y.name=m[i].name,void 0!==m[i].vertices)for(y.vertices=[],t=0,r=m[i].vertices.length;t<r;t++)y.vertices.push(m[i].vertices[t].clone());if(void 0!==m[i].normals)for(y.normals=[],t=0,r=m[i].normals.length;t<r;t++)y.normals.push(m[i].normals[t].clone());this.morphTargets.push(y)}var x=source.morphNormals;for(i=0,e=x.length;i<e;i++){var w={};if(void 0!==x[i].vertexNormals)for(w.vertexNormals=[],t=0,r=x[i].vertexNormals.length;t<r;t++){var M=x[i].vertexNormals[t],E={};E.a=M.a.clone(),E.b=M.b.clone(),E.c=M.c.clone(),w.vertexNormals.push(E)}if(void 0!==x[i].faceNormals)for(w.faceNormals=[],t=0,r=x[i].faceNormals.length;t<r;t++)w.faceNormals.push(x[i].faceNormals[t].clone());this.morphNormals.push(w)}var S=source.skinWeights;for(i=0,e=S.length;i<e;i++)this.skinWeights.push(S[i].clone());var T=source.skinIndices;for(i=0,e=T.length;i<e;i++)this.skinIndices.push(T[i].clone());var A=source.lineDistances;for(i=0,e=A.length;i<e;i++)this.lineDistances.push(A[i]);var R=source.boundingBox;null!==R&&(this.boundingBox=R.clone());var C=source.boundingSphere;return null!==C&&(this.boundingSphere=C.clone()),this.elementsNeedUpdate=source.elementsNeedUpdate,this.verticesNeedUpdate=source.verticesNeedUpdate,this.uvsNeedUpdate=source.uvsNeedUpdate,this.normalsNeedUpdate=source.normalsNeedUpdate,this.colorsNeedUpdate=source.colorsNeedUpdate,this.lineDistancesNeedUpdate=source.lineDistancesNeedUpdate,this.groupsNeedUpdate=source.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class Cn extends Rn{constructor(e,t,r,n,o,l){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:o,depthSegments:l},this.fromBufferGeometry(new Ln(e,t,r,n,o,l)),this.mergeVertices()}}class Ln extends rn{constructor(e,t,r,n,o,l){super(),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:o,depthSegments:l};const h=this;e=e||1,t=t||1,r=r||1,n=Math.floor(n)||1,o=Math.floor(o)||1,l=Math.floor(l)||1;const f=[],c=[],d=[],v=[];let _=0,m=0;function y(u,e,t,r,n,o,l,y,x,w,M){const E=o/x,S=l/w,T=o/2,A=l/2,R=y/2,C=x+1,L=w+1;let P=0,O=0;const k=new ua;for(let o=0;o<L;o++){const l=o*S-A;for(let h=0;h<C;h++){const f=h*E-T;k[u]=f*r,k[e]=l*n,k[t]=R,c.push(k.x,k.y,k.z),k[u]=0,k[e]=0,k[t]=y>0?1:-1,d.push(k.x,k.y,k.z),v.push(h/x),v.push(1-o/w),P+=1}}for(let e=0;e<w;e++)for(let t=0;t<x;t++){const a=_+t+C*e,b=_+t+C*(e+1),r=_+(t+1)+C*(e+1),n=_+(t+1)+C*e;f.push(a,b,n),f.push(b,r,n),O+=6}h.addGroup(m,O,M),m+=O,_+=P}y("z","y","x",-1,-1,r,t,e,l,o,0),y("z","y","x",1,-1,r,t,-e,l,o,1),y("x","z","y",1,1,e,r,t,n,l,2),y("x","z","y",1,-1,e,r,-t,n,l,3),y("x","y","z",1,-1,e,t,r,n,o,4),y("x","y","z",-1,-1,e,t,-r,n,o,5),this.setIndex(f),this.setAttribute("position",new Wi(c,3)),this.setAttribute("normal",new Wi(d,3)),this.setAttribute("uv",new Wi(v,2))}}function Pn(e){var t={};for(var u in e)for(var p in t[u]={},e[u]){var r=e[u][p];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?t[u][p]=r.clone():Array.isArray(r)?t[u][p]=r.slice():t[u][p]=r}return t}function On(e){for(var t={},u=0;u<e.length;u++){var r=Pn(e[u]);for(var p in r)t[p]=r[p]}return t}var kn={clone:Pn,merge:On};function In(e){Ii.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}function Nn(){Da.call(this),this.type="Camera",this.matrixWorldInverse=new ma,this.projectionMatrix=new ma,this.projectionMatrixInverse=new ma}function Dn(e,t,r,n){Nn.call(this),this.type="PerspectiveCamera",this.fov=void 0!==e?e:50,this.zoom=1,this.near=void 0!==r?r:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==t?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}In.prototype=Object.create(Ii.prototype),In.prototype.constructor=In,In.prototype.isShaderMaterial=!0,In.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.fragmentShader=source.fragmentShader,this.vertexShader=source.vertexShader,this.uniforms=Pn(source.uniforms),this.defines=Object.assign({},source.defines),this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.lights=source.lights,this.clipping=source.clipping,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this.extensions=Object.assign({},source.extensions),this},In.prototype.toJSON=function(meta){var data=Ii.prototype.toJSON.call(this,meta);for(var e in data.uniforms={},this.uniforms){var t=this.uniforms[e].value;t&&t.isTexture?data.uniforms[e]={type:"t",value:t.toJSON(meta).uuid}:t&&t.isColor?data.uniforms[e]={type:"c",value:t.getHex()}:t&&t.isVector2?data.uniforms[e]={type:"v2",value:t.toArray()}:t&&t.isVector3?data.uniforms[e]={type:"v3",value:t.toArray()}:t&&t.isVector4?data.uniforms[e]={type:"v4",value:t.toArray()}:t&&t.isMatrix3?data.uniforms[e]={type:"m3",value:t.toArray()}:t&&t.isMatrix4?data.uniforms[e]={type:"m4",value:t.toArray()}:data.uniforms[e]={value:t}}Object.keys(this.defines).length>0&&(data.defines=this.defines),data.vertexShader=this.vertexShader,data.fragmentShader=this.fragmentShader;var r={};for(var n in this.extensions)!0===this.extensions[n]&&(r[n]=!0);return Object.keys(r).length>0&&(data.extensions=r),data},Nn.prototype=Object.assign(Object.create(Da.prototype),{constructor:Nn,isCamera:!0,copy:function(source,e){return Da.prototype.copy.call(this,source,e),this.matrixWorldInverse.copy(source.matrixWorldInverse),this.projectionMatrix.copy(source.projectionMatrix),this.projectionMatrixInverse.copy(source.projectionMatrixInverse),this},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new ua),this.updateMatrixWorld(!0);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){Da.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(e,t){Da.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),Dn.prototype=Object.assign(Object.create(Nn.prototype),{constructor:Dn,isPerspectiveCamera:!0,copy:function(source,e){return Nn.prototype.copy.call(this,source,e),this.fov=source.fov,this.zoom=source.zoom,this.near=source.near,this.far=source.far,this.focus=source.focus,this.aspect=source.aspect,this.view=null===source.view?null:Object.assign({},source.view),this.filmGauge=source.filmGauge,this.filmOffset=source.filmOffset,this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=2*Qr.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(.5*Qr.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*Qr.RAD2DEG*Math.atan(Math.tan(.5*Qr.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,r,n,o,l){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(.5*Qr.DEG2RAD*this.fov)/this.zoom,r=2*t,n=this.aspect*r,o=-.5*n,view=this.view;if(null!==this.view&&this.view.enabled){var l=view.fullWidth,h=view.fullHeight;o+=view.offsetX*n/l,t-=view.offsetY*r/h,n*=view.width/l,r*=view.height/h}var f=this.filmOffset;0!==f&&(o+=e*f/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+n,t,t-r,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(meta){var data=Da.prototype.toJSON.call(this,meta);return data.object.fov=this.fov,data.object.zoom=this.zoom,data.object.near=this.near,data.object.far=this.far,data.object.focus=this.focus,data.object.aspect=this.aspect,null!==this.view&&(data.object.view=Object.assign({},this.view)),data.object.filmGauge=this.filmGauge,data.object.filmOffset=this.filmOffset,data}});function Bn(e,t,r){if(Da.call(this),this.type="CubeCamera",!0===r.isWebGLCubeRenderTarget){this.renderTarget=r;var n=new Dn(90,1,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new ua(1,0,0)),this.add(n);var o=new Dn(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new ua(-1,0,0)),this.add(o);var l=new Dn(90,1,e,t);l.layers=this.layers,l.up.set(0,0,1),l.lookAt(new ua(0,1,0)),this.add(l);var h=new Dn(90,1,e,t);h.layers=this.layers,h.up.set(0,0,-1),h.lookAt(new ua(0,-1,0)),this.add(h);var f=new Dn(90,1,e,t);f.layers=this.layers,f.up.set(0,-1,0),f.lookAt(new ua(0,0,1)),this.add(f);var c=new Dn(90,1,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new ua(0,0,-1)),this.add(c),this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();var d=e.xr.enabled,v=e.getRenderTarget();e.xr.enabled=!1;var _=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,n),e.setRenderTarget(r,1),e.render(t,o),e.setRenderTarget(r,2),e.render(t,l),e.setRenderTarget(r,3),e.render(t,h),e.setRenderTarget(r,4),e.render(t,f),r.texture.generateMipmaps=_,e.setRenderTarget(r,5),e.render(t,c),e.setRenderTarget(v),e.xr.enabled=d},this.clear=function(e,t,n,o){for(var l=e.getRenderTarget(),i=0;i<6;i++)e.setRenderTarget(r,i),e.clear(t,n,o);e.setRenderTarget(l)}}else console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.")}function Fn(e,t,r){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=r),na.call(this,e,e,t)}function Un(data,e,t,r,n,o,l,h,f,c,d,v){aa.call(this,null,o,l,h,f,c,r,n,d,v),this.image={data:data||null,width:e||1,height:t||1},this.magFilter=void 0!==f?f:Se,this.minFilter=void 0!==c?c:Se,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Bn.prototype=Object.create(Da.prototype),Bn.prototype.constructor=Bn,Fn.prototype=Object.create(na.prototype),Fn.prototype.constructor=Fn,Fn.prototype.isWebGLCubeRenderTarget=!0,Fn.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=t.format,this.texture.encoding=t.encoding;var r=new Ba,n={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","\tvWorldDirection = transformDirection( position, modelMatrix );","\t#include <begin_vertex>","\t#include <project_vertex>","}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#include <common>","void main() {","\tvec3 direction = normalize( vWorldDirection );","\tvec2 sampleUV = equirectUv( direction );","\tgl_FragColor = texture2D( tEquirect, sampleUV );","}"].join("\n")},o=new In({type:"CubemapFromEquirect",uniforms:Pn(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:E,blending:R});o.uniforms.tEquirect.value=t;var l=new xn(new Ln(5,5,5),o);return r.add(l),new Bn(1,10,this).update(e,r),l.geometry.dispose(),l.material.dispose(),this},Un.prototype=Object.create(aa.prototype),Un.prototype.constructor=Un,Un.prototype.isDataTexture=!0;var jn=new ei,Vn=new ua;function zn(e,t,r,n,o,l){this.planes=[void 0!==e?e:new di,void 0!==t?t:new di,void 0!==r?r:new di,void 0!==n?n:new di,void 0!==o?o:new di,void 0!==l?l:new di]}Object.assign(zn.prototype,{set:function(e,t,r,n,o,l){var h=this.planes;return h[0].copy(e),h[1].copy(t),h[2].copy(r),h[3].copy(n),h[4].copy(o),h[5].copy(l),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){for(var t=this.planes,i=0;i<6;i++)t[i].copy(e.planes[i]);return this},setFromProjectionMatrix:function(e){var t=this.planes,r=e.elements,n=r[0],o=r[1],l=r[2],h=r[3],f=r[4],c=r[5],d=r[6],v=r[7],_=r[8],m=r[9],y=r[10],x=r[11],w=r[12],M=r[13],E=r[14],S=r[15];return t[0].setComponents(h-n,v-f,x-_,S-w).normalize(),t[1].setComponents(h+n,v+f,x+_,S+w).normalize(),t[2].setComponents(h+o,v+c,x+m,S+M).normalize(),t[3].setComponents(h-o,v-c,x-m,S-M).normalize(),t[4].setComponents(h-l,v-d,x-y,S-E).normalize(),t[5].setComponents(h+l,v+d,x+y,S+E).normalize(),this},intersectsObject:function(object){var e=object.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),jn.copy(e.boundingSphere).applyMatrix4(object.matrixWorld),this.intersectsSphere(jn)},intersectsSprite:function(e){return jn.center.set(0,0,0),jn.radius=.7071067811865476,jn.applyMatrix4(e.matrixWorld),this.intersectsSphere(jn)},intersectsSphere:function(e){for(var t=this.planes,r=e.center,n=-e.radius,i=0;i<6;i++){if(t[i].distanceToPoint(r)<n)return!1}return!0},intersectsBox:function(e){for(var t=this.planes,i=0;i<6;i++){var r=t[i];if(Vn.x=r.normal.x>0?e.max.x:e.min.x,Vn.y=r.normal.y>0?e.max.y:e.min.y,Vn.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Vn)<0)return!1}return!0},containsPoint:function(e){for(var t=this.planes,i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}});var Gn={common:{diffuse:{value:new Ri(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new ea},uv2Transform:{value:new ea},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new $r(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ri(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Ri(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new ea}},sprite:{diffuse:{value:new Ri(15658734)},opacity:{value:1},center:{value:new $r(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new ea}}};function Hn(){var e=null,t=!1,r=null;function n(time,o){!1!==t&&(r(time,o),e.requestAnimationFrame(n))}return{start:function(){!0!==t&&null!==r&&(e.requestAnimationFrame(n),t=!0)},stop:function(){t=!1},setAnimationLoop:function(e){r=e},setContext:function(t){e=t}}}function Wn(e,t){var r=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);var data=n.get(t);data&&(e.deleteBuffer(data.buffer),n.delete(t))},update:function(t,o){t.isInterleavedBufferAttribute&&(t=t.data);var data=n.get(t);void 0===data?n.set(t,function(t,r){var n=t.array,o=t.usage,l=e.createBuffer();e.bindBuffer(r,l),e.bufferData(r,n,o),t.onUploadCallback();var h=5126;return n instanceof Float32Array?h=5126:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?h=5123:n instanceof Int16Array?h=5122:n instanceof Uint32Array?h=5125:n instanceof Int32Array?h=5124:n instanceof Int8Array?h=5120:n instanceof Uint8Array&&(h=5121),{buffer:l,type:h,bytesPerElement:n.BYTES_PER_ELEMENT,version:t.version}}(t,o)):data.version<t.version&&(!function(t,n,o){var l=n.array,h=n.updateRange;e.bindBuffer(o,t),-1===h.count?e.bufferSubData(o,0,l):(r?e.bufferSubData(o,h.offset*l.BYTES_PER_ELEMENT,l,h.offset,h.count):e.bufferSubData(o,h.offset*l.BYTES_PER_ELEMENT,l.subarray(h.offset,h.offset+h.count)),h.count=-1)}(data.buffer,t,o),data.version=t.version)}}}function qn(e,t,r,n){Rn.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n},this.fromBufferGeometry(new Xn(e,t,r,n)),this.mergeVertices()}function Xn(e,t,r,n){rn.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};var o,l,h=(e=e||1)/2,f=(t=t||1)/2,c=Math.floor(r)||1,d=Math.floor(n)||1,v=c+1,_=d+1,m=e/c,y=t/d,x=[],w=[],M=[],E=[];for(l=0;l<_;l++){var S=l*y-f;for(o=0;o<v;o++){var T=o*m-h;w.push(T,-S,0),M.push(0,0,1),E.push(o/c),E.push(1-l/d)}}for(l=0;l<d;l++)for(o=0;o<c;o++){var a=o+v*l,b=o+v*(l+1),A=o+1+v*(l+1),R=o+1+v*l;x.push(a,b,R),x.push(b,A,R)}this.setIndex(x),this.setAttribute("position",new Wi(w,3)),this.setAttribute("normal",new Wi(M,3)),this.setAttribute("uv",new Wi(E,2))}qn.prototype=Object.create(Rn.prototype),qn.prototype.constructor=qn,Xn.prototype=Object.create(rn.prototype),Xn.prototype.constructor=Xn;var Yn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {\n      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {\n      uv = vec2(direction.x, direction.y) / abs(direction.z);    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Zn={basic:{uniforms:On([Gn.common,Gn.specularmap,Gn.envmap,Gn.aomap,Gn.lightmap,Gn.fog]),vertexShader:Yn.meshbasic_vert,fragmentShader:Yn.meshbasic_frag},lambert:{uniforms:On([Gn.common,Gn.specularmap,Gn.envmap,Gn.aomap,Gn.lightmap,Gn.emissivemap,Gn.fog,Gn.lights,{emissive:{value:new Ri(0)}}]),vertexShader:Yn.meshlambert_vert,fragmentShader:Yn.meshlambert_frag},phong:{uniforms:On([Gn.common,Gn.specularmap,Gn.envmap,Gn.aomap,Gn.lightmap,Gn.emissivemap,Gn.bumpmap,Gn.normalmap,Gn.displacementmap,Gn.fog,Gn.lights,{emissive:{value:new Ri(0)},specular:{value:new Ri(1118481)},shininess:{value:30}}]),vertexShader:Yn.meshphong_vert,fragmentShader:Yn.meshphong_frag},standard:{uniforms:On([Gn.common,Gn.envmap,Gn.aomap,Gn.lightmap,Gn.emissivemap,Gn.bumpmap,Gn.normalmap,Gn.displacementmap,Gn.roughnessmap,Gn.metalnessmap,Gn.fog,Gn.lights,{emissive:{value:new Ri(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Yn.meshphysical_vert,fragmentShader:Yn.meshphysical_frag},toon:{uniforms:On([Gn.common,Gn.specularmap,Gn.aomap,Gn.lightmap,Gn.emissivemap,Gn.bumpmap,Gn.normalmap,Gn.displacementmap,Gn.gradientmap,Gn.fog,Gn.lights,{emissive:{value:new Ri(0)},specular:{value:new Ri(1118481)},shininess:{value:30}}]),vertexShader:Yn.meshtoon_vert,fragmentShader:Yn.meshtoon_frag},matcap:{uniforms:On([Gn.common,Gn.bumpmap,Gn.normalmap,Gn.displacementmap,Gn.fog,{matcap:{value:null}}]),vertexShader:Yn.meshmatcap_vert,fragmentShader:Yn.meshmatcap_frag},points:{uniforms:On([Gn.points,Gn.fog]),vertexShader:Yn.points_vert,fragmentShader:Yn.points_frag},dashed:{uniforms:On([Gn.common,Gn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Yn.linedashed_vert,fragmentShader:Yn.linedashed_frag},depth:{uniforms:On([Gn.common,Gn.displacementmap]),vertexShader:Yn.depth_vert,fragmentShader:Yn.depth_frag},normal:{uniforms:On([Gn.common,Gn.bumpmap,Gn.normalmap,Gn.displacementmap,{opacity:{value:1}}]),vertexShader:Yn.normal_vert,fragmentShader:Yn.normal_frag},sprite:{uniforms:On([Gn.sprite,Gn.fog]),vertexShader:Yn.sprite_vert,fragmentShader:Yn.sprite_frag},background:{uniforms:{uvTransform:{value:new ea},t2D:{value:null}},vertexShader:Yn.background_vert,fragmentShader:Yn.background_frag},cube:{uniforms:On([Gn.envmap,{opacity:{value:1}}]),vertexShader:Yn.cube_vert,fragmentShader:Yn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Yn.equirect_vert,fragmentShader:Yn.equirect_frag},distanceRGBA:{uniforms:On([Gn.common,Gn.displacementmap,{referencePosition:{value:new ua},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Yn.distanceRGBA_vert,fragmentShader:Yn.distanceRGBA_frag},shadow:{uniforms:On([Gn.lights,Gn.fog,{color:{value:new Ri(0)},opacity:{value:1}}]),vertexShader:Yn.shadow_vert,fragmentShader:Yn.shadow_frag}};function Jn(e,t,r,n){var o,l,h=new Ri(0),f=0,c=null,d=0,v=null;function _(e,r){t.buffers.color.setClear(e.r,e.g,e.b,r,n)}return{getClearColor:function(){return h},setClearColor:function(e,t){h.set(e),_(h,f=void 0!==t?t:1)},getClearAlpha:function(){return f},setClearAlpha:function(e){_(h,f=e)},render:function(t,n,m,y){var x=n.background,w=e.xr,S=w.getSession&&w.getSession();if(S&&"additive"===S.environmentBlendMode&&(x=null),null===x?_(h,f):x&&x.isColor&&(_(x,1),y=!0),(e.autoClear||y)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),x&&(x.isCubeTexture||x.isWebGLCubeRenderTarget||x.mapping===be)){void 0===l&&((l=new xn(new Ln(1,1,1),new In({type:"BackgroundCubeMaterial",uniforms:Pn(Zn.cube.uniforms),vertexShader:Zn.cube.vertexShader,fragmentShader:Zn.cube.fragmentShader,side:E,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(l));var T=x.isWebGLCubeRenderTarget?x.texture:x;l.material.uniforms.envMap.value=T,l.material.uniforms.flipEnvMap.value=T.isCubeTexture?-1:1,c===x&&d===T.version&&v===e.toneMapping||(l.material.needsUpdate=!0,c=x,d=T.version,v=e.toneMapping),t.unshift(l,l.geometry,l.material,0,0,null)}else x&&x.isTexture&&(void 0===o&&((o=new xn(new Xn(2,2),new In({type:"BackgroundMaterial",uniforms:Pn(Zn.background.uniforms),vertexShader:Zn.background.vertexShader,fragmentShader:Zn.background.fragmentShader,side:M,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(o)),o.material.uniforms.t2D.value=x,!0===x.matrixAutoUpdate&&x.updateMatrix(),o.material.uniforms.uvTransform.value.copy(x.matrix),c===x&&d===x.version&&v===e.toneMapping||(o.material.needsUpdate=!0,c=x,d=x.version,v=e.toneMapping),t.unshift(o,o.geometry,o.material,0,0,null))}}}function Kn(e,t,r,n){var o,l=n.isWebGL2;this.setMode=function(e){o=e},this.render=function(t,n){e.drawArrays(o,t,n),r.update(n,o)},this.renderInstances=function(n,h,f,c){if(0!==c){var d,v;if(l)d=e,v="drawArraysInstanced";else if(v="drawArraysInstancedANGLE",null===(d=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[v](o,h,f,c),r.update(f,o,c)}}}function Qn(e,t,r){var n;function o(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var l="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,h=void 0!==r.precision?r.precision:"highp",f=o(h);f!==h&&(console.warn("THREE.WebGLRenderer:",h,"not supported, using",f,"instead."),h=f);var c=!0===r.logarithmicDepthBuffer,d=e.getParameter(34930),v=e.getParameter(35660),_=e.getParameter(3379),m=e.getParameter(34076),y=e.getParameter(34921),x=e.getParameter(36347),w=e.getParameter(36348),M=e.getParameter(36349),E=v>0,S=l||!!t.get("OES_texture_float");return{isWebGL2:l,getMaxAnisotropy:function(){if(void 0!==n)return n;var r=t.get("EXT_texture_filter_anisotropic");return n=null!==r?e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:o,precision:h,logarithmicDepthBuffer:c,maxTextures:d,maxVertexTextures:v,maxTextureSize:_,maxCubemapSize:m,maxAttributes:y,maxVertexUniforms:x,maxVaryings:w,maxFragmentUniforms:M,vertexTextures:E,floatFragmentTextures:S,floatVertexTextures:E&&S,maxSamples:l?e.getParameter(36183):0}}function $n(){var e=this,t=null,r=0,n=!1,o=!1,l=new di,h=new ea,f={value:null,needsUpdate:!1};function c(){f.value!==t&&(f.value=t,f.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function d(t,r,n,o){var c=null!==t?t.length:0,d=null;if(0!==c){if(d=f.value,!0!==o||null===d){var v=n+4*c,_=r.matrixWorldInverse;h.getNormalMatrix(_),(null===d||d.length<v)&&(d=new Float32Array(v));for(var i=0,m=n;i!==c;++i,m+=4)l.copy(t[i]).applyMatrix4(_,h),l.normal.toArray(d,m),d[m+3]=l.constant}f.value=d,f.needsUpdate=!0}return e.numPlanes=c,e.numIntersection=0,d}this.uniform=f,this.numPlanes=0,this.numIntersection=0,this.init=function(e,o,l){var h=0!==e.length||o||0!==r||n;return n=o,t=d(e,l,0),r=e.length,h},this.beginShadows=function(){o=!0,d(null)},this.endShadows=function(){o=!1,c()},this.setState=function(e,l,h,v,_,m){if(!n||null===e||0===e.length||o&&!h)o?d(null):c();else{var y=o?0:r,x=4*y,w=_.clippingState||null;f.value=w,w=d(e,v,x,m);for(var i=0;i!==x;++i)w[i]=t[i];_.clippingState=w,this.numIntersection=l?this.numPlanes:0,this.numPlanes+=y}}}function eo(e){var t={};return{get:function(r){if(void 0!==t[r])return t[r];var n;switch(r){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(r)}return null===n&&console.warn("THREE.WebGLRenderer: "+r+" extension not supported."),t[r]=n,n}}}function to(e,t,r){var n=new WeakMap,o=new WeakMap;function l(e){var h=e.target,f=n.get(h);for(var c in null!==f.index&&t.remove(f.index),f.attributes)t.remove(f.attributes[c]);h.removeEventListener("dispose",l),n.delete(h);var d=o.get(f);d&&(t.remove(d),o.delete(f)),r.memory.geometries--}function h(e){var r=[],n=e.index,l=e.attributes.position,h=0;if(null!==n){var f=n.array;h=n.version;for(var i=0,c=f.length;i<c;i+=3){var a=f[i+0],b=f[i+1],d=f[i+2];r.push(a,b,b,d,d,a)}}else{f=l.array;h=l.version;for(i=0,c=f.length/3-1;i<c;i+=3){a=i+0,b=i+1,d=i+2;r.push(a,b,b,d,d,a)}}var v=new(Yi(r)>65535?Hi:zi)(r,1);v.version=h,t.update(v,34963);var _=o.get(e);_&&t.remove(_),o.set(e,v)}return{get:function(object,e){var t=n.get(e);return t||(e.addEventListener("dispose",l),e.isBufferGeometry?t=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new rn).setFromObject(object)),t=e._bufferGeometry),n.set(e,t),r.memory.geometries++,t)},update:function(e){var r=e.index,n=e.attributes;for(var o in null!==r&&t.update(r,34963),n)t.update(n[o],34962);var l=e.morphAttributes;for(var o in l)for(var h=l[o],i=0,f=h.length;i<f;i++)t.update(h[i],34962)},getWireframeAttribute:function(e){var t=o.get(e);if(t){var r=e.index;null!==r&&t.version<r.version&&h(e)}else h(e);return o.get(e)}}}function ro(e,t,r,n){var o,l,h,f=n.isWebGL2;this.setMode=function(e){o=e},this.setIndex=function(e){l=e.type,h=e.bytesPerElement},this.render=function(t,n){e.drawElements(o,n,l,t*h),r.update(n,o)},this.renderInstances=function(n,c,d,v){if(0!==v){var _,m;if(f)_=e,m="drawElementsInstanced";else if(m="drawElementsInstancedANGLE",null===(_=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");_[m](o,d,l,c*h,v),r.update(d,o,v)}}}function ao(e){var t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,r,n){switch(n=n||1,t.calls++,r){case 4:t.triangles+=n*(e/3);break;case 1:t.lines+=n*(e/2);break;case 3:t.lines+=n*(e-1);break;case 2:t.lines+=n*e;break;case 0:t.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function io(a,b){return Math.abs(b[1])-Math.abs(a[1])}function no(e){var t={},r=new Float32Array(8);return{update:function(object,n,o,l){var h=object.morphTargetInfluences,f=void 0===h?0:h.length,c=t[n.id];if(void 0===c){c=[];for(var i=0;i<f;i++)c[i]=[i,0];t[n.id]=c}var d=o.morphTargets&&n.morphAttributes.position,v=o.morphNormals&&n.morphAttributes.normal;for(i=0;i<f;i++){0!==(m=c[i])[1]&&(d&&n.deleteAttribute("morphTarget"+i),v&&n.deleteAttribute("morphNormal"+i))}for(i=0;i<f;i++){(m=c[i])[0]=i,m[1]=h[i]}c.sort(io);var _=0;for(i=0;i<8;i++){var m;if(m=c[i]){var y=m[0],x=m[1];if(x){d&&n.setAttribute("morphTarget"+i,d[y]),v&&n.setAttribute("morphNormal"+i,v[y]),r[i]=x,_+=x;continue}}r[i]=0}var w=n.morphTargetsRelative?1:1-_;l.getUniforms().setValue(e,"morphTargetBaseInfluence",w),l.getUniforms().setValue(e,"morphTargetInfluences",r)}}}function oo(e,t,r,n){var o=new WeakMap;return{update:function(object){var e=n.render.frame,l=object.geometry,h=t.get(object,l);return o.get(h)!==e&&(l.isGeometry&&h.updateFromObject(object),t.update(h),o.set(h,e)),object.isInstancedMesh&&r.update(object.instanceMatrix,34962),h},dispose:function(){o=new WeakMap}}}function so(e,t,r,n,o,l,h,f,c,d){e=void 0!==e?e:[],t=void 0!==t?t:pe,h=void 0!==h?h:Ye,aa.call(this,e,t,r,n,o,l,h,f,c,d),this.flipY=!1}function lo(data,e,t,r){aa.call(this,null),this.image={data:data||null,width:e||1,height:t||1,depth:r||1},this.magFilter=Se,this.minFilter=Se,this.wrapR=Me,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function ho(data,e,t,r){aa.call(this,null),this.image={data:data||null,width:e||1,height:t||1,depth:r||1},this.magFilter=Se,this.minFilter=Se,this.wrapR=Me,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Zn.physical={uniforms:On([Zn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new $r(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Ri(0)},transparency:{value:0}}]),vertexShader:Yn.meshphysical_vert,fragmentShader:Yn.meshphysical_frag},so.prototype=Object.create(aa.prototype),so.prototype.constructor=so,so.prototype.isCubeTexture=!0,Object.defineProperty(so.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}}),lo.prototype=Object.create(aa.prototype),lo.prototype.constructor=lo,lo.prototype.isDataTexture2DArray=!0,ho.prototype=Object.create(aa.prototype),ho.prototype.constructor=ho,ho.prototype.isDataTexture3D=!0;var uo=new aa,fo=new lo,co=new ho,vo=new so,po=[],_o=[],go=new Float32Array(16),mo=new Float32Array(9),yo=new Float32Array(4);function bo(e,t,r){var n=e[0];if(n<=0||n>0)return e;var o=t*r,l=po[o];if(void 0===l&&(l=new Float32Array(o),po[o]=l),0!==t){n.toArray(l,0);for(var i=1,h=0;i!==t;++i)h+=r,e[i].toArray(l,h)}return l}function xo(a,b){if(a.length!==b.length)return!1;for(var i=0,e=a.length;i<e;i++)if(a[i]!==b[i])return!1;return!0}function wo(a,b){for(var i=0,e=b.length;i<e;i++)a[i]=b[i]}function Mo(e,t){var r=_o[t];void 0===r&&(r=new Int32Array(t),_o[t]=r);for(var i=0;i!==t;++i)r[i]=e.allocateTextureUnit();return r}function Eo(e,t){var r=this.cache;r[0]!==t&&(e.uniform1f(this.addr,t),r[0]=t)}function So(e,t){var r=this.cache;if(void 0!==t.x)r[0]===t.x&&r[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(xo(r,t))return;e.uniform2fv(this.addr,t),wo(r,t)}}function To(e,t){var r=this.cache;if(void 0!==t.x)r[0]===t.x&&r[1]===t.y&&r[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else if(void 0!==t.r)r[0]===t.r&&r[1]===t.g&&r[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b);else{if(xo(r,t))return;e.uniform3fv(this.addr,t),wo(r,t)}}function Ao(e,t){var r=this.cache;if(void 0!==t.x)r[0]===t.x&&r[1]===t.y&&r[2]===t.z&&r[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(xo(r,t))return;e.uniform4fv(this.addr,t),wo(r,t)}}function Ro(e,t){var r=this.cache,n=t.elements;if(void 0===n){if(xo(r,t))return;e.uniformMatrix2fv(this.addr,!1,t),wo(r,t)}else{if(xo(r,n))return;yo.set(n),e.uniformMatrix2fv(this.addr,!1,yo),wo(r,n)}}function Co(e,t){var r=this.cache,n=t.elements;if(void 0===n){if(xo(r,t))return;e.uniformMatrix3fv(this.addr,!1,t),wo(r,t)}else{if(xo(r,n))return;mo.set(n),e.uniformMatrix3fv(this.addr,!1,mo),wo(r,n)}}function Lo(e,t){var r=this.cache,n=t.elements;if(void 0===n){if(xo(r,t))return;e.uniformMatrix4fv(this.addr,!1,t),wo(r,t)}else{if(xo(r,n))return;go.set(n),e.uniformMatrix4fv(this.addr,!1,go),wo(r,n)}}function Po(e,t,r){var n=this.cache,o=r.allocateTextureUnit();n[0]!==o&&(e.uniform1i(this.addr,o),n[0]=o),r.safeSetTexture2D(t||uo,o)}function Oo(e,t,r){var n=this.cache,o=r.allocateTextureUnit();n[0]!==o&&(e.uniform1i(this.addr,o),n[0]=o),r.setTexture2DArray(t||fo,o)}function ko(e,t,r){var n=this.cache,o=r.allocateTextureUnit();n[0]!==o&&(e.uniform1i(this.addr,o),n[0]=o),r.setTexture3D(t||co,o)}function Io(e,t,r){var n=this.cache,o=r.allocateTextureUnit();n[0]!==o&&(e.uniform1i(this.addr,o),n[0]=o),r.safeSetTextureCube(t||vo,o)}function No(e,t){var r=this.cache;r[0]!==t&&(e.uniform1i(this.addr,t),r[0]=t)}function Do(e,t){var r=this.cache;xo(r,t)||(e.uniform2iv(this.addr,t),wo(r,t))}function Bo(e,t){var r=this.cache;xo(r,t)||(e.uniform3iv(this.addr,t),wo(r,t))}function Fo(e,t){var r=this.cache;xo(r,t)||(e.uniform4iv(this.addr,t),wo(r,t))}function Uo(e,t){var r=this.cache;r[0]!==t&&(e.uniform1ui(this.addr,t),r[0]=t)}function jo(e,t){e.uniform1fv(this.addr,t)}function Vo(e,t){e.uniform1iv(this.addr,t)}function zo(e,t){e.uniform2iv(this.addr,t)}function Go(e,t){e.uniform3iv(this.addr,t)}function Ho(e,t){e.uniform4iv(this.addr,t)}function Wo(e,t){var data=bo(t,this.size,2);e.uniform2fv(this.addr,data)}function qo(e,t){var data=bo(t,this.size,3);e.uniform3fv(this.addr,data)}function Xo(e,t){var data=bo(t,this.size,4);e.uniform4fv(this.addr,data)}function Yo(e,t){var data=bo(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,data)}function Zo(e,t){var data=bo(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,data)}function Jo(e,t){var data=bo(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,data)}function Ko(e,t,r){var n=t.length,o=Mo(r,n);e.uniform1iv(this.addr,o);for(var i=0;i!==n;++i)r.safeSetTexture2D(t[i]||uo,o[i])}function Qo(e,t,r){var n=t.length,o=Mo(r,n);e.uniform1iv(this.addr,o);for(var i=0;i!==n;++i)r.safeSetTextureCube(t[i]||vo,o[i])}function $o(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Eo;case 35664:return So;case 35665:return To;case 35666:return Ao;case 35674:return Ro;case 35675:return Co;case 35676:return Lo;case 5124:case 35670:return No;case 35667:case 35671:return Do;case 35668:case 35672:return Bo;case 35669:case 35673:return Fo;case 5125:return Uo;case 35678:case 36198:case 36298:case 36306:case 35682:return Po;case 35679:case 36299:case 36307:return ko;case 35680:case 36300:case 36308:case 36293:return Io;case 36289:case 36303:case 36311:case 36292:return Oo}}(t.type)}function es(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return jo;case 35664:return Wo;case 35665:return qo;case 35666:return Xo;case 35674:return Yo;case 35675:return Zo;case 35676:return Jo;case 5124:case 35670:return Vo;case 35667:case 35671:return zo;case 35668:case 35672:return Go;case 35669:case 35673:return Ho;case 35678:case 36198:case 36298:case 36306:case 35682:return Ko;case 35680:case 36300:case 36308:case 36293:return Qo}}(t.type)}function ts(e){this.id=e,this.seq=[],this.map={}}es.prototype.updateCache=function(data){var e=this.cache;data instanceof Float32Array&&e.length!==data.length&&(this.cache=new Float32Array(data.length)),wo(e,data)},ts.prototype.setValue=function(e,t,r){for(var n=this.seq,i=0,o=n.length;i!==o;++i){var u=n[i];u.setValue(e,t[u.id],r)}};var rs=/([\w\d_]+)(\])?(\[|\.)?/g;function as(e,t){e.seq.push(t),e.map[t.id]=t}function is(e,t,r){var path=e.name,n=path.length;for(rs.lastIndex=0;;){var o=rs.exec(path),l=rs.lastIndex,h=o[1],f="]"===o[2],c=o[3];if(f&&(h|=0),void 0===c||"["===c&&l+2===n){as(r,void 0===c?new $o(h,e,t):new es(h,e,t));break}var d=r.map[h];void 0===d&&as(r,d=new ts(h)),r=d}}function ns(e,t){this.seq=[],this.map={};for(var r=e.getProgramParameter(t,35718),i=0;i<r;++i){var n=e.getActiveUniform(t,i);is(n,e.getUniformLocation(t,n.name),this)}}function os(e,t,r){var n=e.createShader(t);return e.shaderSource(n,r),e.compileShader(n),n}ns.prototype.setValue=function(e,t,r,n){var u=this.map[t];void 0!==u&&u.setValue(e,r,n)},ns.prototype.setOptional=function(e,object,t){var r=object[t];void 0!==r&&this.setValue(e,t,r)},ns.upload=function(e,t,r,n){for(var i=0,o=t.length;i!==o;++i){var u=t[i],l=r[u.id];!1!==l.needsUpdate&&u.setValue(e,l.value,n)}},ns.seqWithValue=function(e,t){for(var r=[],i=0,n=e.length;i!==n;++i){var u=e[i];u.id in t&&r.push(u)}return r};var ss=0;function ls(e){switch(e){case fr:return["Linear","( value )"];case cr:return["sRGB","( value )"];case vr:return["RGBE","( value )"];case _r:return["RGBM","( value, 7.0 )"];case gr:return["RGBM","( value, 16.0 )"];case mr:return["RGBD","( value, 256.0 )"];case dr:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case pr:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+e)}}function hs(e,t,r){var n=e.getShaderParameter(t,35713),o=e.getShaderInfoLog(t).trim();return n&&""===o?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+r+"\n"+o+function(e){for(var t=e.split("\n"),i=0;i<t.length;i++)t[i]=i+1+": "+t[i];return t.join("\n")}(e.getShaderSource(t))}function us(e,t){var r=ls(t);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function fs(e,t){var r;switch(t){case he:r="Linear";break;case ue:r="Reinhard";break;case fe:r="Uncharted2";break;case ce:r="OptimizedCineon";break;case de:r="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+t)}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function cs(e){return""!==e}function ds(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function vs(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}var ps=/^[ \t]*#include +<([\w\d./]+)>/gm;function _s(e){return e.replace(ps,gs)}function gs(e,t){var r=Yn[t];if(void 0===r)throw new Error("Can not resolve #include <"+t+">");return _s(r)}var ms=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,ys=/#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;function bs(e){return e.replace(ys,ws).replace(ms,xs)}function xs(e,t,r,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),ws(e,t,r,n)}function ws(e,t,r,n){for(var o="",i=parseInt(t);i<parseInt(r);i++)o+=n.replace(/\[ i \]/g,"[ "+i+" ]").replace(/UNROLLED_LOOP_INDEX/g,i);return o}function Ms(e){var t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Es(e,t,r){var n,o,l,h,f,c=e.getContext(),d=r.defines,v=r.vertexShader,_=r.fragmentShader,m=function(e){var t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===y?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===x?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===w&&(t="SHADOWMAP_TYPE_VSM"),t}(r),M=function(e){var t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case pe:case _e:t="ENVMAP_TYPE_CUBE";break;case be:case xe:t="ENVMAP_TYPE_CUBE_UV";break;case ge:case me:t="ENVMAP_TYPE_EQUIREC";break;case ye:t="ENVMAP_TYPE_SPHERE"}return t}(r),E=function(e){var t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case _e:case me:t="ENVMAP_MODE_REFRACTION"}return t}(r),S=function(e){var t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case ne:t="ENVMAP_BLENDING_MULTIPLY";break;case oe:t="ENVMAP_BLENDING_MIX";break;case se:t="ENVMAP_BLENDING_ADD"}return t}(r),T=e.gammaFactor>0?e.gammaFactor:1,A=r.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(cs).join("\n")}(r),R=function(e){var t=[];for(var r in e){var n=e[r];!1!==n&&t.push("#define "+r+" "+n)}return t.join("\n")}(d),C=c.createProgram();if(r.isRawShaderMaterial?((n=[R].filter(cs).join("\n")).length>0&&(n+="\n"),(o=[A,R].filter(cs).join("\n")).length>0&&(o+="\n")):(n=[Ms(r),"#define SHADER_NAME "+r.shaderName,R,r.instancing?"#define USE_INSTANCING":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+T,"#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+E:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+m:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(cs).join("\n"),o=[A,Ms(r),"#define SHADER_NAME "+r.shaderName,R,r.alphaTest?"#define ALPHATEST "+r.alphaTest+(r.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+T,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+M:"",r.envMap?"#define "+E:"",r.envMap?"#define "+S:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.sheen?"#define USE_SHEEN":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+m:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",r.toneMapping!==le?"#define TONE_MAPPING":"",r.toneMapping!==le?Yn.tonemapping_pars_fragment:"",r.toneMapping!==le?fs("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",r.outputEncoding||r.mapEncoding||r.matcapEncoding||r.envMapEncoding||r.emissiveMapEncoding||r.lightMapEncoding?Yn.encodings_pars_fragment:"",r.mapEncoding?us("mapTexelToLinear",r.mapEncoding):"",r.matcapEncoding?us("matcapTexelToLinear",r.matcapEncoding):"",r.envMapEncoding?us("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMapEncoding?us("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.lightMapEncoding?us("lightMapTexelToLinear",r.lightMapEncoding):"",r.outputEncoding?(l="linearToOutputTexel",h=r.outputEncoding,f=ls(h),"vec4 "+l+"( vec4 value ) { return LinearTo"+f[0]+f[1]+"; }"):"",r.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(cs).join("\n")),v=vs(v=ds(v=_s(v),r),r),_=vs(_=ds(_=_s(_),r),r),v=bs(v),_=bs(_),r.isWebGL2&&!r.isRawShaderMaterial){var L=!1,P=/^\s*#version\s+300\s+es\s*\n/;r.isShaderMaterial&&null!==v.match(P)&&null!==_.match(P)&&(L=!0,v=v.replace(P,""),_=_.replace(P,"")),n=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+n,o=["#version 300 es\n","#define varying in",L?"":"out highp vec4 pc_fragColor;",L?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+o}var O,k,I=o+_,N=os(c,35633,n+v),D=os(c,35632,I);if(c.attachShader(C,N),c.attachShader(C,D),void 0!==r.index0AttributeName?c.bindAttribLocation(C,0,r.index0AttributeName):!0===r.morphTargets&&c.bindAttribLocation(C,0,"position"),c.linkProgram(C),e.debug.checkShaderErrors){var B=c.getProgramInfoLog(C).trim(),F=c.getShaderInfoLog(N).trim(),U=c.getShaderInfoLog(D).trim(),j=!0,V=!0;if(!1===c.getProgramParameter(C,35714)){j=!1;var z=hs(c,N,"vertex"),G=hs(c,D,"fragment");console.error("THREE.WebGLProgram: shader error: ",c.getError(),"35715",c.getProgramParameter(C,35715),"gl.getProgramInfoLog",B,z,G)}else""!==B?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",B):""!==F&&""!==U||(V=!1);V&&(this.diagnostics={runnable:j,programLog:B,vertexShader:{log:F,prefix:n},fragmentShader:{log:U,prefix:o}})}return c.deleteShader(N),c.deleteShader(D),this.getUniforms=function(){return void 0===O&&(O=new ns(c,C)),O},this.getAttributes=function(){return void 0===k&&(k=function(e,t){for(var r={},n=e.getProgramParameter(t,35721),i=0;i<n;i++){var o=e.getActiveAttrib(t,i).name;r[o]=e.getAttribLocation(t,o)}return r}(c,C)),k},this.destroy=function(){c.deleteProgram(C),this.program=void 0},this.name=r.shaderName,this.id=ss++,this.cacheKey=t,this.usedTimes=1,this.program=C,this.vertexShader=N,this.fragmentShader=D,this}function Ss(e,t,r){var n=[],o=r.isWebGL2,l=r.logarithmicDepthBuffer,h=r.floatVertexTextures,f=r.precision,c=r.maxVertexUniforms,d=r.vertexTextures,v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},_=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function m(map){var e;return map?map.isTexture?e=map.encoding:map.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=map.texture.encoding):e=fr,e}this.getParameters=function(n,_,y,x,w,M,object){var T=x.fog,A=n.isMeshStandardMaterial?x.environment:null,R=n.envMap||A,C=v[n.type],L=object.isSkinnedMesh?function(object){var e=object.skeleton.bones;if(h)return 1024;var t=c,r=Math.floor((t-20)/4),n=Math.min(r,e.length);return n<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+n+"."),0):n}(object):0;null!==n.precision&&(f=r.getMaxPrecision(n.precision))!==n.precision&&console.warn("THREE.WebGLProgram.getParameters:",n.precision,"not supported, using",f,"instead.");var P=function(e,t){var r;if(t){var n=Zn[t];r={name:e.type,uniforms:kn.clone(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}}else r={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};return r}(n,C);n.onBeforeCompile(P,e);var O=e.getRenderTarget();return{isWebGL2:o,shaderID:C,shaderName:P.name,uniforms:P.uniforms,vertexShader:P.vertexShader,fragmentShader:P.fragmentShader,defines:n.defines,isRawShaderMaterial:n.isRawShaderMaterial,isShaderMaterial:n.isShaderMaterial,precision:f,instancing:!0===object.isInstancedMesh,supportsVertexTextures:d,outputEncoding:null!==O?m(O.texture):e.outputEncoding,map:!!n.map,mapEncoding:m(n.map),matcap:!!n.matcap,matcapEncoding:m(n.matcap),envMap:!!R,envMapMode:R&&R.mapping,envMapEncoding:m(R),envMapCubeUV:!!R&&(R.mapping===be||R.mapping===xe),lightMap:!!n.lightMap,lightMapEncoding:m(n.lightMap),aoMap:!!n.aoMap,emissiveMap:!!n.emissiveMap,emissiveMapEncoding:m(n.emissiveMap),bumpMap:!!n.bumpMap,normalMap:!!n.normalMap,objectSpaceNormalMap:n.normalMapType===Mr,tangentSpaceNormalMap:n.normalMapType===wr,clearcoatMap:!!n.clearcoatMap,clearcoatRoughnessMap:!!n.clearcoatRoughnessMap,clearcoatNormalMap:!!n.clearcoatNormalMap,displacementMap:!!n.displacementMap,roughnessMap:!!n.roughnessMap,metalnessMap:!!n.metalnessMap,specularMap:!!n.specularMap,alphaMap:!!n.alphaMap,gradientMap:!!n.gradientMap,sheen:!!n.sheen,combine:n.combine,vertexTangents:n.normalMap&&n.vertexTangents,vertexColors:n.vertexColors,vertexUvs:!!(n.map||n.bumpMap||n.normalMap||n.specularMap||n.alphaMap||n.emissiveMap||n.roughnessMap||n.metalnessMap||n.clearcoatMap||n.clearcoatRoughnessMap||n.clearcoatNormalMap||n.displacementMap),uvsVertexOnly:!(n.map||n.bumpMap||n.normalMap||n.specularMap||n.alphaMap||n.emissiveMap||n.roughnessMap||n.metalnessMap||n.clearcoatNormalMap||!n.displacementMap),fog:!!T,useFog:n.fog,fogExp2:T&&T.isFogExp2,flatShading:n.flatShading,sizeAttenuation:n.sizeAttenuation,logarithmicDepthBuffer:l,skinning:n.skinning&&L>0,maxBones:L,useVertexTexture:h,morphTargets:n.morphTargets,morphNormals:n.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:_.directional.length,numPointLights:_.point.length,numSpotLights:_.spot.length,numRectAreaLights:_.rectArea.length,numHemiLights:_.hemi.length,numDirLightShadows:_.directionalShadowMap.length,numPointLightShadows:_.pointShadowMap.length,numSpotLightShadows:_.spotShadowMap.length,numClippingPlanes:w,numClipIntersection:M,dithering:n.dithering,shadowMapEnabled:e.shadowMap.enabled&&y.length>0,shadowMapType:e.shadowMap.type,toneMapping:n.toneMapped?e.toneMapping:le,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:n.premultipliedAlpha,alphaTest:n.alphaTest,doubleSided:n.side===S,flipSided:n.side===E,depthPacking:void 0!==n.depthPacking&&n.depthPacking,index0AttributeName:n.index0AttributeName,extensionDerivatives:n.extensions&&n.extensions.derivatives,extensionFragDepth:n.extensions&&n.extensions.fragDepth,extensionDrawBuffers:n.extensions&&n.extensions.drawBuffers,extensionShaderTextureLOD:n.extensions&&n.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||null!==t.get("EXT_frag_depth"),rendererExtensionDrawBuffers:o||null!==t.get("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||null!==t.get("EXT_shader_texture_lod"),onBeforeCompile:n.onBeforeCompile}},this.getProgramCacheKey=function(t){var r=[];if(t.shaderID?r.push(t.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(var n in t.defines)r.push(n),r.push(t.defines[n]);if(void 0===t.isRawShaderMaterial){for(var i=0;i<_.length;i++)r.push(t[_[i]]);r.push(e.outputEncoding),r.push(e.gammaFactor)}return r.push(t.onBeforeCompile.toString()),r.join()},this.acquireProgram=function(t,r){for(var o,p=0,l=n.length;p<l;p++){var h=n[p];if(h.cacheKey===r){++(o=h).usedTimes;break}}return void 0===o&&(o=new Es(e,r,t),n.push(o)),o},this.releaseProgram=function(e){if(0==--e.usedTimes){var i=n.indexOf(e);n[i]=n[n.length-1],n.pop(),e.destroy()}},this.programs=n}function Ts(){var e=new WeakMap;return{get:function(object){var map=e.get(object);return void 0===map&&(map={},e.set(object,map)),map},remove:function(object){e.delete(object)},update:function(object,t,r){e.get(object)[t]=r},dispose:function(){e=new WeakMap}}}function As(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.program!==b.program?a.program.id-b.program.id:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function Rs(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function Cs(){var e=[],t=0,r=[],n=[],o={id:-1};function l(object,r,n,l,h,f){var c=e[t];return void 0===c?(c={id:object.id,object:object,geometry:r,material:n,program:n.program||o,groupOrder:l,renderOrder:object.renderOrder,z:h,group:f},e[t]=c):(c.id=object.id,c.object=object,c.geometry=r,c.material=n,c.program=n.program||o,c.groupOrder=l,c.renderOrder=object.renderOrder,c.z=h,c.group=f),t++,c}return{opaque:r,transparent:n,init:function(){t=0,r.length=0,n.length=0},push:function(object,e,t,o,h,f){var c=l(object,e,t,o,h,f);(!0===t.transparent?n:r).push(c)},unshift:function(object,e,t,o,h,f){var c=l(object,e,t,o,h,f);(!0===t.transparent?n:r).unshift(c)},finish:function(){for(var i=t,r=e.length;i<r;i++){var n=e[i];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(e,t){r.length>1&&r.sort(e||As),n.length>1&&n.sort(t||Rs)}}}function Ls(){var e=new WeakMap;function t(r){var n=r.target;n.removeEventListener("dispose",t),e.delete(n)}return{get:function(r,n){var o,l=e.get(r);return void 0===l?(o=new Cs,e.set(r,new WeakMap),e.get(r).set(n,o),r.addEventListener("dispose",t)):void 0===(o=l.get(n))&&(o=new Cs,l.set(n,o)),o},dispose:function(){e=new WeakMap}}}function Ps(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var r;switch(t.type){case"DirectionalLight":r={direction:new ua,color:new Ri};break;case"SpotLight":r={position:new ua,direction:new ua,color:new Ri,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":r={position:new ua,color:new Ri,distance:0,decay:0};break;case"HemisphereLight":r={direction:new ua,skyColor:new Ri,groundColor:new Ri};break;case"RectAreaLight":r={color:new Ri,position:new ua,halfWidth:new ua,halfHeight:new ua}}return e[t.id]=r,r}}}var Os=0;function ks(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Is(){for(var e,t=new Ps,r=(e={},{get:function(t){if(void 0!==e[t.id])return e[t.id];var r;switch(t.type){case"DirectionalLight":case"SpotLight":r={shadowBias:0,shadowRadius:1,shadowMapSize:new $r};break;case"PointLight":r={shadowBias:0,shadowRadius:1,shadowMapSize:new $r,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=r,r}}),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},i=0;i<9;i++)n.probe.push(new ua);var o=new ua,l=new ma,h=new ma;return{setup:function(e,f,c){for(var d=0,g=0,b=0,i=0;i<9;i++)n.probe[i].set(0,0,0);var v=0,_=0,m=0,y=0,x=0,w=0,M=0,E=0,S=c.matrixWorldInverse;e.sort(ks),i=0;for(var T=e.length;i<T;i++){var A=e[i],R=A.color,C=A.intensity,L=A.distance,P=A.shadow&&A.shadow.map?A.shadow.map.texture:null;if(A.isAmbientLight)d+=R.r*C,g+=R.g*C,b+=R.b*C;else if(A.isLightProbe)for(var O=0;O<9;O++)n.probe[O].addScaledVector(A.sh.coefficients[O],C);else if(A.isDirectionalLight){if((I=t.get(A)).color.copy(A.color).multiplyScalar(A.intensity),I.direction.setFromMatrixPosition(A.matrixWorld),o.setFromMatrixPosition(A.target.matrixWorld),I.direction.sub(o),I.direction.transformDirection(S),A.castShadow){var shadow=A.shadow;(k=r.get(A)).shadowBias=shadow.bias,k.shadowRadius=shadow.radius,k.shadowMapSize=shadow.mapSize,n.directionalShadow[v]=k,n.directionalShadowMap[v]=P,n.directionalShadowMatrix[v]=A.shadow.matrix,w++}n.directional[v]=I,v++}else if(A.isSpotLight){if((I=t.get(A)).position.setFromMatrixPosition(A.matrixWorld),I.position.applyMatrix4(S),I.color.copy(R).multiplyScalar(C),I.distance=L,I.direction.setFromMatrixPosition(A.matrixWorld),o.setFromMatrixPosition(A.target.matrixWorld),I.direction.sub(o),I.direction.transformDirection(S),I.coneCos=Math.cos(A.angle),I.penumbraCos=Math.cos(A.angle*(1-A.penumbra)),I.decay=A.decay,A.castShadow){shadow=A.shadow;(k=r.get(A)).shadowBias=shadow.bias,k.shadowRadius=shadow.radius,k.shadowMapSize=shadow.mapSize,n.spotShadow[m]=k,n.spotShadowMap[m]=P,n.spotShadowMatrix[m]=A.shadow.matrix,E++}n.spot[m]=I,m++}else if(A.isRectAreaLight){(I=t.get(A)).color.copy(R).multiplyScalar(C),I.position.setFromMatrixPosition(A.matrixWorld),I.position.applyMatrix4(S),h.identity(),l.copy(A.matrixWorld),l.premultiply(S),h.extractRotation(l),I.halfWidth.set(.5*A.width,0,0),I.halfHeight.set(0,.5*A.height,0),I.halfWidth.applyMatrix4(h),I.halfHeight.applyMatrix4(h),n.rectArea[y]=I,y++}else if(A.isPointLight){if((I=t.get(A)).position.setFromMatrixPosition(A.matrixWorld),I.position.applyMatrix4(S),I.color.copy(A.color).multiplyScalar(A.intensity),I.distance=A.distance,I.decay=A.decay,A.castShadow){var k;shadow=A.shadow;(k=r.get(A)).shadowBias=shadow.bias,k.shadowRadius=shadow.radius,k.shadowMapSize=shadow.mapSize,k.shadowCameraNear=shadow.camera.near,k.shadowCameraFar=shadow.camera.far,n.pointShadow[_]=k,n.pointShadowMap[_]=P,n.pointShadowMatrix[_]=A.shadow.matrix,M++}n.point[_]=I,_++}else if(A.isHemisphereLight){var I;(I=t.get(A)).direction.setFromMatrixPosition(A.matrixWorld),I.direction.transformDirection(S),I.direction.normalize(),I.skyColor.copy(A.color).multiplyScalar(C),I.groundColor.copy(A.groundColor).multiplyScalar(C),n.hemi[x]=I,x++}}n.ambient[0]=d,n.ambient[1]=g,n.ambient[2]=b;var N=n.hash;N.directionalLength===v&&N.pointLength===_&&N.spotLength===m&&N.rectAreaLength===y&&N.hemiLength===x&&N.numDirectionalShadows===w&&N.numPointShadows===M&&N.numSpotShadows===E||(n.directional.length=v,n.spot.length=m,n.rectArea.length=y,n.point.length=_,n.hemi.length=x,n.directionalShadow.length=w,n.directionalShadowMap.length=w,n.pointShadow.length=M,n.pointShadowMap.length=M,n.spotShadow.length=E,n.spotShadowMap.length=E,n.directionalShadowMatrix.length=w,n.pointShadowMatrix.length=M,n.spotShadowMatrix.length=E,N.directionalLength=v,N.pointLength=_,N.spotLength=m,N.rectAreaLength=y,N.hemiLength=x,N.numDirectionalShadows=w,N.numPointShadows=M,N.numSpotShadows=E,n.version=Os++)},state:n}}function Ns(){var e=new Is,t=[],r=[];return{init:function(){t.length=0,r.length=0},state:{lightsArray:t,shadowsArray:r,lights:e},setupLights:function(n){e.setup(t,r,n)},pushLight:function(e){t.push(e)},pushShadow:function(e){r.push(e)}}}function Ds(){var e=new WeakMap;function t(r){var n=r.target;n.removeEventListener("dispose",t),e.delete(n)}return{get:function(r,n){var o;return!1===e.has(r)?(o=new Ns,e.set(r,new WeakMap),e.get(r).set(n,o),r.addEventListener("dispose",t)):!1===e.get(r).has(n)?(o=new Ns,e.get(r).set(n,o)):o=e.get(r).get(n),o},dispose:function(){e=new WeakMap}}}function Bs(e){Ii.call(this),this.type="MeshDepthMaterial",this.depthPacking=yr,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}function Fs(e){Ii.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new ua,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}Bs.prototype=Object.create(Ii.prototype),Bs.prototype.constructor=Bs,Bs.prototype.isMeshDepthMaterial=!0,Bs.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.depthPacking=source.depthPacking,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.map=source.map,this.alphaMap=source.alphaMap,this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this},Fs.prototype=Object.create(Ii.prototype),Fs.prototype.constructor=Fs,Fs.prototype.isMeshDistanceMaterial=!0,Fs.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.referencePosition.copy(source.referencePosition),this.nearDistance=source.nearDistance,this.farDistance=source.farDistance,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.map=source.map,this.alphaMap=source.alphaMap,this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this};function Us(e,t,r){var n=new zn,o=new $r,l=new $r,h=new ia,f=[],c=[],d={},v={0:E,1:M,2:S},_=new In({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new $r},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),m=_.clone();m.defines.HORIZONAL_PASS=1;var x=new rn;x.setAttribute("position",new Bi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var T=new xn(x,_),A=this;function C(shadow,r){var n=t.update(T);_.uniforms.shadow_pass.value=shadow.map.texture,_.uniforms.resolution.value=shadow.mapSize,_.uniforms.radius.value=shadow.radius,e.setRenderTarget(shadow.mapPass),e.clear(),e.renderBufferDirect(r,null,n,_,T,null),m.uniforms.shadow_pass.value=shadow.mapPass.texture,m.uniforms.resolution.value=shadow.mapSize,m.uniforms.radius.value=shadow.radius,e.setRenderTarget(shadow.map),e.clear(),e.renderBufferDirect(r,null,n,m,T,null)}function L(e,t,r){var n=e<<0|t<<1|r<<2,o=f[n];return void 0===o&&(o=new Bs({depthPacking:xr,morphTargets:e,skinning:t}),f[n]=o),o}function P(e,t,r){var n=e<<0|t<<1|r<<2,o=c[n];return void 0===o&&(o=new Fs({morphTargets:e,skinning:t}),c[n]=o),o}function O(object,t,r,n,o,l,h){var f=null,c=L,_=object.customDepthMaterial;if(!0===n.isPointLight&&(c=P,_=object.customDistanceMaterial),void 0===_){var m=!1;!0===r.morphTargets&&(m=t.morphAttributes&&t.morphAttributes.position&&t.morphAttributes.position.length>0);var y=!1;!0===object.isSkinnedMesh&&(!0===r.skinning?y=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",object)),f=c(m,y,!0===object.isInstancedMesh)}else f=_;if(e.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){var x=f.uuid,M=r.uuid,E=d[x];void 0===E&&(E={},d[x]=E);var S=E[M];void 0===S&&(S=f.clone(),E[M]=S),f=S}return f.visible=r.visible,f.wireframe=r.wireframe,f.side=h===w?null!==r.shadowSide?r.shadowSide:r.side:null!==r.shadowSide?r.shadowSide:v[r.side],f.clipShadows=r.clipShadows,f.clippingPlanes=r.clippingPlanes,f.clipIntersection=r.clipIntersection,f.wireframeLinewidth=r.wireframeLinewidth,f.linewidth=r.linewidth,!0===n.isPointLight&&!0===f.isMeshDistanceMaterial&&(f.referencePosition.setFromMatrixPosition(n.matrixWorld),f.nearDistance=o,f.farDistance=l),f}function k(object,r,o,l,h){if(!1!==object.visible){if(object.layers.test(r.layers)&&(object.isMesh||object.isLine||object.isPoints)&&(object.castShadow||object.receiveShadow&&h===w)&&(!object.frustumCulled||n.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,object.matrixWorld);var f=t.update(object),c=object.material;if(Array.isArray(c))for(var d=f.groups,v=0,_=d.length;v<_;v++){var m=d[v],y=c[m.materialIndex];if(y&&y.visible){var x=O(object,f,y,l,o.near,o.far,h);e.renderBufferDirect(o,null,f,x,object,m)}}else if(c.visible){x=O(object,f,c,l,o.near,o.far,h);e.renderBufferDirect(o,null,f,x,object,null)}}for(var M=object.children,i=0,E=M.length;i<E;i++)k(M[i],r,o,l,h)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=y,this.render=function(t,f,c){if(!1!==A.enabled&&(!1!==A.autoUpdate||!1!==A.needsUpdate)&&0!==t.length){var d=e.getRenderTarget(),v=e.getActiveCubeFace(),_=e.getActiveMipmapLevel(),m=e.state;m.setBlending(R),m.buffers.color.setClear(1,1,1,1),m.buffers.depth.setTest(!0),m.setScissorTest(!1);for(var i=0,y=t.length;i<y;i++){var x=t[i],shadow=x.shadow;if(void 0!==shadow){o.copy(shadow.mapSize);var M=shadow.getFrameExtents();if(o.multiply(M),l.copy(shadow.mapSize),(o.x>r||o.y>r)&&(o.x>r&&(l.x=Math.floor(r/M.x),o.x=l.x*M.x,shadow.mapSize.x=l.x),o.y>r&&(l.y=Math.floor(r/M.y),o.y=l.y*M.y,shadow.mapSize.y=l.y)),null===shadow.map&&!shadow.isPointLightShadow&&this.type===w){var E={minFilter:Le,magFilter:Le,format:Ze};shadow.map=new na(o.x,o.y,E),shadow.map.texture.name=x.name+".shadowMap",shadow.mapPass=new na(o.x,o.y,E),shadow.camera.updateProjectionMatrix()}if(null===shadow.map){E={minFilter:Se,magFilter:Se,format:Ze};shadow.map=new na(o.x,o.y,E),shadow.map.texture.name=x.name+".shadowMap",shadow.camera.updateProjectionMatrix()}e.setRenderTarget(shadow.map),e.clear();for(var S=shadow.getViewportCount(),T=0;T<S;T++){var L=shadow.getViewport(T);h.set(l.x*L.x,l.y*L.y,l.x*L.z,l.y*L.w),m.viewport(h),shadow.updateMatrices(x,T),n=shadow.getFrustum(),k(f,c,shadow.camera,x,this.type)}shadow.isPointLightShadow||this.type!==w||C(shadow,c)}else console.warn("THREE.WebGLShadowMap:",x,"has no shadow.")}A.needsUpdate=!1,e.setRenderTarget(d,v,_)}}}function js(e,t,r){var n=r.isWebGL2;var o=new function(){var t=!1,r=new ia,n=null,o=new ia(0,0,0,0);return{setMask:function(r){n===r||t||(e.colorMask(r,r,r,r),n=r)},setLocked:function(e){t=e},setClear:function(t,g,b,a,n){!0===n&&(t*=a,g*=a,b*=a),r.set(t,g,b,a),!1===o.equals(r)&&(e.clearColor(t,g,b,a),o.copy(r))},reset:function(){t=!1,n=null,o.set(-1,0,0,0)}}},l=new function(){var t=!1,r=null,n=null,o=null;return{setTest:function(e){e?Ae(2929):Re(2929)},setMask:function(n){r===n||t||(e.depthMask(n),r=n)},setFunc:function(t){if(n!==t){if(t)switch(t){case K:e.depthFunc(512);break;case Q:e.depthFunc(519);break;case $:e.depthFunc(513);break;case ee:e.depthFunc(515);break;case te:e.depthFunc(514);break;case re:e.depthFunc(518);break;case ae:e.depthFunc(516);break;case ie:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);n=t}},setLocked:function(e){t=e},setClear:function(t){o!==t&&(e.clearDepth(t),o=t)},reset:function(){t=!1,r=null,n=null,o=null}}},d=new function(){var t=!1,r=null,n=null,o=null,l=null,h=null,f=null,c=null,d=null;return{setTest:function(e){t||(e?Ae(2960):Re(2960))},setMask:function(n){r===n||t||(e.stencilMask(n),r=n)},setFunc:function(t,r,h){n===t&&o===r&&l===h||(e.stencilFunc(t,r,h),n=t,o=r,l=h)},setOp:function(t,r,n){h===t&&f===r&&c===n||(e.stencilOp(t,r,n),h=t,f=r,c=n)},setLocked:function(e){t=e},setClear:function(t){d!==t&&(e.clearStencil(t),d=t)},reset:function(){t=!1,r=null,n=null,o=null,l=null,h=null,f=null,c=null,d=null}}},v=e.getParameter(34921),_=new Uint8Array(v),m=new Uint8Array(v),y=new Uint8Array(v),x={},w=null,M=null,T=null,A=null,ne=null,oe=null,se=null,le=null,he=null,ue=!1,fe=null,ce=null,de=null,ve=null,pe=null,_e=e.getParameter(35661),ge=!1,me=0,ye=e.getParameter(7938);-1!==ye.indexOf("WebGL")?(me=parseFloat(/^WebGL\ ([0-9])/.exec(ye)[1]),ge=me>=1):-1!==ye.indexOf("OpenGL ES")&&(me=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(ye)[1]),ge=me>=2);var be=null,xe={},we=new ia,Me=new ia;function Ee(t,r,n){var data=new Uint8Array(4),o=e.createTexture();e.bindTexture(t,o),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(var i=0;i<n;i++)e.texImage2D(r+i,0,6408,1,1,0,6408,5121,data);return o}var Se={};function Te(r,o){(_[r]=1,0===m[r]&&(e.enableVertexAttribArray(r),m[r]=1),y[r]!==o)&&((n?e:t.get("ANGLE_instanced_arrays"))[n?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](r,o),y[r]=o)}function Ae(t){!0!==x[t]&&(e.enable(t),x[t]=!0)}function Re(t){!1!==x[t]&&(e.disable(t),x[t]=!1)}Se[3553]=Ee(3553,3553,1),Se[34067]=Ee(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),d.setClear(0),Ae(2929),l.setFunc(ee),ke(!1),Ie(f),Ae(2884),Oe(R);var Ce={[I]:32774,[N]:32778,[D]:32779};if(n)Ce[B]=32775,Ce[F]=32776;else{var Le=t.get("EXT_blend_minmax");null!==Le&&(Ce[B]=Le.MIN_EXT,Ce[F]=Le.MAX_EXT)}var Pe={[U]:0,[j]:1,[V]:768,[G]:770,[J]:776,[Y]:774,[W]:772,[z]:769,[H]:771,[Z]:775,[X]:773};function Oe(t,r,n,o,l,h,f,c){if(t!==R){if(M||(Ae(3042),M=!0),t===k)l=l||r,h=h||n,f=f||o,r===A&&l===se||(e.blendEquationSeparate(Ce[r],Ce[l]),A=r,se=l),n===ne&&o===oe&&h===le&&f===he||(e.blendFuncSeparate(Pe[n],Pe[o],Pe[h],Pe[f]),ne=n,oe=o,le=h,he=f),T=t,ue=null;else if(t!==T||c!==ue){if(A===I&&se===I||(e.blendEquation(32774),A=I,se=I),c)switch(t){case C:e.blendFuncSeparate(1,771,1,771);break;case L:e.blendFunc(1,1);break;case P:e.blendFuncSeparate(0,0,769,771);break;case O:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case C:e.blendFuncSeparate(770,771,1,771);break;case L:e.blendFunc(770,1);break;case P:e.blendFunc(0,769);break;case O:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}ne=null,oe=null,le=null,he=null,T=t,ue=c}}else M&&(Re(3042),M=!1)}function ke(t){fe!==t&&(t?e.frontFace(2304):e.frontFace(2305),fe=t)}function Ie(t){t!==h?(Ae(2884),t!==ce&&(t===f?e.cullFace(1029):t===c?e.cullFace(1028):e.cullFace(1032))):Re(2884),ce=t}function Ne(t,r,n){t?(Ae(32823),ve===r&&pe===n||(e.polygonOffset(r,n),ve=r,pe=n)):Re(32823)}function De(t){void 0===t&&(t=33984+_e-1),be!==t&&(e.activeTexture(t),be=t)}return{buffers:{color:o,depth:l,stencil:d},initAttributes:function(){for(var i=0,e=_.length;i<e;i++)_[i]=0},enableAttribute:function(e){Te(e,0)},enableAttributeAndDivisor:Te,disableUnusedAttributes:function(){for(var i=0,t=m.length;i!==t;++i)m[i]!==_[i]&&(e.disableVertexAttribArray(i),m[i]=0)},vertexAttribPointer:function(t,r,o,l,h,f){!0!==n||5124!==o&&5125!==o?e.vertexAttribPointer(t,r,o,l,h,f):e.vertexAttribIPointer(t,r,o,l,h,f)},enable:Ae,disable:Re,useProgram:function(t){return w!==t&&(e.useProgram(t),w=t,!0)},setBlending:Oe,setMaterial:function(e,t){e.side===S?Re(2884):Ae(2884);var r=e.side===E;t&&(r=!r),ke(r),e.blending===C&&!1===e.transparent?Oe(R):Oe(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),l.setFunc(e.depthFunc),l.setTest(e.depthTest),l.setMask(e.depthWrite),o.setMask(e.colorWrite);var n=e.stencilWrite;d.setTest(n),n&&(d.setMask(e.stencilWriteMask),d.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),d.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Ne(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:ke,setCullFace:Ie,setLineWidth:function(t){t!==de&&(ge&&e.lineWidth(t),de=t)},setPolygonOffset:Ne,setScissorTest:function(e){e?Ae(3089):Re(3089)},activeTexture:De,bindTexture:function(t,r){null===be&&De();var n=xe[be];void 0===n&&(n={type:void 0,texture:void 0},xe[be]=n),n.type===t&&n.texture===r||(e.bindTexture(t,r||Se[t]),n.type=t,n.texture=r)},unbindTexture:function(){var t=xe[be];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===we.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),we.copy(t))},viewport:function(t){!1===Me.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),Me.copy(t))},reset:function(){for(var i=0;i<m.length;i++)1===m[i]&&(e.disableVertexAttribArray(i),m[i]=0);x={},be=null,xe={},w=null,T=null,fe=null,ce=null,o.reset(),l.reset(),d.reset()}}}function Vs(e,t,r,n,o,l,h){var f,c=o.isWebGL2,d=o.maxTextures,v=o.maxCubemapSize,_=o.maxTextureSize,m=o.maxSamples,y=new WeakMap,x=!1;try{x="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function w(e,t){return x?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function M(image,e,t,r){var n=1;if((image.width>r||image.height>r)&&(n=r/Math.max(image.width,image.height)),n<1||!0===e){if("undefined"!=typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap){var o=e?Qr.floorPowerOfTwo:Math.floor,l=o(n*image.width),h=o(n*image.height);void 0===f&&(f=w(l,h));var canvas=t?w(l,h):f;return canvas.width=l,canvas.height=h,canvas.getContext("2d").drawImage(image,0,0,l,h),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+image.width+"x"+image.height+") to ("+l+"x"+h+")."),canvas}return"data"in image&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+image.width+"x"+image.height+")."),image}return image}function E(image){return Qr.isPowerOfTwo(image.width)&&Qr.isPowerOfTwo(image.height)}function S(e,t){return e.generateMipmaps&&t&&e.minFilter!==Se&&e.minFilter!==Le}function T(t,r,o,l){e.generateMipmap(t),n.get(r).__maxMipLevel=Math.log(Math.max(o,l))*Math.LOG2E}function A(r,n,o){if(!1===c)return n;if(null!==r){if(void 0!==e[r])return e[r];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+r+"'")}var l=n;return 6403===n&&(5126===o&&(l=33326),5131===o&&(l=33325),5121===o&&(l=33321)),6407===n&&(5126===o&&(l=34837),5131===o&&(l=34843),5121===o&&(l=32849)),6408===n&&(5126===o&&(l=34836),5131===o&&(l=34842),5121===o&&(l=32856)),33325!==l&&33326!==l&&34842!==l&&34836!==l||t.get("EXT_color_buffer_float"),l}function R(e){return e===Se||e===Te||e===Re?9728:9729}function C(t){var r=t.target;r.removeEventListener("dispose",C),function(t){var r=n.get(t);if(void 0===r.__webglInit)return;e.deleteTexture(r.__webglTexture),n.remove(t)}(r),r.isVideoTexture&&y.delete(r),h.memory.textures--}function L(t){var r=t.target;r.removeEventListener("dispose",L),function(t){var r=n.get(t),o=n.get(t.texture);if(!t)return;void 0!==o.__webglTexture&&e.deleteTexture(o.__webglTexture);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(var i=0;i<6;i++)e.deleteFramebuffer(r.__webglFramebuffer[i]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[i]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&e.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer);n.remove(t.texture),n.remove(t)}(r),h.memory.textures--}var P=0;function O(e,slot){var t=n.get(e);if(e.isVideoTexture&&function(e){var t=h.render.frame;y.get(e)!==t&&(y.set(e,t),e.update())}(e),e.version>0&&t.__version!==e.version){var image=e.image;if(void 0===image)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==image.complete)return void U(t,e,slot);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}r.activeTexture(33984+slot),r.bindTexture(3553,t.__webglTexture)}function k(t,slot){if(6===t.image.length){var o=n.get(t);if(t.version>0&&o.__version!==t.version){F(o,t),r.activeTexture(33984+slot),r.bindTexture(34067,o.__webglTexture),e.pixelStorei(37440,t.flipY);for(var h=t&&(t.isCompressedTexture||t.image[0].isCompressedTexture),f=t.image[0]&&t.image[0].isDataTexture,d=[],i=0;i<6;i++)d[i]=h||f?f?t.image[i].image:t.image[i]:M(t.image[i],!1,!0,v);var _,image=d[0],m=E(image)||c,y=l.convert(t.format),x=l.convert(t.type),w=A(t.internalFormat,y,x);if(B(34067,t,m),h){for(i=0;i<6;i++){_=d[i].mipmaps;for(var R=0;R<_.length;R++){var C=_[R];t.format!==Ze&&t.format!==Ye?null!==y?r.compressedTexImage2D(34069+i,R,w,C.width,C.height,0,C.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):r.texImage2D(34069+i,R,w,C.width,C.height,0,y,x,C.data)}}o.__maxMipLevel=_.length-1}else{_=t.mipmaps;for(i=0;i<6;i++)if(f){r.texImage2D(34069+i,0,w,d[i].width,d[i].height,0,y,x,d[i].data);for(R=0;R<_.length;R++){var L=(C=_[R]).image[i].image;r.texImage2D(34069+i,R+1,w,L.width,L.height,0,y,x,L.data)}}else{r.texImage2D(34069+i,0,w,y,x,d[i]);for(R=0;R<_.length;R++){C=_[R];r.texImage2D(34069+i,R+1,w,y,x,C.image[i])}}o.__maxMipLevel=_.length}S(t,m)&&T(34067,t,image.width,image.height),o.__version=t.version,t.onUpdate&&t.onUpdate(t)}else r.activeTexture(33984+slot),r.bindTexture(34067,o.__webglTexture)}}function I(e,slot){r.activeTexture(33984+slot),r.bindTexture(34067,n.get(e).__webglTexture)}var N={[we]:10497,[Me]:33071,[Ee]:33648},D={[Se]:9728,[Te]:9984,[Re]:9986,[Le]:9729,[Pe]:9985,[ke]:9987};function B(r,l,h){h?(e.texParameteri(r,10242,N[l.wrapS]),e.texParameteri(r,10243,N[l.wrapT]),32879!==r&&35866!==r||e.texParameteri(r,32882,N[l.wrapR]),e.texParameteri(r,10240,D[l.magFilter]),e.texParameteri(r,10241,D[l.minFilter])):(e.texParameteri(r,10242,33071),e.texParameteri(r,10243,33071),32879!==r&&35866!==r||e.texParameteri(r,32882,33071),l.wrapS===Me&&l.wrapT===Me||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(r,10240,R(l.magFilter)),e.texParameteri(r,10241,R(l.minFilter)),l.minFilter!==Se&&l.minFilter!==Le&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));var f=t.get("EXT_texture_filter_anisotropic");if(f){if(l.type===Ve&&null===t.get("OES_texture_float_linear"))return;if(l.type===ze&&null===(c||t.get("OES_texture_half_float_linear")))return;(l.anisotropy>1||n.get(l).__currentAnisotropy)&&(e.texParameterf(r,f.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(l.anisotropy,o.getMaxAnisotropy())),n.get(l).__currentAnisotropy=l.anisotropy)}}function F(t,r){void 0===t.__webglInit&&(t.__webglInit=!0,r.addEventListener("dispose",C),t.__webglTexture=e.createTexture(),h.memory.textures++)}function U(t,n,slot){var o=3553;n.isDataTexture2DArray&&(o=35866),n.isDataTexture3D&&(o=32879),F(t,n),r.activeTexture(33984+slot),r.bindTexture(o,t.__webglTexture),e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment);var h=function(e){return!c&&(e.wrapS!==Me||e.wrapT!==Me||e.minFilter!==Se&&e.minFilter!==Le)}(n)&&!1===E(n.image),image=M(n.image,h,!1,_),f=E(image)||c,d=l.convert(n.format),v=l.convert(n.type),m=A(n.internalFormat,d,v);B(o,n,f);var y,x=n.mipmaps;if(n.isDepthTexture)m=6402,c?m=n.type===Ve?36012:n.type===je?33190:n.type===qe?35056:33189:n.type===Ve&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===$e&&6402===m&&n.type!==Fe&&n.type!==je&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=Fe,v=l.convert(n.type)),n.format===et&&6402===m&&(m=34041,n.type!==qe&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=qe,v=l.convert(n.type))),r.texImage2D(3553,0,m,image.width,image.height,0,d,v,null);else if(n.isDataTexture)if(x.length>0&&f){for(var i=0,w=x.length;i<w;i++)y=x[i],r.texImage2D(3553,i,m,y.width,y.height,0,d,v,y.data);n.generateMipmaps=!1,t.__maxMipLevel=x.length-1}else r.texImage2D(3553,0,m,image.width,image.height,0,d,v,image.data),t.__maxMipLevel=0;else if(n.isCompressedTexture){for(i=0,w=x.length;i<w;i++)y=x[i],n.format!==Ze&&n.format!==Ye?null!==d?r.compressedTexImage2D(3553,i,m,y.width,y.height,0,y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):r.texImage2D(3553,i,m,y.width,y.height,0,d,v,y.data);t.__maxMipLevel=x.length-1}else if(n.isDataTexture2DArray)r.texImage3D(35866,0,m,image.width,image.height,image.depth,0,d,v,image.data),t.__maxMipLevel=0;else if(n.isDataTexture3D)r.texImage3D(32879,0,m,image.width,image.height,image.depth,0,d,v,image.data),t.__maxMipLevel=0;else if(x.length>0&&f){for(i=0,w=x.length;i<w;i++)y=x[i],r.texImage2D(3553,i,m,d,v,y);n.generateMipmaps=!1,t.__maxMipLevel=x.length-1}else r.texImage2D(3553,0,m,d,v,image),t.__maxMipLevel=0;S(n,f)&&T(o,n,image.width,image.height),t.__version=n.version,n.onUpdate&&n.onUpdate(n)}function j(t,o,h,f){var c=l.convert(o.texture.format),d=l.convert(o.texture.type),v=A(o.texture.internalFormat,c,d);r.texImage2D(f,0,v,o.width,o.height,0,c,d,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,h,f,n.get(o.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function V(t,r,n){if(e.bindRenderbuffer(36161,t),r.depthBuffer&&!r.stencilBuffer){var o=33189;if(n){var h=r.depthTexture;h&&h.isDepthTexture&&(h.type===Ve?o=36012:h.type===je&&(o=33190));var f=G(r);e.renderbufferStorageMultisample(36161,f,o,r.width,r.height)}else e.renderbufferStorage(36161,o,r.width,r.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(r.depthBuffer&&r.stencilBuffer){if(n){f=G(r);e.renderbufferStorageMultisample(36161,f,35056,r.width,r.height)}else e.renderbufferStorage(36161,34041,r.width,r.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{var c=l.convert(r.texture.format),d=l.convert(r.texture.type);o=A(r.texture.internalFormat,c,d);if(n){f=G(r);e.renderbufferStorageMultisample(36161,f,o,r.width,r.height)}else e.renderbufferStorage(36161,o,r.width,r.height)}e.bindRenderbuffer(36161,null)}function z(t){var r=n.get(t),o=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(o)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),O(r.depthTexture,0);var o=n.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===$e)e.framebufferTexture2D(36160,36096,3553,o,0);else{if(r.depthTexture.format!==et)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,o,0)}}(r.__webglFramebuffer,t)}else if(o){r.__webglDepthbuffer=[];for(var i=0;i<6;i++)e.bindFramebuffer(36160,r.__webglFramebuffer[i]),r.__webglDepthbuffer[i]=e.createRenderbuffer(),V(r.__webglDepthbuffer[i],t,!1)}else e.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),V(r.__webglDepthbuffer,t,!1);e.bindFramebuffer(36160,null)}function G(e){return c&&e.isWebGLMultisampleRenderTarget?Math.min(m,e.samples):0}var H=!1,W=!1;this.allocateTextureUnit=function(){var e=P;return e>=d&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+d),P+=1,e},this.resetTextureUnits=function(){P=0},this.setTexture2D=O,this.setTexture2DArray=function(e,slot){var t=n.get(e);e.version>0&&t.__version!==e.version?U(t,e,slot):(r.activeTexture(33984+slot),r.bindTexture(35866,t.__webglTexture))},this.setTexture3D=function(e,slot){var t=n.get(e);e.version>0&&t.__version!==e.version?U(t,e,slot):(r.activeTexture(33984+slot),r.bindTexture(32879,t.__webglTexture))},this.setTextureCube=k,this.setTextureCubeDynamic=I,this.setupRenderTarget=function(t){var o=n.get(t),f=n.get(t.texture);t.addEventListener("dispose",L),f.__webglTexture=e.createTexture(),h.memory.textures++;var d=!0===t.isWebGLCubeRenderTarget,v=!0===t.isWebGLMultisampleRenderTarget,_=E(t)||c;if(!c||t.texture.format!==Ye||t.texture.type!==Ve&&t.texture.type!==ze||(t.texture.format=Ze,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),d){o.__webglFramebuffer=[];for(var i=0;i<6;i++)o.__webglFramebuffer[i]=e.createFramebuffer()}else if(o.__webglFramebuffer=e.createFramebuffer(),v)if(c){o.__webglMultisampledFramebuffer=e.createFramebuffer(),o.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,o.__webglColorRenderbuffer);var m=l.convert(t.texture.format),y=l.convert(t.texture.type),x=A(t.texture.internalFormat,m,y),w=G(t);e.renderbufferStorageMultisample(36161,w,x,t.width,t.height),e.bindFramebuffer(36160,o.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,o.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(o.__webglDepthRenderbuffer=e.createRenderbuffer(),V(o.__webglDepthRenderbuffer,t,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(d){r.bindTexture(34067,f.__webglTexture),B(34067,t.texture,_);for(i=0;i<6;i++)j(o.__webglFramebuffer[i],t,36064,34069+i);S(t.texture,_)&&T(34067,t.texture,t.width,t.height),r.bindTexture(34067,null)}else r.bindTexture(3553,f.__webglTexture),B(3553,t.texture,_),j(o.__webglFramebuffer,t,36064,3553),S(t.texture,_)&&T(3553,t.texture,t.width,t.height),r.bindTexture(3553,null);t.depthBuffer&&z(t)},this.updateRenderTargetMipmap=function(e){var t=e.texture;if(S(t,E(e)||c)){var o=e.isWebGLCubeRenderTarget?34067:3553,l=n.get(t).__webglTexture;r.bindTexture(o,l),T(o,t,e.width,e.height),r.bindTexture(o,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(c){var r=n.get(t);e.bindFramebuffer(36008,r.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,r.__webglFramebuffer);var o=t.width,l=t.height,mask=16384;t.depthBuffer&&(mask|=256),t.stencilBuffer&&(mask|=1024),e.blitFramebuffer(0,0,o,l,0,0,o,l,mask,9728),e.bindFramebuffer(36160,r.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,slot){e&&e.isWebGLRenderTarget&&(!1===H&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),H=!0),e=e.texture),O(e,slot)},this.safeSetTextureCube=function(e,slot){e&&e.isWebGLCubeRenderTarget&&(!1===W&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),W=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?k(e,slot):I(e,slot)}}function zs(e,t,r){var n=r.isWebGL2;return{convert:function(p){var e;if(p===Ne)return 5121;if(p===Ge)return 32819;if(p===He)return 32820;if(p===We)return 33635;if(p===De)return 5120;if(p===Be)return 5122;if(p===Fe)return 5123;if(p===Ue)return 5124;if(p===je)return 5125;if(p===Ve)return 5126;if(p===ze)return n?5131:null!==(e=t.get("OES_texture_half_float"))?e.HALF_FLOAT_OES:null;if(p===Xe)return 6406;if(p===Ye)return 6407;if(p===Ze)return 6408;if(p===Je)return 6409;if(p===Ke)return 6410;if(p===$e)return 6402;if(p===et)return 34041;if(p===tt)return 6403;if(p===at)return 36244;if(p===it)return 33319;if(p===nt)return 33320;if(p===ot)return 36248;if(p===st)return 36249;if(p===lt||p===ht||p===ut||p===ft){if(null===(e=t.get("WEBGL_compressed_texture_s3tc")))return null;if(p===lt)return e.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===ht)return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===ut)return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===ft)return e.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(p===ct||p===vt||p===pt||p===_t){if(null===(e=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(p===ct)return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(p===vt)return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(p===pt)return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(p===_t)return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(p===gt)return null!==(e=t.get("WEBGL_compressed_texture_etc1"))?e.COMPRESSED_RGB_ETC1_WEBGL:null;if((p===mt||p===yt)&&null!==(e=t.get("WEBGL_compressed_texture_etc"))){if(p===mt)return e.COMPRESSED_RGB8_ETC2;if(p===yt)return e.COMPRESSED_RGBA8_ETC2_EAC}return p===bt||p===xt||p===wt||p===Mt||p===Et||p===St||p===Tt||p===At||p===Rt||p===Ct||p===Lt||p===Pt||p===Ot||p===kt||p===Nt||p===Dt||p===Bt||p===Ft||p===Ut||p===jt||p===Vt||p===zt||p===Gt||p===Ht||p===Wt||p===qt||p===Xt||p===Yt?null!==(e=t.get("WEBGL_compressed_texture_astc"))?p:null:p===It?null!==(e=t.get("EXT_texture_compression_bptc"))?p:null:p===qe?n?34042:null!==(e=t.get("WEBGL_depth_texture"))?e.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}function Gs(e){Dn.call(this),this.cameras=e||[]}function Hs(){Da.call(this),this.type="Group"}function Ws(){this._targetRay=null,this._grip=null}function qs(e,t){var r=this,n=null,o=1,l=null,h="local-floor",f=null,c=[],d=new Map,v=new Dn;v.layers.enable(1),v.viewport=new ia;var _=new Dn;_.layers.enable(2),_.viewport=new ia;var m=[v,_],y=new Gs;y.layers.enable(1),y.layers.enable(2);var x=null,w=null;function M(e){var t=d.get(e.inputSource);t&&t.dispatchEvent({type:e.type})}function E(){d.forEach((function(e,t){e.disconnect(t)})),d.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),P.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}function S(e){l=e,P.setContext(n),P.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}function T(e){for(var t=n.inputSources,i=0;i<c.length;i++)d.set(t[i],c[i]);for(i=0;i<e.removed.length;i++){var r=e.removed[i];(o=d.get(r))&&(o.dispatchEvent({type:"disconnected",data:r}),d.delete(r))}for(i=0;i<e.added.length;i++){var o;r=e.added[i];(o=d.get(r))&&o.dispatchEvent({type:"connected",data:r})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){var t=c[e];return void 0===t&&(t=new Ws,c[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){var t=c[e];return void 0===t&&(t=new Ws,c[e]=t),t.getGripSpace()},this.setFramebufferScaleFactor=function(e){o=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){h=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l},this.getSession=function(){return n},this.setSession=function(e){if(null!==(n=e)){n.addEventListener("select",M),n.addEventListener("selectstart",M),n.addEventListener("selectend",M),n.addEventListener("squeeze",M),n.addEventListener("squeezestart",M),n.addEventListener("squeezeend",M),n.addEventListener("end",E);var r=t.getContextAttributes();!0!==r.xrCompatible&&t.makeXRCompatible();var l={antialias:r.antialias,alpha:r.alpha,depth:r.depth,stencil:r.stencil,framebufferScaleFactor:o},f=new XRWebGLLayer(n,t,l);n.updateRenderState({baseLayer:f}),n.requestReferenceSpace(h).then(S),n.addEventListener("inputsourceschange",T)}};var A=new ua,R=new ua;function C(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.getInverse(e.matrixWorld)}this.getCamera=function(e){y.near=_.near=v.near=e.near,y.far=_.far=v.far=e.far,x===y.near&&w===y.far||(n.updateRenderState({depthNear:y.near,depthFar:y.far}),x=y.near,w=y.far);var t=e.parent,r=y.cameras;C(y,t);for(var i=0;i<r.length;i++)C(r[i],t);e.matrixWorld.copy(y.matrixWorld);for(var o=e.children,l=(i=0,o.length);i<l;i++)o[i].updateMatrixWorld(!0);return 2===r.length?function(e,t,r){A.setFromMatrixPosition(t.matrixWorld),R.setFromMatrixPosition(r.matrixWorld);var n=A.distanceTo(R),o=t.projectionMatrix.elements,l=r.projectionMatrix.elements,h=o[14]/(o[10]-1),f=o[14]/(o[10]+1),c=(o[9]+1)/o[5],d=(o[9]-1)/o[5],v=(o[8]-1)/o[0],_=(l[8]+1)/l[0],m=h*v,y=h*_,x=n/(-v+_),w=x*-v;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(w),e.translateZ(x),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.getInverse(e.matrixWorld);var M=h+x,E=f+x,S=m-w,T=y+(n-w),C=c*f/E*M,L=d*f/E*M;e.projectionMatrix.makePerspective(S,T,C,L,M,E)}(y,v,_):y.projectionMatrix.copy(v.projectionMatrix),y};var L=null;var P=new Hn;P.setAnimationLoop((function(time,t){if(null!==(f=t.getViewerPose(l))){var r=f.views,o=n.renderState.baseLayer;e.setFramebuffer(o.framebuffer);var h=!1;r.length!==y.cameras.length&&(y.cameras.length=0,h=!0);for(var i=0;i<r.length;i++){var view=r[i],d=o.getViewport(view),v=m[i];v.matrix.fromArray(view.transform.matrix),v.projectionMatrix.fromArray(view.projectionMatrix),v.viewport.set(d.x,d.y,d.width,d.height),0===i&&y.matrix.copy(v.matrix),!0===h&&y.cameras.push(v)}}var _=n.inputSources;for(i=0;i<c.length;i++){var x=c[i],w=_[i];x.update(w,t,l)}L&&L(time,t)})),this.setAnimationLoop=function(e){L=e},this.dispose=function(){}}function Xs(e){function t(t,r,n){t.opacity.value=r.opacity,r.color&&t.diffuse.value.copy(r.color),r.emissive&&t.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(t.map.value=r.map),r.alphaMap&&(t.alphaMap.value=r.alphaMap),r.specularMap&&(t.specularMap.value=r.specularMap);var o,l,h=r.envMap||n;h&&(t.envMap.value=h,t.flipEnvMap.value=h.isCubeTexture?-1:1,t.reflectivity.value=r.reflectivity,t.refractionRatio.value=r.refractionRatio,t.maxMipLevel.value=e.get(h).__maxMipLevel),r.lightMap&&(t.lightMap.value=r.lightMap,t.lightMapIntensity.value=r.lightMapIntensity),r.aoMap&&(t.aoMap.value=r.aoMap,t.aoMapIntensity.value=r.aoMapIntensity),r.map?o=r.map:r.specularMap?o=r.specularMap:r.displacementMap?o=r.displacementMap:r.normalMap?o=r.normalMap:r.bumpMap?o=r.bumpMap:r.roughnessMap?o=r.roughnessMap:r.metalnessMap?o=r.metalnessMap:r.alphaMap?o=r.alphaMap:r.emissiveMap&&(o=r.emissiveMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),t.uvTransform.value.copy(o.matrix)),r.aoMap?l=r.aoMap:r.lightMap&&(l=r.lightMap),void 0!==l&&(l.isWebGLRenderTarget&&(l=l.texture),!0===l.matrixAutoUpdate&&l.updateMatrix(),t.uv2Transform.value.copy(l.matrix))}function r(e,t,r){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===E&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===E&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),(t.envMap||r)&&(e.envMapIntensity.value=t.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,n,o,l,h){n.isMeshBasicMaterial?t(e,n):n.isMeshLambertMaterial?(t(e,n),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,n)):n.isMeshToonMaterial?(t(e,n),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===E&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===E&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshPhongMaterial?(t(e,n),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===E&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===E&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshStandardMaterial?(t(e,n,o),n.isMeshPhysicalMaterial?function(e,t,n){r(e,t,n),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen);t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap);t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap);t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===E&&e.clearcoatNormalScale.value.negate());e.transparency.value=t.transparency}(e,n,o):r(e,n,o)):n.isMeshMatcapMaterial?(t(e,n),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===E&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===E&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshDepthMaterial?(t(e,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshDistanceMaterial?(t(e,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,n)):n.isMeshNormalMaterial?(t(e,n),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===E&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===E&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,n),n.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,n)):n.isPointsMaterial?function(e,t,r,n){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*r,e.scale.value=.5*n,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);var o;t.map?o=t.map:t.alphaMap&&(o=t.alphaMap);void 0!==o&&(!0===o.matrixAutoUpdate&&o.updateMatrix(),e.uvTransform.value.copy(o.matrix))}(e,n,l,h):n.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);var r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}(e,n):n.isShadowMaterial?(e.color.value.copy(n.color),e.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function Ys(e){var t=void 0!==(e=e||{}).canvas?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),r=void 0!==e.context?e.context:null,n=void 0!==e.alpha&&e.alpha,o=void 0===e.depth||e.depth,l=void 0===e.stencil||e.stencil,h=void 0!==e.antialias&&e.antialias,f=void 0===e.premultipliedAlpha||e.premultipliedAlpha,c=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,d=void 0!==e.powerPreference?e.powerPreference:"default",v=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat,_=null,m=null;this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=fr,this.physicallyCorrectLights=!1,this.toneMapping=le,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var y,x,w,M,E,S,T,A,R,C,L,P,O,k,I,N,D,B,F,U=this,j=!1,V=null,z=0,G=0,H=null,W=null,X=-1,Y={geometry:null,program:null,wireframe:!1},Z=null,J=null,K=new ia,Q=new ia,$=null,ee=t.width,te=t.height,re=1,ae=null,ie=null,ne=new ia(0,0,ee,te),oe=new ia(0,0,ee,te),se=!1,he=new zn,ue=new $n,fe=!1,ce=!1,de=new ma,ve=new ua;function pe(){return null===H?re:1}try{var _e={alpha:n,depth:o,stencil:l,antialias:h,premultipliedAlpha:f,preserveDrawingBuffer:c,powerPreference:d,failIfMajorPerformanceCaveat:v};if(t.addEventListener("webglcontextlost",be,!1),t.addEventListener("webglcontextrestored",xe,!1),null===(y=r||t.getContext("webgl",_e)||t.getContext("experimental-webgl",_e)))throw null!==t.getContext("webgl")?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");void 0===y.getShaderPrecisionFormat&&(y.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function ge(){x=new eo(y),!1===(w=new Qn(y,x,e)).isWebGL2&&(x.get("WEBGL_depth_texture"),x.get("OES_texture_float"),x.get("OES_texture_half_float"),x.get("OES_texture_half_float_linear"),x.get("OES_standard_derivatives"),x.get("OES_element_index_uint"),x.get("ANGLE_instanced_arrays")),x.get("OES_texture_float_linear"),F=new zs(y,x,w),(M=new js(y,x,w)).scissor(Q.copy(oe).multiplyScalar(re).floor()),M.viewport(K.copy(ne).multiplyScalar(re).floor()),E=new ao(y),S=new Ts,T=new Vs(y,x,M,S,w,F,E),A=new Wn(y,w),R=new to(y,A,E),C=new oo(y,R,A,E),N=new no(y),L=new Ss(U,x,w),P=new Xs(S),O=new Ls,k=new Ds,I=new Jn(U,M,C,f),D=new Kn(y,x,E,w),B=new ro(y,x,E,w),E.programs=L.programs,U.capabilities=w,U.extensions=x,U.properties=S,U.renderLists=O,U.state=M,U.info=E}ge();var me=new qs(U,y);this.xr=me;var ye=new Us(U,C,w.maxTextureSize);function be(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),j=!0}function xe(){console.log("THREE.WebGLRenderer: Context Restored."),j=!1,ge()}function we(e){var t=e.target;t.removeEventListener("dispose",we),function(e){Me(e),S.remove(e)}(t)}function Me(e){var t=S.get(e).program;e.program=void 0,void 0!==t&&L.releaseProgram(t)}this.shadowMap=ye,this.getContext=function(){return y},this.getContextAttributes=function(){return y.getContextAttributes()},this.forceContextLoss=function(){var e=x.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=x.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return re},this.setPixelRatio=function(e){void 0!==e&&(re=e,this.setSize(ee,te,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new $r),e.set(ee,te)},this.setSize=function(e,r,n){me.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(ee=e,te=r,t.width=Math.floor(e*re),t.height=Math.floor(r*re),!1!==n&&(t.style.width=e+"px",t.style.height=r+"px"),this.setViewport(0,0,e,r))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new $r),e.set(ee*re,te*re).floor()},this.setDrawingBufferSize=function(e,r,n){ee=e,te=r,re=n,t.width=Math.floor(e*n),t.height=Math.floor(r*n),this.setViewport(0,0,e,r)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new ia),e.copy(K)},this.getViewport=function(e){return e.copy(ne)},this.setViewport=function(e,t,r,n){e.isVector4?ne.set(e.x,e.y,e.z,e.w):ne.set(e,t,r,n),M.viewport(K.copy(ne).multiplyScalar(re).floor())},this.getScissor=function(e){return e.copy(oe)},this.setScissor=function(e,t,r,n){e.isVector4?oe.set(e.x,e.y,e.z,e.w):oe.set(e,t,r,n),M.scissor(Q.copy(oe).multiplyScalar(re).floor())},this.getScissorTest=function(){return se},this.setScissorTest=function(e){M.setScissorTest(se=e)},this.setOpaqueSort=function(e){ae=e},this.setTransparentSort=function(e){ie=e},this.getClearColor=function(){return I.getClearColor()},this.setClearColor=function(){I.setClearColor.apply(I,arguments)},this.getClearAlpha=function(){return I.getClearAlpha()},this.setClearAlpha=function(){I.setClearAlpha.apply(I,arguments)},this.clear=function(e,t,r){var n=0;(void 0===e||e)&&(n|=16384),(void 0===t||t)&&(n|=256),(void 0===r||r)&&(n|=1024),y.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",be,!1),t.removeEventListener("webglcontextrestored",xe,!1),O.dispose(),k.dispose(),S.dispose(),C.dispose(),me.dispose(),Te.stop()},this.renderBufferImmediate=function(object,e){M.initAttributes();var t=S.get(object);object.hasPositions&&!t.position&&(t.position=y.createBuffer()),object.hasNormals&&!t.normal&&(t.normal=y.createBuffer()),object.hasUvs&&!t.uv&&(t.uv=y.createBuffer()),object.hasColors&&!t.color&&(t.color=y.createBuffer());var r=e.getAttributes();object.hasPositions&&(y.bindBuffer(34962,t.position),y.bufferData(34962,object.positionArray,35048),M.enableAttribute(r.position),y.vertexAttribPointer(r.position,3,5126,!1,0,0)),object.hasNormals&&(y.bindBuffer(34962,t.normal),y.bufferData(34962,object.normalArray,35048),M.enableAttribute(r.normal),y.vertexAttribPointer(r.normal,3,5126,!1,0,0)),object.hasUvs&&(y.bindBuffer(34962,t.uv),y.bufferData(34962,object.uvArray,35048),M.enableAttribute(r.uv),y.vertexAttribPointer(r.uv,2,5126,!1,0,0)),object.hasColors&&(y.bindBuffer(34962,t.color),y.bufferData(34962,object.colorArray,35048),M.enableAttribute(r.color),y.vertexAttribPointer(r.color,3,5126,!1,0,0)),M.disableUnusedAttributes(),y.drawArrays(4,0,object.count),object.count=0};var Ee=new Ba;this.renderBufferDirect=function(e,t,r,n,object,o){null===t&&(t=Ee);var l=object.isMesh&&object.matrixWorld.determinant()<0,h=Pe(e,t,n,object);M.setMaterial(n,l);var f=!1;Y.geometry===r.id&&Y.program===h.id&&Y.wireframe===(!0===n.wireframe)||(Y.geometry=r.id,Y.program=h.id,Y.wireframe=!0===n.wireframe,f=!0),(n.morphTargets||n.morphNormals)&&(N.update(object,r,n,h),f=!0),!0===object.isInstancedMesh&&(f=!0);var c=r.index,d=r.attributes.position;if(null===c){if(void 0===d||0===d.count)return}else if(0===c.count)return;var v,_=1;!0===n.wireframe&&(c=R.getWireframeAttribute(r),_=2);var m=D;null!==c&&(v=A.get(c),(m=B).setIndex(v)),f&&(!function(object,e,t,r){if(!1===w.isWebGL2&&(object.isInstancedMesh||e.isInstancedBufferGeometry)&&null===x.get("ANGLE_instanced_arrays"))return;M.initAttributes();var n=e.attributes,o=r.getAttributes(),l=t.defaultAttributeValues;for(var h in o){var f=o[h];if(f>=0){var c=n[h];if(void 0!==c){var d=c.normalized,v=c.itemSize;if(void 0===(R=A.get(c)))continue;var _=R.buffer,m=R.type,E=R.bytesPerElement;if(c.isInterleavedBufferAttribute){var data=c.data,S=data.stride,T=c.offset;data&&data.isInstancedInterleavedBuffer?(M.enableAttributeAndDivisor(f,data.meshPerAttribute),void 0===e._maxInstanceCount&&(e._maxInstanceCount=data.meshPerAttribute*data.count)):M.enableAttribute(f),y.bindBuffer(34962,_),M.vertexAttribPointer(f,v,m,d,S*E,T*E)}else c.isInstancedBufferAttribute?(M.enableAttributeAndDivisor(f,c.meshPerAttribute),void 0===e._maxInstanceCount&&(e._maxInstanceCount=c.meshPerAttribute*c.count)):M.enableAttribute(f),y.bindBuffer(34962,_),M.vertexAttribPointer(f,v,m,d,0,0)}else if("instanceMatrix"===h){var R;if(void 0===(R=A.get(object.instanceMatrix)))continue;_=R.buffer,m=R.type;M.enableAttributeAndDivisor(f+0,1),M.enableAttributeAndDivisor(f+1,1),M.enableAttributeAndDivisor(f+2,1),M.enableAttributeAndDivisor(f+3,1),y.bindBuffer(34962,_),y.vertexAttribPointer(f+0,4,m,!1,64,0),y.vertexAttribPointer(f+1,4,m,!1,64,16),y.vertexAttribPointer(f+2,4,m,!1,64,32),y.vertexAttribPointer(f+3,4,m,!1,64,48)}else if(void 0!==l){var C=l[h];if(void 0!==C)switch(C.length){case 2:y.vertexAttrib2fv(f,C);break;case 3:y.vertexAttrib3fv(f,C);break;case 4:y.vertexAttrib4fv(f,C);break;default:y.vertexAttrib1fv(f,C)}}}}M.disableUnusedAttributes()}(object,r,n,h),null!==c&&y.bindBuffer(34963,v.buffer));var E=null!==c?c.count:d.count,S=r.drawRange.start*_,T=r.drawRange.count*_,C=null!==o?o.start*_:0,L=null!==o?o.count*_:1/0,P=Math.max(S,C),O=Math.min(E,S+T,C+L)-1,k=Math.max(0,O-P+1);if(0!==k){if(object.isMesh)!0===n.wireframe?(M.setLineWidth(n.wireframeLinewidth*pe()),m.setMode(1)):m.setMode(4);else if(object.isLine){var I=n.linewidth;void 0===I&&(I=1),M.setLineWidth(I*pe()),object.isLineSegments?m.setMode(1):object.isLineLoop?m.setMode(2):m.setMode(3)}else object.isPoints?m.setMode(0):object.isSprite&&m.setMode(4);if(object.isInstancedMesh)m.renderInstances(r,P,k,object.count);else if(r.isInstancedBufferGeometry){var F=Math.min(r.instanceCount,r._maxInstanceCount);m.renderInstances(r,P,k,F)}else m.render(P,k)}},this.compile=function(e,t){(m=k.get(e,t)).init(),e.traverse((function(object){object.isLight&&(m.pushLight(object),object.castShadow&&m.pushShadow(object))})),m.setupLights(t);const r={};e.traverse((function(object){let t=object.material;if(t)if(Array.isArray(t))for(let i=0;i<t.length;i++){let n=t[i];n.uuid in r==!1&&(Le(n,e,object),r[n.uuid]=!0)}else t.uuid in r==!1&&(Le(t,e,object),r[t.uuid]=!0)}))};var Se=null;var Te=new Hn;function Ae(object,e,t,r){if(!1!==object.visible){if(object.layers.test(e.layers))if(object.isGroup)t=object.renderOrder;else if(object.isLOD)!0===object.autoUpdate&&object.update(e);else if(object.isLight)m.pushLight(object),object.castShadow&&m.pushShadow(object);else if(object.isSprite){if(!object.frustumCulled||he.intersectsSprite(object)){r&&ve.setFromMatrixPosition(object.matrixWorld).applyMatrix4(de);var n=C.update(object);(o=object.material).visible&&_.push(object,n,o,t,ve.z,null)}}else if(object.isImmediateRenderObject)r&&ve.setFromMatrixPosition(object.matrixWorld).applyMatrix4(de),_.push(object,null,object.material,t,ve.z,null);else if((object.isMesh||object.isLine||object.isPoints)&&(object.isSkinnedMesh&&object.skeleton.frame!==E.render.frame&&(object.skeleton.update(),object.skeleton.frame=E.render.frame),!object.frustumCulled||he.intersectsObject(object))){r&&ve.setFromMatrixPosition(object.matrixWorld).applyMatrix4(de);n=C.update(object);var o=object.material;if(Array.isArray(o))for(var l=n.groups,i=0,h=l.length;i<h;i++){var f=l[i],c=o[f.materialIndex];c&&c.visible&&_.push(object,n,c,t,ve.z,f)}else o.visible&&_.push(object,n,o,t,ve.z,null)}var d=object.children;for(i=0,h=d.length;i<h;i++)Ae(d[i],e,t,r)}}function Re(e,t,r,n){for(var i=0,o=e.length;i<o;i++){var l=e[i],object=l.object,h=l.geometry,f=void 0===n?l.material:n,c=l.group;if(r.isArrayCamera){J=r;for(var d=r.cameras,v=0,_=d.length;v<_;v++){var y=d[v];object.layers.test(y.layers)&&(M.viewport(K.copy(y.viewport)),m.setupLights(y),Ce(object,t,y,h,f,c))}}else J=null,Ce(object,t,r,h,f,c)}}function Ce(object,e,t,r,n,o){if(object.onBeforeRender(U,e,t,r,n,o),m=k.get(e,J||t),object.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,object.matrixWorld),object.normalMatrix.getNormalMatrix(object.modelViewMatrix),object.isImmediateRenderObject){var l=Pe(t,e,n,object);M.setMaterial(n),Y.geometry=null,Y.program=null,Y.wireframe=!1,function(object,e){object.render((function(object){U.renderBufferImmediate(object,e)}))}(object,l)}else U.renderBufferDirect(t,e,r,n,object,o);object.onAfterRender(U,e,t,r,n,o),m=k.get(e,J||t)}function Le(e,t,object){var r=S.get(e),n=m.state.lights,o=m.state.shadowsArray,l=n.state.version,h=L.getParameters(e,n.state,o,t,ue.numPlanes,ue.numIntersection,object),f=L.getProgramCacheKey(h),c=r.program,d=!0;if(void 0===c)e.addEventListener("dispose",we);else if(c.cacheKey!==f)Me(e);else if(r.lightsStateVersion!==l)r.lightsStateVersion=l,d=!1;else{if(void 0!==h.shaderID)return;d=!1}d&&(c=L.acquireProgram(h,f),r.program=c,r.uniforms=h.uniforms,r.outputEncoding=h.outputEncoding,e.program=c);var v=c.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var i=0;i<U.maxMorphTargets;i++)v["morphTarget"+i]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(i=0;i<U.maxMorphNormals;i++)v["morphNormal"+i]>=0&&e.numSupportedMorphNormals++}var _=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(r.numClippingPlanes=ue.numPlanes,r.numIntersection=ue.numIntersection,_.clippingPlanes=ue.uniform),r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),r.lightsStateVersion=l,r.needsLights&&(_.ambientLightColor.value=n.state.ambient,_.lightProbe.value=n.state.probe,_.directionalLights.value=n.state.directional,_.directionalLightShadows.value=n.state.directionalShadow,_.spotLights.value=n.state.spot,_.spotLightShadows.value=n.state.spotShadow,_.rectAreaLights.value=n.state.rectArea,_.pointLights.value=n.state.point,_.pointLightShadows.value=n.state.pointShadow,_.hemisphereLights.value=n.state.hemi,_.directionalShadowMap.value=n.state.directionalShadowMap,_.directionalShadowMatrix.value=n.state.directionalShadowMatrix,_.spotShadowMap.value=n.state.spotShadowMap,_.spotShadowMatrix.value=n.state.spotShadowMatrix,_.pointShadowMap.value=n.state.pointShadowMap,_.pointShadowMatrix.value=n.state.pointShadowMatrix);var y=r.program.getUniforms(),x=ns.seqWithValue(y.seq,_);r.uniformsList=x}function Pe(e,t,r,object){T.resetTextureUnits();var n=t.fog,o=r.isMeshStandardMaterial?t.environment:null,l=null===H?U.outputEncoding:H.texture.encoding,h=S.get(r),f=m.state.lights;if(fe&&(ce||e!==Z)){var c=e===Z&&r.id===X;ue.setState(r.clippingPlanes,r.clipIntersection,r.clipShadows,e,h,c)}r.version===h.__version?void 0===h.program||r.fog&&h.fog!==n||h.environment!==o||h.needsLights&&h.lightsStateVersion!==f.state.version?Le(r,t,object):void 0===h.numClippingPlanes||h.numClippingPlanes===ue.numPlanes&&h.numIntersection===ue.numIntersection?h.outputEncoding!==l&&Le(r,t,object):Le(r,t,object):(Le(r,t,object),h.__version=r.version);var d,v,_=!1,x=!1,E=!1,A=h.program,R=A.getUniforms(),C=h.uniforms;if(M.useProgram(A.program)&&(_=!0,x=!0,E=!0),r.id!==X&&(X=r.id,x=!0),_||Z!==e){if(R.setValue(y,"projectionMatrix",e.projectionMatrix),w.logarithmicDepthBuffer&&R.setValue(y,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),Z!==e&&(Z=e,x=!0,E=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){var L=R.map.cameraPosition;void 0!==L&&L.setValue(y,ve.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&R.setValue(y,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.skinning)&&R.setValue(y,"viewMatrix",e.matrixWorldInverse)}if(r.skinning){R.setOptional(y,object,"bindMatrix"),R.setOptional(y,object,"bindMatrixInverse");var O=object.skeleton;if(O){var k=O.bones;if(w.floatVertexTextures){if(void 0===O.boneTexture){var I=Math.sqrt(4*k.length);I=Qr.ceilPowerOfTwo(I),I=Math.max(I,4);var N=new Float32Array(I*I*4);N.set(O.boneMatrices);var D=new Un(N,I,I,Ze,Ve);O.boneMatrices=N,O.boneTexture=D,O.boneTextureSize=I}R.setValue(y,"boneTexture",O.boneTexture,T),R.setValue(y,"boneTextureSize",O.boneTextureSize)}else R.setOptional(y,O,"boneMatrices")}}return(x||h.receiveShadow!==object.receiveShadow)&&(h.receiveShadow=object.receiveShadow,R.setValue(y,"receiveShadow",object.receiveShadow)),x&&(R.setValue(y,"toneMappingExposure",U.toneMappingExposure),R.setValue(y,"toneMappingWhitePoint",U.toneMappingWhitePoint),h.needsLights&&(v=E,(d=C).ambientLightColor.needsUpdate=v,d.lightProbe.needsUpdate=v,d.directionalLights.needsUpdate=v,d.directionalLightShadows.needsUpdate=v,d.pointLights.needsUpdate=v,d.pointLightShadows.needsUpdate=v,d.spotLights.needsUpdate=v,d.spotLightShadows.needsUpdate=v,d.rectAreaLights.needsUpdate=v,d.hemisphereLights.needsUpdate=v),n&&r.fog&&P.refreshFogUniforms(C,n),P.refreshMaterialUniforms(C,r,o,re,te),void 0!==C.ltc_1&&(C.ltc_1.value=Gn.LTC_1),void 0!==C.ltc_2&&(C.ltc_2.value=Gn.LTC_2),ns.upload(y,h.uniformsList,C,T)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(ns.upload(y,h.uniformsList,C,T),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&R.setValue(y,"center",object.center),R.setValue(y,"modelViewMatrix",object.modelViewMatrix),R.setValue(y,"normalMatrix",object.normalMatrix),R.setValue(y,"modelMatrix",object.matrixWorld),A}Te.setAnimationLoop((function(time){me.isPresenting||Se&&Se(time)})),"undefined"!=typeof window&&Te.setContext(window),this.setAnimationLoop=function(e){Se=e,me.setAnimationLoop(e),Te.start()},this.render=function(e,t){var r,n;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),r=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),n=arguments[3]),t&&t.isCamera){if(!j){Y.geometry=null,Y.program=null,Y.wireframe=!1,X=-1,Z=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),me.enabled&&me.isPresenting&&(t=me.getCamera(t)),e.onBeforeRender(U,e,t,r||H),(m=k.get(e,t)).init(),de.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),he.setFromProjectionMatrix(de),ce=this.localClippingEnabled,fe=ue.init(this.clippingPlanes,ce,t),(_=O.get(e,t)).init(),Ae(e,t,0,U.sortObjects),_.finish(),!0===U.sortObjects&&_.sort(ae,ie),fe&&ue.beginShadows();var o=m.state.shadowsArray;ye.render(o,e,t),m.setupLights(t),fe&&ue.endShadows(),this.info.autoReset&&this.info.reset(),void 0!==r&&this.setRenderTarget(r),I.render(_,e,t,n);var l=_.opaque,h=_.transparent;if(e.overrideMaterial){var f=e.overrideMaterial;l.length&&Re(l,e,t,f),h.length&&Re(h,e,t,f)}else l.length&&Re(l,e,t),h.length&&Re(h,e,t);e.onAfterRender(U,e,t),null!==H&&(T.updateRenderTargetMipmap(H),T.updateMultisampleRenderTarget(H)),M.buffers.depth.setTest(!0),M.buffers.depth.setMask(!0),M.buffers.color.setMask(!0),M.setPolygonOffset(!1),_=null,m=null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.setFramebuffer=function(e){V!==e&&null===H&&y.bindFramebuffer(36160,e),V=e},this.getActiveCubeFace=function(){return z},this.getActiveMipmapLevel=function(){return G},this.getRenderTarget=function(){return H},this.setRenderTarget=function(e,t,r){H=e,z=t,G=r,e&&void 0===S.get(e).__webglFramebuffer&&T.setupRenderTarget(e);var n=V,o=!1;if(e){var l=S.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(n=l[t||0],o=!0):n=e.isWebGLMultisampleRenderTarget?S.get(e).__webglMultisampledFramebuffer:l,K.copy(e.viewport),Q.copy(e.scissor),$=e.scissorTest}else K.copy(ne).multiplyScalar(re).floor(),Q.copy(oe).multiplyScalar(re).floor(),$=se;if(W!==n&&(y.bindFramebuffer(36160,n),W=n),M.viewport(K),M.scissor(Q),M.setScissorTest($),o){var h=S.get(e.texture);y.framebufferTexture2D(36160,36064,34069+(t||0),h.__webglTexture,r||0)}},this.readRenderTargetPixels=function(e,t,r,n,o,l,h){if(e&&e.isWebGLRenderTarget){var f=S.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==h&&(f=f[h]),f){var c=!1;f!==W&&(y.bindFramebuffer(36160,f),c=!0);try{var d=e.texture,v=d.format,_=d.type;if(v!==Ze&&F.convert(v)!==y.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(_===Ne||F.convert(_)===y.getParameter(35738)||_===Ve&&(w.isWebGL2||x.get("OES_texture_float")||x.get("WEBGL_color_buffer_float"))||_===ze&&(w.isWebGL2?x.get("EXT_color_buffer_float"):x.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===y.checkFramebufferStatus(36160)?t>=0&&t<=e.width-n&&r>=0&&r<=e.height-o&&y.readPixels(t,r,n,o,F.convert(v),F.convert(_),l):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{c&&y.bindFramebuffer(36160,W)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t,r){void 0===r&&(r=0);var n=Math.pow(2,-r),o=Math.floor(t.image.width*n),l=Math.floor(t.image.height*n),h=F.convert(t.format);T.setTexture2D(t,0),y.copyTexImage2D(3553,r,h,e.x,e.y,o,l,0),M.unbindTexture()},this.copyTextureToTexture=function(e,t,r,n){void 0===n&&(n=0);var o=t.image.width,l=t.image.height,h=F.convert(r.format),f=F.convert(r.type);T.setTexture2D(r,0),t.isDataTexture?y.texSubImage2D(3553,n,e.x,e.y,o,l,h,f,t.image.data):t.isCompressedTexture?y.compressedTexSubImage2D(3553,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,h,t.mipmaps[0].data):y.texSubImage2D(3553,n,e.x,e.y,h,f,t.image),0===n&&r.generateMipmaps&&y.generateMipmap(3553),M.unbindTexture()},this.initTexture=function(e){T.setTexture2D(e,0),M.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Zs(e,t){this.name="",this.color=new Ri(e),this.density=void 0!==t?t:25e-5}function Js(e,t,r){this.name="",this.color=new Ri(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3}function Ks(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=jr,this.updateRange={offset:0,count:-1},this.version=0}Gs.prototype=Object.assign(Object.create(Dn.prototype),{constructor:Gs,isArrayCamera:!0}),Hs.prototype=Object.assign(Object.create(Da.prototype),{constructor:Hs,isGroup:!0}),Object.assign(Ws.prototype,{constructor:Ws,getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Hs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Hs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),this},update:function(e,t,r){var n=null,o=null,l=this._targetRay,h=this._grip;return e&&(null!==l&&null!==(n=t.getPose(e.targetRaySpace,r))&&(l.matrix.fromArray(n.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale)),null!==h&&e.gripSpace&&null!==(o=t.getPose(e.gripSpace,r))&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale))),null!==l&&(l.visible=null!==n),null!==h&&(h.visible=null!==o),this}}),Object.assign(qs.prototype,Zr.prototype),Object.assign(Zs.prototype,{isFogExp2:!0,clone:function(){return new Zs(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),Object.assign(Js.prototype,{isFog:!0,clone:function(){return new Js(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}),Object.defineProperty(Ks.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(Ks.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(source){return this.array=new source.array.constructor(source.array),this.count=source.count,this.stride=source.stride,this.usage=source.usage,this},copyAt:function(e,t,r){e*=this.stride,r*=t.stride;for(var i=0,n=this.stride;i<n;i++)this.array[e+i]=t.array[r+i];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(e){return this.onUploadCallback=e,this}});var Qs,$s=new ua;function el(e,t,r,n){this.name="",this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===n}function tl(e){Ii.call(this),this.type="SpriteMaterial",this.color=new Ri(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}Object.defineProperties(el.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(el.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(var i=0,t=this.data.count;i<t;i++)$s.x=this.getX(i),$s.y=this.getY(i),$s.z=this.getZ(i),$s.applyMatrix4(e),this.setXYZ(i,$s.x,$s.y,$s.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this},setXYZ:function(e,t,r,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this},setXYZW:function(e,t,r,n,o){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this.data.array[e+3]=o,this},clone:function(){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");for(var e=[],i=0;i<this.count;i++)for(var t=i*this.data.stride+this.offset,r=0;r<this.itemSize;r++)e.push(this.data.array[t+r]);return new Bi(new this.array.constructor(e),this.itemSize,this.normalized)},toJSON:function(){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");for(var e=[],i=0;i<this.count;i++)for(var t=i*this.data.stride+this.offset,r=0;r<this.itemSize;r++)e.push(this.data.array[t+r]);return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}}),tl.prototype=Object.create(Ii.prototype),tl.prototype.constructor=tl,tl.prototype.isSpriteMaterial=!0,tl.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.color.copy(source.color),this.map=source.map,this.alphaMap=source.alphaMap,this.rotation=source.rotation,this.sizeAttenuation=source.sizeAttenuation,this};var rl=new ua,al=new ua,il=new ua,nl=new $r,sl=new $r,ll=new ma,hl=new ua,fl=new ua,cl=new ua,vl=new $r,pl=new $r,_l=new $r;function gl(e){if(Da.call(this),this.type="Sprite",void 0===Qs){Qs=new rn;var t=new Ks(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Qs.setIndex([0,1,2,0,2,3]),Qs.setAttribute("position",new el(t,3,0,!1)),Qs.setAttribute("uv",new el(t,2,3,!1))}this.geometry=Qs,this.material=void 0!==e?e:new tl,this.center=new $r(.5,.5)}function ml(e,t,r,n,o,l){nl.subVectors(e,r).addScalar(.5).multiply(n),void 0!==o?(sl.x=l*nl.x-o*nl.y,sl.y=o*nl.x+l*nl.y):sl.copy(nl),e.copy(t),e.x+=sl.x,e.y+=sl.y,e.applyMatrix4(ll)}gl.prototype=Object.assign(Object.create(Da.prototype),{constructor:gl,isSprite:!0,raycast:function(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),al.setFromMatrixScale(this.matrixWorld),ll.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),il.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&al.multiplyScalar(-il.z);var r,n,o=this.material.rotation;0!==o&&(n=Math.cos(o),r=Math.sin(o));var l=this.center;ml(hl.set(-.5,-.5,0),il,l,al,r,n),ml(fl.set(.5,-.5,0),il,l,al,r,n),ml(cl.set(.5,.5,0),il,l,al,r,n),vl.set(0,0),pl.set(1,0),_l.set(1,1);var h=e.ray.intersectTriangle(hl,fl,cl,!1,rl);if(null!==h||(ml(fl.set(-.5,.5,0),il,l,al,r,n),pl.set(0,1),null!==(h=e.ray.intersectTriangle(hl,cl,fl,!1,rl)))){var f=e.ray.origin.distanceTo(rl);f<e.near||f>e.far||t.push({distance:f,point:rl.clone(),uv:Ei.getUV(rl,hl,fl,cl,vl,pl,_l,new $r),face:null,object:this})}},clone:function(){return new this.constructor(this.material).copy(this)},copy:function(source){return Da.prototype.copy.call(this,source),void 0!==source.center&&this.center.copy(source.center),this}});var yl,bl,xl,wl,Ml,El=new ua,Sl=new ua;function Tl(){Da.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function Al(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),xn.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ma,this.bindMatrixInverse=new ma}Tl.prototype=Object.assign(Object.create(Da.prototype),{constructor:Tl,isLOD:!0,copy:function(source){Da.prototype.copy.call(this,source,!1);for(var e=source.levels,i=0,t=e.length;i<t;i++){var r=e[i];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=source.autoUpdate,this},addLevel:function(object,e){void 0===e&&(e=0),e=Math.abs(e);for(var t=this.levels,r=0;r<t.length&&!(e<t[r].distance);r++);return t.splice(r,0,{distance:e,object:object}),this.add(object),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){var t=this.levels;if(t.length>0){for(var i=1,r=t.length;i<r&&!(e<t[i].distance);i++);return t[i-1].object}return null},raycast:function(e,t){if(this.levels.length>0){El.setFromMatrixPosition(this.matrixWorld);var r=e.ray.origin.distanceTo(El);this.getObjectForDistance(r).raycast(e,t)}},update:function(e){var t=this.levels;if(t.length>1){El.setFromMatrixPosition(e.matrixWorld),Sl.setFromMatrixPosition(this.matrixWorld);var r=El.distanceTo(Sl)/e.zoom;t[0].object.visible=!0;for(var i=1,n=t.length;i<n&&r>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<n;i++)t[i].object.visible=!1}},toJSON:function(meta){var data=Da.prototype.toJSON.call(this,meta);!1===this.autoUpdate&&(data.object.autoUpdate=!1),data.object.levels=[];for(var e=this.levels,i=0,t=e.length;i<t;i++){var r=e[i];data.object.levels.push({object:r.object.uuid,distance:r.distance})}return data}}),Al.prototype=Object.assign(Object.create(xn.prototype),{constructor:Al,isSkinnedMesh:!0,bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var e=new ia,t=this.geometry.attributes.skinWeight,i=0,r=t.count;i<r;i++){e.x=t.getX(i),e.y=t.getY(i),e.z=t.getZ(i),e.w=t.getW(i);var n=1/e.manhattanLength();n!==1/0?e.multiplyScalar(n):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){xn.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)},boneTransform:(yl=new ua,bl=new ia,xl=new ia,wl=new ua,Ml=new ma,function(e,t){var r=this.skeleton,n=this.geometry;bl.fromBufferAttribute(n.attributes.skinIndex,e),xl.fromBufferAttribute(n.attributes.skinWeight,e),yl.fromBufferAttribute(n.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(var i=0;i<4;i++){var o=xl.getComponent(i);if(0!==o){var l=bl.getComponent(i);Ml.multiplyMatrices(r.bones[l].matrixWorld,r.boneInverses[l]),t.addScaledVector(wl.copy(yl).applyMatrix4(Ml),o)}}return t.applyMatrix4(this.bindMatrixInverse)})});var Rl=new ma,Cl=new ma;function Ll(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var i=0,r=this.bones.length;i<r;i++)this.boneInverses.push(new ma)}}function Pl(){Da.call(this),this.type="Bone"}Object.assign(Ll.prototype,{calculateInverses:function(){this.boneInverses=[];for(var i=0,e=this.bones.length;i<e;i++){var t=new ma;this.bones[i]&&t.getInverse(this.bones[i].matrixWorld),this.boneInverses.push(t)}},pose:function(){var e,i,t;for(i=0,t=this.bones.length;i<t;i++)(e=this.bones[i])&&e.matrixWorld.getInverse(this.boneInverses[i]);for(i=0,t=this.bones.length;i<t;i++)(e=this.bones[i])&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:function(){for(var e=this.bones,t=this.boneInverses,r=this.boneMatrices,n=this.boneTexture,i=0,o=e.length;i<o;i++){var l=e[i]?e[i].matrixWorld:Cl;Rl.multiplyMatrices(l,t[i]),Rl.toArray(r,16*i)}void 0!==n&&(n.needsUpdate=!0)},clone:function(){return new Ll(this.bones,this.boneInverses)},getBoneByName:function(e){for(var i=0,t=this.bones.length;i<t;i++){var r=this.bones[i];if(r.name===e)return r}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}}),Pl.prototype=Object.assign(Object.create(Da.prototype),{constructor:Pl,isBone:!0});var Ol=new ma,kl=new ma,Il=[],Nl=new xn;function Dl(e,t,r){xn.call(this,e,t),this.instanceMatrix=new Bi(new Float32Array(16*r),16),this.count=r,this.frustumCulled=!1}function Bl(e){Ii.call(this),this.type="LineBasicMaterial",this.color=new Ri(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}Dl.prototype=Object.assign(Object.create(xn.prototype),{constructor:Dl,isInstancedMesh:!0,getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function(e,t){var r=this.matrixWorld,n=this.count;if(Nl.geometry=this.geometry,Nl.material=this.material,void 0!==Nl.material)for(var o=0;o<n;o++){this.getMatrixAt(o,Ol),kl.multiplyMatrices(r,Ol),Nl.matrixWorld=kl,Nl.raycast(e,Il);for(var i=0,l=Il.length;i<l;i++){var h=Il[i];h.instanceId=o,h.object=this,t.push(h)}Il.length=0}},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function(){}}),Bl.prototype=Object.create(Ii.prototype),Bl.prototype.constructor=Bl,Bl.prototype.isLineBasicMaterial=!0,Bl.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.color.copy(source.color),this.linewidth=source.linewidth,this.linecap=source.linecap,this.linejoin=source.linejoin,this.morphTargets=source.morphTargets,this};var Fl=new ua,Ul=new ua,jl=new ma,Vl=new hi,zl=new ei;function Gl(e,t,r){1===r&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),Da.call(this),this.type="Line",this.geometry=void 0!==e?e:new rn,this.material=void 0!==t?t:new Bl,this.updateMorphTargets()}Gl.prototype=Object.assign(Object.create(Da.prototype),{constructor:Gl,isLine:!0,computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry)if(null===e.index){for(var t=e.attributes.position,r=[0],i=1,n=t.count;i<n;i++)Fl.fromBufferAttribute(t,i-1),Ul.fromBufferAttribute(t,i),r[i]=r[i-1],r[i]+=Fl.distanceTo(Ul);e.setAttribute("lineDistance",new Wi(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){var o=e.vertices;(r=e.lineDistances)[0]=0;for(i=1,n=o.length;i<n;i++)r[i]=r[i-1],r[i]+=o[i-1].distanceTo(o[i])}return this},raycast:function(e,t){var r=this.geometry,n=this.matrixWorld,o=e.params.Line.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),zl.copy(r.boundingSphere),zl.applyMatrix4(n),zl.radius+=o,!1!==e.ray.intersectsSphere(zl)){jl.getInverse(n),Vl.copy(e.ray).applyMatrix4(jl);var l=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=l*l,f=new ua,c=new ua,d=new ua,v=new ua,_=this&&this.isLineSegments?2:1;if(r.isBufferGeometry){var m=r.index,y=r.attributes.position.array;if(null!==m)for(var x=m.array,i=0,w=x.length-1;i<w;i+=_){var a=x[i],b=x[i+1];if(f.fromArray(y,3*a),c.fromArray(y,3*b),!(Vl.distanceSqToSegment(f,c,v,d)>h))v.applyMatrix4(this.matrixWorld),(S=e.ray.origin.distanceTo(v))<e.near||S>e.far||t.push({distance:S,point:d.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}else for(i=0,w=y.length/3-1;i<w;i+=_){if(f.fromArray(y,3*i),c.fromArray(y,3*i+3),!(Vl.distanceSqToSegment(f,c,v,d)>h))v.applyMatrix4(this.matrixWorld),(S=e.ray.origin.distanceTo(v))<e.near||S>e.far||t.push({distance:S,point:d.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else if(r.isGeometry){var M=r.vertices,E=M.length;for(i=0;i<E-1;i+=_){var S;if(!(Vl.distanceSqToSegment(M[i],M[i+1],v,d)>h))v.applyMatrix4(this.matrixWorld),(S=e.ray.origin.distanceTo(v))<e.near||S>e.far||t.push({distance:S,point:d.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}}},updateMorphTargets:function(){var e,t,r,n=this.geometry;if(n.isBufferGeometry){var o=n.morphAttributes,l=Object.keys(o);if(l.length>0){var h=o[l[0]];if(void 0!==h)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,t=h.length;e<t;e++)r=h[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=e}}else{var f=n.morphTargets;void 0!==f&&f.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var Hl=new ua,Wl=new ua;function ql(e,t){Gl.call(this,e,t),this.type="LineSegments"}function Xl(e,t){Gl.call(this,e,t),this.type="LineLoop"}function Yl(e){Ii.call(this),this.type="PointsMaterial",this.color=new Ri(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}ql.prototype=Object.assign(Object.create(Gl.prototype),{constructor:ql,isLineSegments:!0,computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry)if(null===e.index){for(var t=e.attributes.position,r=[],i=0,n=t.count;i<n;i+=2)Hl.fromBufferAttribute(t,i),Wl.fromBufferAttribute(t,i+1),r[i]=0===i?0:r[i-1],r[i+1]=r[i]+Hl.distanceTo(Wl);e.setAttribute("lineDistance",new Wi(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){var o=e.vertices;for(r=e.lineDistances,i=0,n=o.length;i<n;i+=2)Hl.copy(o[i]),Wl.copy(o[i+1]),r[i]=0===i?0:r[i-1],r[i+1]=r[i]+Hl.distanceTo(Wl)}return this}}),Xl.prototype=Object.assign(Object.create(Gl.prototype),{constructor:Xl,isLineLoop:!0}),Yl.prototype=Object.create(Ii.prototype),Yl.prototype.constructor=Yl,Yl.prototype.isPointsMaterial=!0,Yl.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.color.copy(source.color),this.map=source.map,this.alphaMap=source.alphaMap,this.size=source.size,this.sizeAttenuation=source.sizeAttenuation,this.morphTargets=source.morphTargets,this};var Zl=new ma,Jl=new hi,Kl=new ei,Ql=new ua;function $l(e,t){Da.call(this),this.type="Points",this.geometry=void 0!==e?e:new rn,this.material=void 0!==t?t:new Yl,this.updateMorphTargets()}function eh(e,t,r,n,o,l,object){var h=Jl.distanceSqToPoint(e);if(h<r){var f=new ua;Jl.closestPointToPoint(e,f),f.applyMatrix4(n);var c=o.ray.origin.distanceTo(f);if(c<o.near||c>o.far)return;l.push({distance:c,distanceToRay:Math.sqrt(h),point:f,index:t,face:null,object:object})}}function rh(video,e,t,r,n,o,l,h,f){aa.call(this,video,e,t,r,n,o,l,h,f),this.format=void 0!==l?l:Ye,this.minFilter=void 0!==o?o:Le,this.magFilter=void 0!==n?n:Le,this.generateMipmaps=!1}function ah(e,t,r,n,o,l,h,f,c,d,v,_){aa.call(this,null,l,h,f,c,d,n,o,v,_),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function ih(canvas,e,t,r,n,o,l,h,f){aa.call(this,canvas,e,t,r,n,o,l,h,f),this.needsUpdate=!0}function nh(e,t,r,n,o,l,h,f,c,d){if((d=void 0!==d?d:$e)!==$e&&d!==et)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===r&&d===$e&&(r=Fe),void 0===r&&d===et&&(r=qe),aa.call(this,null,n,o,l,h,f,d,r,c),this.image={width:e,height:t},this.magFilter=void 0!==h?h:Se,this.minFilter=void 0!==f?f:Se,this.flipY=!1,this.generateMipmaps=!1}function oh(e){rn.call(this),this.type="WireframeGeometry";var i,t,r,n,ol,o,l,h,f,c,d=[],v=[0,0],_={},m=["a","b","c"];if(e&&e.isGeometry){var y=e.faces;for(i=0,r=y.length;i<r;i++){var x=y[i];for(t=0;t<3;t++)l=x[m[t]],h=x[m[(t+1)%3]],v[0]=Math.min(l,h),v[1]=Math.max(l,h),void 0===_[f=v[0]+","+v[1]]&&(_[f]={index1:v[0],index2:v[1]})}for(f in _)o=_[f],c=e.vertices[o.index1],d.push(c.x,c.y,c.z),c=e.vertices[o.index2],d.push(c.x,c.y,c.z)}else if(e&&e.isBufferGeometry){var w,M,E,S,T,A,R;if(c=new ua,null!==e.index){for(w=e.attributes.position,M=e.index,0===(E=e.groups).length&&(E=[{start:0,count:M.count,materialIndex:0}]),n=0,ol=E.length;n<ol;++n)for(i=T=(S=E[n]).start,r=T+S.count;i<r;i+=3)for(t=0;t<3;t++)l=M.getX(i+t),h=M.getX(i+(t+1)%3),v[0]=Math.min(l,h),v[1]=Math.max(l,h),void 0===_[f=v[0]+","+v[1]]&&(_[f]={index1:v[0],index2:v[1]});for(f in _)o=_[f],c.fromBufferAttribute(w,o.index1),d.push(c.x,c.y,c.z),c.fromBufferAttribute(w,o.index2),d.push(c.x,c.y,c.z)}else for(i=0,r=(w=e.attributes.position).count/3;i<r;i++)for(t=0;t<3;t++)A=3*i+t,c.fromBufferAttribute(w,A),d.push(c.x,c.y,c.z),R=3*i+(t+1)%3,c.fromBufferAttribute(w,R),d.push(c.x,c.y,c.z)}this.setAttribute("position",new Wi(d,3))}function sh(e,t,r){Rn.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:r},this.fromBufferGeometry(new lh(e,t,r)),this.mergeVertices()}function lh(e,t,r){rn.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:r};var i,n,o=[],l=[],h=[],f=[],c=1e-5,d=new ua,v=new ua,_=new ua,m=new ua,y=new ua;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var x=t+1;for(i=0;i<=r;i++){var w=i/r;for(n=0;n<=t;n++){var u=n/t;e(u,w,v),l.push(v.x,v.y,v.z),u-c>=0?(e(u-c,w,_),m.subVectors(v,_)):(e(u+c,w,_),m.subVectors(_,v)),w-c>=0?(e(u,w-c,_),y.subVectors(v,_)):(e(u,w+c,_),y.subVectors(_,v)),d.crossVectors(m,y).normalize(),h.push(d.x,d.y,d.z),f.push(u,w)}}for(i=0;i<r;i++)for(n=0;n<t;n++){var a=i*x+n,b=i*x+n+1,M=(i+1)*x+n+1,E=(i+1)*x+n;o.push(a,b,E),o.push(b,M,E)}this.setIndex(o),this.setAttribute("position",new Wi(l,3)),this.setAttribute("normal",new Wi(h,3)),this.setAttribute("uv",new Wi(f,2))}function hh(e,t,r,n){Rn.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:n},this.fromBufferGeometry(new uh(e,t,r,n)),this.mergeVertices()}function uh(e,t,r,n){rn.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:n},r=r||1;var o=[],l=[];function h(a,b,e,t){var i,r,n=Math.pow(2,t),o=[];for(i=0;i<=n;i++){o[i]=[];var l=a.clone().lerp(e,i/n),h=b.clone().lerp(e,i/n),c=n-i;for(r=0;r<=c;r++)o[i][r]=0===r&&i===n?l:l.clone().lerp(h,r/c)}for(i=0;i<n;i++)for(r=0;r<2*(n-i)-1;r++){var d=Math.floor(r/2);r%2==0?(f(o[i][d+1]),f(o[i+1][d]),f(o[i][d])):(f(o[i][d+1]),f(o[i+1][d+1]),f(o[i+1][d]))}}function f(e){o.push(e.x,e.y,e.z)}function c(t,r){var n=3*t;r.x=e[n+0],r.y=e[n+1],r.z=e[n+2]}function d(e,t,r,n){n<0&&1===e.x&&(l[t]=e.x-1),0===r.x&&0===r.z&&(l[t]=n/2/Math.PI+.5)}function v(e){return Math.atan2(e.z,-e.x)}function _(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}!function(e){for(var a=new ua,b=new ua,r=new ua,i=0;i<t.length;i+=3)c(t[i+0],a),c(t[i+1],b),c(t[i+2],r),h(a,b,r,e)}(n=n||0),function(e){for(var t=new ua,i=0;i<o.length;i+=3)t.x=o[i+0],t.y=o[i+1],t.z=o[i+2],t.normalize().multiplyScalar(e),o[i+0]=t.x,o[i+1]=t.y,o[i+2]=t.z}(r),function(){for(var e=new ua,i=0;i<o.length;i+=3){e.x=o[i+0],e.y=o[i+1],e.z=o[i+2];var u=v(e)/2/Math.PI+.5,t=_(e)/Math.PI+.5;l.push(u,1-t)}(function(){for(var a=new ua,b=new ua,e=new ua,t=new ua,r=new $r,n=new $r,h=new $r,i=0,f=0;i<o.length;i+=9,f+=6){a.set(o[i+0],o[i+1],o[i+2]),b.set(o[i+3],o[i+4],o[i+5]),e.set(o[i+6],o[i+7],o[i+8]),r.set(l[f+0],l[f+1]),n.set(l[f+2],l[f+3]),h.set(l[f+4],l[f+5]),t.copy(a).add(b).add(e).divideScalar(3);var c=v(t);d(r,f+0,a,c),d(n,f+2,b,c),d(h,f+4,e,c)}})(),function(){for(var i=0;i<l.length;i+=6){var e=l[i+0],t=l[i+2],r=l[i+4],n=Math.max(e,t,r),o=Math.min(e,t,r);n>.9&&o<.1&&(e<.2&&(l[i+0]+=1),t<.2&&(l[i+2]+=1),r<.2&&(l[i+4]+=1))}}()}(),this.setAttribute("position",new Wi(o,3)),this.setAttribute("normal",new Wi(o.slice(),3)),this.setAttribute("uv",new Wi(l,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}function fh(e,t){Rn.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new ch(e,t)),this.mergeVertices()}function ch(e,t){uh.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}function dh(e,t){Rn.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new vh(e,t)),this.mergeVertices()}function vh(e,t){uh.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}function ph(e,t){Rn.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new _h(e,t)),this.mergeVertices()}function _h(e,t){var r=(1+Math.sqrt(5))/2,n=[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1];uh.call(this,n,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}function gh(e,t){Rn.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new mh(e,t)),this.mergeVertices()}function mh(e,t){var r=(1+Math.sqrt(5))/2,n=1/r,o=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-r,0,-n,r,0,n,-r,0,n,r,-n,-r,0,-n,r,0,n,-r,0,n,r,0,-r,0,-n,r,0,-n,-r,0,n,r,0,n];uh.call(this,o,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}function yh(path,e,t,r,n,o){Rn.call(this),this.type="TubeGeometry",this.parameters={path:path,tubularSegments:e,radius:t,radialSegments:r,closed:n},void 0!==o&&console.warn("THREE.TubeGeometry: taper has been removed.");var l=new bh(path,e,t,r,n);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals,this.fromBufferGeometry(l),this.mergeVertices()}function bh(path,e,t,r,n){rn.call(this),this.type="TubeBufferGeometry",this.parameters={path:path,tubularSegments:e,radius:t,radialSegments:r,closed:n},e=e||64,t=t||1,r=r||8,n=n||!1;var o=path.computeFrenetFrames(e,n);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;var i,l,h=new ua,f=new ua,c=new $r,d=new ua,v=[],_=[],m=[],y=[];function x(i){d=path.getPointAt(i/e,d);var n=o.normals[i],c=o.binormals[i];for(l=0;l<=r;l++){var m=l/r*Math.PI*2,y=Math.sin(m),x=-Math.cos(m);f.x=x*n.x+y*c.x,f.y=x*n.y+y*c.y,f.z=x*n.z+y*c.z,f.normalize(),_.push(f.x,f.y,f.z),h.x=d.x+t*f.x,h.y=d.y+t*f.y,h.z=d.z+t*f.z,v.push(h.x,h.y,h.z)}}!function(){for(i=0;i<e;i++)x(i);x(!1===n?e:0),function(){for(i=0;i<=e;i++)for(l=0;l<=r;l++)c.x=i/e,c.y=l/r,m.push(c.x,c.y)}(),function(){for(l=1;l<=e;l++)for(i=1;i<=r;i++){var a=(r+1)*(l-1)+(i-1),b=(r+1)*l+(i-1),t=(r+1)*l+i,n=(r+1)*(l-1)+i;y.push(a,b,n),y.push(b,t,n)}}()}(),this.setIndex(y),this.setAttribute("position",new Wi(v,3)),this.setAttribute("normal",new Wi(_,3)),this.setAttribute("uv",new Wi(m,2))}function xh(e,t,r,n,p,q,o){Rn.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:p,q:q},void 0!==o&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new wh(e,t,r,n,p,q)),this.mergeVertices()}function wh(e,t,r,n,p,q){rn.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:p,q:q},e=e||1,t=t||.4,r=Math.floor(r)||64,n=Math.floor(n)||8,p=p||2,q=q||3;var i,o,l=[],h=[],f=[],c=[],d=new ua,v=new ua,_=new ua,m=new ua,y=new ua,x=new ua,w=new ua;for(i=0;i<=r;++i){var u=i/r*p*Math.PI*2;for(R(u,p,q,e,_),R(u+.01,p,q,e,m),x.subVectors(m,_),w.addVectors(m,_),y.crossVectors(x,w),w.crossVectors(y,x),y.normalize(),w.normalize(),o=0;o<=n;++o){var M=o/n*Math.PI*2,E=-t*Math.cos(M),S=t*Math.sin(M);d.x=_.x+(E*w.x+S*y.x),d.y=_.y+(E*w.y+S*y.y),d.z=_.z+(E*w.z+S*y.z),h.push(d.x,d.y,d.z),v.subVectors(d,_).normalize(),f.push(v.x,v.y,v.z),c.push(i/r),c.push(o/n)}}for(o=1;o<=r;o++)for(i=1;i<=n;i++){var a=(n+1)*(o-1)+(i-1),b=(n+1)*o+(i-1),T=(n+1)*o+i,A=(n+1)*(o-1)+i;l.push(a,b,A),l.push(b,T,A)}function R(u,p,q,e,t){var r=Math.cos(u),n=Math.sin(u),o=q/p*u,l=Math.cos(o);t.x=e*(2+l)*.5*r,t.y=e*(2+l)*n*.5,t.z=e*Math.sin(o)*.5}this.setIndex(l),this.setAttribute("position",new Wi(h,3)),this.setAttribute("normal",new Wi(f,3)),this.setAttribute("uv",new Wi(c,2))}function Mh(e,t,r,n,o){Rn.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:o},this.fromBufferGeometry(new Eh(e,t,r,n,o)),this.mergeVertices()}function Eh(e,t,r,n,o){rn.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:o},e=e||1,t=t||.4,r=Math.floor(r)||8,n=Math.floor(n)||6,o=o||2*Math.PI;var l,i,h=[],f=[],c=[],d=[],v=new ua,_=new ua,m=new ua;for(l=0;l<=r;l++)for(i=0;i<=n;i++){var u=i/n*o,y=l/r*Math.PI*2;_.x=(e+t*Math.cos(y))*Math.cos(u),_.y=(e+t*Math.cos(y))*Math.sin(u),_.z=t*Math.sin(y),f.push(_.x,_.y,_.z),v.x=e*Math.cos(u),v.y=e*Math.sin(u),m.subVectors(_,v).normalize(),c.push(m.x,m.y,m.z),d.push(i/n),d.push(l/r)}for(l=1;l<=r;l++)for(i=1;i<=n;i++){var a=(n+1)*l+i-1,b=(n+1)*(l-1)+i-1,x=(n+1)*(l-1)+i,w=(n+1)*l+i;h.push(a,b,w),h.push(b,x,w)}this.setIndex(h),this.setAttribute("position",new Wi(f,3)),this.setAttribute("normal",new Wi(c,3)),this.setAttribute("uv",new Wi(d,2))}$l.prototype=Object.assign(Object.create(Da.prototype),{constructor:$l,isPoints:!0,raycast:function(e,t){var r=this.geometry,n=this.matrixWorld,o=e.params.Points.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),Kl.copy(r.boundingSphere),Kl.applyMatrix4(n),Kl.radius+=o,!1!==e.ray.intersectsSphere(Kl)){Zl.getInverse(n),Jl.copy(e.ray).applyMatrix4(Zl);var l=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=l*l;if(r.isBufferGeometry){var f=r.index,c=r.attributes.position.array;if(null!==f)for(var d=f.array,i=0,v=d.length;i<v;i++){var a=d[i];Ql.fromArray(c,3*a),eh(Ql,a,h,n,e,t,this)}else{i=0;for(var _=c.length/3;i<_;i++)Ql.fromArray(c,3*i),eh(Ql,i,h,n,e,t,this)}}else{var m=r.vertices;for(i=0,_=m.length;i<_;i++)eh(m[i],i,h,n,e,t,this)}}},updateMorphTargets:function(){var e,t,r,n=this.geometry;if(n.isBufferGeometry){var o=n.morphAttributes,l=Object.keys(o);if(l.length>0){var h=o[l[0]];if(void 0!==h)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,t=h.length;e<t;e++)r=h[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=e}}else{var f=n.morphTargets;void 0!==f&&f.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),rh.prototype=Object.assign(Object.create(aa.prototype),{constructor:rh,isVideoTexture:!0,update:function(){var video=this.image;video.readyState>=video.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),ah.prototype=Object.create(aa.prototype),ah.prototype.constructor=ah,ah.prototype.isCompressedTexture=!0,ih.prototype=Object.create(aa.prototype),ih.prototype.constructor=ih,ih.prototype.isCanvasTexture=!0,nh.prototype=Object.create(aa.prototype),nh.prototype.constructor=nh,nh.prototype.isDepthTexture=!0,oh.prototype=Object.create(rn.prototype),oh.prototype.constructor=oh,sh.prototype=Object.create(Rn.prototype),sh.prototype.constructor=sh,lh.prototype=Object.create(rn.prototype),lh.prototype.constructor=lh,hh.prototype=Object.create(Rn.prototype),hh.prototype.constructor=hh,uh.prototype=Object.create(rn.prototype),uh.prototype.constructor=uh,fh.prototype=Object.create(Rn.prototype),fh.prototype.constructor=fh,ch.prototype=Object.create(uh.prototype),ch.prototype.constructor=ch,dh.prototype=Object.create(Rn.prototype),dh.prototype.constructor=dh,vh.prototype=Object.create(uh.prototype),vh.prototype.constructor=vh,ph.prototype=Object.create(Rn.prototype),ph.prototype.constructor=ph,_h.prototype=Object.create(uh.prototype),_h.prototype.constructor=_h,gh.prototype=Object.create(Rn.prototype),gh.prototype.constructor=gh,mh.prototype=Object.create(uh.prototype),mh.prototype.constructor=mh,yh.prototype=Object.create(Rn.prototype),yh.prototype.constructor=yh,bh.prototype=Object.create(rn.prototype),bh.prototype.constructor=bh,bh.prototype.toJSON=function(){var data=rn.prototype.toJSON.call(this);return data.path=this.parameters.path.toJSON(),data},xh.prototype=Object.create(Rn.prototype),xh.prototype.constructor=xh,wh.prototype=Object.create(rn.prototype),wh.prototype.constructor=wh,Mh.prototype=Object.create(Rn.prototype),Mh.prototype.constructor=Mh,Eh.prototype=Object.create(rn.prototype),Eh.prototype.constructor=Eh;var Sh=function(data,e,t){t=t||2;var r,n,o,l,h,f,c,d=e&&e.length,v=d?e[0]*t:data.length,_=Th(data,0,v,t,!0),m=[];if(!_||_.next===_.prev)return m;if(d&&(_=function(data,e,t,r){var i,n,o,l,h,f=[];for(i=0,n=e.length;i<n;i++)o=e[i]*r,l=i<n-1?e[i+1]*r:data.length,(h=Th(data,o,l,r,!1))===h.next&&(h.steiner=!0),f.push(Bh(h));for(f.sort(kh),i=0;i<f.length;i++)Ih(f[i],t),t=Ah(t,t.next);return t}(data,e,_,t)),data.length>80*t){r=o=data[0],n=l=data[1];for(var i=t;i<v;i+=t)(h=data[i])<r&&(r=h),(f=data[i+1])<n&&(n=f),h>o&&(o=h),f>l&&(l=f);c=0!==(c=Math.max(o-r,l-n))?1/c:0}return Rh(_,m,t,r,n,c),m};function Th(data,e,t,r,n){var i,o;if(n===function(data,e,t,r){for(var n=0,i=e,o=t-r;i<t;i+=r)n+=(data[o]-data[i])*(data[i+1]+data[o+1]),o=i;return n}(data,e,t,r)>0)for(i=e;i<t;i+=r)o=qh(i,data[i],data[i+1],o);else for(i=t-r;i>=e;i-=r)o=qh(i,data[i],data[i+1],o);return o&&jh(o,o.next)&&(Xh(o),o=o.next),o}function Ah(e,t){if(!e)return e;t||(t=e);var r,p=e;do{if(r=!1,p.steiner||!jh(p,p.next)&&0!==area(p.prev,p,p.next))p=p.next;else{if(Xh(p),(p=t=p.prev)===p.next)break;r=!0}}while(r||p!==t);return t}function Rh(e,t,r,n,o,l,h){if(e){!h&&l&&function(e,t,r,n){var p=e;do{null===p.z&&(p.z=Dh(p.x,p.y,t,r,n)),p.prevZ=p.prev,p.nextZ=p.next,p=p.next}while(p!==e);p.prevZ.nextZ=null,p.prevZ=null,function(e){var i,p,q,t,r,n,o,l,h=1;do{for(p=e,e=null,r=null,n=0;p;){for(n++,q=p,o=0,i=0;i<h&&(o++,q=q.nextZ);i++);for(l=h;o>0||l>0&&q;)0!==o&&(0===l||!q||p.z<=q.z)?(t=p,p=p.nextZ,o--):(t=q,q=q.nextZ,l--),r?r.nextZ=t:e=t,t.prevZ=r,r=t;p=q}r.nextZ=null,h*=2}while(n>1)}(p)}(e,n,o,l);for(var f,c,d=e;e.prev!==e.next;)if(f=e.prev,c=e.next,l?Lh(e,n,o,l):Ch(e))t.push(f.i/r),t.push(e.i/r),t.push(c.i/r),Xh(e),e=c.next,d=c.next;else if((e=c)===d){h?1===h?Rh(e=Ph(Ah(e),t,r),t,r,n,o,l,2):2===h&&Oh(e,t,r,n,o,l):Rh(Ah(e),t,r,n,o,l,1);break}}}function Ch(e){var a=e.prev,b=e,t=e.next;if(area(a,b,t)>=0)return!1;for(var p=e.next.next;p!==e.prev;){if(Fh(a.x,a.y,b.x,b.y,t.x,t.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function Lh(e,t,r,n){var a=e.prev,b=e,o=e.next;if(area(a,b,o)>=0)return!1;for(var l=a.x<b.x?a.x<o.x?a.x:o.x:b.x<o.x?b.x:o.x,h=a.y<b.y?a.y<o.y?a.y:o.y:b.y<o.y?b.y:o.y,f=a.x>b.x?a.x>o.x?a.x:o.x:b.x>o.x?b.x:o.x,c=a.y>b.y?a.y>o.y?a.y:o.y:b.y>o.y?b.y:o.y,d=Dh(l,h,t,r,n),v=Dh(f,c,t,r,n),p=e.prevZ,_=e.nextZ;p&&p.z>=d&&_&&_.z<=v;){if(p!==e.prev&&p!==e.next&&Fh(a.x,a.y,b.x,b.y,o.x,o.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,_!==e.prev&&_!==e.next&&Fh(a.x,a.y,b.x,b.y,o.x,o.y,_.x,_.y)&&area(_.prev,_,_.next)>=0)return!1;_=_.nextZ}for(;p&&p.z>=d;){if(p!==e.prev&&p!==e.next&&Fh(a.x,a.y,b.x,b.y,o.x,o.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;_&&_.z<=v;){if(_!==e.prev&&_!==e.next&&Fh(a.x,a.y,b.x,b.y,o.x,o.y,_.x,_.y)&&area(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function Ph(e,t,r){var p=e;do{var a=p.prev,b=p.next.next;!jh(a,b)&&Vh(a,p,p.next,b)&&Hh(a,b)&&Hh(b,a)&&(t.push(a.i/r),t.push(p.i/r),t.push(b.i/r),Xh(p),Xh(p.next),p=e=b),p=p.next}while(p!==e);return Ah(p)}function Oh(e,t,r,n,o,l){var a=e;do{for(var b=a.next.next;b!==a.prev;){if(a.i!==b.i&&Uh(a,b)){var h=Wh(a,b);return a=Ah(a,a.next),h=Ah(h,h.next),Rh(a,t,r,n,o,l),void Rh(h,t,r,n,o,l)}b=b.next}a=a.next}while(a!==e)}function kh(a,b){return a.x-b.x}function Ih(e,t){if(t=function(e,t){var r,p=t,n=e.x,o=e.y,l=-1/0;do{if(o<=p.y&&o>=p.next.y&&p.next.y!==p.y){var h=p.x+(o-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(h<=n&&h>l){if(l=h,h===n){if(o===p.y)return p;if(o===p.next.y)return p.next}r=p.x<p.next.x?p:p.next}}p=p.next}while(p!==t);if(!r)return null;if(n===l)return r;var f,c=r,d=r.x,v=r.y,_=1/0;p=r;do{n>=p.x&&p.x>=d&&n!==p.x&&Fh(o<v?n:l,o,d,v,o<v?l:n,o,p.x,p.y)&&(f=Math.abs(o-p.y)/(n-p.x),Hh(p,e)&&(f<_||f===_&&(p.x>r.x||p.x===r.x&&Nh(r,p)))&&(r=p,_=f)),p=p.next}while(p!==c);return r}(e,t)){var b=Wh(t,e);Ah(t,t.next),Ah(b,b.next)}}function Nh(e,p){return area(e.prev,e,p.prev)<0&&area(p.next,e,e.next)<0}function Dh(e,t,r,n,o){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*o)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*o)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Bh(e){var p=e,t=e;do{(p.x<t.x||p.x===t.x&&p.y<t.y)&&(t=p),p=p.next}while(p!==e);return t}function Fh(e,t,r,n,o,l,h,f){return(o-h)*(t-f)-(e-h)*(l-f)>=0&&(e-h)*(n-f)-(r-h)*(t-f)>=0&&(r-h)*(l-f)-(o-h)*(n-f)>=0}function Uh(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!function(a,b){var p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&Vh(p,p.next,a,b))return!0;p=p.next}while(p!==a);return!1}(a,b)&&(Hh(a,b)&&Hh(b,a)&&function(a,b){var p=a,e=!1,t=(a.x+b.x)/2,r=(a.y+b.y)/2;do{p.y>r!=p.next.y>r&&p.next.y!==p.y&&t<(p.next.x-p.x)*(r-p.y)/(p.next.y-p.y)+p.x&&(e=!e),p=p.next}while(p!==a);return e}(a,b)&&(area(a.prev,a,b.prev)||area(a,b.prev,b))||jh(a,b)&&area(a.prev,a,a.next)>0&&area(b.prev,b,b.next)>0)}function area(p,q,e){return(q.y-p.y)*(e.x-q.x)-(q.x-p.x)*(e.y-q.y)}function jh(e,t){return e.x===t.x&&e.y===t.y}function Vh(e,t,r,n){var o=Gh(area(e,t,r)),l=Gh(area(e,t,n)),h=Gh(area(r,n,e)),f=Gh(area(r,n,t));return o!==l&&h!==f||(!(0!==o||!zh(e,r,t))||(!(0!==l||!zh(e,n,t))||(!(0!==h||!zh(r,e,n))||!(0!==f||!zh(r,t,n)))))}function zh(p,q,e){return q.x<=Math.max(p.x,e.x)&&q.x>=Math.min(p.x,e.x)&&q.y<=Math.max(p.y,e.y)&&q.y>=Math.min(p.y,e.y)}function Gh(e){return e>0?1:e<0?-1:0}function Hh(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0}function Wh(a,b){var e=new Yh(a.i,a.x,a.y),t=new Yh(b.i,b.x,b.y),r=a.next,n=b.prev;return a.next=b,b.prev=a,e.next=r,r.prev=e,t.next=e,e.prev=t,n.next=t,t.prev=n,t}function qh(i,e,t,r){var p=new Yh(i,e,t);return r?(p.next=r.next,p.prev=r,r.next.prev=p,r.next=p):(p.prev=p,p.next=p),p}function Xh(p){p.next.prev=p.prev,p.prev.next=p.next,p.prevZ&&(p.prevZ.nextZ=p.nextZ),p.nextZ&&(p.nextZ.prevZ=p.prevZ)}function Yh(i,e,t){this.i=i,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}var Zh={area:function(e){for(var t=e.length,a=0,p=t-1,q=0;q<t;p=q++)a+=e[p].x*e[q].y-e[q].x*e[p].y;return.5*a},isClockWise:function(e){return Zh.area(e)<0},triangulateShape:function(e,t){var r=[],n=[],o=[];Jh(e),Kh(r,e);var l=e.length;t.forEach(Jh);for(var i=0;i<t.length;i++)n.push(l),l+=t[i].length,Kh(r,t[i]);var h=Sh(r,n);for(i=0;i<h.length;i+=3)o.push(h.slice(i,i+3));return o}};function Jh(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function Kh(e,t){for(var i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}function Qh(e,t){Rn.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new $h(e,t)),this.mergeVertices()}function $h(e,t){rn.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];for(var r=this,n=[],o=[],i=0,l=e.length;i<l;i++){h(e[i])}function h(e){var l=[],h=void 0!==t.curveSegments?t.curveSegments:12,f=void 0!==t.steps?t.steps:1,c=void 0!==t.depth?t.depth:100,d=void 0===t.bevelEnabled||t.bevelEnabled,v=void 0!==t.bevelThickness?t.bevelThickness:6,_=void 0!==t.bevelSize?t.bevelSize:v-2,m=void 0!==t.bevelOffset?t.bevelOffset:0,y=void 0!==t.bevelSegments?t.bevelSegments:3,x=t.extrudePath,w=void 0!==t.UVGenerator?t.UVGenerator:eu;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),c=t.amount);var M,E,S,T,A,R,C,L,P=!1;x&&(M=x.getSpacedPoints(f),P=!0,d=!1,E=x.computeFrenetFrames(f,!1),S=new ua,T=new ua,A=new ua),d||(y=0,v=0,_=0,m=0);var O=e.extractPoints(h),k=O.shape,I=O.holes;if(!Zh.isClockWise(k))for(k=k.reverse(),C=0,L=I.length;C<L;C++)R=I[C],Zh.isClockWise(R)&&(I[C]=R.reverse());var N=Zh.triangulateShape(k,I),D=k;for(C=0,L=I.length;C<L;C++)R=I[C],k=k.concat(R);function B(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}var b,F,U,j,V,z,G=k.length,H=N.length;function W(e,t,r){var n,o,l,h=e.x-t.x,f=e.y-t.y,c=r.x-e.x,d=r.y-e.y,v=h*h+f*f,_=h*d-f*c;if(Math.abs(_)>Number.EPSILON){var m=Math.sqrt(v),y=Math.sqrt(c*c+d*d),x=t.x-f/m,w=t.y+h/m,M=((r.x-d/y-x)*d-(r.y+c/y-w)*c)/(h*d-f*c),E=(n=x+h*M-e.x)*n+(o=w+f*M-e.y)*o;if(E<=2)return new $r(n,o);l=Math.sqrt(E/2)}else{var S=!1;h>Number.EPSILON?c>Number.EPSILON&&(S=!0):h<-Number.EPSILON?c<-Number.EPSILON&&(S=!0):Math.sign(f)===Math.sign(d)&&(S=!0),S?(n=-f,o=h,l=Math.sqrt(v)):(n=h,o=f,l=Math.sqrt(v/2))}return new $r(n/l,o/l)}for(var X=[],i=0,Y=D.length,Z=Y-1,J=i+1;i<Y;i++,Z++,J++)Z===Y&&(Z=0),J===Y&&(J=0),X[i]=W(D[i],D[Z],D[J]);var K,s,Q=[],$=X.concat();for(C=0,L=I.length;C<L;C++){for(R=I[C],K=[],i=0,Z=(Y=R.length)-1,J=i+1;i<Y;i++,Z++,J++)Z===Y&&(Z=0),J===Y&&(J=0),K[i]=W(R[i],R[Z],R[J]);Q.push(K),$=$.concat(K)}for(b=0;b<y;b++){for(U=b/y,j=v*Math.cos(U*Math.PI/2),F=_*Math.sin(U*Math.PI/2)+m,i=0,Y=D.length;i<Y;i++)te((V=B(D[i],X[i],F)).x,V.y,-j);for(C=0,L=I.length;C<L;C++)for(R=I[C],K=Q[C],i=0,Y=R.length;i<Y;i++)te((V=B(R[i],K[i],F)).x,V.y,-j)}for(F=_+m,i=0;i<G;i++)V=d?B(k[i],$[i],F):k[i],P?(T.copy(E.normals[0]).multiplyScalar(V.x),S.copy(E.binormals[0]).multiplyScalar(V.y),A.copy(M[0]).add(T).add(S),te(A.x,A.y,A.z)):te(V.x,V.y,0);for(s=1;s<=f;s++)for(i=0;i<G;i++)V=d?B(k[i],$[i],F):k[i],P?(T.copy(E.normals[s]).multiplyScalar(V.x),S.copy(E.binormals[s]).multiplyScalar(V.y),A.copy(M[s]).add(T).add(S),te(A.x,A.y,A.z)):te(V.x,V.y,c/f*s);for(b=y-1;b>=0;b--){for(U=b/y,j=v*Math.cos(U*Math.PI/2),F=_*Math.sin(U*Math.PI/2)+m,i=0,Y=D.length;i<Y;i++)te((V=B(D[i],X[i],F)).x,V.y,c+j);for(C=0,L=I.length;C<L;C++)for(R=I[C],K=Q[C],i=0,Y=R.length;i<Y;i++)V=B(R[i],K[i],F),P?te(V.x,V.y+M[f-1].y,M[f-1].x+j):te(V.x,V.y,c+j)}function ee(e,t){var r,n;for(i=e.length;--i>=0;){r=i,(n=i-1)<0&&(n=e.length-1);var s=0,o=f+2*y;for(s=0;s<o;s++){var l=G*s,h=G*(s+1);ae(t+r+l,t+n+l,t+n+h,t+r+h)}}}function te(e,t,r){l.push(e),l.push(t),l.push(r)}function re(a,b,e){ie(a),ie(b),ie(e);var t=n.length/3,o=w.generateTopUV(r,n,t-3,t-2,t-1);ne(o[0]),ne(o[1]),ne(o[2])}function ae(a,b,e,t){ie(a),ie(b),ie(t),ie(b),ie(e),ie(t);var o=n.length/3,l=w.generateSideWallUV(r,n,o-6,o-3,o-2,o-1);ne(l[0]),ne(l[1]),ne(l[3]),ne(l[1]),ne(l[2]),ne(l[3])}function ie(e){n.push(l[3*e+0]),n.push(l[3*e+1]),n.push(l[3*e+2])}function ne(e){o.push(e.x),o.push(e.y)}!function(){var e=n.length/3;if(d){var t=0,o=G*t;for(i=0;i<H;i++)re((z=N[i])[2]+o,z[1]+o,z[0]+o);for(o=G*(t=f+2*y),i=0;i<H;i++)re((z=N[i])[0]+o,z[1]+o,z[2]+o)}else{for(i=0;i<H;i++)re((z=N[i])[2],z[1],z[0]);for(i=0;i<H;i++)re((z=N[i])[0]+G*f,z[1]+G*f,z[2]+G*f)}r.addGroup(e,n.length/3-e,0)}(),function(){var e=n.length/3,t=0;for(ee(D,t),t+=D.length,C=0,L=I.length;C<L;C++)ee(R=I[C],t),t+=R.length;r.addGroup(e,n.length/3-e,1)}()}this.setAttribute("position",new Wi(n,3)),this.setAttribute("uv",new Wi(o,2)),this.computeVertexNormals()}Qh.prototype=Object.create(Rn.prototype),Qh.prototype.constructor=Qh,Qh.prototype.toJSON=function(){var data=Rn.prototype.toJSON.call(this);return tu(this.parameters.shapes,this.parameters.options,data)},$h.prototype=Object.create(rn.prototype),$h.prototype.constructor=$h,$h.prototype.toJSON=function(){var data=rn.prototype.toJSON.call(this);return tu(this.parameters.shapes,this.parameters.options,data)};var eu={generateTopUV:function(e,t,r,n,o){var l=t[3*r],h=t[3*r+1],f=t[3*n],c=t[3*n+1],d=t[3*o],v=t[3*o+1];return[new $r(l,h),new $r(f,c),new $r(d,v)]},generateSideWallUV:function(e,t,r,n,o,l){var h=t[3*r],f=t[3*r+1],c=t[3*r+2],d=t[3*n],v=t[3*n+1],_=t[3*n+2],m=t[3*o],y=t[3*o+1],x=t[3*o+2],w=t[3*l],M=t[3*l+1],E=t[3*l+2];return Math.abs(f-v)<.01?[new $r(h,1-c),new $r(d,1-_),new $r(m,1-x),new $r(w,1-E)]:[new $r(f,1-c),new $r(v,1-_),new $r(y,1-x),new $r(M,1-E)]}};function tu(e,t,data){if(data.shapes=[],Array.isArray(e))for(var i=0,r=e.length;i<r;i++){var n=e[i];data.shapes.push(n.uuid)}else data.shapes.push(e.uuid);return void 0!==t.extrudePath&&(data.options.extrudePath=t.extrudePath.toJSON()),data}function ru(text,e){Rn.call(this),this.type="TextGeometry",this.parameters={text:text,parameters:e},this.fromBufferGeometry(new au(text,e)),this.mergeVertices()}function au(text,e){var t=(e=e||{}).font;if(!t||!t.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Rn;var r=t.generateShapes(text,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),$h.call(this,r,e),this.type="TextBufferGeometry"}function iu(e,t,r,n,o,l,h){Rn.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:o,thetaStart:l,thetaLength:h},this.fromBufferGeometry(new nu(e,t,r,n,o,l,h)),this.mergeVertices()}function nu(e,t,r,n,o,l,h){rn.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:o,thetaStart:l,thetaLength:h},e=e||1,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6),n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI,l=void 0!==l?l:0,h=void 0!==h?h:Math.PI;var f,c,d=Math.min(l+h,Math.PI),v=0,_=[],m=new ua,y=new ua,x=[],w=[],M=[],E=[];for(c=0;c<=r;c++){var S=[],T=c/r,A=0;for(0==c&&0==l?A=.5/t:c==r&&d==Math.PI&&(A=-.5/t),f=0;f<=t;f++){var u=f/t;m.x=-e*Math.cos(n+u*o)*Math.sin(l+T*h),m.y=e*Math.cos(l+T*h),m.z=e*Math.sin(n+u*o)*Math.sin(l+T*h),w.push(m.x,m.y,m.z),y.copy(m).normalize(),M.push(y.x,y.y,y.z),E.push(u+A,1-T),S.push(v++)}_.push(S)}for(c=0;c<r;c++)for(f=0;f<t;f++){var a=_[c][f+1],b=_[c][f],R=_[c+1][f],C=_[c+1][f+1];(0!==c||l>0)&&x.push(a,b,C),(c!==r-1||d<Math.PI)&&x.push(b,R,C)}this.setIndex(x),this.setAttribute("position",new Wi(w,3)),this.setAttribute("normal",new Wi(M,3)),this.setAttribute("uv",new Wi(E,2))}function ou(e,t,r,n,o,l){Rn.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:o,thetaLength:l},this.fromBufferGeometry(new su(e,t,r,n,o,l)),this.mergeVertices()}function su(e,t,r,n,o,l){rn.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:o,thetaLength:l},e=e||.5,t=t||1,o=void 0!==o?o:0,l=void 0!==l?l:2*Math.PI,r=void 0!==r?Math.max(3,r):8;var h,f,i,c=[],d=[],v=[],_=[],m=e,y=(t-e)/(n=void 0!==n?Math.max(1,n):1),x=new ua,w=new $r;for(f=0;f<=n;f++){for(i=0;i<=r;i++)h=o+i/r*l,x.x=m*Math.cos(h),x.y=m*Math.sin(h),d.push(x.x,x.y,x.z),v.push(0,0,1),w.x=(x.x/t+1)/2,w.y=(x.y/t+1)/2,_.push(w.x,w.y);m+=y}for(f=0;f<n;f++){var M=f*(r+1);for(i=0;i<r;i++){var a=h=i+M,b=h+r+1,E=h+r+2,S=h+1;c.push(a,b,S),c.push(b,E,S)}}this.setIndex(c),this.setAttribute("position",new Wi(d,3)),this.setAttribute("normal",new Wi(v,3)),this.setAttribute("uv",new Wi(_,2))}function lu(e,t,r,n){Rn.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},this.fromBufferGeometry(new hu(e,t,r,n)),this.mergeVertices()}function hu(e,t,r,n){rn.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},t=Math.floor(t)||12,r=r||0,n=n||2*Math.PI,n=Qr.clamp(n,0,2*Math.PI);var base,i,o,l=[],h=[],f=[],c=1/t,d=new ua,v=new $r;for(i=0;i<=t;i++){var _=r+i*c*n,m=Math.sin(_),y=Math.cos(_);for(o=0;o<=e.length-1;o++)d.x=e[o].x*m,d.y=e[o].y,d.z=e[o].x*y,h.push(d.x,d.y,d.z),v.x=i/t,v.y=o/(e.length-1),f.push(v.x,v.y)}for(i=0;i<t;i++)for(o=0;o<e.length-1;o++){var a=base=o+i*e.length,b=base+e.length,x=base+e.length+1,w=base+1;l.push(a,b,w),l.push(b,x,w)}if(this.setIndex(l),this.setAttribute("position",new Wi(h,3)),this.setAttribute("uv",new Wi(f,2)),this.computeVertexNormals(),n===2*Math.PI){var M=this.attributes.normal.array,E=new ua,S=new ua,T=new ua;for(base=t*e.length*3,i=0,o=0;i<e.length;i++,o+=3)E.x=M[o+0],E.y=M[o+1],E.z=M[o+2],S.x=M[base+o+0],S.y=M[base+o+1],S.z=M[base+o+2],T.addVectors(E,S).normalize(),M[o+0]=M[base+o+0]=T.x,M[o+1]=M[base+o+1]=T.y,M[o+2]=M[base+o+2]=T.z}}function uu(e,t){Rn.call(this),this.type="ShapeGeometry","object"==typeof t&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new fu(e,t)),this.mergeVertices()}function fu(e,t){rn.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;var r=[],n=[],o=[],l=[],h=0,f=0;if(!1===Array.isArray(e))c(e);else for(var i=0;i<e.length;i++)c(e[i]),this.addGroup(h,f,i),h+=f,f=0;function c(e){var i,h,c,d=n.length/3,v=e.extractPoints(t),_=v.shape,m=v.holes;for(!1===Zh.isClockWise(_)&&(_=_.reverse()),i=0,h=m.length;i<h;i++)c=m[i],!0===Zh.isClockWise(c)&&(m[i]=c.reverse());var y=Zh.triangulateShape(_,m);for(i=0,h=m.length;i<h;i++)c=m[i],_=_.concat(c);for(i=0,h=_.length;i<h;i++){var x=_[i];n.push(x.x,x.y,0),o.push(0,0,1),l.push(x.x,x.y)}for(i=0,h=y.length;i<h;i++){var w=y[i],a=w[0]+d,b=w[1]+d,M=w[2]+d;r.push(a,b,M),f+=3}}this.setIndex(r),this.setAttribute("position",new Wi(n,3)),this.setAttribute("normal",new Wi(o,3)),this.setAttribute("uv",new Wi(l,2))}function cu(e,data){if(data.shapes=[],Array.isArray(e))for(var i=0,t=e.length;i<t;i++){var r=e[i];data.shapes.push(r.uuid)}else data.shapes.push(e.uuid);return data}function du(e,t){rn.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1;var r,n,o,l,h=[],f=Math.cos(Qr.DEG2RAD*t),c=[0,0],d={},v=["a","b","c"];e.isBufferGeometry?(l=new Rn).fromBufferGeometry(e):l=e.clone(),l.mergeVertices(),l.computeFaceNormals();for(var _=l.vertices,m=l.faces,i=0,y=m.length;i<y;i++)for(var x=m[i],w=0;w<3;w++)r=x[v[w]],n=x[v[(w+1)%3]],c[0]=Math.min(r,n),c[1]=Math.max(r,n),void 0===d[o=c[0]+","+c[1]]?d[o]={index1:c[0],index2:c[1],face1:i,face2:void 0}:d[o].face2=i;for(o in d){var M=d[o];if(void 0===M.face2||m[M.face1].normal.dot(m[M.face2].normal)<=f){var E=_[M.index1];h.push(E.x,E.y,E.z),E=_[M.index2],h.push(E.x,E.y,E.z)}}this.setAttribute("position",new Wi(h,3))}function vu(e,t,r,n,o,l,h,f){Rn.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:o,openEnded:l,thetaStart:h,thetaLength:f},this.fromBufferGeometry(new pu(e,t,r,n,o,l,h,f)),this.mergeVertices()}function pu(e,t,r,n,o,l,h,f){rn.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:o,openEnded:l,thetaStart:h,thetaLength:f};var c=this;e=void 0!==e?e:1,t=void 0!==t?t:1,r=r||1,n=Math.floor(n)||8,o=Math.floor(o)||1,l=void 0!==l&&l,h=void 0!==h?h:0,f=void 0!==f?f:2*Math.PI;var d=[],v=[],_=[],m=[],y=0,x=[],w=r/2,M=0;function E(r){var o,l,x,E=new $r,S=new ua,T=0,A=!0===r?e:t,R=!0===r?1:-1;for(l=y,o=1;o<=n;o++)v.push(0,w*R,0),_.push(0,R,0),m.push(.5,.5),y++;for(x=y,o=0;o<=n;o++){var C=o/n*f+h,L=Math.cos(C),P=Math.sin(C);S.x=A*P,S.y=w*R,S.z=A*L,v.push(S.x,S.y,S.z),_.push(0,R,0),E.x=.5*L+.5,E.y=.5*P*R+.5,m.push(E.x,E.y),y++}for(o=0;o<n;o++){var O=l+o,i=x+o;!0===r?d.push(i,i+1,O):d.push(i+1,i,O),T+=3}c.addGroup(M,T,!0===r?1:2),M+=T}!function(){var l,E,S=new ua,T=new ua,A=0,R=(t-e)/r;for(E=0;E<=o;E++){var C=[],L=E/o,P=L*(t-e)+e;for(l=0;l<=n;l++){var u=l/n,O=u*f+h,k=Math.sin(O),I=Math.cos(O);T.x=P*k,T.y=-L*r+w,T.z=P*I,v.push(T.x,T.y,T.z),S.set(k,R,I).normalize(),_.push(S.x,S.y,S.z),m.push(u,1-L),C.push(y++)}x.push(C)}for(l=0;l<n;l++)for(E=0;E<o;E++){var a=x[E][l],b=x[E+1][l],N=x[E+1][l+1],D=x[E][l+1];d.push(a,b,D),d.push(b,N,D),A+=6}c.addGroup(M,A,0),M+=A}(),!1===l&&(e>0&&E(!0),t>0&&E(!1)),this.setIndex(d),this.setAttribute("position",new Wi(v,3)),this.setAttribute("normal",new Wi(_,3)),this.setAttribute("uv",new Wi(m,2))}function _u(e,t,r,n,o,l,h){vu.call(this,0,e,t,r,n,o,l,h),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:o,thetaStart:l,thetaLength:h}}function gu(e,t,r,n,o,l,h){pu.call(this,0,e,t,r,n,o,l,h),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:o,thetaStart:l,thetaLength:h}}function mu(e,t,r,n){Rn.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},this.fromBufferGeometry(new yu(e,t,r,n)),this.mergeVertices()}function yu(e,t,r,n){rn.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},e=e||1,t=void 0!==t?Math.max(3,t):8,r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI;var i,s,o=[],l=[],h=[],f=[],c=new ua,d=new $r;for(l.push(0,0,0),h.push(0,0,1),f.push(.5,.5),s=0,i=3;s<=t;s++,i+=3){var v=r+s/t*n;c.x=e*Math.cos(v),c.y=e*Math.sin(v),l.push(c.x,c.y,c.z),h.push(0,0,1),d.x=(l[i]/e+1)/2,d.y=(l[i+1]/e+1)/2,f.push(d.x,d.y)}for(i=1;i<=t;i++)o.push(i,i+1,0);this.setIndex(o),this.setAttribute("position",new Wi(l,3)),this.setAttribute("normal",new Wi(h,3)),this.setAttribute("uv",new Wi(f,2))}ru.prototype=Object.create(Rn.prototype),ru.prototype.constructor=ru,au.prototype=Object.create($h.prototype),au.prototype.constructor=au,iu.prototype=Object.create(Rn.prototype),iu.prototype.constructor=iu,nu.prototype=Object.create(rn.prototype),nu.prototype.constructor=nu,ou.prototype=Object.create(Rn.prototype),ou.prototype.constructor=ou,su.prototype=Object.create(rn.prototype),su.prototype.constructor=su,lu.prototype=Object.create(Rn.prototype),lu.prototype.constructor=lu,hu.prototype=Object.create(rn.prototype),hu.prototype.constructor=hu,uu.prototype=Object.create(Rn.prototype),uu.prototype.constructor=uu,uu.prototype.toJSON=function(){var data=Rn.prototype.toJSON.call(this);return cu(this.parameters.shapes,data)},fu.prototype=Object.create(rn.prototype),fu.prototype.constructor=fu,fu.prototype.toJSON=function(){var data=rn.prototype.toJSON.call(this);return cu(this.parameters.shapes,data)},du.prototype=Object.create(rn.prototype),du.prototype.constructor=du,vu.prototype=Object.create(Rn.prototype),vu.prototype.constructor=vu,pu.prototype=Object.create(rn.prototype),pu.prototype.constructor=pu,_u.prototype=Object.create(vu.prototype),_u.prototype.constructor=_u,gu.prototype=Object.create(pu.prototype),gu.prototype.constructor=gu,mu.prototype=Object.create(Rn.prototype),mu.prototype.constructor=mu,yu.prototype=Object.create(rn.prototype),yu.prototype.constructor=yu;var bu=Object.freeze({__proto__:null,WireframeGeometry:oh,ParametricGeometry:sh,ParametricBufferGeometry:lh,TetrahedronGeometry:fh,TetrahedronBufferGeometry:ch,OctahedronGeometry:dh,OctahedronBufferGeometry:vh,IcosahedronGeometry:ph,IcosahedronBufferGeometry:_h,DodecahedronGeometry:gh,DodecahedronBufferGeometry:mh,PolyhedronGeometry:hh,PolyhedronBufferGeometry:uh,TubeGeometry:yh,TubeBufferGeometry:bh,TorusKnotGeometry:xh,TorusKnotBufferGeometry:wh,TorusGeometry:Mh,TorusBufferGeometry:Eh,TextGeometry:ru,TextBufferGeometry:au,SphereGeometry:iu,SphereBufferGeometry:nu,RingGeometry:ou,RingBufferGeometry:su,PlaneGeometry:qn,PlaneBufferGeometry:Xn,LatheGeometry:lu,LatheBufferGeometry:hu,ShapeGeometry:uu,ShapeBufferGeometry:fu,ExtrudeGeometry:Qh,ExtrudeBufferGeometry:$h,EdgesGeometry:du,ConeGeometry:_u,ConeBufferGeometry:gu,CylinderGeometry:vu,CylinderBufferGeometry:pu,CircleGeometry:mu,CircleBufferGeometry:yu,BoxGeometry:Cn,BoxBufferGeometry:Ln});function xu(e){Ii.call(this),this.type="ShadowMaterial",this.color=new Ri(0),this.transparent=!0,this.setValues(e)}function wu(e){In.call(this,e),this.type="RawShaderMaterial"}function Mu(e){Ii.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ri(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ri(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new $r(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}function Eu(e){Mu.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new $r(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transparency=0,this.setValues(e)}function Su(e){Ii.call(this),this.type="MeshPhongMaterial",this.color=new Ri(16777215),this.specular=new Ri(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ri(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new $r(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ne,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Tu(e){Ii.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ri(16777215),this.specular=new Ri(1118481),this.shininess=30,this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ri(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new $r(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Au(e){Ii.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new $r(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Ru(e){Ii.call(this),this.type="MeshLambertMaterial",this.color=new Ri(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ri(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ne,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Cu(e){Ii.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ri(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new $r(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Lu(e){Bl.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}xu.prototype=Object.create(Ii.prototype),xu.prototype.constructor=xu,xu.prototype.isShadowMaterial=!0,xu.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.color.copy(source.color),this},wu.prototype=Object.create(In.prototype),wu.prototype.constructor=wu,wu.prototype.isRawShaderMaterial=!0,Mu.prototype=Object.create(Ii.prototype),Mu.prototype.constructor=Mu,Mu.prototype.isMeshStandardMaterial=!0,Mu.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.defines={STANDARD:""},this.color.copy(source.color),this.roughness=source.roughness,this.metalness=source.metalness,this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.roughnessMap=source.roughnessMap,this.metalnessMap=source.metalnessMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.envMapIntensity=source.envMapIntensity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this.vertexTangents=source.vertexTangents,this},Eu.prototype=Object.create(Mu.prototype),Eu.prototype.constructor=Eu,Eu.prototype.isMeshPhysicalMaterial=!0,Eu.prototype.copy=function(source){return Mu.prototype.copy.call(this,source),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=source.clearcoat,this.clearcoatMap=source.clearcoatMap,this.clearcoatRoughness=source.clearcoatRoughness,this.clearcoatRoughnessMap=source.clearcoatRoughnessMap,this.clearcoatNormalMap=source.clearcoatNormalMap,this.clearcoatNormalScale.copy(source.clearcoatNormalScale),this.reflectivity=source.reflectivity,source.sheen?this.sheen=(this.sheen||new Ri).copy(source.sheen):this.sheen=null,this.transparency=source.transparency,this},Su.prototype=Object.create(Ii.prototype),Su.prototype.constructor=Su,Su.prototype.isMeshPhongMaterial=!0,Su.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.color.copy(source.color),this.specular.copy(source.specular),this.shininess=source.shininess,this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this},Tu.prototype=Object.create(Ii.prototype),Tu.prototype.constructor=Tu,Tu.prototype.isMeshToonMaterial=!0,Tu.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.color.copy(source.color),this.specular.copy(source.specular),this.shininess=source.shininess,this.map=source.map,this.gradientMap=source.gradientMap,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this},Au.prototype=Object.create(Ii.prototype),Au.prototype.constructor=Au,Au.prototype.isMeshNormalMaterial=!0,Au.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this},Ru.prototype=Object.create(Ii.prototype),Ru.prototype.constructor=Ru,Ru.prototype.isMeshLambertMaterial=!0,Ru.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.color.copy(source.color),this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this},Cu.prototype=Object.create(Ii.prototype),Cu.prototype.constructor=Cu,Cu.prototype.isMeshMatcapMaterial=!0,Cu.prototype.copy=function(source){return Ii.prototype.copy.call(this,source),this.defines={MATCAP:""},this.color.copy(source.color),this.matcap=source.matcap,this.map=source.map,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.alphaMap=source.alphaMap,this.skinning=source.skinning,this.morphTargets=source.morphTargets,this.morphNormals=source.morphNormals,this},Lu.prototype=Object.create(Bl.prototype),Lu.prototype.constructor=Lu,Lu.prototype.isLineDashedMaterial=!0,Lu.prototype.copy=function(source){return Bl.prototype.copy.call(this,source),this.scale=source.scale,this.dashSize=source.dashSize,this.gapSize=source.gapSize,this};var Pu=Object.freeze({__proto__:null,ShadowMaterial:xu,SpriteMaterial:tl,RawShaderMaterial:wu,ShaderMaterial:In,PointsMaterial:Yl,MeshPhysicalMaterial:Eu,MeshStandardMaterial:Mu,MeshPhongMaterial:Su,MeshToonMaterial:Tu,MeshNormalMaterial:Au,MeshLambertMaterial:Ru,MeshDepthMaterial:Bs,MeshDistanceMaterial:Fs,MeshBasicMaterial:Ni,MeshMatcapMaterial:Cu,LineDashedMaterial:Lu,LineBasicMaterial:Bl,Material:Ii}),Ou={arraySlice:function(e,t,r){return Ou.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==r?r:e.length)):e.slice(t,r)},convertArray:function(e,t,r){return!e||!r&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView)},getKeyframeOrder:function(e){for(var t=e.length,r=new Array(t),i=0;i!==t;++i)r[i]=i;return r.sort((function(i,t){return e[i]-e[t]})),r},sortedArray:function(e,t,r){for(var n=e.length,o=new e.constructor(n),i=0,l=0;l!==n;++i)for(var h=r[i]*t,f=0;f!==t;++f)o[l++]=e[h+f];return o},flattenJSON:function(e,t,r,n){for(var i=1,o=e[0];void 0!==o&&void 0===o[n];)o=e[i++];if(void 0!==o){var l=o[n];if(void 0!==l)if(Array.isArray(l))do{void 0!==(l=o[n])&&(t.push(o.time),r.push.apply(r,l)),o=e[i++]}while(void 0!==o);else if(void 0!==l.toArray)do{void 0!==(l=o[n])&&(t.push(o.time),l.toArray(r,r.length)),o=e[i++]}while(void 0!==o);else do{void 0!==(l=o[n])&&(t.push(o.time),r.push(l)),o=e[i++]}while(void 0!==o)}},subclip:function(e,t,r,n,o){o=o||30;var l=e.clone();l.name=t;for(var h=[],i=0;i<l.tracks.length;++i){for(var track=l.tracks[i],f=track.getValueSize(),c=[],d=[],v=0;v<track.times.length;++v){var _=track.times[v]*o;if(!(_<r||_>=n)){c.push(track.times[v]);for(var m=0;m<f;++m)d.push(track.values[v*f+m])}}0!==c.length&&(track.times=Ou.convertArray(c,track.times.constructor),track.values=Ou.convertArray(d,track.values.constructor),h.push(track))}l.tracks=h;var y=1/0;for(i=0;i<l.tracks.length;++i)y>l.tracks[i].times[0]&&(y=l.tracks[i].times[0]);for(i=0;i<l.tracks.length;++i)l.tracks[i].shift(-1*y);return l.resetDuration(),l},makeClipAdditive:function(e,t,r,n){void 0===t&&(t=0),void 0===r&&(r=e),(void 0===n||n<=0)&&(n=30);for(var o=e.tracks.length,l=t/n,i=0;i<o;++i){var h=r.tracks[i],f=h.ValueTypeName;if("bool"!==f&&"string"!==f){var c=e.tracks.find((function(track){return track.name===h.name&&track.ValueTypeName===f}));if(void 0!==c){var d,v=h.getValueSize(),_=h.times.length-1;if(l<=h.times[0])d=Ou.arraySlice(h.values,0,h.valueSize);else if(l>=h.times[_]){var m=_*v;d=Ou.arraySlice(h.values,m)}else{var y=h.createInterpolant();y.evaluate(l),d=y.resultBuffer}if("quaternion"===f)new sa(d[0],d[1],d[2],d[3]).normalize().conjugate().toArray(d);for(var x=c.times.length,w=0;w<x;++w){var M=w*v;if("quaternion"===f)sa.multiplyQuaternionsFlat(c.values,M,d,0,c.values,M);else for(var E=0;E<v;++E)c.values[M+E]-=d[E]}}}}return e.blendMode=or,e}};function ku(e,t,r,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(r),this.sampleValues=t,this.valueSize=r}function Iu(e,t,r,n){ku.call(this,e,t,r,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Nu(e,t,r,n){ku.call(this,e,t,r,n)}function Du(e,t,r,n){ku.call(this,e,t,r,n)}function Bu(e,t,r,n){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ou.convertArray(t,this.TimeBufferType),this.values=Ou.convertArray(r,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}function Fu(e,t,r){Bu.call(this,e,t,r)}function Uu(e,t,r,n){Bu.call(this,e,t,r,n)}function ju(e,t,r,n){Bu.call(this,e,t,r,n)}function Vu(e,t,r,n){ku.call(this,e,t,r,n)}function zu(e,t,r,n){Bu.call(this,e,t,r,n)}function Gu(e,t,r,n){Bu.call(this,e,t,r,n)}function Hu(e,t,r,n){Bu.call(this,e,t,r,n)}function Wu(e,t,r,n){this.name=e,this.tracks=r,this.duration=void 0!==t?t:-1,this.blendMode=void 0!==n?n:nr,this.uuid=Qr.generateUUID(),this.duration<0&&this.resetDuration()}function qu(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ju;case"vector":case"vector2":case"vector3":case"vector4":return Hu;case"color":return Uu;case"quaternion":return zu;case"bool":case"boolean":return Fu;case"string":return Gu}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){var r=[],n=[];Ou.flattenJSON(e.keys,r,n,"value"),e.times=r,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(ku.prototype,{evaluate:function(e){var t=this.parameterPositions,r=this._cachedIndex,n=t[r],o=t[r-1];e:{t:{var l;r:{a:if(!(e<n)){for(var h=r+2;;){if(void 0===n){if(e<o)break a;return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,e,o)}if(r===h)break;if(o=n,e<(n=t[++r]))break t}l=t.length;break r}if(e>=o)break e;var f=t[1];e<f&&(r=2,o=f);for(h=r-2;;){if(void 0===o)return this._cachedIndex=0,this.beforeStart_(0,e,n);if(r===h)break;if(n=o,e>=(o=t[--r-1]))break t}l=r,r=0}for(;r<l;){var c=r+l>>>1;e<t[c]?l=c:r=c+1}if(n=t[r],void 0===(o=t[r-1]))return this._cachedIndex=0,this.beforeStart_(0,e,n);if(void 0===n)return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,o,e)}this._cachedIndex=r,this.intervalChanged_(r,o,n)}return this.interpolate_(r,o,e,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){for(var t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,o=e*n,i=0;i!==n;++i)t[i]=r[o+i];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(ku.prototype,{beforeStart_:ku.prototype.copySampleValue_,afterEnd_:ku.prototype.copySampleValue_}),Iu.prototype=Object.assign(Object.create(ku.prototype),{constructor:Iu,DefaultSettings_:{endingStart:rr,endingEnd:rr},intervalChanged_:function(e,t,r){var n=this.parameterPositions,o=e-2,l=e+1,h=n[o],f=n[l];if(void 0===h)switch(this.getSettings_().endingStart){case ar:o=e,h=2*t-r;break;case ir:h=t+n[o=n.length-2]-n[o+1];break;default:o=e,h=r}if(void 0===f)switch(this.getSettings_().endingEnd){case ar:l=e,f=2*r-t;break;case ir:l=1,f=r+n[1]-n[0];break;default:l=e-1,f=t}var c=.5*(r-t),d=this.valueSize;this._weightPrev=c/(t-h),this._weightNext=c/(f-r),this._offsetPrev=o*d,this._offsetNext=l*d},interpolate_:function(e,t,r,n){for(var o=this.resultBuffer,l=this.sampleValues,h=this.valueSize,f=e*h,c=f-h,d=this._offsetPrev,v=this._offsetNext,_=this._weightPrev,m=this._weightNext,p=(r-t)/(n-t),y=p*p,x=y*p,w=-_*x+2*_*y-_*p,M=(1+_)*x+(-1.5-2*_)*y+(-.5+_)*p+1,E=(-1-m)*x+(1.5+m)*y+.5*p,S=m*x-m*y,i=0;i!==h;++i)o[i]=w*l[d+i]+M*l[c+i]+E*l[f+i]+S*l[v+i];return o}}),Nu.prototype=Object.assign(Object.create(ku.prototype),{constructor:Nu,interpolate_:function(e,t,r,n){for(var o=this.resultBuffer,l=this.sampleValues,h=this.valueSize,f=e*h,c=f-h,d=(r-t)/(n-t),v=1-d,i=0;i!==h;++i)o[i]=l[c+i]*v+l[f+i]*d;return o}}),Du.prototype=Object.assign(Object.create(ku.prototype),{constructor:Du,interpolate_:function(e){return this.copySampleValue_(e-1)}}),Object.assign(Bu,{toJSON:function(track){var e,t=track.constructor;if(void 0!==t.toJSON)e=t.toJSON(track);else{e={name:track.name,times:Ou.convertArray(track.times,Array),values:Ou.convertArray(track.values,Array)};var r=track.getInterpolation();r!==track.DefaultInterpolation&&(e.interpolation=r)}return e.type=track.ValueTypeName,e}}),Object.assign(Bu.prototype,{constructor:Bu,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:$t,InterpolantFactoryMethodDiscrete:function(e){return new Du(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new Nu(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new Iu(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;switch(e){case Qt:t=this.InterpolantFactoryMethodDiscrete;break;case $t:t=this.InterpolantFactoryMethodLinear;break;case er:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(r);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",r),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Qt;case this.InterpolantFactoryMethodLinear:return $t;case this.InterpolantFactoryMethodSmooth:return er}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e)for(var t=this.times,i=0,r=t.length;i!==r;++i)t[i]+=e;return this},scale:function(e){if(1!==e)for(var t=this.times,i=0,r=t.length;i!==r;++i)t[i]*=e;return this},trim:function(e,t){for(var r=this.times,n=r.length,o=0,l=n-1;o!==n&&r[o]<e;)++o;for(;-1!==l&&r[l]>t;)--l;if(++l,0!==o||l!==n){o>=l&&(o=(l=Math.max(l,1))-1);var h=this.getValueSize();this.times=Ou.arraySlice(r,o,l),this.values=Ou.arraySlice(this.values,o*h,l*h)}return this},validate:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);var r=this.times,n=this.values,o=r.length;0===o&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);for(var l=null,i=0;i!==o;i++){var h=r[i];if("number"==typeof h&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,i,h),e=!1;break}if(null!==l&&l>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,i,h,l),e=!1;break}l=h}if(void 0!==n&&Ou.isTypedArray(n)){i=0;for(var f=n.length;i!==f;++i){var c=n[i];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,c),e=!1;break}}}return e},optimize:function(){for(var e=Ou.arraySlice(this.times),t=Ou.arraySlice(this.values),r=this.getValueSize(),n=this.getInterpolation()===er,o=1,l=e.length-1,i=1;i<l;++i){var h=!1,time=e[i];if(time!==e[i+1]&&(1!==i||time!==time[0]))if(n)h=!0;else for(var f=i*r,c=f-r,d=f+r,v=0;v!==r;++v){var _=t[f+v];if(_!==t[c+v]||_!==t[d+v]){h=!0;break}}if(h){if(i!==o){e[o]=e[i];var m=i*r,y=o*r;for(v=0;v!==r;++v)t[y+v]=t[m+v]}++o}}if(l>0){e[o]=e[l];for(m=l*r,y=o*r,v=0;v!==r;++v)t[y+v]=t[m+v];++o}return o!==e.length?(this.times=Ou.arraySlice(e,0,o),this.values=Ou.arraySlice(t,0,o*r)):(this.times=e,this.values=t),this},clone:function(){var e=Ou.arraySlice(this.times,0),t=Ou.arraySlice(this.values,0),track=new(0,this.constructor)(this.name,e,t);return track.createInterpolant=this.createInterpolant,track}}),Fu.prototype=Object.assign(Object.create(Bu.prototype),{constructor:Fu,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Qt,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Uu.prototype=Object.assign(Object.create(Bu.prototype),{constructor:Uu,ValueTypeName:"color"}),ju.prototype=Object.assign(Object.create(Bu.prototype),{constructor:ju,ValueTypeName:"number"}),Vu.prototype=Object.assign(Object.create(ku.prototype),{constructor:Vu,interpolate_:function(e,t,r,n){for(var o=this.resultBuffer,l=this.sampleValues,h=this.valueSize,f=e*h,c=(r-t)/(n-t),d=f+h;f!==d;f+=4)sa.slerpFlat(o,0,l,f-h,l,f,c);return o}}),zu.prototype=Object.assign(Object.create(Bu.prototype),{constructor:zu,ValueTypeName:"quaternion",DefaultInterpolation:$t,InterpolantFactoryMethodLinear:function(e){return new Vu(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),Gu.prototype=Object.assign(Object.create(Bu.prototype),{constructor:Gu,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Qt,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Hu.prototype=Object.assign(Object.create(Bu.prototype),{constructor:Hu,ValueTypeName:"vector"}),Object.assign(Wu,{parse:function(e){for(var t=[],r=e.tracks,n=1/(e.fps||1),i=0,o=r.length;i!==o;++i)t.push(qu(r[i]).scale(n));return new Wu(e.name,e.duration,t,e.blendMode)},toJSON:function(e){for(var t=[],r=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode},i=0,o=r.length;i!==o;++i)t.push(Bu.toJSON(r[i]));return n},CreateFromMorphTargetSequence:function(e,t,r,n){for(var o=t.length,l=[],i=0;i<o;i++){var h=[],f=[];h.push((i+o-1)%o,i,(i+1)%o),f.push(0,1,0);var c=Ou.getKeyframeOrder(h);h=Ou.sortedArray(h,1,c),f=Ou.sortedArray(f,1,c),n||0!==h[0]||(h.push(o),f.push(f[0])),l.push(new ju(".morphTargetInfluences["+t[i].name+"]",h,f).scale(1/r))}return new Wu(e,-1,l)},findByName:function(e,t){var r=e;if(!Array.isArray(e)){var n=e;r=n.geometry&&n.geometry.animations||n.animations}for(var i=0;i<r.length;i++)if(r[i].name===t)return r[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,r){for(var n={},pattern=/^([\w-]*?)([\d]+)$/,i=0,o=e.length;i<o;i++){var l=e[i],h=l.name.match(pattern);if(h&&h.length>1){var f=n[d=h[1]];f||(n[d]=f=[]),f.push(l)}}var c=[];for(var d in n)c.push(Wu.CreateFromMorphTargetSequence(d,n[d],t,r));return c},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var r=function(e,t,r,n,o){if(0!==r.length){var l=[],h=[];Ou.flattenJSON(r,l,h,n),0!==l.length&&o.push(new e(t,l,h))}},n=[],o=e.name||"default",l=e.length||-1,h=e.fps||30,f=e.blendMode,c=e.hierarchy||[],d=0;d<c.length;d++){var v=c[d].keys;if(v&&0!==v.length)if(v[0].morphTargets){for(var _={},m=0;m<v.length;m++)if(v[m].morphTargets)for(var y=0;y<v[m].morphTargets.length;y++)_[v[m].morphTargets[y]]=-1;for(var x in _){var w=[],M=[];for(y=0;y!==v[m].morphTargets.length;++y){var E=v[m];w.push(E.time),M.push(E.morphTarget===x?1:0)}n.push(new ju(".morphTargetInfluence["+x+"]",w,M))}l=_.length*(h||1)}else{var S=".bones["+t[d].name+"]";r(Hu,S+".position",v,"pos",n),r(zu,S+".quaternion",v,"rot",n),r(Hu,S+".scale",v,"scl",n)}}return 0===n.length?null:new Wu(o,l,n,f)}}),Object.assign(Wu.prototype,{resetDuration:function(){for(var e=0,i=0,t=this.tracks.length;i!==t;++i){var track=this.tracks[i];e=Math.max(e,track.times[track.times.length-1])}return this.duration=e,this},trim:function(){for(var i=0;i<this.tracks.length;i++)this.tracks[i].trim(0,this.duration);return this},validate:function(){for(var e=!0,i=0;i<this.tracks.length;i++)e=e&&this.tracks[i].validate();return e},optimize:function(){for(var i=0;i<this.tracks.length;i++)this.tracks[i].optimize();return this},clone:function(){for(var e=[],i=0;i<this.tracks.length;i++)e.push(this.tracks[i].clone());return new Wu(this.name,this.duration,e,this.blendMode)}});var Xu={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function Yu(e,t,r){var n=this,o=!1,l=0,h=0,f=void 0,c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){h++,!1===o&&void 0!==n.onStart&&n.onStart(e,l,h),o=!0},this.itemEnd=function(e){l++,void 0!==n.onProgress&&n.onProgress(e,l,h),l===h&&(o=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return f?f(e):e},this.setURLModifier=function(e){return f=e,this},this.addHandler=function(e,t){return c.push(e,t),this},this.removeHandler=function(e){var t=c.indexOf(e);return-1!==t&&c.splice(t,2),this},this.getHandler=function(e){for(var i=0,t=c.length;i<t;i+=2){var r=c[i],n=c[i+1];if(r.global&&(r.lastIndex=0),r.test(e))return n}return null}}var Zu=new Yu;function Ju(e){this.manager=void 0!==e?e:Zu,this.crossOrigin="anonymous",this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Ju.prototype,{load:function(){},loadAsync:function(e,t){var r=this;return new Promise((function(n,o){r.load(e,n,t,o)}))},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(path){return this.path=path,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});var Ku={};function Qu(e){Ju.call(this,e)}function $u(e){Ju.call(this,e)}function ef(e){Ju.call(this,e)}function tf(e){Ju.call(this,e)}function rf(e){Ju.call(this,e)}function af(e){Ju.call(this,e)}function nf(e){Ju.call(this,e)}function of(){this.type="Curve",this.arcLengthDivisions=200}function sf(e,t,r,n,o,l,h,f){of.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=r||1,this.yRadius=n||1,this.aStartAngle=o||0,this.aEndAngle=l||2*Math.PI,this.aClockwise=h||!1,this.aRotation=f||0}function lf(e,t,r,n,o,l){sf.call(this,e,t,r,r,n,o,l),this.type="ArcCurve"}function hf(){var e=0,t=0,r=0,n=0;function o(o,l,h,f){e=o,t=h,r=-3*o+3*l-2*h-f,n=2*o-2*l+h+f}return{initCatmullRom:function(e,t,r,n,l){o(t,r,l*(r-e),l*(n-t))},initNonuniformCatmullRom:function(e,t,r,n,l,h,f){var c=(t-e)/l-(r-e)/(l+h)+(r-t)/h,d=(r-t)/h-(n-t)/(h+f)+(n-r)/f;o(t,r,c*=h,d*=h)},calc:function(o){var l=o*o;return e+t*o+r*l+n*(l*o)}}}Qu.prototype=Object.assign(Object.create(Ju.prototype),{constructor:Qu,load:function(e,t,r,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var o=this,l=Xu.get(e);if(void 0!==l)return o.manager.itemStart(e),setTimeout((function(){t&&t(l),o.manager.itemEnd(e)}),0),l;if(void 0===Ku[e]){var h=e.match(/^data:(.*?)(;base64)?,(.*)$/);if(h){var f=h[1],c=!!h[2],data=h[3];data=decodeURIComponent(data),c&&(data=atob(data));try{var d,v=(this.responseType||"").toLowerCase();switch(v){case"arraybuffer":case"blob":for(var view=new Uint8Array(data.length),i=0;i<data.length;i++)view[i]=data.charCodeAt(i);d="blob"===v?new Blob([view.buffer],{type:f}):view.buffer;break;case"document":var _=new DOMParser;d=_.parseFromString(data,f);break;case"json":d=JSON.parse(data);break;default:d=data}setTimeout((function(){t&&t(d),o.manager.itemEnd(e)}),0)}catch(t){setTimeout((function(){n&&n(t),o.manager.itemError(e),o.manager.itemEnd(e)}),0)}}else{Ku[e]=[],Ku[e].push({onLoad:t,onProgress:r,onError:n});var m=new XMLHttpRequest;for(var header in m.open("GET",e,!0),m.addEventListener("load",(function(t){var r=this.response,n=Ku[e];if(delete Ku[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Xu.add(e,r);for(var i=0,l=n.length;i<l;i++){(h=n[i]).onLoad&&h.onLoad(r)}o.manager.itemEnd(e)}else{for(i=0,l=n.length;i<l;i++){var h;(h=n[i]).onError&&h.onError(t)}o.manager.itemError(e),o.manager.itemEnd(e)}}),!1),m.addEventListener("progress",(function(t){for(var r=Ku[e],i=0,n=r.length;i<n;i++){var o=r[i];o.onProgress&&o.onProgress(t)}}),!1),m.addEventListener("error",(function(t){var r=Ku[e];delete Ku[e];for(var i=0,n=r.length;i<n;i++){var l=r[i];l.onError&&l.onError(t)}o.manager.itemError(e),o.manager.itemEnd(e)}),!1),m.addEventListener("abort",(function(t){var r=Ku[e];delete Ku[e];for(var i=0,n=r.length;i<n;i++){var l=r[i];l.onError&&l.onError(t)}o.manager.itemError(e),o.manager.itemEnd(e)}),!1),void 0!==this.responseType&&(m.responseType=this.responseType),void 0!==this.withCredentials&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)m.setRequestHeader(header,this.requestHeader[header]);m.send(null)}return o.manager.itemStart(e),m}Ku[e].push({onLoad:t,onProgress:r,onError:n})},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this}}),$u.prototype=Object.assign(Object.create(Ju.prototype),{constructor:$u,load:function(e,t,r,n){var o=this,l=new Qu(o.manager);l.setPath(o.path),l.load(e,(function(text){try{t(o.parse(JSON.parse(text)))}catch(t){n?n(t):console.error(t),o.manager.itemError(e)}}),r,n)},parse:function(e){for(var t=[],i=0;i<e.length;i++){var r=Wu.parse(e[i]);t.push(r)}return t}}),ef.prototype=Object.assign(Object.create(Ju.prototype),{constructor:ef,load:function(e,t,r,n){var o=this,l=[],h=new ah;h.image=l;var f=new Qu(this.manager);function c(i){f.load(e[i],(function(e){var r=o.parse(e,!0);l[i]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps},6===(d+=1)&&(1===r.mipmapCount&&(h.minFilter=Le),h.format=r.format,h.needsUpdate=!0,t&&t(h))}),r,n)}if(f.setPath(this.path),f.setResponseType("arraybuffer"),Array.isArray(e))for(var d=0,i=0,v=e.length;i<v;++i)c(i);else f.load(e,(function(e){var r=o.parse(e,!0);if(r.isCubemap)for(var n=r.mipmaps.length/r.mipmapCount,f=0;f<n;f++){l[f]={mipmaps:[]};for(var i=0;i<r.mipmapCount;i++)l[f].mipmaps.push(r.mipmaps[f*r.mipmapCount+i]),l[f].format=r.format,l[f].width=r.width,l[f].height=r.height}else h.image.width=r.width,h.image.height=r.height,h.mipmaps=r.mipmaps;1===r.mipmapCount&&(h.minFilter=Le),h.format=r.format,h.needsUpdate=!0,t&&t(h)}),r,n);return h}}),tf.prototype=Object.assign(Object.create(Ju.prototype),{constructor:tf,load:function(e,t,r,n){var o=this,l=new Un,h=new Qu(this.manager);return h.setResponseType("arraybuffer"),h.setPath(this.path),h.load(e,(function(e){var r=o.parse(e);r&&(void 0!==r.image?l.image=r.image:void 0!==r.data&&(l.image.width=r.width,l.image.height=r.height,l.image.data=r.data),l.wrapS=void 0!==r.wrapS?r.wrapS:Me,l.wrapT=void 0!==r.wrapT?r.wrapT:Me,l.magFilter=void 0!==r.magFilter?r.magFilter:Le,l.minFilter=void 0!==r.minFilter?r.minFilter:Le,l.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,void 0!==r.format&&(l.format=r.format),void 0!==r.type&&(l.type=r.type),void 0!==r.mipmaps&&(l.mipmaps=r.mipmaps,l.minFilter=ke),1===r.mipmapCount&&(l.minFilter=Le),l.needsUpdate=!0,t&&t(l,r))}),r,n),l}}),rf.prototype=Object.assign(Object.create(Ju.prototype),{constructor:rf,load:function(e,t,r,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var o=this,l=Xu.get(e);if(void 0!==l)return o.manager.itemStart(e),setTimeout((function(){t&&t(l),o.manager.itemEnd(e)}),0),l;var image=document.createElementNS("http://www.w3.org/1999/xhtml","img");function h(){image.removeEventListener("load",h,!1),image.removeEventListener("error",f,!1),Xu.add(e,this),t&&t(this),o.manager.itemEnd(e)}function f(t){image.removeEventListener("load",h,!1),image.removeEventListener("error",f,!1),n&&n(t),o.manager.itemError(e),o.manager.itemEnd(e)}return image.addEventListener("load",h,!1),image.addEventListener("error",f,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(image.crossOrigin=this.crossOrigin),o.manager.itemStart(e),image.src=e,image}}),af.prototype=Object.assign(Object.create(Ju.prototype),{constructor:af,load:function(e,t,r,n){var o=new so,l=new rf(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);var h=0;function f(i){l.load(e[i],(function(image){o.images[i]=image,6===++h&&(o.needsUpdate=!0,t&&t(o))}),void 0,n)}for(var i=0;i<e.length;++i)f(i);return o}}),nf.prototype=Object.assign(Object.create(Ju.prototype),{constructor:nf,load:function(e,t,r,n){var o=new aa,l=new rf(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,(function(image){o.image=image;var r=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);o.format=r?Ye:Ze,o.needsUpdate=!0,void 0!==t&&t(o)}),r,n),o}}),Object.assign(of.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(u,e){var t=this.getUtoTmapping(u);return this.getPoint(t,e)},getPoints:function(e){void 0===e&&(e=5);for(var t=[],r=0;r<=e;r++)t.push(this.getPoint(r/e));return t},getSpacedPoints:function(e){void 0===e&&(e=5);for(var t=[],r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,p,r=[],n=this.getPoint(0),o=0;for(r.push(0),p=1;p<=e;p++)o+=(t=this.getPoint(p/e)).distanceTo(n),r.push(o),n=t;return this.cacheArcLengths=r,r},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(u,e){var t,r=this.getLengths(),i=0,n=r.length;t=e||u*r[n-1];for(var o,l=0,h=n-1;l<=h;)if((o=r[i=Math.floor(l+(h-l)/2)]-t)<0)l=i+1;else{if(!(o>0)){h=i;break}h=i-1}if(r[i=h]===t)return i/(n-1);var f=r[i];return(i+(t-f)/(r[i+1]-f))/(n-1)},getTangent:function(e,t){var r=e-1e-4,n=e+1e-4;r<0&&(r=0),n>1&&(n=1);var o=this.getPoint(r),l=this.getPoint(n),h=t||(o.isVector2?new $r:new ua);return h.copy(l).sub(o).normalize(),h},getTangentAt:function(u,e){var t=this.getUtoTmapping(u);return this.getTangent(t,e)},computeFrenetFrames:function(e,t){var i,u,r,n=new ua,o=[],l=[],h=[],f=new ua,c=new ma;for(i=0;i<=e;i++)u=i/e,o[i]=this.getTangentAt(u,new ua),o[i].normalize();l[0]=new ua,h[0]=new ua;var d=Number.MAX_VALUE,v=Math.abs(o[0].x),_=Math.abs(o[0].y),m=Math.abs(o[0].z);for(v<=d&&(d=v,n.set(1,0,0)),_<=d&&(d=_,n.set(0,1,0)),m<=d&&n.set(0,0,1),f.crossVectors(o[0],n).normalize(),l[0].crossVectors(o[0],f),h[0].crossVectors(o[0],l[0]),i=1;i<=e;i++)l[i]=l[i-1].clone(),h[i]=h[i-1].clone(),f.crossVectors(o[i-1],o[i]),f.length()>Number.EPSILON&&(f.normalize(),r=Math.acos(Qr.clamp(o[i-1].dot(o[i]),-1,1)),l[i].applyMatrix4(c.makeRotationAxis(f,r))),h[i].crossVectors(o[i],l[i]);if(!0===t)for(r=Math.acos(Qr.clamp(l[0].dot(l[e]),-1,1)),r/=e,o[0].dot(f.crossVectors(l[0],l[e]))>0&&(r=-r),i=1;i<=e;i++)l[i].applyMatrix4(c.makeRotationAxis(o[i],r*i)),h[i].crossVectors(o[i],l[i]);return{tangents:o,normals:l,binormals:h}},clone:function(){return(new this.constructor).copy(this)},copy:function(source){return this.arcLengthDivisions=source.arcLengthDivisions,this},toJSON:function(){var data={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return data.arcLengthDivisions=this.arcLengthDivisions,data.type=this.type,data},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),sf.prototype=Object.create(of.prototype),sf.prototype.constructor=sf,sf.prototype.isEllipseCurve=!0,sf.prototype.getPoint=function(e,t){for(var r=t||new $r,n=2*Math.PI,o=this.aEndAngle-this.aStartAngle,l=Math.abs(o)<Number.EPSILON;o<0;)o+=n;for(;o>n;)o-=n;o<Number.EPSILON&&(o=l?0:n),!0!==this.aClockwise||l||(o===n?o=-n:o-=n);var h=this.aStartAngle+e*o,f=this.aX+this.xRadius*Math.cos(h),c=this.aY+this.yRadius*Math.sin(h);if(0!==this.aRotation){var d=Math.cos(this.aRotation),v=Math.sin(this.aRotation),_=f-this.aX,m=c-this.aY;f=_*d-m*v+this.aX,c=_*v+m*d+this.aY}return r.set(f,c)},sf.prototype.copy=function(source){return of.prototype.copy.call(this,source),this.aX=source.aX,this.aY=source.aY,this.xRadius=source.xRadius,this.yRadius=source.yRadius,this.aStartAngle=source.aStartAngle,this.aEndAngle=source.aEndAngle,this.aClockwise=source.aClockwise,this.aRotation=source.aRotation,this},sf.prototype.toJSON=function(){var data=of.prototype.toJSON.call(this);return data.aX=this.aX,data.aY=this.aY,data.xRadius=this.xRadius,data.yRadius=this.yRadius,data.aStartAngle=this.aStartAngle,data.aEndAngle=this.aEndAngle,data.aClockwise=this.aClockwise,data.aRotation=this.aRotation,data},sf.prototype.fromJSON=function(e){return of.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},lf.prototype=Object.create(sf.prototype),lf.prototype.constructor=lf,lf.prototype.isArcCurve=!0;var uf=new ua,ff=new hf,cf=new hf,df=new hf;function vf(e,t,r,n){of.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=r||"centripetal",this.tension=n||.5}function pf(e,t,r,n,o){var l=.5*(n-t),h=.5*(o-r),f=e*e;return(2*r-2*n+l+h)*(e*f)+(-3*r+3*n-2*l-h)*f+l*e+r}function _f(e,t,r,n){return function(e,p){var t=1-e;return t*t*p}(e,t)+function(e,p){return 2*(1-e)*e*p}(e,r)+function(e,p){return e*e*p}(e,n)}function gf(e,t,r,n,o){return function(e,p){var t=1-e;return t*t*t*p}(e,t)+function(e,p){var t=1-e;return 3*t*t*e*p}(e,r)+function(e,p){return 3*(1-e)*e*e*p}(e,n)+function(e,p){return e*e*e*p}(e,o)}function mf(e,t,r,n){of.call(this),this.type="CubicBezierCurve",this.v0=e||new $r,this.v1=t||new $r,this.v2=r||new $r,this.v3=n||new $r}function yf(e,t,r,n){of.call(this),this.type="CubicBezierCurve3",this.v0=e||new ua,this.v1=t||new ua,this.v2=r||new ua,this.v3=n||new ua}function bf(e,t){of.call(this),this.type="LineCurve",this.v1=e||new $r,this.v2=t||new $r}function xf(e,t){of.call(this),this.type="LineCurve3",this.v1=e||new ua,this.v2=t||new ua}function wf(e,t,r){of.call(this),this.type="QuadraticBezierCurve",this.v0=e||new $r,this.v1=t||new $r,this.v2=r||new $r}function Mf(e,t,r){of.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new ua,this.v1=t||new ua,this.v2=r||new ua}function Ef(e){of.call(this),this.type="SplineCurve",this.points=e||[]}vf.prototype=Object.create(of.prototype),vf.prototype.constructor=vf,vf.prototype.isCatmullRomCurve3=!0,vf.prototype.getPoint=function(e,t){var r,n,o,l,h=t||new ua,f=this.points,c=f.length,p=(c-(this.closed?0:1))*e,d=Math.floor(p),v=p-d;if(this.closed?d+=d>0?0:(Math.floor(Math.abs(d)/c)+1)*c:0===v&&d===c-1&&(d=c-2,v=1),this.closed||d>0?r=f[(d-1)%c]:(uf.subVectors(f[0],f[1]).add(f[0]),r=uf),n=f[d%c],o=f[(d+1)%c],this.closed||d+2<c?l=f[(d+2)%c]:(uf.subVectors(f[c-1],f[c-2]).add(f[c-1]),l=uf),"centripetal"===this.curveType||"chordal"===this.curveType){var _="chordal"===this.curveType?.5:.25,m=Math.pow(r.distanceToSquared(n),_),y=Math.pow(n.distanceToSquared(o),_),x=Math.pow(o.distanceToSquared(l),_);y<1e-4&&(y=1),m<1e-4&&(m=y),x<1e-4&&(x=y),ff.initNonuniformCatmullRom(r.x,n.x,o.x,l.x,m,y,x),cf.initNonuniformCatmullRom(r.y,n.y,o.y,l.y,m,y,x),df.initNonuniformCatmullRom(r.z,n.z,o.z,l.z,m,y,x)}else"catmullrom"===this.curveType&&(ff.initCatmullRom(r.x,n.x,o.x,l.x,this.tension),cf.initCatmullRom(r.y,n.y,o.y,l.y,this.tension),df.initCatmullRom(r.z,n.z,o.z,l.z,this.tension));return h.set(ff.calc(v),cf.calc(v),df.calc(v)),h},vf.prototype.copy=function(source){of.prototype.copy.call(this,source),this.points=[];for(var i=0,e=source.points.length;i<e;i++){var t=source.points[i];this.points.push(t.clone())}return this.closed=source.closed,this.curveType=source.curveType,this.tension=source.tension,this},vf.prototype.toJSON=function(){var data=of.prototype.toJSON.call(this);data.points=[];for(var i=0,e=this.points.length;i<e;i++){var t=this.points[i];data.points.push(t.toArray())}return data.closed=this.closed,data.curveType=this.curveType,data.tension=this.tension,data},vf.prototype.fromJSON=function(e){of.prototype.fromJSON.call(this,e),this.points=[];for(var i=0,t=e.points.length;i<t;i++){var r=e.points[i];this.points.push((new ua).fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},mf.prototype=Object.create(of.prototype),mf.prototype.constructor=mf,mf.prototype.isCubicBezierCurve=!0,mf.prototype.getPoint=function(e,t){var r=t||new $r,n=this.v0,o=this.v1,l=this.v2,h=this.v3;return r.set(gf(e,n.x,o.x,l.x,h.x),gf(e,n.y,o.y,l.y,h.y)),r},mf.prototype.copy=function(source){return of.prototype.copy.call(this,source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this.v3.copy(source.v3),this},mf.prototype.toJSON=function(){var data=of.prototype.toJSON.call(this);return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data.v3=this.v3.toArray(),data},mf.prototype.fromJSON=function(e){return of.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},yf.prototype=Object.create(of.prototype),yf.prototype.constructor=yf,yf.prototype.isCubicBezierCurve3=!0,yf.prototype.getPoint=function(e,t){var r=t||new ua,n=this.v0,o=this.v1,l=this.v2,h=this.v3;return r.set(gf(e,n.x,o.x,l.x,h.x),gf(e,n.y,o.y,l.y,h.y),gf(e,n.z,o.z,l.z,h.z)),r},yf.prototype.copy=function(source){return of.prototype.copy.call(this,source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this.v3.copy(source.v3),this},yf.prototype.toJSON=function(){var data=of.prototype.toJSON.call(this);return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data.v3=this.v3.toArray(),data},yf.prototype.fromJSON=function(e){return of.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},bf.prototype=Object.create(of.prototype),bf.prototype.constructor=bf,bf.prototype.isLineCurve=!0,bf.prototype.getPoint=function(e,t){var r=t||new $r;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},bf.prototype.getPointAt=function(u,e){return this.getPoint(u,e)},bf.prototype.getTangent=function(e,t){return(t||new $r).copy(this.v2).sub(this.v1).normalize()},bf.prototype.copy=function(source){return of.prototype.copy.call(this,source),this.v1.copy(source.v1),this.v2.copy(source.v2),this},bf.prototype.toJSON=function(){var data=of.prototype.toJSON.call(this);return data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data},bf.prototype.fromJSON=function(e){return of.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},xf.prototype=Object.create(of.prototype),xf.prototype.constructor=xf,xf.prototype.isLineCurve3=!0,xf.prototype.getPoint=function(e,t){var r=t||new ua;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},xf.prototype.getPointAt=function(u,e){return this.getPoint(u,e)},xf.prototype.copy=function(source){return of.prototype.copy.call(this,source),this.v1.copy(source.v1),this.v2.copy(source.v2),this},xf.prototype.toJSON=function(){var data=of.prototype.toJSON.call(this);return data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data},xf.prototype.fromJSON=function(e){return of.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},wf.prototype=Object.create(of.prototype),wf.prototype.constructor=wf,wf.prototype.isQuadraticBezierCurve=!0,wf.prototype.getPoint=function(e,t){var r=t||new $r,n=this.v0,o=this.v1,l=this.v2;return r.set(_f(e,n.x,o.x,l.x),_f(e,n.y,o.y,l.y)),r},wf.prototype.copy=function(source){return of.prototype.copy.call(this,source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this},wf.prototype.toJSON=function(){var data=of.prototype.toJSON.call(this);return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data},wf.prototype.fromJSON=function(e){return of.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Mf.prototype=Object.create(of.prototype),Mf.prototype.constructor=Mf,Mf.prototype.isQuadraticBezierCurve3=!0,Mf.prototype.getPoint=function(e,t){var r=t||new ua,n=this.v0,o=this.v1,l=this.v2;return r.set(_f(e,n.x,o.x,l.x),_f(e,n.y,o.y,l.y),_f(e,n.z,o.z,l.z)),r},Mf.prototype.copy=function(source){return of.prototype.copy.call(this,source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this},Mf.prototype.toJSON=function(){var data=of.prototype.toJSON.call(this);return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data},Mf.prototype.fromJSON=function(e){return of.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Ef.prototype=Object.create(of.prototype),Ef.prototype.constructor=Ef,Ef.prototype.isSplineCurve=!0,Ef.prototype.getPoint=function(e,t){var r=t||new $r,n=this.points,p=(n.length-1)*e,o=Math.floor(p),l=p-o,h=n[0===o?o:o-1],f=n[o],c=n[o>n.length-2?n.length-1:o+1],d=n[o>n.length-3?n.length-1:o+2];return r.set(pf(l,h.x,f.x,c.x,d.x),pf(l,h.y,f.y,c.y,d.y)),r},Ef.prototype.copy=function(source){of.prototype.copy.call(this,source),this.points=[];for(var i=0,e=source.points.length;i<e;i++){var t=source.points[i];this.points.push(t.clone())}return this},Ef.prototype.toJSON=function(){var data=of.prototype.toJSON.call(this);data.points=[];for(var i=0,e=this.points.length;i<e;i++){var t=this.points[i];data.points.push(t.toArray())}return data},Ef.prototype.fromJSON=function(e){of.prototype.fromJSON.call(this,e),this.points=[];for(var i=0,t=e.points.length;i<t;i++){var r=e.points[i];this.points.push((new $r).fromArray(r))}return this};var Sf=Object.freeze({__proto__:null,ArcCurve:lf,CatmullRomCurve3:vf,CubicBezierCurve:mf,CubicBezierCurve3:yf,EllipseCurve:sf,LineCurve:bf,LineCurve3:xf,QuadraticBezierCurve:wf,QuadraticBezierCurve3:Mf,SplineCurve:Ef});function Tf(){of.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Af(e){Tf.call(this),this.type="Path",this.currentPoint=new $r,e&&this.setFromPoints(e)}function Rf(e){Af.call(this,e),this.uuid=Qr.generateUUID(),this.type="Shape",this.holes=[]}function Cf(e,t){Da.call(this),this.type="Light",this.color=new Ri(e),this.intensity=void 0!==t?t:1,this.receiveShadow=void 0}function Lf(e,t,r){Cf.call(this,e,r),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(Da.DefaultUp),this.updateMatrix(),this.groundColor=new Ri(t)}function Pf(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new $r(512,512),this.map=null,this.mapPass=null,this.matrix=new ma,this._frustum=new zn,this._frameExtents=new $r(1,1),this._viewportCount=1,this._viewports=[new ia(0,0,1,1)]}function Of(){Pf.call(this,new Dn(50,1,.5,500))}function kf(e,t,r,n,o,l){Cf.call(this,e,t),this.type="SpotLight",this.position.copy(Da.DefaultUp),this.updateMatrix(),this.target=new Da,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=void 0!==r?r:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==o?o:0,this.decay=void 0!==l?l:1,this.shadow=new Of}function If(){Pf.call(this,new Dn(90,1,.5,500)),this._frameExtents=new $r(4,2),this._viewportCount=6,this._viewports=[new ia(2,1,1,1),new ia(0,1,1,1),new ia(3,1,1,1),new ia(1,1,1,1),new ia(3,0,1,1),new ia(1,0,1,1)],this._cubeDirections=[new ua(1,0,0),new ua(-1,0,0),new ua(0,0,1),new ua(0,0,-1),new ua(0,1,0),new ua(0,-1,0)],this._cubeUps=[new ua(0,1,0),new ua(0,1,0),new ua(0,1,0),new ua(0,1,0),new ua(0,0,1),new ua(0,0,-1)]}function Nf(e,t,r,n){Cf.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==r?r:0,this.decay=void 0!==n?n:1,this.shadow=new If}function Df(e,t,r,n,o,l){Nn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==e?e:-1,this.right=void 0!==t?t:1,this.top=void 0!==r?r:1,this.bottom=void 0!==n?n:-1,this.near=void 0!==o?o:.1,this.far=void 0!==l?l:2e3,this.updateProjectionMatrix()}function Bf(){Pf.call(this,new Df(-5,5,5,-5,.5,500))}function Ff(e,t){Cf.call(this,e,t),this.type="DirectionalLight",this.position.copy(Da.DefaultUp),this.updateMatrix(),this.target=new Da,this.shadow=new Bf}function Uf(e,t){Cf.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}function jf(e,t,r,n){Cf.call(this,e,t),this.type="RectAreaLight",this.width=void 0!==r?r:10,this.height=void 0!==n?n:10}function Vf(){this.coefficients=[];for(var i=0;i<9;i++)this.coefficients.push(new ua)}function zf(e,t){Cf.call(this,void 0,t),this.type="LightProbe",this.sh=void 0!==e?e:new Vf}function Gf(e){Ju.call(this,e),this.textures={}}Tf.prototype=Object.assign(Object.create(of.prototype),{constructor:Tf,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new bf(t,e))},getPoint:function(e){for(var t=e*this.getLength(),r=this.getCurveLengths(),i=0;i<r.length;){if(r[i]>=t){var n=r[i]-t,o=this.curves[i],l=o.getLength(),u=0===l?0:1-n/l;return o.getPointAt(u)}i++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,i=0,r=this.curves.length;i<r;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){void 0===e&&(e=40);for(var t=[],i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;for(var t,r=[],i=0,n=this.curves;i<n.length;i++)for(var o=n[i],l=o&&o.isEllipseCurve?2*e:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?e*o.points.length:e,h=o.getPoints(l),f=0;f<h.length;f++){var c=h[f];t&&t.equals(c)||(r.push(c),t=c)}return this.autoClose&&r.length>1&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r},copy:function(source){of.prototype.copy.call(this,source),this.curves=[];for(var i=0,e=source.curves.length;i<e;i++){var t=source.curves[i];this.curves.push(t.clone())}return this.autoClose=source.autoClose,this},toJSON:function(){var data=of.prototype.toJSON.call(this);data.autoClose=this.autoClose,data.curves=[];for(var i=0,e=this.curves.length;i<e;i++){var t=this.curves[i];data.curves.push(t.toJSON())}return data},fromJSON:function(e){of.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var i=0,t=e.curves.length;i<t;i++){var r=e.curves[i];this.curves.push((new Sf[r.type]).fromJSON(r))}return this}}),Af.prototype=Object.assign(Object.create(Tf.prototype),{constructor:Af,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var i=1,t=e.length;i<t;i++)this.lineTo(e[i].x,e[i].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){var r=new bf(this.currentPoint.clone(),new $r(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,r,n){var o=new wf(this.currentPoint.clone(),new $r(e,t),new $r(r,n));return this.curves.push(o),this.currentPoint.set(r,n),this},bezierCurveTo:function(e,t,r,n,o,l){var h=new mf(this.currentPoint.clone(),new $r(e,t),new $r(r,n),new $r(o,l));return this.curves.push(h),this.currentPoint.set(o,l),this},splineThru:function(e){var t=new Ef([this.currentPoint.clone()].concat(e));return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,r,n,o,l){var h=this.currentPoint.x,f=this.currentPoint.y;return this.absarc(e+h,t+f,r,n,o,l),this},absarc:function(e,t,r,n,o,l){return this.absellipse(e,t,r,r,n,o,l),this},ellipse:function(e,t,r,n,o,l,h,f){var c=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+c,t+d,r,n,o,l,h,f),this},absellipse:function(e,t,r,n,o,l,h,f){var c=new sf(e,t,r,n,o,l,h,f);if(this.curves.length>0){var d=c.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(c);var v=c.getPoint(1);return this.currentPoint.copy(v),this},copy:function(source){return Tf.prototype.copy.call(this,source),this.currentPoint.copy(source.currentPoint),this},toJSON:function(){var data=Tf.prototype.toJSON.call(this);return data.currentPoint=this.currentPoint.toArray(),data},fromJSON:function(e){return Tf.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),Rf.prototype=Object.assign(Object.create(Af.prototype),{constructor:Rf,getPointsHoles:function(e){for(var t=[],i=0,r=this.holes.length;i<r;i++)t[i]=this.holes[i].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(source){Af.prototype.copy.call(this,source),this.holes=[];for(var i=0,e=source.holes.length;i<e;i++){var t=source.holes[i];this.holes.push(t.clone())}return this},toJSON:function(){var data=Af.prototype.toJSON.call(this);data.uuid=this.uuid,data.holes=[];for(var i=0,e=this.holes.length;i<e;i++){var t=this.holes[i];data.holes.push(t.toJSON())}return data},fromJSON:function(e){Af.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(var i=0,t=e.holes.length;i<t;i++){var r=e.holes[i];this.holes.push((new Af).fromJSON(r))}return this}}),Cf.prototype=Object.assign(Object.create(Da.prototype),{constructor:Cf,isLight:!0,copy:function(source){return Da.prototype.copy.call(this,source),this.color.copy(source.color),this.intensity=source.intensity,this},toJSON:function(meta){var data=Da.prototype.toJSON.call(this,meta);return data.object.color=this.color.getHex(),data.object.intensity=this.intensity,void 0!==this.groundColor&&(data.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(data.object.distance=this.distance),void 0!==this.angle&&(data.object.angle=this.angle),void 0!==this.decay&&(data.object.decay=this.decay),void 0!==this.penumbra&&(data.object.penumbra=this.penumbra),void 0!==this.shadow&&(data.object.shadow=this.shadow.toJSON()),data}}),Lf.prototype=Object.assign(Object.create(Cf.prototype),{constructor:Lf,isHemisphereLight:!0,copy:function(source){return Cf.prototype.copy.call(this,source),this.groundColor.copy(source.groundColor),this}}),Object.assign(Pf.prototype,{_projScreenMatrix:new ma,_lightPositionWorld:new ua,_lookTarget:new ua,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){var t=this.camera,r=this.matrix,n=this._projScreenMatrix,o=this._lookTarget,l=this._lightPositionWorld;l.setFromMatrixPosition(e.matrixWorld),t.position.copy(l),o.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(o),t.updateMatrixWorld(),n.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(n),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(t.projectionMatrix),r.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(source){return this.camera=source.camera.clone(),this.bias=source.bias,this.radius=source.radius,this.mapSize.copy(source.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var object={};return 0!==this.bias&&(object.bias=this.bias),1!==this.radius&&(object.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(object.mapSize=this.mapSize.toArray()),object.camera=this.camera.toJSON(!1).object,delete object.camera.matrix,object}}),Of.prototype=Object.assign(Object.create(Pf.prototype),{constructor:Of,isSpotLightShadow:!0,updateMatrices:function(e){var t=this.camera,r=2*Qr.RAD2DEG*e.angle,n=this.mapSize.width/this.mapSize.height,o=e.distance||t.far;r===t.fov&&n===t.aspect&&o===t.far||(t.fov=r,t.aspect=n,t.far=o,t.updateProjectionMatrix()),Pf.prototype.updateMatrices.call(this,e)}}),kf.prototype=Object.assign(Object.create(Cf.prototype),{constructor:kf,isSpotLight:!0,copy:function(source){return Cf.prototype.copy.call(this,source),this.distance=source.distance,this.angle=source.angle,this.penumbra=source.penumbra,this.decay=source.decay,this.target=source.target.clone(),this.shadow=source.shadow.clone(),this}}),If.prototype=Object.assign(Object.create(Pf.prototype),{constructor:If,isPointLightShadow:!0,updateMatrices:function(e,t){void 0===t&&(t=0);var r=this.camera,n=this.matrix,o=this._lightPositionWorld,l=this._lookTarget,h=this._projScreenMatrix;o.setFromMatrixPosition(e.matrixWorld),r.position.copy(o),l.copy(r.position),l.add(this._cubeDirections[t]),r.up.copy(this._cubeUps[t]),r.lookAt(l),r.updateMatrixWorld(),n.makeTranslation(-o.x,-o.y,-o.z),h.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(h)}}),Nf.prototype=Object.assign(Object.create(Cf.prototype),{constructor:Nf,isPointLight:!0,copy:function(source){return Cf.prototype.copy.call(this,source),this.distance=source.distance,this.decay=source.decay,this.shadow=source.shadow.clone(),this}}),Df.prototype=Object.assign(Object.create(Nn.prototype),{constructor:Df,isOrthographicCamera:!0,copy:function(source,e){return Nn.prototype.copy.call(this,source,e),this.left=source.left,this.right=source.right,this.top=source.top,this.bottom=source.bottom,this.near=source.near,this.far=source.far,this.zoom=source.zoom,this.view=null===source.view?null:Object.assign({},source.view),this},setViewOffset:function(e,t,r,n,o,l){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,n=(this.top+this.bottom)/2,o=r-e,l=r+e,h=n+t,f=n-t;if(null!==this.view&&this.view.enabled){var c=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;l=(o+=c*this.view.offsetX)+c*this.view.width,f=(h-=d*this.view.offsetY)-d*this.view.height}this.projectionMatrix.makeOrthographic(o,l,h,f,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(meta){var data=Da.prototype.toJSON.call(this,meta);return data.object.zoom=this.zoom,data.object.left=this.left,data.object.right=this.right,data.object.top=this.top,data.object.bottom=this.bottom,data.object.near=this.near,data.object.far=this.far,null!==this.view&&(data.object.view=Object.assign({},this.view)),data}}),Bf.prototype=Object.assign(Object.create(Pf.prototype),{constructor:Bf,isDirectionalLightShadow:!0,updateMatrices:function(e){Pf.prototype.updateMatrices.call(this,e)}}),Ff.prototype=Object.assign(Object.create(Cf.prototype),{constructor:Ff,isDirectionalLight:!0,copy:function(source){return Cf.prototype.copy.call(this,source),this.target=source.target.clone(),this.shadow=source.shadow.clone(),this}}),Uf.prototype=Object.assign(Object.create(Cf.prototype),{constructor:Uf,isAmbientLight:!0}),jf.prototype=Object.assign(Object.create(Cf.prototype),{constructor:jf,isRectAreaLight:!0,copy:function(source){return Cf.prototype.copy.call(this,source),this.width=source.width,this.height=source.height,this},toJSON:function(meta){var data=Cf.prototype.toJSON.call(this,meta);return data.object.width=this.width,data.object.height=this.height,data}}),Object.assign(Vf.prototype,{isSphericalHarmonics3:!0,set:function(e){for(var i=0;i<9;i++)this.coefficients[i].copy(e[i]);return this},zero:function(){for(var i=0;i<9;i++)this.coefficients[i].set(0,0,0);return this},getAt:function(e,t){var r=e.x,n=e.y,o=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*n),t.addScaledVector(l[2],.488603*o),t.addScaledVector(l[3],.488603*r),t.addScaledVector(l[4],r*n*1.092548),t.addScaledVector(l[5],n*o*1.092548),t.addScaledVector(l[6],.315392*(3*o*o-1)),t.addScaledVector(l[7],r*o*1.092548),t.addScaledVector(l[8],.546274*(r*r-n*n)),t},getIrradianceAt:function(e,t){var r=e.x,n=e.y,o=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],1.023328*n),t.addScaledVector(l[2],1.023328*o),t.addScaledVector(l[3],1.023328*r),t.addScaledVector(l[4],.858086*r*n),t.addScaledVector(l[5],.858086*n*o),t.addScaledVector(l[6],.743125*o*o-.247708),t.addScaledVector(l[7],.858086*r*o),t.addScaledVector(l[8],.429043*(r*r-n*n)),t},add:function(e){for(var i=0;i<9;i++)this.coefficients[i].add(e.coefficients[i]);return this},addScaledSH:function(e,s){for(var i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],s);return this},scale:function(s){for(var i=0;i<9;i++)this.coefficients[i].multiplyScalar(s);return this},lerp:function(e,t){for(var i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this},equals:function(e){for(var i=0;i<9;i++)if(!this.coefficients[i].equals(e.coefficients[i]))return!1;return!0},copy:function(e){return this.set(e.coefficients)},clone:function(){return(new this.constructor).copy(this)},fromArray:function(e,t){void 0===t&&(t=0);for(var r=this.coefficients,i=0;i<9;i++)r[i].fromArray(e,t+3*i);return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);for(var r=this.coefficients,i=0;i<9;i++)r[i].toArray(e,t+3*i);return e}}),Object.assign(Vf,{getBasisAt:function(e,t){var r=e.x,n=e.y,o=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*o,t[3]=.488603*r,t[4]=1.092548*r*n,t[5]=1.092548*n*o,t[6]=.315392*(3*o*o-1),t[7]=1.092548*r*o,t[8]=.546274*(r*r-n*n)}}),zf.prototype=Object.assign(Object.create(Cf.prototype),{constructor:zf,isLightProbe:!0,copy:function(source){return Cf.prototype.copy.call(this,source),this.sh.copy(source.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(meta){var data=Cf.prototype.toJSON.call(this,meta);return data.object.sh=this.sh.toArray(),data}}),Gf.prototype=Object.assign(Object.create(Ju.prototype),{constructor:Gf,load:function(e,t,r,n){var o=this,l=new Qu(o.manager);l.setPath(o.path),l.load(e,(function(text){try{t(o.parse(JSON.parse(text)))}catch(t){n?n(t):console.error(t),o.manager.itemError(e)}}),r,n)},parse:function(e){var t=this.textures;function r(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}var n=new Pu[e.type];if(void 0!==e.uuid&&(n.uuid=e.uuid),void 0!==e.name&&(n.name=e.name),void 0!==e.color&&n.color.setHex(e.color),void 0!==e.roughness&&(n.roughness=e.roughness),void 0!==e.metalness&&(n.metalness=e.metalness),void 0!==e.sheen&&(n.sheen=(new Ri).setHex(e.sheen)),void 0!==e.emissive&&n.emissive.setHex(e.emissive),void 0!==e.specular&&n.specular.setHex(e.specular),void 0!==e.shininess&&(n.shininess=e.shininess),void 0!==e.clearcoat&&(n.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(n.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(n.fog=e.fog),void 0!==e.flatShading&&(n.flatShading=e.flatShading),void 0!==e.blending&&(n.blending=e.blending),void 0!==e.combine&&(n.combine=e.combine),void 0!==e.side&&(n.side=e.side),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.transparent&&(n.transparent=e.transparent),void 0!==e.alphaTest&&(n.alphaTest=e.alphaTest),void 0!==e.depthTest&&(n.depthTest=e.depthTest),void 0!==e.depthWrite&&(n.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(n.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(n.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(n.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(n.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(n.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(n.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(n.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(n.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(n.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(n.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(n.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(n.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(n.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(n.rotation=e.rotation),1!==e.linewidth&&(n.linewidth=e.linewidth),void 0!==e.dashSize&&(n.dashSize=e.dashSize),void 0!==e.gapSize&&(n.gapSize=e.gapSize),void 0!==e.scale&&(n.scale=e.scale),void 0!==e.polygonOffset&&(n.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(n.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(n.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(n.skinning=e.skinning),void 0!==e.morphTargets&&(n.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(n.morphNormals=e.morphNormals),void 0!==e.dithering&&(n.dithering=e.dithering),void 0!==e.vertexTangents&&(n.vertexTangents=e.vertexTangents),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.toneMapped&&(n.toneMapped=e.toneMapped),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),void 0!==e.uniforms)for(var o in e.uniforms){var l=e.uniforms[o];switch(n.uniforms[o]={},l.type){case"t":n.uniforms[o].value=r(l.value);break;case"c":n.uniforms[o].value=(new Ri).setHex(l.value);break;case"v2":n.uniforms[o].value=(new $r).fromArray(l.value);break;case"v3":n.uniforms[o].value=(new ua).fromArray(l.value);break;case"v4":n.uniforms[o].value=(new ia).fromArray(l.value);break;case"m3":n.uniforms[o].value=(new ea).fromArray(l.value);case"m4":n.uniforms[o].value=(new ma).fromArray(l.value);break;default:n.uniforms[o].value=l.value}}if(void 0!==e.defines&&(n.defines=e.defines),void 0!==e.vertexShader&&(n.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(n.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(var h in e.extensions)n.extensions[h]=e.extensions[h];if(void 0!==e.shading&&(n.flatShading=1===e.shading),void 0!==e.size&&(n.size=e.size),void 0!==e.sizeAttenuation&&(n.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(n.map=r(e.map)),void 0!==e.matcap&&(n.matcap=r(e.matcap)),void 0!==e.alphaMap&&(n.alphaMap=r(e.alphaMap)),void 0!==e.bumpMap&&(n.bumpMap=r(e.bumpMap)),void 0!==e.bumpScale&&(n.bumpScale=e.bumpScale),void 0!==e.normalMap&&(n.normalMap=r(e.normalMap)),void 0!==e.normalMapType&&(n.normalMapType=e.normalMapType),void 0!==e.normalScale){var f=e.normalScale;!1===Array.isArray(f)&&(f=[f,f]),n.normalScale=(new $r).fromArray(f)}return void 0!==e.displacementMap&&(n.displacementMap=r(e.displacementMap)),void 0!==e.displacementScale&&(n.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(n.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(n.roughnessMap=r(e.roughnessMap)),void 0!==e.metalnessMap&&(n.metalnessMap=r(e.metalnessMap)),void 0!==e.emissiveMap&&(n.emissiveMap=r(e.emissiveMap)),void 0!==e.emissiveIntensity&&(n.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(n.specularMap=r(e.specularMap)),void 0!==e.envMap&&(n.envMap=r(e.envMap)),void 0!==e.envMapIntensity&&(n.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(n.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(n.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(n.lightMap=r(e.lightMap)),void 0!==e.lightMapIntensity&&(n.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(n.aoMap=r(e.aoMap)),void 0!==e.aoMapIntensity&&(n.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(n.gradientMap=r(e.gradientMap)),void 0!==e.clearcoatMap&&(n.clearcoatMap=r(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=r(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(n.clearcoatNormalMap=r(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(n.clearcoatNormalScale=(new $r).fromArray(e.clearcoatNormalScale)),n},setTextures:function(e){return this.textures=e,this}});var Hf={decodeText:function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);for(var s="",i=0,t=e.length;i<t;i++)s+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(s))}catch(e){return s}},extractUrlBase:function(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}};function Wf(){rn.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function qf(e,t,r,n){"number"==typeof r&&(n=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Bi.call(this,e,t,r),this.meshPerAttribute=n||1}function Xf(e){Ju.call(this,e)}Wf.prototype=Object.assign(Object.create(rn.prototype),{constructor:Wf,isInstancedBufferGeometry:!0,copy:function(source){return rn.prototype.copy.call(this,source),this.instanceCount=source.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var data=rn.prototype.toJSON.call(this);return data.instanceCount=this.instanceCount,data.isInstancedBufferGeometry=!0,data}}),qf.prototype=Object.assign(Object.create(Bi.prototype),{constructor:qf,isInstancedBufferAttribute:!0,copy:function(source){return Bi.prototype.copy.call(this,source),this.meshPerAttribute=source.meshPerAttribute,this},toJSON:function(){var data=Bi.prototype.toJSON.call(this);return data.meshPerAttribute=this.meshPerAttribute,data.isInstancedBufferAttribute=!0,data}}),Xf.prototype=Object.assign(Object.create(Ju.prototype),{constructor:Xf,load:function(e,t,r,n){var o=this,l=new Qu(o.manager);l.setPath(o.path),l.load(e,(function(text){try{t(o.parse(JSON.parse(text)))}catch(t){n?n(t):console.error(t),o.manager.itemError(e)}}),r,n)},parse:function(e){var t=e.isInstancedBufferGeometry?new Wf:new rn,r=e.data.index;if(void 0!==r){var n=new Yf[r.type](r.array);t.setIndex(new Bi(n,1))}var o=e.data.attributes;for(var l in o){var h=o[l],f=(n=new Yf[h.type](h.array),new(h.isInstancedBufferAttribute?qf:Bi)(n,h.itemSize,h.normalized));void 0!==h.name&&(f.name=h.name),t.setAttribute(l,f)}var c=e.data.morphAttributes;if(c)for(var l in c){for(var d=c[l],v=[],i=0,_=d.length;i<_;i++){h=d[i],f=new Bi(n=new Yf[h.type](h.array),h.itemSize,h.normalized);void 0!==h.name&&(f.name=h.name),v.push(f)}t.morphAttributes[l]=v}e.data.morphTargetsRelative&&(t.morphTargetsRelative=!0);var m=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==m){i=0;for(var y=m.length;i!==y;++i){var x=m[i];t.addGroup(x.start,x.count,x.materialIndex)}}var w=e.data.boundingSphere;if(void 0!==w){var M=new ua;void 0!==w.center&&M.fromArray(w.center),t.boundingSphere=new ei(M,w.radius)}return e.name&&(t.name=e.name),e.userData&&(t.userData=e.userData),t}});var Yf={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Zf(e){Ju.call(this,e)}Zf.prototype=Object.assign(Object.create(Ju.prototype),{constructor:Zf,load:function(e,t,r,n){var o=this,path=""===this.path?Hf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||path;var l=new Qu(o.manager);l.setPath(this.path),l.load(e,(function(text){var r=null;try{r=JSON.parse(text)}catch(t){return void 0!==n&&n(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}var l=r.metadata;void 0!==l&&void 0!==l.type&&"geometry"!==l.type.toLowerCase()?o.parse(r,t):console.error("THREE.ObjectLoader: Can't load "+e)}),r,n)},parse:function(e,t){var r=this.parseShape(e.shapes),n=this.parseGeometries(e.geometries,r),o=this.parseImages(e.images,(function(){void 0!==t&&t(object)})),l=this.parseTextures(e.textures,o),h=this.parseMaterials(e.materials,l),object=this.parseObject(e.object,n,h);return e.animations&&(object.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0!==t&&t(object),object},parseShape:function(e){var t={};if(void 0!==e)for(var i=0,r=e.length;i<r;i++){var n=(new Rf).fromJSON(e[i]);t[n.uuid]=n}return t},parseGeometries:function(e,t){var r={};if(void 0!==e)for(var n=new Xf,i=0,o=e.length;i<o;i++){var l,data=e[i];switch(data.type){case"PlaneGeometry":case"PlaneBufferGeometry":l=new bu[data.type](data.width,data.height,data.widthSegments,data.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":l=new bu[data.type](data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":l=new bu[data.type](data.radius,data.segments,data.thetaStart,data.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":l=new bu[data.type](data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":l=new bu[data.type](data.radius,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":l=new bu[data.type](data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":l=new bu[data.type](data.radius,data.detail);break;case"RingGeometry":case"RingBufferGeometry":l=new bu[data.type](data.innerRadius,data.outerRadius,data.thetaSegments,data.phiSegments,data.thetaStart,data.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":l=new bu[data.type](data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":l=new bu[data.type](data.radius,data.tube,data.tubularSegments,data.radialSegments,data.p,data.q);break;case"TubeGeometry":case"TubeBufferGeometry":l=new bu[data.type]((new Sf[data.path.type]).fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed);break;case"LatheGeometry":case"LatheBufferGeometry":l=new bu[data.type](data.points,data.segments,data.phiStart,data.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":l=new bu[data.type](data.vertices,data.indices,data.radius,data.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var h=[],f=0,c=data.shapes.length;f<c;f++){var d=t[data.shapes[f]];h.push(d)}l=new bu[data.type](h,data.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(h=[],f=0,c=data.shapes.length;f<c;f++){d=t[data.shapes[f]];h.push(d)}var v=data.options.extrudePath;void 0!==v&&(data.options.extrudePath=(new Sf[v.type]).fromJSON(v)),l=new bu[data.type](h,data.options);break;case"BufferGeometry":case"InstancedBufferGeometry":l=n.parse(data);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+data.type+'"');continue}l.uuid=data.uuid,void 0!==data.name&&(l.name=data.name),!0===l.isBufferGeometry&&void 0!==data.userData&&(l.userData=data.userData),r[data.uuid]=l}return r},parseMaterials:function(e,t){var r={},n={};if(void 0!==e){var o=new Gf;o.setTextures(t);for(var i=0,l=e.length;i<l;i++){var data=e[i];if("MultiMaterial"===data.type){for(var h=[],f=0;f<data.materials.length;f++){var c=data.materials[f];void 0===r[c.uuid]&&(r[c.uuid]=o.parse(c)),h.push(r[c.uuid])}n[data.uuid]=h}else void 0===r[data.uuid]&&(r[data.uuid]=o.parse(data)),n[data.uuid]=r[data.uuid]}}return n},parseAnimations:function(e){for(var t=[],i=0;i<e.length;i++){var data=e[i],r=Wu.parse(data);void 0!==data.uuid&&(r.uuid=data.uuid),t.push(r)}return t},parseImages:function(e,t){var r=this,n={};function o(e){return r.manager.itemStart(e),l.load(e,(function(){r.manager.itemEnd(e)}),void 0,(function(){r.manager.itemError(e),r.manager.itemEnd(e)}))}if(void 0!==e&&e.length>0){var l=new rf(new Yu(t));l.setCrossOrigin(this.crossOrigin);for(var i=0,h=e.length;i<h;i++){var image=e[i],f=image.url;if(Array.isArray(f)){n[image.uuid]=[];for(var c=0,d=f.length;c<d;c++){var v=f[c],path=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(v)?v:r.resourcePath+v;n[image.uuid].push(o(path))}}else{path=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(image.url)?image.url:r.resourcePath+image.url;n[image.uuid]=o(path)}}}return n},parseTextures:function(e,t){function r(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}var n={};if(void 0!==e)for(var i=0,o=e.length;i<o;i++){var l,data=e[i];void 0===data.image&&console.warn('THREE.ObjectLoader: No "image" specified for',data.uuid),void 0===t[data.image]&&console.warn("THREE.ObjectLoader: Undefined image",data.image),(l=Array.isArray(t[data.image])?new so(t[data.image]):new aa(t[data.image])).needsUpdate=!0,l.uuid=data.uuid,void 0!==data.name&&(l.name=data.name),void 0!==data.mapping&&(l.mapping=r(data.mapping,Kf)),void 0!==data.offset&&l.offset.fromArray(data.offset),void 0!==data.repeat&&l.repeat.fromArray(data.repeat),void 0!==data.center&&l.center.fromArray(data.center),void 0!==data.rotation&&(l.rotation=data.rotation),void 0!==data.wrap&&(l.wrapS=r(data.wrap[0],Qf),l.wrapT=r(data.wrap[1],Qf)),void 0!==data.format&&(l.format=data.format),void 0!==data.type&&(l.type=data.type),void 0!==data.encoding&&(l.encoding=data.encoding),void 0!==data.minFilter&&(l.minFilter=r(data.minFilter,$f)),void 0!==data.magFilter&&(l.magFilter=r(data.magFilter,$f)),void 0!==data.anisotropy&&(l.anisotropy=data.anisotropy),void 0!==data.flipY&&(l.flipY=data.flipY),void 0!==data.premultiplyAlpha&&(l.premultiplyAlpha=data.premultiplyAlpha),void 0!==data.unpackAlignment&&(l.unpackAlignment=data.unpackAlignment),n[data.uuid]=l}return n},parseObject:function(data,e,t){var object;function r(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function n(e){if(void 0!==e){if(Array.isArray(e)){for(var r=[],i=0,n=e.length;i<n;i++){var o=e[i];void 0===t[o]&&console.warn("THREE.ObjectLoader: Undefined material",o),r.push(t[o])}return r}return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),t[e]}}switch(data.type){case"Scene":object=new Ba,void 0!==data.background&&Number.isInteger(data.background)&&(object.background=new Ri(data.background)),void 0!==data.fog&&("Fog"===data.fog.type?object.fog=new Js(data.fog.color,data.fog.near,data.fog.far):"FogExp2"===data.fog.type&&(object.fog=new Zs(data.fog.color,data.fog.density)));break;case"PerspectiveCamera":object=new Dn(data.fov,data.aspect,data.near,data.far),void 0!==data.focus&&(object.focus=data.focus),void 0!==data.zoom&&(object.zoom=data.zoom),void 0!==data.filmGauge&&(object.filmGauge=data.filmGauge),void 0!==data.filmOffset&&(object.filmOffset=data.filmOffset),void 0!==data.view&&(object.view=Object.assign({},data.view));break;case"OrthographicCamera":object=new Df(data.left,data.right,data.top,data.bottom,data.near,data.far),void 0!==data.zoom&&(object.zoom=data.zoom),void 0!==data.view&&(object.view=Object.assign({},data.view));break;case"AmbientLight":object=new Uf(data.color,data.intensity);break;case"DirectionalLight":object=new Ff(data.color,data.intensity);break;case"PointLight":object=new Nf(data.color,data.intensity,data.distance,data.decay);break;case"RectAreaLight":object=new jf(data.color,data.intensity,data.width,data.height);break;case"SpotLight":object=new kf(data.color,data.intensity,data.distance,data.angle,data.penumbra,data.decay);break;case"HemisphereLight":object=new Lf(data.color,data.groundColor,data.intensity);break;case"LightProbe":object=(new zf).fromJSON(data);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":object=new xn(o=r(data.geometry),l=n(data.material));break;case"InstancedMesh":var o=r(data.geometry),l=n(data.material),h=data.count,f=data.instanceMatrix;(object=new Dl(o,l,h)).instanceMatrix=new Bi(new Float32Array(f.array),16);break;case"LOD":object=new Tl;break;case"Line":object=new Gl(r(data.geometry),n(data.material),data.mode);break;case"LineLoop":object=new Xl(r(data.geometry),n(data.material));break;case"LineSegments":object=new ql(r(data.geometry),n(data.material));break;case"PointCloud":case"Points":object=new $l(r(data.geometry),n(data.material));break;case"Sprite":object=new gl(n(data.material));break;case"Group":object=new Hs;break;default:object=new Da}if(object.uuid=data.uuid,void 0!==data.name&&(object.name=data.name),void 0!==data.matrix?(object.matrix.fromArray(data.matrix),void 0!==data.matrixAutoUpdate&&(object.matrixAutoUpdate=data.matrixAutoUpdate),object.matrixAutoUpdate&&object.matrix.decompose(object.position,object.quaternion,object.scale)):(void 0!==data.position&&object.position.fromArray(data.position),void 0!==data.rotation&&object.rotation.fromArray(data.rotation),void 0!==data.quaternion&&object.quaternion.fromArray(data.quaternion),void 0!==data.scale&&object.scale.fromArray(data.scale)),void 0!==data.castShadow&&(object.castShadow=data.castShadow),void 0!==data.receiveShadow&&(object.receiveShadow=data.receiveShadow),data.shadow&&(void 0!==data.shadow.bias&&(object.shadow.bias=data.shadow.bias),void 0!==data.shadow.radius&&(object.shadow.radius=data.shadow.radius),void 0!==data.shadow.mapSize&&object.shadow.mapSize.fromArray(data.shadow.mapSize),void 0!==data.shadow.camera&&(object.shadow.camera=this.parseObject(data.shadow.camera))),void 0!==data.visible&&(object.visible=data.visible),void 0!==data.frustumCulled&&(object.frustumCulled=data.frustumCulled),void 0!==data.renderOrder&&(object.renderOrder=data.renderOrder),void 0!==data.userData&&(object.userData=data.userData),void 0!==data.layers&&(object.layers.mask=data.layers),void 0!==data.children)for(var c=data.children,i=0;i<c.length;i++)object.add(this.parseObject(c[i],e,t));if("LOD"===data.type){void 0!==data.autoUpdate&&(object.autoUpdate=data.autoUpdate);for(var d=data.levels,v=0;v<d.length;v++){var _=d[v],m=object.getObjectByProperty("uuid",_.object);void 0!==m&&object.addLevel(m,_.distance)}}return object}});var Jf,Kf={UVMapping:ve,CubeReflectionMapping:pe,CubeRefractionMapping:_e,EquirectangularReflectionMapping:ge,EquirectangularRefractionMapping:me,SphericalReflectionMapping:ye,CubeUVReflectionMapping:be,CubeUVRefractionMapping:xe},Qf={RepeatWrapping:we,ClampToEdgeWrapping:Me,MirroredRepeatWrapping:Ee},$f={NearestFilter:Se,NearestMipmapNearestFilter:Te,NearestMipmapLinearFilter:Re,LinearFilter:Le,LinearMipmapNearestFilter:Pe,LinearMipmapLinearFilter:ke};function ec(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Ju.call(this,e),this.options=void 0}function tc(){this.type="ShapePath",this.color=new Ri,this.subPaths=[],this.currentPath=null}function rc(data){this.type="Font",this.data=data}function ac(e,t,r,n,data){var glyph=data.glyphs[e]||data.glyphs["?"];if(glyph){var o,l,h,f,c,d,v,_,path=new tc;if(glyph.o)for(var m=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(" ")),i=0,y=m.length;i<y;){switch(m[i++]){case"m":o=m[i++]*t+r,l=m[i++]*t+n,path.moveTo(o,l);break;case"l":o=m[i++]*t+r,l=m[i++]*t+n,path.lineTo(o,l);break;case"q":h=m[i++]*t+r,f=m[i++]*t+n,c=m[i++]*t+r,d=m[i++]*t+n,path.quadraticCurveTo(c,d,h,f);break;case"b":h=m[i++]*t+r,f=m[i++]*t+n,c=m[i++]*t+r,d=m[i++]*t+n,v=m[i++]*t+r,_=m[i++]*t+n,path.bezierCurveTo(c,d,v,_,h,f)}}return{offsetX:glyph.ha*t,path:path}}console.error('THREE.Font: character "'+e+'" does not exists in font family '+data.familyName+".")}function ic(e){Ju.call(this,e)}ec.prototype=Object.assign(Object.create(Ju.prototype),{constructor:ec,setOptions:function(e){return this.options=e,this},load:function(e,t,r,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var o=this,l=Xu.get(e);if(void 0!==l)return o.manager.itemStart(e),setTimeout((function(){t&&t(l),o.manager.itemEnd(e)}),0),l;fetch(e).then((function(e){return e.blob()})).then((function(e){return void 0===o.options?createImageBitmap(e):createImageBitmap(e,o.options)})).then((function(r){Xu.add(e,r),t&&t(r),o.manager.itemEnd(e)})).catch((function(t){n&&n(t),o.manager.itemError(e),o.manager.itemEnd(e)})),o.manager.itemStart(e)}}),Object.assign(tc.prototype,{moveTo:function(e,t){return this.currentPath=new Af,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,r,n){return this.currentPath.quadraticCurveTo(e,t,r,n),this},bezierCurveTo:function(e,t,r,n,o,l){return this.currentPath.bezierCurveTo(e,t,r,n,o,l),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function r(e){for(var t=[],i=0,r=e.length;i<r;i++){var n=e[i],o=new Rf;o.curves=n.curves,t.push(o)}return t}function n(e,t){for(var r=t.length,n=!1,p=r-1,q=0;q<r;p=q++){var o=t[p],l=t[q],h=l.x-o.x,f=l.y-o.y;if(Math.abs(f)>Number.EPSILON){if(f<0&&(o=t[q],h=-h,l=t[p],f=-f),e.y<o.y||e.y>l.y)continue;if(e.y===o.y){if(e.x===o.x)return!0}else{var c=f*(e.x-o.x)-h*(e.y-o.y);if(0===c)return!0;if(c<0)continue;n=!n}}else{if(e.y!==o.y)continue;if(l.x<=e.x&&e.x<=o.x||o.x<=e.x&&e.x<=l.x)return!0}}return n}var o=Zh.isClockWise,l=this.subPaths;if(0===l.length)return[];if(!0===t)return r(l);var h,f,c,d=[];if(1===l.length)return f=l[0],(c=new Rf).curves=f.curves,d.push(c),d;var v=!o(l[0].getPoints());v=e?!v:v;var _,m,y=[],x=[],w=[],M=0;x[M]=void 0,w[M]=[];for(var i=0,E=l.length;i<E;i++)h=o(_=(f=l[i]).getPoints()),(h=e?!h:h)?(!v&&x[M]&&M++,x[M]={s:new Rf,p:_},x[M].s.curves=f.curves,v&&M++,w[M]=[]):w[M].push({h:f,p:_[0]});if(!x[0])return r(l);if(x.length>1){for(var S=!1,T=[],A=0,R=x.length;A<R;A++)y[A]=[];for(A=0,R=x.length;A<R;A++)for(var C=w[A],L=0;L<C.length;L++){for(var P=C[L],O=!0,k=0;k<x.length;k++)n(P.p,x[k].p)&&(A!==k&&T.push({froms:A,tos:k,hole:L}),O?(O=!1,y[k].push(P)):S=!0);O&&y[A].push(P)}T.length>0&&(S||(w=y))}i=0;for(var I=x.length;i<I;i++){c=x[i].s,d.push(c);for(var N=0,D=(m=w[i]).length;N<D;N++)c.holes.push(m[N].h)}return d}}),Object.assign(rc.prototype,{isFont:!0,generateShapes:function(text,e){void 0===e&&(e=100);for(var t=[],r=function(text,e,data){for(var t=Array.from?Array.from(text):String(text).split(""),r=e/data.resolution,n=(data.boundingBox.yMax-data.boundingBox.yMin+data.underlineThickness)*r,o=[],l=0,h=0,i=0;i<t.length;i++){var f=t[i];if("\n"===f)l=0,h-=n;else{var c=ac(f,r,l,h,data);l+=c.offsetX,o.push(c.path)}}return o}(text,e,this.data),p=0,n=r.length;p<n;p++)Array.prototype.push.apply(t,r[p].toShapes());return t}}),ic.prototype=Object.assign(Object.create(Ju.prototype),{constructor:ic,load:function(e,t,r,n){var o=this,l=new Qu(this.manager);l.setPath(this.path),l.load(e,(function(text){var e;try{e=JSON.parse(text)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),e=JSON.parse(text.substring(65,text.length-2))}var r=o.parse(e);t&&t(r)}),r,n)},parse:function(e){return new rc(e)}});var nc={getContext:function(){return void 0===Jf&&(Jf=new(window.AudioContext||window.webkitAudioContext)),Jf},setContext:function(e){Jf=e}};function oc(e){Ju.call(this,e)}function sc(e,t,r){zf.call(this,void 0,r);var n=(new Ri).set(e),o=(new Ri).set(t),l=new ua(n.r,n.g,n.b),h=new ua(o.r,o.g,o.b),f=Math.sqrt(Math.PI),c=f*Math.sqrt(.75);this.sh.coefficients[0].copy(l).add(h).multiplyScalar(f),this.sh.coefficients[1].copy(l).sub(h).multiplyScalar(c)}function lc(e,t){zf.call(this,void 0,t);var r=(new Ri).set(e);this.sh.coefficients[0].set(r.r,r.g,r.b).multiplyScalar(2*Math.sqrt(Math.PI))}oc.prototype=Object.assign(Object.create(Ju.prototype),{constructor:oc,load:function(e,t,r,n){var o=this,l=new Qu(o.manager);l.setResponseType("arraybuffer"),l.setPath(o.path),l.load(e,(function(r){try{var l=r.slice(0);nc.getContext().decodeAudioData(l,(function(e){t(e)}))}catch(t){n?n(t):console.error(t),o.manager.itemError(e)}}),r,n)}}),sc.prototype=Object.assign(Object.create(zf.prototype),{constructor:sc,isHemisphereLightProbe:!0,copy:function(source){return zf.prototype.copy.call(this,source),this},toJSON:function(meta){return zf.prototype.toJSON.call(this,meta)}}),lc.prototype=Object.assign(Object.create(zf.prototype),{constructor:lc,isAmbientLightProbe:!0,copy:function(source){return zf.prototype.copy.call(this,source),this},toJSON:function(meta){return zf.prototype.toJSON.call(this,meta)}});var hc=new ma,uc=new ma;function fc(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Dn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Dn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}function cc(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(fc.prototype,{update:function(e){var t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;var r,n,o=e.projectionMatrix.clone(),l=t.eyeSep/2,h=l*t.near/t.focus,f=t.near*Math.tan(Qr.DEG2RAD*t.fov*.5)/t.zoom;uc.elements[12]=-l,hc.elements[12]=l,r=-f*t.aspect+h,n=f*t.aspect+h,o.elements[0]=2*t.near/(n-r),o.elements[8]=(n+r)/(n-r),this.cameraL.projectionMatrix.copy(o),r=-f*t.aspect-h,n=f*t.aspect-h,o.elements[0]=2*t.near/(n-r),o.elements[8]=(n+r)/(n-r),this.cameraR.projectionMatrix.copy(o)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(uc),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(hc)}}),Object.assign(cc.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=("undefined"==typeof performance?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}});var dc=new ua,vc=new sa,pc=new ua,_c=new ua;function gc(){Da.call(this),this.type="AudioListener",this.context=nc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new cc}function mc(e){Da.call(this),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._progress=0,this.filters=[]}gc.prototype=Object.assign(Object.create(Da.prototype),{constructor:gc,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this},updateMatrixWorld:function(e){Da.prototype.updateMatrixWorld.call(this,e);var t=this.context.listener,r=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(dc,vc,pc),_c.set(0,0,-1).applyQuaternion(vc),t.positionX){var n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(dc.x,n),t.positionY.linearRampToValueAtTime(dc.y,n),t.positionZ.linearRampToValueAtTime(dc.z,n),t.forwardX.linearRampToValueAtTime(_c.x,n),t.forwardY.linearRampToValueAtTime(_c.y,n),t.forwardZ.linearRampToValueAtTime(_c.z,n),t.upX.linearRampToValueAtTime(r.x,n),t.upY.linearRampToValueAtTime(r.y,n),t.upZ.linearRampToValueAtTime(r.z,n)}else t.setPosition(dc.x,dc.y,dc.z),t.setOrientation(_c.x,_c.y,_c.z,r.x,r.y,r.z)}}),mc.prototype=Object.assign(Object.create(Da.prototype),{constructor:mc,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setMediaElementSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this},setMediaStreamSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(e){if(void 0===e&&(e=0),!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+e;var source=this.context.createBufferSource();return source.buffer=this.buffer,source.loop=this.loop,source.loopStart=this.loopStart,source.loopEnd=this.loopEnd,source.onended=this.onEnded.bind(this),source.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=source,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var i=1,e=this.filters.length;i<e;i++)this.filters[i-1].connect(this.filters[i]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var i=1,e=this.filters.length;i<e;i++)this.filters[i-1].disconnect(this.filters[i]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),!0===this.isPlaying?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},setDetune:function(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(filter){return this.setFilters(filter?[filter]:[])},setPlaybackRate:function(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},setLoopStart:function(e){return this.loopStart=e,this},setLoopEnd:function(e){return this.loopEnd=e,this},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}});var yc=new ua,bc=new sa,xc=new ua,wc=new ua;function Mc(e){mc.call(this,e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}function Ec(audio,e){this.analyser=audio.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),audio.getOutput().connect(this.analyser)}function Sc(e,t,r){var n,o,l;switch(this.binding=e,this.valueSize=r,t){case"quaternion":n=this._slerp,o=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*r),this._workIndex=5;break;case"string":case"bool":n=this._select,o=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(5*r);break;default:n=this._lerp,o=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*r)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=o,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Mc.prototype=Object.assign(Object.create(mc.prototype),{constructor:Mc,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){return this.panner.refDistance=e,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){return this.panner.rolloffFactor=e,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){return this.panner.distanceModel=e,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){return this.panner.maxDistance=e,this},setDirectionalCone:function(e,t,r){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=r,this},updateMatrixWorld:function(e){if(Da.prototype.updateMatrixWorld.call(this,e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(yc,bc,xc),wc.set(0,0,1).applyQuaternion(bc);var t=this.panner;if(t.positionX){var r=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(yc.x,r),t.positionY.linearRampToValueAtTime(yc.y,r),t.positionZ.linearRampToValueAtTime(yc.z,r),t.orientationX.linearRampToValueAtTime(wc.x,r),t.orientationY.linearRampToValueAtTime(wc.y,r),t.orientationZ.linearRampToValueAtTime(wc.z,r)}else t.setPosition(yc.x,yc.y,yc.z),t.setOrientation(wc.x,wc.y,wc.z)}}}),Object.assign(Ec.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var e=0,data=this.getFrequencyData(),i=0;i<data.length;i++)e+=data[i];return e/data.length}}),Object.assign(Sc.prototype,{accumulate:function(e,t){var r=this.buffer,n=this.valueSize,o=e*n+n,l=this.cumulativeWeight;if(0===l){for(var i=0;i!==n;++i)r[o+i]=r[i];l=t}else{var h=t/(l+=t);this._mixBufferRegion(r,o,0,h,n)}this.cumulativeWeight=l},accumulateAdditive:function(e){var t=this.buffer,r=this.valueSize,n=r*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,r),this.cumulativeWeightAdditive+=e},apply:function(e){var t=this.valueSize,r=this.buffer,n=e*t+t,o=this.cumulativeWeight,l=this.cumulativeWeightAdditive,h=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){var f=t*this._origIndex;this._mixBufferRegion(r,n,f,1-o,t)}l>0&&this._mixBufferRegionAdditive(r,n,this._addIndex*t,1,t);for(var i=t,c=t+t;i!==c;++i)if(r[i]!==r[i+t]){h.setValue(r,n);break}},saveOriginalState:function(){var e=this.binding,t=this.buffer,r=this.valueSize,n=r*this._origIndex;e.getValue(t,n);for(var i=r,o=n;i!==o;++i)t[i]=t[n+i%r];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){for(var e=this._addIndex*this.valueSize,t=e+this.valueSize,i=e;i<t;i++)this.buffer[i]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[4*this._addIndex+3]=1},_setAdditiveIdentityOther:function(){for(var e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize,i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]},_select:function(e,t,r,n,o){if(n>=.5)for(var i=0;i!==o;++i)e[t+i]=e[r+i]},_slerp:function(e,t,r,n){sa.slerpFlat(e,t,e,t,e,r,n)},_slerpAdditive:function(e,t,r,n,o){var l=this._workIndex*o;sa.multiplyQuaternionsFlat(e,l,e,t,e,r),sa.slerpFlat(e,t,e,t,e,l,n)},_lerp:function(e,t,r,n,o){for(var s=1-n,i=0;i!==o;++i){var l=t+i;e[l]=e[l]*s+e[r+i]*n}},_lerpAdditive:function(e,t,r,n,o){for(var i=0;i!==o;++i){var l=t+i;e[l]=e[l]+e[r+i]*n}}});var Tc=new RegExp("[\\[\\]\\.:\\/]","g"),Ac="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Rc=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),Cc=/(WCOD+)?/.source.replace("WCOD",Ac),Lc=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Pc=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Oc=new RegExp("^"+Rc+Cc+Lc+Pc+"$"),kc=["material","materials","bones"];function Ic(e,path,t){var r=t||Nc.parseTrackName(path);this._targetGroup=e,this._bindings=e.subscribe_(path,r)}function Nc(e,path,t){this.path=path,this.parsedPath=t||Nc.parseTrackName(path),this.node=Nc.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}function Dc(){this.uuid=Qr.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var e={};this._indicesByUUID=e;for(var i=0,t=arguments.length;i!==t;++i)e[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var r=this;this.stats={objects:{get total(){return r._objects.length},get inUse(){return this.total-r.nCachedObjects_}},get bindingsPerObject(){return r._bindings.length}}}function Bc(e,t,r,n){this._mixer=e,this._clip=t,this._localRoot=r||null,this.blendMode=n||t.blendMode;for(var o=t.tracks,l=o.length,h=new Array(l),f={endingStart:rr,endingEnd:rr},i=0;i!==l;++i){var c=o[i].createInterpolant(null);h[i]=c,c.settings=f}this._interpolantSettings=f,this._interpolants=h,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Jt,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function Fc(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function Uc(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}function jc(e,t,r){Ks.call(this,e,t),this.meshPerAttribute=r||1}function Vc(e,t,r,n){this.ray=new hi(e,t),this.near=r||0,this.far=n||1/0,this.camera=null,this.layers=new wa,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function zc(a,b){return a.distance-b.distance}function Gc(object,e,t,r){if(object.layers.test(e.layers)&&object.raycast(e,t),!0===r)for(var n=object.children,i=0,o=n.length;i<o;i++)Gc(n[i],e,t,!0)}function Hc(e,t,r){return this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==r?r:0,this}function Wc(e,t,r){return this.radius=void 0!==e?e:1,this.theta=void 0!==t?t:0,this.y=void 0!==r?r:0,this}Object.assign(Ic.prototype,{getValue:function(e,t){this.bind();var r=this._targetGroup.nCachedObjects_,n=this._bindings[r];void 0!==n&&n.getValue(e,t)},setValue:function(e,t){for(var r=this._bindings,i=this._targetGroup.nCachedObjects_,n=r.length;i!==n;++i)r[i].setValue(e,t)},bind:function(){for(var e=this._bindings,i=this._targetGroup.nCachedObjects_,t=e.length;i!==t;++i)e[i].bind()},unbind:function(){for(var e=this._bindings,i=this._targetGroup.nCachedObjects_,t=e.length;i!==t;++i)e[i].unbind()}}),Object.assign(Nc,{Composite:Ic,create:function(e,path,t){return e&&e.isAnimationObjectGroup?new Nc.Composite(e,path,t):new Nc(e,path,t)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(Tc,"")},parseTrackName:function(e){var t=Oc.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var r={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){var o=r.nodeName.substring(n+1);-1!==kc.indexOf(o)&&(r.nodeName=r.nodeName.substring(0,n),r.objectName=o)}if(null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return r},findNode:function(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var r=e.skeleton.getBoneByName(t);if(void 0!==r)return r}if(e.children){var n=function(e){for(var i=0;i<e.length;i++){var r=e[i];if(r.name===t||r.uuid===t)return r;var o=n(r.children);if(o)return o}return null},o=n(e.children);if(o)return o}return null}}),Object.assign(Nc.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){for(var source=this.resolvedProperty,i=0,r=source.length;i!==r;++i)e[t++]=source[i]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){for(var r=this.resolvedProperty,i=0,n=r.length;i!==n;++i)r[i]=e[t++]},function(e,t){for(var r=this.resolvedProperty,i=0,n=r.length;i!==n;++i)r[i]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){for(var r=this.resolvedProperty,i=0,n=r.length;i!==n;++i)r[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){var e=this.node,t=this.parsedPath,r=t.objectName,n=t.propertyName,o=t.propertyIndex;if(e||(e=Nc.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,e){if(r){var l=t.objectIndex;switch(r){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(var i=0;i<e.length;i++)if(e[i].name===l){l=i;break}break;default:if(void 0===e[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[r]}if(void 0!==l){if(void 0===e[l])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[l]}}var h=e[n];if(void 0!==h){var f=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?f=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(f=this.Versioning.MatrixWorldNeedsUpdate);var c=this.BindingType.Direct;if(void 0!==o){if("morphTargetInfluences"===n){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[o]&&(o=e.morphTargetDictionary[o])}c=this.BindingType.ArrayElement,this.resolvedProperty=h,this.propertyIndex=o}else void 0!==h.fromArray&&void 0!==h.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=h):Array.isArray(h)?(c=this.BindingType.EntireArray,this.resolvedProperty=h):this.propertyName=n;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][f]}else{var d=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+d+"."+n+" but it wasn't found.",e)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Nc.prototype,{_getValue_unbound:Nc.prototype.getValue,_setValue_unbound:Nc.prototype.setValue}),Object.assign(Dc.prototype,{isAnimationObjectGroup:!0,add:function(){for(var e=this._objects,t=e.length,r=this.nCachedObjects_,n=this._indicesByUUID,o=this._paths,l=this._parsedPaths,h=this._bindings,f=h.length,c=void 0,i=0,d=arguments.length;i!==d;++i){var object=arguments[i],v=object.uuid,_=n[v];if(void 0===_){_=t++,n[v]=_,e.push(object);for(var m=0,y=f;m!==y;++m)h[m].push(new Nc(object,o[m],l[m]))}else if(_<r){c=e[_];var x=--r,w=e[x];n[w.uuid]=_,e[_]=w,n[v]=x,e[x]=object;for(m=0,y=f;m!==y;++m){var M=h[m],E=M[x],S=M[_];M[_]=E,void 0===S&&(S=new Nc(object,o[m],l[m])),M[x]=S}}else e[_]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=r},remove:function(){for(var e=this._objects,t=this.nCachedObjects_,r=this._indicesByUUID,n=this._bindings,o=n.length,i=0,l=arguments.length;i!==l;++i){var object=arguments[i],h=object.uuid,f=r[h];if(void 0!==f&&f>=t){var c=t++,d=e[c];r[d.uuid]=f,e[f]=d,r[h]=c,e[c]=object;for(var v=0,_=o;v!==_;++v){var m=n[v],y=m[c],x=m[f];m[f]=y,m[c]=x}}}this.nCachedObjects_=t},uncache:function(){for(var e=this._objects,t=e.length,r=this.nCachedObjects_,n=this._indicesByUUID,o=this._bindings,l=o.length,i=0,h=arguments.length;i!==h;++i){var object=arguments[i],f=object.uuid,c=n[f];if(void 0!==c)if(delete n[f],c<r){var d=--r,v=e[d],_=e[M=--t];n[v.uuid]=c,e[c]=v,n[_.uuid]=d,e[d]=_,e.pop();for(var m=0,y=l;m!==y;++m){var x=(E=o[m])[d],w=E[M];E[c]=x,E[d]=w,E.pop()}}else{var M;n[(_=e[M=--t]).uuid]=c,e[c]=_,e.pop();for(m=0,y=l;m!==y;++m){var E;(E=o[m])[c]=E[M],E.pop()}}}this.nCachedObjects_=r},subscribe_:function(path,e){var t=this._bindingsIndicesByPath,r=t[path],n=this._bindings;if(void 0!==r)return n[r];var o=this._paths,l=this._parsedPaths,h=this._objects,f=h.length,c=this.nCachedObjects_,d=new Array(f);r=n.length,t[path]=r,o.push(path),l.push(e),n.push(d);for(var i=c,v=h.length;i!==v;++i){var object=h[i];d[i]=new Nc(object,path,e)}return d},unsubscribe_:function(path){var e=this._bindingsIndicesByPath,t=e[path];if(void 0!==t){var r=this._paths,n=this._parsedPaths,o=this._bindings,l=o.length-1,h=o[l];e[path[l]]=t,o[t]=h,o.pop(),n[t]=n[l],n.pop(),r[t]=r[l],r.pop()}}}),Object.assign(Bc.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(time){return this._startTime=time,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,r){if(e.fadeOut(t),this.fadeIn(t),r){var n=this._clip.duration,o=e._clip.duration,l=o/n,h=n/o;e.warp(1,l,t),this.warp(h,1,t)}return this},crossFadeTo:function(e,t,r){return e.crossFadeFrom(this,t,r)},stopFading:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,r){var n=this._mixer,o=n.time,l=this._timeScaleInterpolant,h=this.timeScale;null===l&&(l=n._lendControlInterpolant(),this._timeScaleInterpolant=l);var f=l.parameterPositions,c=l.sampleValues;return f[0]=o,f[1]=o+r,c[0]=e/h,c[1]=t/h,this},stopWarping:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(time,e,t,r){if(this.enabled){var n=this._startTime;if(null!==n){var o=(time-n)*t;if(o<0||0===t)return;this._startTime=null,e=t*o}e*=this._updateTimeScale(time);var l=this._updateTime(e),h=this._updateWeight(time);if(h>0){var f=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case or:for(var d=0,v=f.length;d!==v;++d)f[d].evaluate(l),c[d].accumulateAdditive(h);break;case nr:default:for(d=0,v=f.length;d!==v;++d)f[d].evaluate(l),c[d].accumulate(r,h)}}}else this._updateWeight(time)},_updateWeight:function(time){var e=0;if(this.enabled){e=this.weight;var t=this._weightInterpolant;if(null!==t){var r=t.evaluate(time)[0];e*=r,time>t.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(time){var e=0;if(!this.paused){e=this.timeScale;var t=this._timeScaleInterpolant;if(null!==t)e*=t.evaluate(time)[0],time>t.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}return this._effectiveTimeScale=e,e},_updateTime:function(e){var time=this.time+e,t=this._clip.duration,r=this.loop,n=this._loopCount,o=r===Kt;if(0===e)return-1===n?time:o&&1==(1&n)?t-time:time;if(r===Zt){-1===n&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(time>=t)time=t;else{if(!(time<0)){this.time=time;break e}time=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=time,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===n&&(e>=0?(n=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),time>=t||time<0){var l=Math.floor(time/t);time-=t*l,n+=Math.abs(l);var h=this.repetitions-n;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,time=e>0?t:0,this.time=time,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===h){var f=e<0;this._setEndings(f,!f,o)}else this._setEndings(!1,!1,o);this._loopCount=n,this.time=time,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:l})}}else this.time=time;if(o&&1==(1&n))return t-time}return time},_setEndings:function(e,t,r){var n=this._interpolantSettings;r?(n.endingStart=ar,n.endingEnd=ar):(n.endingStart=e?this.zeroSlopeAtStart?ar:rr:ir,n.endingEnd=t?this.zeroSlopeAtEnd?ar:rr:ir)},_scheduleFading:function(e,t,r){var n=this._mixer,o=n.time,l=this._weightInterpolant;null===l&&(l=n._lendControlInterpolant(),this._weightInterpolant=l);var h=l.parameterPositions,f=l.sampleValues;return h[0]=o,f[0]=t,h[1]=o+e,f[1]=r,this}}),Fc.prototype=Object.assign(Object.create(Zr.prototype),{constructor:Fc,_bindAction:function(e,t){var r=e._localRoot||this._root,n=e._clip.tracks,o=n.length,l=e._propertyBindings,h=e._interpolants,f=r.uuid,c=this._bindingsByRootAndName,d=c[f];void 0===d&&(d={},c[f]=d);for(var i=0;i!==o;++i){var track=n[i],v=track.name,_=d[v];if(void 0!==_)l[i]=_;else{if(void 0!==(_=l[i])){null===_._cacheIndex&&(++_.referenceCount,this._addInactiveBinding(_,f,v));continue}var path=t&&t._propertyBindings[i].binding.parsedPath;++(_=new Sc(Nc.create(r,v,path),track.ValueTypeName,track.getValueSize())).referenceCount,this._addInactiveBinding(_,f,v),l[i]=_}h[i].resultBuffer=_.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){var t=(e._localRoot||this._root).uuid,r=e._clip.uuid,n=this._actionsByClip[r];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,r,t)}for(var o=e._propertyBindings,i=0,l=o.length;i!==l;++i){var h=o[i];0==h.useCount++&&(this._lendBinding(h),h.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,i=0,r=t.length;i!==r;++i){var n=t[i];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,r){var n=this._actions,o=this._actionsByClip,l=o[t];if(void 0===l)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,o[t]=l;else{var h=l.knownActions;e._byClipCacheIndex=h.length,h.push(e)}e._cacheIndex=n.length,n.push(e),l.actionByRoot[r]=e},_removeInactiveAction:function(e){var t=this._actions,r=t[t.length-1],n=e._cacheIndex;r._cacheIndex=n,t[n]=r,t.pop(),e._cacheIndex=null;var o=e._clip.uuid,l=this._actionsByClip,h=l[o],f=h.knownActions,c=f[f.length-1],d=e._byClipCacheIndex;c._byClipCacheIndex=d,f[d]=c,f.pop(),e._byClipCacheIndex=null,delete h.actionByRoot[(e._localRoot||this._root).uuid],0===f.length&&delete l[o],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){for(var t=e._propertyBindings,i=0,r=t.length;i!==r;++i){var n=t[i];0==--n.referenceCount&&this._removeInactiveBinding(n)}},_lendAction:function(e){var t=this._actions,r=e._cacheIndex,n=this._nActiveActions++,o=t[n];e._cacheIndex=n,t[n]=e,o._cacheIndex=r,t[r]=o},_takeBackAction:function(e){var t=this._actions,r=e._cacheIndex,n=--this._nActiveActions,o=t[n];e._cacheIndex=n,t[n]=e,o._cacheIndex=r,t[r]=o},_addInactiveBinding:function(e,t,r){var n=this._bindingsByRootAndName,o=n[t],l=this._bindings;void 0===o&&(o={},n[t]=o),o[r]=e,e._cacheIndex=l.length,l.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,r=e.binding,n=r.rootNode.uuid,o=r.path,l=this._bindingsByRootAndName,h=l[n],f=t[t.length-1],c=e._cacheIndex;f._cacheIndex=c,t[c]=f,t.pop(),delete h[o],0===Object.keys(h).length&&delete l[n]},_lendBinding:function(e){var t=this._bindings,r=e._cacheIndex,n=this._nActiveBindings++,o=t[n];e._cacheIndex=n,t[n]=e,o._cacheIndex=r,t[r]=o},_takeBackBinding:function(e){var t=this._bindings,r=e._cacheIndex,n=--this._nActiveBindings,o=t[n];e._cacheIndex=n,t[n]=e,o._cacheIndex=r,t[r]=o},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,r=e[t];return void 0===r&&((r=new Nu(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=r),r},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,r=e.__cacheIndex,n=--this._nActiveControlInterpolants,o=t[n];e.__cacheIndex=n,t[n]=e,o.__cacheIndex=r,t[r]=o},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,r){var n=t||this._root,o=n.uuid,l="string"==typeof e?Wu.findByName(n,e):e,h=null!==l?l.uuid:e,f=this._actionsByClip[h],c=null;if(void 0===r&&(r=null!==l?l.blendMode:nr),void 0!==f){var d=f.actionByRoot[o];if(void 0!==d&&d.blendMode===r)return d;c=f.knownActions[0],null===l&&(l=c._clip)}if(null===l)return null;var v=new Bc(this,l,t,r);return this._bindAction(v,c),this._addInactiveAction(v,h,o),v},existingAction:function(e,t){var r=t||this._root,n=r.uuid,o="string"==typeof e?Wu.findByName(r,e):e,l=o?o.uuid:e,h=this._actionsByClip[l];return void 0!==h&&h.actionByRoot[n]||null},stopAllAction:function(){for(var e=this._actions,i=this._nActiveActions-1;i>=0;--i)e[i].stop();return this},update:function(e){e*=this.timeScale;for(var t=this._actions,r=this._nActiveActions,time=this.time+=e,n=Math.sign(e),o=this._accuIndex^=1,i=0;i!==r;++i){t[i]._update(time,e,n,o)}var l=this._bindings,h=this._nActiveBindings;for(i=0;i!==h;++i)l[i].apply(o);return this},setTime:function(e){this.time=0;for(var i=0;i<this._actions.length;i++)this._actions[i].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions,r=e.uuid,n=this._actionsByClip,o=n[r];if(void 0!==o){for(var l=o.knownActions,i=0,h=l.length;i!==h;++i){var f=l[i];this._deactivateAction(f);var c=f._cacheIndex,d=t[t.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,d._cacheIndex=c,t[c]=d,t.pop(),this._removeInactiveBindingsForAction(f)}delete n[r]}},uncacheRoot:function(e){var t=e.uuid,r=this._actionsByClip;for(var n in r){var o=r[n].actionByRoot[t];void 0!==o&&(this._deactivateAction(o),this._removeInactiveAction(o))}var l=this._bindingsByRootAndName[t];if(void 0!==l)for(var h in l){var f=l[h];f.restoreOriginalState(),this._removeInactiveBinding(f)}},uncacheAction:function(e,t){var r=this.existingAction(e,t);null!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}}),Uc.prototype.clone=function(){return new Uc(void 0===this.value.clone?this.value:this.value.clone())},jc.prototype=Object.assign(Object.create(Ks.prototype),{constructor:jc,isInstancedInterleavedBuffer:!0,copy:function(source){return Ks.prototype.copy.call(this,source),this.meshPerAttribute=source.meshPerAttribute,this}}),Object.assign(Vc.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(object,e,t){var r=t||[];return Gc(object,this,r,e),r.sort(zc),r},intersectObjects:function(e,t,r){var n=r||[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(var i=0,o=e.length;i<o;i++)Gc(e[i],this,n,t);return n.sort(zc),n}}),Object.assign(Hc.prototype,{set:function(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,r){return this.radius=Math.sqrt(e*e+t*t+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,r),this.phi=Math.acos(Qr.clamp(t/this.radius,-1,1))),this}}),Object.assign(Wc.prototype,{set:function(e,t,r){return this.radius=e,this.theta=t,this.y=r,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,r){return this.radius=Math.sqrt(e*e+r*r),this.theta=Math.atan2(e,r),this.y=t,this}});var qc=new $r;function Xc(e,t){this.min=void 0!==e?e:new $r(1/0,1/0),this.max=void 0!==t?t:new $r(-1/0,-1/0)}Object.assign(Xc.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var i=0,t=e.length;i<t;i++)this.expandByPoint(e[i]);return this},setFromCenterAndSize:function(e,t){var r=qc.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new $r),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new $r),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new $r),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new $r),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return qc.copy(e).clamp(this.min,this.max).sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});var Yc=new ua,Zc=new ua;function Jc(e,t){this.start=void 0!==e?e:new ua,this.end=void 0!==t?t:new ua}function Kc(e){Da.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Object.assign(Jc.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(line){return this.start.copy(line.start),this.end.copy(line.end),this},getCenter:function(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new ua),e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new ua),e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new ua),this.delta(t).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(e,t){Yc.subVectors(e,this.start),Zc.subVectors(this.end,this.start);var r=Zc.dot(Zc),n=Zc.dot(Yc)/r;return t&&(n=Qr.clamp(n,0,1)),n},closestPointToPoint:function(e,t,r){var n=this.closestPointToPointParameter(e,t);return void 0===r&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),r=new ua),this.delta(r).multiplyScalar(n).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(line){return line.start.equals(this.start)&&line.end.equals(this.end)}}),Kc.prototype=Object.create(Da.prototype),Kc.prototype.constructor=Kc,Kc.prototype.isImmediateRenderObject=!0;var Qc=new ua;function $c(e,t){Da.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;for(var r=new rn,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],i=0,o=1;i<32;i++,o++){var l=i/32*Math.PI*2,h=o/32*Math.PI*2;n.push(Math.cos(l),Math.sin(l),1,Math.cos(h),Math.sin(h),1)}r.setAttribute("position",new Wi(n,3));var f=new Bl({fog:!1,toneMapped:!1});this.cone=new ql(r,f),this.add(this.cone),this.update()}$c.prototype=Object.create(Da.prototype),$c.prototype.constructor=$c,$c.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},$c.prototype.update=function(){this.light.updateMatrixWorld();var e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Qc.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Qc),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};var ed=new ua,rd=new ma,ad=new ma;function id(object){for(var e=function e(object){var t=[];object&&object.isBone&&t.push(object);for(var i=0;i<object.children.length;i++)t.push.apply(t,e(object.children[i]));return t}(object),t=new rn,r=[],n=[],o=new Ri(0,0,1),l=new Ri(0,1,0),i=0;i<e.length;i++){var h=e[i];h.parent&&h.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),n.push(o.r,o.g,o.b),n.push(l.r,l.g,l.b))}t.setAttribute("position",new Wi(r,3)),t.setAttribute("color",new Wi(n,3));var f=new Bl({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});ql.call(this,t,f),this.type="SkeletonHelper",this.root=object,this.bones=e,this.matrix=object.matrixWorld,this.matrixAutoUpdate=!1}function nd(e,t,r){this.light=e,this.light.updateMatrixWorld(),this.color=r;var n=new nu(t,4,2),o=new Ni({wireframe:!0,fog:!1,toneMapped:!1});xn.call(this,n,o),this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}id.prototype=Object.create(ql.prototype),id.prototype.constructor=id,id.prototype.isSkeletonHelper=!0,id.prototype.updateMatrixWorld=function(e){var t=this.bones,r=this.geometry,n=r.getAttribute("position");ad.getInverse(this.root.matrixWorld);for(var i=0,o=0;i<t.length;i++){var l=t[i];l.parent&&l.parent.isBone&&(rd.multiplyMatrices(ad,l.matrixWorld),ed.setFromMatrixPosition(rd),n.setXYZ(o,ed.x,ed.y,ed.z),rd.multiplyMatrices(ad,l.parent.matrixWorld),ed.setFromMatrixPosition(rd),n.setXYZ(o+1,ed.x,ed.y,ed.z),o+=2)}r.getAttribute("position").needsUpdate=!0,Da.prototype.updateMatrixWorld.call(this,e)},nd.prototype=Object.create(xn.prototype),nd.prototype.constructor=nd,nd.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},nd.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)};var od=new ua,sd=new Ri,ld=new Ri;function hd(e,t,r){Da.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r;var n=new vh(t);n.rotateY(.5*Math.PI),this.material=new Ni({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);var o=n.getAttribute("position"),l=new Float32Array(3*o.count);n.setAttribute("color",new Bi(l,3)),this.add(new xn(n,this.material)),this.update()}function ud(e,t,r,n){e=e||10,t=t||10,r=new Ri(void 0!==r?r:4473924),n=new Ri(void 0!==n?n:8947848);for(var o=t/2,l=e/t,h=e/2,f=[],c=[],i=0,d=0,v=-h;i<=t;i++,v+=l){f.push(-h,0,v,h,0,v),f.push(v,0,-h,v,0,h);var _=i===o?r:n;_.toArray(c,d),d+=3,_.toArray(c,d),d+=3,_.toArray(c,d),d+=3,_.toArray(c,d),d+=3}var m=new rn;m.setAttribute("position",new Wi(f,3)),m.setAttribute("color",new Wi(c,3));var y=new Bl({vertexColors:!0,toneMapped:!1});ql.call(this,m,y),this.type="GridHelper"}function fd(e,t,r,n,o,l){e=e||10,t=t||16,r=r||8,n=n||64,o=new Ri(void 0!==o?o:4473924),l=new Ri(void 0!==l?l:8947848);var h,f,c,i,d,v,_,m=[],y=[];for(i=0;i<=t;i++)c=i/t*(2*Math.PI),h=Math.sin(c)*e,f=Math.cos(c)*e,m.push(0,0,0),m.push(h,0,f),_=1&i?o:l,y.push(_.r,_.g,_.b),y.push(_.r,_.g,_.b);for(i=0;i<=r;i++)for(_=1&i?o:l,v=e-e/r*i,d=0;d<n;d++)c=d/n*(2*Math.PI),h=Math.sin(c)*v,f=Math.cos(c)*v,m.push(h,0,f),y.push(_.r,_.g,_.b),c=(d+1)/n*(2*Math.PI),h=Math.sin(c)*v,f=Math.cos(c)*v,m.push(h,0,f),y.push(_.r,_.g,_.b);var x=new rn;x.setAttribute("position",new Wi(m,3)),x.setAttribute("color",new Wi(y,3));var w=new Bl({vertexColors:!0,toneMapped:!1});ql.call(this,x,w),this.type="PolarGridHelper"}hd.prototype=Object.create(Da.prototype),hd.prototype.constructor=hd,hd.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},hd.prototype.update=function(){var e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var t=e.geometry.getAttribute("color");sd.copy(this.light.color),ld.copy(this.light.groundColor);for(var i=0,r=t.count;i<r;i++){var n=i<r/2?sd:ld;t.setXYZ(i,n.r,n.g,n.b)}t.needsUpdate=!0}e.lookAt(od.setFromMatrixPosition(this.light.matrixWorld).negate())},ud.prototype=Object.assign(Object.create(ql.prototype),{constructor:ud,copy:function(source){return ql.prototype.copy.call(this,source),this.geometry.copy(source.geometry),this.material.copy(source.material),this},clone:function(){return(new this.constructor).copy(this)}}),fd.prototype=Object.create(ql.prototype),fd.prototype.constructor=fd;var cd=new ua,vd=new ua,pd=new ua;function _d(e,t,r){Da.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r,void 0===t&&(t=1);var n=new rn;n.setAttribute("position",new Wi([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var o=new Bl({fog:!1,toneMapped:!1});this.lightPlane=new Gl(n,o),this.add(this.lightPlane),(n=new rn).setAttribute("position",new Wi([0,0,0,0,0,1],3)),this.targetLine=new Gl(n,o),this.add(this.targetLine),this.update()}_d.prototype=Object.create(Da.prototype),_d.prototype.constructor=_d,_d.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},_d.prototype.update=function(){cd.setFromMatrixPosition(this.light.matrixWorld),vd.setFromMatrixPosition(this.light.target.matrixWorld),pd.subVectors(vd,cd),this.lightPlane.lookAt(vd),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(vd),this.targetLine.scale.z=pd.length()};var gd=new ua,md=new Nn;function yd(e){var t=new rn,r=new Bl({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],o=[],l={},h=new Ri(16755200),f=new Ri(16711680),c=new Ri(43775),d=new Ri(16777215),v=new Ri(3355443);function _(a,b,e){m(a,e),m(b,e)}function m(e,t){n.push(0,0,0),o.push(t.r,t.g,t.b),void 0===l[e]&&(l[e]=[]),l[e].push(n.length/3-1)}_("n1","n2",h),_("n2","n4",h),_("n4","n3",h),_("n3","n1",h),_("f1","f2",h),_("f2","f4",h),_("f4","f3",h),_("f3","f1",h),_("n1","f1",h),_("n2","f2",h),_("n3","f3",h),_("n4","f4",h),_("p","n1",f),_("p","n2",f),_("p","n3",f),_("p","n4",f),_("u1","u2",c),_("u2","u3",c),_("u3","u1",c),_("c","t",d),_("p","c",v),_("cn1","cn2",v),_("cn3","cn4",v),_("cf1","cf2",v),_("cf3","cf4",v),t.setAttribute("position",new Wi(n,3)),t.setAttribute("color",new Wi(o,3)),ql.call(this,t,r),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update()}function bd(e,t,r,n,o,l,h){gd.set(o,l,h).unproject(n);var f=t[e];if(void 0!==f)for(var c=r.getAttribute("position"),i=0,d=f.length;i<d;i++)c.setXYZ(f[i],gd.x,gd.y,gd.z)}yd.prototype=Object.create(ql.prototype),yd.prototype.constructor=yd,yd.prototype.update=function(){var e=this.geometry,t=this.pointMap;md.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),bd("c",t,e,md,0,0,-1),bd("t",t,e,md,0,0,1),bd("n1",t,e,md,-1,-1,-1),bd("n2",t,e,md,1,-1,-1),bd("n3",t,e,md,-1,1,-1),bd("n4",t,e,md,1,1,-1),bd("f1",t,e,md,-1,-1,1),bd("f2",t,e,md,1,-1,1),bd("f3",t,e,md,-1,1,1),bd("f4",t,e,md,1,1,1),bd("u1",t,e,md,.7,1.1,-1),bd("u2",t,e,md,-.7,1.1,-1),bd("u3",t,e,md,0,2,-1),bd("cf1",t,e,md,-1,0,1),bd("cf2",t,e,md,1,0,1),bd("cf3",t,e,md,0,-1,1),bd("cf4",t,e,md,0,1,1),bd("cn1",t,e,md,-1,0,-1),bd("cn2",t,e,md,1,0,-1),bd("cn3",t,e,md,0,-1,-1),bd("cn4",t,e,md,0,1,-1),e.getAttribute("position").needsUpdate=!0};var xd=new Ka;function wd(object,e){this.object=object,void 0===e&&(e=16776960);var t=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),n=new rn;n.setIndex(new Bi(t,1)),n.setAttribute("position",new Bi(r,3)),ql.call(this,n,new Bl({color:e,toneMapped:!1})),this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}function Md(e,t){this.type="Box3Helper",this.box=e,t=t||16776960;var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new rn;n.setIndex(new Bi(r,1)),n.setAttribute("position",new Wi([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),ql.call(this,n,new Bl({color:t,toneMapped:!1})),this.type="Box3Helper",this.geometry.computeBoundingSphere()}function Ed(e,t,r){this.plane=e,this.size=void 0===t?1:t;var n=void 0!==r?r:16776960,o=new rn;o.setAttribute("position",new Wi([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),o.computeBoundingSphere(),Gl.call(this,o,new Bl({color:n,toneMapped:!1})),this.type="PlaneHelper";var l=new rn;l.setAttribute("position",new Wi([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),l.computeBoundingSphere(),this.add(new xn(l,new Ni({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}wd.prototype=Object.create(ql.prototype),wd.prototype.constructor=wd,wd.prototype.update=function(object){if(void 0!==object&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&xd.setFromObject(this.object),!xd.isEmpty()){var e=xd.min,t=xd.max,r=this.geometry.attributes.position,n=r.array;n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=e.x,n[4]=t.y,n[5]=t.z,n[6]=e.x,n[7]=e.y,n[8]=t.z,n[9]=t.x,n[10]=e.y,n[11]=t.z,n[12]=t.x,n[13]=t.y,n[14]=e.z,n[15]=e.x,n[16]=t.y,n[17]=e.z,n[18]=e.x,n[19]=e.y,n[20]=e.z,n[21]=t.x,n[22]=e.y,n[23]=e.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}},wd.prototype.setFromObject=function(object){return this.object=object,this.update(),this},wd.prototype.copy=function(source){return ql.prototype.copy.call(this,source),this.object=source.object,this},wd.prototype.clone=function(){return(new this.constructor).copy(this)},Md.prototype=Object.create(ql.prototype),Md.prototype.constructor=Md,Md.prototype.updateMatrixWorld=function(e){var t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),Da.prototype.updateMatrixWorld.call(this,e))},Ed.prototype=Object.create(Gl.prototype),Ed.prototype.constructor=Ed,Ed.prototype.updateMatrixWorld=function(e){var t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?E:M,this.lookAt(this.plane.normal),Da.prototype.updateMatrixWorld.call(this,e)};var Sd,Td,Ad=new ua;function Rd(e,t,r,n,o,l){Da.call(this),this.type="ArrowHelper",void 0===e&&(e=new ua(0,0,1)),void 0===t&&(t=new ua(0,0,0)),void 0===r&&(r=1),void 0===n&&(n=16776960),void 0===o&&(o=.2*r),void 0===l&&(l=.2*o),void 0===Sd&&((Sd=new rn).setAttribute("position",new Wi([0,0,0,0,1,0],3)),(Td=new pu(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new Gl(Sd,new Bl({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new xn(Td,new Ni({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,o,l)}function Cd(e){var t=[0,0,0,e=e||1,0,0,0,0,0,0,e,0,0,0,0,0,0,e],r=new rn;r.setAttribute("position",new Wi(t,3)),r.setAttribute("color",new Wi([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var n=new Bl({vertexColors:!0,toneMapped:!1});ql.call(this,r,n),this.type="AxesHelper"}Rd.prototype=Object.create(Da.prototype),Rd.prototype.constructor=Rd,Rd.prototype.setDirection=function(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Ad.set(e.z,0,-e.x).normalize();var t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Ad,t)}},Rd.prototype.setLength=function(e,t,r){void 0===t&&(t=.2*e),void 0===r&&(r=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()},Rd.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},Rd.prototype.copy=function(source){return Da.prototype.copy.call(this,source,!1),this.line.copy(source.line),this.cone.copy(source.cone),this},Rd.prototype.clone=function(){return(new this.constructor).copy(this)},Cd.prototype=Object.create(ql.prototype),Cd.prototype.constructor=Cd;var Ld=Math.pow(2,8),Pd=[.125,.215,.35,.446,.526,.582],Od=5+Pd.length,kd={[fr]:0,[cr]:1,[vr]:2,[_r]:3,[gr]:4,[mr]:5,[dr]:6},Id=new Df,{_lodPlanes:Nd,_sizeLods:Dd,_sigmas:Bd}=function(){for(var e=[],t=[],r=[],n=8,i=0;i<Od;i++){var o=Math.pow(2,n);t.push(o);var l=1/o;i>4?l=Pd[i-8+4-1]:0==i&&(l=0),r.push(l);for(var h=1/(o-1),f=-h/2,c=1+h/2,d=[f,f,c,f,c,c,f,f,c,c,f,c],v=new Float32Array(108),_=new Float32Array(72),m=new Float32Array(36),y=0;y<6;y++){var x=y%3*2/3-1,w=y>2?0:-1,M=[x,w,0,x+2/3,w,0,x+2/3,w+1,0,x,w,0,x+2/3,w+1,0,x,w+1,0];v.set(M,18*y),_.set(d,12*y);var E=[y,y,y,y,y,y];m.set(E,6*y)}var S=new rn;S.setAttribute("position",new Bi(v,3)),S.setAttribute("uv",new Bi(_,2)),S.setAttribute("faceIndex",new Bi(m,1)),e.push(S),n>4&&n--}return{_lodPlanes:e,_sizeLods:t,_sigmas:r}}(),Fd=null,Ud=(1+Math.sqrt(5))/2,jd=1/Ud,Vd=[new ua(1,1,1),new ua(-1,1,1),new ua(1,1,-1),new ua(-1,1,-1),new ua(0,Ud,jd),new ua(0,Ud,-jd),new ua(jd,0,Ud),new ua(-jd,0,Ud),new ua(Ud,jd,0),new ua(-Ud,jd,0)];function zd(e){var t,r,n,o;this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=(t=20,r=new Float32Array(t),n=new ua(0,1,0),(o=new wu({defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:kd[fr]},outputEncoding:{value:kd[fr]}},vertexShader:Yd(),fragmentShader:`\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n${Zd()}\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvec3 getSample(float theta, vec3 axis) {\n\tfloat cosTheta = cos(theta);\n\t// Rodrigues' axis-angle rotation\n\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\n}\n\nvoid main() {\n\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\tif (all(equal(axis, vec3(0.0))))\n\t\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\n\taxis = normalize(axis);\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfloat theta = dTheta * float(i);\n\t\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\n\t\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,blending:R,depthTest:!1,depthWrite:!1})).type="SphericalGaussianBlur",o),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}function Gd(e){return void 0!==e&&e.type===Ne&&(e.encoding===fr||e.encoding===cr||e.encoding===dr)}function Hd(e){var t=new na(3*Ld,3*Ld,e);return t.texture.mapping=be,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function Wd(e,t,r,n,o){e.viewport.set(t,r,n,o),e.scissor.set(t,r,n,o)}function qd(){var e=new wu({uniforms:{envMap:{value:null},texelSize:{value:new $r(1,1)},inputEncoding:{value:kd[fr]},outputEncoding:{value:kd[fr]}},vertexShader:Yd(),fragmentShader:`\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n${Zd()}\n\n#include <common>\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tvec3 outputDirection = normalize(vOutputDirection);\n\tvec2 uv = equirectUv( outputDirection );\n\tvec2 f = fract(uv / texelSize - 0.5);\n\tuv -= f * texelSize;\n\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x += texelSize.x;\n\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y += texelSize.y;\n\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -= texelSize.x;\n\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm = mix(tl, tr, f.x);\n\tvec3 bm = mix(bl, br, f.x);\n\tgl_FragColor.rgb = mix(tm, bm, f.y);\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,blending:R,depthTest:!1,depthWrite:!1});return e.type="EquirectangularToCubeUV",e}function Xd(){var e=new wu({uniforms:{envMap:{value:null},inputEncoding:{value:kd[fr]},outputEncoding:{value:kd[fr]}},vertexShader:Yd(),fragmentShader:`\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n${Zd()}\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,blending:R,depthTest:!1,depthWrite:!1});return e.type="CubemapToCubeUV",e}function Yd(){return"\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\n\n// RH coordinate system; PMREM face-indexing convention\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\t} else if (face == 2.0) {\n\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\t} else if (face == 5.0) {\n\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\t}\n\treturn direction;\n}\n\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t"}function Zd(){return"\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t"}function Jd(a,b,e,t,r,n,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new Oi(a,b,e,r,n,o)}zd.prototype={constructor:zd,fromScene:function(e,t=0,r=.1,n=100){Fd=this._renderer.getRenderTarget();var o=this._allocateTargets();return this._sceneToCubeUV(e,r,n,o),t>0&&this._blur(o,0,0,t),this._applyPMREM(o),this._cleanup(o),o},fromEquirectangular:function(e){return e.magFilter=Se,e.minFilter=Se,e.generateMipmaps=!1,this.fromCubemap(e)},fromCubemap:function(e){Fd=this._renderer.getRenderTarget();var t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t},compileCubemapShader:function(){null===this._cubemapShader&&(this._cubemapShader=Xd(),this._compileMaterial(this._cubemapShader))},compileEquirectangularShader:function(){null===this._equirectShader&&(this._equirectShader=qd(),this._compileMaterial(this._equirectShader))},dispose:function(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(var i=0;i<Nd.length;i++)Nd[i].dispose()},_cleanup:function(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Fd),e.scissorTest=!1,e.setSize(e.width,e.height)},_allocateTargets:function(e){var t={magFilter:Se,minFilter:Se,generateMipmaps:!1,type:Ne,format:Qe,encoding:Gd(e)?e.encoding:vr,depthBuffer:!1,stencilBuffer:!1},r=Hd(t);return r.depthBuffer=!e,this._pingPongRenderTarget=Hd(t),r},_compileMaterial:function(e){var t=new xn(Nd[0],e);this._renderer.compile(t,Id)},_sceneToCubeUV:function(e,t,r,n){var o=new Dn(90,1,t,r),l=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,c=f.outputEncoding,d=f.toneMapping,v=f.toneMappingExposure,_=f.getClearColor(),m=f.getClearAlpha();f.toneMapping=he,f.toneMappingExposure=1,f.outputEncoding=fr;var y=e.background;if(y&&y.isColor){y.convertSRGBToLinear();var x=Math.max(y.r,y.g,y.b),w=Math.min(Math.max(Math.ceil(Math.log2(x)),-128),127);y=y.multiplyScalar(Math.pow(2,-w));var M=(w+128)/255;f.setClearColor(y,M),e.background=null}for(var i=0;i<6;i++){var col=i%3;0==col?(o.up.set(0,l[i],0),o.lookAt(h[i],0,0)):1==col?(o.up.set(0,0,l[i]),o.lookAt(0,h[i],0)):(o.up.set(0,l[i],0),o.lookAt(0,0,h[i])),Wd(n,col*Ld,i>2?Ld:0,Ld,Ld),f.setRenderTarget(n),f.render(e,o)}f.toneMapping=d,f.toneMappingExposure=v,f.outputEncoding=c,f.setClearColor(_,m)},_textureToCubeUV:function(e,t){var r=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=Xd()):null==this._equirectShader&&(this._equirectShader=qd());var n=e.isCubeTexture?this._cubemapShader:this._equirectShader,o=new xn(Nd[0],n),l=n.uniforms;l.envMap.value=e,e.isCubeTexture||l.texelSize.value.set(1/e.image.width,1/e.image.height),l.inputEncoding.value=kd[e.encoding],l.outputEncoding.value=kd[t.texture.encoding],Wd(t,0,0,3*Ld,2*Ld),r.setRenderTarget(t),r.render(o,Id)},_applyPMREM:function(e){var t=this._renderer,r=t.autoClear;t.autoClear=!1;for(var i=1;i<Od;i++){var n=Math.sqrt(Bd[i]*Bd[i]-Bd[i-1]*Bd[i-1]),o=Vd[(i-1)%Vd.length];this._blur(e,i-1,i,n,o)}t.autoClear=r},_blur:function(e,t,r,n,o){var l=this._pingPongRenderTarget;this._halfBlur(e,l,t,r,n,"latitudinal",o),this._halfBlur(l,e,r,r,n,"longitudinal",o)},_halfBlur:function(e,t,r,n,o,l,h){var f=this._renderer,c=this._blurMaterial;"latitudinal"!==l&&"longitudinal"!==l&&console.error("blur direction must be either latitudinal or longitudinal!");var d=new xn(Nd[n],c),v=c.uniforms,_=Dd[r]-1,m=isFinite(o)?Math.PI/(2*_):2*Math.PI/39,y=o/m,x=isFinite(o)?1+Math.floor(3*y):20;x>20&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${x} samples when the maximum is set to 20`);for(var w=[],M=0,i=0;i<20;++i){var E=i/y,S=Math.exp(-E*E/2);w.push(S),0==i?M+=S:i<x&&(M+=2*S)}for(i=0;i<w.length;i++)w[i]=w[i]/M;v.envMap.value=e.texture,v.samples.value=x,v.weights.value=w,v.latitudinal.value="latitudinal"===l,h&&(v.poleAxis.value=h),v.dTheta.value=m,v.mipInt.value=8-r,v.inputEncoding.value=kd[e.texture.encoding],v.outputEncoding.value=kd[e.texture.encoding];var T=Dd[n];Wd(t,E=3*Math.max(0,Ld-2*T),(0===n?0:2*Ld)+2*T*(n>4?n-8+4:0),3*T,2*T),f.setRenderTarget(t),f.render(d,Id)}};var Kd=0,Qd=1,$d=0,ev=1,tv=2;function rv(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function av(e){return void 0===e&&(e=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function iv(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new $l(e,t)}function nv(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new gl(e)}function ov(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new $l(e,t)}function sv(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Yl(e)}function lv(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Yl(e)}function hv(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Yl(e)}function uv(e,t,r){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new ua(e,t,r)}function fv(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Bi(e,t).setUsage(Vr)}function cv(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Fi(e,t)}function dv(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Ui(e,t)}function vv(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new ji(e,t)}function pv(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Vi(e,t)}function _v(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new zi(e,t)}function gv(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Gi(e,t)}function mv(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Hi(e,t)}function yv(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Wi(e,t)}function bv(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new qi(e,t)}function xv(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),vf.call(this,e),this.type="catmullrom",this.closed=!0}function wv(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),vf.call(this,e),this.type="catmullrom"}function Mv(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),vf.call(this,e),this.type="catmullrom"}function Ev(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Cd(e)}function Sv(object,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new wd(object,e)}function Tv(object,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new ql(new du(object.geometry),new Bl({color:void 0!==e?e:16777215}))}function Av(object,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new ql(new oh(object.geometry),new Bl({color:void 0!==e?e:16777215}))}function Rv(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Qu(e)}function Cv(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new tf(e)}function Lv(e,t,r){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Fn(e,r)}of.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(of.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(Tf.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var t=new Rn,i=0,r=e.length;i<r;i++){var n=e[i];t.vertices.push(new ua(n.x,n.y,n.z||0))}return t}}),Object.assign(Af.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}}),xv.prototype=Object.create(vf.prototype),wv.prototype=Object.create(vf.prototype),Mv.prototype=Object.create(vf.prototype),Object.assign(Mv.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),ud.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},id.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(Ju.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Hf.extractUrlBase(e)}}),Ju.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(Zf.prototype,{setTexturePath:function(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}),Object.assign(Xc.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(Ka.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(ei.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),zn.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Jc.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Object.assign(Qr,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Qr.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Qr.ceilPowerOfTwo(e)}}),Object.assign(ea.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(ma.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new ua).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(q){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(q)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,r,n,o,l){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,n,r,o,l)}}),di.prototype.isIntersectionLine=function(line){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(line)},sa.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Object.assign(hi.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(Ei.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(Ei,{barycoordFromPoint:function(e,a,b,t,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Ei.getBarycoord(e,a,b,t,r)},normal:function(a,b,e,t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Ei.getNormal(a,b,e,t)}}),Object.assign(Rf.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Qh(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new uu(this,e)}}),Object.assign($r.prototype,{fromAttribute:function(e,t,r){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(ua.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,r){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(ia.prototype,{fromAttribute:function(e,t,r){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Rn.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.assign(Da.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(Da.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(xn.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(xn.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),sr},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(Tl.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Ll.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),Al.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(of.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),Dn.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Cf.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(Bi.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Vr},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Vr)}}}),Object.assign(Bi.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?Vr:jr),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(rn.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Bi(arguments[1],arguments[2])))},addDrawCall:function(e,t,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(rn.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Wf.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}}),Object.defineProperties(Vc.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(Ks.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Vr},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Object.assign(Ks.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?Vr:jr),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign($h.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(Uc.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Ii.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ri}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===T}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(Su.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(In.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(Ys.prototype,{clearTarget:function(e,t,r,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,r,n)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(Ys.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?cr:fr}}}),Object.defineProperties(Us.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(na.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.defineProperties(mc.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this;return(new oc).load(e,(function(e){t.setBuffer(e)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),Ec.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Bn.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)};var Pv={merge:function(e,t,r){var n;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),n=t.matrix,t=t.geometry),e.merge(t,n,r)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}};function Ov(){console.error("THREE.CanvasRenderer has been removed")}function kv(){console.error("THREE.JSONLoader has been removed.")}ta.crossOrigin=void 0,ta.loadTexture=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var o=new nf;o.setCrossOrigin(this.crossOrigin);var l=o.load(e,r,void 0,n);return t&&(l.mapping=t),l},ta.loadTextureCube=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var o=new af;o.setCrossOrigin(this.crossOrigin);var l=o.load(e,r,void 0,n);return t&&(l.mapping=t),l},ta.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ta.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};var Iv={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function Nv(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:n}}))},181:function(module,__webpack_exports__,__webpack_require__){"use strict";(function(global,process,setImmediate,module){var commonjsGlobal="undefined"!=typeof window?window:void 0!==global?global:"undefined"!=typeof self?self:{};function createCommonjsModule(e,t){return e(t={exports:{}},t.exports),t.exports}for(var numeric1_2_6=createCommonjsModule((function(module,exports){var numeric=exports;void 0!==commonjsGlobal&&(commonjsGlobal.numeric=numeric),numeric.version="1.2.6",numeric.bench=function(e,t){var r,n,i;for(void 0===t&&(t=15),n=.5,r=new Date;;){for(i=n*=2;i>3;i-=4)e(),e(),e(),e();for(;i>0;)e(),i--;if(new Date-r>t)break}for(i=n;i>3;i-=4)e(),e(),e(),e();for(;i>0;)e(),i--;return 1e3*(3*n-1)/(new Date-r)},numeric._myIndexOf=function(e){var t,r=this.length;for(t=0;t<r;++t)if(this[t]===e)return t;return-1},numeric.myIndexOf=Array.prototype.indexOf?Array.prototype.indexOf:numeric._myIndexOf,numeric.Function=Function,numeric.precision=4,numeric.largeArray=50,numeric.prettyPrint=function(e){var t=[];return function e(r){var n;if(void 0===r)return t.push(Array(numeric.precision+8).join(" ")),!1;if("string"==typeof r)return t.push('"'+r+'"'),!1;if("boolean"==typeof r)return t.push(r.toString()),!1;if("number"==typeof r){var a=function e(t){if(0===t)return"0";if(isNaN(t))return"NaN";if(t<0)return"-"+e(-t);if(isFinite(t)){var r=Math.floor(Math.log(t)/Math.log(10)),n=t/Math.pow(10,r),o=n.toPrecision(numeric.precision);return 10===parseFloat(o)&&(r++,o=(n=1).toPrecision(numeric.precision)),parseFloat(o).toString()+"e"+r.toString()}return"Infinity"}(r),b=r.toPrecision(numeric.precision),o=parseFloat(r.toString()).toString(),l=[a,b,o,parseFloat(b).toString(),parseFloat(o).toString()];for(n=1;n<l.length;n++)l[n].length<a.length&&(a=l[n]);return t.push(Array(numeric.precision+8-a.length).join(" ")+a),!1}if(null===r)return t.push("null"),!1;if("function"==typeof r){t.push(r.toString());var h=!1;for(n in r)r.hasOwnProperty(n)&&(h?t.push(",\n"):t.push("\n{"),h=!0,t.push(n),t.push(": \n"),e(r[n]));return h&&t.push("}\n"),!0}if(r instanceof Array){if(r.length>numeric.largeArray)return t.push("...Large Array..."),!0;h=!1;for(t.push("["),n=0;n<r.length;n++)n>0&&(t.push(","),h&&t.push("\n ")),h=e(r[n]);return t.push("]"),!0}for(n in t.push("{"),h=!1,r)r.hasOwnProperty(n)&&(h&&t.push(",\n"),h=!0,t.push(n),t.push(": \n"),e(r[n]));return t.push("}"),!0}(e),t.join("")},numeric.parseDate=function(e){return function e(t){if("string"==typeof t)return Date.parse(t.replace(/-/g,"/"));if(!(t instanceof Array))throw new Error("parseDate: parameter must be arrays of strings");var r,n=[];for(r=0;r<t.length;r++)n[r]=e(t[r]);return n}(e)},numeric.parseFloat=function(e){return function e(t){if("string"==typeof t)return parseFloat(t);if(!(t instanceof Array))throw new Error("parseFloat: parameter must be arrays of strings");var r,n=[];for(r=0;r<t.length;r++)n[r]=e(t[r]);return n}(e)},numeric.parseCSV=function(e){var t,r,n,o=e.split("\n"),l=[],h=/(([^'",]*)|('[^']*')|("[^"]*")),/g,f=/^\s*(([+-]?[0-9]+(\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\.[0-9]+)?(e[+-]?[0-9]+)?))\s*$/,c=0;for(r=0;r<o.length;r++){var d,v=(o[r]+",").match(h);if(v.length>0){for(l[c]=[],t=0;t<v.length;t++)d=(n=v[t]).substr(0,n.length-1),f.test(d)?l[c][t]=parseFloat(d):l[c][t]=d;c++}}return l},numeric.toCSV=function(e){var i,t,r,n,o,s=numeric.dim(e);for(r=s[0],s[1],o=[],i=0;i<r;i++){for(n=[],t=0;t<r;t++)n[t]=e[i][t].toString();o[i]=n.join(", ")}return o.join("\n")+"\n"},numeric.getURL=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(),t},numeric.imageURL=function(img){function e(a,e,t){void 0===e&&(e=0),void 0===t&&(t=a.length);var i,table=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],r=-1;a.length;for(i=e;i<t;i++)r=r>>>8^table[255&(r^a[i])];return-1^r}var t,r,n,o,a,b,i,l,h,f,c=img[0].length,d=img[0][0].length,v=[137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,d>>24&255,d>>16&255,d>>8&255,255&d,c>>24&255,c>>16&255,c>>8&255,255&c,8,2,0,0,0,-1,-2,-3,-4,-5,-6,-7,-8,73,68,65,84,8,29];for(f=e(v,12,29),v[29]=f>>24&255,v[30]=f>>16&255,v[31]=f>>8&255,v[32]=255&f,t=1,r=0,i=0;i<c;i++){for(i<c-1?v.push(0):v.push(1),a=3*d+1+(0===i)&255,b=3*d+1+(0===i)>>8&255,v.push(a),v.push(b),v.push(255&~a),v.push(255&~b),0===i&&v.push(0),l=0;l<d;l++)for(n=0;n<3;n++)r=(r+(t=(t+(a=(a=img[n][i][l])>255?255:a<0?0:Math.round(a)))%65521))%65521,v.push(a);v.push(0)}return h=(r<<16)+t,v.push(h>>24&255),v.push(h>>16&255),v.push(h>>8&255),v.push(255&h),o=v.length-41,v[33]=o>>24&255,v[34]=o>>16&255,v[35]=o>>8&255,v[36]=255&o,f=e(v,37),v.push(f>>24&255),v.push(f>>16&255),v.push(f>>8&255),v.push(255&f),v.push(0),v.push(0),v.push(0),v.push(0),v.push(73),v.push(69),v.push(78),v.push(68),v.push(174),v.push(66),v.push(96),v.push(130),"data:image/png;base64,"+function(e){var i,t,r,n,q,o,s,l=e.length,h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",f="";for(i=0;i<l;i+=3)q=((3&(t=e[i]))<<4)+((r=e[i+1])>>4),o=((15&r)<<2)+((n=e[i+2])>>6),s=63&n,i+1>=l?o=s=64:i+2>=l&&(s=64),f+=h.charAt(t>>2)+h.charAt(q)+h.charAt(o)+h.charAt(s);return f}(v)},numeric._dim=function(e){for(var t=[];"object"==typeof e;)t.push(e.length),e=e[0];return t},numeric.dim=function(e){var t;return"object"==typeof e?"object"==typeof(t=e[0])?"object"==typeof t[0]?numeric._dim(e):[e.length,t.length]:[e.length]:[]},numeric.mapreduce=function(body,e){return Function("x","accum","_s","_k",'if(typeof accum === "undefined") accum = '+e+';\nif(typeof x === "number") { var xi = x; '+body+'; return accum; }\nif(typeof _s === "undefined") _s = numeric.dim(x);\nif(typeof _k === "undefined") _k = 0;\nvar _n = _s[_k];\nvar i,xi;\nif(_k < _s.length-1) {\n    for(i=_n-1;i>=0;i--) {\n        accum = arguments.callee(x[i],accum,_s,_k+1);\n    }    return accum;\n}\nfor(i=_n-1;i>=1;i-=2) { \n    xi = x[i];\n    '+body+";\n    xi = x[i-1];\n    "+body+";\n}\nif(i === 0) {\n    xi = x[i];\n    "+body+"\n}\nreturn accum;")},numeric.mapreduce2=function(body,e){return Function("x","var n = x.length;\nvar i,xi;\n"+e+";\nfor(i=n-1;i!==-1;--i) { \n    xi = x[i];\n    "+body+";\n}\nreturn accum;")},numeric.same=function e(t,r){var i,n;if(!(t instanceof Array&&r instanceof Array))return!1;if((n=t.length)!==r.length)return!1;for(i=0;i<n;i++)if(t[i]!==r[i]){if("object"!=typeof t[i])return!1;if(!e(t[i],r[i]))return!1}return!0},numeric.rep=function(s,e,t){void 0===t&&(t=0);var i,r=s[t],n=Array(r);if(t===s.length-1){for(i=r-2;i>=0;i-=2)n[i+1]=e,n[i]=e;return-1===i&&(n[0]=e),n}for(i=r-1;i>=0;i--)n[i]=numeric.rep(s,e,t+1);return n},numeric.dotMMsmall=function(e,t){var i,r,n,p,q,o,l,h,f,c,d;for(p=e.length,q=t.length,o=t[0].length,l=Array(p),i=p-1;i>=0;i--){for(h=Array(o),f=e[i],n=o-1;n>=0;n--){for(c=f[q-1]*t[q-1][n],r=q-2;r>=1;r-=2)d=r-1,c+=f[r]*t[r][n]+f[d]*t[d][n];0===r&&(c+=f[0]*t[0][n]),h[n]=c}l[i]=h}return l},numeric._getCol=function(e,t,r){var i;for(i=e.length-1;i>0;--i)r[i]=e[i][t],r[--i]=e[i][t];0===i&&(r[0]=e[0][t])},numeric.dotMMbig=function(e,t){var r,i,n,o=numeric._getCol,p=t.length,l=Array(p),h=e.length,f=t[0].length,c=new Array(h),d=numeric.dotVV;for(--p,i=--h;-1!==i;--i)c[i]=Array(f);for(i=--f;-1!==i;--i)for(o(t,i,l),n=h;-1!==n;--n)0,r=e[n],c[n][i]=d(r,l);return c},numeric.dotMV=function(e,t){var i,p=e.length,r=(t.length,Array(p)),n=numeric.dotVV;for(i=p-1;i>=0;i--)r[i]=n(e[i],t);return r},numeric.dotVM=function(e,t){var r,n,p,q,o,l,h;for(p=e.length,q=t[0].length,o=Array(q),n=q-1;n>=0;n--){for(l=e[p-1]*t[p-1][n],r=p-2;r>=1;r-=2)h=r-1,l+=e[r]*t[r][n]+e[h]*t[h][n];0===r&&(l+=e[0]*t[0][n]),o[n]=l}return o},numeric.dotVV=function(e,t){var i,r,n=e.length,o=e[n-1]*t[n-1];for(i=n-2;i>=1;i-=2)r=i-1,o+=e[i]*t[i]+e[r]*t[r];return 0===i&&(o+=e[0]*t[0]),o},numeric.dot=function(e,t){var r=numeric.dim;switch(1e3*r(e).length+r(t).length){case 2002:return t.length<10?numeric.dotMMsmall(e,t):numeric.dotMMbig(e,t);case 2001:return numeric.dotMV(e,t);case 1002:return numeric.dotVM(e,t);case 1001:return numeric.dotVV(e,t);case 1e3:return numeric.mulVS(e,t);case 1:return numeric.mulSV(e,t);case 0:return e*t;default:throw new Error("numeric.dot only works on vectors and matrices")}},numeric.diag=function(e){var i,t,r,n,o=e.length,l=Array(o);for(i=o-1;i>=0;i--){for(n=Array(o),t=i+2,r=o-1;r>=t;r-=2)n[r]=0,n[r-1]=0;for(r>i&&(n[r]=0),n[i]=e[i],r=i-1;r>=1;r-=2)n[r]=0,n[r-1]=0;0===r&&(n[0]=0),l[i]=n}return l},numeric.getDiag=function(e){var i,t=Math.min(e.length,e[0].length),r=Array(t);for(i=t-1;i>=1;--i)r[i]=e[i][i],r[--i]=e[i][i];return 0===i&&(r[0]=e[0][0]),r},numeric.identity=function(e){return numeric.diag(numeric.rep([e],1))},numeric.pointwise=function(e,body,t){void 0===t&&(t="");var r,p,n=[],o=/\[i\]$/,l="",h=!1;for(r=0;r<e.length;r++)o.test(e[r])?l=p=e[r].substring(0,e[r].length-3):p=e[r],"ret"===p&&(h=!0),n.push(p);return n[e.length]="_s",n[e.length+1]="_k",n[e.length+2]='if(typeof _s === "undefined") _s = numeric.dim('+l+');\nif(typeof _k === "undefined") _k = 0;\nvar _n = _s[_k];\nvar i'+(h?"":", ret = Array(_n)")+";\nif(_k < _s.length-1) {\n    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee("+e.join(",")+",_s,_k+1);\n    return ret;\n}\n"+t+"\nfor(i=_n-1;i!==-1;--i) {\n    "+body+"\n}\nreturn ret;",Function.apply(null,n)},numeric.pointwise2=function(e,body,t){void 0===t&&(t="");var r,p,n=[],o=/\[i\]$/,l="",h=!1;for(r=0;r<e.length;r++)o.test(e[r])?l=p=e[r].substring(0,e[r].length-3):p=e[r],"ret"===p&&(h=!0),n.push(p);return n[e.length]="var _n = "+l+".length;\nvar i"+(h?"":", ret = Array(_n)")+";\n"+t+"\nfor(i=_n-1;i!==-1;--i) {\n"+body+"\n}\nreturn ret;",Function.apply(null,n)},numeric._biforeach=function e(t,r,s,n,o){var i;if(n!==s.length-1)for(i=s[n]-1;i>=0;i--)e("object"==typeof t?t[i]:t,"object"==typeof r?r[i]:r,s,n+1,o);else o(t,r)},numeric._biforeach2=function e(t,r,s,n,o){if(n===s.length-1)return o(t,r);var i,l=s[n],h=Array(l);for(i=l-1;i>=0;--i)h[i]=e("object"==typeof t?t[i]:t,"object"==typeof r?r[i]:r,s,n+1,o);return h},numeric._foreach=function e(t,s,r,n){var i;if(r!==s.length-1)for(i=s[r]-1;i>=0;i--)e(t[i],s,r+1,n);else n(t)},numeric._foreach2=function e(t,s,r,n){if(r===s.length-1)return n(t);var i,o=s[r],l=Array(o);for(i=o-1;i>=0;i--)l[i]=e(t[i],s,r+1,n);return l},numeric.ops2={add:"+",sub:"-",mul:"*",div:"/",mod:"%",and:"&&",or:"||",eq:"===",neq:"!==",lt:"<",gt:">",leq:"<=",geq:">=",band:"&",bor:"|",bxor:"^",lshift:"<<",rshift:">>",rrshift:">>>"},numeric.opseq={addeq:"+=",subeq:"-=",muleq:"*=",diveq:"/=",modeq:"%=",lshifteq:"<<=",rshifteq:">>=",rrshifteq:">>>=",bandeq:"&=",boreq:"|=",bxoreq:"^="},numeric.mathfuns=["abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sin","sqrt","tan","isNaN","isFinite"],numeric.mathfuns2=["atan2","pow","max","min"],numeric.ops1={neg:"-",not:"!",bnot:"~",clone:""},numeric.mapreducers={any:["if(xi) return true;","var accum = false;"],all:["if(!xi) return false;","var accum = true;"],sum:["accum += xi;","var accum = 0;"],prod:["accum *= xi;","var accum = 1;"],norm2Squared:["accum += xi*xi;","var accum = 0;"],norminf:["accum = max(accum,abs(xi));","var accum = 0, max = Math.max, abs = Math.abs;"],norm1:["accum += abs(xi)","var accum = 0, abs = Math.abs;"],sup:["accum = max(accum,xi);","var accum = -Infinity, max = Math.max;"],inf:["accum = min(accum,xi);","var accum = Infinity, min = Math.min;"]},function(){var i,e;for(i=0;i<numeric.mathfuns2.length;++i)e=numeric.mathfuns2[i],numeric.ops2[e]=e;for(i in numeric.ops2)if(numeric.ops2.hasOwnProperty(i)){e=numeric.ops2[i];var code,t,r="";-1!==numeric.myIndexOf.call(numeric.mathfuns2,i)?(r="var "+e+" = Math."+e+";\n",code=function(t,r,n){return t+" = "+e+"("+r+","+n+")"},t=function(t,r){return t+" = "+e+"("+t+","+r+")"}):(code=function(t,r,n){return t+" = "+r+" "+e+" "+n},t=numeric.opseq.hasOwnProperty(i+"eq")?function(t,r){return t+" "+e+"= "+r}:function(t,r){return t+" = "+t+" "+e+" "+r}),numeric[i+"VV"]=numeric.pointwise2(["x[i]","y[i]"],code("ret[i]","x[i]","y[i]"),r),numeric[i+"SV"]=numeric.pointwise2(["x","y[i]"],code("ret[i]","x","y[i]"),r),numeric[i+"VS"]=numeric.pointwise2(["x[i]","y"],code("ret[i]","x[i]","y"),r),numeric[i]=Function("var n = arguments.length, i, x = arguments[0], y;\nvar VV = numeric."+i+"VV, VS = numeric."+i+"VS, SV = numeric."+i+'SV;\nvar dim = numeric.dim;\nfor(i=1;i!==n;++i) { \n  y = arguments[i];\n  if(typeof x === "object") {\n      if(typeof y === "object") x = numeric._biforeach2(x,y,dim(x),0,VV);\n      else x = numeric._biforeach2(x,y,dim(x),0,VS);\n  } else if(typeof y === "object") x = numeric._biforeach2(x,y,dim(y),0,SV);\n  else '+t("x","y")+"\n}\nreturn x;\n"),numeric[e]=numeric[i],numeric[i+"eqV"]=numeric.pointwise2(["ret[i]","x[i]"],t("ret[i]","x[i]"),r),numeric[i+"eqS"]=numeric.pointwise2(["ret[i]","x"],t("ret[i]","x"),r),numeric[i+"eq"]=Function("var n = arguments.length, i, x = arguments[0], y;\nvar V = numeric."+i+"eqV, S = numeric."+i+'eqS\nvar s = numeric.dim(x);\nfor(i=1;i!==n;++i) { \n  y = arguments[i];\n  if(typeof y === "object") numeric._biforeach(x,y,s,0,V);\n  else numeric._biforeach(x,y,s,0,S);\n}\nreturn x;\n')}for(i=0;i<numeric.mathfuns2.length;++i)e=numeric.mathfuns2[i],delete numeric.ops2[e];for(i=0;i<numeric.mathfuns.length;++i)e=numeric.mathfuns[i],numeric.ops1[e]=e;for(i in numeric.ops1)numeric.ops1.hasOwnProperty(i)&&(r="",e=numeric.ops1[i],-1!==numeric.myIndexOf.call(numeric.mathfuns,i)&&Math.hasOwnProperty(e)&&(r="var "+e+" = Math."+e+";\n"),numeric[i+"eqV"]=numeric.pointwise2(["ret[i]"],"ret[i] = "+e+"(ret[i]);",r),numeric[i+"eq"]=Function("x",'if(typeof x !== "object") return '+e+"x\nvar i;\nvar V = numeric."+i+"eqV;\nvar s = numeric.dim(x);\nnumeric._foreach(x,s,0,V);\nreturn x;\n"),numeric[i+"V"]=numeric.pointwise2(["x[i]"],"ret[i] = "+e+"(x[i]);",r),numeric[i]=Function("x",'if(typeof x !== "object") return '+e+"(x)\nvar i;\nvar V = numeric."+i+"V;\nvar s = numeric.dim(x);\nreturn numeric._foreach2(x,s,0,V);\n"));for(i=0;i<numeric.mathfuns.length;++i)e=numeric.mathfuns[i],delete numeric.ops1[e];for(i in numeric.mapreducers)numeric.mapreducers.hasOwnProperty(i)&&(e=numeric.mapreducers[i],numeric[i+"V"]=numeric.mapreduce2(e[0],e[1]),numeric[i]=Function("x","s","k",e[1]+'if(typeof x !== "object") {    xi = x;\n'+e[0]+';\n    return accum;\n}if(typeof s === "undefined") s = numeric.dim(x);\nif(typeof k === "undefined") k = 0;\nif(k === s.length-1) return numeric.'+i+"V(x);\nvar xi;\nvar n = x.length, i;\nfor(i=n-1;i!==-1;--i) {\n   xi = arguments.callee(x[i]);\n"+e[0]+";\n}\nreturn accum;\n"))}(),numeric.truncVV=numeric.pointwise(["x[i]","y[i]"],"ret[i] = round(x[i]/y[i])*y[i];","var round = Math.round;"),numeric.truncVS=numeric.pointwise(["x[i]","y"],"ret[i] = round(x[i]/y)*y;","var round = Math.round;"),numeric.truncSV=numeric.pointwise(["x","y[i]"],"ret[i] = round(x/y[i])*y[i];","var round = Math.round;"),numeric.trunc=function(e,t){return"object"==typeof e?"object"==typeof t?numeric.truncVV(e,t):numeric.truncVS(e,t):"object"==typeof t?numeric.truncSV(e,t):Math.round(e/t)*t},numeric.inv=function(e){var t,r,n,o,i,l,h,s=numeric.dim(e),f=Math.abs,c=s[0],d=s[1],v=numeric.clone(e),_=numeric.identity(c);for(l=0;l<d;++l){var m=-1,y=-1;for(i=l;i!==c;++i)(h=f(v[i][l]))>y&&(m=i,y=h);for(r=v[m],v[m]=v[l],v[l]=r,o=_[m],_[m]=_[l],_[l]=o,e=r[l],h=l;h!==d;++h)r[h]/=e;for(h=d-1;-1!==h;--h)o[h]/=e;for(i=c-1;-1!==i;--i)if(i!==l){for(t=v[i],n=_[i],e=t[l],h=l+1;h!==d;++h)t[h]-=r[h]*e;for(h=d-1;h>0;--h)n[h]-=o[h]*e,n[--h]-=o[h]*e;0===h&&(n[0]-=o[0]*e)}}return _},numeric.det=function(e){var s=numeric.dim(e);if(2!==s.length||s[0]!==s[1])throw new Error("numeric: det() only works on square matrices");var i,t,r,n,o,l,h,f,c=s[0],d=1,v=numeric.clone(e);for(t=0;t<c-1;t++){for(r=t,i=t+1;i<c;i++)Math.abs(v[i][t])>Math.abs(v[r][t])&&(r=i);for(r!==t&&(h=v[r],v[r]=v[t],v[t]=h,d*=-1),n=v[t],i=t+1;i<c;i++){for(l=(o=v[i])[t]/n[t],r=t+1;r<c-1;r+=2)f=r+1,o[r]-=n[r]*l,o[f]-=n[f]*l;r!==c&&(o[r]-=n[r]*l)}if(0===n[t])return 0;d*=n[t]}return d*v[t][t]},numeric.transpose=function(e){var i,t,r,n,o,l=e.length,h=e[0].length,f=Array(h);for(t=0;t<h;t++)f[t]=Array(l);for(i=l-1;i>=1;i-=2){for(n=e[i],r=e[i-1],t=h-1;t>=1;--t)(o=f[t])[i]=n[t],o[i-1]=r[t],(o=f[--t])[i]=n[t],o[i-1]=r[t];0===t&&((o=f[0])[i]=n[0],o[i-1]=r[0])}if(0===i){for(r=e[0],t=h-1;t>=1;--t)f[t][0]=r[t],f[--t][0]=r[t];0===t&&(f[0][0]=r[0])}return f},numeric.negtranspose=function(e){var i,t,r,n,o,l=e.length,h=e[0].length,f=Array(h);for(t=0;t<h;t++)f[t]=Array(l);for(i=l-1;i>=1;i-=2){for(n=e[i],r=e[i-1],t=h-1;t>=1;--t)(o=f[t])[i]=-n[t],o[i-1]=-r[t],(o=f[--t])[i]=-n[t],o[i-1]=-r[t];0===t&&((o=f[0])[i]=-n[0],o[i-1]=-r[0])}if(0===i){for(r=e[0],t=h-1;t>=1;--t)f[t][0]=-r[t],f[--t][0]=-r[t];0===t&&(f[0][0]=-r[0])}return f},numeric._random=function e(s,t){var i,r,n=s[t],o=Array(n);if(t===s.length-1){for(r=Math.random,i=n-1;i>=1;i-=2)o[i]=r(),o[i-1]=r();return 0===i&&(o[0]=r()),o}for(i=n-1;i>=0;i--)o[i]=e(s,t+1);return o},numeric.random=function(s){return numeric._random(s,0)},numeric.norm2=function(e){return Math.sqrt(numeric.norm2Squared(e))},numeric.linspace=function(a,b,e){if(void 0===e&&(e=Math.max(Math.round(b-a)+1,1)),e<2)return 1===e?[a]:[];var i,t=Array(e);for(i=--e;i>=0;i--)t[i]=(i*b+(e-i)*a)/e;return t},numeric.getBlock=function(e,t,r){var s=numeric.dim(e);return function e(n,o){var i,a=t[o],l=r[o]-a,h=Array(l);if(o===s.length-1){for(i=l;i>=0;i--)h[i]=n[i+a];return h}for(i=l;i>=0;i--)h[i]=e(n[i+a],o+1);return h}(e,0)},numeric.setBlock=function(e,t,r,n){var s=numeric.dim(e);return function e(n,o,l){var i,a=t[l],h=r[l]-a;if(l===s.length-1)for(i=h;i>=0;i--)n[i+a]=o[i];for(i=h;i>=0;i--)e(n[i+a],o[i],l+1)}(e,n,0),e},numeric.getRange=function(e,t,r){var i,n,o,l,h=t.length,f=r.length,c=Array(h);for(i=h-1;-1!==i;--i)for(c[i]=Array(f),o=c[i],l=e[t[i]],n=f-1;-1!==n;--n)o[n]=l[r[n]];return c},numeric.blockMatrix=function(e){var s=numeric.dim(e);if(s.length<4)return numeric.blockMatrix([e]);var t,r,i,n,o,l=s[0],h=s[1];for(t=0,r=0,i=0;i<l;++i)t+=e[i][0].length;for(n=0;n<h;++n)r+=e[0][n][0].length;var f=Array(t);for(i=0;i<t;++i)f[i]=Array(r);var c,d,v,_,m,y=0;for(i=0;i<l;++i){for(c=r,n=h-1;-1!==n;--n)for(c-=(o=e[i][n])[0].length,v=o.length-1;-1!==v;--v)for(m=o[v],d=f[y+v],_=m.length-1;-1!==_;--_)d[c+_]=m[_];y+=e[i][0].length}return f},numeric.tensor=function(e,t){if("number"==typeof e||"number"==typeof t)return numeric.mul(e,t);var r=numeric.dim(e),n=numeric.dim(t);if(1!==r.length||1!==n.length)throw new Error("numeric: tensor product is only defined for vectors");var o,i,l,h,f=r[0],c=n[0],d=Array(f);for(i=f-1;i>=0;i--){for(o=Array(c),h=e[i],l=c-1;l>=3;--l)o[l]=h*t[l],o[--l]=h*t[l],o[--l]=h*t[l],o[--l]=h*t[l];for(;l>=0;)o[l]=h*t[l],--l;d[i]=o}return d},numeric.T=function(e,t){this.x=e,this.y=t},numeric.t=function(e,t){return new numeric.T(e,t)},numeric.Tbinop=function(e,t,r,n,o){var l;numeric.indexOf;if("string"!=typeof o)for(l in o="",numeric)numeric.hasOwnProperty(l)&&(e.indexOf(l)>=0||t.indexOf(l)>=0||r.indexOf(l)>=0||n.indexOf(l)>=0)&&l.length>1&&(o+="var "+l+" = numeric."+l+";\n");return Function(["y"],"var x = this;\nif(!(y instanceof numeric.T)) { y = new numeric.T(y); }\n"+o+"\nif(x.y) {  if(y.y) {    return new numeric.T("+n+");\n  }\n  return new numeric.T("+r+");\n}\nif(y.y) {\n  return new numeric.T("+t+");\n}\nreturn new numeric.T("+e+");\n")},numeric.T.prototype.add=numeric.Tbinop("add(x.x,y.x)","add(x.x,y.x),y.y","add(x.x,y.x),x.y","add(x.x,y.x),add(x.y,y.y)"),numeric.T.prototype.sub=numeric.Tbinop("sub(x.x,y.x)","sub(x.x,y.x),neg(y.y)","sub(x.x,y.x),x.y","sub(x.x,y.x),sub(x.y,y.y)"),numeric.T.prototype.mul=numeric.Tbinop("mul(x.x,y.x)","mul(x.x,y.x),mul(x.x,y.y)","mul(x.x,y.x),mul(x.y,y.x)","sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))"),numeric.T.prototype.reciprocal=function(){var e=numeric.mul,div=numeric.div;if(this.y){var t=numeric.add(e(this.x,this.x),e(this.y,this.y));return new numeric.T(div(this.x,t),div(numeric.neg(this.y),t))}return new T(div(1,this.x))},numeric.T.prototype.div=function(e){if(e instanceof numeric.T||(e=new numeric.T(e)),e.y)return this.mul(e.reciprocal());var div=numeric.div;return this.y?new numeric.T(div(this.x,e.x),div(this.y,e.x)):new numeric.T(div(this.x,e.x))},numeric.T.prototype.dot=numeric.Tbinop("dot(x.x,y.x)","dot(x.x,y.x),dot(x.x,y.y)","dot(x.x,y.x),dot(x.y,y.x)","sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))"),numeric.T.prototype.transpose=function(){var e=numeric.transpose,t=this.x,r=this.y;return r?new numeric.T(e(t),e(r)):new numeric.T(e(t))},numeric.T.prototype.transjugate=function(){var e=numeric.transpose,t=this.x,r=this.y;return r?new numeric.T(e(t),numeric.negtranspose(r)):new numeric.T(e(t))},numeric.Tunop=function(e,t,s){return"string"!=typeof s&&(s=""),Function("var x = this;\n"+s+"\nif(x.y) {  "+t+";\n}\n"+e+";\n")},numeric.T.prototype.exp=numeric.Tunop("return new numeric.T(ex)","return new numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))","var ex = numeric.exp(x.x), cos = numeric.cos, sin = numeric.sin, mul = numeric.mul;"),numeric.T.prototype.conj=numeric.Tunop("return new numeric.T(x.x);","return new numeric.T(x.x,numeric.neg(x.y));"),numeric.T.prototype.neg=numeric.Tunop("return new numeric.T(neg(x.x));","return new numeric.T(neg(x.x),neg(x.y));","var neg = numeric.neg;"),numeric.T.prototype.sin=numeric.Tunop("return new numeric.T(numeric.sin(x.x))","return x.exp().sub(x.neg().exp()).div(new numeric.T(0,2));"),numeric.T.prototype.cos=numeric.Tunop("return new numeric.T(numeric.cos(x.x))","return x.exp().add(x.neg().exp()).div(2);"),numeric.T.prototype.abs=numeric.Tunop("return new numeric.T(numeric.abs(x.x));","return new numeric.T(numeric.sqrt(numeric.add(mul(x.x,x.x),mul(x.y,x.y))));","var mul = numeric.mul;"),numeric.T.prototype.log=numeric.Tunop("return new numeric.T(numeric.log(x.x));","var theta = new numeric.T(numeric.atan2(x.y,x.x)), r = x.abs();\nreturn new numeric.T(numeric.log(r.x),theta.x);"),numeric.T.prototype.norm2=numeric.Tunop("return numeric.norm2(x.x);","var f = numeric.norm2Squared;\nreturn Math.sqrt(f(x.x)+f(x.y));"),numeric.T.prototype.inv=function(){var e=this;if(void 0===e.y)return new numeric.T(numeric.inv(e.x));var t,r,n,o,l,h,f,c,i,d,v,_,m,y,x,w,M,E,S=e.x.length,T=numeric.identity(S),A=numeric.rep([S,S],0),R=numeric.clone(e.x),C=numeric.clone(e.y);for(i=0;i<S;i++){for(_=(y=R[i][i])*y+(x=C[i][i])*x,v=i,d=i+1;d<S;d++)(m=(y=R[d][i])*y+(x=C[d][i])*x)>_&&(v=d,_=m);for(v!==i&&(E=R[i],R[i]=R[v],R[v]=E,E=C[i],C[i]=C[v],C[v]=E,E=T[i],T[i]=T[v],T[v]=E,E=A[i],A[i]=A[v],A[v]=E),t=R[i],r=C[i],l=T[i],h=A[i],y=t[i],x=r[i],d=i+1;d<S;d++)w=t[d],M=r[d],t[d]=(w*y+M*x)/_,r[d]=(M*y-w*x)/_;for(d=0;d<S;d++)w=l[d],M=h[d],l[d]=(w*y+M*x)/_,h[d]=(M*y-w*x)/_;for(d=i+1;d<S;d++){for(n=R[d],o=C[d],f=T[d],c=A[d],y=n[i],x=o[i],v=i+1;v<S;v++)w=t[v],M=r[v],n[v]-=w*y-M*x,o[v]-=M*y+w*x;for(v=0;v<S;v++)w=l[v],M=h[v],f[v]-=w*y-M*x,c[v]-=M*y+w*x}}for(i=S-1;i>0;i--)for(l=T[i],h=A[i],d=i-1;d>=0;d--)for(f=T[d],c=A[d],y=R[d][i],x=C[d][i],v=S-1;v>=0;v--)w=l[v],M=h[v],f[v]-=y*w-x*M,c[v]-=y*M+x*w;return new numeric.T(T,A)},numeric.T.prototype.get=function(i){var e,t=this.x,r=this.y,n=0,o=i.length;if(r){for(;n<o;)t=t[e=i[n]],r=r[e],n++;return new numeric.T(t,r)}for(;n<o;)t=t[e=i[n]],n++;return new numeric.T(t)},numeric.T.prototype.set=function(i,e){var t,r=this.x,n=this.y,o=0,l=i.length,h=e.x,f=e.y;if(0===l)return f?this.y=f:n&&(this.y=void 0),this.x=r,this;if(f){for(n||(n=numeric.rep(numeric.dim(r),0),this.y=n);o<l-1;)r=r[t=i[o]],n=n[t],o++;return r[t=i[o]]=h,n[t]=f,this}if(n){for(;o<l-1;)r=r[t=i[o]],n=n[t],o++;return r[t=i[o]]=h,n[t]=h instanceof Array?numeric.rep(numeric.dim(h),0):0,this}for(;o<l-1;)r=r[t=i[o]],o++;return r[t=i[o]]=h,this},numeric.T.prototype.getRows=function(e,t){var r,n,o=t-e+1,l=Array(o),h=this.x,f=this.y;for(r=e;r<=t;r++)l[r-e]=h[r];if(f){for(n=Array(o),r=e;r<=t;r++)n[r-e]=f[r];return new numeric.T(l,n)}return new numeric.T(l)},numeric.T.prototype.setRows=function(e,t,r){var n,o=this.x,l=this.y,h=r.x,f=r.y;for(n=e;n<=t;n++)o[n]=h[n-e];if(f)for(l||(l=numeric.rep(numeric.dim(o),0),this.y=l),n=e;n<=t;n++)l[n]=f[n-e];else if(l)for(n=e;n<=t;n++)l[n]=numeric.rep([h[n-e].length],0);return this},numeric.T.prototype.getRow=function(e){var t=this.x,r=this.y;return r?new numeric.T(t[e],r[e]):new numeric.T(t[e])},numeric.T.prototype.setRow=function(i,e){var t=this.x,r=this.y,n=e.x,o=e.y;return t[i]=n,o?(r||(r=numeric.rep(numeric.dim(t),0),this.y=r),r[i]=o):r&&(r=numeric.rep([n.length],0)),this},numeric.T.prototype.getBlock=function(e,t){var r=this.x,n=this.y,b=numeric.getBlock;return n?new numeric.T(b(r,e,t),b(n,e,t)):new numeric.T(b(r,e,t))},numeric.T.prototype.setBlock=function(e,t,r){r instanceof numeric.T||(r=new numeric.T(r));var n=this.x,o=this.y,b=numeric.setBlock,l=r.x,h=r.y;if(h)return o||(this.y=numeric.rep(numeric.dim(this),0),o=this.y),b(n,e,t,l),b(o,e,t,h),this;b(n,e,t,l),o&&b(o,e,t,numeric.rep(numeric.dim(l),0))},numeric.T.rep=function(s,e){var t=numeric.T;e instanceof t||(e=new t(e));var r=e.x,n=e.y,o=numeric.rep;return n?new t(o(s,r),o(s,n)):new t(o(s,r))},numeric.T.diag=function(e){e instanceof numeric.T||(e=new numeric.T(e));var t=e.x,r=e.y,n=numeric.diag;return r?new numeric.T(n(t),n(r)):new numeric.T(n(t))},numeric.T.eig=function(){if(this.y)throw new Error("eig: not implemented for complex matrices.");return numeric.eig(this.x)},numeric.T.identity=function(e){return new numeric.T(numeric.identity(e))},numeric.T.prototype.getDiag=function(){var e=numeric,t=this.x,r=this.y;return r?new e.T(e.getDiag(t),e.getDiag(r)):new e.T(e.getDiag(t))},numeric.house=function(e){var t=numeric.clone(e),r=(e[0]>=0?1:-1)*numeric.norm2(e);t[0]+=r;var n=numeric.norm2(t);if(0===n)throw new Error("eig: internal error");return numeric.div(t,n)},numeric.toUpperHessenberg=function(e){var s=numeric.dim(e);if(2!==s.length||s[0]!==s[1])throw new Error("numeric: toUpperHessenberg() only works on square matrices");var i,t,r,n,o,l,h,f,c,d,v=s[0],_=numeric.clone(e),m=numeric.identity(v);for(t=0;t<v-2;t++){for(n=Array(v-t-1),i=t+1;i<v;i++)n[i-t-1]=_[i][t];if(numeric.norm2(n)>0){for(o=numeric.house(n),l=numeric.getBlock(_,[t+1,t],[v-1,v-1]),h=numeric.tensor(o,numeric.dot(o,l)),i=t+1;i<v;i++)for(f=_[i],c=h[i-t-1],r=t;r<v;r++)f[r]-=2*c[r-t];for(l=numeric.getBlock(_,[0,t+1],[v-1,v-1]),h=numeric.tensor(numeric.dot(l,o),o),i=0;i<v;i++)for(f=_[i],c=h[i],r=t+1;r<v;r++)f[r]-=2*c[r-t-1];for(l=Array(v-t-1),i=t+1;i<v;i++)l[i-t-1]=m[i];for(h=numeric.tensor(o,numeric.dot(o,l)),i=t+1;i<v;i++)for(d=m[i],c=h[i-t-1],r=0;r<v;r++)d[r]-=2*c[r]}}return{H:_,Q:m}},numeric.epsilon=2220446049250313e-31,numeric.QRFrancis=function(e,t){void 0===t&&(t=1e4),e=numeric.clone(e);numeric.clone(e);var r,n,a,b,o,l,h,tr,f,c,d,v,_,m,i,y,x,w,M=numeric.dim(e)[0],E=numeric.identity(M);if(M<3)return{Q:E,B:[[0,M-1]]};var S=numeric.epsilon;for(w=0;w<t;w++){for(y=0;y<M-1;y++)if(Math.abs(e[y+1][y])<S*(Math.abs(e[y][y])+Math.abs(e[y+1][y+1]))){var T=numeric.QRFrancis(numeric.getBlock(e,[0,0],[y,y]),t),A=numeric.QRFrancis(numeric.getBlock(e,[y+1,y+1],[M-1,M-1]),t);for(v=Array(y+1),i=0;i<=y;i++)v[i]=E[i];for(_=numeric.dot(T.Q,v),i=0;i<=y;i++)E[i]=_[i];for(v=Array(M-y-1),i=y+1;i<M;i++)v[i-y-1]=E[i];for(_=numeric.dot(A.Q,v),i=y+1;i<M;i++)E[i]=_[i-y-1];return{Q:E,B:T.B.concat(numeric.add(A.B,y+1))}}var R,C,L;if(a=e[M-2][M-2],b=e[M-2][M-1],o=e[M-1][M-2],tr=a+(l=e[M-1][M-1]),h=a*l-b*o,f=numeric.getBlock(e,[0,0],[2,2]),tr*tr>=4*h)R=.5*(tr+Math.sqrt(tr*tr-4*h)),C=.5*(tr-Math.sqrt(tr*tr-4*h)),f=numeric.add(numeric.sub(numeric.dot(f,f),numeric.mul(f,R+C)),numeric.diag(numeric.rep([3],R*C)));else f=numeric.add(numeric.sub(numeric.dot(f,f),numeric.mul(f,tr)),numeric.diag(numeric.rep([3],h)));for(r=[f[0][0],f[1][0],f[2][0]],n=numeric.house(r),v=[e[0],e[1],e[2]],_=numeric.tensor(n,numeric.dot(n,v)),i=0;i<3;i++)for(d=e[i],m=_[i],x=0;x<M;x++)d[x]-=2*m[x];for(v=numeric.getBlock(e,[0,0],[M-1,2]),_=numeric.tensor(numeric.dot(v,n),n),i=0;i<M;i++)for(d=e[i],m=_[i],x=0;x<3;x++)d[x]-=2*m[x];for(v=[E[0],E[1],E[2]],_=numeric.tensor(n,numeric.dot(n,v)),i=0;i<3;i++)for(c=E[i],m=_[i],x=0;x<M;x++)c[x]-=2*m[x];for(y=0;y<M-2;y++){for(x=y;x<=y+1;x++)if(Math.abs(e[x+1][x])<S*(Math.abs(e[x][x])+Math.abs(e[x+1][x+1]))){T=numeric.QRFrancis(numeric.getBlock(e,[0,0],[x,x]),t),A=numeric.QRFrancis(numeric.getBlock(e,[x+1,x+1],[M-1,M-1]),t);for(v=Array(x+1),i=0;i<=x;i++)v[i]=E[i];for(_=numeric.dot(T.Q,v),i=0;i<=x;i++)E[i]=_[i];for(v=Array(M-x-1),i=x+1;i<M;i++)v[i-x-1]=E[i];for(_=numeric.dot(A.Q,v),i=x+1;i<M;i++)E[i]=_[i-x-1];return{Q:E,B:T.B.concat(numeric.add(A.B,x+1))}}for(L=Math.min(M-1,y+3),r=Array(L-y),i=y+1;i<=L;i++)r[i-y-1]=e[i][y];for(n=numeric.house(r),v=numeric.getBlock(e,[y+1,y],[L,M-1]),_=numeric.tensor(n,numeric.dot(n,v)),i=y+1;i<=L;i++)for(d=e[i],m=_[i-y-1],x=y;x<M;x++)d[x]-=2*m[x-y];for(v=numeric.getBlock(e,[0,y+1],[M-1,L]),_=numeric.tensor(numeric.dot(v,n),n),i=0;i<M;i++)for(d=e[i],m=_[i],x=y+1;x<=L;x++)d[x]-=2*m[x-y-1];for(v=Array(L-y),i=y+1;i<=L;i++)v[i-y-1]=E[i];for(_=numeric.tensor(n,numeric.dot(n,v)),i=y+1;i<=L;i++)for(c=E[i],m=_[i-y-1],x=0;x<M;x++)c[x]-=2*m[x]}}throw new Error("numeric: eigenvalue iteration does not converge -- increase maxiter?")},numeric.eig=function(e,t){var i,r,n,o,a,b,l,h,f,c,d,v,p,q,_,m,y=numeric.toUpperHessenberg(e),x=numeric.QRFrancis(y.H,t),w=numeric.T,M=e.length,E=x.B,S=numeric.dot(x.Q,numeric.dot(y.H,numeric.transpose(x.Q))),T=new w(numeric.dot(x.Q,y.Q)),A=E.length,R=Math.sqrt;for(r=0;r<A;r++)if((i=E[r][0])===E[r][1]);else{if(o=i+1,a=S[i][i],b=S[i][o],l=S[o][i],h=S[o][o],0===b&&0===l)continue;(c=(f=-a-h)*f-4*(a*h-b*l))>=0?((_=(a-(d=f<0?-.5*(f-R(c)):-.5*(f+R(c))))*(a-d)+b*b)>(m=l*l+(h-d)*(h-d))?(p=(a-d)/(_=R(_)),q=b/_):(p=l/(m=R(m)),q=(h-d)/m),n=new w([[q,-p],[p,q]]),T.setRows(i,o,n.dot(T.getRows(i,o)))):(d=-.5*f,v=.5*R(-c),(_=(a-d)*(a-d)+b*b)>(m=l*l+(h-d)*(h-d))?(p=(a-d)/(_=R(_+v*v)),q=b/_,d=0,v/=_):(p=l/(m=R(m+v*v)),q=(h-d)/m,d=v/m,v=0),n=new w([[q,-p],[p,q]],[[d,v],[v,-d]]),T.setRows(i,o,n.dot(T.getRows(i,o))))}var C=T.dot(e).dot(T.transjugate()),L=(M=e.length,numeric.T.identity(M));for(o=0;o<M;o++)if(o>0)for(r=o-1;r>=0;r--){var P=C.get([r,r]),O=C.get([o,o]);numeric.neq(P.x,O.x)||numeric.neq(P.y,O.y)?(d=C.getRow(r).getBlock([r],[o-1]),v=L.getRow(o).getBlock([r],[o-1]),L.set([o,r],C.get([r,o]).neg().sub(d.dot(v)).div(P.sub(O)))):L.setRow(o,L.getRow(r))}for(o=0;o<M;o++)d=L.getRow(o),L.setRow(o,d.div(d.norm2()));return L=L.transpose(),L=T.transjugate().dot(L),{lambda:C.getDiag(),E:L}},numeric.ccsSparse=function(e){var t,i,r,n=e.length,o=[];for(i=n-1;-1!==i;--i)for(r in t=e[i]){for(r=parseInt(r);r>=o.length;)o[o.length]=0;0!==t[r]&&o[r]++}var l=o.length,h=Array(l+1);for(h[0]=0,i=0;i<l;++i)h[i+1]=h[i]+o[i];var f=Array(h[l]),c=Array(h[l]);for(i=n-1;-1!==i;--i)for(r in t=e[i])0!==t[r]&&(o[r]--,f[h[r]+o[r]]=i,c[h[r]+o[r]]=t[r]);return[h,f,c]},numeric.ccsFull=function(e){var i,t,r,n,o=e[0],l=e[1],h=e[2],s=numeric.ccsDim(e),f=s[0],c=s[1],d=numeric.rep([f,c],0);for(i=0;i<c;i++)for(r=o[i],n=o[i+1],t=r;t<n;++t)d[l[t]][i]=h[t];return d},numeric.ccsTSolve=function(e,b,t,r,n){var i,o,l,h,f,c,a,d=e[0],v=e[1],_=e[2],m=d.length-1,y=Math.max,x=0;function w(e){var r;if(0===t[e]){for(t[e]=1,r=d[e];r<d[e+1];++r)w(v[r]);n[x]=e,++x}}for(void 0===r&&(t=numeric.rep([m],0)),void 0===r&&(r=numeric.linspace(0,t.length-1)),void 0===n&&(n=[]),i=r.length-1;-1!==i;--i)w(r[i]);for(n.length=x,i=n.length-1;-1!==i;--i)t[n[i]]=0;for(i=r.length-1;-1!==i;--i)o=r[i],t[o]=b[o];for(i=n.length-1;-1!==i;--i){for(o=n[i],l=d[o],h=y(d[o+1],l),f=l;f!==h;++f)if(v[f]===o){t[o]/=_[f];break}for(a=t[o],f=l;f!==h;++f)(c=v[f])!==o&&(t[c]-=a*_[f])}return t},numeric.ccsDFS=function(e){this.k=Array(e),this.k1=Array(e),this.j=Array(e)},numeric.ccsDFS.prototype.dfs=function(e,t,r,n,o,l){var h,f,c,d=0,v=o.length,_=this.k,m=this.k1,y=this.j;if(0===n[e])for(n[e]=1,y[0]=e,_[0]=f=t[e],m[0]=c=t[e+1];;)if(f>=c){if(o[v]=y[d],0===d)return;++v,f=_[--d],c=m[d]}else 0===n[h=l[r[f]]]?(n[h]=1,_[d]=f,y[++d]=h,f=t[h],m[d]=c=t[h+1]):++f},numeric.ccsLPSolve=function(e,t,r,n,o,l,h){var i,f,c,d,v,_,m,y,a,x=e[0],w=e[1],M=e[2],E=(x.length,t[0]),S=t[1],T=t[2];for(f=E[o],c=E[o+1],n.length=0,i=f;i<c;++i)h.dfs(l[S[i]],x,w,r,n,l);for(i=n.length-1;-1!==i;--i)r[n[i]]=0;for(i=f;i!==c;++i)r[d=l[S[i]]]=T[i];for(i=n.length-1;-1!==i;--i){for(v=x[d=n[i]],_=x[d+1],m=v;m<_;++m)if(l[w[m]]===d){r[d]/=M[m];break}for(a=r[d],m=v;m<_;++m)(y=l[w[m]])!==d&&(r[y]-=a*M[m])}return r},numeric.ccsLUP1=function(e,t){var i,r,n,a,o,l,h,f=e[0].length-1,c=[numeric.rep([f+1],0),[],[]],d=[numeric.rep([f+1],0),[],[]],v=c[0],_=c[1],m=c[2],y=d[0],x=d[1],w=d[2],M=numeric.rep([f],0),E=numeric.rep([f],0),S=numeric.ccsLPSolve,T=(Math.max,Math.abs),A=numeric.linspace(0,f-1),R=numeric.linspace(0,f-1),C=new numeric.ccsDFS(f);for(void 0===t&&(t=1),i=0;i<f;++i){for(S(c,e,M,E,i,R,C),a=-1,o=-1,r=E.length-1;-1!==r;--r)(n=E[r])<=i||(l=T(M[n]))>a&&(o=n,a=l);for(T(M[i])<t*a&&(r=A[i],a=A[o],A[i]=a,R[a]=i,A[o]=r,R[r]=o,a=M[i],M[i]=M[o],M[o]=a),a=v[i],o=y[i],h=M[i],_[a]=A[i],m[a]=1,++a,r=E.length-1;-1!==r;--r)l=M[n=E[r]],E[r]=0,M[n]=0,n<=i?(x[o]=n,w[o]=l,++o):(_[a]=A[n],m[a]=l/h,++a);v[i+1]=a,y[i+1]=o}for(r=_.length-1;-1!==r;--r)_[r]=R[_[r]];return{L:c,U:d,P:A,Pinv:R}},numeric.ccsDFS0=function(e){this.k=Array(e),this.k1=Array(e),this.j=Array(e)},numeric.ccsDFS0.prototype.dfs=function(e,t,r,n,o,l,h){var f,c,d,v=0,_=o.length,m=this.k,y=this.k1,x=this.j;if(0===n[e])for(n[e]=1,x[0]=e,m[0]=c=t[l[e]],y[0]=d=t[l[e]+1];;){if(isNaN(c))throw new Error("Ow!");if(c>=d){if(o[_]=l[x[v]],0===v)return;++_,c=m[--v],d=y[v]}else 0===n[f=r[c]]?(n[f]=1,m[v]=c,x[++v]=f,c=t[f=l[f]],y[v]=d=t[f+1]):++c}},numeric.ccsLPSolve0=function(e,t,r,n,o,l,h,f){var i,c,d,v,_,m,y,x,a,w=e[0],M=e[1],E=e[2],S=(w.length,t[0]),T=t[1],A=t[2];for(c=S[o],d=S[o+1],n.length=0,i=c;i<d;++i)f.dfs(T[i],w,M,r,n,l,h);for(i=n.length-1;-1!==i;--i)r[h[v=n[i]]]=0;for(i=c;i!==d;++i)r[v=T[i]]=A[i];for(i=n.length-1;-1!==i;--i){for(x=h[v=n[i]],_=w[v],m=w[v+1],y=_;y<m;++y)if(M[y]===x){r[x]/=E[y];break}for(a=r[x],y=_;y<m;++y)r[M[y]]-=a*E[y];r[x]=a}},numeric.ccsLUP0=function(e,t){var i,r,n,a,o,l,h,f=e[0].length-1,c=[numeric.rep([f+1],0),[],[]],d=[numeric.rep([f+1],0),[],[]],v=c[0],_=c[1],m=c[2],y=d[0],x=d[1],w=d[2],M=numeric.rep([f],0),E=numeric.rep([f],0),S=numeric.ccsLPSolve0,T=(Math.max,Math.abs),A=numeric.linspace(0,f-1),R=numeric.linspace(0,f-1),C=new numeric.ccsDFS0(f);for(void 0===t&&(t=1),i=0;i<f;++i){for(S(c,e,M,E,i,R,A,C),a=-1,o=-1,r=E.length-1;-1!==r;--r)(n=E[r])<=i||(l=T(M[A[n]]))>a&&(o=n,a=l);for(T(M[A[i]])<t*a&&(r=A[i],a=A[o],A[i]=a,R[a]=i,A[o]=r,R[r]=o),a=v[i],o=y[i],h=M[A[i]],_[a]=A[i],m[a]=1,++a,r=E.length-1;-1!==r;--r)l=M[A[n=E[r]]],E[r]=0,M[A[n]]=0,n<=i?(x[o]=n,w[o]=l,++o):(_[a]=A[n],m[a]=l/h,++a);v[i+1]=a,y[i+1]=o}for(r=_.length-1;-1!==r;--r)_[r]=R[_[r]];return{L:c,U:d,P:A,Pinv:R}},numeric.ccsLUP=numeric.ccsLUP0,numeric.ccsDim=function(e){return[numeric.sup(e[1])+1,e[0].length-1]},numeric.ccsGetBlock=function(e,i,t){var s=numeric.ccsDim(e),r=s[0],n=s[1];void 0===i?i=numeric.linspace(0,r-1):"number"==typeof i&&(i=[i]),void 0===t?t=numeric.linspace(0,n-1):"number"==typeof t&&(t=[t]);var p,q,o,l,h=i.length,f=t.length,c=numeric.rep([n],0),d=[],v=[],_=[c,d,v],m=e[0],y=e[1],x=e[2],w=numeric.rep([r],0),M=0,E=numeric.rep([r],0);for(q=0;q<f;++q){var S=m[l=t[q]],T=m[l+1];for(p=S;p<T;++p)E[o=y[p]]=1,w[o]=x[p];for(p=0;p<h;++p)E[i[p]]&&(d[M]=p,v[M]=w[i[p]],++M);for(p=S;p<T;++p)E[o=y[p]]=0;c[q+1]=M}return _},numeric.ccsDot=function(e,t){var i,r,n,o,l,h,f,c,p,a,b,d=e[0],v=e[1],_=e[2],m=t[0],y=t[1],x=t[2],w=numeric.ccsDim(e),M=numeric.ccsDim(t),E=w[0],S=(w[1],M[1]),T=numeric.rep([E],0),A=numeric.rep([E],0),R=Array(E),C=numeric.rep([S],0),L=[],P=[],O=[C,L,P];for(n=0;n!==S;++n){for(o=m[n],l=m[n+1],p=0,r=o;r<l;++r)for(a=y[r],b=x[r],h=d[a],f=d[a+1],i=h;i<f;++i)0===A[c=v[i]]&&(R[p]=c,A[c]=1,p+=1),T[c]=T[c]+_[i]*b;for(l=(o=C[n])+p,C[n+1]=l,r=p-1;-1!==r;--r)b=o+r,i=R[r],L[b]=i,P[b]=T[i],A[i]=0,T[i]=0;C[n+1]=C[n]+p}return O},numeric.ccsLUPSolve=function(e,t){var r=e.L,n=e.U,o=(e.P,t[0]),l=!1;"object"!=typeof o&&(o=(t=[[0,t.length],numeric.linspace(0,t.length-1),t])[0],l=!0);var i,h,f,c,d,v,_=t[1],m=t[2],y=r[0].length-1,x=o.length-1,w=numeric.rep([y],0),M=Array(y),b=numeric.rep([y],0),E=Array(y),S=numeric.rep([x+1],0),T=[],A=[],R=numeric.ccsTSolve,C=0;for(i=0;i<x;++i){for(d=0,f=o[i],c=o[i+1],h=f;h<c;++h)v=e.Pinv[_[h]],E[d]=v,b[v]=m[h],++d;for(E.length=d,R(r,b,w,E,M),h=E.length-1;-1!==h;--h)b[E[h]]=0;if(R(n,w,b,M,E),l)return b;for(h=M.length-1;-1!==h;--h)w[M[h]]=0;for(h=E.length-1;-1!==h;--h)v=E[h],T[C]=v,A[C]=b[v],b[v]=0,++C;S[i+1]=C}return[S,T,A]},numeric.ccsbinop=function(body,e){return void 0===e&&(e=""),Function("X","Y","var Xi = X[0], Xj = X[1], Xv = X[2];\nvar Yi = Y[0], Yj = Y[1], Yv = Y[2];\nvar n = Xi.length-1,m = Math.max(numeric.sup(Xj),numeric.sup(Yj))+1;\nvar Zi = numeric.rep([n+1],0), Zj = [], Zv = [];\nvar x = numeric.rep([m],0),y = numeric.rep([m],0);\nvar xk,yk,zk;\nvar i,j,j0,j1,k,p=0;\n"+e+"for(i=0;i<n;++i) {\n  j0 = Xi[i]; j1 = Xi[i+1];\n  for(j=j0;j!==j1;++j) {\n    k = Xj[j];\n    x[k] = 1;\n    Zj[p] = k;\n    ++p;\n  }\n  j0 = Yi[i]; j1 = Yi[i+1];\n  for(j=j0;j!==j1;++j) {\n    k = Yj[j];\n    y[k] = Yv[j];\n    if(x[k] === 0) {\n      Zj[p] = k;\n      ++p;\n    }\n  }\n  Zi[i+1] = p;\n  j0 = Xi[i]; j1 = Xi[i+1];\n  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];\n  j0 = Zi[i]; j1 = Zi[i+1];\n  for(j=j0;j!==j1;++j) {\n    k = Zj[j];\n    xk = x[k];\n    yk = y[k];\n"+body+"\n    Zv[j] = zk;\n  }\n  j0 = Xi[i]; j1 = Xi[i+1];\n  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;\n  j0 = Yi[i]; j1 = Yi[i+1];\n  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;\n}\nreturn [Zi,Zj,Zv];")},function(){var k,A,B,C;for(k in numeric.ops2)A=isFinite(eval("1"+numeric.ops2[k]+"0"))?"[Y[0],Y[1],numeric."+k+"(X,Y[2])]":"NaN",B=isFinite(eval("0"+numeric.ops2[k]+"1"))?"[X[0],X[1],numeric."+k+"(X[2],Y)]":"NaN",C=isFinite(eval("1"+numeric.ops2[k]+"0"))&&isFinite(eval("0"+numeric.ops2[k]+"1"))?"numeric.ccs"+k+"MM(X,Y)":"NaN",numeric["ccs"+k+"MM"]=numeric.ccsbinop("zk = xk "+numeric.ops2[k]+"yk;"),numeric["ccs"+k]=Function("X","Y",'if(typeof X === "number") return '+A+';\nif(typeof Y === "number") return '+B+";\nreturn "+C+";\n")}(),numeric.ccsScatter=function(e){var i,t=e[0],r=e[1],n=e[2],o=numeric.sup(r)+1,l=t.length,h=numeric.rep([o],0),f=Array(l),c=Array(l),d=numeric.rep([o],0);for(i=0;i<l;++i)d[r[i]]++;for(i=0;i<o;++i)h[i+1]=h[i]+d[i];var v,_,m=h.slice(0);for(i=0;i<l;++i)f[v=m[_=r[i]]]=t[i],c[v]=n[i],m[_]=m[_]+1;return[h,f,c]},numeric.ccsGather=function(e){var i,t,r,n,p,o=e[0],l=e[1],h=e[2],f=o.length-1,c=l.length,d=Array(c),v=Array(c),_=Array(c);for(p=0,i=0;i<f;++i)for(r=o[i],n=o[i+1],t=r;t!==n;++t)v[p]=i,d[p]=l[t],_[p]=h[t],++p;return[d,v,_]},numeric.sdim=function e(t,r,n){if(void 0===r&&(r=[]),"object"!=typeof t)return r;var i;for(i in void 0===n&&(n=0),n in r||(r[n]=0),t.length>r[n]&&(r[n]=t.length),t)t.hasOwnProperty(i)&&e(t[i],r,n+1);return r},numeric.sclone=function e(t,r,n){void 0===r&&(r=0),void 0===n&&(n=numeric.sdim(t).length);var i,o=Array(t.length);if(r===n-1){for(i in t)t.hasOwnProperty(i)&&(o[i]=t[i]);return o}for(i in t)t.hasOwnProperty(i)&&(o[i]=e(t[i],r+1,n));return o},numeric.sdiag=function(e){var i,t,r=e.length,n=Array(r);for(i=r-1;i>=1;i-=2)t=i-1,n[i]=[],n[i][i]=e[i],n[t]=[],n[t][t]=e[t];return 0===i&&(n[0]=[],n[0][0]=e[i]),n},numeric.sidentity=function(e){return numeric.sdiag(numeric.rep([e],1))},numeric.stranspose=function(e){var i,t,r,n=[];e.length;for(i in e)if(e.hasOwnProperty(i))for(t in r=e[i])r.hasOwnProperty(t)&&("object"!=typeof n[t]&&(n[t]=[]),n[t][i]=r[t]);return n},numeric.sLUP=function(e,t){throw new Error("The function numeric.sLUP had a bug in it and has been removed. Please use the new numeric.ccsLUP function instead.")},numeric.sdotMM=function(e,t){var r,n,i,o,l,h,f,p=e.length,c=(t.length,numeric.stranspose(t)),d=c.length,v=Array(p);for(i=p-1;i>=0;i--){for(f=[],r=e[i],l=d-1;l>=0;l--){for(o in h=0,n=c[l],r)r.hasOwnProperty(o)&&o in n&&(h+=r[o]*n[o]);h&&(f[l]=h)}v[i]=f}return v},numeric.sdotMV=function(e,t){var r,i,n,o,p=e.length,l=Array(p);for(i=p-1;i>=0;i--){for(n in o=0,r=e[i])r.hasOwnProperty(n)&&t[n]&&(o+=r[n]*t[n]);o&&(l[i]=o)}return l},numeric.sdotVM=function(e,t){var i,r,n,o,l=[];for(i in e)if(e.hasOwnProperty(i))for(r in n=t[i],o=e[i],n)n.hasOwnProperty(r)&&(l[r]||(l[r]=0),l[r]+=o*n[r]);return l},numeric.sdotVV=function(e,t){var i,r=0;for(i in e)e[i]&&t[i]&&(r+=e[i]*t[i]);return r},numeric.sdot=function(e,t){var r=numeric.sdim(e).length,n=numeric.sdim(t).length;switch(1e3*r+n){case 0:return e*t;case 1001:return numeric.sdotVV(e,t);case 2001:return numeric.sdotMV(e,t);case 1002:return numeric.sdotVM(e,t);case 2002:return numeric.sdotMM(e,t);default:throw new Error("numeric.sdot not implemented for tensors of order "+r+" and "+n)}},numeric.sscatter=function(e){var t,i,r,n,o=e[0].length,l=e.length,h=[];for(i=o-1;i>=0;--i)if(e[l-1][i]){for(n=h,r=0;r<l-2;r++)n[t=e[r][i]]||(n[t]=[]),n=n[t];n[e[r][i]]=e[r+1][i]}return h},numeric.sgather=function e(t,r,n){var o,i,l;for(i in void 0===r&&(r=[]),void 0===n&&(n=[]),o=n.length,t)if(t.hasOwnProperty(i))if(n[o]=parseInt(i),"number"==typeof(l=t[i])){if(l){if(0===r.length)for(i=o+1;i>=0;--i)r[i]=[];for(i=o;i>=0;--i)r[i].push(n[i]);r[o+1].push(l)}}else e(l,r,n);return n.length>o&&n.pop(),r},numeric.cLU=function(e){var i,t,r,a,b,n,o=e[0],l=e[1],h=e[2],p=o.length,f=0;for(i=0;i<p;i++)o[i]>f&&(f=o[i]);f++;var c,d=Array(f),v=Array(f),_=numeric.rep([f],1/0),m=numeric.rep([f],-1/0);for(r=0;r<p;r++)i=o[r],(t=l[r])<_[i]&&(_[i]=t),t>m[i]&&(m[i]=t);for(i=0;i<f-1;i++)m[i]>m[i+1]&&(m[i+1]=m[i]);for(i=f-1;i>=1;i--)_[i]<_[i-1]&&(_[i-1]=_[i]);for(i=0;i<f;i++)v[i]=numeric.rep([m[i]-_[i]+1],0),d[i]=numeric.rep([i-_[i]],0),i-_[i]+1,m[i]-i+1;for(r=0;r<p;r++)v[i=o[r]][l[r]-_[i]]=h[r];for(i=0;i<f-1;i++)for(a=i-_[i],x=v[i],t=i+1;_[t]<=i&&t<f;t++)if(b=i-_[t],n=m[i]-i,c=(w=v[t])[b]/x[a]){for(r=1;r<=n;r++)w[r+b]-=c*x[r+a];d[t][i-_[t]]=c}var q,y,x=[],w=[],M=[],E=[],S=[],T=[];for(p=0,q=0,i=0;i<f;i++){for(a=_[i],b=m[i],y=v[i],t=i;t<=b;t++)y[t-a]&&(x[p]=i,w[p]=t,M[p]=y[t-a],p++);for(y=d[i],t=a;t<i;t++)y[t-a]&&(E[q]=i,S[q]=t,T[q]=y[t-a],q++);E[q]=i,S[q]=i,T[q]=1,q++}return{U:[x,w,M],L:[E,S,T]}},numeric.cLUsolve=function(e,b){var i,t,r=e.L,n=e.U,o=numeric.clone(b),l=r[0],h=r[1],f=r[2],c=n[0],d=n[1],v=n[2],p=c.length,_=(l.length,o.length);for(t=0,i=0;i<_;i++){for(;h[t]<i;)o[i]-=f[t]*o[h[t]],t++;t++}for(t=p-1,i=_-1;i>=0;i--){for(;d[t]>i;)o[i]-=v[t]*o[d[t]],t--;o[i]/=v[t],t--}return o},numeric.cgrid=function(e,t){"number"==typeof e&&(e=[e,e]);var i,r,n,o=numeric.rep(e,-1);if("function"!=typeof t)switch(t){case"L":t=function(i,t){return i>=e[0]/2||t<e[1]/2};break;default:t=function(i,e){return!0}}for(n=0,i=1;i<e[0]-1;i++)for(r=1;r<e[1]-1;r++)t(i,r)&&(o[i][r]=n,n++);return o},numeric.cdelsq=function(g){var i,e,t,p,q,r=[[-1,0],[0,-1],[0,1],[1,0]],s=numeric.dim(g),n=s[0],o=s[1],l=[],h=[],f=[];for(i=1;i<n-1;i++)for(e=1;e<o-1;e++)if(!(g[i][e]<0)){for(t=0;t<4;t++)p=i+r[t][0],q=e+r[t][1],g[p][q]<0||(l.push(g[i][e]),h.push(g[p][q]),f.push(-1));l.push(g[i][e]),h.push(g[i][e]),f.push(4)}return[l,h,f]},numeric.cdotMV=function(e,t){var r,n,o,l=e[0],h=e[1],f=e[2],p=l.length;for(o=0,n=0;n<p;n++)l[n]>o&&(o=l[n]);for(o++,r=numeric.rep([o],0),n=0;n<p;n++)r[l[n]]+=f[n]*t[h[n]];return r},numeric.Spline=function(e,t,r,n,o){this.x=e,this.yl=t,this.yr=r,this.kl=n,this.kr=o},numeric.Spline.prototype._at=function(e,p){var a,b,t,r=this.x,n=this.yl,o=this.yr,l=this.kl,h=this.kr,f=numeric.add,sub=numeric.sub,c=numeric.mul;a=sub(c(l[p],r[p+1]-r[p]),sub(o[p+1],n[p])),b=f(c(h[p+1],r[p]-r[p+1]),sub(o[p+1],n[p]));var s=(t=(e-r[p])/(r[p+1]-r[p]))*(1-t);return f(f(f(c(1-t,n[p]),c(t,o[p+1])),c(a,s*(1-t))),c(b,s*t))},numeric.Spline.prototype.at=function(e){if("number"==typeof e){var p,q,t,r=this.x,n=r.length,o=Math.floor;for(p=0,q=n-1;q-p>1;)r[t=o((p+q)/2)]<=e?p=t:q=t;return this._at(e,p)}n=e.length;var i,l=Array(n);for(i=n-1;-1!==i;--i)l[i]=this.at(e[i]);return l},numeric.Spline.prototype.diff=function(){var i,e,t,r=this.x,n=this.yl,o=this.yr,l=this.kl,h=this.kr,f=n.length,c=l,d=h,v=Array(f),_=Array(f),m=numeric.add,y=numeric.mul,div=numeric.div,sub=numeric.sub;for(i=f-1;-1!==i;--i)e=r[i+1]-r[i],t=sub(o[i+1],n[i]),v[i]=div(m(y(t,6),y(l[i],-4*e),y(h[i+1],-2*e)),e*e),_[i+1]=div(m(y(t,-6),y(l[i],2*e),y(h[i+1],4*e)),e*e);return new numeric.Spline(r,c,d,v,_)},numeric.Spline.prototype.roots=function(){function e(e){return e*e}var t=[],r=this.x,n=this.yl,o=this.yr,l=this.kl,h=this.kr;"number"==typeof n[0]&&(n=[n],o=[o],l=[l],h=[h]);var i,f,c,d,v,_,m,y,x,w,M,E,S,T,A,R,C,L,P,O,k,I,N,D=n.length,B=r.length-1,F=(t=Array(D),Math.sqrt);for(i=0;i!==D;++i){for(d=n[i],v=o[i],_=l[i],m=h[i],y=[],f=0;f!==B;f++){for(f>0&&v[f]*d[f]<0&&y.push(r[f]),R=r[f+1]-r[f],r[f],M=d[f],E=v[f+1],x=_[f]/R,S=(w=m[f+1]/R)+3*M+2*x-3*E,T=3*(w+x+2*(M-E)),(A=e(x-w+3*(M-E))+12*w*M)<=0?C=(L=S/T)>r[f]&&L<r[f+1]?[r[f],L,r[f+1]]:[r[f],r[f+1]]:(L=(S-F(A))/T,P=(S+F(A))/T,C=[r[f]],L>r[f]&&L<r[f+1]&&C.push(L),P>r[f]&&P<r[f+1]&&C.push(P),C.push(r[f+1])),k=C[0],L=this._at(k,f),c=0;c<C.length-1;c++)if(I=C[c+1],P=this._at(I,f),0!==L)if(0===P||L*P>0)k=I,L=P;else{for(var U=0;!((N=(L*I-P*k)/(L-P))<=k||N>=I);)if((O=this._at(N,f))*P>0)I=N,P=O,-1===U&&(L*=.5),U=-1;else{if(!(O*L>0))break;k=N,L=O,1===U&&(P*=.5),U=1}y.push(N),k=C[c+1],L=this._at(k,f)}else y.push(k),k=I,L=P;0===P&&y.push(I)}t[i]=y}return"number"==typeof this.yl[0]?t[0]:t},numeric.spline=function(e,t,r,n){var i,o=e.length,b=[],l=[],h=[],sub=numeric.sub,f=numeric.mul,c=numeric.add;for(i=o-2;i>=0;i--)l[i]=e[i+1]-e[i],h[i]=sub(t[i+1],t[i]);"string"!=typeof r&&"string"!=typeof n||(r=n="periodic");var d=[[],[],[]];switch(typeof r){case"undefined":b[0]=f(3/(l[0]*l[0]),h[0]),d[0].push(0,0),d[1].push(0,1),d[2].push(2/l[0],1/l[0]);break;case"string":b[0]=c(f(3/(l[o-2]*l[o-2]),h[o-2]),f(3/(l[0]*l[0]),h[0])),d[0].push(0,0,0),d[1].push(o-2,0,1),d[2].push(1/l[o-2],2/l[o-2]+2/l[0],1/l[0]);break;default:b[0]=r,d[0].push(0),d[1].push(0),d[2].push(1)}for(i=1;i<o-1;i++)b[i]=c(f(3/(l[i-1]*l[i-1]),h[i-1]),f(3/(l[i]*l[i]),h[i])),d[0].push(i,i,i),d[1].push(i-1,i,i+1),d[2].push(1/l[i-1],2/l[i-1]+2/l[i],1/l[i]);switch(typeof n){case"undefined":b[o-1]=f(3/(l[o-2]*l[o-2]),h[o-2]),d[0].push(o-1,o-1),d[1].push(o-2,o-1),d[2].push(1/l[o-2],2/l[o-2]);break;case"string":d[1][d[1].length-1]=0;break;default:b[o-1]=n,d[0].push(o-1),d[1].push(o-1),d[2].push(1)}b="number"!=typeof b[0]?numeric.transpose(b):[b];var v=Array(b.length);if("string"==typeof r)for(i=v.length-1;-1!==i;--i)v[i]=numeric.ccsLUPSolve(numeric.ccsLUP(numeric.ccsScatter(d)),b[i]),v[i][o-1]=v[i][0];else for(i=v.length-1;-1!==i;--i)v[i]=numeric.cLUsolve(numeric.cLU(d),b[i]);return v="number"==typeof t[0]?v[0]:numeric.transpose(v),new numeric.Spline(e,t,t,v,v)},numeric.fftpow2=function e(t,r){var n=t.length;if(1!==n){var i,o,l=Math.cos,h=Math.sin,f=Array(n/2),c=Array(n/2),d=Array(n/2),v=Array(n/2);for(o=n/2,i=n-1;-1!==i;--i)d[--o]=t[i],v[o]=r[i],--i,f[o]=t[i],c[o]=r[i];e(f,c),e(d,v),o=n/2;var _,m,y,x=-6.283185307179586/n;for(i=n-1;-1!==i;--i)-1===--o&&(o=n/2-1),m=l(_=x*i),y=h(_),t[i]=f[o]+m*d[o]-y*v[o],r[i]=c[o]+m*v[o]+y*d[o]}},numeric._ifftpow2=function e(t,r){var n=t.length;if(1!==n){var i,o,l=Math.cos,h=Math.sin,f=Array(n/2),c=Array(n/2),d=Array(n/2),v=Array(n/2);for(o=n/2,i=n-1;-1!==i;--i)d[--o]=t[i],v[o]=r[i],--i,f[o]=t[i],c[o]=r[i];e(f,c),e(d,v),o=n/2;var _,m,y,x=6.283185307179586/n;for(i=n-1;-1!==i;--i)-1===--o&&(o=n/2-1),m=l(_=x*i),y=h(_),t[i]=f[o]+m*d[o]-y*v[o],r[i]=c[o]+m*v[o]+y*d[o]}},numeric.ifftpow2=function(e,t){numeric._ifftpow2(e,t),numeric.diveq(e,e.length),numeric.diveq(t,t.length)},numeric.convpow2=function(e,t,r,n){var i,o,l,h,f;for(numeric.fftpow2(e,t),numeric.fftpow2(r,n),i=e.length-1;-1!==i;--i)o=e[i],h=t[i],l=r[i],f=n[i],e[i]=o*l-h*f,t[i]=o*f+h*l;numeric.ifftpow2(e,t)},numeric.T.prototype.fft=function(){var e,t,r=this.x,n=this.y,o=r.length,l=Math.log,h=l(2),p=Math.ceil(l(2*o-1)/h),f=Math.pow(2,p),c=numeric.rep([f],0),d=numeric.rep([f],0),v=Math.cos,_=Math.sin,m=-3.141592653589793/o,a=numeric.rep([f],0),b=numeric.rep([f],0);Math.floor(o/2);for(e=0;e<o;e++)a[e]=r[e];if(void 0!==n)for(e=0;e<o;e++)b[e]=n[e];for(c[0]=1,e=1;e<=f/2;e++)t=m*e*e,c[e]=v(t),d[e]=_(t),c[f-e]=v(t),d[f-e]=_(t);var y=new numeric.T(a,b),x=new numeric.T(c,d);return y=y.mul(x),numeric.convpow2(y.x,y.y,numeric.clone(x.x),numeric.neg(x.y)),(y=y.mul(x)).x.length=o,y.y.length=o,y},numeric.T.prototype.ifft=function(){var e,t,r=this.x,n=this.y,o=r.length,l=Math.log,h=l(2),p=Math.ceil(l(2*o-1)/h),f=Math.pow(2,p),c=numeric.rep([f],0),d=numeric.rep([f],0),v=Math.cos,_=Math.sin,m=3.141592653589793/o,a=numeric.rep([f],0),b=numeric.rep([f],0);Math.floor(o/2);for(e=0;e<o;e++)a[e]=r[e];if(void 0!==n)for(e=0;e<o;e++)b[e]=n[e];for(c[0]=1,e=1;e<=f/2;e++)t=m*e*e,c[e]=v(t),d[e]=_(t),c[f-e]=v(t),d[f-e]=_(t);var y=new numeric.T(a,b),x=new numeric.T(c,d);return y=y.mul(x),numeric.convpow2(y.x,y.y,numeric.clone(x.x),numeric.neg(x.y)),(y=y.mul(x)).x.length=o,y.y.length=o,y.div(o)},numeric.gradient=function(e,t){var r=t.length,n=e(t);if(isNaN(n))throw new Error("gradient: f(x) is a NaN!");var i,o,l,h,f,c,d,v,_,m=Math.max,y=numeric.clone(t),x=Array(r),w=(numeric.div,numeric.sub,m=Math.max,Math.abs),M=Math.min,E=0;for(i=0;i<r;i++)for(var S=m(1e-6*n,1e-8);;){if(++E>20)throw new Error("Numerical gradient fails");if(y[i]=t[i]+S,o=e(y),y[i]=t[i]-S,l=e(y),y[i]=t[i],isNaN(o)||isNaN(l))S/=16;else{if(x[i]=(o-l)/(2*S),h=t[i]-S,f=t[i],c=t[i]+S,d=(o-n)/S,v=(n-l)/S,_=m(w(x[i]),w(n),w(o),w(l),w(h),w(f),w(c),1e-8),!(M(m(w(d-x[i]),w(v-x[i]),w(d-v))/_,S/_)>.001))break;S/=16}}return x},numeric.uncmin=function(e,t,r,n,o,l,h){var f=numeric.gradient;void 0===h&&(h={}),void 0===r&&(r=1e-8),void 0===n&&(n=function(t){return f(e,t)}),void 0===o&&(o=1e3);var c,d,v=(t=numeric.clone(t)).length,_=e(t);if(isNaN(_))throw new Error("uncmin: f(x0) is a NaN!");var m=Math.max,y=numeric.norm2;r=m(r,numeric.epsilon);var x,w,M,s,E,S,T,A,R,C,L=h.Hinv||numeric.identity(v),P=numeric.dot,sub=(numeric.inv,numeric.sub),O=numeric.add,k=numeric.tensor,div=numeric.div,I=numeric.mul,N=numeric.all,D=numeric.isFinite,B=numeric.neg,F=0,U="";for(w=n(t);F<o;){if("function"==typeof l&&l(F,t,_,w,L)){U="Callback returned true";break}if(!N(D(w))){U="Gradient has Infinity or NaN";break}if(!N(D(x=B(P(L,w))))){U="Search direction has Infinity or NaN";break}if((C=y(x))<r){U="Newton step smaller than tol";break}for(R=1,d=P(w,x),E=t;F<o&&!(R*C<r)&&(E=O(t,s=I(x,R)),(c=e(E))-_>=.1*R*d||isNaN(c));)R*=.5,++F;if(R*C<r){U="Line search step size smaller than tol";break}if(F===o){U="maxit reached during line search";break}A=P(S=sub(M=n(E),w),s),T=P(L,S),L=sub(O(L,I((A+P(S,T))/(A*A),k(s,s))),div(O(k(T,s),k(s,T)),A)),t=E,_=c,w=M,++F}return{solution:t,f:_,gradient:w,invHessian:L,iterations:F,message:U}},numeric.Dopri=function(e,t,r,n,o,l,h){this.x=e,this.y=t,this.f=r,this.ymid=n,this.iterations=o,this.events=h,this.message=l},numeric.Dopri.prototype._at=function(e,t){function r(e){return e*e}var n,o,l,h,f,c,p,q,d,v=this.x,_=this.y,m=this.f,y=this.ymid,x=(v.length,Math.floor,numeric.add),w=numeric.mul,sub=numeric.sub;return n=v[t],o=v[t+1],h=_[t],f=_[t+1],l=n+.5*(o-n),c=y[t],p=sub(m[t],w(h,1/(n-l)+2/(n-o))),q=sub(m[t+1],w(f,1/(o-l)+2/(o-n))),x(x(x(x(w(h,(d=[r(e-o)*(e-l)/r(n-o)/(n-l),r(e-n)*r(e-o)/r(n-l)/r(o-l),r(e-n)*(e-l)/r(o-n)/(o-l),(e-n)*r(e-o)*(e-l)/r(n-o)/(n-l),(e-o)*r(e-n)*(e-l)/r(n-o)/(o-l)])[0]),w(c,d[1])),w(f,d[2])),w(p,d[3])),w(q,d[4]))},numeric.Dopri.prototype.at=function(e){var i,t,r,n=Math.floor;if("number"!=typeof e){var o=e.length,l=Array(o);for(i=o-1;-1!==i;--i)l[i]=this.at(e[i]);return l}var h=this.x;for(i=0,t=h.length-1;t-i>1;)h[r=n(.5*(i+t))]<=e?i=r:t=r;return this._at(e,i)},numeric.dopri=function(e,t,r,n,o,l,h){void 0===o&&(o=1e-6),void 0===l&&(l=1e3);var f,c,d,v,_,m,y,x,w,M,E,S,T,A=[e],R=[r],C=[n(e,r)],L=[],P=[3/40,9/40],O=[44/45,-56/15,32/9],k=[19372/6561,-25360/2187,64448/6561,-212/729],I=[9017/3168,-355/33,46732/5247,49/176,-5103/18656],b=[35/384,0,500/1113,125/192,-2187/6784,11/84],N=[.10013431883002395,0,.3918321794184259,-.02982460176594817,.05893268337240795,-.04497888809104361,5618549.5/235043384],D=[.2,.3,.8,8/9,1,1],B=[-71/57600,0,71/16695,-71/1920,17253/339200,-22/525,1/40],i=0,F=(t-e)/10,U=0,j=numeric.add,V=numeric.mul,z=(Math.max,Math.min),G=Math.abs,H=numeric.norminf,W=Math.pow,X=numeric.any,Y=numeric.lt,Z=numeric.and,J=(numeric.sub,new numeric.Dopri(A,R,C,L,-1,""));for("function"==typeof h&&(E=h(e,r));e<t&&U<l;)if(++U,e+F>t&&(F=t-e),f=n(e+D[0]*F,j(r,V(.2*F,C[i]))),c=n(e+D[1]*F,j(j(r,V(P[0]*F,C[i])),V(P[1]*F,f))),d=n(e+D[2]*F,j(j(j(r,V(O[0]*F,C[i])),V(O[1]*F,f)),V(O[2]*F,c))),v=n(e+D[3]*F,j(j(j(j(r,V(k[0]*F,C[i])),V(k[1]*F,f)),V(k[2]*F,c)),V(k[3]*F,d))),_=n(e+D[4]*F,j(j(j(j(j(r,V(I[0]*F,C[i])),V(I[1]*F,f)),V(I[2]*F,c)),V(I[3]*F,d)),V(I[4]*F,v))),m=n(e+F,w=j(j(j(j(j(r,V(C[i],F*b[0])),V(c,F*b[2])),V(d,F*b[3])),V(v,F*b[4])),V(_,F*b[5]))),(M="number"==typeof(y=j(j(j(j(j(V(C[i],F*B[0]),V(c,F*B[2])),V(d,F*B[3])),V(v,F*B[4])),V(_,F*B[5])),V(m,F*B[6])))?G(y):H(y))>o){if(e+(F=.2*F*W(o/M,.25))===e){J.msg="Step size became too small";break}}else{if(L[i]=j(j(j(j(j(j(r,V(C[i],F*N[0])),V(c,F*N[2])),V(d,F*N[3])),V(v,F*N[4])),V(_,F*N[5])),V(m,F*N[6])),A[++i]=e+F,R[i]=w,C[i]=m,"function"==typeof h){var K,Q,$=e,ee=e+.5*F;if(S=h(ee,L[i-1]),X(T=Z(Y(E,0),Y(0,S)))||($=ee,E=S,S=h(ee=e+F,w),T=Z(Y(E,0),Y(0,S))),X(T)){for(var te,re,ae=0,ie=1,ne=1;;){if("number"==typeof E)Q=(ne*S*$-ie*E*ee)/(ne*S-ie*E);else for(Q=ee,x=E.length-1;-1!==x;--x)E[x]<0&&S[x]>0&&(Q=z(Q,(ne*S[x]*$-ie*E[x]*ee)/(ne*S[x]-ie*E[x])));if(Q<=$||Q>=ee)break;re=h(Q,K=J._at(Q,i-1)),X(te=Z(Y(E,0),Y(0,re)))?(ee=Q,S=re,T=te,ne=1,-1===ae?ie*=.5:ie=1,ae=-1):($=Q,E=re,ie=1,1===ae?ne*=.5:ne=1,ae=1)}return w=J._at(.5*(e+Q),i-1),J.f[i]=n(Q,K),J.x[i]=Q,J.y[i]=K,J.ymid[i-1]=w,J.events=T,J.iterations=U,J}}e+=F,r=w,E=S,F=z(.8*F*W(o/M,.25),4*F)}return J.iterations=U,J},numeric.LU=function(e,t){t=t||!1;var i,r,n,o,l,h,f,c,d,v=Math.abs,_=e.length,m=_-1,y=new Array(_);for(t||(e=numeric.clone(e)),n=0;n<_;++n){for(f=n,d=v((h=e[n])[n]),r=n+1;r<_;++r)d<(o=v(e[r][n]))&&(d=o,f=r);for(y[n]=f,f!=n&&(e[n]=e[f],e[f]=h,h=e[n]),l=h[n],i=n+1;i<_;++i)e[i][n]/=l;for(i=n+1;i<_;++i){for(c=e[i],r=n+1;r<m;++r)c[r]-=c[n]*h[r],c[++r]-=c[n]*h[r];r===m&&(c[r]-=c[n]*h[r])}}return{LU:e,P:y}},numeric.LUsolve=function(e,b){var i,t,r,n,o,l=e.LU,h=l.length,f=numeric.clone(b),c=e.P;for(i=h-1;-1!==i;--i)f[i]=b[i];for(i=0;i<h;++i)for(r=c[i],c[i]!==i&&(o=f[i],f[i]=f[r],f[r]=o),n=l[i],t=0;t<i;++t)f[i]-=f[t]*n[t];for(i=h-1;i>=0;--i){for(n=l[i],t=i+1;t<h;++t)f[i]-=f[t]*n[t];f[i]/=n[i]}return f},numeric.solve=function(e,b,t){return numeric.LUsolve(numeric.LU(e,t),b)},numeric.echelonize=function(e){var i,t,r,n,o,l,h,a,s=numeric.dim(e),f=s[0],c=s[1],d=numeric.identity(f),v=Array(f),_=Math.abs,m=numeric.diveq;for(e=numeric.clone(e),i=0;i<f;++i){for(r=0,o=e[i],l=d[i],t=1;t<c;++t)_(o[r])<_(o[t])&&(r=t);for(v[i]=r,m(l,o[r]),m(o,o[r]),t=0;t<f;++t)if(t!==i){for(a=(h=e[t])[r],n=c-1;-1!==n;--n)h[n]-=o[n]*a;for(h=d[t],n=f-1;-1!==n;--n)h[n]-=l[n]*a}}return{I:d,A:e,P:v}},numeric.__solveLP=function(e,t,b,r,n,o,l){var h,f,c,g,d=numeric.sum,v=(numeric.log,numeric.mul),sub=numeric.sub,_=numeric.dot,div=numeric.div,m=numeric.add,y=e.length,x=b.length,w=!1,M=1,E=(numeric.transpose(t),numeric.svd,numeric.transpose),S=(numeric.leq,Math.sqrt),T=Math.abs,A=(numeric.muleq,numeric.norminf,numeric.any,Math.min),R=numeric.all,C=numeric.gt,p=Array(y),L=Array(x),P=(numeric.rep([x],1),numeric.solve),O=sub(b,_(t,o)),k=_(e,e);for(c=0;c<n;++c){var i,I;for(i=x-1;-1!==i;--i)L[i]=div(t[i],O[i]);var N=E(L);for(i=y-1;-1!==i;--i)p[i]=d(N[i]);M=.25*T(k/_(e,p));var D=100*S(k/_(p,p));for((!isFinite(M)||M>D)&&(M=D),g=m(e,v(M,p)),f=_(N,L),i=y-1;-1!==i;--i)f[i][i]+=1;I=P(f,div(g,M),!0);var B=div(O,_(t,I)),F=1;for(i=x-1;-1!==i;--i)B[i]<0&&(F=A(F,-.999*B[i]));if(h=sub(o,v(I,F)),!R(C(O=sub(b,_(t,h)),0)))return{solution:o,message:"",iterations:c};if(o=h,M<r)return{solution:h,message:"",iterations:c};if(l){var s=_(e,g),U=_(t,g);for(w=!0,i=x-1;-1!==i;--i)if(s*U[i]<0){w=!1;break}}else w=!(o[y-1]>=0);if(w)return{solution:h,message:"Unbounded",iterations:c}}return{solution:o,message:"maximum iteration count exceeded",iterations:c}},numeric._solveLP=function(e,t,b,r,n){var o=e.length,l=b.length,sub=(numeric.sum,numeric.log,numeric.mul,numeric.sub),h=numeric.dot,f=(numeric.div,numeric.add,numeric.rep([o],0).concat([1])),c=numeric.rep([l,1],-1),d=numeric.blockMatrix([[t,c]]),v=b,_=numeric.rep([o],0).concat(Math.max(0,numeric.sup(numeric.neg(b)))+1),m=numeric.__solveLP(f,d,v,r,n,_,!1),y=numeric.clone(m.solution);if(y.length=o,numeric.inf(sub(b,h(t,y)))<0)return{solution:NaN,message:"Infeasible",iterations:m.iterations};var x=numeric.__solveLP(e,t,b,r,n-m.iterations,y,!0);return x.iterations+=m.iterations,x},numeric.solveLP=function(e,t,b,r,n,o,l){if(void 0===l&&(l=1e3),void 0===o&&(o=numeric.epsilon),void 0===r)return numeric._solveLP(e,t,b,o,l);var i,h=r.length,f=r[0].length,c=t.length,d=numeric.echelonize(r),v=numeric.rep([f],0),_=d.P,m=[];for(i=_.length-1;-1!==i;--i)v[_[i]]=1;for(i=f-1;-1!==i;--i)0===v[i]&&m.push(i);var g=numeric.getRange,y=numeric.linspace(0,h-1),x=numeric.linspace(0,c-1),w=g(r,y,m),M=g(t,x,_),E=g(t,x,m),S=numeric.dot,sub=numeric.sub,T=S(M,d.I),A=sub(E,S(T,w)),R=sub(b,S(T,n)),C=Array(_.length),L=Array(m.length);for(i=_.length-1;-1!==i;--i)C[i]=e[_[i]];for(i=m.length-1;-1!==i;--i)L[i]=e[m[i]];var P=sub(L,S(C,S(d.I,w))),O=numeric._solveLP(P,A,R,o,l),k=O.solution;if(k!=k)return O;var I=S(d.I,sub(n,S(w,k))),N=Array(e.length);for(i=_.length-1;-1!==i;--i)N[_[i]]=I[i];for(i=m.length-1;-1!==i;--i)N[m[i]]=k[i];return{solution:N,message:O.message,iterations:O.iterations}},numeric.MPStoLP=function(e){e instanceof String&&e.split("\n");var i,t,r,n,o=0,l=["Initial state","NAME","ROWS","COLUMNS","RHS","BOUNDS","ENDATA"],h=e.length,f=0,c={},d=[],v=0,_={},m=0,y=[],x=[],b=[];function w(t){throw new Error("MPStoLP: "+t+"\nLine "+i+": "+e[i]+"\nCurrent state: "+l[o]+"\n")}for(i=0;i<h;++i){var M=(r=e[i]).match(/\S*/g),E=[];for(t=0;t<M.length;++t)""!==M[t]&&E.push(M[t]);if(0!==E.length){for(t=0;t<l.length&&r.substr(0,l[t].length)!==l[t];++t);if(t<l.length){if(o=t,1===t&&(n=E[1]),6===t)return{name:n,c:y,A:numeric.transpose(x),b:b,rows:c,vars:_}}else switch(o){case 0:case 1:w("Unexpected line");case 2:switch(E[0]){case"N":0===f?f=E[1]:w("Two or more N rows");break;case"L":c[E[1]]=v,d[v]=1,b[v]=0,++v;break;case"G":c[E[1]]=v,d[v]=-1,b[v]=0,++v;break;case"E":c[E[1]]=v,d[v]=0,b[v]=0,++v;break;default:w("Parse error "+numeric.prettyPrint(E))}break;case 3:_.hasOwnProperty(E[0])||(_[E[0]]=m,y[m]=0,x[m]=numeric.rep([v],0),++m);var p=_[E[0]];for(t=1;t<E.length;t+=2)if(E[t]!==f){var q=c[E[t]];x[p][q]=(d[q]<0?-1:1)*parseFloat(E[t+1])}else y[p]=parseFloat(E[t+1]);break;case 4:for(t=1;t<E.length;t+=2)b[c[E[t]]]=(d[c[E[t]]]<0?-1:1)*parseFloat(E[t+1]);break;case 5:break;case 6:w("Internal error")}}}w("Reached end of file without ENDATA")},numeric.seedrandom={pow:Math.pow,random:Math.random},function(e,t,r,n,o,l,h){function f(e){var t,u,r=this,n=e.length,i=0,o=r.i=r.j=r.m=0;for(r.S=[],r.c=[],n||(e=[n++]);i<256;)r.S[i]=i++;for(i=0;i<256;i++)o=v(o+(t=r.S[i])+e[i%n]),u=r.S[o],r.S[i]=u,r.S[o]=t;r.g=function(e){var s=r.S,i=v(r.i+1),t=s[i],n=v(r.j+t),u=s[n];s[i]=u,s[n]=t;for(var o=s[v(t+u)];--e;)i=v(i+1),u=s[n=v(n+(t=s[i]))],s[i]=u,s[n]=t,o=256*o+s[v(t+u)];return r.i=i,r.j=n,o},r.g(256)}function c(e,t,r,n,o){if(r=[],o=typeof e,t&&"object"==o)for(n in e)if(n.indexOf("S")<5)try{r.push(c(e[n],t-1))}catch(e){}return r.length?r:e+("string"!=o?"\0":"")}function d(e,t,r,n){for(e+="",r=0,n=0;n<e.length;n++)t[v(n)]=v((r^=19*t[v(n)])+e.charCodeAt(n));for(n in e="",t)e+=String.fromCharCode(t[n]);return e}function v(e){return 255&e}t.seedrandom=function(r,n){var v,_=[];return r=d(c(n?[r,e]:arguments.length?r:[(new Date).getTime(),e,window],3),_),d((v=new f(_)).S,e),t.random=function(){for(var e=v.g(6),t=h,r=0;e<o;)e=256*(e+r),t*=256,r=v.g(1);for(;e>=l;)e/=2,t/=2,r>>>=1;return(e+r)/t},r},h=t.pow(256,6),o=t.pow(2,o),l=2*o,d(t.random(),e)}([],numeric.seedrandom,0,0,52),function(e){function t(e){if("object"!=typeof e)return e;var i,r=[],n=e.length;for(i=0;i<n;i++)r[i+1]=t(e[i]);return r}function r(e){if("object"!=typeof e)return e;var i,t=[],n=e.length;for(i=1;i<n;i++)t[i-1]=r(e[i]);return t}function n(e,t,r,n,o,l,h,f,c,q,d,v,_,m,y,x){var i,w,M,E,S,T,A,R,C,L,P,O,k,I,N,D,B,F,U,j,V,z,G,H,W,X,Y;k=Math.min(n,q),M=2*n+k*(k+5)/2+2*q+1,H=1e-60;do{W=1+.1*(H+=H),X=1+.2*H}while(W<=1||X<=1);for(i=1;i<=n;i+=1)y[i]=t[i];for(i=n+1;i<=M;i+=1)y[i]=0;for(i=1;i<=q;i+=1)v[i]=0;if(S=[],0===x[1]){if(function(a,e,t,r){var i,n,o,l,h,s;for(n=1;n<=t;n+=1){if(r[1]=n,s=0,(o=n-1)<1){if((s=a[n][n]-s)<=0)break;a[n][n]=Math.sqrt(s)}else{for(l=1;l<=o;l+=1){for(h=a[l][n],i=1;i<l;i+=1)h-=a[i][n]*a[i][l];h/=a[l][l],a[l][n]=h,s+=h*h}if((s=a[n][n]-s)<=0)break;a[n][n]=Math.sqrt(s)}r[1]=0}}(e,0,n,S),0!==S[1])return void(x[1]=2);!function(a,e,t,b){var i,r,n,o;for(r=1;r<=t;r+=1){for(o=0,i=1;i<r;i+=1)o+=a[i][r]*b[i];b[r]=(b[r]-o)/a[r][r]}for(n=1;n<=t;n+=1)for(b[r=t+1-n]=b[r]/a[r][r],o=-b[r],i=1;i<r;i+=1)b[i]=b[i]+o*a[i][r]}(e,0,n,t),function(a,e,t){var i,r,n,o,l;for(n=1;n<=t;n+=1){for(a[n][n]=1/a[n][n],l=-a[n][n],i=1;i<n;i+=1)a[i][n]=l*a[i][n];if(t<(o=n+1))break;for(r=o;r<=t;r+=1)for(l=a[n][r],a[n][r]=0,i=1;i<=n;i+=1)a[i][r]=a[i][r]+l*a[i][n]}}(e,0,n)}else{for(w=1;w<=n;w+=1)for(o[w]=0,i=1;i<=w;i+=1)o[w]=o[w]+e[i][w]*t[i];for(w=1;w<=n;w+=1)for(t[w]=0,i=w;i<=n;i+=1)t[w]=t[w]+e[w][i]*o[i]}for(l[1]=0,w=1;w<=n;w+=1)for(o[w]=t[w],l[1]=l[1]+y[w]*o[w],y[w]=0,i=w+1;i<=n;i+=1)e[i][w]=0;for(l[1]=-l[1]/2,x[1]=0,I=(L=(C=(P=(R=(A=n)+n)+k)+k+1)+k*(k+1)/2)+q,i=1;i<=q;i+=1){for(D=0,w=1;w<=n;w+=1)D+=h[w][i]*h[w][i];y[I+i]=Math.sqrt(D)}function Z(){for(m[1]=m[1]+1,M=L,i=1;i<=q;i+=1){for(M+=1,D=-f[i],w=1;w<=n;w+=1)D+=h[w][i]*o[w];if(Math.abs(D)<H&&(D=0),i>d)y[M]=D;else if(y[M]=-Math.abs(D),D>0){for(w=1;w<=n;w+=1)h[w][i]=-h[w][i];f[i]=-f[i]}}for(i=1;i<=_;i+=1)y[L+v[i]]=0;for(O=0,N=0,i=1;i<=q;i+=1)y[L+i]<N*y[I+i]&&(O=i,N=y[L+i]/y[I+i]);return 0===O?999:0}function J(){for(i=1;i<=n;i+=1){for(D=0,w=1;w<=n;w+=1)D+=e[w][i]*h[w][O];y[i]=D}for(E=A,i=1;i<=n;i+=1)y[E+i]=0;for(w=_+1;w<=n;w+=1)for(i=1;i<=n;i+=1)y[E+i]=y[E+i]+e[i][w]*y[w];for(z=!0,i=_;i>=1;i-=1){for(D=y[i],E=(M=C+i*(i+3)/2)-i,w=i+1;w<=_;w+=1)D-=y[M]*y[R+w],M+=w;if(D/=y[E],y[R+i]=D,v[i]<d)break;if(D<0)break;z=!1,T=i}if(!z)for(B=y[P+T]/y[R+T],i=1;i<=_&&!(v[i]<d)&&!(y[R+i]<0);i+=1)(N=y[P+i]/y[R+i])<B&&(B=N,T=i);for(D=0,i=A+1;i<=A+n;i+=1)D+=y[i]*y[i];if(Math.abs(D)<=H){if(z)return x[1]=1,999;for(i=1;i<=_;i+=1)y[P+i]=y[P+i]-B*y[R+i];return y[P+_+1]=y[P+_+1]+B,700}for(D=0,i=1;i<=n;i+=1)D+=y[A+i]*h[i][O];for(F=-y[L+O]/D,G=!0,z||B<F&&(F=B,G=!1),i=1;i<=n;i+=1)o[i]=o[i]+F*y[A+i],Math.abs(o[i])<H&&(o[i]=0);for(l[1]=l[1]+F*D*(F/2+y[P+_+1]),i=1;i<=_;i+=1)y[P+i]=y[P+i]-F*y[R+i];if(y[P+_+1]=y[P+_+1]+F,!G){for(D=-f[O],w=1;w<=n;w+=1)D+=o[w]*h[w][O];if(O>d)y[L+O]=D;else if(y[L+O]=-Math.abs(D),D>0){for(w=1;w<=n;w+=1)h[w][O]=-h[w][O];f[O]=-f[O]}return 700}for(v[_+=1]=O,M=C+(_-1)*_/2+1,i=1;i<=_-1;i+=1)y[M]=y[i],M+=1;if(_===n)y[M]=y[n];else{for(i=n;i>=_+1&&0!==y[i]&&(U=Math.max(Math.abs(y[i-1]),Math.abs(y[i])),j=Math.min(Math.abs(y[i-1]),Math.abs(y[i])),N=y[i-1]>=0?Math.abs(U*Math.sqrt(1+j*j/(U*U))):-Math.abs(U*Math.sqrt(1+j*j/(U*U))),U=y[i-1]/N,j=y[i]/N,1!==U);i-=1)if(0===U)for(y[i-1]=j*N,w=1;w<=n;w+=1)N=e[w][i-1],e[w][i-1]=e[w][i],e[w][i]=N;else for(y[i-1]=N,V=j/(1+U),w=1;w<=n;w+=1)N=U*e[w][i-1]+j*e[w][i],e[w][i]=V*(e[w][i-1]+N)-e[w][i],e[w][i-1]=N;y[M]=y[_]}return 0}function K(){if(0===y[E=(M=C+T*(T+1)/2+1)+T])return 798;if(U=Math.max(Math.abs(y[E-1]),Math.abs(y[E])),j=Math.min(Math.abs(y[E-1]),Math.abs(y[E])),N=y[E-1]>=0?Math.abs(U*Math.sqrt(1+j*j/(U*U))):-Math.abs(U*Math.sqrt(1+j*j/(U*U))),U=y[E-1]/N,j=y[E]/N,1===U)return 798;if(0===U){for(i=T+1;i<=_;i+=1)N=y[E-1],y[E-1]=y[E],y[E]=N,E+=i;for(i=1;i<=n;i+=1)N=e[i][T],e[i][T]=e[i][T+1],e[i][T+1]=N}else{for(V=j/(1+U),i=T+1;i<=_;i+=1)N=U*y[E-1]+j*y[E],y[E]=V*(y[E-1]+N)-y[E],y[E-1]=N,E+=i;for(i=1;i<=n;i+=1)N=U*e[i][T]+j*e[i][T+1],e[i][T+1]=V*(e[i][T]+N)-e[i][T+1],e[i][T]=N}return 0}function Q(){for(E=M-T,i=1;i<=T;i+=1)y[E]=y[M],M+=1,E+=1;return y[P+T]=y[P+T+1],v[T]=v[T+1],(T+=1)<_?797:0}function $(){return y[P+_]=y[P+_+1],y[P+_+1]=0,v[_]=0,_-=1,m[2]=m[2]+1,0}for(_=0,m[1]=0,m[2]=0,Y=0;;){if(999===(Y=Z()))return;for(;0!==(Y=J());){if(999===Y)return;if(700===Y)if(T===_)$();else{for(;K(),797===(Y=Q()););$()}}}}e.solveQP=function(e,o,l,h,f,c){e=t(e),o=t(o),l=t(l);var i,d,q,v,_,m=[],y=[],x=[],w=[],M=[];if(f=f||0,c=c?t(c):[void 0,0],h=h?t(h):[],d=e.length-1,q=l[1].length-1,!h)for(i=1;i<=q;i+=1)h[i]=0;for(i=1;i<=q;i+=1)y[i]=0;for(0,v=Math.min(d,q),i=1;i<=d;i+=1)x[i]=0;for(m[1]=0,i=1;i<=2*d+v*(v+5)/2+2*q+1;i+=1)w[i]=0;for(i=1;i<=2;i+=1)M[i]=0;return n(e,o,0,d,x,m,l,h,0,q,f,y,0,M,w,c),_="",1===c[1]&&(_="constraints are inconsistent, no solution!"),2===c[1]&&(_="matrix D in quadratic function is not positive definite!"),{solution:r(x),value:r(m),unconstrained_solution:r(o),iterations:r(M),iact:r(y),message:_}}}(numeric),numeric.svd=function(e){var t,r=numeric.epsilon,n=1e-64/r,o=0,i=0,l=0,h=0,f=0,u=numeric.clone(e),c=u.length,d=u[0].length;if(c<d)throw"Need more rows than columns";var v=new Array(d),q=new Array(d);for(i=0;i<d;i++)v[i]=q[i]=0;var _=numeric.rep([d,d],0);function m(a,b){return(a=Math.abs(a))>(b=Math.abs(b))?a*Math.sqrt(1+b*b/a/a):0==b?a:b*Math.sqrt(1+a*a/b/b)}var y=0,g=0,x=0,w=0,M=0,E=0,s=0;for(i=0;i<d;i++){for(v[i]=g,s=0,f=i+1,l=i;l<c;l++)s+=u[l][i]*u[l][i];if(s<=n)g=0;else for(y=u[i][i],g=Math.sqrt(s),y>=0&&(g=-g),x=y*g-s,u[i][i]=y-g,l=f;l<d;l++){for(s=0,h=i;h<c;h++)s+=u[h][i]*u[h][l];for(y=s/x,h=i;h<c;h++)u[h][l]+=y*u[h][i]}for(q[i]=g,s=0,l=f;l<d;l++)s+=u[i][l]*u[i][l];if(s<=n)g=0;else{for(y=u[i][i+1],g=Math.sqrt(s),y>=0&&(g=-g),x=y*g-s,u[i][i+1]=y-g,l=f;l<d;l++)v[l]=u[i][l]/x;for(l=f;l<c;l++){for(s=0,h=f;h<d;h++)s+=u[l][h]*u[i][h];for(h=f;h<d;h++)u[l][h]+=s*v[h]}}(M=Math.abs(q[i])+Math.abs(v[i]))>w&&(w=M)}for(i=d-1;-1!=i;i+=-1){if(0!=g){for(x=g*u[i][i+1],l=f;l<d;l++)_[l][i]=u[i][l]/x;for(l=f;l<d;l++){for(s=0,h=f;h<d;h++)s+=u[i][h]*_[h][l];for(h=f;h<d;h++)_[h][l]+=s*_[h][i]}}for(l=f;l<d;l++)_[i][l]=0,_[l][i]=0;_[i][i]=1,g=v[i],f=i}for(i=d-1;-1!=i;i+=-1){for(f=i+1,g=q[i],l=f;l<d;l++)u[i][l]=0;if(0!=g){for(x=u[i][i]*g,l=f;l<d;l++){for(s=0,h=f;h<c;h++)s+=u[h][i]*u[h][l];for(y=s/x,h=i;h<c;h++)u[h][l]+=y*u[h][i]}for(l=i;l<c;l++)u[l][i]=u[l][i]/g}else for(l=i;l<c;l++)u[l][i]=0;u[i][i]+=1}for(r*=w,h=d-1;-1!=h;h+=-1)for(var S=0;S<50;S++){var T=!1;for(f=h;-1!=f;f+=-1){if(Math.abs(v[f])<=r){T=!0;break}if(Math.abs(q[f-1])<=r)break}if(!T){o=0,s=1;var A=f-1;for(i=f;i<h+1&&(y=s*v[i],v[i]=o*v[i],!(Math.abs(y)<=r));i++)for(x=m(y,g=q[i]),q[i]=x,o=g/x,s=-y/x,l=0;l<c;l++)M=u[l][A],E=u[l][i],u[l][A]=M*o+E*s,u[l][i]=-M*s+E*o}if(E=q[h],f==h){if(E<0)for(q[h]=-E,l=0;l<d;l++)_[l][h]=-_[l][h];break}if(S>=49)throw"Error: no convergence.";for(w=q[f],g=m(y=(((M=q[h-1])-E)*(M+E)+((g=v[h-1])-(x=v[h]))*(g+x))/(2*x*M),1),y=y<0?((w-E)*(w+E)+x*(M/(y-g)-x))/w:((w-E)*(w+E)+x*(M/(y+g)-x))/w,o=1,s=1,i=f+1;i<h+1;i++){for(g=v[i],M=q[i],x=s*g,g*=o,E=m(y,x),v[i-1]=E,y=w*(o=y/E)+g*(s=x/E),g=-w*s+g*o,x=M*s,M*=o,l=0;l<d;l++)w=_[l][i-1],E=_[l][i],_[l][i-1]=w*o+E*s,_[l][i]=-w*s+E*o;for(E=m(y,x),q[i-1]=E,y=(o=y/E)*g+(s=x/E)*M,w=-s*g+o*M,l=0;l<c;l++)M=u[l][i-1],E=u[l][i],u[l][i-1]=M*o+E*s,u[l][i]=-M*s+E*o}v[f]=0,v[h]=y,q[h]=w}for(i=0;i<q.length;i++)q[i]<r&&(q[i]=0);for(i=0;i<d;i++)for(l=i-1;l>=0;l--)if(q[l]<q[i]){for(o=q[l],q[l]=q[i],q[i]=o,h=0;h<u.length;h++)t=u[h][i],u[h][i]=u[h][l],u[h][l]=t;for(h=0;h<_.length;h++)t=_[h][i],_[h][i]=_[h][l],_[h][l]=t;i=l}return{U:u,S:q,V:_}}})),performanceNow=createCommonjsModule((function(e){(function(){var t,r,n,o,l,h;"undefined"!=typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:null!=process&&process.hrtime?(e.exports=function(){return(t()-l)/1e6},r=process.hrtime,o=(t=function(){var hr;return 1e9*(hr=r())[0]+hr[1]})(),h=1e9*process.uptime(),l=o-h):Date.now?(e.exports=function(){return Date.now()-n},n=Date.now()):(e.exports=function(){return(new Date).getTime()-n},n=(new Date).getTime())}).call(commonjsGlobal)})),root="undefined"==typeof window?commonjsGlobal:window,vendors=["moz","webkit"],suffix="AnimationFrame",raf=root["request"+suffix],caf=root["cancel"+suffix]||root["cancelRequest"+suffix],i=0;!raf&&i<vendors.length;i++)raf=root[vendors[i]+"Request"+suffix],caf=root[vendors[i]+"Cancel"+suffix]||root[vendors[i]+"CancelRequest"+suffix];if(!raf||!caf){var last=0,id=0,queue=[],frameDuration=1e3/60;raf=function(e){if(0===queue.length){var t=performanceNow(),r=Math.max(0,frameDuration-(t-last));last=r+t,setTimeout((function(){var e=queue.slice(0);queue.length=0;for(var i=0;i<e.length;i++)if(!e[i].cancelled)try{e[i].callback(last)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(r))}return queue.push({handle:++id,callback:e,cancelled:!1}),id},caf=function(e){for(var i=0;i<queue.length;i++)queue[i].handle===e&&(queue[i].cancelled=!0)}}var index=function(e){return raf.call(root,e)},cancel=function(){caf.apply(root,arguments)},polyfill=function(){root.requestAnimationFrame=raf,root.cancelAnimationFrame=caf};index.cancel=cancel,index.polyfill=polyfill;var promise=createCommonjsModule((function(e){!function(t){var r=setTimeout;function n(){}function o(e){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],v(e,this)}function l(e,t){for(;3===e._state;)e=e._value;0!==e._state?(e._handled=!0,o._immediateFn((function(){var r=1===e._state?t.onFulfilled:t.onRejected;if(null!==r){var n;try{n=r(e._value)}catch(e){return void f(t.promise,e)}h(t.promise,n)}else(1===e._state?h:f)(t.promise,e._value)}))):e._deferreds.push(t)}function h(e,t){try{if(t===e)throw new TypeError("A promise cannot be resolved with itself.");if(t&&("object"==typeof t||"function"==typeof t)){var r=t.then;if(t instanceof o)return e._state=3,e._value=t,void c(e);if("function"==typeof r)return void v((n=r,l=t,function(){n.apply(l,arguments)}),e)}e._state=1,e._value=t,c(e)}catch(t){f(e,t)}var n,l}function f(e,t){e._state=2,e._value=t,c(e)}function c(e){2===e._state&&0===e._deferreds.length&&o._immediateFn((function(){e._handled||o._unhandledRejectionFn(e._value)}));for(var i=0,t=e._deferreds.length;i<t;i++)l(e,e._deferreds[i]);e._deferreds=null}function d(e,t,r){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof t?t:null,this.promise=r}function v(e,t){var r=!1;try{e((function(e){r||(r=!0,h(t,e))}),(function(e){r||(r=!0,f(t,e))}))}catch(e){if(r)return;r=!0,f(t,e)}}o.prototype.catch=function(e){return this.then(null,e)},o.prototype.then=function(e,t){var r=new this.constructor(n);return l(this,new d(e,t,r)),r},o.all=function(e){var t=Array.prototype.slice.call(e);return new o((function(e,r){if(0===t.length)return e([]);var n=t.length;function o(i,l){try{if(l&&("object"==typeof l||"function"==typeof l)){var h=l.then;if("function"==typeof h)return void h.call(l,(function(e){o(i,e)}),r)}t[i]=l,0==--n&&e(t)}catch(e){r(e)}}for(var i=0;i<t.length;i++)o(i,t[i])}))},o.resolve=function(e){return e&&"object"==typeof e&&e.constructor===o?e:new o((function(t){t(e)}))},o.reject=function(e){return new o((function(t,r){r(e)}))},o.race=function(e){return new o((function(t,r){for(var i=0,n=e.length;i<n;i++)e[i].then(t,r)}))},o._immediateFn="function"==typeof setImmediate&&function(e){setImmediate(e)}||function(e){r(e,0)},o._unhandledRejectionFn=function(e){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)},o._setImmediateFn=function(e){o._immediateFn=e},o._setUnhandledRejectionFn=function(e){o._unhandledRejectionFn=e},e.exports?e.exports=o:t.Promise||(t.Promise=o)}(commonjsGlobal)}));function emitEvent(e){var t=new CustomEvent(e,{bubbles:!0,cancelable:!0});document.dispatchEvent(t)}function FFT(){var e,t,r=0,n=null,o=null;function l(e,t,l){for(var h,f,c,d,v,_,m,y,x,w=r>>2,M=0;M<r;M++)M<(d=n[M])&&(v=e[M],e[M]=e[d],e[d]=v,v=t[M],t[M]=t[d],t[d]=v);for(var E=1;E<r;E<<=1){f=0,h=r/(E<<1);for(var S=0;S<E;S++){_=o[f+w],m=l*o[f];for(var i=S;i<r;i+=E<<1)y=_*e[c=i+E]+m*t[c],x=_*t[c]-m*e[c],e[c]=e[i]-y,e[i]+=y,t[c]=t[i]-x,t[i]+=x;f+=h}}}this.init=function(l){if(0===l||0!=(l&l-1))throw new Error("init: radix-2 required");r=l,function(){n="undefined"!=typeof Uint8Array?new Uint8Array(r):new Array(r);"undefined"!=typeof Float64Array?(o=new Float64Array(1.25*r),e=new Float64Array(r*r),t=new Float64Array(r*r)):(o=new Array(1.25*r),e=new Array(r*r),t=new Array(r*r))}(),function(){var i=0,e=0,t=0;n[0]=0;for(;++i<r;){for(t=r>>1;t<=e;)e-=t,t>>=1;e+=t,n[i]=e}}(),function(){var e=r>>1,t=r>>2,n=r>>3,l=e+t,h=Math.sin(Math.PI/r),f=2*h*h,c=Math.sqrt(f*(2-f)),d=o[t]=1,s=o[0]=0;h=2*f;for(var i=1;i<n;i++)f+=h*(d-=f),c-=h*(s+=c),o[i]=s,o[t-i]=d;0!==n&&(o[n]=Math.sqrt(.5));for(var v=0;v<t;v++)o[e-v]=o[v];for(var _=0;_<l;_++)o[_+e]=-o[_]}()},this.fft1d=function(e,t){l(e,t,1)},this.ifft1d=function(e,t){var n=1/r;l(e,t,-1);for(var i=0;i<r;i++)e[i]*=n,t[i]*=n},this.fft2d=function(n,o){for(var i=0,l=0;l<r;l++){i=l*r;for(var h=0;h<r;h++)e[h]=n[h+i],t[h]=o[h+i];this.fft1d(e,t);for(var f=0;f<r;f++)n[f+i]=e[f],o[f+i]=t[f]}for(var c=0;c<r;c++){for(var d=0;d<r;d++)i=c+d*r,e[d]=n[i],t[d]=o[i];this.fft1d(e,t);for(var v=0;v<r;v++)n[i=c+v*r]=e[v],o[i]=t[v]}},this.ifft2d=function(n,o){for(var i=0,l=0;l<r;l++){i=l*r;for(var h=0;h<r;h++)e[h]=n[h+i],t[h]=o[h+i];this.ifft1d(e,t);for(var f=0;f<r;f++)n[f+i]=e[f],o[f+i]=t[f]}for(var c=0;c<r;c++){for(var d=0;d<r;d++)i=c+d*r,e[d]=n[i],t[d]=o[i];this.ifft1d(e,t);for(var v=0;v<r;v++)n[i=c+v*r]=e[v],o[i]=t[v]}}}!function(){if("function"==typeof window.CustomEvent)return!1;function e(e,t){t=t||{bubbles:!1,cancelable:!1,detail:void 0};var r=document.createEvent("CustomEvent");return r.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),r}e.prototype=window.Event.prototype,window.CustomEvent=e}();var left_eye_filter={real:[1.5419219943717721,.40010880110578706,-.7904364126534296,-1.2685464969238938,.39878117336167285,-1.0673489992245377,-.07988083822940402,-.45374680224191505,-.04347409793890079,-.31125662385352687,.17092430376098702,-.29613086164846153,.5616469648110296,-1.559786848789493,.6451303799749266,-1.2899747976234162,1.1761667998175334,-1.289974797623355,.6451303799749047,-1.5597868487894897,.561646964811025,-.29613086164845964,.17092430376099094,-.3112566238535296,-.04347409793890079,-.4537468022419118,-.07988083822940466,-1.0673489992245357,.39878117336167307,-1.2685464969238942,-.7904364126534301,.40010880110578717,-1.3820969331049027,.06956047126920577,-1.9786339579213206,-1.9807415717551982,-.7866727441045088,-1.2217002325587256,-.19150029104902774,-.3513161729077324,-.17646388464205803,-.1667209502050344,-.09229861292456652,-.028899376452253527,-.1314555696102146,-.32892265898101813,-.40987148655061206,.11741827111366547,-.6725433018260514,-.46007833291519956,-.67215259521101,-.4487190743247301,-.03474931672918458,.005563928130243397,-.1767590236098159,-.2619620808503219,-.3630125430638704,-.33546767337818123,-.6458889740799838,-1.1981932989987978,.12372650763830917,-1.4996172161865935,-2.408429802301389,-2.050529127959172,-1.7249706159518585,-2.277646289702639,-3.125963174341959,-2.9656385065342015,-2.848083508696201,-1.426096450031019,-.6179259082917354,-.2611655301498782,-.38519889843539723,-.17511899827006483,-.32808050503227176,.007680087103746304,-.18710828510427668,.1976534820339281,-.5544445310046505,.1458356759032838,-.6984497111751529,-.9018857723352662,-.5350001638458337,-.0444207518616698,.014727914354086128,-.28084584584371913,-.2989040874868585,-.3943138014933655,-.39569215798819307,-.743519999882583,-.8250219837063175,-1.851491897104155,-.7430237866893424,.21156442062863762,-3.3061472495599986,-1.7990472945779568,-2.219376425173228,-2.343880246691925,-3.361597106712331,-3.538324908586371,-2.263967374508659,-2.027175780678075,-.7524258340587223,-.3014341101683938,-.3625272253546275,-.2548943100464769,-.1892849156146708,-.1179891518538482,.027920290231533224,-.03547210749814382,-.2900872185756226,-.3604588674139817,-.391561438074338,-.8222225740287656,-.4497991497169593,-.09813633035547625,.06562858246622937,-.3360730432730313,-.3216120132349778,-.41856090178723965,-.6402842542962905,-.7766428172010218,-1.3946448661671447,-2.2603422126144683,-.38769722219534525,-.9534159393947865,-1.412952994959813,-2.360233685802043,-1.275639243727802,-2.0983496132652038,-2.568245461005427,-2.879105394693038,-2.1809972632688095,-.8428129384777686,-.759989367937187,-.18584599820380068,-.3010574835530826,-.16098142942852958,-.1379212574041719,-.08979002287112871,-.12321821342876504,-.1128661923016878,-.3924098378001975,-.5780902167586397,-.48685989567066695,-.5356535944329623,-.05103668985052638,-.006854703392511769,-.1896340515783942,-.22514761090777807,-.3555582346088891,-.4667060397658552,-.5617954148525789,-.7495095888115163,-1.477207542226035,-1.5836466114968029,-2.3846549454186694,-1.4884613952536236,-1.8237453905245253,-1.6712324532934877,-1.5169157844507295,-1.6930052820597281,-2.1023566589276004,-2.2062031109308458,-1.7945281756942255,-.2645739883891265,.22038139379151148,-.43479836723775234,-.19830827357221226,-.18018565146479498,-.09706087918479574,-.10088329756370379,-.06306970995727253,-.17970932516041177,-.1943040732581543,-.3797056039227762,-.4730230160625181,-.3036696794805218,-.0647323910189154,-.08902516330269715,-.08200020008302734,-.22965854401457736,-.32035624605031326,-.3183678319655244,-.4013205823631112,-.6560174703347086,-.5904048375141748,-1.8503084663080034,-1.8694842425148914,-1.9326778896298584,-1.630157842292352,-1.43320067851183,-1.305707665299106,-1.364200787821644,-1.5357935460809622,-1.616199233695124,-.7400351866837052,-.2942382417321069,.025934598230976654,-.043349004411304674,-.2540802180302247,-.0669656864849775,-.07571749869863525,.007057189465364498,-.04217135665833811,-.03693831566176801,-.3422156158175605,-.20400167508805764,-.3741711609707977,-.25039909487805356,-.07087453139452493,-.0569972852039487,-.06723820695040318,-.17397285212300442,-.20428337307808273,-.23651154356493315,-.3335649893327657,-.07339749754226077,-.703679598066816,-.8240368002159505,-1.6058616381755235,-1.6192427030685497,-1.5705638815427956,-1.4659201063980019,-.9550417954995102,-.9723752616273987,-1.0460191987834688,-.9146566894126572,-.6054823236139852,.01898438364933451,-.19419044456729498,-.03962785112430722,.0012357796666701798,-.07811082244532508,.004862636492025052,-.04044908966237959,-.0035054269587873454,-.1338754472473073,-.10031131456276647,-.2596867467568419,-.20555329767005767,-.26509289948725284,-.038788452621647145,-.07699989187225126,-.0716614330389765,-.14182240789719938,-.1654673053291095,-.19859450279267193,-.05338232636581037,-.2156585383674445,-.0450973572847935,-.6244981857994951,-.9262490674491722,-1.0411254782363617,-1.122035196738675,-1.0607692164246043,-.5772381177353403,-.6318773589638808,-.5481331120442192,-.5532025210173874,-.301972995874824,-.04721324975783839,.08280893046738329,-.06771513448322243,-.01022881748368659,.04203831125895655,-.06337176739998067,.029161890169972702,-.09139631658683613,-.003460073507075481,-.12424052925006424,-.244329964180121,-.265216641753595,-.22745980283820413,-.14361316535317664,-.0007590420310057794,-.02093616845786214,-.14205665196423617,-.19024248288823023,-.0796861223622452,-.15016133237735926,.049598910651295514,-.11760486834511712,-.1837522251545049,-.3859420549411461,-.5354251643699984,-.5734099173080799,-.5275362142401814,-.23151163972118355,-.2229509691994926,-.33704349161770436,-.26165852514054583,-.13898866968588663,.034596483191139484,-.012631210076789067,.04737131007634562,-.03865183933075155,-.001997076145443002,.0630488452583755,-.1124891762554399,.08556992539656616,-.210436590518682,-.19223333969456,-.3908299483003586,-.1929436800716272,-.4102559543993857,-.17178084419175166,-.010933041190555012,-.0895129361520745,-.21569610281495066,-.09144756671688016,-.19525258909505316,-.029753598134641936,-.021307245660079924,.02908712794055101,.03751129065309784,-.2060099012070584,-.26967580750352926,-.21000923681194664,-.2820901885828563,-.11925518789339556,-.24869348141289982,-.21025892926356746,-.15567029136726124,-.04054672910839591,-.00502661531005471,.030710887069787196,-.006110434024585828,.0369376092260571,-.05486266136790032,.013297880203253048,.19659447375886394,-.2499491329142558,-.06295969900286576,-.5305502909595601,-.38784811281629444,-.5389128507596239,-.41886712861154285,-.09923009726032588,-.16474199810952628,-.28693665642627014,-.00956679808502211,-.3261995499345093,-.08627491478166284,-.07325316175571477,.01563417403869033,.08244053654753179,.025411878261881942,-.11318909242737961,-.1270560226842935,-.21657212936164139,-.1399387354961119,-.3751027523762283,-.2647292311107622,-.24460131567533192,-.14127652303494026,-.05042868659104518,.04134784037419077,-.006178044515300064,.007399034521025015,-.01406273903701438,.14348925152561878,-.015321787554403667,.0017746672356015968,.2516513542736105,-.626463828190993,-.4816713433080564,-1.045863293770664,-.6951259178849319,-.44532127384388254,-.2847972402536839,-.3947095508731798,.2022722834472047,-.5390991207348895,-.12025629051789474,-.1899243750597305,-.04847480672159513,.06076477135322776,.09064815178251616,.09160820891269728,.0036582478916540977,-.2249253000526313,-.27295314658024766,-.3555973802525736,-.6290292501441295,-.57166411974881,-.3725889517312918,-.22157638610464933,.022494427132080854,.014769425415166171,.003526808789406817,-.011346909674078769,.05092117084834829,.09030854179921963,.37260817254533324,-.2590987139215991,-.42379280974334355,-.09538064780856813,-1.190608374889352,-.7859991441489247,-.9527791435273028,-.6365977835942234,-.9802601500895275,.481731982859161,-.6009200901805519,-.10265418316164113,-.39913639006279306,-.17310908908773887,-.0194191171632387,.05404796528917988,.1388529643463832,.15661099050146,-.10898263774416243,-.332912314567376,-.5956902786588871,-.6935308158494897,-1.0999707493347484,-.7439208475373669,-.4907478121415816,-.06519055673385296,.012289768389229717,.024577513704595676,.004030280469609632,.036047756292976456,.058236765637246286,.1389384625679062,.03694467603693463,.41686279554239464,-.8523228638818582,-1.298831512762498,-.4735277967730517,-.8176363254154679,-.7738445780362183,-1.425624000451928,.5258899353236068,-.8982172402290268,.1591911967653899,-.5504659677234687,-.3098001604127102,-.16709614007114884,-.046029700131955266,.04479326815042398,.1689242242845459,.14412365934528507,-.008825007131336736,-.3677854512466631,-.793938445177321,-1.1610479066529615,-.7652321000885066,-.630098580320484,-.13947023057344932,-.017173105577524262,.039030007688455846,.0144912730838054,.03979254294383725,.054072846696920814,.11729310469925348,.053609281522667675,.008154949871808708,-.3091081345284555,.25944224899607843,-1.3584842180322938,-1.5885570490138659,-.6575958279461822,-1.139869490652734,.7092826408059469,-1.9674198903133462,.37712664425406606,-.8433603839057895,-.47788074719428036,-.1834200008666372,-.18811394573901796,-.05505002764598565,.045043056834335606,.1148630355985436,.22023958716404868,.14735402009444676,-.27894427087198,-.7308053695312964,-.7679430569329723,-.37355919765840223,.12353986794322802,.09050534837631184,.14069908672094206,.08737321438027885,.023353946735568523,.03140055992039659,.07955023044620224,.08492716138218544,.04077715825534942,-.16274954314482293,-.41184413435479567,-.7187128882257487,.5530290745634285,-1.5309493464500674,-2.9026104205694736,.4204330359950835,-1.713810626479367,.295138882491271,-1.2517216433630918,-.6676994217651684,-.28576739334390183,-.24127777006787937,-.10778095858902549,-.03609242500919886,.021519213385077923,.13414694961717147,.16917378957839613,.17307922682581758,.07624675882901567,-.04790483513427262,-.27544262702406924,.6182624956656319,.269874231236934,.2085883517320696,.2607342621072197,.12070625812911842,.06294558209330968,.08364957391650543,.04968809534578587,.01956435760784307,-.04603581747659695,-.13409074070830324,-.4902720181429455,-.4775645732142016,-.7440367513542755,-.3080068432033089,-.04371243884270504,-4.735594317158907,-.043712438842706695,-.3080068432033096,-.7440367513542757,-.47756457321420304,-.49027201814294813,-.13409074070830412,-.046035817476598156,.01956435760784307,.049688095345786006,.08364957391650606,.06294558209331085,.12070625812911921,.2607342621072207,.2085883517320702,.269874231236934,-.3735591976583676,-.2754426270240343,-.04790483513427313,.07624675882901252,.17307922682581853,.169173789578395,.13414694961716844,.02151921338507657,-.03609242500919986,-.1077809585890261,-.24127777006787943,-.2857673933439015,-.667699421765169,-1.2517216433630949,.2951388824912743,-1.7138106264793713,.4204330359950768,-2.902610420569474,-1.5309493464500692,.5530290745634223,-.7187128882257502,-.41184413435479833,-.16274954314482265,.04077715825534866,.08492716138218645,.07955023044620314,.03140055992039842,.023353946735571576,.08737321438028138,.14069908672095732,.09050534837633403,.1235398679432393,-.7652321000884781,-.7679430569329614,-.730805369531285,-.27894427087197604,.1473540200944477,.22023958716404682,.11486303559854165,.04504305683433383,-.05505002764598645,-.18811394573901843,-.18342000086663854,-.4778807471942804,-.8433603839057915,.37712664425406617,-1.9674198903133469,.709282640805937,-1.1398694906527307,-.657595827946194,-1.588557049013867,-1.3584842180322987,.2594422489960773,-.3091081345284578,.008154949871808691,.05360928152266728,.11729310469925426,.0540728466969212,.03979254294383871,.01449127308380731,.039030007688458185,-.017173105577517028,-.13947023057343994,-.6300985803204511,-1.0999707493347308,-1.1610479066529467,-.793938445177313,-.3677854512466584,-.00882500713133401,.1441236593452856,.168924224284544,.04479326815042012,-.04602970013195615,-.16709614007115095,-.30980016041271097,-.5504659677234705,.15919119676539073,-.8982172402290286,.5258899353236033,-1.4256240004519327,-.7738445780362169,-.8176363254154656,-.4735277967730568,-1.2988315127625027,-.8523228638818583,.41686279554239525,.036944676036935756,.13893846256790574,.058236765637246675,.036047756292977066,.004030280469611113,.02457751370459911,.012289768389232913,-.06519055673384466,-.49074781214156804,-.7439208475373563,-.629029250144129,-.6935308158494856,-.595690278658883,-.3329123145673749,-.10898263774416028,.15661099050145985,.13885296434638142,.054047965289177706,-.019419117163239467,-.17310908908773912,-.39913639006279433,-.10265418316163986,-.6009200901805531,.48173198285915786,-.9802601500895259,-.6365977835942213,-.9527791435273002,-.7859991441489246,-1.190608374889349,-.09538064780857,-.4237928097433449,-.25909871392159683,.37260817254533357,.09030854179921953,.05092117084834837,-.011346909674079158,.003526808789408155,.014769425415168456,.022494427132082863,-.22157638610464575,-.37258895173129003,-.5716641197488066,-.37510275237622537,-.3555973802525706,-.2729531465802467,-.22492530005262792,.0036582478916564426,.09160820891269639,.09064815178251497,.06076477135322488,-.04847480672159565,-.18992437505973167,-.12025629051789351,-.5390991207348887,.20227228344720258,-.394709550873178,-.28479724025368247,-.4453212738438783,-.6951259178849327,-1.04586329377066,-.4816713433080586,-.6264638281909916,.2516513542736103,.0017746672356018336,-.0153217875544032,.14348925152561842,-.01406273903701487,.007399034521024359,-.00617804451529856,.04134784037419488,-.050428686591041855,-.1412765230349349,-.2446013156753272,-.26472923111076024,-.11925518789339257,-.13993873549610955,-.2165721293616384,-.1270560226842922,-.11318909242737903,.025411878261882927,.08244053654753017,.015634174038688685,-.0732531617557155,-.08627491478166197,-.326199549934509,-.00956679808502389,-.28693665642627003,-.16474199810952764,-.09923009726032403,-.4188671286115432,-.5389128507596231,-.3878481128162946,-.5305502909595622,-.06295969900286663,-.24994913291425488,.1965944737588636,.013297880203252755,-.054862661367901897,.03693760922605668,-.0061104340245862225,.030710887069788338,-.005026615310052167,-.040546729108393256,-.15567029136725916,-.21025892926356554,-.2486934814128962,-.2315116397211769,-.2820901885828492,-.21000923681193823,-.26967580750352416,-.20600990120705304,.03751129065309909,.029087127940549885,-.02130724566008323,-.0297535981346421,-.19525258909505444,-.09144756671688208,-.2156961028149504,-.08951293615207585,-.010933041190555782,-.17178084419175305,-.41025595439938806,-.19294368007162768,-.39082994830036216,-.19223333969456258,-.2104365905186827,.08556992539656708,-.11248917625543933,.06304884525837423,-.001997076145445627,-.0386518393307522,.04737131007634562,-.012631210076786959,.0345964831911426,-.13898866968588444,-.26165852514053983,-.33704349161769737,-.22295096919948695,-.5772381177353403,-.5275362142401814,-.5734099173080794,-.5354251643699987,-.38594205494114614,-.1837522251545064,-.11760486834511884,.04959891065129376,-.15016133237735926,-.07968612236224891,-.1902424828882312,-.1420566519642383,-.02093616845786258,-.0007590420310084487,-.14361316535317845,-.2274598028382093,-.265216641753595,-.2443299641801253,-.12424052925006639,-.003460073507076083,-.09139631658683596,.029161890169972428,-.06337176739998052,.042038311258955005,-.01022881748368659,-.06771513448322196,.08280893046738375,-.047213249757837236,-.3019729958748239,-.5532025210173874,-.548133112044219,-.6318773589638805,-.9550417954995029,-1.060769216424599,-1.1220351967386673,-1.0411254782363524,-.9262490674491646,-.6244981857994925,-.045097357284792555,-.21565853836744897,-.05338232636581171,-.19859450279267432,-.16546730532911214,-.14182240789720132,-.07166143303897729,-.07699989187225306,-.038788452621649434,-.2650928994872585,-.20555329767005678,-.2596867467568408,-.10031131456276626,-.13387544724730568,-.0035054269587865765,-.04044908966237997,.004862636492024128,-.07811082244532547,.0012357796666695618,-.0396278511243066,-.19419044456729473,.018984383649339364,-.6054823236139799,-.9146566894126499,-1.046019198783463,-.9723752616273926,-1.3057076652991049,-1.4659201063979992,-1.5705638815427927,-1.6192427030685486,-1.6058616381755215,-.8240368002159525,-.7036795980668187,-.07339749754226939,-.3335649893327653,-.23651154356493967,-.2042833730780847,-.17397285212300875,-.06723820695040342,-.056997285203952995,-.07087453139452611,-.25039909487805306,-.3741711609707976,-.2040016750880539,-.3422156158175576,-.03693831566176366,-.042171356658337315,.00705718946536539,-.07571749869863496,-.0669656864849772,-.25408021803022474,-.04334900441130162,.025934598230977574,-.2942382417321012,-.7400351866837027,-1.6161992336951192,-1.5357935460809593,-1.3642007878216427,-1.5169157844507262,-1.4332006785118279,-1.630157842292349,-1.932677889629856,-1.8694842425148879,-1.8503084663080056,-.5904048375141792,-.6560174703347134,-.40132058236311047,-.31836783196552787,-.32035624605031593,-.22965854401457814,-.08200020008302822,-.08902516330269802,-.06473239101891355,-.3036696794805129,-.4730230160625184,-.3797056039227587,-.19430407325814622,-.1797093251603995,-.06306970995727144,-.10088329756370083,-.09706087918479443,-.18018565146479387,-.19830827357221226,-.43479836723774673,.22038139379151372,-.2645739883891143,-1.79452817569422,-2.206203110930839,-2.102356658927595,-1.6930052820597257,-1.2756392437278008,-1.6712324532934884,-1.8237453905245253,-1.4884613952536252,-2.384654945418673,-1.5836466114968115,-1.4772075422260404,-.749509588811526,-.561795414852579,-.46670603976586306,-.3555582346088905,-.22514761090777982,-.18963405157839525,-.006854703392512414,-.05103668985052919,-.5356535944329562,-.48685989567066656,-.5780902167586235,-.3924098378001862,-.11286619230167973,-.12321821342876334,-.08979002287112711,-.13792125740417074,-.16098142942852883,-.301057483553083,-.18584599820379807,-.7599893679371835,-.8428129384777584,-2.1809972632688073,-2.879105394693035,-2.5682454610054237,-2.0983496132652038,-2.219376425173226,-2.3602336858020396,-1.4129529949598048,-.9534159393947887,-.38769722219534936,-2.260342212614477,-1.394644866167148,-.7766428172010335,-.6402842542962903,-.41856090178724664,-.3216120132349809,-.3360730432730346,.06562858246623078,-.09813633035547877,-.44979914971695495,-.822222574028781,-.391561438074338,-.3604588674139763,-.2900872185756239,-.03547210749813554,.027920290231535812,-.117989151853845,-.1892849156146684,-.25489431004647656,-.3625272253546275,-.30143411016838906,-.7524258340587202,-2.027175780678063,-2.263967374508654,-3.538324908586366,-3.361597106712324,-2.343880246691923,-1.7249706159518579,-1.7990472945779559,-3.3061472495599995,.21156442062862166,-.743023786689344,-1.8514918971041745,-.8250219837063265,-.7435199998826033,-.3956921579881928,-.3943138014933833,-.29890408748686254,-.28084584584372846,.01472791435408881,-.04442075186168376,-.5350001638458372,-.9018857723352869,-.6984497111751535,.14583567590324595,-.5544445310046473,.1976534820339324,-.18710828510427244,.007680087103749638,-.3280805050322698,-.17511899827005836,-.38519889843539723,-.2611655301498714,-.6179259082917326,-1.4260964500310052,-2.8480835086962,-2.9656385065341997,-3.1259631743419583,-2.2776462897026373,-1.3820969331049018,-2.0505291279591713,-2.408429802301388,-1.4996172161865962,.12372650763830863,-1.1981932989988076,-.6458889740799882,-.33546767337818667,-.36301254306387043,-.2619620808503318,-.176759023609821,.005563928130235761,-.034749316729180774,-.44871907432473696,-.6721525952110092,-.4600783329152383,-.6725433018260518,.11741827111366224,-.409871486550618,-.32892265898101625,-.1314555696102148,-.028899376452251727,-.09229861292456465,-.1667209502050334,-.17646388464205828,-.3513161729077252,-.1915002910490266,-1.22170023255872,-.7866727441045076,-1.980741571755196,-1.978633957921319,.06956047126920993],bottom:{real:[4103.3252596935745,31959.928439656338,10854.93487005055,5174.7646941682715,2670.3793024702013,1512.8812431609856,751.7211981350827,487.34157279751093,286.27976884850017,202.21445228809756,139.363320073941,96.32667662587427,67.41651339270402,55.03603936156373,42.61745504949191,37.32784123540667,35.19880020906027,37.32784123540659,42.6174550494918,55.036039361563766,67.41651339270402,96.32667662587428,139.36332007394108,202.21445228809804,286.27976884850017,487.34157279751093,751.7211981350829,1512.8812431609856,2670.3793024702018,5174.764694168275,10854.93487005055,31959.928439656363,12454.694619943468,7821.583390276555,5473.1790170642225,2925.2286142376206,1403.2127508507554,917.0553055607355,556.7335087890582,335.5815491134937,222.7562369115075,161.71079893305554,119.4497628246793,75.60900751432125,55.49608708093657,43.99882948912511,34.72502996512234,29.983374804996487,29.18733660878197,30.714909872552553,33.13572852856229,38.78004056055656,50.11926248444739,62.42660929674013,93.91676536356728,123.96413175241418,177.16967383039952,250.50030243800805,399.94920918463373,596.1485322845399,914.2463340693114,1871.621027127744,4518.422312124804,13565.815861293135,16084.742683461694,10028.519769850123,2736.2851033168113,1377.4551350842332,614.0817483175045,382.39730464420114,237.0105878631189,156.24359018004319,129.95938769710136,95.53783206710068,72.00409286489193,47.80430165384308,38.41781199466849,32.4520486224145,26.753427300507923,23.7729362481657,23.138404805980134,23.598476471031617,24.755859033283485,28.71332398916273,33.39553720167712,40.85058654989144,58.64988180671874,74.87296871197377,93.46512922636781,123.19419955144703,174.7570612705884,262.71291650117263,321.82068054258934,657.052536352664,2163.593226520231,10212.960963472207,3792.0213246064613,2759.3366542985627,1627.1011647050395,788.4497720201678,362.8509317865861,253.90720770691448,163.04342130809295,117.95146004773997,90.7661067039026,66.20774509684053,48.204553381452804,35.4292065515689,28.049881805648454,23.25027473117818,20.7789366420614,19.004228801577,17.585642163629327,17.6981813264345,18.806836162280465,20.329571180523736,23.456998427374465,27.472702254518477,37.19312003574272,49.11725258408396,59.57482901261523,73.59994664128709,112.97176733843995,181.91972084309376,284.0343016488693,486.2964820369405,857.0528785536101,2037.977143592303,2057.7285052573056,2152.595270625315,1395.1090523951752,736.2529768000007,343.98700964912916,189.68478304615005,127.37774106216496,91.12789293157843,73.66725513376396,55.964360327653644,39.48256704253295,28.14219415335706,21.278934963706885,18.193385040510105,16.473354788100497,15.086583853495943,14.403945056404867,14.533202056236952,15.306988390608382,16.092687824041843,18.097466979870337,20.289280537832838,26.201109009342694,34.023571220637564,41.620492531599325,50.685682074964014,82.56070198163133,127.19888958323958,237.89761616945128,410.06312322518994,1062.2303232610248,1612.0404058137353,2295.1409914972487,1787.3905923922546,1192.2295048012345,614.2488252588063,260.82616895243024,126.23242010647614,84.15107628881098,67.70941499278271,60.1225715594723,42.830591238304876,28.733103940874788,20.365121706656215,16.211112474155353,14.072758594539286,13.483685068827034,12.859628868618824,11.868475605254234,11.903201306554562,12.816996745648828,13.065794209061782,14.312459824747068,16.296926608708432,20.657711991677495,27.65339007023543,33.59311041396786,40.672720076575544,55.85662461850217,103.16047843117397,179.23484372919035,453.7513605151255,902.2628504825688,1683.7179352249004,1784.083505146898,1577.4265763170067,936.6630912289419,441.2089233758718,176.43359667751182,98.09397174153568,65.99594469503664,53.24029570749545,45.85166507919449,32.40748535978308,22.496202298890402,16.9656137144178,13.731573445856062,12.28236966845588,11.747735381447885,11.213125876643861,10.807806034266576,10.840341477375139,11.066245600125107,11.119452781179984,12.424913044930788,14.61002755646222,16.887227742677396,22.29462391228396,27.97815738132312,31.99125039297179,44.05265888187653,76.10956832779837,159.13944268405785,318.3920712827857,686.0032317807187,1336.6568589814267,1043.0649603599104,984.7874618280729,618.0395600950327,289.32426118556657,132.98214831862998,71.52004843088118,52.57629039600819,41.525598741467476,33.63391272281399,27.03125566244968,19.489513580793098,14.812681614273632,12.21137274400836,10.893625186679536,10.482989068673637,10.105487112246305,9.711689924381735,9.948806980482882,10.161347795217756,10.513274350469635,11.294150924355744,12.914730156139361,14.478861048855546,19.021661277112585,23.907610167423496,27.23573455134931,38.74297641398302,62.86922312590263,111.92503010834605,213.21062569137553,433.61330953226366,726.7026984582077,562.2186141052522,539.290746631297,362.9446461846826,211.46669660189423,107.79772661917396,60.67666837556757,41.743276533116536,34.42369696468284,31.26708433258414,25.313030406949355,18.452791878453507,13.956644256748325,11.043046695375654,10.111101652499672,9.455036044447306,9.242959346939653,8.952191122239926,9.232112416401021,9.190804166916982,9.566282735322787,10.506864865879585,11.825879962774797,13.52813582962821,15.999059082232355,19.794027285196304,22.4788452877151,32.16327238486775,47.951984523863096,81.30924286665513,150.93744536633105,263.8463052599166,439.2795103319926,309.78719189559973,306.63257299287005,244.19689848939953,151.98869039704036,91.33048200427616,57.35275332201335,38.70916070606743,33.08708644900138,29.826655436967027,23.987725148031473,16.89184234468231,13.041947079601194,10.535809562752126,9.535947162168391,8.937448349685543,8.567264312291233,8.457273589565943,8.46028044009711,8.55434575263303,9.382376333669994,10.37723041770863,11.799673812944503,12.361176855966248,14.786798351390814,16.739331260686697,20.5901480313592,25.753571174908508,38.3828930678668,63.23013835373618,105.62437218489313,175.68359833526657,256.05708017959813,224.80770864957879,228.96753655549054,172.54966320095522,116.2654682194649,80.46990226978717,53.84433487661021,37.483534347728245,31.075867215997253,26.284110672635684,20.645029038002825,15.025930043703783,11.738276392873866,10.201438772469425,8.820344522727998,8.494550985699536,8.19687284093449,8.179077730441959,7.908377156922052,8.678547729507404,9.647371515689038,10.339435934253908,10.728035799158873,11.983620383388951,13.687783504221503,16.433795900162693,18.309125668572698,22.485075799802843,31.76468437638305,49.270779583367755,77.72985195627992,123.50059845139852,179.77043479461938,159.57955623939222,154.5332986938033,127.96891349444883,91.96783661678981,66.92174464641701,48.818287955893446,36.59106165352678,27.834277069623926,23.04190215218159,18.3587138942453,13.567338391039883,11.281789781943191,9.60382954556472,8.733327756377252,8.338123667351045,7.899208806186968,7.710432242677591,7.998386998564103,8.543643849090227,9.443215884480004,9.787034441091842,10.423788563863184,11.253535869282553,13.327727562718719,15.178485067808285,17.337135682195893,21.668177060872456,29.324826866357235,41.49275321863635,60.042185621507166,90.31813491621534,130.8805255687621,104.24612656823803,108.8028525877362,89.55574556015725,69.78566957523967,56.746590174428,44.171218069814536,32.39838941697333,25.18225275923646,21.610810960419155,16.972539478480535,13.238333358456819,10.614964653675054,9.380692794630786,8.749281483242108,8.135298996501481,7.634398163782139,7.485286988947929,7.8316993609624435,8.385395741527464,9.231574230561463,9.838944162951421,10.386606043801919,11.354519695989614,13.10793814373473,15.240615596988986,17.58979203150065,21.461767190818147,26.661531554562984,36.12333702897858,50.32073186927438,69.0656097199978,87.4422608573542,76.67764327657595,72.68914763671407,65.50785565022079,58.29765840635796,49.55859874114894,39.192968104211104,29.954333787314212,23.9458863540046,19.99476230299754,16.735792774046942,12.901585018586687,10.289994503175569,9.397776582267992,8.670419628780323,7.8828328381527575,7.534147883901947,7.43129292000411,7.798515976625768,8.186906091241408,9.142118635191288,9.830770779287306,10.340589147553608,11.281171263863113,12.984935438318947,15.107976469419242,18.19770629294057,20.668346478928893,25.76149613251493,32.2514242661345,39.95295492008993,51.36943807862585,65.56929956266247,55.46884946872952,55.86542097352833,55.10113878297366,50.53184836867472,43.70147053696678,35.86638144085743,28.439396618258566,22.42863349391925,18.94503035808276,15.596977301337661,12.206893729284205,10.050508612628137,9.547393948232287,8.646327628083018,7.910774588392556,7.275551408966156,7.5482842032534565,7.544387941964139,7.96361878033256,8.992201544757735,9.635199784998907,10.0402383165895,11.706284711344862,13.336194440398188,15.639893484781382,17.791763978880017,20.83131115781941,25.6818621728188,31.387128642704546,37.14316604955522,44.038766386780296,52.90450693740585,48.059389050535145,50.072432061388255,49.11501031551525,44.16042346883115,38.44095318130842,32.35840674752788,26.251111011761232,21.08192257046498,17.515101530242855,14.10261621013594,11.438986216849498,10.422223192105227,9.76207732514108,8.774631916934416,7.5939451837729885,7.260594980680288,7.476691949602524,7.419064545103371,8.018735722916306,8.926634451217284,9.69756437118481,10.35689464395745,11.451859179394017,13.10319606057651,15.460942026724263,18.825021564083144,22.773162722002358,26.906890973713775,31.803276985208164,37.82902190094245,42.388788349798304,44.62010567979956,48.85927778095382,46.13611029220518,41.908361785717766,39.52102274454999,35.05229493371635,29.18134316630342,23.802472557875006,19.95574653975907,16.22743816874862,13.086681034223906,11.226909204888067,10.616041272149978,9.83854928426482,8.656300584619567,7.8952678290472065,7.276214992565685,7.309404620848296,7.276214992565686,7.895267829047208,8.656300584619574,9.838549284264822,10.61604127214999,11.226909204888063,13.086681034223904,16.22743816874862,19.955746539759044,23.80247255787499,29.181343166303414,35.05229493371636,39.52102274454999,41.908361785717766,46.13611029220517,48.05938905053505,44.620105679799494,42.388788349798226,37.82902190094255,31.803276985208186,26.906890973713825,22.77316272200237,18.825021564083173,15.460942026724263,13.103196060576508,11.451859179394024,10.35689464395744,9.69756437118482,8.926634451217275,8.0187357229163,7.419064545103367,7.476691949602523,7.260594980680292,7.593945183772996,8.774631916934418,9.762077325141082,10.42222319210523,11.438986216849505,14.102616210135931,17.51510153024284,21.08192257046497,26.251111011761218,32.358406747527845,38.44095318130838,44.16042346883106,49.115010315515164,50.07243206138801,55.46884946872923,52.90450693740565,44.03876638678024,37.143166049555234,31.387128642704567,25.681862172818796,20.831311157819414,17.79176397888002,15.639893484781378,13.336194440398192,11.706284711344864,10.040238316589498,9.635199784998912,8.99220154475773,7.963618780332553,7.544387941964129,7.548284203253456,7.275551408966155,7.910774588392558,8.646327628083021,9.547393948232287,10.05050861262814,12.206893729284213,15.596977301337661,18.94503035808276,22.42863349391924,28.439396618258566,35.86638144085739,43.70147053696676,50.531848368674645,55.10113878297363,55.86542097352813,76.67764327657582,65.56929956266234,51.369438078625784,39.95295492009,32.251424266134514,25.76149613251495,20.668346478928903,18.19770629294057,15.107976469419244,12.98493543831895,11.28117126386311,10.340589147553612,9.830770779287295,9.142118635191292,8.18690609124141,7.79851597662576,7.431292920004107,7.5341478839019365,7.882832838152761,8.670419628780317,9.397776582267994,10.289994503175565,12.9015850185867,16.735792774046928,19.99476230299755,23.945886354004585,29.95433378731421,39.19296810421109,49.55859874114887,58.297658406357826,65.50785565022066,72.68914763671383,104.24612656823788,87.44226085735421,69.06560971999775,50.32073186927437,36.123337028978554,26.661531554563005,21.461767190818144,17.589792031500657,15.24061559698899,13.107938143734735,11.354519695989618,10.386606043801917,9.838944162951416,9.231574230561453,8.38539574152746,7.831699360962437,7.48528698894793,7.634398163782137,8.135298996501476,8.749281483242111,9.380692794630788,10.614964653675061,13.238333358456819,16.97253947848054,21.610810960419155,25.182252759236462,32.39838941697333,44.171218069814465,56.74659017442797,69.78566957523961,89.55574556015718,108.80285258773613,159.5795562393919,130.8805255687619,90.31813491621534,60.0421856215072,41.49275321863639,29.32482686635726,21.668177060872456,17.3371356821959,15.178485067808294,13.327727562718726,11.253535869282553,10.423788563863175,9.787034441091842,9.443215884480002,8.543643849090223,7.998386998564096,7.710432242677589,7.89920880618696,8.338123667351045,8.733327756377253,9.603829545564714,11.28178978194319,13.567338391039879,18.358713894245295,23.041902152181613,27.834277069623926,36.59106165352677,48.81828795589338,66.92174464641698,91.96783661678955,127.96891349444861,154.53329869380323,224.80770864957842,179.77043479461912,123.50059845139837,77.72985195627996,49.27077958336772,31.764684376383045,22.485075799802868,18.309125668572733,16.433795900162703,13.6877835042215,11.983620383388955,10.72803579915886,10.339435934253904,9.647371515689025,8.678547729507397,7.908377156922045,8.179077730441955,8.19687284093449,8.494550985699535,8.820344522727986,10.201438772469423,11.73827639287387,15.02593004370379,20.645029038002832,26.28411067263568,31.075867215997253,37.483534347728245,53.84433487661013,80.46990226978717,116.26546821946468,172.54966320095502,228.96753655548974,309.78719189559854,256.05708017959756,175.68359833526623,105.62437218489312,63.23013835373606,38.382893067866796,25.7535711749085,20.590148031359234,16.739331260686704,14.786798351390802,12.36117685596625,11.799673812944498,10.377230417708628,9.382376333669995,8.55434575263302,8.4602804400971,8.457273589565942,8.567264312291222,8.93744834968554,9.535947162168387,10.53580956275212,13.041947079601202,16.89184234468233,23.987725148031487,29.826655436966995,33.087086449001376,38.7091607060674,57.35275332201325,91.33048200427605,151.98869039704,244.1968984893988,306.63257299286875,562.2186141052522,439.2795103319928,263.8463052599166,150.93744536633125,81.30924286665515,47.95198452386317,32.16327238486775,22.47884528771512,19.794027285196304,15.999059082232373,13.52813582962822,11.82587996277479,10.50686486587958,9.566282735322787,9.190804166916978,9.232112416401021,8.952191122239926,9.242959346939646,9.455036044447304,10.111101652499666,11.043046695375656,13.956644256748326,18.452791878453535,25.31303040694941,31.26708433258414,34.42369696468283,41.74327653311653,60.67666837556751,107.79772661917396,211.46669660189391,362.9446461846827,539.2907466312969,1043.064960359907,726.7026984582062,433.6133095322625,213.2106256913756,111.92503010834588,62.869223125902685,38.742976413983,27.235734551349324,23.9076101674235,19.021661277112635,14.478861048855546,12.91473015613936,11.29415092435573,10.513274350469626,10.161347795217747,9.948806980482875,9.71168992438174,10.105487112246305,10.48298906867363,10.893625186679529,12.211372744008356,14.812681614273641,19.489513580793123,27.031255662449723,33.63391272281395,41.52559874146754,52.57629039600815,71.52004843088102,132.98214831862995,289.32426118556515,618.0395600950308,984.7874618280689,1784.083505146894,1336.6568589814267,686.003231780718,318.39207128278593,159.1394426840578,76.10956832779843,44.05265888187656,31.991250392971853,27.978157381323108,22.294623912284028,16.8872277426774,14.610027556462216,12.424913044930783,11.119452781179971,11.066245600125109,10.840341477375128,10.807806034266576,11.213125876643852,11.747735381447885,12.282369668455885,13.73157344585606,16.96561371441783,22.496202298890438,32.407485359783124,45.85166507919449,53.24029570749542,65.99594469503667,98.09397174153547,176.43359667751176,441.208923375871,936.6630912289413,1577.4265763170022,2295.1409914972464,1683.7179352249,902.2628504825688,453.7513605151263,179.23484372919026,103.16047843117398,55.856624618502074,40.67272007657553,33.59311041396785,27.65339007023547,20.65771199167747,16.296926608708404,14.312459824747059,13.065794209061782,12.816996745648842,11.903201306554557,11.868475605254236,12.859628868618808,13.483685068827036,14.072758594539282,16.21111247415536,20.36512170665626,28.733103940874788,42.830591238304876,60.12257155947228,67.70941499278264,84.15107628881094,126.23242010647601,260.82616895243,614.2488252588045,1192.2295048012338,1787.3905923922525,2057.728505257306,1612.0404058137367,1062.2303232610243,410.0631232251907,237.8976161694511,127.19888958323968,82.56070198163133,50.68568207496404,41.620492531599325,34.0235712206376,26.201109009342684,20.289280537832823,18.09746697987034,16.092687824041846,15.306988390608383,14.533202056236956,14.40394505640487,15.08658385349593,16.47335478810048,18.1933850405101,21.278934963706888,28.14219415335708,39.482567042533006,55.964360327653644,73.66725513376396,91.12789293157849,127.37774106216477,189.68478304614982,343.98700964912905,736.2529767999998,1395.109052395176,2152.5952706253147,3792.021324606458,2037.977143592301,857.0528785536089,486.29648203694126,284.03430164886925,181.91972084309373,112.97176733844,73.59994664128712,59.574829012615204,49.11725258408404,37.19312003574272,27.472702254518456,23.45699842737447,20.329571180523697,18.806836162280476,17.698181326434526,17.585642163629327,19.004228801577025,20.77893664206141,23.250274731178163,28.04988180564844,35.429206551568925,48.20455338145283,66.20774509684051,90.7661067039026,117.95146004774013,163.04342130809306,253.9072077069139,362.850931786586,788.4497720201659,1627.1011647050398,2759.3366542985605,16084.74268346169,10212.960963472211,2163.5932265202296,657.0525363526643,321.82068054258923,262.71291650117286,174.75706127058845,123.19419955144714,93.46512922636784,74.87296871197394,58.64988180671873,40.850586549891496,33.39553720167711,28.713323989162756,24.75585903328349,23.59847647103166,23.138404805980127,23.77293624816566,26.753427300507926,32.45204862241451,38.4178119946685,47.80430165384316,72.004092864892,95.53783206710088,129.95938769710136,156.24359018004333,237.01058786311899,382.3973046442005,614.0817483175048,1377.4551350842296,2736.2851033168104,10028.51976985012,12454.694619943462,13565.815861293133,4518.422312124801,1871.6210271277425,914.2463340693118,596.14853228454,399.9492091846334,250.50030243800833,177.16967383039946,123.96413175241405,93.91676536356745,62.42660929674012,50.119262484447404,38.78004056055657,33.13572852856233,30.714909872552628,29.187336608781973,29.983374804996448,34.725029965122346,43.998829489125086,55.49608708093662,75.60900751432128,119.44976282467937,161.7107989330556,222.75623691150756,335.5815491134934,556.7335087890583,917.0553055607353,1403.2127508507556,2925.2286142376206,5473.1790170642225,7821.583390276545],imag:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},imag:[0,1.2364045139795619,-1.417097645517349,-.563991130501104,.4461220475293454,-.22857396866743723,-.12233724123958876,-.2217506337025343,-.08184765447899214,-.0821445284202198,-.016319194688300422,-.2278226981680879,-.31553723757062957,-.3462773758278895,1.228987349434353,.2371473197924402,0,-.2371473197924659,-1.2289873494343397,.34627737582788415,.31553723757063035,.2278226981680877,.01631919468830003,.08214452842021792,.08184765447899214,.22175063370252604,.12233724123959235,.22857396866743548,-.4461220475293452,.5639911305011042,1.4170976455173483,-1.2364045139795607,1.3606412475160685,1.4411916754234004,-.3363973770718067,-.400592898897314,.07786945045374206,.11933000679564014,-.37020072416606636,-.12600631152419078,-.2929172313060311,-.05068339188231875,-.2123566898458312,-.16517843825664788,-.3743892093980239,.24863698196016526,.3956337373323095,.6330846638456997,-.4264395724952261,-.28749903579454716,-.4230156803297583,.2797162376269552,.37808744252168813,.15296582393741,.10558339349178479,.08813592215903832,.16705843369252343,.44192642538865684,.2991522518142107,-.047649837051313024,-.9104604552681237,2.0668504460046964,1.0236217631956717,.09577502733112331,.7432738853191639,-.03456213195457008,.8636112375382173,.14688086473050152,-.480409603699644,.725531558693561,-.8786532261255596,-.4386512882244577,-.4857318707028599,-.32017932907631874,-.2830749986604581,-.26990648117356825,.02650526715020339,.07048596936827395,.5437098167860802,-.06793846381419581,.03776680164210118,-.5672727000472354,.7031723596162832,-.02113335643666033,.3877841945469715,-.021237638325898506,.22272564345822293,-.028529610958430065,.3838911656921847,.5401519230094508,.6089048453513496,-.5885198019984432,-.4425799571579083,-.3105478087846587,.29452233058397137,1.420373052298152,.5504297333386854,1.0635980503754177,-.3322328231573132,.34444399750770754,1.481298784591465,.2820348699677993,-.5064081488092492,-.6315271726552403,-.629560147993244,-.381439099170168,-.2602400449478186,-.19111004712688462,-.0074049384249937926,.04814578185161191,.1775395908501845,-.010766872600667563,-.3055754310904166,-.1279044678178969,.26497067484017217,.49718432792560446,.10847923107858634,.1836279844437401,.07579332872568043,.06091583791907436,.19352569039908019,.7248413105946724,.4476986361937191,.6572778182386981,-2.7705947112358387,-1.8545676439466314,1.253480431944275,-.3320127176659218,-.8817924518615257,-.49191197464707653,.25061306335904526,.36434278784189494,1.1059306596340364,.5161851914994362,-.5625934272912334,-.7981852522367001,-.5061427531741151,-.3345019295861077,-.24220392956380443,-.2936321736893144,-.008975674876931768,.015702042401798396,.004328761309678161,.11769772351691517,.14847974776257877,-.07040420542590121,.15992872157624444,.12352253662711207,.22950814490677918,.17507285276321555,.13747467644410705,-.011397583876153142,.1103654239578318,.24404333943616102,1.1434123865171273,-.6056618650285197,-1.3365493166122577,-1.133825005706898,-1.8155993788135394,-1.0591766157447149,-.6901024725301684,-.4661262670583974,-.20353239335470796,.5166385012265062,.2659701357580968,-.10657803670351902,-.6973013864661958,-.6010674473512339,-.335428005062553,-.3056428917979951,-.2667283201489782,-.19552146385155383,-.07081825322981734,.24716165183995586,.2487100107308503,.08790627274965952,-.06639276489870762,.11463822183417864,-.0973871145489355,.203187369929616,.14292038700683402,.20736891492564988,.013685307258532538,-.024371827339033106,-.07233585420108031,.49291782026044645,.048917424863979306,.2263553910474094,.10839909954530379,-1.1957108711898896,-1.074771579950879,-1.1175823884839045,-.23901621577757862,-.12877260884038383,.23623861798820722,.17111767858219226,.4620869054676118,-.23679486634226876,-.5317886241837987,-.34021620386249335,-.23658495591681358,-.22275756609764855,-.20572232603908905,-.1449473312771276,.04256966078595399,.07773307076521871,.20558191361174552,.03171963561705125,-.031869312918226284,.00924466716916557,.05690796487103113,.006811401556527948,.20608602740074444,.023033890597355222,.06494462602113064,-.08971160087534784,.051877409795188095,-.22207073062343796,.2424827691685977,.8293224240232046,-.0013771249391571728,-.05913901763736715,-.220679259578907,-.040068334939789486,.3067700518158289,.3449025548727411,.2222188244136875,.30818729583490434,.04165627319971488,.04389672863559383,-.30032839778423015,-.2424624650890286,-.178099692406481,-.14126159805998126,-.15553553242798068,-.11510723629505018,.024565620333015844,.09932497386133324,.11314958231531824,.10920785431914558,-.002747867764731495,-.002197448124614016,-.0699406561715515,.1465617772621658,.07877018936108643,.10241250352514093,-.021646587213105684,.019211160710794505,-.26281055993233693,-.05514681914050946,.35375643597531126,.22411418130009836,.3875457037899096,.25423051056794166,.30581901500051717,.08591146266209009,.39107302489471046,.24699055160378858,.29387297238508514,.15373347718831995,-.002984582508486469,-.01726020797163449,.0728272552276582,-.06208913525822485,-.11929552297831249,-.14454547803177953,-.09526826450768199,-.10089614648569632,.048761457544342565,.09609679137720413,.10529567915508571,.012037966893712556,.07634310058801329,-.20546035926376272,.13459193297647368,.025732944443593878,.15693288111736364,.04376164797318158,.08347929962968435,-.15251693996845875,-.10657849804550705,.03864181635108452,-.10231188547257405,.21957600785318707,.264774413728534,.35686545376814865,.2942848550600693,.4993413545698925,.1828568991437829,.23675610338446562,.10353827744151976,.06310794909144525,.03846587209017991,.136617176259979,.09812275535485428,-.003990620093458214,-.09009439550122221,-.16647262366552176,-.19237746196753996,.02664719406199056,.04850938386374907,.1654716680991411,-.03591479523938604,.09927373929001723,-.11264804489487676,.14792025966567318,-.09379152614028652,.10021979561886898,.008044972903133957,.2539938219386156,-.10951630791791984,-.03354812223332894,-.024275040060575473,-.15565555640319179,-.035231426543991154,.06348517358735144,.22814734409189322,.10684932807789806,.2355554633425988,.10407564589066262,.015525256999673128,-.011913601076877599,-.003929592004374066,.04470159355949418,.16547295203389104,.15907957720488838,.07466463078185209,-.04243906497357175,-.11246394245376416,-.1697242715154008,-.2153029085609272,-.1519575050165171,.40553391670472716,-.05507255324487554,.18488826926783164,-.03502892748503212,.3700138711951932,-.15325722566754377,.2716892969482076,-.05970121628039784,.48380889084850937,-.13017614472815323,.04767342132995452,.07130558425889642,-.15733503034508964,-.07959356603951166,-.07548582078045694,.06620598245919887,-.0012785498169557718,.06382739270218783,-.0024400785561267094,.050942947866382475,-.16777938781510365,-.09287604949663145,-.010378011540593757,.1594331602275639,.19523869399925237,.18464942262011227,.06328512198243717,-.07722165855118322,-.1491589460269398,-.17912928670535297,-.11490318286815507,-.11189726101521234,-.20487634390276235,.7649837592101456,-.23800865420158882,.7408363358679637,-.08384674801899719,.46372256496136105,-.1683495959766098,.8086039606875512,-.25555617026146216,.19463913189037535,.3009779498087988,-.16302064990391507,-.10690976611351247,-.13497815095121923,-.04977220128469868,-.07945189422396105,.04040760416145534,-.09194915079908203,-.14731166465811507,-.2649992211995451,-.15560186997026057,-.06949686732786686,.16530147427910571,.22324548858793775,.26718136730575287,.1916641951249017,.06093692301766854,-.08862623473412004,-.14658150061325853,-.1598833096185107,-.18630425886720847,.20226767939927157,-.0861423758749425,-.7776631130885305,1.4090153420038987,-.3038886842868152,1.2888777036518135,-.07447075817772283,1.2482190395029773,-.80123249840126,.47055407026248136,.7557719984574562,-.11037652666672627,-.05445836926306743,-.1991810754488677,-.10899116252888987,-.15332031366957818,.04365448634854576,-.022154991408309264,-.1523944889888934,-.19372066727324463,-.023769000914279543,.24457812931884867,.5172290601462988,.4305115414461968,.4535547011943914,.3493581281435395,.2107669845089832,.06395623914002005,-.043266091906771414,-.12307402164456596,-.17588597679362872,-.05716033563257766,-.0784239564694168,.14377922602722487,-.28610637890062873,-1.3867297053543113,2.707602155025657,-.12637740826622818,2.0046873376560574,-1.442367549533677,.4151690191416874,1.1637625900709285,.02187980097289477,.2119473473283329,-.11885489129254229,-.1159981397382039,-.1889926920183694,-.058557612447368006,-.043992442353640485,-.026879139952720663,-.0192982065162415,.11425895652801879,-.10204731321609413,1.0976378910336273,.7808329817202355,.7892686156410853,.6558593420029429,.41963945036689065,.2149537780289469,.10907743849349204,-.015003791740152183,-.0981083523247832,-.09998346191476838,-.14074054993981988,-.04922222307913471,-.6022563234411543,.1482255131870283,-.20779420774376042,-2.0348285284263787,4.025186119425146,-2.7420491756647705,.8073118378409511,1.5256751899261984,-.015777910213839702,.5648106146365885,.09474509067016074,.03230544111585742,-.15496296066268442,-.07089892296474551,-.15185446167165811,-.09901337883732231,-.03383919809283262,.20170996830425536,.31395340400286426,.9180493845319551,.9083748013224733,1.1212514777242175,.8111537128593137,.6546125277251835,.4481201828101785,.2933813386224918,.08094250654372658,-.004887613580663216,-.04204543783114793,-.048279129686226115,-.13748504879992385,-.22867414001479172,-.6520602138291955,-1.4414816884582773,.3490015618927237,1.2663064061664397,-4.451906943808227,2.3981175155339263,2.0366543361516527,-.11574419894478603,.9938253915317542,.4025305949854213,.2978752123577735,-.04812880127462812,.001834095689180732,-.06357806485663896,-.1491109787327997,-.17638384543546787,-.15061392115741762,-.13638564133647435,.3292785127452974,.4564601274895542,0,-.09838020244848457,.2889284460821786,.3998138477400701,.45036129401449043,.22152969012775114,.11073273247786891,.024117745722163984,-.005028012954253469,-.08710696057267951,-.08365344819547284,-.5152142695871454,-.8612426220912759,-.7893985113030451,-.7442322593539389,-1.1208061672534484,0,1.1208061672534437,.7442322593539381,.7893985113030426,.8612426220912766,.5152142695871439,.08365344819547249,.08710696057267933,.005028012954253469,-.02411774572216354,-.11073273247786865,-.22152969012775126,-.45036129401449054,-.39981384774006945,-.2889284460821784,.09838020244848424,-.9083748013224145,-.4564601274895271,-.32927851274525655,.13638564133649642,.15061392115742586,.17638384543547556,.14911097873280194,.0635780648566394,-.0018340956891807838,.04812880127462774,-.2978752123577729,-.40253059498541977,-.993825391531751,.11574419894478773,-2.0366543361516536,-2.39811751553392,4.451906943808238,-1.2663064061664346,-.34900156189272086,1.441481688458285,.6520602138291958,.22867414001479336,.13748504879992438,.04827912968622815,.042045437831148495,.004887613580664909,-.08094250654372509,-.2933813386224868,-.44812018281017507,-.6546125277251672,-.8111537128592801,-1.1212514777241573,-1.0976378910335893,-.9180493845319213,-.31395340400284805,-.2017099683042456,.033839198092839695,.09901337883732686,.1518544616716597,.07089892296474593,.15496296066268506,-.032305441115858605,-.09474509067015939,-.5648106146365897,.01577791021384034,-1.5256751899262007,-.8073118378409491,2.742049175664779,-4.02518611942514,2.03482852842639,.20779420774376556,-.14822551318702654,.6022563234411564,.04922222307913573,.14074054993982205,.09998346191477035,.09810835232478354,.015003791740153814,-.10907743849349157,-.21495377802894516,-.4196394503668887,-.6558593420029402,-.789268615641069,-.7808329817202074,-.24457812931883488,.10204731321609872,-.11425895652800651,.019298206516249916,.026879139952725083,.04399244235364598,.058557612447370934,.18899269201837068,.11599813973820411,.11885489129254237,-.21194734732833254,-.02187980097289353,-1.1637625900709312,-.4151690191416833,1.4423675495336772,-2.0046873376560503,.12637740826623128,-2.7076021550256497,1.3867297053543175,.2861063789006335,-.143779226027226,.07842395646942202,.05716033563257912,.1758859767936318,.12307402164456618,.04326609190677271,-.06395623914001951,-.21076698450897985,-.3493581281435364,-.4535547011943848,-.4305115414461896,-.5172290601462894,.15560186997025938,.02376900091427863,.1937206672732435,.15239448898889424,.022154991408310377,-.043654486348542874,.15332031366958024,.10899116252889095,.1991810754488677,.054458369263066984,.11037652666672665,-.7557719984574531,-.4705540702624809,.8012324984012641,-1.2482190395029769,.07447075817773094,-1.2888777036518133,.3038886842868241,-1.4090153420038936,.7776631130885349,.08614237587494372,-.2022676793992712,.1863042588672104,.15988330961851227,.14658150061325848,.08862623473412022,-.060936923017667906,-.19166419512490052,-.26718136730575015,-.22324548858793625,-.16530147427910316,.06949686732786675,.16777938781510615,.2649992211995447,.14731166465811715,.0919491507990829,-.04040760416145386,.07945189422396387,.049772201284700876,.13497815095122018,.10690976611351256,.16302064990391416,-.3009779498087981,-.19463913189037552,.2555561702614637,-.8086039606875491,.16834959597661264,-.46372256496135666,.08384674801899664,-.7408363358679616,.23800865420159104,-.7649837592101448,.20487634390276502,.11189726101521356,.11490318286815554,.1791292867053549,.14915894602693922,.0772216585511834,-.06328512198243683,-.18464942262010964,-.19523869399925042,-.15943316022756263,.01037801154059478,.09287604949663382,-.015525256999667727,-.050942947866376924,.0024400785561280833,-.06382739270218761,.0012785498169549515,-.06620598245919762,.07548582078045817,.079593566039512,.1573350303450895,-.07130558425889703,-.0476734213299555,.13017614472815361,-.48380889084851014,.05970121628039872,-.27168929694820493,.1532572256675474,-.37001387119519286,.03502892748503371,-.18488826926782947,.05507255324487735,-.4055339167047277,.15195750501651886,.2153029085609278,.1697242715154005,.11246394245376394,.04243906497357169,-.07466463078185144,-.159079577204887,-.16547295203388937,-.04470159355949411,.003929592004374638,.011913601076878649,-.1828568991437799,-.10407564589066134,-.23555546334259525,-.10684932807789757,-.22814734409189458,-.06348517358734926,.035231426543992535,.15565555640319106,.02427504006057549,.03354812223332628,.10951630791791925,-.2539938219386176,-.008044972903134084,-.10021979561886678,.09379152614028896,-.14792025966567243,.11264804489487593,-.09927373929001457,.03591479523938799,-.1654716680991405,-.04850938386374761,-.02664719406199113,.192377461967541,.16647262366552154,.09009439550122157,.003990620093459625,-.09812275535485344,-.1366171762599761,-.03846587209018027,-.0631079490914464,-.10353827744152141,-.2367561033844639,-.39107302489471046,-.4993413545698927,-.2942848550600695,-.35686545376814893,-.2647744137285342,-.21957600785318782,.10231188547257429,-.038641816351083894,.10657849804550705,.15251693996845886,-.08347929962968535,-.043761647973181945,-.1569328811173635,-.02573294444359092,-.13459193297646968,.2054603592637699,-.07634310058801329,-.012037966893705314,-.10529567915508307,-.09609679137720112,-.048761457544342024,.10089614648569795,.0952682645076824,.14454547803178003,.11929552297831249,.062089135258225896,-.07282725522765716,.017260207971635976,.0029845825084865137,-.15373347718831978,-.29387297238508514,-.24699055160378858,-.3067700518158321,-.08591146266209564,-.3058190150005192,-.25423051056794305,-.3875457037899132,-.22411418130009808,-.3537564359753084,.055146819140510416,.2628105599323362,-.019211160710796572,.021646587213104713,-.10241250352514171,-.07877018936108618,-.14656177726216213,.06994065617155748,.002197448124624663,.002747867764730379,-.10920785431913549,-.11314958231531393,-.0993249738613295,-.024565620333014605,.11510723629505158,.15553553242798132,.1412615980599799,.1780996924064803,.24246246508902825,.300328397784228,-.04389672863558922,-.04165627319971637,-.30818729583490695,-.22221882441369153,-.3449025548727439,.23901621577757753,.04006833493978915,.22067925957890494,.05913901763736636,.0013771249391555669,-.8293224240232032,-.2424827691685955,.2220707306234446,-.05187740979518813,.08971160087534878,-.06494462602113076,-.023033890597353883,-.20608602740074317,-.006811401556518173,-.05690796487102039,-.009244667169144016,.03186931291822486,-.03171963561703066,-.2055819136117401,-.07773307076521087,-.042569660785952056,.14494733127713064,.20572232603908944,.2227575660976475,.23658495591681294,.3402162038624952,.5317886241837994,.2367948663422716,-.4620869054676115,-.17111767858219507,-.23623861798820922,.12877260884038208,.690102472530167,1.1175823884838996,1.0747715799508781,1.1957108711898863,-.10839909954530788,-.2263553910474054,-.04891742486397395,-.49291782026044056,.07233585420108059,.024371827339035017,-.013685307258532536,-.2073689149256469,-.1429203870068314,-.20318736992960118,.09738711454895084,-.11463822183415182,.06639276489870634,-.08790627274963889,-.24871001073084317,-.24716165183994784,.07081825322981992,.19552146385155544,.2667283201489779,.3056428917979906,.3354280050625516,.6010674473512297,.6973013864661962,.10657803670352221,-.26597013575809814,-.5166385012265116,.20353239335470413,.46612626705839527,.8817924518615256,1.0591766157447142,1.81559937881354,1.1338250057069015,1.336549316612259,.6056618650285254,-1.143412386517127,-.24404333943615408,-.11036542395783162,.0113975838761526,-.1374746764441064,-.17507285276321236,-.229508144906775,-.1235225366270939,-.15992872157622667,.07040420542593133,-.14847974776257952,-.11769772351689584,-.0043287613096706385,-.01570204240179094,.008975674876936093,.2936321736893157,.24220392956380496,.33450192958610414,.5061427531741152,.7981852522366981,.5625934272912321,-.5161851914994344,-1.105930659634037,-.36434278784189805,-.2506130633590454,.49191197464707476,-.5504297333386833,.33201271766592266,-1.2534804319442674,1.8545676439466376,2.7705947112358396,-.6572778182386966,-.4476986361937145,-.724841310594671,-.19352569039907921,-.06091583791907576,-.07579332872568335,-.18362798444373865,-.10847923107858076,-.4971843279255892,-.26497067484015147,.1279044678179279,.3055754310904159,.010766872600696822,-.17753959085018053,-.04814578185160058,.007404938424997059,.1911100471268881,.260240044947818,.38143909917016594,.6295601479932434,.6315271726552409,.5064081488092473,-.28203486996779953,-1.481298784591466,-.34444399750770943,.33223282315731145,-1.0635980503754157,-.7432738853191642,-1.4203730522981521,-.29452233058397176,.3105478087846589,.4425799571579111,.5885198019984471,-.608904845351347,-.5401519230094439,-.3838911656921845,.02852961095842791,-.22272564345822352,.021237638325899852,-.387784194546968,.021133356436687064,-.703172359616261,.5672727000473203,-.037766801642101375,.06793846381428098,-.5437098167860644,-.0704859693682512,-.02650526715020184,.26990648117357596,.2830749986604576,.3201793290763222,.48573187070286,.4386512882244713,.8786532261255616,-.7255315586935562,.48040960369964236,-.14688086473049994,-.8636112375382178,.034562131954569586,-1.3606412475160699,-.0957750273311256,-1.0236217631956728,-2.0668504460046977,.9104604552681247,.04764983705131218,-.29915225181420874,-.4419264253886607,-.16705843369252318,-.08813592215903708,-.1055833934917848,-.1529658239374068,-.37808744252168625,-.2797162376269429,.42301568032977793,.28749903579456393,.42643957249522774,-.6330846638456163,-.39563373733228846,-.2486369819601503,.3743892093980236,.1651784382566546,.21235668984583117,.05068339188231969,.2929172313060312,.12600631152419559,.3702007241660689,-.11933000679563836,-.07786945045374266,.4005928988973134,.33639737707180556,-1.4411916754233998],height:32,width:32,top:{real:[6327.007467982786,12787.448651417644,-8580.13577826938,-6564.429625192605,1064.8969915597925,-1614.7722808334524,-60.04811942184231,-221.12968025641604,-12.445754708845573,-62.94058771358334,23.82057845345795,-28.525301748952867,37.86428012515434,-85.844490405628,27.49381496964307,-48.15197444336273,41.39966019930714,-48.151974443360345,27.493814969642067,-85.84449040562787,37.86428012515403,-28.52530174895269,23.82057845345851,-62.94058771358404,-12.445754708845573,-221.12968025641445,-60.048119421842806,-1614.7722808334493,1064.8969915597932,-6564.429625192613,-8580.135778269385,12787.448651417659,-17213.595236981997,544.0730266990294,-10829.417860945707,-5794.121923108305,-1103.8692252742003,-1120.3666800727638,-106.61462896985108,-117.89522553300084,-39.30843089365121,-26.96057805653429,-11.02504742288635,-2.1850531713376355,-7.295269738362588,-14.472211987615461,-14.23279965231924,3.5205960317557246,-19.62974773437861,-14.131264529804582,-22.272265924680642,-17.401343902608428,-1.7416101263052008,.34733716754184635,-16.60063574625633,-32.47390190466588,-64.31481385096977,-84.0347536394093,-258.3227844043639,-714.3011765913042,113.1165060355228,-2806.7151144576005,-10882.302955904926,-27817.100568112113,-27745.70849411807,-22841.4208450087,-8553.526467468835,-4085.033989629072,-1748.9561003744159,-545.3354386545253,-146.45498278007594,-40.80544006189128,-50.06021298226216,-16.73048944848435,-23.62313915150434,.36714120063527833,-7.188290919780933,6.414260409354566,-14.833291452397129,3.4669422259569203,-16.161012153790594,-21.28313017801196,-13.244388638951026,-1.2754674400463286,.4918466117149978,-11.472717532816317,-17.53068940264937,-29.523444921912187,-36.98341868022681,-91.5973512360268,-144.17841735614732,-486.41083616652156,-239.1204206916959,139.0089391760282,-7153.157795026505,-18373.599790964956,-8415.922731585739,-6467.554677983386,-5469.658567600724,-2789.7914675082047,-821.4826713748977,-514.7145420030545,-122.6780822655295,-35.554593402553344,-32.90518481960786,-16.87597750619218,-9.124394819051188,-4.180262031874417,.783160840973908,-.8247362446257293,-6.027703935454679,-6.850242789892616,-6.885859335051412,-14.551844205848809,-8.459298914659914,-1.9950695133570466,1.5394495557011576,-9.232834653609892,-11.961754213185406,-20.558561534905806,-38.14482496917136,-57.16086990533409,-157.5554953403844,-411.2008243286849,-110.1193097574614,-463.64281724562954,-1210.9754315912523,-4810.1023052011815,-2624.9192342435695,-4516.897453633137,-3582.982491421491,-2119.74991736369,-750.2347266447723,-159.86878938364373,-96.80572891910141,-16.935754226078267,-22.178078450833883,-9.009222722598976,-5.445485292050662,-2.526888256673675,-2.621952349894846,-2.0534180946008638,-6.464306480423622,-8.721406530014862,-7.012703187407293,-7.7847619200438425,-.7812180190370879,-.11031060182209244,-3.431895986699017,-4.568083040130742,-9.316020064156948,-15.87900618307528,-23.382201868158507,-37.98940473063752,-121.95929165874175,-201.43809047465336,-567.3037269017944,-610.3631285378248,-1937.2376557226703,-2694.0942422163184,-3481.535597542074,-3026.0617140239533,-2506.491638388831,-1355.157669171596,-468.0599091435185,-33.397814851582154,18.54533148158398,-29.439943085485314,-11.922803368680741,-7.717457984896304,-2.788860330209426,-2.054500633053642,-1.0224301618297007,-2.5290059501700397,-2.6199349314032494,-4.882873145781677,-5.6140621268617785,-3.6146413255535528,-.829674845027506,-1.1631844631411599,-1.17362456930955,-3.7427284368684024,-6.617827065642342,-8.803949843157813,-13.481606634721874,-26.682014936266803,-32.97802138197703,-190.87870662958537,-335.07671606134033,-876.9552218570499,-1470.8308615232113,-2413.1056871868645,-2329.4915082040015,-2151.926578142459,-1438.5211303616525,-713.0815238595347,-130.56706965452,-28.862997769748436,1.7115783105395304,-2.3079138134833856,-11.650001060370576,-2.170189504369732,-1.7033561682904694,.11972955037883275,-.5790790812653609,-.45369004788794814,-4.0202584980239315,-2.2874964618085922,-4.043969331388718,-2.714411694103757,-.7843149712055903,-.6337786214807561,-.8354288746558204,-2.5417481635934216,-3.449779845211915,-5.2729359146939485,-9.332533768451485,-2.348077722091996,-30.998957295773433,-62.717085150656224,-255.55592612696097,-515.5540381395323,-1077.4118984564277,-1959.4321649356718,-996.1706325647543,-957.5829658424543,-646.4812454670936,-264.6323709027533,-80.5183401631437,1.357764038030833,-10.209813205700032,-1.6455702447745924,.04156410545341299,-2.111433611523795,.09477041994978236,-.5991594867560358,-.04280607522064791,-1.4583889440112543,-1.0515624140257636,-2.624261072572436,-1.9962698899057387,-2.637358088895228,-.39414295752688255,-.8095209882094745,-.8093550401978136,-1.831598128086258,-2.395778121988731,-3.7775973636187947,-1.2762438485839673,-5.873618704707699,-1.7472058496177199,-39.26171578474986,-103.67045476207605,-221.97901463800724,-486.52939506954147,-770.8638520171584,-324.5340145618874,-340.76561269504333,-198.9419784129981,-116.98390967138687,-32.55200245568722,-2.8647426984892057,3.4567160839115996,-2.331005269373194,-.31982529888503974,1.0641170511547686,-1.1693860348016079,.407002126956675,-1.0092937918537679,-.03498515495516123,-1.1746986822405672,-2.25833192615608,-2.3742700657768196,-2.0999344700147127,-1.3199204785521135,-.00726121067659493,-.21997349279604808,-1.6799449140427334,-2.573626149077699,-1.274902979707558,-2.9722975102588807,1.1149262389696764,-3.782557414370513,-8.811283856834226,-31.380656277665604,-80.81570649485545,-151.2920880811312,-231.73584987382,-71.71934076037124,-68.36402933689453,-82.30497530908133,-39.76913656733262,-12.693902195545155,1.984203566270604,-.4889435407745263,1.5673786316984977,-1.1528550937233366,-.047905313676576855,1.0650111541187497,-1.4670778837513785,.9015484382771278,-2.0067122081730173,-1.7180755446076856,-3.3483434682482898,-1.6317774897434336,-3.470880426438495,-1.4694727348954268,-.10257790692130256,-.9288963638157178,-2.5451436559397584,-1.1303995452351283,-2.8871606625355204,-.49805533537312113,-.4387193422815815,.7490974196906504,1.439791857975526,-13.026034555561825,-28.484337861014367,-36.89517840676591,-72.2311900358384,-26.809485534889244,-56.94273379652035,-36.28010742942203,-18.09907931367515,-3.2627913287121535,-.2706547580504817,1.1511525903295716,-.1898870363801409,.9708722088802537,-1.132641237042418,.1998130176636337,2.307680270293133,-2.549840775656603,-.5553262362525304,-4.506786497033707,-3.1791416623515807,-4.407810096297031,-3.312559231697057,-.8611731352773999,-1.5893272599995412,-2.966763176308445,-.10263295233944174,-3.9090515756474873,-1.1809123553765606,-1.20382750933502,.286248057198718,1.853681713247669,.8072002923997494,-5.576914824230862,-9.876045833403877,-26.746787584056406,-25.156847324745275,-59.858730768373135,-40.90948134422029,-31.301364606284917,-12.99289618826553,-3.374775686900119,2.018530777741562,-.2260612077575776,.20594677690592242,-.3240322568825497,2.6342781156582364,-.20787587650621794,.020021422684959465,2.4168167113542753,-5.471113939106749,-4.016235227521675,-8.261492540220937,-5.359721289980835,-3.561851886896915,-2.433206189931258,-3.72732750056158,1.9796458045760836,-5.619455249505039,-1.3533084788499918,-2.5312603283156982,-.7357741299886245,1.05348708564852,1.9641802030644013,2.686394865901931,.1517907769810002,-13.505006616733285,-24.652619118640313,-46.54077201833177,-65.57386282564879,-62.198686950727755,-33.36748135977328,-15.462856466374785,1.276482037672726,.652383510779166,.11426292455840634,-.28574074744887695,1.1004477970868616,1.5327652909312646,4.932711200240519,-2.7503236900904393,-3.9754701567757182,-.834512135731142,-9.685955117463603,-6.000630422824884,-7.13182532638587,-4.985642454964987,-8.219869288149797,4.4471445589999075,-5.912419213682183,-1.066228559248251,-4.532002002354178,-2.2691032318803455,-.2959592999178123,.95069246916244,2.9800299945570488,4.175488865046039,-3.9368165535394617,-16.75239131732446,-41.14171229985143,-60.64390251212476,-84.34316473215777,-54.07497231667312,-32.1478368384324,-3.8004568077904586,.609063700223492,.9632657107050296,.12072436644318041,.8631954755084683,1.1644302862121145,2.3252453178811563,.4766448788746544,4.289515874709642,-8.009939850720517,-11.261414242734404,-3.732740466180737,-6.1601929909303115,-5.750665733944118,-11.117751544185502,4.305411514823387,-8.211608570347876,1.5649721654809707,-5.692142411938895,-3.494908667188049,-2.1697325908161673,-.6954156264880039,.8151347377023449,3.491384396197289,3.712841092827461,-.2846190491444036,-14.694115553922865,-40.78417179777688,-76.1290979979302,-42.44654416844914,-35.20072244442639,-7.684968530920968,-.867788767062698,1.7056687310546401,.5197495279873948,1.131675911228874,1.212780060538119,2.222121429321137,.8361427470500683,.09954660645280876,-3.106693968311659,2.4769973579809332,-11.745899626687375,-12.566716735550758,-4.784372252544112,-8.604058870064595,5.351103402740868,-15.66778198729919,3.3911987930307137,-8.125945789685659,-4.798036588740434,-2.1471667518999764,-2.508724157326058,-.860976568717486,.8013954360837776,2.3927476350849495,5.65616272254561,4.625019584724071,-10.360873371570062,-32.18376694299341,-40.627648783043085,-17.95302681367091,6.185941644460162,4.4451711191118575,6.213331251274599,3.3587096432927233,.7556965076296271,.8242995843017912,1.6770717987294814,1.487507854284298,.5750646130151693,-1.8616897808321822,-4.292331488605052,-7.016130789435238,4.852626568656962,-11.625945416074895,-21.07467865045702,3.143448295571389,-12.714871655934468,2.366640700254353,-11.17366154497929,-6.475058123170597,-2.9596627855411386,-2.763079045935563,-1.4122750319888788,-.5580228906711165,.4050996560161985,3.054950312292098,4.5519407117959005,5.504486591127148,2.884340309618711,-2.0306279174386637,-12.290279126535582,30.20785901727286,12.45094729737127,8.741596108674122,10.304484703022888,4.231031360287155,1.8368366318675937,1.9910666876255574,.991563036763885,.31747940339256003,-.6024560594659747,-1.5054245711483085,-5.204747979185773,-4.698542589986817,-6.440605765726458,-2.431796520269472,-.318061102868901,-34.61437498430425,-.3180611028689131,-2.431796520269478,-6.440605765726465,-4.6985425899868325,-5.2047479791858065,-1.505424571148318,-.6024560594659905,.31747940339256003,.9915630367638866,1.9910666876255707,1.836836631867627,4.231031360287185,10.30448470302293,8.741596108674146,12.450947297371268,-17.95302681366921,-12.290279126534008,-2.0306279174386814,2.8843403096185996,5.504486591127181,4.5519407117958774,3.0549503122920303,.40509965601617365,-.558022890671132,-1.4122750319888866,-2.763079045935566,-2.9596627855411324,-6.4750581231706095,-11.173661544979305,2.3666407002543774,-12.714871655934495,3.1434482955713383,-21.074678650457034,-11.625945416074918,4.852626568656909,-7.016130789435253,-4.292331488605082,-1.8616897808321802,.5750646130151582,1.4875078542843145,1.6770717987294999,.8242995843018388,.7556965076297252,3.3587096432928165,6.21333125127526,4.445171119112939,6.185941644460696,-42.44654416844733,-40.62764878304236,-32.18376694299287,-10.36087337156992,4.625019584724104,5.656162722545562,2.392747635084909,.8013954360837462,-.8609765687174984,-2.5087241573260646,-2.1471667518999924,-4.798036588740434,-8.125945789685682,3.391198793030713,-15.66778198729918,5.351103402740785,-8.604058870064568,-4.7843722525441965,-12.56671673555077,-11.745899626687423,2.4769973579809226,-3.1066939683116837,.09954660645280862,.8361427470500621,2.2221214293211515,1.2127800605381271,1.1316759112289154,.5197495279874628,1.7056687310547414,-.8677887670623313,-7.684968530920446,-35.20072244442443,-84.3431647321563,-76.12909799792908,-40.784171797776416,-14.694115553922703,-.28461904914431585,3.712841092827477,3.4913843961972515,.8151347377022745,-.6954156264880174,-2.169732590816195,-3.494908667188057,-5.692142411938915,1.5649721654809774,-8.211608570347895,4.3054115148233585,-11.117751544185527,-5.750665733944103,-6.160192990930285,-3.732740466180779,-11.261414242734437,-8.009939850720519,4.289515874709647,.47664487887466933,2.3252453178811465,1.164430286212123,.8631954755084824,.12072436644322472,.9632657107051639,.6090637002236494,-3.800456807789966,-32.147836838431445,-54.074972316672174,-65.57386282564865,-60.643902512124406,-41.14171229985112,-16.752391317324395,-3.936816553539381,4.175488865046039,2.98002999455701,.9506924691624021,-.295959299917824,-2.26910323188035,-4.532002002354194,-1.0662285592482377,-5.912419213682192,4.447144558999873,-8.21986928814978,-4.9856424549649665,-7.1318253263858535,-6.000630422824882,-9.685955117463573,-.8345121357311588,-3.9754701567757316,-2.7503236900904167,4.932711200240523,1.5327652909312637,1.1004477970868634,-.2857407474488868,.11426292455844969,.6523835107792659,1.2764820376728394,-15.462856466374522,-33.367481359773095,-62.19868695072734,-59.85873076837255,-46.54077201833131,-24.652619118640224,-13.50500661673309,.15179077698109764,2.686394865901908,1.9641802030643754,1.0534870856484704,-.7357741299886327,-2.5312603283157147,-1.353308478849978,-5.619455249505026,1.979645804576063,-3.7273275005615623,-2.4332061899312447,-3.561851886896878,-5.35972128998084,-8.261492540220898,-4.016235227521694,-5.471113939106738,2.416816711354272,.020021422684962133,-.20787587650621156,2.6342781156582284,-.3240322568825613,.20594677690590416,-.22606120775752253,2.01853077774176,-3.3747756868998953,-12.992896188264998,-31.301364606284267,-40.909481344219984,-26.809485534888527,-25.156847324744817,-26.74678758405601,-9.876045833403781,-5.576914824230828,.8072002923997806,1.8536817132476344,.28624805719868845,-1.2038275093350328,-1.1809123553765482,-3.9090515756474855,-.10263295233946072,-2.9667631763084428,-1.589327259999552,-.8611731352773833,-3.3125592316970565,-4.407810096297022,-3.179141662351582,-4.5067864970337235,-.5553262362525373,-2.549840775656593,2.30768027029313,.19981301766362944,-1.1326412370424508,.9708722088802425,-.18988703638015317,1.1511525903296145,-.27065475805034434,-3.2627913287119403,-18.099079313674878,-36.28010742942166,-56.94273379651932,-71.7193407603689,-72.2311900358364,-36.895178406764366,-28.484337861013827,-13.026034555561461,1.4397918579755735,.7490974196906212,-.4387193422816503,-.49805533537312413,-2.8871606625355364,-1.130399545235152,-2.5451436559397544,-.9288963638157319,-.10257790692130979,-1.4694727348954375,-3.47088042643851,-1.6317774897434372,-3.3483434682483164,-1.7180755446077083,-2.006712208173023,.9015484382771369,-1.4670778837513718,1.0650111541187297,-.047905313676639846,-1.1528550937233546,1.5673786316984972,-.48894354077444435,1.9842035662707793,-12.693902195544938,-39.769136567331614,-82.30497530907938,-68.36402933689251,-324.5340145618874,-231.73584987382011,-151.29208808113108,-80.8157064948556,-31.380656277665615,-8.811283856834311,-3.7825574143705687,1.114926238969638,-2.9722975102588807,-1.2749029797076188,-2.573626149077714,-1.679944914042758,-.21997349279605258,-.007261210676620465,-1.3199204785521295,-2.09993447001476,-2.3742700657768196,-2.2583319261561177,-1.1746986822405874,-.0349851549551673,-1.009293791853766,.40700212695667115,-1.169386034801607,1.0641170511547318,-.31982529888503974,-2.3310052693731778,3.456716083911618,-2.864742698489133,-32.55200245568721,-116.98390967138671,-198.9419784129981,-340.7656126950431,-996.1706325647434,-770.863852017153,-486.52939506953675,-221.97901463800537,-103.67045476207502,-39.261715784749725,-1.7472058496176825,-5.873618704707824,-1.2762438485839995,-3.7775973636188502,-2.3957781219887693,-1.831598128086283,-.8093550401978216,-.8095209882094927,-.3941429575269055,-2.637358088895282,-1.9962698899057312,-2.6242610725724247,-1.0515624140257607,-1.4583889440112356,-.042806075220638506,-.5991594867560418,.09477041994976447,-2.111433611523809,.04156410545339216,-1.645570244774569,-10.20981320570001,1.357764038031177,-80.51834016314297,-264.63237090274987,-646.481245467088,-957.5829658424444,-2329.4915082039943,-1959.4321649356684,-1077.4118984564245,-515.5540381395323,-255.55592612696057,-62.717085150656416,-30.998957295773568,-2.348077722092276,-9.332533768451471,-5.272935914694109,-3.4497798452119492,-2.5417481635934838,-.8354288746558232,-.6337786214808031,-.7843149712056035,-2.714411694103749,-4.043969331388717,-2.2874964618085487,-4.020258498023898,-.4536900478878949,-.5790790812653498,.1197295503788481,-1.7033561682904654,-2.170189504369725,-11.650001060370577,-2.3079138134832218,1.7115783105395919,-28.86299776974782,-130.5670696545195,-713.0815238595312,-1438.5211303616488,-2151.926578142451,-3481.535597542063,-2413.1056871868605,-1470.8308615232086,-876.9552218570503,-335.07671606133954,-190.87870662958562,-32.978021381977214,-26.682014936266988,-13.48160663472185,-8.803949843157923,-6.6178270656423885,-3.7427284368684086,-1.1736245693095617,-1.1631844631411714,-.8296748450274833,-3.6146413255534444,-5.614062126861783,-4.8828731457814465,-2.619934931403141,-2.5290059501698665,-1.0224301618296836,-2.0545006330535864,-2.788860330209389,-7.717457984896257,-11.922803368680738,-29.439943085484902,18.545331481584157,-33.39781485158058,-468.0599091435166,-1355.1576691715877,-2506.491638388823,-3026.0617140239456,-2624.9192342435676,-2694.0942422163216,-1937.2376557226696,-610.3631285378265,-567.3037269017948,-201.4380904746546,-121.9592916587422,-37.98940473063803,-23.38220186815851,-15.879006183075566,-9.31602006415698,-4.568083040130774,-3.431895986699037,-.11031060182210287,-.7812180190371311,-7.784761920043757,-7.012703187407289,-8.721406530014612,-6.46430648042343,-2.0534180946007163,-2.62195234989481,-2.526888256673632,-5.445485292050623,-9.009222722598933,-22.17807845083391,-16.93575422607804,-96.80572891910084,-159.86878938364163,-750.2347266447713,-2119.7499173636857,-3582.9824914214882,-4516.897453633135,-8415.922731585722,-4810.102305201169,-1210.9754315912437,-463.6428172456313,-110.11930975746253,-411.2008243286865,-157.55549534038482,-57.16086990533496,-38.144824969171324,-20.558561534906186,-11.961754213185522,-9.232834653609975,1.5394495557011911,-1.995069513357094,-8.459298914659838,-14.5518442058491,-6.885859335051412,-6.850242789892523,-6.027703935454709,-.8247362446255362,.7831608409739802,-4.180262031874306,-9.124394819051078,-16.875977506192154,-32.90518481960786,-35.55459340255284,-122.67808226552924,-514.7145420030503,-821.4826713748957,-2789.7914675081947,-5469.658567600714,-6467.554677983375,-27745.70849411805,-18373.599790964956,-7153.157795026502,139.0089391760178,-239.12042069169632,-486.41083616652713,-144.17841735614894,-91.5973512360294,-36.9834186802268,-29.52344492191359,-17.530689402649603,-11.472717532816715,.49184661171508715,-1.2754674400467305,-13.244388638951113,-21.283130178012485,-16.161012153790605,3.4669422259560148,-14.833291452397047,6.414260409354707,-7.18829091978077,.3671412006354383,-23.623139151504223,-16.730489448483766,-50.06021298226216,-40.80544006189026,-146.45498278007528,-545.3354386545192,-1748.9561003744159,-4085.033989629059,-8553.52646746883,-22841.42084500867,-17213.59523698198,-27817.100568112102,-10882.302955904914,-2806.7151144576032,113.11650603552238,-714.3011765913102,-258.32278440436545,-84.03475363941075,-64.31481385096976,-32.473901904667066,-16.600635746256838,.34733716754136956,-1.7416101263050108,-17.401343902608698,-22.27226592468065,-14.131264529805808,-19.62974773437863,3.5205960317556224,-14.232799652319452,-14.47221198761537,-7.295269738362605,-2.1850531713375,-11.025047422886134,-26.960578056534132,-39.30843089365128,-117.89522553299832,-106.61462896985047,-1120.3666800727583,-1103.8692252741987,-5794.121923108299,-10829.417860945698,544.0730266990613],imag:[0,39515.399789254865,-15382.502646592808,-2918.5213899411633,1191.3150820979915,-345.8052698718326,-91.96349756116432,-108.0683025974378,-23.43132760503778,-16.61081082295881,-2.2742971526945692,-21.94540337447156,-21.27242040257718,-19.057735286082725,52.37631312091274,8.852197502614422,0,-8.852197502615361,-52.376313120912044,19.05773528608244,21.27242040257723,21.945403374471546,2.2742971526945164,16.61081082295847,23.43132760503778,108.06830259743377,91.96349756116703,345.8052698718299,-1191.315082097991,2918.521389941166,15382.502646592799,-39515.399789254865,16946.371225111547,11272.40087069651,-1841.163065584854,-1171.8258105148211,109.267405778432,109.43221584454041,-206.10314812122442,-42.28539321936541,-65.24914017226911,-8.196051793926907,-25.36595623631852,-12.488977779350739,-20.777136166915728,10.939736173955986,13.738393384077787,18.982014759380824,-12.446635345723246,-8.830506972875275,-14.016932746731957,10.847407040619599,18.949463773817904,9.549137726694633,9.916050792857149,10.925693066643545,29.5976882079218,110.70270321520633,119.64570653889598,-28.406380421737747,-832.3851335439583,3868.3607546707453,4625.155413999855,1299.266384884336,11955.36918869557,-346.60702359457474,2363.08656433282,202.32180136864196,-295.0107693483969,277.4413124787238,-208.25011765184485,-68.53645210929017,-63.125416501511275,-30.589238972650307,-20.382558491276782,-12.902690844348575,1.0182743702449766,2.287414105137245,14.546101055958879,-1.6150967690531892,.8738635446220925,-13.38677146472326,17.407635810762027,-.6068089103442856,12.950261495215786,-.8675699825474084,13.062832664150156,-2.136096668655318,35.88043741028102,66.54358379132412,106.41042136702396,-154.61175360170367,-142.4313830070681,-204.04622542072212,637.2265195104327,14506.214536688893,2087.241286517743,2934.8250858413794,-540.5764135125077,271.5767913086672,537.4906442433505,71.61068630950663,-82.56651716015784,-74.48955207450676,-57.14272356927949,-25.254222647826957,-12.544755138678799,-6.770877333738462,-.2077076475991805,1.1194026551973495,3.6890839097334878,-.20461611038051675,-5.373740185152839,-2.2636764639022453,4.983260069528009,10.10754418440443,2.544597152813191,5.044756942220222,2.818990373202739,2.9920185974422946,11.529259915073515,53.34828178316849,50.5773061658137,119.57179721034167,-786.9439339579221,-901.8697209507841,1074.2990124084633,-676.634329985113,-1814.4894639161919,-1058.8873901892568,349.63255334068964,268.2484621242063,380.4257804868011,97.91247606120596,-71.66187990477866,-72.73694020539094,-37.286147332183255,-18.72018651765236,-9.562832886967836,-8.263453641636948,-.1909928019616089,.2856733033383343,.0713092208473309,1.775656575203522,2.1386941287610384,-1.0231985430634363,2.4480270844924137,1.987809621173889,4.1535160740617325,3.5521022242715827,3.6019889835361654,-.38778650675348675,4.593463303583732,12.369503115173785,94.4009292853464,-77.03951669454163,-317.9618963149653,-464.9398230309893,-1928.5847150696218,-1707.435501473529,-1583.8824730375936,-833.1497046070991,-242.65732454029356,317.3445924618518,69.37197156554217,-13.453603503282046,-58.67866216881051,-40.69792523135727,-20.16679423742438,-13.090865763493372,-7.663932546815518,-3.9818184076004774,-1.1480426683317846,3.4782462601712654,3.3535274581593777,1.130442042784202,-.7879809105656911,1.364561831917687,-1.248210330241836,2.654804361380871,2.0455422971726147,3.3794759874708187,.2827071358643787,-.6739636481307105,-2.4299863370655714,20.048308524208917,2.7323622379310764,23.350930435926227,19.428895667387472,-542.5554345851384,-969.7264693441342,-1881.693511581832,-426.42488803140975,-203.1293354864958,221.2759941924873,75.49864673782753,81.52765470923214,-23.22814892751923,-35.0958926310836,-18.113211298120703,-10.84781416147373,-7.219012562090457,-4.627971063973636,-2.4591204313834965,.5845484236475059,.9547463106026568,2.4151219203224654,.35567626693527166,-.3444373524655358,.10021534895843374,.6297575158661224,.07573905798146836,2.560600970229473,.33652577635989583,1.0967346902818458,-2.0000864020848046,1.451434335785166,-7.104320348324592,10.682010714917043,63.119371696969466,-.21915489532378957,-18.829394319190524,-151.38668525810633,-53.557614725234764,319.9810919368852,339.6557115911443,137.34002448547074,89.16606167421133,5.539540701045855,3.139496157974919,-15.790153056071546,-10.068399035154068,-5.990189510359599,-3.818478372445559,-3.031311871551015,-1.7050468427375405,.29997994657424726,1.0820090369221063,1.186145834536469,1.1035985643781976,-.026686439684276222,-.021861987241408937,-.7106913323848779,1.5408441736495715,.8896424069841912,1.3226298476418663,-.3134179284404904,.3654281917809065,-6.283172414744601,-1.5019641274621849,13.705577255286178,14.08988446983488,43.37606456504579,54.20464622802869,132.60719521227122,62.432091745032416,219.8685340702529,133.19971898528303,106.65962198554573,32.50951057813668,-.3217312093221928,-1.0472919151881939,3.040048254115993,-2.137337576928337,-3.730023177462626,-3.658884080605465,-1.7579654575817145,-1.4081716233776314,.5384750525967524,.9716444260939648,.9955744417358943,.11126643861839057,.6834380273282822,-1.8968331338371984,1.2370080984335854,.24616862215977253,1.6488725749132858,.5175199959040523,1.1293193043526017,-2.440127533596657,-2.1096176983280075,.8686234113923286,-3.2906850406637935,10.529105330387669,21.528607110729595,53.86435993126087,77.64597170154937,219.35042572397626,56.6467253044894,72.59713315254464,25.283726226154087,9.591694536051858,3.513106638710965,7.835371209588592,3.7982495059531924,-.1320379920173739,-2.687214491416787,-3.993299541160216,-3.249609758225802,.3475312947763441,.5110856303949012,1.5779290838292743,-.32098662744154494,.8505043637670686,-.9526953350056799,1.2514468795435802,-.8023251432711297,.9402998385797201,.0834845375200434,2.9970442493787712,-1.3537504507858638,-.49606931853204594,-.4063479369404129,-3.2049709482453,-.9073350510942371,2.436744629198272,14.425788131967863,11.285893196605656,41.38323140755873,26.64930600456886,3.49019745229235,-2.7278278900775033,-.6780497768719117,5.197251705350807,13.315592278460391,8.56553402704958,2.798694252472001,-1.3188307478897958,-2.9560147101356677,-3.503962513889325,-3.235126442242444,-1.7837191938553947,4.13702942142299,-.485758893366084,1.5705428299533406,-.2871276643491235,3.026372213847224,-1.2120159426024513,2.35786853116133,-.5759598133955007,5.0023110313506045,-1.3965343408401143,.5713001835955326,.9760153999777991,-2.585611776637107,-1.4572886030272592,-1.697304402058907,2.103012136644805,-.06299514621758302,4.961293785496401,-.301351161950073,9.158035887659205,-26.77416025365113,-14.352442298363405,-1.328062861082634,14.662722831107068,13.065714024917916,9.014268684358106,2.3156698002103213,-2.1494090398895276,-3.4369058394752816,-3.2885833247038136,-1.5589303641797962,-1.2624013759488528,-1.9675974847606275,6.6808538974877765,-1.9845455926326385,5.852020908231505,-.6464946693693394,3.7090325345277484,-1.4383189901623872,7.635821765818129,-2.5011370399824613,2.0288771570791524,3.387066154036441,-2.1726948090167277,-1.6227282885568253,-2.3401345171732064,-1.0784728701462345,-2.329913042321786,1.6766227476276099,-5.520827980018438,-13.304914803323909,-34.683237345909106,-16.2208922311743,-7.561457411183358,14.803696771258469,15.579335900760762,15.161631552742872,8.466040959037517,1.9742581617985508,-2.2318082441740326,-3.1677451000476946,-2.7136257844502993,-2.4663578849843404,2.147064267404146,-.8080751646824499,-6.8039934755458935,11.462761097859508,-2.320007213313432,9.647619505490004,-.5832325892308606,10.466810618341768,-7.39663728492945,4.629755222962074,7.84990600691447,-1.2532724460122664,-.7138369357089525,-3.035642205111053,-1.9171318821546592,-3.2905248775997,1.1638954652799918,-.8003122215164804,-7.6686022187651925,-13.379436000591463,-2.0784151782651223,18.75367455316294,37.59693951497317,28.201887912811504,26.441177038828386,17.31369928962457,8.260583701281336,1.91576653498145,-1.0360449197814665,-2.460835808457071,-2.9435912594789997,-.7374589298546507,-.806982080987579,1.3512050433752707,-2.4806623635392717,-10.931358459008862,20.399475046734903,-.9391475392972903,15.633586230850142,-11.808527677086202,3.795524426649309,11.440683264496995,.22625003249094855,2.3910143241324033,-1.5433230899620785,-1.7524971656611896,-3.4392335008624597,-1.2102890230410412,-1.1333111335531953,-.8668905465240005,-.7710203749819823,5.869418392294464,-6.691170849830921,60.884710948918006,43.6215632338163,43.48959952748494,33.141784821271486,18.338861076357606,7.709614194939609,3.102096535420124,-.33651454595896624,-1.858665713174497,-1.559439785993801,-1.7180049365163976,-.49470837698954684,-5.749978377706704,1.2816063498557866,-1.6438131382345036,-14.80449956699707,30.38324880041191,-20.687082737158004,6.429123713414993,13.719178799652914,-.15202331710012035,5.670833174690743,1.1091130063870853,.43083164420390874,-2.423604198850752,-1.2614169037455483,-3.163327541785472,-2.542847948565205,-1.0621152637056996,7.492146846575477,13.826120615216594,48.56895003285198,43.655937980459306,56.143788442077074,39.839822974553684,28.907966432346075,17.226166967005444,9.493352687280801,2.124830724849576,-.10304029106189502,-.73643011249607,-.6808620369242278,-1.5726895782452095,-2.38329292549688,-6.365462228048634,-12.648471231222512,2.6502987300645,9.194137936615347,-33.28553680715055,17.791788634489134,16.331392880531652,-1.0332061538290742,9.637685708097134,4.168966963233515,3.4112249849533103,-.6306411192619769,.02835684712188818,-1.1968584419289052,-3.3957285823190806,-4.745940898656516,-4.790016252397657,-5.15933541309157,13.957717184896774,20.367299127198688,0,-4.5388798707327584,12.10851784859719,15.801052170121357,15.786196904526062,6.464533909142766,2.6357128260629894,.48128762074186304,-.08159176932681525,-1.1399410088753745,-.939169667566381,-5.469535949937741,-8.47337798315448,-6.833270794890364,-5.875913014616271,-8.155226637929625,0,8.15522663792959,5.875913014616266,6.833270794890349,8.473377983154487,5.469535949937732,.9391696675663769,1.139941008875372,.08159176932681525,-.48128762074185355,-2.635712826062981,-6.464533909142767,-15.786196904526072,-15.80105217012133,-12.108517848597181,4.538879870732742,-43.65593798045641,-20.367299127197448,-13.957717184895019,5.1593354130924185,4.790016252397922,4.745940898656731,3.395728582319133,1.1968584419289152,-.028356847121888983,.6306411192619719,-3.411224984953306,-4.168966963233496,-9.637685708097113,1.0332061538290882,-16.33139288053165,-17.79178863448908,33.28553680715062,-9.194137936615315,-2.6502987300644807,12.648471231222583,6.365462228048637,2.383292925496898,1.5726895782452166,.680862036924256,.7364301124960793,.10304029106193066,-2.124830724849536,-9.493352687280627,-17.22616696700529,-28.907966432345297,-39.839822974551964,-56.14378844207378,-60.88471094891558,-48.56895003285002,-13.82612061521586,-7.492146846575117,1.0621152637059226,2.542847948565322,3.163327541785505,1.261416903745556,2.4236041988507613,-.43083164420392467,-1.1091130063870698,-5.6708331746907525,.1520233171001266,-13.719178799652925,-6.429123713414971,20.687082737158036,-30.38324880041186,14.804499566997148,1.6438131382345447,-1.2816063498557717,5.749978377706724,.49470837698955733,1.7180049365164254,1.5594397859938318,1.8586657131745035,.33651454595900265,-3.102096535420111,-7.709614194939538,-18.33886107635751,-33.1417848212713,-43.48959952748401,-43.621563233814584,-18.75367455316185,6.691170849831209,-5.8694183922938254,.77102037498232,.8668905465241434,1.133311133553338,1.2102890230411023,3.4392335008624833,1.7524971656611932,1.5433230899620796,-2.3910143241323984,-.22625003249093578,-11.44068326449701,-3.795524426649273,11.808527677086207,-15.633586230850069,.9391475392973129,-20.39947504673482,10.931358459008916,2.4806623635393117,-1.3512050433752816,.8069820809876324,.7374589298546702,2.943591259479049,2.4608358084570767,1.036044919781497,-1.9157665349814337,-8.2605837012812,-17.313699289624388,-26.441177038827938,-28.201887912810978,-37.59693951497237,16.22089223117415,2.078415178265043,13.379436000591378,7.6686022187652325,.8003122215165199,-1.1638954652799158,3.290524877599744,1.917131882154679,3.035642205111054,.713836935708947,1.253272446012271,-7.849906006914436,-4.629755222962067,7.396637284929479,-10.46681061834176,.5832325892309236,-9.647619505490004,2.3200072133134997,-11.462761097859458,6.803993475545934,.8080751646824615,-2.147064267404143,2.4663578849843657,2.7136257844503273,3.1677451000476933,2.2318082441740374,-1.9742581617985304,-8.466040959037452,-15.161631552742712,-15.579335900760643,-14.803696771258227,7.561457411183342,26.774160253651477,34.683237345909006,13.304914803324097,5.520827980018494,-1.6766227476275497,2.3299130423218712,1.078472870146282,2.3401345171732237,1.6227282885568277,2.172694809016716,-3.3870661540364337,-2.0288771570791524,2.5011370399824764,-7.635821765818108,1.4383189901624107,-3.7090325345277098,.646494669369335,-5.852020908231483,1.984545592632657,-6.680853897487771,1.9675974847606519,1.2624013759488664,1.5589303641798025,3.2885833247038483,3.436905839475272,2.1494090398895325,-2.3156698002103084,-9.014268684357965,-13.06571402491778,-14.662722831106908,1.328062861082763,14.352442298363767,-3.49019745229113,-9.158035887658194,.30135116195024236,-4.9612937854963866,.06299514621754256,-2.103012136644765,1.6973044020589363,1.457288603027268,2.5856117766371063,-.9760153999778071,-.5713001835955446,1.396534340840117,-5.002311031350611,.5759598133955085,-2.357868531161305,1.2120159426024788,-3.02637221384722,.28712766434913656,-1.5705428299533217,.4857588933660993,-4.137029421422994,1.783719193855416,3.235126442242455,3.5039625138893205,2.956014710135662,1.3188307478897938,-2.7986942524719765,-8.56553402704949,-13.315592278460258,-5.19725170535079,.6780497768720096,2.7278278900777337,-56.64672530448825,-26.649306004568476,-41.383231407558036,-11.285893196605604,-14.42578813196792,-2.4367446291981882,.9073350510942723,3.2049709482452906,.4063479369404134,.4960693185320061,1.3537504507858567,-2.9970442493787934,-.0834845375200447,-.9402998385796996,.8023251432711498,-1.2514468795435723,.9526953350056726,-.8505043637670447,.3209866274415623,-1.577929083829268,-.5110856303948855,-.3475312947763517,3.2496097582258234,3.9932995411602126,2.687214491416765,.13203799201742056,-3.798249505953158,-7.8353712095884145,-3.513106638710994,-9.591694536052009,-25.283726226154414,-72.5971331525438,-219.8685340702529,-219.35042572397646,-77.64597170154943,-53.86435993126099,-21.52860711072962,-10.52910533038772,3.290685040663801,-.8686234113923152,2.1096176983280075,2.4401275335966615,-1.1293193043526162,-.5175199959040564,-1.6488725749132833,-.24616862215974425,-1.2370080984335483,1.8968331338372646,-.6834380273282822,-.11126643861832354,-.9955744417358692,-.9716444260939339,-.5384750525967466,1.408171623377654,1.757965457581725,3.6588840806054854,3.730023177462626,2.1373375769283727,-3.0400482541159497,1.047291915188283,.3217312093221976,-32.5095105781366,-106.65962198554575,-133.199718985283,-319.98109193688754,-62.432091745036324,-132.60719521227176,-54.20464622802902,-43.37606456504613,-14.089884469834875,-13.705577255286062,1.5019641274622118,6.283172414744585,-.3654281917809468,.31341792844047633,-1.322629847641876,-.8896424069841873,-1.5408441736495315,.7106913323849381,.021861987241514846,.0266864396842654,-1.1035985643780957,-1.186145834536423,-1.082009036922065,-.29997994657423205,1.7050468427375622,3.031311871551031,3.818478372445528,5.99018951035957,10.06839903515407,15.790153056071421,-3.1394961579745826,-5.539540701046052,-89.16606167421166,-137.3400244854728,-339.65571159114575,426.42488803140685,53.55761472523432,151.38668525810476,18.829394319190286,.2191548953235339,-63.1193716969694,-10.682010714916952,7.104320348324818,-1.4514343357851665,2.0000864020848317,-1.0967346902818478,-.3365257763598761,-2.5606009702294568,-.07573905798135958,-.6297575158660037,-.1002153489582,.34443735246552043,-.35567626693504045,-2.415121920322402,-.9547463106025608,-.5845484236474793,2.4591204313835524,4.627971063973652,7.219012562090432,10.8478141614737,18.11321129812079,35.095892631083665,23.22814892751946,-81.52765470923207,-75.49864673782862,-221.27599419248904,203.12933548649244,1583.8824730375886,1881.6935115818235,969.7264693441334,542.5554345851378,-19.428895667388197,-23.350930435925818,-2.7323622379307726,-20.048308524208668,2.4299863370655803,.6739636481307644,-.2827071358643783,-3.3794759874707645,-2.045542297172576,-2.6548043613806773,1.248210330242034,-1.3645618319173671,.787980910565676,-1.130442042783935,-3.353527458159282,-3.4782462601711517,1.1480426683318268,3.981818407600519,7.663932546815509,13.09086576349318,20.166794237424288,40.69792523135695,58.67866216881051,13.453603503282435,-69.37197156554245,-317.3445924618542,242.65732454028887,833.1497046070945,1814.4894639161919,1707.4355014735293,1928.5847150696216,464.93982303099165,317.9618963149654,77.03951669454241,-94.40092928534638,-12.369503115173439,-4.593463303583724,.3877865067534687,-3.6019889835361467,-3.5521022242715157,-4.153516074061658,-1.987809621173597,-2.4480270844921423,1.0231985430638744,-2.1386941287610495,-1.775656575203229,-.07130922084720692,-.28567330333819857,.19099280196170093,8.26345364163699,9.562832886967872,18.72018651765216,37.28614733218326,72.7369402053908,71.66187990477839,-97.91247606120552,-380.4257804868011,-268.24846212420823,-349.6325533406899,1058.8873901892528,-2087.2412865177334,676.6343299851142,-1074.2990124084556,901.8697209507884,786.9439339579222,-119.57179721034137,-50.57730616581321,-53.34828178316841,-11.529259915073451,-2.9920185974423683,-2.818990373202848,-5.044756942220179,-2.5445971528130604,-10.107544184404102,-4.9832600695276215,2.2636764639027978,5.373740185152825,.20461611038107308,-3.6890839097334074,-1.119402655197085,.20770764759927202,6.770877333738589,12.544755138678777,25.25422264782682,57.14272356927944,74.48955207450695,82.56651716015759,-71.61068630950653,-537.4906442433507,-271.57679130866813,540.5764135125049,-2934.825085841371,-11955.36918869557,-14506.214536688902,-637.2265195104331,204.04622542072232,142.43138300706894,154.61175360170483,-106.41042136702355,-66.54358379132336,-35.88043741028101,2.1360966686551617,-13.062832664150186,.8675699825474646,-12.950261495215663,.6068089103450538,-17.40763581076148,13.386771464725289,-.8738635446220966,1.6150967690552112,-14.54610105595846,-2.2874141051365076,-1.018274370244917,12.902690844348964,20.382558491276768,30.589238972650698,63.12541650151129,68.53645210929236,208.25011765184536,-277.4413124787215,295.01076934839597,-202.32180136863923,-2363.0865643328207,346.6070235945696,-16946.371225111554,-1299.266384884367,-4625.155413999856,-3868.3607546707453,832.3851335439597,28.40638042173725,-119.64570653889508,-110.70270321520742,-29.59768820792175,-10.925693066643381,-9.916050792857169,-9.54913772669443,-18.949463773817815,-10.847407040619126,14.016932746732627,8.830506972875813,12.446635345723296,-18.9820147593783,-13.73839338407706,-10.939736173955323,20.777136166915735,12.48897777935125,25.36595623631853,8.196051793927062,65.24914017226915,42.28539321936699,206.10314812122587,-109.43221584453876,-109.26740577843286,1171.8258105148195,1841.1630655848473,-11272.40087069649]}},right_eye_filter={real:[1.8229079259010603,.09781049864858246,-.5584009213724859,-.9997046284235658,.18757876559092043,-.8161769486311446,-.17457078018685562,.1382218261307309,-.13830885288846723,.14088352498892928,-.11242245121823281,.6419014453075046,-.18081689212517704,.8475744542340304,-2.0367692338977426,2.3450651085370726,-3.222777163962479,2.3450651085369945,-2.03676923389771,.8475744542340385,-.18081689212518082,.6419014453075054,-.11242245121823641,.1408835249889417,-.13830885288846723,.13822182613073003,-.17457078018684977,-.8161769486311367,.18757876559091927,-.9997046284235627,-.5584009213724851,.09781049864858132,-1.0960340088024074,-1.91191994525123,-2.409570266538848,-.5516235280495324,-.5050532801402159,-1.3068505835636635,-.4943718744397559,.23127204626685588,.0433507943550392,-.07178740615443681,.07085444983720594,.17221102955705567,.44602122877614064,.0741482055919004,-.015611524439393865,-.7989672475729291,-.6715596106043705,-.49375784053273253,.028167647498424205,-.3191891366103583,.5358217017440822,.20183473326047152,.12710467168208503,-.0714002635141921,.07456060444801779,-.12451483496807111,.051358135035693774,-.7728239811338444,-.42160647485916963,-1.1311602269894514,-1.4625324828122208,.3337871926813808,-1.77011609742092,-1.4302518240108344,-3.0428213499062116,-.6063122548783355,-.13683987631719793,-2.369242408538352,-.34105804260324346,-.2596965785205799,.2361043379661986,-.2768516857968317,.16986402710259335,.073612585805397,.5770491101708912,-.059867579479423505,.5168021952817504,-1.0666730319382505,-.005655209467068683,-.7580993906074581,-.06470132025004456,-.19832318162238824,.37732986906226257,.20777584924550152,.15451076629740465,-.013991851319401968,.13841341497021592,-.08688394903692853,.2526142361971455,-1.199138513843388,-1.9867837341406693,-2.275962773839737,-3.1079150257531585,-2.3995834975192567,-2.293769234372572,-2.1872173045799017,-1.3988308931230504,-2.207395781381544,-1.9667941627002865,-1.6748432066635108,-.9265077203256434,-.0541972372500527,-.18026213329416008,-.15232124758200827,-.016555865669302033,.31289505893870784,.4280654296827472,.23124350286854853,-.08736638276460744,-.12552132795947232,-.12547908619418155,-.38089709050886683,-.2844407665876804,-.11944152964360766,.12056136689031131,.21189843131890268,.1658159847015422,.13376820638890077,.22205496825803592,.15120100371874812,.12380717441381156,-1.235259678432226,-2.222275911684921,-3.378285680998969,-3.415076124219421,-2.7282977589825297,-1.5576789730825455,-1.6478932560447972,-2.067907968457094,-2.004290735457912,-2.6427456963680775,-1.930947467983862,-.16864865516592528,-.22642518078963322,-.13321306237600422,-.20692971953006373,-.068344938706069,.14493915164047724,.4650583247482101,.32789481378377733,.1852927254910838,-.1356638873386786,-.03585192275390197,-.17203834043005656,-.15954900238018477,-.05958171313143122,-.017228379259871054,.12402459410135006,.1524538089963059,.1627194606370896,.24817234249560427,.26053579199245763,-.04769125558408293,-.8145999303179203,-2.074066074419681,-3.154489159895426,-2.9212825837849565,-2.40774190894317,-1.6411629435379833,-1.576697627349694,-1.8007661961299257,-2.0001525985045707,-1.5107274159689619,-1.2839600483166405,-.631967111188135,.3107157406422172,-.21370915949408273,-.16393119308951343,-.0974817040158397,.13767875532837173,.23695911940697742,.3615877419673283,-.0006696253821662316,-.1026502520704758,-.18176695609293456,-.059120611570986824,-.13702193484548986,-.00735380131579763,.020281061259494877,.1503250145998206,.16876214929227357,.18780650312631536,.16308782299108887,.18583847563977354,.4490729609236465,-.020800703185301726,-1.4297091333258476,-2.4259185480628145,-2.4053777736536626,-1.982130703567588,-1.3372642957080885,-1.2989780551182537,-1.3731553217305845,-1.2269479805895975,-1.2032897772528626,-.22206046284030648,-.1841554828910981,-.23415549346578352,.07793632568988745,-.21633114300736572,-.05944972221175794,.013318329293146938,.2877543730088398,.21963323601338633,.16649953505637383,-.18974789333555656,-.1737958013223644,-.23416130311702454,-.13478379984035538,-.13112027137758978,.033522350558872455,.13259733500476653,.171380750952115,.15737574769334917,.09247716245660553,.13448891283084696,.4116145942481744,.35609170613712005,-.5531644985020381,-1.540851379466907,-1.8005308506197801,-1.5719273509294158,-.9404057795331605,-.8389941648002093,-.7733641692859126,-.6656241101650995,-.4002640865408188,-.3675097145491356,.2414435659750552,-.0656771881779108,-.21341675767851534,-.041369287190265204,-.08740484292179958,.04460147122538273,.19583406251777175,.1830038441344799,.012219595757112435,-.034593273427629516,-.14926486203867156,-.036665364495836496,-.1306231554860259,-.08638162405193898,.0020423415177502173,.11239290885891448,.12781279786870536,.10954302373131516,.14996801038078228,.12965098836907352,.14324588543961356,.0567484033157079,-.07934259271000402,-.7714589827483544,-1.1705860882999304,-1.0754357146023004,-.5463269466436349,-.37732231762995055,-.29185933229148303,-.18245346577017127,-.15252816280103537,.00992307413149221,-.05334501261419268,.10643359538216246,-.06963530217299803,-.20853401810086858,.03871878333386132,.024793140061197767,.2221501854940542,.1909069391112047,.13458393481660855,-.1226120784542075,-.06040684690366743,-.08306038338398455,-.0169256864349541,-.03335293819594764,.0564744224029561,.04873056181166667,.09209822163153716,.13542751998114597,.15540921558269635,.10094403852684107,.050489672984821425,.08984099886151299,.018445471788018183,-.4428032483123847,-.6455947552354269,-.6412340959287646,-.2557177936173176,-.15489773108593363,-.10375533557574061,-.07401894727409025,-.07402176527738832,-.034956034554291714,.06533170031918539,-.07929977184739372,.03572542409731947,-.10252861876832269,-.22107962950770202,.20755848067860572,.23157078159613848,.34013467279608883,.23914223921471078,.04359196404412921,-.20186945117744784,.04172561648658725,-.038784831650455286,.07624815101935192,-.060276976551200255,-.0031358189183758184,.13054366560393055,.16122088670834137,.12129220423951546,.06462405927184613,.06315363352353807,.0368689547736123,.025599835220982206,-.17872521900892777,-.3757789408279771,-.33418602947194676,-.19087946198724595,-.09243055938719592,-.15843188266072916,-.1178716916883143,-.07983285707762743,-.0384556097211695,.015668866487966955,.005265676601997658,-.12562510603385343,-.024970842739258457,-.030574039563531708,-.21969881405226874,.5919138706078211,.39965780946904006,.2262476397429311,.07714378169383113,.07854251680850119,-.0038697706067326258,.21858339549378,.08387013381984681,-.1914992924369444,.05367331518054547,.22201073984886688,.16922848807595664,.12511007660405662,.09511163485538424,.0841953956240581,.010195208908487656,-.01658912331368151,-.07692269919160621,-.17023093289451025,-.26998035777525775,-.28189859430096476,-.32749231042729776,-.240474927671948,-.27714150491609907,-.16857870511456344,-.056310601502134704,.026291702225850644,-.028508101274427284,-.06630706179098649,-.27187198211633473,.06621925794626239,.32825613521942065,-.2130375838630078,1.1917438602108388,.2807025357241521,.23447144426975483,.1651152909709915,.40113579910945835,.017152293761210982,-.1450564820739392,.13833755803781553,.2361453534315919,.16033553043559276,.17442784770871,.17988585089228476,.143828955260344,.07132752932041192,.016244981011210025,-.013577696292888701,-.024045478766089354,-.11184718959298219,-.1466657480521107,.008087681789972736,-.16842937423863127,-.4354348937994489,-.2997528685170986,-.22753898297998879,-.06903603291657966,.014977564920406507,-.02042087790603848,-.13524198281736244,-.1573938044754166,-.3340126093430992,.46815371603113554,.9302172976832263,-.26733338229185055,1.4166629302294091,.6066447960893963,.3603810860087503,.4605515924213614,-.32071019427276837,.15916183580862947,.5514216292911032,.20419289205444074,.051921880744650394,.24679565757292954,.2706202610478356,.15590400545853877,.08185944105119965,-.04098023110727716,.019596242113331462,.09436442791977376,.06527851980277598,-.029838116901178446,.15435464918439099,-.03938665594416125,-.07779640601620462,-.28158476919608044,-.03311012802272485,.018548614200940845,.06704610765103773,-.0442452017815352,-.1525534131110006,-.22929077462390082,-.08530271071238826,-.04930239368333223,.8574436846312782,1.8448220136861364,-.6874455683197501,1.810880881855317,.6623703970370957,-.31567909429421087,.8323221790747578,.9786336592299799,.30994126117364096,-.041163173314528664,.17633262873947353,.23161854928102976,.2508770436670255,.19868696729956423,.09356988769444988,.03236232444292232,-.002750766613633768,.21821986304703905,.37880734420129814,.40096920495374666,.9356115419306689,.6132603995532996,.1638528799494483,.1009541629695858,.05660159184623324,.15561323638878471,.07300029281297159,-.005544245314691569,-.13817032242271102,-.11770539535407684,-.09624545727844742,.4644289412509608,.45587938373772585,1.3432089992982477,2.5059762271849535,-.9382969763987489,.6492144586928863,.7978253203448007,1.3025551528258366,.9417497410073223,.0999214696597348,.2871278626692066,.1585368007924338,.130717335778855,.17042917695126153,.1998644332453962,.13725228360851915,.029723534135295476,.09814363533870286,.19047751491127032,.4933533797343521,.7808930441209985,.2968658742882804,.38131881367791126,.4064367365251492,.19053499830856688,.20033550195294633,.13287714582076576,.10533560171090586,.0008548789781538824,-.04943529640626747,-.08130941155497949,.05794771671040313,.48207744089263116,1.2538880645112733,1.2204758332556214,.8779386387662574,1.8796293205435075,-.45285576127696725,2.2308682152547137,1.2382711063757557,-.03520793699594507,.8817567227830668,.5591603196165794,.18718127547628777,.01176467325227445,.06874700659527258,.13522321325294812,.17151312046437606,.10315365060575944,-.0011239413451798732,.14993420590829387,.3895911022808224,.3884586226441047,.6971673018273219,.5180206439350141,.2883776700148891,.10583936790249669,.0710166156702107,.16001776032454934,.10715662619027419,.05618871675953212,-.03582584015504452,.006146991796811139,.08949387784356472,.68387295014826,1.1016519558168656,1.3182383587355595,.6663538204015352,.5486367363209722,4.054777023104894,.5486367363209715,.6663538204015342,1.3182383587355562,1.101651955816866,.6838729501482614,.08949387784356506,.006146991796810629,-.03582584015504452,.05618871675953043,.10715662619027334,.16001776032454856,.07101661567021002,.10583936790249539,.2883776700148883,.5180206439350135,.2968658742883096,.388458622644122,.38959110228084654,.14993420590831108,-.001123941345177488,.10315365060576374,.17151312046437922,.13522321325295103,.06874700659527355,.011764673252275867,.18718127547628682,.5591603196165779,.881756722783062,-.035207936995944634,1.2382711063757532,2.2308682152547106,-.45285576127696175,1.8796293205435037,.8779386387662579,1.2204758332556218,1.2538880645112747,.4820774408926327,.05794771671040518,-.08130941155497955,-.04943529640626837,.0008548789781495917,.10533560171090255,.132877145820761,.20033550195294705,.19053499830855697,.40643673652513423,.38131881367792647,.9356115419306881,.7808930441210271,.49335337973436416,.1904775149112758,.0981436353387047,.029723534135297252,.13725228360851988,.19986443324539666,.17042917695126267,.13071733577885625,.15853680079243432,.28712786266920415,.09992146965973223,.9417497410073171,1.3025551528258328,.7978253203448017,.6492144586928862,-.9382969763987445,2.505976227184955,1.3432089992982421,.45587938373772335,.46442894125096235,-.09624545727844717,-.11770539535407766,-.13817032242271216,-.005544245314694519,.07300029281296944,.1556132363887834,.05660159184623321,.10095416296958591,.16385287994945555,.613260399553306,.15435464918440814,.40096920495376004,.37880734420131523,.218219863047049,-.0027507666136306606,.03236232444292454,.09356988769444934,.19868696729956342,.2508770436670255,.2316185492810306,.17633262873947425,-.041163173314526666,.30994126117363635,.9786336592299767,.8323221790747578,-.3156790942942159,.662370397037097,1.810880881855315,-.6874455683197483,1.8448220136861369,.8574436846312773,-.0493023936833296,-.08530271071238829,-.2292907746239018,-.15255341311100187,-.04424520178153933,.0670461076510356,.018548614200940294,-.03311012802272051,-.2815847691960758,-.07779640601620005,-.039386655944146774,.008087681789976134,-.02983811690117316,.0652785198027806,.09436442791977824,.019596242113334855,-.04098023110727665,.08185944105119855,.15590400545853553,.2706202610478356,.24679565757292907,.05192188074465168,.20419289205443947,.5514216292910992,.15916183580862936,-.3207101942727711,.46055159242136157,.36038108600874996,.606644796089398,1.416662930229405,-.2673333822918505,.9302172976832263,.4681537160311345,-.3340126093430979,-.1573938044754171,-.13524198281736302,-.02042087790604074,.014977564920405115,-.06903603291657855,-.2275389829799863,-.29975286851709465,-.4354348937994427,-.16842937423862725,-.28189859430095965,-.1466657480521052,-.1118471895929717,-.024045478766081197,-.01357769629288397,.01624498101121273,.07132752932040962,.14382895526034015,.1798858508922834,.17442784770871067,.16033553043559218,.23614535343159299,.13833755803781575,-.14505648207394348,.01715229376121234,.40113579910946,.16511529097099317,.23447144426975502,.2807025357241538,1.1917438602108381,-.21303758386300692,.3282561352194251,.06621925794626213,-.2718719821163353,-.06630706179098739,-.028508101274429792,.026291702225849072,-.056310601502134,-.1685787051145608,-.27714150491609657,-.24047492767194564,-.3274923104272947,-.19087946198724157,-.2699803577752515,-.17023093289450597,-.07692269919160243,-.016589123313677224,.01019520890848913,.08419539562405712,.09511163485538146,.12511007660405613,.1692284880759545,.22201073984886613,.053673315180547035,-.19149929243694658,.08387013381984704,.21858339549377928,-.0038697706067313737,.0785425168085006,.07714378169383322,.2262476397429297,.3996578094690411,.5919138706078217,-.21969881405226852,-.0305740395635305,-.024970842739259945,-.1256251060338537,.005265676601996701,.015668866487966397,-.038455609721168606,-.07983285707762636,-.11787169168831266,-.15843188266072725,-.09243055938719412,-.25571779361731145,-.33418602947193976,-.3757789408279684,-.17872521900892277,.025599835220983438,.0368689547736149,.0631536335235363,.06462405927184454,.12129220423951372,.1612208867083402,.1305436656039314,-.003135818918377517,-.060276976551199596,.07624815101935135,-.03878483165045592,.04172561648658526,-.20186945117744698,.043591964044126186,.23914223921470992,.3401346727960877,.23157078159613964,.20755848067860685,-.22107962950770196,-.1025286187683216,.03572542409731814,-.07929977184739355,.06533170031918509,-.034956034554288036,-.07402176527738524,-.07401894727408691,-.10375533557573537,-.15489773108592672,-.5463269466436349,-.641234095928764,-.6455947552354269,-.44280324831238616,.018445471788017767,.08984099886151031,.05048967298482026,.10094403852683856,.15540921558269635,.13542751998114574,.09209822163153619,.04873056181166658,.056474422402955825,-.03335293819594981,-.01692568643495722,-.08306038338399054,-.06040684690366743,-.1226120784542102,.13458393481660744,.19090693911120402,.22215018549405383,.02479314006119874,.038718783333861403,-.20853401810086775,-.06963530217299803,.1064335953821621,-.05334501261419192,.00992307413149367,-.15252816280103507,-.1824534657701707,-.291859332291483,-.3773223176299495,-.9404057795331534,-1.0754357146022915,-1.1705860882999222,-.7714589827483473,-.07934259271000449,.05674840331570382,.14324588543960787,.12965098836906794,.14996801038078103,.10954302373131049,.12781279786870486,.11239290885891398,.002042341517751725,-.08638162405194173,-.13062315548602732,-.03666536449584196,-.149264862038672,-.03459327342763485,.012219595757109143,.18300384413447635,.1958340625177715,.0446014712253844,-.08740484292179726,-.04136928719026287,-.21341675767851565,-.0656771881779069,.24144356597505726,-.36750971454912684,-.40026408654081164,-.6656241101650917,-.7733641692859056,-.8389941648002021,-1.3372642957080858,-1.5719273509294132,-1.8005308506197781,-1.5408513794669076,-.5531644985020383,.3560917061371113,.4116145942481696,.1344889128308404,.09247716245660478,.1573757476933456,.17138075095211283,.1325973350047658,.03352235055887238,-.13112027137759125,-.13478379984035713,-.23416130311702804,-.1737958013223642,-.18974789333555622,.16649953505637016,.21963323601338522,.28775437300883855,.013318329293152468,-.05944972221175441,-.21633114300735917,.07793632568988698,-.2341554934657765,-.18415548289109335,-.2220604628402971,-1.203289777252857,-1.2269479805895944,-1.3731553217305832,-1.2989780551182524,-1.64116294353798,-1.9821307035675826,-2.4053777736536572,-2.4259185480628087,-1.4297091333258454,-.020800703185307738,.44907296092364196,.1858384756397643,.16308782299108818,.18780650312631128,.1687621492922723,.15032501459981898,.020281061259495404,-.007353801315796421,-.13702193484548603,-.059120611570979247,-.18176695609293375,-.10265025207047287,-.0006696253821684415,.3615877419673271,.2369591194069768,.13767875532837892,-.09748170401583293,-.1639311930895031,-.2137091594940832,.3107157406422304,-.6319671111881267,-1.283960048316625,-1.5107274159689543,-2.0001525985045667,-1.800766196129921,-1.5766976273496909,-1.557678973082544,-2.4077419089431698,-2.921282583784955,-3.1544891598954266,-2.074066074419682,-.8145999303179303,-.04769125558408684,.26053579199245114,.24817234249560396,.16271946063708537,.1524538089963024,.12402459410134949,-.017228379259870755,-.05958171313142866,-.15954900238017725,-.17203834043004781,-.03585192275390215,-.13566388733867182,.1852927254910774,.32789481378377766,.4650583247482103,.14493915164048596,-.06834493870606016,-.20692971953005135,-.13321306237600447,-.22642518078961474,-.16864865516591712,-1.9309474679838514,-2.6427456963680735,-2.0042907354579094,-2.067907968457093,-1.6478932560447959,-2.2937692343725686,-2.7282977589825266,-3.4150761242194196,-3.378285680998969,-2.222275911684919,-1.2352596784322352,.12380717441380877,.15120100371873849,.22205496825803597,.13376820638889372,.16581598470153905,.21189843131890046,.1205613668903118,-.11944152964360859,-.2844407665876833,-.3808970905088692,-.1254790861941803,-.12552132795948226,-.08736638276460633,.2312435028685467,.42806542968274885,.31289505893871633,-.016555865669298363,-.15232124758199445,-.18026213329416074,-.054197237250036744,-.9265077203256314,-1.6748432066634964,-1.966794162700286,-2.2073957813815404,-1.3988308931230464,-2.187217304579897,-1.7701160974209202,-2.3995834975192563,-3.1079150257531603,-2.2759627738397428,-1.9867837341406698,-1.1991385138433992,.25261423619714135,-.08688394903694385,.13841341497021575,-.013991851319408978,.15451076629740176,.20777584924549833,.37732986906226257,-.1983231816223982,-.06470132025005006,-.7580993906075129,-.005655209467068792,-1.0666730319382445,.5168021952817432,-.05986757947942188,.5770491101708914,.07361258580540825,.16986402710259826,-.27685168579682035,.23610433796619823,-.25969657852055217,-.3410580426032341,-2.3692424085383355,-.13683987631719494,-.6063122548783239,-3.0428213499062093,-1.4302518240108333,-1.0960340088024054,.33378719268138207,-1.462532482812221,-1.1311602269894572,-.42160647485916913,-.7728239811338516,.051358135035689895,-.12451483496808054,.07456060444801794,-.0714002635141984,.12710467168208478,.20183473326046905,.5358217017440833,-.3191891366103783,.028167647498415164,-.4937578405327754,-.671559610604369,-.7989672475729755,-.01561152443937639,.07414820559189893,.44602122877613765,.17221102955705844,.07085444983721219,-.07178740615442418,.04335079435503895,.23127204626685866,-.49437187443974595,-1.3068505835636535,-.5050532801402167,-.5516235280495194,-2.409570266538846,-1.9119199452512292],bottom:{real:[4046.4241509904555,28839.973879370627,10191.512031448321,4381.745580729326,2071.954841391502,1107.282586745483,528.3455155315031,308.973302997304,185.81061014820492,130.08108126519062,87.65365496956511,59.09553675383809,43.5062694558484,34.57522231168169,30.79809745290528,25.523061346781674,25.951646714603154,25.52306134678159,30.79809745290521,34.575222311681706,43.50626945584836,59.09553675383802,87.65365496956517,130.08108126519082,185.81061014820492,308.9733029973038,528.3455155315033,1107.2825867454833,2071.954841391503,4381.745580729332,10191.512031448323,28839.973879370646,13493.224333003216,16392.51995145616,4871.835388507577,1571.3337493887716,567.6409664515353,373.6703632325283,244.24660034041102,142.79597933554817,106.13580676907658,75.85834762271053,58.06132256419008,39.85453847302155,30.569538051408923,25.094853941398878,22.929757321982656,20.808198660555963,22.04888812794956,23.622937534136554,29.13868315116802,38.08298107447914,54.39934218587819,77.82662149201184,121.61239162949131,177.63416429867098,254.30481783551838,430.47940336338183,664.6352580903059,1219.8477670929726,1935.5749815900854,3358.0980991141623,6069.217591691605,8660.703929170162,15384.540019848313,11175.737303494303,2216.879483433469,674.5985908630485,308.5763093759745,222.13525013253278,144.62539946693838,89.35178904734964,66.20028378403181,53.5880480094322,38.10483512466045,27.11271894406526,23.0333116325101,19.85886354561889,19.408029208714364,19.38215160767772,20.87171121755368,24.726583224259915,29.429525390428484,39.688247321389746,54.02667736866649,71.50918951653236,109.7023701375058,145.30501493896827,183.8476594317636,237.38092500065588,353.51632607639505,531.2703272946572,719.1706536370991,1367.9024800373177,2857.732229334478,8625.014975132006,3926.861100346452,2444.3527388912776,1028.8359899085383,585.5616655429562,332.57137935864864,180.13762334769046,105.17011934648103,61.496465220623485,45.504823244138095,37.90846017249317,30.846794326525625,21.222093075405745,18.718288087401802,17.679602313216872,17.409839934721365,17.794391783727544,18.55926931620083,21.34840958130715,24.39997962145603,30.767061622228063,38.103008129659166,44.81251118779231,61.577721983396955,87.29148588450872,106.99539363556599,134.18057082099898,169.37440787587974,269.99443977661724,364.5624879914471,674.5083954608231,1521.022929703357,2634.7343778883865,2024.849011267275,1926.8239401023498,1491.9478410044117,611.8362791883309,316.43682665588744,155.99683828976544,89.67337986475002,50.013293885425135,37.52800970717606,32.4518569290627,24.96614670350918,19.130394004010906,15.343856356149828,14.843145659919786,14.861292517540363,15.036681247518919,15.312687438440403,17.138709070816013,19.446116741695533,22.850207518010233,27.457440287528367,32.58150530830809,40.985078317877736,54.412823137373685,75.7624376442659,94.73305934658734,128.1467358253355,182.29010502256293,275.9549807303486,527.3269557849401,1132.5867520786235,1866.4077869841046,2266.7457843108455,2107.849516989544,1234.6592459623437,673.7095428348114,266.6693703142779,139.47307538222793,66.73073111331448,41.917980917088734,31.2590211502941,26.786032891522527,20.35627716260823,16.038244917569745,14.499148814332527,13.459360575928033,13.144389071570192,12.567429683418663,12.230328765246885,13.466217665828195,15.328301760046475,17.144679989146308,19.68756841312236,24.07413404470534,32.72703461228699,43.026808431859955,59.19377390623037,78.82051256303095,92.99417854470647,120.42091176843755,201.9182636225097,436.44287859172925,877.8862778005057,1439.6385876846614,1649.991139346905,1699.4038415062987,1039.2560892520887,495.5166152968933,235.81544665938515,113.58561083280532,60.921551746622946,35.725757089786256,25.024628727892466,22.490208420088727,17.75982379192019,13.543616943986416,12.938917306264663,11.956364952724385,11.421939705679733,11.372903592178258,11.032765269291394,11.408229662647633,12.481114469594095,13.60275540468532,14.91952183557448,17.807798659576154,23.277252196336814,31.950664619854233,47.416694920263616,56.268912844615144,64.959626427587,85.07080953900385,130.82046704446515,257.6757193526242,627.4672126329166,1194.1693767483914,1080.1900960853154,902.674413704009,600.0405579473822,333.23520458042,166.5653831933532,88.94630554757107,50.71739323274513,31.897215329939996,23.060146944216118,18.57978056254417,15.572760511446054,13.273777678692191,12.224913053368416,11.68638594982613,10.392044527527784,10.422646713468026,10.113778554702394,10.225072497047023,10.776357928238541,11.471833692521193,12.585855785544721,15.131216045563061,18.856673404562432,24.858220592568422,32.65728080220338,43.03798769624031,51.536289299313914,59.08796022590117,89.41884663641925,168.4478105078281,382.14409608709747,745.2779764237599,544.9352379585605,546.6325594355021,362.69938393816085,222.4530875664997,124.7835476428534,69.15551045543614,41.705006957506896,26.952419331651356,19.77855541151112,17.743475715717917,14.471795156401063,12.765457059373892,11.899864411981882,10.85818004844373,10.325708895539952,9.569271974525638,9.211348082086339,9.068032997029013,9.773443256037565,10.488284402310196,11.32319714067481,13.23504887223821,16.674941080314653,20.771526297093455,27.56941781857049,33.10306848160457,37.13160941522371,47.9647604307364,66.57881750760357,119.94841754808802,237.18123750436465,409.50889944188236,307.01018353832677,288.6676029163843,236.16368190120858,154.32114106589464,92.30377324569548,55.468009578938926,35.843010431224045,24.692475316947775,18.31794202383119,15.815283825259236,13.970653175227845,12.321358605090134,11.166914874614415,10.532076178141539,9.973858270077274,9.439553232293433,8.852477993151703,8.596032516390286,8.723315099425728,9.460546505870271,10.702831587760128,11.695932356823622,14.406509159208545,18.893042693096525,25.031728162044864,28.237283751764654,32.11015444012318,38.78178298956029,56.41249717617234,92.1569459348398,157.10935603874077,244.2492508143064,218.20881258539546,216.90433976724358,169.13695858014356,112.62100758585845,68.70530790516959,45.982361360241526,32.725373555898344,22.221572369125827,17.135020014783734,14.281960328360523,12.699315839076576,11.637118060780567,11.004832210877884,10.393382355075936,9.625960216653379,8.765201384599987,8.56501202823621,8.585447651774187,8.185151868753188,9.127087262857684,9.83839770401408,11.693775785132257,13.287947209975439,16.544820171465705,21.672488061489553,27.762087103200397,29.796933806391767,35.44318849026896,51.826480475596476,76.69213661877438,114.45554660359461,172.81330831382385,150.57608076172548,151.07347077509746,119.80060075739978,84.30708089677061,55.59442395215062,38.954469932130465,27.855857296119165,21.147383956632677,16.095362427853317,14.114901096214023,12.272097096384341,11.279235865220194,10.45557624282722,10.21340372397941,9.435254000412767,9.059591562681522,8.428576772270588,8.218967691673965,8.248320783896837,8.727213385180734,9.38534177467142,10.436988631508529,11.737372360714012,14.160123000210135,18.9595792421897,24.173697545434358,27.627516713161423,33.591531685669004,45.29743998493664,65.89753949730466,88.61094452128638,122.51594786973793,102.9717174324289,99.77114417163114,80.2546364501959,61.009511746666256,44.78691291380718,34.27102450032318,25.65851527359349,19.184194785168692,15.369946764821139,13.384363033613122,12.174478369218367,10.905903566261369,10.181651684644681,9.640875595253302,9.574230453297359,8.97633087224121,8.549303268806982,8.064448476431524,8.427686598834292,8.72909633979811,9.121092688430965,10.045472592156113,11.11042960636143,12.723025686618605,15.905816263070196,20.70949104573221,24.791931496783274,30.865414152401307,41.83571418562319,55.039237230593706,69.94725096238655,86.30565695416685,70.24607741665449,70.16319096773124,60.94158545735483,46.98868155158853,37.426824229947464,31.10511465478153,24.71795750943227,18.191253220796238,14.40571246916225,12.794837539520243,11.45286867499644,10.555233980671725,10.138595490186225,9.761793932644013,9.29451140670217,9.19785195708974,8.526970468266507,8.369498694773359,8.390085060120985,8.901978011001628,9.499322405169718,10.189344774081897,11.038776504531349,12.139382952337165,14.296273465828305,18.325479810549485,23.245126565071455,28.658675517780157,38.227879918404916,50.026933715114076,59.913478880080035,67.14288472835021,60.67320096274469,56.006191670589025,48.95238380733793,41.87728990082497,35.56375265114289,29.381802508508265,23.323351055229473,18.385352146785323,14.386074460433269,11.971768024825069,10.813949701229296,10.104265892334448,9.787383736052597,9.787645018242003,9.37365706088819,9.106783751430337,8.878274256847538,8.410860465515668,8.514529191196903,9.144463863378933,9.590368756917496,10.050972673200409,10.599176866339214,12.029252308933458,13.885440808202775,16.9338405396521,20.94976745380013,27.39267044577291,35.24694581160402,44.844494652773115,53.52792012053346,59.51190645761453,53.048047546158344,49.66790259120493,45.161821768091436,39.040569237963304,34.15349837076654,28.812200326236947,21.915204963295363,16.82529154292102,14.19448100676546,11.707465544074312,10.438485210613589,9.815124564873926,9.283134914271356,9.082142057825001,9.047050535951438,9.09240899822194,8.846694431391352,8.473593906264338,8.498070251525021,9.011344572210785,9.28987103872928,9.957567886683233,10.426127211956205,11.223822839806607,13.77325124182781,16.688691177663944,20.746301629724744,26.320191080313084,33.9798684365786,42.0788988747152,48.313306819757166,52.481937610238305,49.070609767594966,49.766679020971374,46.54427285231858,40.229040805773415,32.55983963778149,26.180018982316895,21.083604085221012,16.97356072267355,13.301411970448795,11.264067238060504,10.255581922596939,9.653621368211203,9.215377406296422,8.746811076118282,8.435654271837505,8.73238467436222,8.845859907838124,8.73238467436222,8.435654271837503,8.74681107611829,9.215377406296428,9.653621368211212,10.255581922596944,11.264067238060512,13.301411970448795,16.973560722673543,21.08360408522101,26.18001898231688,32.559839637781494,40.22904080577338,46.54427285231857,49.76667902097133,53.048047546158344,52.4819376102382,48.31330681975705,42.0788988747152,33.97986843657858,26.320191080313087,20.746301629724748,16.68869117766396,13.773251241827822,11.22382283980661,10.426127211956201,9.957567886683226,9.289871038729279,9.011344572210792,8.498070251525027,8.473593906264336,8.84669443139135,9.092408998221947,9.04705053595144,9.082142057825006,9.283134914271354,9.815124564873928,10.438485210613582,11.707465544074319,14.19448100676546,16.825291542921,21.915204963295366,28.81220032623694,34.15349837076655,39.04056923796328,45.16182176809137,49.667902591205,60.67320096274468,59.51190645761457,53.5279201205334,44.84449465277307,35.24694581160401,27.392670445772925,20.949767453800135,16.933840539652095,13.88544080820277,12.029252308933453,10.599176866339214,10.0509726732004,9.590368756917488,9.144463863378933,8.51452919119691,8.410860465515672,8.878274256847535,9.106783751430338,9.373657060888185,9.787645018242001,9.787383736052602,10.10426589233446,10.813949701229305,11.971768024825074,14.386074460433273,18.385352146785333,23.323351055229466,29.38180250850825,35.56375265114288,41.87728990082496,48.952383807337874,56.00619167058891,70.24607741665429,67.14288472835011,59.913478880079964,50.02693371511406,38.22787991840492,28.65867551778019,23.24512656507147,18.325479810549478,14.296273465828305,12.139382952337156,11.038776504531354,10.189344774081897,9.499322405169723,8.901978011001633,8.390085060120985,8.369498694773357,8.526970468266507,9.197851957089739,9.294511406702163,9.761793932644014,10.138595490186225,10.555233980671725,11.452868674996441,12.794837539520238,14.405712469162248,18.19125322079625,24.717957509432264,31.105114654781534,37.42682422994745,46.98868155158849,60.941585457354776,70.16319096773115,102.97171743242879,86.3056569541668,69.94725096238649,55.039237230593784,41.83571418562317,30.865414152401325,24.791931496783278,20.709491045732214,15.905816263070196,12.723025686618604,11.110429606361421,10.045472592156107,9.121092688430974,8.729096339798112,8.427686598834294,8.064448476431526,8.549303268806982,8.976330872241213,9.574230453297362,9.640875595253306,10.181651684644681,10.905903566261369,12.174478369218367,13.384363033613125,15.369946764821144,19.18419478516869,25.658515273593498,34.27102450032314,44.78691291380715,61.00951174666618,80.25463645019579,99.77114417163101,150.57608076172505,122.51594786973776,88.61094452128623,65.89753949730463,45.297439984936574,33.591531685669025,27.627516713161402,24.173697545434354,18.9595792421897,14.160123000210131,11.737372360714007,10.436988631508525,9.385341774671417,8.727213385180733,8.248320783896826,8.218967691673969,8.42857677227059,9.05959156268152,9.435254000412765,10.213403723979411,10.455576242827226,11.27923586522019,12.272097096384336,14.114901096214016,16.09536242785333,21.1473839566327,27.85585729611916,38.95446993213041,55.594423952150585,84.30708089677043,119.80060075739968,151.0734707750972,218.20881258539524,172.81330831382382,114.45554660359451,76.69213661877443,51.82648047559643,35.44318849026896,29.796933806391745,27.762087103200372,21.67248806148955,16.544820171465698,13.287947209975444,11.693775785132251,9.838397704014087,9.127087262857684,8.18515186875319,8.58544765177418,8.565012028236207,8.765201384599994,9.625960216653379,10.393382355075921,11.004832210877884,11.637118060780562,12.699315839076572,14.281960328360505,17.13502001478374,22.221572369125806,32.72537355589832,45.98236136024148,68.70530790516956,112.62100758585837,169.13695858014344,216.90433976724287,307.01018353832563,244.24925081430612,157.1093560387404,92.15694593483975,56.412497176172316,38.7817829895603,32.11015444012317,28.237283751764654,25.031728162044857,18.893042693096504,14.406509159208543,11.695932356823613,10.702831587760132,9.460546505870267,8.72331509942572,8.596032516390284,8.852477993151705,9.439553232293427,9.973858270077281,10.53207617814155,11.166914874614413,12.321358605090143,13.970653175227838,15.815283825259229,18.317942023831186,24.692475316947778,35.84301043122402,55.46800957893881,92.30377324569537,154.32114106589427,236.1636819012079,288.66760291638354,544.9352379585605,409.5088994418828,237.18123750436465,119.9484175480882,66.57881750760357,47.964760430736455,37.13160941522369,33.10306848160456,27.56941781857049,20.771526297093434,16.674941080314646,13.235048872238199,11.323197140674804,10.488284402310184,9.773443256037565,9.068032997029011,9.211348082086339,9.569271974525646,10.325708895539957,10.85818004844373,11.899864411981884,12.765457059373892,14.471795156401072,17.743475715717903,19.77855541151112,26.952419331651342,41.70500695750688,69.15551045543599,124.7835476428534,222.45308756649936,362.6993839381608,546.6325594355021,1080.190096085312,745.2779764237579,382.1440960870959,168.44781050782805,89.41884663641922,59.087960225901135,51.53628929931389,43.03798769624031,32.657280802203374,24.858220592568383,18.8566734045624,15.131216045563052,12.585855785544725,11.471833692521184,10.776357928238532,10.22507249704702,10.113778554702403,10.422646713468026,10.39204452752778,11.686385949826136,12.224913053368411,13.273777678692191,15.572760511446033,18.57978056254414,23.06014694421612,31.897215329939918,50.717393232745025,88.94630554757079,166.56538319335294,333.23520458041884,600.0405579473809,902.6744137040065,1649.9911393469013,1194.1693767483896,627.4672126329157,257.67571935262464,130.82046704446515,85.0708095390039,64.95962642758694,56.2689128446152,47.416694920263595,31.950664619854226,23.277252196336782,17.807798659576147,14.919521835574468,13.60275540468532,12.48111446959408,11.408229662647638,11.032765269291394,11.37290359217827,11.42193970567975,11.956364952724407,12.938917306264656,13.543616943986398,17.75982379192014,22.490208420088635,25.024628727892473,35.72575708978623,60.92155174662291,113.58561083280503,235.81544665938503,495.516615296892,1039.2560892520876,1699.403841506296,2266.7457843108423,1439.6385876846614,877.8862778005042,436.4428785917297,201.91826362250967,120.42091176843758,92.99417854470644,78.82051256303102,59.19377390623031,43.02680843185989,32.72703461228695,24.074134044705318,19.68756841312234,17.1446799891463,15.32830176004647,13.466217665828177,12.230328765246888,12.567429683418707,13.144389071570203,13.459360575928054,14.499148814332536,16.03824491756973,20.356277162608194,26.786032891522385,31.259021150294068,41.91798091708869,66.7307311133144,139.47307538222745,266.6693703142776,673.7095428348102,1234.659245962343,2107.8495169895405,2024.849011267276,1866.4077869841062,1132.5867520786235,527.3269557849405,275.9549807303485,182.29010502256293,128.14673582533564,94.7330593465875,75.76243764426589,54.41282313737368,40.98507831787773,32.58150530830807,27.457440287528364,22.85020751801021,19.446116741695526,17.13870907081601,15.312687438440404,15.036681247518965,14.861292517540395,14.843145659919811,15.343856356149836,19.130394004010878,24.966146703509185,32.45185692906261,37.528009707176075,50.013293885425036,89.67337986474986,155.9968382897651,316.4368266558874,611.8362791883301,1491.9478410044112,1926.8239401023493,3926.8611003464503,2634.734377888386,1521.0229297033557,674.508395460824,364.56248799144686,269.9944397766174,169.37440787587963,134.18057082099915,106.99539363556599,87.2914858845087,61.577721983396906,44.81251118779232,38.103008129659166,30.767061622228066,24.399979621456033,21.348409581307155,18.55926931620083,17.794391783727576,17.409839934721397,17.67960231321689,18.71828808740179,21.222093075405763,30.846794326525586,37.90846017249308,45.504823244138095,61.496465220623335,105.17011934648093,180.13762334768973,332.5713793586485,585.5616655429553,1028.835989908537,2444.352738891274,15384.54001984831,8625.01497513201,2857.732229334476,1367.90248003732,719.1706536370989,531.2703272946578,353.516326076395,237.38092500065625,183.84765943176362,145.3050149389683,109.70237013750581,71.50918951653222,54.02667736866647,39.68824732138969,29.429525390428473,24.726583224260004,20.871711217553678,19.38215160767773,19.408029208714364,19.85886354561895,23.033311632510113,27.11271894406525,38.10483512466044,53.58804800943198,66.20028378403181,89.35178904734937,144.6253994669383,222.13525013253218,308.5763093759745,674.5985908630483,2216.8794834334685,11175.737303494294,13493.224333003214,8660.703929170164,6069.217591691604,3358.098099114159,1935.5749815900851,1219.8477670929722,664.635258090306,430.47940336338263,254.30481783551838,177.63416429867087,121.61239162949126,77.82662149201184,54.399342185878204,38.082981074479164,29.138683151168006,23.622937534136597,22.04888812794956,20.80819866055599,22.92975732198266,25.094853941398917,30.56953805140891,39.85453847302151,58.06132256419004,75.85834762271038,106.13580676907651,142.795979335548,244.246600340411,373.6703632325282,567.6409664515357,1571.3337493887695,4871.835388507573,16392.519951456165],imag:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},imag:[0,-1.343901621327011,1.721833324939457,1.3937858919791224,-.904784867734521,.9956083728012485,.13374486301187097,.7978179059888694,.08123543012206277,.47338465820086184,-.07853466443921621,.2950011933196759,-.6247916276373429,.2951717097474046,-1.8712573358384692,.14096520515743682,0,-.14096520515741828,1.8712573358384816,-.2951717097473781,.6247916276373373,-.29500119331966146,.07853466443922305,-.4733846582008596,-.08123543012206277,-.79781790598886,-.1337448630118737,-.9956083728012485,.9047848677345208,-1.3937858919791226,-1.7218333249394557,1.3439016213270112,1.5871307700950068,.5637011092588632,1.2603198064423482,2.9317402483699255,-.8409084656280159,.2839544102155089,1.0393523450590114,.8310491123379952,.5733425968094368,.30043904784975134,.29266755430531527,.08293010406402415,-.3650283542031338,-.7621355462343821,-.5431683864795783,-.6602817924610193,.20250391456576916,-.059393044635645806,.9730252602081445,-.01782962412134724,.18933865423621773,.011846708470834844,.014269719747672759,-.16281560265463554,-.24410560657714067,-.34963232308526365,-.32234943120999277,-.6691127915152365,.14162995430492473,-.9690987495763558,-1.0446282489208472,1.3612809629252947,.7046490796090316,1.644656498115789,1.457626495523533,-.6840361527612806,-.681474708971962,.7311857387294264,1.2398159392319572,1.2736175855463174,.6555066385893611,.4589733287486102,.2494812924962717,.2295941880121868,-.6735544911252082,-.7891737944140509,-.833663158873984,-.02279594414115591,.157531969600533,.5083619532158246,.16292155588892338,.14047533322536612,-.029004083819245446,.042892010327960466,-.0847803286744503,-.1321705591443332,-.30971168558439593,-.44061350110378666,-.593809888932934,-.4671902772630274,-1.2068396187631398,-.9496940875254227,.2896061689589903,-.40038203546320883,.5562024927443893,.14065731983379595,1.390858139437829,-.6783334205276503,-2.0926714021100303,1.5120873610545131,1.7251253398279642,1.0499886203647506,.6413261932720733,.43315407205712014,.32584150801434064,.17968537990933128,-.27887473465086693,-.7264668532809715,-.9520027428255372,-.38747270801185796,.31172559850957127,.3167238274644899,.25925756638025876,.20404659434537992,.19201780058118942,.0025274006864131854,-.20254250312507205,-.301466819890184,-.45156398868756126,-.7158395939816518,-.7863634374888125,-1.3089140888320636,.4139391942136343,-.9230837800112506,-.9608676869506684,.994894967509791,-.39381772120025876,-.5926473858270555,-1.1161873115341066,-.38954314931717815,.15776662530084892,.39428020304678685,1.7089894615168126,.9286849101064603,.350973234838865,.3212528804707568,.23669588269358602,.19592809956108717,-.3264696987509312,-.5617213523679232,-.7659613758273989,-.4848448097808058,.0035984972735877987,.36234031342999445,.02584515038201295,.3813234596441356,.2917223569671276,.10460468586389386,-.14942504329756173,-.2340648419056832,-.5970258341713899,-.6479171630934003,-1.1972380302487249,-.37081056871520385,.31028937719203986,-.11181138224479611,.05022415004119631,-.5924281903599851,-.4703174557375312,-.5556706599080107,-.18073895078348806,-.07286620180284567,.9080135456055427,1.3448759333642528,.5639174664677074,.6882456370936582,.270544474915452,.1855550606492347,.21628766080629094,.08922769637111864,-.1330464412169812,-.5104407538921645,-.5748295632952253,-.499928421733889,-.008888226974178647,-.026119953804469152,.16649307508904443,.18021017930701566,.24129551707937363,.05141476622049072,-.05440923791370335,-.21354052285348152,-.34065461819243753,-.8321595295545801,-.6545515144341882,-.5171174887453374,-.34193161983249143,.2599196779142151,-.3192283896931117,-.2509623323107447,-.019538834540300996,.23386297177233037,.39736821511961345,.7260382384711854,.8168297825020705,1.0763583447726135,.806113881274012,-.023349196100613815,.09911450222934183,.11136104528246665,.11912886110102348,.1510441091194204,-.10294245821664937,-.34339582552474845,-.46071517851602106,-.2745498847774613,-.021291149638310566,.03581857177521538,.08165077597052256,.19593247304969552,.16021249355536668,.07341110181145782,-.09441366146062889,-.14774431296435828,-.3788677957633147,-.38953231590523063,-.6289222156301494,-.8021965599423332,.19764870263775744,-.2862016389005325,.04173881161878554,-.04750283167130345,.42759360787810174,.4435334033074589,.612327609854575,.7020782016690547,.7219260366639536,.6392879141687147,.3258926130651039,.17268517789923485,-.1183225223006091,.04939158090533926,.12347320818582375,.06469798143401673,-.006710209168704759,-.2737081974258909,-.26939466873920287,-.25176222060999,.00813102285298534,.013089808045657288,.185105158015618,.11713478908555769,.20974664985683705,.04874577836816892,-.006935953460316863,-.18083894269546222,-.1590773470203919,-.3049032697254573,-.4952504311071168,-.2063397715454307,-.28929558460304977,.01725566086804829,.08925055891284024,.3434977458343078,.3827720504358852,.5677210207032581,.4881147517750161,.43659704639067964,.38858095560717315,.35469216713625445,.11095078972724678,-.05035409898656247,.010426074631633324,-.023032548262322892,.0685580235114857,.1199625535177883,-.004434755204994449,-.14323623171577524,-.2742488887234425,-.15059247824174998,-.18695930341705305,.06813688020408373,.04916201156820307,.16362595169702937,.07832572097557808,.11153460033842358,-.10346450949096449,-.03925026108281402,-.12027128091306288,-.23113762225192683,-.07885965728132803,-.2598298090974699,-.112193082069427,-.19372413199270677,.1843821378255476,.22544536191476028,.22838873802709003,.11856768480607156,.2001101062269439,.16443500436191505,.1344103610721337,.1560099579732318,.02998498079292612,-.01795042558889614,-.095997178609832,.04581555915567668,.05060040141112804,.0625550701522621,.09536267957415628,-.2588472108186818,-.19352665675464722,-.35758313393883445,.05724199410125697,-.07448979769121256,.15760636776309309,.07711029442456042,.21793581355625327,-.0853841567280578,.0542780951185194,-.06351351655225722,-.13925876777247995,-.05309048214962413,-.08855066431481835,.09705317802047587,.021982682491266895,-.0320570437725536,.011606155190390474,.20297398899260674,.08713770793778194,.14235450986309658,-.006634429052264465,.06944355111332648,.037974760198136455,.02723212012252952,-.030406089689394462,-.06289143982632239,-.033462702565164315,-.13091343010011852,.18662643567548856,.14580799486104234,-.055902479292620696,-.12813917376287484,-.4370654490609753,-.09792671156559801,-.17130544619864244,.30727693305691806,-.2953735036217468,.2205640575182558,-.16529753202987246,.3404745588343642,-.0020829156573361745,-.1477566402016345,-.07451855199653255,-.1485032050753669,-.057283952975165524,.06466541846880637,.23511892751228192,.11870789775778592,.0625549454189092,-.03129802431166904,.0064402102662661845,-.07908206366482008,.0553675188881671,.025089334126077875,.06380009174949475,.01598882409357055,-.0485453569421806,-.11558972094679192,-.09748734332934658,-.0004949292816682794,-.18157168721539482,.3394228896917068,.3052238631985539,-.5463958953710175,.013830571830100688,-.38850732372171304,.223075916963486,-.31865288748874443,.25745374979707547,-.8188534714960727,.5085516891060978,.20195166784419227,-.06978574367189032,.05088417995496527,-.18377202523753672,-.17303565260659334,-.15924096907201105,.0921469322051947,.26379835890783954,.35934781180257075,.24329566614587647,.18564601960109514,.24223475523068938,.2896764687039265,.15967526911861643,.2236525476678126,.12185893624650075,.07010515076512246,-.045495054958742086,-.13016925945874308,-.12331107551299306,-.09658598904032947,.22919036999990153,-.39865574246315477,.3675558227752026,.4559731496763589,-.9322732995444801,.3211078437592451,-.5916002406790702,.39469180639349893,-1.5810043928614619,.7192616842627553,-.09592034339847655,-.08487714593751221,.4039957386289845,-.04174339774265379,-.1030386108486746,-.21220001866353477,-.17318676777643013,.015792824133968684,.3799471493407144,.4573031649737595,.4849146321923636,.278045596991639,.330997517931827,.07346181941874468,.3044571730020384,.3481533243335257,.27336662525128713,.05011351109495184,-.05940584463270739,-.1626114347474223,-.10891422081227681,-.07507029717115797,.15348950297637756,.6313299455118446,-.9360445989877769,.4232569705540574,1.1782712312395338,-1.6700526640562563,.6730754801286777,-2.036587646020969,.696651869739933,-.3990336398782886,-.7775110416888031,.5628167675812451,.04446899108365955,.08127813274590998,-.07099339435842372,-.09185286036621106,-.10956166698887557,.07294149309473505,.3516732889665791,.6348806757989582,.5619968460520506,.6062770727450226,-.01897019762481933,.37668655809680845,.2231700372991837,.17596357423928666,.182021098919622,.038230887694388455,-.10475039750351335,-.1512317199312191,-.11278544639649389,.05411089572076022,.23852479976301316,.30802887330694756,.9587111952302938,-1.4503952980081434,-.06145839150349969,2.138997807668353,-3.5142346308062073,1.6764175122847729,-.6325266075787294,-1.1970497991660358,.46027494328631885,-.38868529039399474,.06306613375883041,.08502403448097447,.047630852690686495,-.022775175196356016,.011847923870825085,.13095780969018636,.39870906011464996,.5410013327184018,.6285964225750199,.12859489098386362,-.17371304193339687,-.7713566279215256,-.3569696489220254,-.15350152251372465,-.08110842702990148,-.12890403553126065,-.14048874638904316,-.18368108831833277,-.13143015225876853,.03731818798640201,.398153506664189,.446850695599386,.29854169122462937,1.0193515924216456,-2.1696976832709978,-1.5476694374721527,4.111501359710062,-1.6066056279080296,-1.1129988398741206,.9464135190271308,-.6646448718237143,-.22405122030787003,-.1684513504650424,.10281428632219461,.12776142939872864,.10903691838775739,.0974771489483065,.19622512970077355,.3758189010900003,.5815217498439217,.575882448967759,.5683582142796539,0,-.07566059104010174,-.5319087481065502,-.4906650633876551,-.2538852177443554,-.17759782612549996,-.17342105765811164,-.1717237906748887,-.17163733194043357,-.009691726103346027,.23320936684713756,.6154416324788491,.2303178322389413,.4504667163321609,-.2542218615438303,-1.2338903723029762,0,1.233890372302968,.2542218615438289,-.45046671633216256,-.23031783223894184,-.61544163247885,-.2332093668471385,.009691726103345007,.17163733194043357,.17172379067488885,.17342105765811225,.17759782612550043,.25388521774435546,.4906650633876564,.5319087481065498,.07566059104010284,.17371304193345374,-.5683582142795844,-.5758824489677223,-.5815217498439111,-.37581890108999716,-.1962251297007692,-.09747714894830553,-.1090369183877569,-.12776142939873006,-.10281428632219579,.1684513504650413,.22405122030786861,.6646448718237126,-.9464135190271386,1.112998839874119,1.6066056279080259,-4.111501359710058,1.5476694374721462,2.169697683270998,-1.0193515924216472,-.2985416912246324,-.44685069559938834,-.39815350666419097,-.03731818798640415,.13143015225876697,.18368108831833294,.14048874638904385,.12890403553126736,.0811084270299098,.15350152251374438,.3569696489220662,.7713566279215556,.018970197624865574,-.1285948909838308,-.6285964225750031,-.5410013327183986,-.39870906011464824,-.13095780969018578,-.011847923870824886,.02277517519635736,-.04763085269068705,-.08502403448097469,-.06306613375883256,.38868529039399197,-.4602749432863225,1.1970497991660347,.6325266075787281,-1.6764175122847713,3.5142346308062082,-2.138997807668362,.06145839150349631,1.4503952980081398,-.9587111952302971,-.30802887330694667,-.2385247997630148,-.0541108957207615,.11278544639649313,.15123171993121864,.1047503975035141,-.03823088769438403,-.18202109891961496,-.1759635742392747,-.2231700372991606,-.3766865580967669,-.33099751793180054,-.6062770727449965,-.5619968460520336,-.6348806757989502,-.35167328896657507,-.07294149309473368,.1095616669888755,.0918528603662118,.07099339435842339,-.08127813274590924,-.044468991083660724,-.5628167675812489,.7775110416888034,.3990336398782871,-.6966518697399285,2.0365876460209633,-.6730754801286755,1.6700526640562572,-1.17827123123954,-.42325697055405653,.9360445989877786,-.6313299455118465,-.15348950297637845,.0750702971711561,.10891422081227575,.16261143474742193,.05940584463270852,-.05011351109494761,-.2733666252512826,-.3481533243335174,-.3044571730020204,-.07346181941872514,-.24223475523068566,-.278045596991634,-.48491463219235625,-.45730316497375445,-.37994714934071183,-.015792824133968708,.17318676777642958,.21220001866353638,.10303861084867472,.04174339774265514,-.40399573862898636,.08487714593751182,.0959203433984764,-.719261684262751,1.5810043928614652,-.3946918063934955,.59160024067907,-.32110784375924395,.932273299544479,-.4559731496763611,-.3675558227752009,.39865574246315755,-.22919036999990147,.09658598904032888,.12331107551299252,.1301692594587433,.045495054958742745,-.07010515076512172,-.12185893624649984,-.223652547667811,-.15967526911861513,-.28967646870392255,-.006440210266261173,-.18564601960108706,-.2432956661458719,-.3593478118025666,-.2637983589078372,-.0921469322051936,.15924096907201093,.17303565260659445,.18377202523753683,-.05088417995496395,.06978574367189057,-.20195166784419286,-.5085516891060973,.8188534714960719,-.25745374979707175,.3186528874887527,-.22307591696348483,.3885073237217165,-.013830571830101068,.546395895371022,-.305223863198555,-.3394228896917048,.18157168721539607,.0004949292816654663,.09748734332934587,.11558972094679136,.04854535694218131,-.015988824093569717,-.06380009174949508,-.025089334126078205,-.055367518888164394,.07908206366482075,-.08713770793777711,.03129802431166981,-.06255494541890674,-.1187078977577844,-.23511892751228033,-.06466541846880579,.05728395297516605,.14850320507536743,.07451855199653275,.14775664020163706,.0020829156573371555,-.34047455883436323,.16529753202987046,-.22056405751825445,.29537350362174863,-.30727693305691484,.17130544619864224,.0979267115656023,.4370654490609771,.12813917376287753,.055902479292622584,-.14580799486104357,-.18662643567548898,.13091343010011883,.03346270256516358,.06289143982632284,.03040608968939467,-.02723212012252924,-.03797476019813689,-.06944355111332663,.006634429052265361,-.14235450986309153,-.22838873802708684,-.2029739889926063,-.011606155190393872,.032057043772551565,-.021982682491265355,-.09705317802047468,.08855066431481819,.05309048214962463,.13925876777248047,.06351351655226015,-.054278095118517826,.08538415672805795,-.21793581355625447,-.07711029442455894,-.1576063677630919,.07448979769121587,-.057241994101257694,.3575831339388394,.1935266567546499,.25884721081868634,-.09536267957415476,-.06255507015225903,-.050600401411129904,-.04581555915567774,.09599717860983221,.0179504255888953,-.029984980792924155,-.15600995797322956,-.13441036107213314,-.16443500436191227,-.20011010622694014,-.1185676848060674,-.3827720504358852,-.22544536191476122,-.18438213782554774,.19372413199270522,.11219308206942717,.25982980909746933,.07885965728132813,.23113762225192824,.12027128091306288,.03925026108281611,.10346450949096535,-.11153460033842286,-.07832572097557809,-.16362595169702793,-.049162011568201006,-.06813688020407746,.18695930341705305,.15059247824175628,.2742488887234457,.14323623171577923,.004434755204995782,-.11996255351778637,-.0685580235114842,.023032548262321723,-.010426074631633324,.05035409898656467,-.11095078972724633,-.35469216713625396,-.38858095560717304,-.43659704639067964,-.4881147517750165,-.5677210207032584,-.4275936078781049,-.34349774583431025,-.08925055891284522,-.017255660868053985,.2892955846030494,.20633977154543065,.49525043110711575,.30490326972545867,.15907734702039197,.1808389426954664,.006935953460319154,-.04874577836816606,-.20974664985683683,-.11713478908555536,-.18510515801561447,-.013089808045645399,-.008131022852986567,.2517622206100028,.2693946687392072,.273708197425899,.006710209168707876,-.06469798143401254,-.12347320818582255,-.0493915809053365,.11832252230060807,-.17268517789922963,-.32589261306509937,-.639287914168712,-.7219260366639526,-.7020782016690555,-.6123276098545748,-.44353340330746277,.01953883454029997,.04750283167129971,-.041738811618788646,.2862016389005296,-.19764870263775797,.8021965599423365,.6289222156301542,.3895323159052357,.37886779576331475,.14774431296436413,.09441366146063283,-.07341110181145313,-.16021249355536557,-.19593247304968892,-.08165077597051315,-.03581857177519336,.021291149638310077,.27454988477748077,.46071517851603194,.3433958255247594,.10294245821665464,-.15104410911941546,-.11912886110102075,-.1113610452824651,-.09911450222934172,.02334919610061857,-.8061138812740085,-1.0763583447726097,-.8168297825020715,-.7260382384711874,-.39736821511961523,-.23386297177233123,.4703174557375292,.2509623323107428,.31922838969310624,-.25991967791422005,.34193161983249054,.517117488745342,.6545515144341917,.8321595295545877,.3406546181924375,.21354052285348993,.05440923791370753,-.051414766220484194,-.24129551707937194,-.18021017930700467,-.16649307508903324,.02611995380449984,.008888226974177819,.4999284217339134,.5748295632952383,.510440753892181,.13304644121698647,-.08922769637111018,-.21628766080628836,-.18555506064923225,-.27054447491545125,-.688245637093645,-.5639174664677029,-1.344875933364252,-.9080135456055456,.07286620180284165,.18073895078348665,.5556706599080086,.3938177212002582,.5924281903599832,-.05022415004119711,.11181138224479518,-.31028937719204,.3708105687152074,1.1972380302487284,.6479171630934083,.5970258341713901,.2340648419056917,.1494250432975659,-.10460468586388726,-.2917223569671256,-.38132345964412656,-.02584515038199919,-.36234031342997136,-.0035984972735878563,.484844809780835,.7659613758274156,.5617213523679431,.32646969875093934,-.19592809956107882,-.23669588269358457,-.32125288047075495,-.3509732348388646,-.9286849101064518,-1.7089894615168075,-.3942802030467882,-.1577666253008498,.3895431493171764,1.1161873115341048,.5926473858270547,-.5562024927443876,-.9948949675097908,.9608676869506646,.923083780011243,-.4139391942136339,1.3089140888320632,.7863634374888133,.7158395939816597,.4515639886875609,.3014668198901915,.2025425031250778,-.0025274006864056797,-.1920178005811869,-.20404659434537004,-.25925756638025355,-.31672382746446043,-.3117255985095709,.387472708011902,.9520027428255602,.7264668532809944,.2788747346508717,-.17968537990931685,-.3258415080143367,-.4331540720571135,-.6413261932720714,-1.0499886203647348,-1.7251253398279605,-1.5120873610545145,2.092671402110029,.678333420527655,-1.3908581394378237,-.14065731983379445,-.704649079609032,.4003820354632061,-.2896061689589916,.9496940875254203,1.2068396187631385,.4671902772630277,.5938098889329356,.44061350110379105,.30971168558439566,.1321705591443394,.08478032867445422,-.042892010327952576,.02900408381925063,-.1404753332253544,-.16292155588890503,-.5083619532157557,-.15753196960053273,.022795944141262008,.8336631588740234,.7891737944140912,.6735544911252132,-.2295941880121686,-.24948129249626083,-.4589733287485918,-.6555066385893606,-1.2736175855462932,-1.2398159392319503,-.7311857387294178,.681474708971963,.6840361527612938,-1.4576264955235338,-1.6446564981157907,-1.587130770095007,-1.361280962925294,1.044628248920846,.9690987495763536,-.1416299543049248,.6691127915152362,.32234943120999365,.34963232308526704,.244105606577141,.16281560265463482,-.014269719747667968,-.011846708470826806,-.18933865423621368,.017829624121361812,-.9730252602081131,.05939304463575307,-.2025039145657705,.6602817924610479,.5431683864796097,.7621355462344159,.36502835420313695,-.08293010406400844,-.29266755430530383,-.30043904784973247,-.5733425968094366,-.8310491123379783,-1.039352345059011,-.28395441021550044,.840908465628016,-2.9317402483699175,-1.2603198064423498,-.5637011092588653],height:32,width:32,top:{real:[7376.258656397969,2820.8522261533344,-5690.949708539517,-4380.451337629613,388.6547315083493,-903.738522922329,-92.23368885456094,42.706854165930984,-25.699252344104405,18.326281263011424,-9.854238749915744,37.93351045351143,-7.866668430967025,29.305075180843883,-62.72861735466191,59.85324062738893,-83.63637439904494,59.853240627386725,-62.728617354660756,29.305075180844177,-7.866668430967183,37.93351045351143,-9.854238749916066,18.326281263013065,-25.699252344104405,42.70685416593069,-92.23368885455788,-903.7385229223205,388.6547315083471,-4380.4513376296045,-5690.949708539511,2820.8522261533035,-14789.032757371706,-31341.18584811776,-11739.029695619593,-866.7846665811339,-286.68893204831016,-488.3313322508757,-120.74864963582691,33.024718339611894,4.6010715329524166,-5.445674010995977,4.113903067106239,6.8633911029603265,13.634662924808397,1.860738389345556,-.35796846682150263,-16.62506921077511,-14.807142725465134,-11.664010623894898,.8207681555703734,-12.155673848711613,29.148348103795893,15.708115389403888,15.457503110539639,-12.683126140048403,18.96112093185931,-53.601071866945205,34.13442733448511,-942.7276077420217,-816.050944813798,-3798.5470080468217,-8876.42787310433,2890.8320511623124,-27232.42194054986,-15984.118662988652,-6745.568222360413,-409.0173927639226,-42.225544009425754,-526.2922550452712,-49.32565565290618,-23.20435390028933,15.630174176003303,-14.835941429972856,6.4726407463551725,1.9958373496876167,13.291351981828791,-1.1889020916883648,10.030112101155916,-20.67441842084843,-.1180338988714332,-18.74520767411604,-1.9041291470929314,-7.871099481794243,20.38587909738803,14.857882580655026,16.95019727458754,-2.033086164989526,25.446982376231624,-20.62459219009594,89.30325669500957,-637.0667107212057,-1428.8365567175017,-3113.2951228079887,-8881.588935127695,-20696.443600183225,-9007.313179629116,-5346.330609000281,-1439.1675666408983,-1292.5663502582722,-654.0994476037728,-301.7022747283896,-97.440927522084,-3.3329385156017457,-8.202796513162015,-5.774263947387032,-.5106953831985463,6.640288063631823,8.012652033059101,4.0882931682311625,-1.521034739607415,-2.233575686924605,-2.3288001542285928,-8.13154709651151,-6.9403489082507335,-3.674864902798056,4.593750742744353,9.495700824153968,10.21057060635477,11.67682549979278,23.75885873750166,20.28823698768961,20.9697668571251,-333.51324485695324,-810.1584353673162,-2278.682054098889,-5194.409091620209,-7188.339898707115,-3154.0647285180166,-3175.2001764803263,-3085.2108289353805,-1226.2977859942123,-836.2620618172178,-301.22169990911055,-15.123294918373254,-11.324269109892445,-4.999221097969336,-6.7152536525607,-1.7063097661780617,2.7727430774894133,7.135788132168215,4.866990482124882,2.7536893948953045,-2.039934630711028,-.5489892871976103,-2.9485150656567436,-3.1026085263061316,-1.3614545093317587,-.47304719477880164,4.040907971073893,6.248331301572371,8.854025232654797,18.80214162335462,24.681352644731625,-6.111478730512031,-148.49350684902615,-572.3488635999528,-1663.447165744248,-3308.605953472853,-4493.828247899506,-3720.0991836319017,-3323.4413322476125,-2223.332633868252,-1347.5218927383742,-402.86472873295924,-179.0778566066358,-42.17162736915355,13.024576486879551,-6.680339136637107,-4.3910663300422375,-1.9843645852297727,2.2081255979025864,3.4357055351949564,4.866739798973896,-.008801816555391827,-1.2900498248809058,-2.223069631674785,-.7961310239517896,-2.1003135650570957,-.12607857026311342,.39928478103703097,3.6189445517483683,5.523084701132182,8.08071443227348,9.653783720993834,14.647883903859292,41.76117110773358,-2.5048396429986766,-288.68438568639834,-1058.7748743456032,-2111.6481404168812,-2853.5518466904464,-2206.474238883325,-2207.488296900341,-1427.060029597421,-607.9731104871157,-283.75431628355585,-25.222873313531675,-11.21903778037437,-8.365382280797615,1.9503276148055415,-4.8653324939916756,-1.0558165909594248,.18037835028025548,3.723230036877415,2.6260151255238955,1.901747650437611,-2.157984497724208,-1.9174482807780493,-2.671365924063863,-1.6822520344543337,-1.783596980145315,.50013744114288,2.3612666445612516,3.9892729615099713,5.028259733848998,4.384961399296521,7.567544914645971,26.73833027450421,30.29300971120987,-72.36523804645397,-397.03998761961856,-1129.7740740979677,-1877.1475049531305,-1015.8170093531105,-757.3385658121136,-464.0498676348327,-221.8093865245269,-66.67014095320897,-32.688631361988044,12.245388279073117,-2.09491941357581,-4.921421792424727,-.7686322780239969,-1.3611346863617457,.5920300131883174,2.3940543871676745,2.138653552857357,.12698658321630202,-.36055346759858353,-1.509631760657328,-.37490601010058217,-1.4076418772333708,-.9909556252137327,.02570461580723476,1.7006413859335137,2.41012418633353,2.72304464828999,4.897547426352959,5.579917642233582,7.382361392952302,3.3531473980019464,-7.094723129271724,-129.95057654055665,-447.33256260550814,-801.4985531526427,-297.712804672423,-206.25666421819534,-105.85720001872387,-40.587336797783266,-19.033005269759897,.6862352568504775,-2.224754122223199,2.868642893715354,-1.3772856826259623,-3.700118286073842,.5603303011127165,.3164957648182627,2.6435570864758695,2.072901917366745,1.3896745329326239,-1.1733083260901866,-.5564284933709801,-.7531942972718523,-.16542223594150865,-.3498151014517736,.639471018274414,.6449513671490333,1.5357324193076427,2.8130362926385226,4.284541597255651,3.341557420163751,1.8747628167747612,4.309201987250532,1.2280777000161127,-53.113548920223614,-153.12296297306594,-262.5910689083988,-78.50796675246865,-44.71395672976317,-24.503242066462356,-11.422688403833899,-6.832488237410147,-1.9389416594991726,2.3416848160301655,-1.9581076589813595,.6544162473914797,-1.6215192060328243,-3.0886268279599727,2.557402471968773,2.5859312055320047,3.582324284715654,2.385170800316441,.411488665094779,-1.7870448740379692,.3586747560851346,-.33833230756510146,.7213491787051987,-.6451343286468626,-.036676325952571386,1.880678514199683,3.0459530955995717,3.0361534846987768,1.8248078988499765,2.0278729258957484,1.4298438030821454,1.444150632114136,-16.470770345398158,-59.03838740640355,-81.62468733113072,-41.65158074717607,-20.04858945819673,-26.796686775361913,-13.274828683787613,-5.48494102646779,-1.7682797425272327,.5127695090162155,.11701161368370352,-2.1525887062494076,-.35663258536781867,-.3882693848937121,-2.5566610369397282,6.513912829330354,4.153796425003821,2.177850779277181,.6761807821160477,.6727176011927574,-.03322371296847739,1.7891382881043305,.7654900301212932,-1.8840461990319548,.6276437133660342,2.9500669911593334,2.799854903105731,2.7114466415734606,2.640497491382968,2.5087646302130264,.3613507110411972,-.8597558755237771,-5.89936615548755,-19.483874473281006,-46.656198806892085,-42.44718550207896,-49.47539998840752,-28.80904080219163,-23.364991274814315,-9.372036001443622,-2.193549633075087,.7323779052753541,-.6028717635248831,-1.067236191051992,-3.837446138403733,.8126491631670523,3.702478373345459,-2.227430700667376,12.171761179906976,2.648499723117314,2.1242155181960216,1.3916869062247985,3.2969221728544564,.1414776211221006,-1.2659388719629114,1.2983452624583423,2.4646463691490883,1.8819178233751466,2.469919778217255,3.410560044540994,3.476877662739366,1.970602508408192,.5456937943711528,-.6150348829608226,-1.584537886719974,-9.910885111885545,-17.96889314262851,.8328024839604734,-16.804391379900096,-34.94566909960443,-18.287776152890835,-10.19076861522101,-2.365935575489219,.38430207827148843,-.39175809943359,-2.078662076271716,-2.1066158183404973,-4.0664292874937455,5.105639281222473,9.471148516042044,-2.577327881134023,13.563457368659881,5.445444411621721,3.0810071966308192,3.71409458782056,-2.7028450063821525,1.3893389983926554,5.029567791169772,2.0512141006459763,.5768744010433312,3.139987490646312,4.304436149290965,3.228692605037394,2.0294536549063102,-1.2648718051872285,.8198227841656076,5.193746134405688,4.566053007097891,-2.575198281431435,10.842808636227273,-2.7634934625905125,-4.741036325511608,-13.231297049532179,-1.239206941737581,.576956771407574,1.6572428400911725,-.8048756694131317,-2.197640605466401,-2.9337382106235617,-.9769607434101947,-.5203983011347634,8.693274674091336,18.008772340009436,-6.389470676234774,16.656214263229323,5.648012814589276,-2.642075767662634,6.983253879862469,8.71177531529134,2.944231966553327,-.4194257648970201,1.9464964791115495,2.8117062685871983,3.586606822562346,3.6410340078674697,2.1750438821370093,.9274613552108363,-.10515597578954901,10.916870623975495,22.695665816423684,26.922229107827643,56.766547106622895,34.3463794813641,8.02098906722306,4.227686749372474,2.0129650120803855,4.572197379285084,1.7026114564114816,-.10193290249876912,-1.9877285465951933,-1.4091416884493304,-1.0407935339809435,4.692713510495082,4.461866465996299,13.14685287043932,23.49016175637019,-8.54486765868434,5.763904015786262,6.710397445275458,11.090643871879529,8.611796474987928,.95828374077,2.885914301402635,1.6803595914225926,1.5724318132354216,2.366484248547459,3.3844724421254813,2.8754034241014996,.8142069750518306,3.4592633965370854,8.541867898911974,26.408180301615612,46.47243379513072,15.748155014076561,18.939305693948317,18.355423454953527,7.438594793720825,6.84215823955665,3.828482944166501,2.3084513014265475,.01438358804135348,-.7017083759025844,-.9519271341888802,.604886383870369,4.7316501322768225,11.640012070252736,11.084534895769892,7.942755232382746,17.090358547431578,-4.006276541512437,18.90347131446114,10.522914852414784,-.3172708519471489,8.191406242187256,5.567876842121583,1.9515757898119943,.13204460835173984,.9468697939602826,2.2566984460298456,3.5582629306092612,2.7150237945754423,-.038191379039643265,6.309066288275824,18.822434458740766,20.387061197767007,34.21042461069561,25.78016711295075,13.422328957688888,4.257816250206805,2.3122896178400203,4.189268002804536,2.259247881703766,.9537225958470233,-.4765342590896943,.06924012891108702,.917811795795561,6.601850524692877,10.152138543237006,11.530381877152177,5.6211304516254526,4.790907028041365,35.86798950390679,4.790907028041358,5.621130451625443,11.530381877152157,10.152138543237017,6.601850524692898,.917811795795565,.06924012891108133,-.4765342590896943,.9537225958469944,2.2592478817037476,4.189268002804514,2.3122896178399985,4.257816250206748,13.422328957688848,25.78016711295069,15.74815501407811,20.387061197767874,18.82243445874189,6.309066288276548,-.03819137903956219,2.7150237945755555,3.5582629306093274,2.2566984460298958,.946869793960297,.1320446083517558,1.951575789811984,5.567876842121564,8.19140624218721,-.3172708519471452,10.522914852414772,18.90347131446111,-4.006276541512388,17.090358547431556,7.942755232382751,11.084534895769902,11.640012070252746,4.7316501322768385,.60488638387039,-.9519271341888812,-.7017083759025972,.014383588041281273,2.308451301426475,3.8284829441663635,6.842158239556676,7.438594793720435,18.355423454952824,18.9393056939491,56.76654710662406,46.47243379513245,26.408180301616227,8.54186789891221,3.4592633965371484,.8142069750518798,2.875403424101515,3.384472442125488,2.3664842485474735,1.572431813235436,1.6803595914225982,2.8859143014026083,.9582837407699747,8.61179647498788,11.090643871879506,6.710397445275469,5.763904015786259,-8.544867658684302,23.490161756370185,13.146852870439265,4.461866465996277,4.692713510495103,-1.0407935339809418,-1.4091416884493408,-1.98772854659521,-.1019329024988234,1.7026114564114307,4.572197379285043,2.0129650120803833,4.227686749372477,8.020989067223404,34.346379481364394,10.842808636228447,26.9222291078285,22.695665816424683,10.916870623975989,-.10515597578943024,.9274613552109011,2.175043882136998,3.6410340078674537,3.5866068225623455,2.8117062685872063,1.9464964791115584,-.41942576489699973,2.944231966553285,8.711775315291318,6.983253879862468,-2.642075767662676,5.648012814589287,16.6562142632293,-6.389470676234752,18.008772340009443,8.693274674091327,-.5203983011347356,-.9769607434101951,-2.9337382106235728,-2.1976406054664195,-.8048756694132073,1.657242840091119,.5769567714075567,-1.2392069417374179,-13.231297049531948,-4.741036325511325,-2.763493462589494,.8328024839608222,-2.5751982814309775,4.566053007098211,5.1937461344059415,.8198227841657492,-1.2648718051872136,2.029453654906283,3.2286926050373275,4.304436149290965,3.1399874906463054,.576874401043345,2.051214100645962,5.02956779116974,1.3893389983926545,-2.7028450063821756,3.7140945878205622,3.081007196630816,5.4454444116217395,13.563457368659845,-2.5773278811340234,9.471148516042044,5.105639281222461,-4.06642928749373,-2.1066158183405044,-2.0786620762717254,-.39175809943363327,.38430207827145285,-2.3659355754891784,-10.190768615220893,-18.28777615289057,-34.94566909960389,-16.804391379899673,-42.447185502078064,-17.968893142627813,-9.910885111884598,-1.5845378867194357,-.6150348829606075,.5456937943712441,1.970602508408127,3.4768776627392723,3.410560044540968,2.469919778217264,1.881917823375139,2.4646463691490985,1.2983452624583438,-1.2659388719629485,.1414776211221116,3.2969221728544715,1.391686906224813,2.124215518196023,2.6484997231173293,12.171761179906973,-2.227430700667368,3.702478373345508,.8126491631670488,-3.837446138403738,-1.0672361910520076,-.6028717635249369,.7323779052753103,-2.1935496330750563,-9.372036001443469,-23.364991274814056,-28.809040802191326,-49.47539998840697,-41.65158074717507,-46.656198806891,-19.4838744732805,-5.899366155487263,-.8597558755235543,.3613507110412495,2.5087646302129953,2.640497491382889,2.711446641573449,2.7998549031056945,2.950066991159325,.6276437133660522,-1.8840461990319775,.7654900301212954,1.789138288104325,-.033223712968466615,.6727176011927521,.6761807821160666,2.177850779277167,4.153796425003827,6.51391282933036,-2.5566610369397242,-.38826938489369667,-.3566325853678395,-2.152588706249413,.11701161368368215,.5127695090161969,-1.76827974252719,-5.484941026467714,-13.274828683787417,-26.79668677536157,-20.048589458196275,-78.50796675246646,-81.62468733112892,-59.03838740640205,-16.47077034539769,1.4441506321142048,1.429843803082246,2.0278729258956907,1.8248078988499317,3.036153484698732,3.045953095599546,1.8806785141996951,-.036676325952591224,-.6451343286468558,.721349178705193,-.3383323075651067,.35867475608511745,-1.7870448740379619,.4114886650947502,2.385170800316434,3.582324284715646,2.585931205532017,2.5574024719687887,-3.08862682795997,-1.6215192060328063,.6544162473914552,-1.9581076589813555,2.341684816030153,-1.9389416594989646,-6.832488237409854,-11.422688403833355,-24.50324206646105,-44.71395672976105,-297.712804672423,-262.5910689083989,-153.12296297306594,-53.11354892022388,1.2280777000160852,4.309201987250408,1.8747628167747172,3.341557420163666,4.284541597255651,2.813036292638515,1.5357324193076258,.6449513671490316,.6394710182744104,-.34981510145179595,-.16542223594153913,-.7531942972719063,-.5564284933709801,-1.1733083260902135,1.3896745329326132,2.0729019173667376,2.6435570864758655,.3164957648182751,.5603303011127181,-3.7001182860738244,-1.3772856826259623,2.8686428937153425,-2.224754122223166,.6862352568505768,-19.033005269759858,-40.587336797783074,-105.85720001872383,-206.25666421819477,-1015.8170093530997,-801.4985531526338,-447.3325626055032,-129.9505765405554,-7.094723129271765,3.3531473980017035,7.382361392952007,5.579917642233341,4.897547426352917,2.7230446482898696,2.4101241863335168,1.700641385933505,.025704615807253747,-.9909556252137635,-1.4076418772333852,-.37490601010063784,-1.5096317606573337,-.36055346759863915,.12698658321626774,2.1386535528573165,2.39405438716767,.5920300131883396,-1.3611346863617075,-.7686322780239524,-4.921421792424735,-2.0949194135756803,12.245388279073195,-32.688631361987156,-66.67014095320768,-221.8093865245236,-464.0498676348275,-757.3385658121049,-2206.474238883316,-1877.1475049531243,-1129.7740740979648,-397.03998761961947,-72.365238046454,30.293009711209137,26.738330274503873,7.567544914645611,4.3849613992964835,5.028259733848883,3.9892729615099154,2.361266644561238,.5001374411428784,-1.783596980145335,-1.6822520344543537,-2.6713659240639043,-1.9174482807780469,-2.1579844977242066,1.9017476504375719,2.626015125523887,3.7232300368773963,.18037835028033014,-1.0558165909593593,-4.865332493991508,1.9503276148055297,-8.365382280797357,-11.219037780374073,-25.22287331353055,-283.7543162835544,-607.9731104871125,-1427.0600295974182,-2207.488296900335,-3720.099183631889,-2853.5518466904387,-2111.648140416873,-1058.7748743456016,-288.6843856863979,-2.5048396429994018,41.76117110773314,14.647883903858578,9.653783720993783,8.080714432273291,5.523084701132133,3.618944551748326,.3992847810370409,-.12607857026309263,-2.100313565057036,-.7961310239516864,-2.223069631674776,-1.2900498248808734,-.008801816555420883,4.866739798973889,3.4357055351949497,2.2081255979026997,-1.9843645852296314,-4.391066330041937,-6.680339136637114,13.024576486880093,-42.171627369152944,-179.07785660663302,-402.86472873295685,-1347.5218927383694,-2223.332633868245,-3323.4413322476003,-3154.064728518015,-4493.828247899509,-3308.6059534728515,-1663.4471657442498,-572.3488635999529,-148.49350684902797,-6.111478730512539,24.681352644731046,18.802141623354593,8.854025232654564,6.248331301572226,4.040907971073872,-.4730471947787934,-1.361454509331699,-3.102608526305984,-2.948515065656593,-.5489892871976132,-2.039934630710932,2.753689394895215,4.866990482124894,7.135788132168221,2.7727430774895763,-1.706309766177841,-6.715253652560278,-4.999221097969348,-11.324269109891496,-15.123294918372496,-301.2216999091082,-836.2620618172166,-1226.2977859942089,-3085.2108289353782,-3175.200176480323,-9007.3131796291,-7188.339898707104,-5194.409091620202,-2278.6820540988915,-810.158435367315,-333.5132448569559,20.969766857124615,20.288236987688347,23.75885873750167,11.676825499792164,10.210570606354567,9.49570082415387,4.593750742744372,-3.6748649027980855,-6.9403489082508045,-8.131547096511563,-2.3288001542285697,-2.2335756869247856,-1.5210347396073984,4.088293168231135,8.012652033059126,6.64028806363201,-.5106953831984324,-5.774263947386494,-8.202796513162045,-3.3329385156007563,-97.44092752208263,-301.70227472838576,-654.0994476037723,-1292.5663502582681,-1439.1675666408923,-5346.33060900026,-27232.421940549855,-20696.44360018323,-8881.588935127695,-3113.2951228080024,-1428.8365567175017,-637.0667107212123,89.30325669500809,-20.62459219009961,25.446982376231595,-2.0330861649905447,16.950197274587225,14.857882580654767,20.385879097388024,-7.871099481794626,-1.9041291470930921,-18.74520767411746,-.11803389887143546,-20.674418420848326,10.030112101155776,-1.1889020916883362,13.291351981828802,1.995837349687921,6.472640746355359,-14.835941429972186,15.63017417600328,-23.204353900286776,-49.325655652904786,-526.2922550452662,-42.22554400942483,-409.0173927639147,-6745.568222360406,-15984.118662988625,-14789.032757371675,2890.832051162324,-8876.42787310433,-3798.5470080468367,-816.0509448137971,-942.7276077420302,34.13442733448254,-53.60107186694936,18.961120931859348,-12.683126140049515,15.4575031105396,15.708115389403696,29.148348103795954,-12.15567384871238,.8207681555701095,-11.664010623895932,-14.807142725465098,-16.625069210776097,-.357968466821102,1.860738389345522,13.634662924808296,6.863391102960431,4.1139030671066,-5.445674010995009,4.601071532952386,33.02471833961225,-120.74864963582446,-488.33133225087175,-286.68893204831085,-866.7846665811124,-11739.029695619576,-31341.18584811775],imag:[0,-38758.087655514835,17548.08504726914,6107.2151726624015,-1874.673387120311,1102.4198144208276,70.66349859769723,246.50443360377355,15.094404836632346,61.578388193120794,-6.883850379905633,17.433253862249003,-27.18235290574834,10.205627484635695,-57.63116578861708,3.5978635789949243,0,-3.597863578994439,57.63116578861733,-10.205627484634785,27.18235290574807,-17.43325386224813,6.883850379906236,-61.5783881931206,-15.094404836632346,-246.50443360377048,-70.66349859769869,-1102.4198144208278,1874.6733871203112,-6107.21517266241,-17548.085047269135,38758.087655514864,21415.51152670408,9240.481680183884,6140.0706338628515,4606.742396705084,-477.33409412636456,106.10534760670754,253.8582768364973,118.670471872242,60.85217906744696,22.7908097312226,16.992665274593527,3.3051410229913314,-11.158748163655874,-19.12568021630007,-12.454719286949617,-13.739274709476872,4.4649861577325,-1.403038183390045,28.35267475528794,-.6790052379783438,10.299898240809684,.9219892960858738,1.7353747463970652,-28.921613512340663,-62.07723181322848,-150.50951383829744,-214.24479740751684,-816.215744663207,274.1353961963593,-3254.328668806272,-6340.0761451284025,11789.65138431164,10840.701965194425,18380.24897742693,3231.3822724351476,-461.44982475214084,-210.28695062763435,162.42212696600188,179.30887547689923,113.80000983072934,43.39472549693249,24.59548477602943,9.50644351725762,6.2249226907652995,-15.514190495563678,-15.67209469704693,-16.179758937655365,-.4418344453840365,3.28796177703477,12.57005414423841,4.794704065681184,5.575219767602969,-1.566994278876134,3.0671728952871886,-9.300602996623944,-19.205045070959127,-56.93976849335746,-104.59324045979437,-209.921490323403,-248.20433151041027,-867.9236374610348,-1299.0888976028032,827.6168828481927,-3453.30105164401,2184.1299326736716,343.8161049808456,1430.9649107108667,-397.20604751762147,-695.9626147441301,272.38382351444113,181.43163787734565,64.57058867431132,29.183435066681643,16.420203889130576,10.051165980763317,3.81329985672547,-5.220057623492661,-12.843645059741645,-16.57421537000831,-6.894841171864867,5.785399335493025,6.761549992871188,6.325879336386598,6.277914142030076,7.316455816584333,.11325917153592484,-12.472105947256997,-26.315486653091728,-48.31526672127188,-96.05176533673017,-133.189841599909,-353.39952612993443,150.90670251969735,-622.6277593313,-1461.5017842629939,2621.2839732861958,-797.4214233918754,-1141.9271710506443,-1665.2932495998289,-238.3366310615267,49.92317026240907,61.50646507554549,153.25086116745172,46.446591336114025,13.171326963991907,10.42525251508628,5.909384131444669,3.748181741060674,-5.009304162269796,-8.337711853484214,-11.383176063308646,-7.290456859187921,.05510266399852992,6.210045216504963,.5025878115353007,8.7133201843541,8.009949196961943,3.408178127748358,-6.12419710220284,-12.736128845291272,-45.232132533425755,-61.3791750629996,-153.42214558232837,-67.5950975145708,85.62589910386124,-58.961155821254636,56.88320697106799,-1105.7125877167775,-1066.0901100808514,-1171.2701320923616,-223.1510166903665,-49.090655504704266,242.13940044346495,187.57398243385657,37.63062482495811,28.849867481961542,8.456955463477327,4.970283957738858,4.402811570225055,1.43105564783055,-1.929060150422355,-6.870206159283182,-7.555783429793225,-6.282815286883121,-.1087059380343404,-.35173698335235887,2.55205609592295,3.0896458550054593,4.750522000279903,1.2377659738692817,-1.7806530124299274,-9.187967169255963,-20.16463244939638,-65.5912406537027,-60.86948040000092,-62.27175948611826,-69.04223895420877,113.44009243151515,-280.2462227959351,-361.29505764988915,-32.2389038646619,397.42763261597736,412.9673372382922,359.76401050336045,192.6210800054142,122.25882006598455,49.109708531705785,-.8341677081323136,2.4803036198391495,2.5045331182816137,2.1157075816863125,2.045683555559115,-1.3319639541688315,-4.10576581321596,-5.262260990501468,-3.122429370817716,-.23490025627283884,.40862649299968534,1.019092681419275,2.6652215067301066,2.390293795931129,1.3072901204360872,-2.1976906085986245,-4.720528993014994,-17.96465868682184,-21.918559933832515,-40.85455217934482,-68.24351076369831,25.856495589804037,-73.74721318359471,26.189735785049756,-56.7264268907042,461.88238037931336,400.3662547887042,367.42140066372616,233.95717316464078,120.24788693419019,56.86229814651989,16.52842380846973,5.508176303740889,-2.7285347510623343,.9176847348583501,1.922818700657754,.8587866218152932,-.08203172365733125,-3.1986596327501684,-2.7995613930163934,-2.624028681216124,.08223536455831822,.1338442362392752,1.9947594371394528,1.3437508199980643,2.6398410865992954,.7375829037978984,-.13078900915043976,-4.49533432925064,-5.195033590914489,-13.12242317098767,-25.523369493146305,-12.192196214097944,-25.868477512213353,2.906678292088343,34.10657416101557,256.00130492151595,208.58597838816522,310.3347945923577,177.03891975992664,97.122360992021,48.48851018711319,24.52891787285255,4.627203457515712,-1.3571647909533122,.2062126948263101,-.40867746076362715,.9921576725859489,1.531376825664169,-.05277298563976486,-1.5552847934304939,-2.8318141898835965,-1.44106038161314,-1.7221472209588695,.6178674780052442,.48048213041449506,1.7161555169971148,.8868975797919587,1.4761658864245926,-1.7252645996654892,-.8152878302494553,-3.3158091950668926,-7.6513645380807835,-2.928185992788675,-12.462674546124116,-7.4696827367159715,-23.236903073402107,43.7319836231637,92.32188204199035,70.11766837978374,34.22664935631408,47.258739472197036,25.375797504306092,12.406583490274283,8.653561843269081,1.0747519793409035,-.44324044078252567,-1.7584707522262704,.724586071659981,.7069206586421795,.7707634519125917,1.064906925019734,-2.726198542841819,-1.9302074459527443,-3.37542502778594,.506733493065497,-.6403167230929973,1.374850007673434,.729505526484903,2.3325303094340692,-.9986473214357906,.7819578744693423,-1.1999635798104886,-3.4858876190620522,-1.4991310089769327,-2.843375506924322,3.7638952884372583,1.240098013963287,-2.9542792497780144,1.823435568047936,49.57624474623547,19.014215780516388,30.877310974744532,-1.1221271518157558,7.8208026967228905,2.609067592037944,1.2521971880796572,-.9950506434595828,-1.3975466814991453,-.5733840782028455,-1.8697004151394911,2.370028050564138,1.696784850403636,-.6151974047873662,-1.3317994275810727,-4.207174624734692,-.8583473478041032,-1.4672332071937433,2.6381100233578914,-2.417676985149717,2.013107400019082,-1.626262859601891,3.9814331515508763,-.027677673297514374,-2.444607041276003,-1.6150024285043403,-4.122758914406767,-1.7068861549694658,2.2919486155920237,12.185386506158462,9.103962312567619,7.15976047067928,-5.408715124986016,.9697416211757905,-11.947201833901593,6.633062025249099,2.115208521813355,3.546929348907518,.6228361674031171,-1.3522725353705505,-2.4444202103018355,-1.5690941230144015,-.006985877860368016,-2.2282653754616524,3.828430830887377,3.1912913728027457,-5.5805618725494135,.13049495818795365,-3.5197176720292105,1.8802124921714005,-2.6189977871286096,2.1235611153433935,-7.146308976942236,4.772931412347173,2.1077672614040215,-.8191012589463181,.7205262469271351,-3.484240274988763,-4.182911530688638,-4.399432534457007,3.095356592907991,11.949390330752637,23.68013662152991,21.558658775121675,22.744598059672118,24.94332876792813,28.90135272218845,12.814680673201753,13.644932734111247,5.45768556544121,2.4025753394703617,-1.167335562531859,-2.4971924284976894,-1.8952846661475429,-1.292741941276348,2.790273201996955,-4.347701083439493,3.742325362160104,4.395980410805589,-8.925799415294772,2.882370251254919,-5.057769871464573,3.1829717367300585,-13.324209534416688,6.278504535455041,-.8748983428436319,-.8526310432157135,4.488566215307324,-.5311023217265213,-1.6389132121610095,-4.394554386416681,-4.293634482862569,.4874520575309819,15.895360345460416,25.16961738329208,33.91844547329262,23.996907911576923,23.2512772693596,5.15431566471437,18.55410282660839,16.359265688234956,10.23124463361384,1.5587865083621433,-1.4683911434431964,-2.958105786087343,-1.5689869488245065,-.9605122563484721,1.7578951205789273,6.663835293882251,-9.490177549910648,4.131747327103883,10.951455398944859,-15.360897164532773,5.739294741971535,-17.045217645164048,5.844968444410362,-3.5521886878464675,-7.3858280585812945,5.734734089519626,.4908832539545151,.9866663790534967,-1.0149409800154179,-1.6832477381822215,-2.5467748158366237,2.090406582384414,13.443724261124899,31.761133485201317,33.67118616661112,40.70719160876065,-1.150982612793645,21.09677957250432,10.924705320167561,7.368877610403945,6.47335333926665,1.1232923919614803,-2.443130294149275,-2.7804484266994756,-1.6225398299131664,.6478030911844409,2.579395187133014,3.112405638409599,9.383274359768524,-14.19595431303103,-.5760898854676106,19.47939047921927,-31.200338855208866,14.100113777774123,-5.385666264437839,-10.946378631138824,4.4142064356850845,-3.906665232225006,.6684491059860498,1.0227755630951,.6613753856807533,-.38567118503773246,.24821124990411303,3.587284123143521,14.053276636456639,24.260931372233497,33.64745909564876,7.652927123158831,-9.215137707870635,-38.31166585868664,-16.121399661234683,-5.99278681782985,-2.770136530421177,-3.714008894587047,-3.0788396721523017,-3.0904878618769733,-1.8655827999533823,.43690140001808947,4.156119490868076,4.385895239208535,2.7714027971729753,9.257895969243517,-19.629364588289473,-14.072043519544888,36.373196183604975,-13.61372365841147,-9.458342331116125,8.528458327752043,-6.174465145795059,-2.2310052363098367,-1.75629520897435,1.153969335081464,1.7596902661237352,1.8196834579374304,2.022290334087173,5.164682908483578,12.770276815017757,24.46979490512981,27.822785449092486,29.82854034209125,0,-3.7653763488297254,-24.75730590440647,-19.738984856989376,-8.266461976159446,-4.649514459183804,-3.656340919703911,-2.914764188547905,-2.2830188616483764,-.10916825448095578,2.391697766817782,5.941240494184604,2.1224657474819093,3.9401472638367774,-2.144527732326695,-10.774805376941604,0,10.774805376941531,2.144527732326683,-3.940147263836795,-2.1224657474819155,-5.941240494184617,-2.3916977668177926,.10916825448094437,2.2830188616483764,2.9147641885479065,3.6563409197039234,4.649514459183814,8.26646197615945,19.73898485698941,24.75730590440644,3.7653763488297773,9.215137707873652,-29.828540342087546,-27.822785449090652,-24.46979490512937,-12.770276815017642,-5.164682908483464,-2.022290334087153,-1.8196834579374237,-1.7596902661237566,-1.1539693350814775,1.7562952089743382,2.231005236309821,6.1744651457950415,-8.52845832775212,9.45834233111612,13.613723658411436,-36.37319618360493,14.07204351954484,19.629364588289484,-9.257895969243535,-2.7714027971730033,-4.385895239208558,-4.156119490868093,-.4369014000181147,1.8655827999533605,3.090487861876973,3.0788396721523177,3.7140088945872396,2.770136530421462,5.992786817830616,16.121399661236502,38.31166585868818,1.1509826127964509,-7.652927123156882,-33.647459095647825,-24.260931372233326,-14.053276636456571,-3.5872841231435073,-.2482112499041089,.3856711850377551,-.6613753856807607,-1.0227755630951023,-.6684491059860727,3.906665232224975,-4.4142064356851165,10.946378631138813,5.385666264437834,-14.100113777774116,31.200338855208855,-19.47939047921935,.5760898854675786,14.195954313030994,-9.383274359768562,-3.112405638409594,-2.579395187133034,-.6478030911844564,1.6225398299131557,2.780448426699469,2.4431302941492916,-1.1232923919613498,-6.473353339266396,-7.368877610403441,-10.924705320166419,-21.09677957250195,-23.25127726935768,-40.70719160875883,-33.67118616661006,-31.7611334852009,-13.443724261124748,-2.090406582384377,2.5467748158366237,1.6832477381822348,1.0149409800154132,-.986666379053487,-.49088325395452825,-5.734734089519665,7.385828058581301,3.5521886878464564,-5.844968444410324,17.045217645163998,-5.7392947419715155,15.360897164532778,-10.951455398944907,-4.131747327103875,9.490177549910666,-6.66383529388227,-1.7578951205789377,.960512256348448,1.5689869488244914,2.958105786087338,1.4683911434432237,-1.5587865083620118,-10.231244633613667,-16.359265688234554,-18.554102826607274,-5.154315664712993,-24.943328767927714,-23.996907911576475,-33.91844547329208,-25.169617383291836,-15.895360345460304,-.487452057530983,4.293634482862555,4.394554386416715,1.6389132121610113,.5311023217265384,-4.4885662153073405,.852631043215709,.8748983428436312,-6.278504535455005,13.324209534416719,-3.1829717367300314,5.05776987146457,-2.8823702512549096,8.925799415294765,-4.395980410805612,-3.742325362160086,4.3477010834395236,-2.7902732019969543,1.2927419412763401,1.8952846661475349,2.4971924284976934,1.1673355625318764,-2.4025753394703346,-5.457685565441166,-13.644932734111133,-12.814680673201632,-28.901352722188015,-.9697416211750332,-22.744598059671098,-21.55865877512123,-23.680136621529623,-11.949390330752514,-3.0953565929079563,4.399432534457,4.182911530688664,3.484240274988765,-.7205262469271163,.8191012589463207,-2.1077672614040264,-4.772931412347166,7.146308976942229,-2.1235611153433602,2.618997787128679,-1.8802124921713912,3.5197176720292407,-.1304949581879572,5.580561872549461,-3.191291372802759,-3.828430830887353,2.228265375461667,.006985877860328306,1.5690941230143916,2.4444202103018267,1.3522725353705702,-.6228361674030838,-3.546929348907534,-2.1152085218133783,-6.633062025248768,11.947201833901675,-19.01421578051531,5.4087151249861485,-7.159760470678993,-9.103962312567507,-12.18538650615837,-2.2919486155920032,1.7068861549694805,4.122758914406779,1.615002428504344,2.4446070412760443,.027677673297527423,-3.981433151550863,1.6262628596018724,-2.0131074000190696,2.4176769851497326,-2.638110023357861,1.4672332071937413,.8583473478041416,4.2071746247347095,1.331799427581099,.6151974047873869,-1.6967848504036496,-2.3700280505641422,1.8697004151394931,.5733840782028331,1.397546681499154,.9950506434595889,-1.2521971880796428,-2.609067592037973,-7.820802696722901,1.1221271518159068,-30.877310974743335,-70.1176683797825,-49.57624474623531,-1.8234355680484657,2.954279249777826,-1.2400980139631994,-3.7638952884372125,2.8433755069243154,1.499131008976947,3.4858876190620642,1.1999635798105424,-.7819578744693196,.9986473214357916,-2.332530309434083,-.7295055264848886,-1.3748500076734225,.6403167230930256,-.5067334930655034,3.375425027785985,1.930207445952772,2.72619854284187,-1.0649069250197167,-.7707634519125544,-.7069206586422051,-.7245860716599976,1.7584707522262737,.443240440782505,-1.0747519793408324,-8.653561843268937,-12.406583490274217,-25.375797504305602,-47.25873947219602,-34.226649356312784,-208.58597838816522,-92.32188204199083,-43.731983623163735,23.236903073401958,7.469682736715982,12.462674546124104,2.928185992788677,7.651364538080827,3.3158091950668926,.8152878302494978,1.7252645996655027,-1.4761658864245817,-.8868975797919583,-1.7161555169970975,-.4804821304144749,-.6178674780051872,1.7221472209588695,1.4410603816132017,2.8318141898836315,1.5552847934305372,.05277298563978073,-1.5313768256641445,-.9921576725859278,.40867746076360606,-.2062126948263101,1.3571647909533708,-4.627203457515691,-24.528917872852457,-48.48851018711318,-97.12236099202084,-177.03891975992676,-310.3347945923578,-461.88238037931535,-256.0013049215171,-34.106574161017335,-2.906678292089301,25.868477512213314,12.192196214097933,25.52336949314624,13.12242317098773,5.195033590914491,4.495334329250737,.13078900915048275,-.7375829037978546,-2.6398410865992936,-1.3437508199980366,-1.9947594371394133,-.13384423623915356,-.08223536455833068,2.624028681216258,2.7995613930164374,3.1986596327502643,.0820317236573693,-.8587866218152375,-1.9228187006577324,-.9176847348582973,2.728534751062311,-5.50817630374071,-16.528423808469462,-56.862298146519464,-120.24788693418984,-233.9571731646403,-367.42140066372525,-400.36625478870656,32.23890386466014,56.72642689069964,-26.189735785051667,73.74721318359408,-25.85649558980411,68.24351076369864,40.85455217934509,21.91855993383282,17.96465868682183,4.720528993015179,2.197690608598713,-1.3072901204360032,-2.39029379593111,-2.6652215067300165,-1.0190926814191563,-.4086264929994344,.23490025627283342,3.122429370817941,5.262260990501599,4.105765813216099,1.331963954168899,-2.0456835555590454,-2.1157075816862583,-2.504533118281568,-2.4803036198391473,.8341677081324829,-49.10970853170554,-122.25882006598383,-192.6210800054143,-359.76401050336045,-412.9673372382936,-397.42763261597815,1066.0901100808455,361.29505764988636,280.2462227959299,-113.44009243151743,69.04223895420859,62.27175948611885,60.869480400001216,65.59124065370337,20.164632449396354,9.18796716925631,1.7806530124300617,-1.2377659738691233,-4.750522000279865,-3.0896458550052697,-2.552056095922777,.35173698335277165,.10870593803433028,6.282815286883449,7.555783429793403,6.870206159283416,1.9290601504224327,-1.4310556478304128,-4.402811570224995,-4.970283957738766,-8.456955463477293,-28.849867481960956,-37.63062482495777,-187.57398243385583,-242.13940044346546,49.09065550470147,223.15101669036463,1171.270132092355,797.4214233918746,1105.712587716775,-56.883206971068894,58.961155821254195,-85.62589910386123,67.59509751457145,153.422145582329,61.37917506300045,45.23213253342577,12.736128845291734,6.124197102203009,-3.4081781277481404,-8.009949196961886,-8.713320184353885,-.502587811535033,-6.210045216504566,-.05510266399853082,7.290456859188381,11.383176063308918,8.337711853484521,5.009304162269923,-3.7481817410605087,-5.909384131444633,-10.425252515086191,-13.171326963991898,-46.44659133611351,-153.250861167451,-61.50646507554556,-49.92317026240935,238.33663106152528,1665.293249599826,1141.9271710506428,-2184.1299326736644,-2621.2839732861944,1461.5017842629866,622.6277593312957,-150.9067025196971,353.39952612993454,133.18984159990904,96.05176533673138,48.31526672127185,26.31548665309238,12.47210594725734,-.11325917153558851,-7.316455816584236,-6.277914142029773,-6.325879336386472,-6.761549992870561,-5.785399335493018,6.894841171865663,16.57421537000874,12.843645059742064,5.220057623492746,-3.813299856725167,-10.051165980763182,-16.420203889130285,-29.183435066681557,-64.5705886743102,-181.43163787734505,-272.3838235144402,695.9626147441294,397.20604751762363,-1430.9649107108592,-343.8161049808414,-10840.70196519443,3453.3010516439876,-827.616882848196,1299.088897602802,867.9236374610335,248.20433151041067,209.92149032340356,104.5932404597956,56.93976849335743,19.20504507096003,9.300602996624374,-3.0671728952866175,1.5669942788764133,-5.575219767602496,-4.794704065680643,-12.570054144236753,-3.2879617770347638,.4418344453860932,16.17975893765613,15.672094697047777,15.5141904955638,-6.224922690764802,-9.506443517257205,-24.595484776028343,-43.39472549693245,-113.80000983072682,-179.30887547689812,-162.42212696599955,210.28695062763467,461.44982475214965,-3231.3822724351485,-18380.248977426934,-21415.51152670408,-11789.651384311637,6340.076145128395,3254.3286688062612,-274.13539619635947,816.2157446632062,214.24479740751747,150.50951383829917,62.077231813228565,28.921613512340514,-1.735374746396482,-.921989296085248,-10.299898240809465,.679005237978899,-28.35267475528701,1.4030381833925814,-4.464986157732529,13.739274709477487,12.454719286950338,19.12568021630095,11.158748163655963,-3.305141022990702,-16.992665274592852,-22.790809731221124,-60.8521790674469,-118.67047187223945,-253.85827683649717,-106.10534760670436,477.3340941263651,-4606.7423967050645,-6140.070633862854,-9240.48168018392]}},mouth_filter={real:[4.634089151999296,.7844322938332674,-1.1596739705934982,3.99333650697934,1.0745202382104644,-.8656673984377853,-.9793198402653664,-.5584811302493011,-.3507978465550091,-.2844107277454577,-.08814236292249976,.027465161121858393,-.014037496255053593,-.004551261004420112,-.009717329721969425,.0018722497460425004,.0003442470754354086,.0018722497460384895,-.00971732972196023,-.004551261004423991,-.014037496255053029,.02746516112186332,-.08814236292250524,-.28441072774544834,-.3507978465550091,-.5584811302492986,-.9793198402653659,-.8656673984377845,1.0745202382104642,3.9933365069793414,-1.1596739705934984,.7844322938332663,-.641460120747133,-1.4031948309962614,-.7262152854672136,2.8301862310857646,.2290189260637008,-2.487189394667696,-.8229247877690783,-.038551737265843086,-.20580868221576679,-.2850592867303046,-.18459030185549916,.058925447647408556,.008694333491579526,-.008600101734962382,-.004854517003603619,-.0004539351773376722,.0009219435427983815,.0017350493936515445,-.0021057925479370247,-.006027538445016255,-.01880365799458189,-.023918178864192268,-.02075717372475532,-.18669623657203888,-.4341370562550853,-.3648050484476391,-.3216150714186278,-1.8059188349376913,.7063901150285793,3.4760111666249314,-.5602942662325473,-.8831364418861832,-3.195882770527733,-4.13223918108782,.7790414814509841,5.061292384502565,1.5447671531259652,-2.8176609661232312,-.6374890195765597,.3691459960086436,-.00037729870766316427,-.17990982199486863,-.03256951045523579,.008508906317592067,-.014523430514595712,-.012452101483067112,-.0012625852907501049,.00028475514852645983,.0011591891684665802,.00039450549224649017,-.002943469227087628,-.010724474299968166,.006126215888163524,.029252238624593387,-.12159824966625053,-.3107693078486412,-.4136447035413494,.022306497695738548,.07436691304800991,-2.671809212188217,-.7771906111787475,3.976289807640388,3.207935449343302,-4.401230089942919,-2.566081699385831,-2.553218193276197,2.0684625359523285,4.9974951908094045,2.143461857355776,-1.7847370377532255,-.28821333774369,.10766200451394388,.18782859841053653,-.0193108917008963,-.006256720927446059,-.006437187190313089,.0021510630118947156,-.011505776785749768,-.002999231926397348,.00030084525589988385,.0010941864062154283,.0003028882149976747,-.0032329177128834767,-.010312595680378463,-.006834080237665061,.019823041367851263,-.007895052454447368,-.23245655665346024,-.14923618615195547,.05641908141962149,.16707514445150673,-2.184956285901395,-.5408888606564619,4.051653834823219,4.240622601012528,-1.7936849281843577,-2.9840428724267536,-3.2115132203593,-1.9470763746691873,4.151869311494347,2.486229447467814,-.30639511041804085,.024820417007377235,.2757710085726073,.05525978458989932,-.14220319122433717,-.08642751724431888,.023244530667997254,.012523451759435138,-.005854686598788948,-.0029976575640192626,-3555580955012693e-20,.00047377824955015626,.0009959620642497164,-.0009891981657287328,-.009758054750674029,-.020619695697678356,-.003701524175126409,-.003593154009926945,-.045481667679613515,.09030548991011282,.19683301699858768,.20611623580645685,-.9023367246203237,.06530682818789532,4.778833310824648,2.90263773237818,-3.2466266324527706,-2.1436478188271333,-2.2561432890218653,-1.9115416020763942,2.2130343552583907,1.991599398095366,-.05649573908332922,-.2528646737117784,.14962266633073235,-.00992240782187535,-.1479065510292869,-.07230224268075354,.005831852376050549,.002268606405267462,-.00013275302826153175,-.0006310274336930969,9150978648176796e-20,.0003197274601145269,.0005335386797852833,-.0005879102342076279,-.005240875243933554,-.009186076660159815,.015159206837947898,.016910593952452414,-.09901788058463483,-.09983912805765208,.28004861021942,.3730027305003697,-.08526059144020254,.4118969503661739,2.9117111935410587,.660455592787651,-2.6585359534260435,-1.484629636420711,-1.542921538821994,-1.005759811438559,1.6171176031175611,1.3492912586213337,-.4285789742706764,-.5000605867377985,.0277131696617224,.11528070486941493,-.039483986090959794,-.04467291098970881,-.009211603020620907,.0005030322344725036,.00117999940390684,-.0004218477462483022,4668492787763195e-21,.0003154741570421968,.0001689251312381811,-.0012866387173093054,-.002113986757118998,-.0022343140961022454,.009225955563893159,-.0022666885302687536,-.0775371445465696,-.14256276290766454,.02794617379150273,.115246314279082,-.3242302049719249,.3084111937816441,1.9739342660507115,.8892192476393134,-1.5931958725731872,-1.0137169086218167,-.9822075545246289,-.552710782290491,1.084545546778825,1.0070569814426842,-.18251897039350226,-.37931318856894325,-.013449845022921075,.07576451530119738,-.03536912397937072,-.015619619770784467,.003123860549792537,.002840986374306701,-.00016094314378723183,-.001044210904420302,-9894109705724881e-20,.00016280791369542986,.00021650467324038706,-.00047567037374047843,-.0009232845910597663,-.0014357330004678133,-.00013185634410259166,-.008798056861491687,-.057667801386191805,-.014139365016219003,.15150048657312606,-.0631568216976208,-.5270354549056385,-.11064525699952842,1.3541882686537436,1.0048741532970387,-.8264105229116342,-.5578834243278299,-.5469280538647021,-.22545269169536206,.6740428991302807,.6374636053138222,.053213891179403915,-.1632304777054518,-.05067162930818387,.005833316698649947,-.012742844783306895,-.00715961601984566,-.0009337735719244645,.001222206196653114,.00017574396951624128,-.0005642074481669886,-60828659546840626e-21,9287129044466804e-20,.00015000413209498726,4777345737973158e-20,-.000326961738278439,.00024195810565667486,.0008069468543876286,.002416256214300178,-.021930873945379376,-.011688581845023685,.11525275913926007,-.020751088469611444,-.3358848290662982,-.021354414893159417,.8127755863807554,.7262450255448635,-.35235216014446363,-.262404547454645,-.25116485949546724,-.04741694933416732,.4158122686113258,.36754912691134745,.031499405618264475,-.1182059528936131,-.027325517544006306,.017104517731676545,-.0028988620733824016,-.007663004156626558,-.002937770251221402,.0008578440198834375,8323301800622004e-20,-6662617693461511e-20,30121602117794285e-21,27157707030347298e-21,53948506612911946e-21,41294414526828764e-21,-.0004553693594539587,-.00011944277202748304,.001701190526917767,.0001873685257440868,-.0020488748359166246,-.00585606517976919,.014332522459211712,-.02484159185287883,-.16044866683911937,.06313306842167594,.4788490370685087,.4692297706881396,-.1005858110717496,-.10558450478212159,-.09457265972563605,.030818986514241645,.17934859926238414,.1371890527220369,-.010905020288841244,-.05427060295960378,-.00730908104572425,.01494907224279079,.0034945285778568377,-.0038412851930084225,-.0011597829517094804,.00044322180186623985,5455121694442779e-20,-9279462424996922e-21,9507885190619462e-21,4200799803523239e-21,40012008897297825e-22,-11774818209916229e-21,-.00027037083981188163,-.00035658526841883775,.0010094103856456143,-.0005290499699426922,-.007468209882087681,-.0022588127195562607,.01821063404239867,-.009508805432907743,-.08565117475386126,-.014342078173992242,.19289673419785613,.23928297364621173,.03914952025170177,-.061014517221157215,-.05736656592266169,-.008006465521422522,.07628924212143612,.062033108089888676,-.002667484924925014,-.0246273437917321,-.005372625137310909,.008065311386827924,.003010829724923111,-.0014118319882570156,-.0004224591430003595,.0002628806189511801,39126968311475854e-21,-25576892658974124e-21,-1309983173701899e-20,6.801480541426069e-7,6975522236215794e-21,4114046508307493e-21,-6137075555430566e-20,-.00013364764935139172,.00021919093935820536,-.0003468738012346682,-.0034793424266583023,.0004035246240741906,.01373845906597586,.0021423976061818307,-.037152134230387414,-.017035854478310443,.07316876401329736,.09355872729895164,.001337949029101016,-.028771535917646113,-.027836987718903094,-.005604457313736932,.030982713752819017,.02581213989119773,.0007489249278141597,-.007918779820161995,-.002052401353006265,.0023870007142673053,.00047709621801237946,-.00019244333515306637,2364174882971905e-21,7863007338347215e-20,10976829691696413e-21,-4947843344860727e-21,-29053042363364555e-22,23830467829361056e-22,3902367137310874e-21,-26460791618778472e-22,10608628096643537e-21,33021940418689286e-21,.0001912157704189101,6744417554786651e-20,-.0009611582867201079,.0008700824433074122,.006748472189696884,.0013604220025846133,-.013837221190936331,-.007504997730019378,.030023800478366884,.03975095856333811,-.00010247159736706737,-.01163043609268417,-.009626682958985564,-.00012449081323135682,.009896662293294292,.008071845289262908,.001158720450950982,-.0023373825953736087,-.0008071121564679781,.0006310569712201902,.0002505504276275349,-.00015724082609640453,-29456254661901335e-21,22436391551144613e-21,5761402105694336e-21,9.283623811527878e-8,-2.983219466927386e-7,3.946914817524284e-7,-1.897541367332826e-7,2.3086718690330816e-7,-3237987845418275e-21,2913669617854417e-21,9134041606690386e-20,.0001372070597261884,-.00027185621825451397,-.00025621479435585686,.001222650455527893,8519300212965707e-20,-.004064865703922135,-.0002922158904863416,.011494835522638509,.01340946760762054,-.0005424133851379836,-.003990441696268225,-.002867593424518791,.00011970246178788614,.0032259655922311906,.0027177896529416603,.0002903975153386597,-.0005604564767737224,-.00011868935035429348,8693262596010879e-20,40585244752836994e-21,-3968539962639957e-20,-3367570219465958e-20,18041324860728306e-22,7.152741534115013e-7,-2.587487777809714e-7,-3.51875885820411e-7,-4.961297544842871e-7,4.739283672425875e-8,-2.7763787498630026e-7,-8.416577840620988e-7,3.076152606776989e-7,1927255849211769e-20,35189855392011486e-22,-9867805313318345e-20,-6263293993642404e-20,.00017511504940116496,-9481629674849642e-20,-.0010867114051789507,.00038291262596998446,.0037605600166853263,.003351397629679482,-.0010579625982184212,-.0008390052002158238,-.0005261917184453804,.0005577130695074325,.001283544793351508,.0008015192740031828,6149189800009521e-20,-.00011622895984693472,-2362760140891841e-20,3979172224729024e-20,7029078796257478e-21,-8705139388114963e-21,-17451721719085544e-22,-1971994185063341e-21,-7.510397197877928e-8,-6.311010307616012e-8,-6.552744337836665e-8,-1.271443792432593e-7,9.324605121808825e-8,1.5092375607837617e-7,-4.063360621580998e-7,4.884248263707688e-7,6200605205347868e-21,9962508509707863e-21,-8421841039830522e-21,-21130341683092213e-21,-86580287858942e-19,-.00010846093496444906,-.00019573231564846473,.00038253737826254207,.0014355018795734822,.0012361430930244762,-3833056265541349e-20,-.0004569355827924844,-.00013724958223101865,.0005563817789235216,.0008124065993596201,.00038839544015797694,5265422759948157e-21,-20620767185676097e-21,14058588768839616e-21,24456681475752488e-22,-13038942789126752e-22,32957272146113247e-22,2136839449678527e-21,-3.852178679624797e-8,-3.994963138602985e-7,-2.803297067646553e-8,-4.284183182277093e-8,-2.708778766944344e-8,-4.284183188748842e-8,-2.803297059707543e-8,-3.9949631385981395e-7,-3.852178674647e-8,21368394496269648e-22,32957272146716597e-22,-13038942788497014e-22,24456681475752488e-22,14058588768888149e-21,-2062076718571035e-20,5265422759768765e-21,.00038839544015800736,.0008124065993596922,.0005563817789236077,-.0001372495822309712,-.0008390052002159655,-3833056265530287e-20,.001236143093025543,.0014355018795735538,.00038253737826226555,-.00019573231564817955,-.0001084609349642516,-8658028785851946e-21,-21130341683048624e-21,-8421841039854421e-21,9962508509573061e-21,6200605205511509e-21,4.884248263265511e-7,-4.0633606237408006e-7,1.5092375605026055e-7,9.324605144389865e-8,-1.271443792431322e-7,-6.55274434871341e-8,-6.311010304725215e-8,-7.510397195070611e-8,-19719941850259958e-22,-17451721718998097e-22,-8705139387950486e-21,7029078796332105e-21,39791722247395916e-21,-23627601408864216e-21,-.0001162289598470872,6149189800000526e-20,.000801519274003285,.0012835447933512035,.0005577130695069316,-.0005261917184453106,-.003990441696267554,-.001057962598218309,.003351397629679451,.0037605600166856607,.00038291262597007754,-.0010867114051789164,-9481629674837293e-20,.00017511504940131815,-6263293993629258e-20,-986780531331397e-19,35189855391400817e-22,19272558492233388e-21,3.0761526064323095e-7,-8.4165778419494e-7,-2.776378750472164e-7,4.739283683147069e-8,-4.961297544844503e-7,-3.5187588609488416e-7,-2.58748777781678e-7,7.152741534536303e-7,1804132486106339e-21,-33675702194604274e-21,-39685399626282394e-21,4058524475290039e-20,8693262596008916e-20,-.00011868935035428417,-.0005604564767739365,.000290397515338342,.0027177896529417466,.003225965592230869,.00011970246178728064,-.0028675934245188605,-.011630436092684446,-.0005424133851379863,.013409467607620592,.011494835522638138,-.0002922158904861642,-.00406486570392197,8519300212997122e-20,.001222650455528094,-.0002562147943558541,-.0002718562182545189,.00013720705972611116,9134041606696929e-20,29136696178498302e-22,-32379878454707733e-22,2.308671868622591e-7,-1.8975413675430027e-7,3.946914817523183e-7,-2.983219466241522e-7,9.283623809198153e-8,5761402105795633e-21,2243639155115928e-20,-29456254661848962e-21,-.00015724082609634113,.00025055042762756014,.0006310569712201816,-.0008071121564679325,-.002337382595373471,.001158720450951047,.008071845289262677,.009896662293293411,-.00012449081323185037,-.009626682958985515,-.028771535917645582,-.00010247159736742938,.03975095856333772,.03002380047836699,-.007504997730019033,-.013837221190936397,.001360422002584686,.006748472189696948,.0008700824433074983,-.0009611582867201148,6744417554780089e-20,.0001912157704189886,33021940418677224e-21,10608628096553211e-21,-26460791619305373e-22,3902367137246281e-21,2383046782935803e-21,-29053042364313164e-22,-4947843344860017e-21,10976829691639238e-21,7863007338347967e-20,23641748829703282e-22,-.00019244333515297128,.000477096218012395,.0023870007142673287,-.0020524013530060455,-.007918779820161715,.0007489249278142589,.02581213989119763,.030982713752818712,-.005604457313737466,-.027836987718902747,-.061014517221157166,.0013379490291006914,.09355872729895073,.07316876401329696,-.017035854478310443,-.03715213423038752,.0021423976061819595,.013738459065975945,.00040352462407424605,-.003479342426658237,-.00034687380123471886,.00021919093935825583,-.00013364764935140623,-6137075555434376e-20,4114046508316066e-21,6975522236187713e-21,6.801480541420502e-7,-13099831737122968e-21,-25576892658968157e-21,3912696831142943e-20,.0002628806189511862,-.00042245914300031615,-.0014118319882569644,.003010829724923217,.008065311386827836,-.005372625137310698,-.024627343791731683,-.002667484924924777,.06203310808988808,.07628924212143504,-.008006465521422947,-.05736656592266142,-.10558450478212106,.039149520251701674,.23928297364621154,.19289673419785586,-.014342078173991857,-.08565117475386118,-.0095088054329079,.018210634042398706,-.002258812719556187,-.007468209882087701,-.0005290499699428646,.0010094103856456574,-.00035658526841884875,-.0002703708398118182,-11774818209899307e-21,4001200889696883e-21,4200799803522836e-21,9507885190670247e-21,-9279462424982197e-21,545512169444116e-19,.0004432218018662688,-.0011597829517094238,-.003841285193008305,.0034945285778569305,.014949072242790728,-.007309081045724124,-.05427060295960367,-.01090502028884107,.13718905272203655,.17934859926238284,.030818986514240795,-.09457265972563568,-.2624045474546435,-.1005858110717494,.46922977068813976,.4788490370685089,.0631330684216766,-.16044866683911846,-.024841591852878687,.014332522459211764,-.005856065179769227,-.0020488748359166085,.00018736852574399146,.0017011905269178167,-.00011944277202752463,-.00045536935945402705,4129441452679187e-20,5394850661287712e-20,27157707030347085e-21,30121602117749643e-21,-6662617693466178e-20,8323301800625065e-20,.0008578440198834165,-.0029377702512214973,-.007663004156626477,-.0028988620733823725,.017104517731676455,-.027325517544006247,-.11820595289361274,.03149940561826459,.3675491269113462,.41581226861132453,-.04741694933416768,-.2511648594954663,-.5578834243278299,-.35235216014446413,.7262450255448635,.8127755863807552,-.021354414893159278,-.3358848290662981,-.020751088469611285,.11525275913925997,-.011688581845023685,-.021930873945379303,.0024162562143002332,.0008069468543876767,.00024195810565667153,-.0003269617382785359,4777345737981407e-20,.00015000413209503944,9287129044466804e-20,-6082865954691704e-20,-.0005642074481671269,.00017574396951636955,.0012222061966531885,-.0009337735719245047,-.007159616019845526,-.01274284478330687,.005833316698649947,-.0506716293081837,-.16323047770545204,.05321389117940345,.6374636053138221,.6740428991302817,-.22545269169536208,-.5469280538647021,-1.0137169086218165,-.826410522911635,1.0048741532970369,1.3541882686537434,-.1106452569995289,-.5270354549056377,-.06315682169762069,.15150048657312606,-.014139365016218914,-.05766780138619183,-.008798056861491592,-.00013185634410271281,-.00143573300046789,-.0009232845910599582,-.0004756703737402313,.00021650467324065207,.00016280791369542935,-9894109705727961e-20,-.0010442109044203046,-.00016094314378705795,.002840986374306793,.0031238605497927777,-.01561961977078436,-.0353691239793702,.07576451530119743,-.013449845022920601,-.37931318856894264,-.18251897039350262,1.007056981442683,1.084545546778823,-.5527107822904915,-.9822075545246276,-1.4846296364207112,-1.593195872573186,.8892192476393116,1.9739342660507089,.30841119378164455,-.32423020497192495,.11524631427908204,.027946173791502632,-.14256276290766468,-.07753714454656983,-.002266688530268584,.00922595556389295,-.0022343140961023017,-.002113986757118863,-.001286638717309387,.00016892513123889085,.0003154741570421954,4668492787631832e-21,-.00042184774624882054,.0011799994039063304,.0005030322344726728,-.009211603020620632,-.044672910989708575,-.03948398609095928,.11528070486941518,.027713169661722662,-.5000605867377983,-.42857897427067776,1.3492912586213337,1.6171176031175631,-1.0057598114385595,-1.542921538821994,-2.143647818827132,-2.658535953426042,.6604555927876489,2.9117111935410573,.411896950366174,-.085260591440202,.3730027305003694,.2800486102194187,-.09983912805765198,-.09901788058463504,.016910593952451765,.015159206837948214,-.009186076660159786,-.005240875243933095,-.000587910234208083,.000533538679785546,.0003197274601145269,9150978648180744e-20,-.0006310274336939812,-.00013275302826212034,.0022686064052679666,.005831852376050361,-.07230224268075294,-.14790655102928651,-.009922407821875265,.14962266633073282,-.2528646737117785,-.05649573908333014,1.9915993980953646,2.213034355258391,-1.9115416020763922,-2.256143289021865,-2.9840428724267536,-3.246626632452768,2.902637732378178,4.7788333108246475,.06530682818789552,-.9023367246203219,.20611623580645633,.19683301699858602,.09030548991011267,-.04548166767961341,-.00359315400992807,-.003701524175126041,-.02061969569767819,-.009758054750673735,-.0009891981657294052,.0009959620642513028,.00047377824955015637,-3555580955030948e-20,-.002997657564020394,-.005854686598788986,.012523451759435134,.02324453066799726,-.08642751724431853,-.1422031912243366,.05525978458989915,.2757710085726067,.02482041700737748,-.3063951104180418,2.486229447467813,4.151869311494343,-1.947076374669187,-3.2115132203593006,-2.5660816993858284,-1.7936849281843579,4.240622601012526,4.051653834823222,-.5408888606564615,-2.1849562859013973,.1670751444515067,.05641908141962089,-.1492361861519553,-.23245655665346052,-.007895052454447478,.01982304136785135,-.006834080237665613,-.010312595680378572,-.0032329177128843376,.00030288821499861344,.0010941864062154279,.000300845255900019,-.0029992319263979755,-.011505776785751019,.0021510630118943804,-.006437187190312738,-.006256720927446368,-.019310891700895682,.18782859841053667,.10766200451394509,-.2882133377436886,-1.7847370377532281,2.1434618573557747,4.9974951908094,2.0684625359523268,-2.553218193276198,-3.1958827705277333,-4.4012300899429215,3.2079354493433048,3.9762898076403923,-.7771906111787469,-2.6718092121882195,.07436691304800956,.02230649769573629,-.41364470354134925,-.31076930784863965,-.12159824966625225,.02925223862459385,.006126215888163498,-.010724474299966393,-.0029434692270879645,.00039450549224720385,.0011591891684665805,.00028475514852767235,-.0012625852907517934,-.012452101483067435,-.014523430514596241,.008508906317591708,-.032569510455234915,-.17990982199486819,-.00037729870766311575,.36914599600864506,-.6374890195765606,-2.8176609661232312,1.5447671531259644,5.061292384502564,.7790414814509846,-4.132239181087822,-.6414601207471337,-.8831364418861835,-.5602942662325467,3.4760111666249305,.7063901150285783,-1.805918834937694,-.321615071418629,-.36480504844764006,-.4341370562550854,-.1866962365720416,-.02075717372475496,-.023918178864192875,-.0188036579945808,-.006027538445015406,-.002105792547937667,.00173504939364955,.0009219435427983818,-.00045393517734262397,-.004854517003600706,-.008600101734964675,.008694333491579725,.058925447647409854,-.18459030185549863,-.2850592867303041,-.20580868221576676,-.03855173726584271,-.8229247877690758,-2.4871893946676935,.22901892606369992,2.830186231085761,-.7262152854672138,-1.4031948309962614],bottom:{real:[5678.1086041894205,20900.18095010153,3447.0499761258557,3006.2920785513897,1095.893903110946,386.81104976321694,202.8746518150621,112.96922946840166,74.1575795981121,62.41331559167534,46.93121306523181,32.70344442111712,23.138509584976408,18.532485453515367,13.839857335386801,11.995391672846374,11.011316958211436,11.995391672846273,13.839857335386798,18.532485453515342,23.138509584976408,32.703444421117176,46.93121306523187,62.41331559167557,74.1575795981121,112.96922946840168,202.8746518150621,386.8110497632174,1095.8939031109464,3006.2920785513907,3447.0499761258566,20900.180950101545,11652.541375531215,6105.997676743737,3079.1167046754913,1776.9919423314705,759.6359173617328,370.96222186223144,186.7255065372885,104.06222158598892,72.77622691509018,54.13204733326223,40.617443247446026,26.90529733912283,20.596051003825067,16.964451546104712,12.574490983994691,10.149549151428955,9.456590806505238,9.976865753609388,12.029240511903456,15.043219420350251,20.838711299344116,30.55361456673147,44.40616386235552,58.56586141233153,70.13283587506174,104.51314473208357,189.56857349608143,377.16693201205015,884.1270089569301,2239.7595640192126,3145.1913405539117,6958.57407595036,9609.510642612793,4992.66087693942,1669.5618690661463,1059.1995113905639,549.1627979092727,278.9492383050029,170.62516999169446,111.93749936902557,73.27025198501791,52.99804226348363,37.1425467686779,24.977928698897,19.757351140056166,15.549412568397655,12.28744495322669,10.159177492646036,9.2913516551568,9.470740464444594,11.366894624691977,14.908412193461192,19.162809661823754,25.525875481280988,36.84658597962618,51.02203820902725,67.24730622946205,96.04385328662893,163.05718048491738,294.7698036282343,519.2351467039468,957.5703947344355,1368.5173470150648,3871.635585616455,5303.479827448212,3579.2066474003154,1207.1822867649944,879.86972928318,366.8852848474137,208.17182668800805,144.26637111917213,100.24198689599578,68.8181171714087,48.74457566630013,36.07983597894852,24.716276003836366,18.3829469088219,14.338503983471835,11.518473012854098,9.438998154290486,8.68554477575729,9.311149912848768,10.931731847155714,14.242659983217518,18.454273027639637,22.997981877882626,32.77535405493718,47.78443053413782,65.98233363630344,97.03921983999892,143.27997074170094,205.80805308530745,348.18684046898466,831.79281380406,1177.2730197279227,2733.3936378292215,3938.2641458688445,2819.7837494548567,820.3646271709737,471.375875031461,271.87929154854345,194.2701704157619,144.96617790506966,97.57679477120183,61.3119854017338,44.97129033826018,31.99456115711602,22.17888295501289,16.262756648609532,13.335771300720145,10.777277796853795,9.487237267421916,8.417922066711588,8.861550499416428,10.464447670423642,13.467380568991793,17.38086060460302,22.603085253093905,31.97609952936357,44.35670827935971,58.842492346581366,84.94360631088193,129.92857886018368,172.62888515328848,240.5800338500775,441.25082967480506,690.433249973267,1627.6849016299075,3510.6104569290264,2572.5928689582997,734.8496523828304,346.49155817100205,245.54955425961745,154.38419406683067,123.89126600552243,73.59283233646991,51.17681501405671,38.82351935658649,27.703018951863196,20.40402437294096,15.615914454631133,12.262838166368205,10.911393710353273,9.283100585377444,8.075802171650052,8.956035252138228,10.337739417364297,12.597356227543543,15.877991319670912,20.72637001773071,27.911545681671033,37.940376333065345,53.07587763393232,72.52038224079779,117.05897406186033,158.1266906527397,212.38391288711696,299.4867836696948,458.16531800810117,1452.428405553594,1811.7186422893874,1492.3389942582992,530.6523397479768,291.7696699108661,187.69065022036725,128.13046637777484,90.24516666546559,62.18605129748434,41.71026796673959,31.806783986884078,25.068630438788546,18.54255326241466,14.666394584276578,11.150365108371181,9.960676409836836,8.55252573747062,7.703013874435423,8.286347770022205,9.814492991323037,11.655898242076917,14.231766288773079,17.885476571421012,23.41308296098225,31.608461656401264,43.352221767718426,55.67641268585088,83.62026845099376,126.42534521303489,156.87210807500801,246.58019931340195,341.8826656952369,826.9835845406182,1404.2471167163787,1228.1386668678601,466.96068651596903,262.22064771032797,169.28009741248692,115.01657309947615,81.65638336581607,54.57935153074288,37.96052931128009,27.27027576498051,21.626986342929015,16.174148423485327,13.175385803191114,10.818108303701184,9.065785066362263,7.627579207821866,7.610701632113583,7.115802452704004,8.901126539273568,10.779707882412266,12.420331822356596,16.59830630324467,21.01203349353848,26.831312912868523,33.05177460907913,46.309734418779385,65.38320130208703,99.00247790521989,128.56748384849996,196.60807492406175,298.23398084325686,608.3625625870363,1076.3354380676617,975.850985820027,374.17471043828004,222.04753134206624,153.76758510324842,111.73984833658845,72.541074744398,46.502855765338275,35.06292130326583,24.451970593539095,20.281233326031273,15.065285185027921,11.707355473726542,9.74590294873012,8.114918006499499,7.096468111189281,6.67969820668914,6.587891450865514,7.818605119903106,9.54274635440958,11.594349559722247,14.318362157023484,17.8369152266786,22.844712934499004,29.434722992970055,39.99208797032299,55.28417554284476,86.77349231350205,121.99890155292813,175.66007701025202,246.61763210131207,451.5481073835745,628.040196235289,603.2938841078131,273.4211243626902,189.2849519360518,134.97815383583696,92.53793289958462,56.66597652017423,40.65405084235827,31.171413996879973,21.026413392061954,18.00341753039012,13.721993308218343,10.669689426212042,8.356205196082156,7.386888239801643,6.517599896433226,6.058499886687237,6.563882642693142,7.133679508828778,8.613838618839619,10.802606348653876,13.366335355351938,15.820551075574965,19.84516301549211,26.999239022736937,35.45845828087051,46.36309058448381,68.28146532850205,105.62610076866049,153.51240187831726,202.14938057052223,301.9853933671321,397.56324291610815,405.30563382951226,215.91082743746526,149.29333201310212,99.68010411133722,70.84414471218992,48.69670511438433,36.63705653603757,25.596184359277657,19.02307727771527,15.749761366858216,11.951033594401437,10.086463061934033,8.350629388119184,7.202239302975744,6.080777960262786,5.761268315012427,6.027372518289653,6.616549654230065,7.436545271508516,8.678329707766515,11.615060741665609,13.833866336064673,18.575864228781477,23.246005390172172,31.555902400033563,40.67766950058933,56.667715144820136,81.40820710822457,111.98547216305556,158.44613292857147,210.62780774515824,290.55794842865595,312.2562114669174,170.30250321119885,113.87454497096817,82.35425818333391,59.81860353409389,44.07044665600381,32.89377820490469,22.4965398710333,17.094011041557415,14.588382118274911,11.200549789992062,9.574583047751457,8.087405619242082,6.792599936861302,5.496191080596358,5.197170302313163,5.419942630651153,5.767860329309939,7.002053410482667,8.26429520320773,10.213916707261937,12.095005343850676,15.601004576857186,19.781090153028195,26.29348154312569,36.51556709004455,48.7408643730755,65.51772697359655,85.61686709192507,121.65124801185172,164.28464153081055,206.40983634767443,220.41852448872194,129.1056378165026,92.68914658233268,70.79106659924526,51.94356373034489,38.624038300983216,28.74288745792487,20.6631866841911,16.243037999103294,13.92500717092327,11.024255100844002,8.413995029686147,7.040147025381352,6.285688883641814,5.356080411446604,4.998534821439756,5.25099810618907,5.58096385535777,6.822302978819239,8.563400720638853,9.756320349629956,11.812088062444902,14.805264064130581,17.93575786748271,22.626272918294738,31.174402898500958,43.3023123072588,56.326841577080955,74.05099753610281,101.37453317449018,126.60409524008277,162.42301117619624,177.05193776506522,115.72813424994953,82.32606696648455,61.307330817502205,44.340846370849256,33.378870891164695,24.521965532974615,18.92394541612011,15.051214231467789,12.320737648353592,9.799975697099192,7.714567062664442,6.815255212600584,5.790991468644493,5.52549512713441,4.903702971198334,5.497726193903705,5.421043366592692,6.298858076371289,7.943078732352952,9.377851733747853,11.242198007971071,14.240421326197554,17.651811381705546,21.65902489648891,29.131550319460956,38.48508619988707,50.09231717784205,64.4932691398826,88.47403316985431,111.97252766350397,138.89119149223308,144.08748993083097,100.36203094373164,71.13075605018649,51.595222833795184,37.837750442044026,29.957897076201892,23.30758721647872,17.870061723923296,13.548228816751676,10.730279953947793,8.794138360854445,7.518939289315107,6.705955395914339,5.428620024764695,4.999797681915652,4.676270375800014,5.243183653118418,5.230872922380635,6.188105512403826,7.526151057968344,8.58301440056036,10.380584080562716,13.063097810243177,16.764705389876635,21.077788907239153,26.94625960151893,35.064067560413655,44.05394442010765,58.89519929139968,80.48050259180935,105.53062749300898,125.53124807748995,123.85180136306964,91.38685374872499,64.04380874388134,47.37724689060619,36.91779508742116,29.98630636615422,21.922248103539825,16.586233036173578,13.010233921941435,10.477074169109398,8.698555889337047,7.253735136999216,6.347024549002974,5.356926823245913,5.009657551484697,4.723715178338234,5.0872350526917325,5.223561398000081,6.241954700641649,7.152186377107882,7.932055855788007,9.974158228854499,13.174966641491576,15.965377755431728,19.87195953345976,25.954935810295414,33.85428376681964,44.1133188893869,56.69989223438384,81.03385717253579,104.09119566434012,123.77824150517087,114.20520067738279,85.22969325973847,60.29515709869259,46.590785285134146,36.201434834295654,27.092016678743615,20.190577794974832,15.811850117592071,12.818302458338326,10.737776338076218,8.44173952770926,7.256366062006143,6.172304178446841,5.431932326904466,5.446236553247722,4.806438682985975,5.446236553247728,5.431932326904464,6.172304178446841,7.256366062006148,8.441739527709267,10.737776338076216,12.81830245833833,15.811850117592071,20.190577794974825,27.092016678743608,36.20143483429564,46.590785285134125,60.29515709869255,85.22969325973847,114.20520067738286,125.53124807748999,104.09119566434013,81.03385717253583,56.69989223438384,44.113318889386896,33.854283766819655,25.95493581029537,19.871959533459762,15.965377755431739,13.174966641491576,9.974158228854503,7.932055855788011,7.152186377107889,6.241954700641652,5.2235613980000775,5.087235052691731,4.723715178338238,5.009657551484697,5.356926823245915,6.347024549002971,7.25373513699922,8.698555889337047,10.477074169109407,13.010233921941426,16.58623303617357,21.92224810353982,29.986306366154224,36.91779508742115,47.37724689060615,64.04380874388131,91.38685374872492,123.85180136306961,138.891191492233,105.53062749300904,80.48050259180923,58.89519929139969,44.05394442010761,35.06406756041363,26.94625960151893,21.077788907239164,16.76470538987663,13.063097810243177,10.38058408056272,8.583014400560364,7.526151057968346,6.188105512403833,5.230872922380638,5.243183653118417,4.676270375800014,4.99979768191565,5.428620024764696,6.7059553959143425,7.518939289315103,8.79413836085444,10.730279953947782,13.548228816751662,17.870061723923293,23.30758721647872,29.957897076201906,37.837750442044026,51.59522283379521,71.13075605018645,100.36203094373161,144.08748993083097,162.4230111761963,111.97252766350395,88.47403316985432,64.49326913988264,50.09231717784207,38.48508619988706,29.131550319460946,21.6590248964889,17.651811381705546,14.240421326197549,11.24219800797108,9.377851733747859,7.943078732352953,6.29885807637129,5.421043366592696,5.4977261939037065,4.903702971198332,5.525495127134404,5.790991468644487,6.8152552126005865,7.71456706266444,9.79997569709919,12.320737648353587,15.051214231467785,18.92394541612011,24.52196553297462,33.37887089116468,44.340846370849256,61.30733081750221,82.32606696648458,115.72813424994952,177.05193776506513,206.40983634767417,126.60409524008281,101.37453317449015,74.05099753610281,56.326841577080955,43.302312307258816,31.174402898500965,22.62627291829474,17.93575786748271,14.805264064130563,11.812088062444909,9.756320349629952,8.563400720638858,6.822302978819243,5.580963855357768,5.250998106189071,4.998534821439756,5.356080411446606,6.285688883641807,7.040147025381352,8.413995029686149,11.024255100844005,13.925007170923264,16.243037999103286,20.663186684191096,28.742887457924876,38.62403830098324,51.94356373034486,70.79106659924523,92.6891465823327,129.10563781650256,220.41852448872183,290.5579484286558,164.28464153081066,121.65124801185169,85.61686709192507,65.51772697359652,48.74086437307553,36.51556709004454,26.29348154312569,19.78109015302819,15.601004576857186,12.095005343850689,10.213916707261948,8.26429520320773,7.002053410482677,5.7678603293099435,5.419942630651146,5.1971703023131655,5.496191080596355,6.7925999368613,8.087405619242078,9.574583047751446,11.20054978999206,14.588382118274911,17.094011041557405,22.496539871033306,32.89377820490469,44.07044665600381,59.81860353409384,82.35425818333394,113.87454497096807,170.30250321119888,312.2562114669173,397.5632429161083,210.62780774515818,158.44613292857147,111.98547216305556,81.40820710822456,56.66771514482015,40.677669500589346,31.555902400033585,23.246005390172176,18.5758642287815,13.833866336064665,11.615060741665616,8.678329707766514,7.436545271508522,6.616549654230062,6.027372518289661,5.761268315012427,6.080777960262785,7.20223930297574,8.350629388119183,10.086463061934035,11.951033594401432,15.749761366858216,19.023077277715267,25.59618435927765,36.63705653603754,48.696705114384315,70.84414471218994,99.68010411133719,149.2933320131021,215.91082743746531,405.3056338295121,628.0401962352888,301.9853933671322,202.14938057052214,153.5124018783174,105.62610076866049,68.28146532850205,46.36309058448382,35.4584582808705,26.99923902273696,19.845163015492105,15.820551075574963,13.366335355351934,10.802606348653876,8.613838618839624,7.133679508828785,6.563882642693131,6.058499886687237,6.517599896433232,7.386888239801645,8.356205196082152,10.669689426212047,13.721993308218325,18.00341753039013,21.026413392061936,31.17141399687996,40.65405084235825,56.665976520174254,92.5379328995846,134.978153835837,189.28495193605173,273.4211243626903,603.2938841078127,1076.3354380676617,451.5481073835747,246.61763210131207,175.66007701025202,121.99890155292813,86.77349231350213,55.28417554284478,39.992087970322984,29.434722992970055,22.844712934499,17.836915226678613,14.318362157023493,11.594349559722259,9.542746354409577,7.818605119903106,6.58789145086551,6.67969820668914,7.096468111189283,8.114918006499497,9.745902948730114,11.707355473726548,15.065285185027918,20.281233326031277,24.451970593539112,35.06292130326583,46.50285576533829,72.54107474439797,111.73984833658835,153.7675851032484,222.04753134206618,374.17471043828004,975.8509858200265,1404.247116716379,608.3625625870361,298.2339808432568,196.60807492406164,128.56748384850005,99.00247790521995,65.38320130208704,46.3097344187794,33.05177460907913,26.831312912868544,21.012033493538468,16.598306303244666,12.420331822356601,10.779707882412263,8.901126539273562,7.115802452704002,7.610701632113586,7.627579207821871,9.065785066362265,10.81810830370118,13.175385803191121,16.17414842348535,21.62698634292904,27.270275764980493,37.9605293112801,54.579351530742926,81.65638336581611,115.0165730994761,169.28009741248692,262.22064771032797,466.9606865159688,1228.1386668678595,1811.7186422893876,826.9835845406185,341.88266569523705,246.58019931340198,156.87210807500793,126.42534521303487,83.62026845099378,55.67641268585091,43.352221767718426,31.608461656401282,23.413082960982216,17.885476571420995,14.231766288773079,11.65589824207691,9.814492991323034,8.286347770022209,7.703013874435423,8.552525737470617,9.96067640983684,11.150365108371185,14.666394584276583,18.542553262414668,25.068630438788542,31.80678398688409,41.71026796673957,62.18605129748433,90.24516666546555,128.13046637777475,187.69065022036725,291.769669910866,530.6523397479768,1492.3389942582987,3510.6104569290255,1452.4284055535948,458.16531800810117,299.48678366969483,212.38391288711682,158.12669065273965,117.05897406186025,72.52038224079779,53.07587763393235,37.94037633306532,27.91154568167104,20.726370017730687,15.877991319670903,12.597356227543528,10.337739417364284,8.95603525213823,8.075802171650054,9.283100585377436,10.911393710353279,12.262838166368201,15.615914454631143,20.404024372940963,27.703018951863204,38.82351935658651,51.17681501405669,73.59283233646987,123.89126600552244,154.38419406683062,245.54955425961754,346.491558171002,734.8496523828308,2572.5928689582984,3938.2641458688445,1627.6849016299093,690.433249973267,441.25082967480483,240.5800338500775,172.6288851532884,129.92857886018368,84.94360631088196,58.84249234658136,44.356708279359744,31.976099529363548,22.603085253093905,17.38086060460301,13.467380568991784,10.46444767042364,8.86155049941641,8.417922066711593,9.487237267421909,10.777277796853792,13.335771300720136,16.262756648609525,22.178882955012895,31.994561157116046,44.9712903382602,61.31198540173379,97.57679477120189,144.96617790506969,194.27017041576195,271.87929154854334,471.37587503146125,820.3646271709738,2819.7837494548558,5303.479827448214,2733.393637829224,1177.2730197279232,831.7928138040597,348.18684046898477,205.80805308530728,143.2799707417008,97.0392198399989,65.98233363630345,47.784430534137826,32.775354054937196,22.99798187788262,18.45427302763963,14.242659983217516,10.931731847155714,9.311149912848757,8.68554477575729,9.438998154290482,11.518473012854098,14.33850398347184,18.38294690882191,24.716276003836377,36.079835978948545,48.744575666300136,68.81811717140873,100.2419868959958,144.26637111917196,208.17182668800794,366.88528484741386,879.869729283181,1207.1822867649948,3579.206647400314,9609.510642612793,3871.635585616455,1368.5173470150646,957.5703947344349,519.2351467039468,294.7698036282341,163.05718048491758,96.04385328662897,67.24730622946208,51.02203820902724,36.84658597962616,25.525875481280988,19.16280966182375,14.908412193461192,11.366894624691964,9.470740464444583,9.2913516551568,10.159177492646041,12.287444953226698,15.549412568397658,19.757351140056148,24.977928698897006,37.142546768677924,52.99804226348364,73.27025198501791,111.93749936902559,170.62516999169443,278.949238305003,549.162797909273,1059.199511390564,1669.5618690661465,4992.660876939416,11652.54137553122,6958.57407595036,3145.1913405539112,2239.759564019211,884.1270089569299,377.1669320120499,189.56857349608163,104.51314473208359,70.13283587506172,58.56586141233153,44.406163862355506,30.553614566731444,20.83871129934411,15.043219420350246,12.029240511903463,9.976865753609394,9.456590806505236,10.149549151428952,12.574490983994684,16.964451546104694,20.596051003825067,26.905297339122818,40.61744324744603,54.13204733326223,72.77622691509019,104.06222158598892,186.7255065372885,370.96222186223156,759.635917361733,1776.9919423314723,3079.1167046754904,6105.997676743737],imag:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},imag:[0,-.027073229785536494,.5901192988693814,-.9644676127054844,-.6435513043684985,-.6829115331705075,-.33645866529024865,.1935415439422136,-.12487037453098428,-.012369715566745995,.009821656947174946,.001542130029622399,.02081828830073528,.0037303920674802314,-.003883765217723355,.0006069307833895878,0,-.0006069307833869235,.003883765217723578,-.0037303920674795358,-.020818288300735933,-.0015421300296204468,-.009821656947175919,.012369715566746212,.12487037453098428,-.1935415439422141,.33645866529024965,.682911533170507,.6435513043684981,.9644676127054836,-.5901192988693817,.027073229785536425,-2.356307432098977,2.587940347586387,2.1627258263390448,-3.1655869149224403,-.41468157127337424,.7347719953591375,-1.211933554911916,-.10726288955095604,.30943623202091536,.23604949314849888,-1983168313462914e-20,-.015096007795395092,.004417252491343731,.0012110563015863107,-.00040440768488355977,.000567757389230058,-.0005394293684455165,.0008757592919714687,-.002003234803528005,.00426038521803142,-.006208767078144233,.017375416518930226,-.014179868174360925,-.10125602185153701,-.15414023444697653,-.0358003963960097,-.9621107867681807,-.9605345505025396,-1.1229487194040586,-2.1710672351706557,1.4940913514434742,2.721723671160099,1.1141581132568867,-.841736803219896,-5.280137930470969,1.1933011924316357,3.239740520240387,.5838233530507139,-1.2090975123731194,.11812270190565496,.29294962083792114,.3880856379559003,.017661918975066655,-.007528799574903376,-.01833433605761641,.008066808502342615,.0016882901545514294,.00017988558455360213,-.00046271928878641557,-.00012883481246306377,-.001503708333697518,-.0051624614514164694,.005133734466588424,.01635194779532648,-.020739891572331103,.034224425977121886,.14660089916526936,.2579692221979365,-1.297902949650936,-.81053000193538,2.2824415889165404,1.3538813012752462,-3.6141509401212817,-1.364170834350039,-2.525115924658619,-3.1276611078214884,-3.252000824045553,1.0086268501795932,2.576303003859745,.407729723972842,-.2975902384778692,-.0494962237459273,-.03251108057442876,.06713074400583147,-.0201042966896933,-.01057748453125613,.009368038924123134,.009420380399277449,20439677469712496e-21,-.0004604215069295604,9792756390863383e-20,-.00040743814870436565,-.0007444276756590308,-.005313406106324482,-.008145792801664794,-.016837193889943817,.0009032287522820004,.15679003542803616,.24794675857842086,.3081518049446281,-.6522903778756209,-1.340871786671726,2.650867362162943,3.2598446139294937,-1.6423378558800314,-3.9986185110220567,.17392931664300956,.21368421587766026,-1.2315545205448162,-1.742271976628461,1.3054063480052003,1.3750287394245329,-.3502225984293912,-.6224763958828862,-.048937158811492604,.04621371934939938,-.07124817285142081,-.03163818247427977,.009288322138823076,.00589473134051025,.0020720238780862037,.00012946526299033534,-7130655653596095e-20,-.0003880911286883059,.0011018135930776953,.0010417550100125584,.007204075602470576,-.02451231341789871,-.016921302325211343,.019764169882346385,.06258743950423488,-.08728292900258337,-.10008726366432093,-.14363219386863416,1.74690534215911,1.042390648919584,-1.364603392172089,-.6832120976500584,.6689283878072149,.7320877283879961,-.32755194356284695,-.30510623667849596,1.5181969873975902,.3427855602261544,-.7431358427778345,-.3570569990766632,.1310185858494092,.08359045749501881,-.021674632648672316,-.02469255214616152,-.004303489386532218,.0020376676236782713,.002149386520661087,.00038855444421157756,-.0002374605390013383,-.00029830757497495967,-.0001970006488720256,-.0008798249142148044,.007480568970943,.010808720951461402,-.0357981771162344,-.09154171642070627,.00920107640750832,-.19110346978313567,-.6257943092402674,-.13482498836119824,1.785974669626095,1.1747425146844421,-1.173327779558617,.27670322508415535,.3356270851657698,.2710437571302265,-.04917488399628335,-.09917627706172702,.47021789966195177,.19299106678658604,-.25337707381982333,-.21158932458700433,-.0038282192087294945,.07942642110626252,.00492762807522141,-.012631915096635613,-.002085758492304744,.0014730403106953706,.0005628222038354892,-5275302542796766e-20,-.0001104394847276082,-.00013701607546798722,.0002414171366719811,-.00017599692518015115,.0033313264069332665,-.002641595347408199,-.03455140111402242,-.06761433595406231,.057375162080317274,.10414416266224315,-.4897526648425265,-.7572635790435928,.48971199898009016,1.1084142254331173,.07444266944177236,.13102742771679016,-.24374357403537103,-.2835664388260767,-.6520378418759146,-.3685028492139317,.37230089042480646,.4991450162764402,.03144937434939515,-.2399287515678561,-.08609207689152655,.032374807759909224,.0062294082126362945,-.006091793021644244,-.0010414824560445231,.00015455144974867572,-8998084242691725e-20,-15754152380049444e-21,2.760348450088792e-7,-849255802822784e-19,-9538306571273261e-20,.0012356709589061894,.001982516064942067,-.002517283385234882,-.028888564425605757,-.016030883614829267,.06926075485332472,.01050151756755099,-.24153406544338693,-.2847803977366839,.37357513895849587,.5650775022620796,-.29338428828582186,-.5501221349190477,-.1325676957723277,-.09330684787486831,-.2666866763405996,-.24770054522287138,.1944884297335735,.335914872615766,.06235746981204858,-.1546651423691924,-.03904218756455085,.014396528935747412,-.0017849945305527066,-.004079829332167153,-.0019408045705910123,.0008489503374664237,.00039593785796133193,55592435290972645e-21,-4196563644218682e-21,-6285292982400746e-20,-.00034629566400638584,-4824134743206145e-21,.0005751200811331312,.00033489534843084444,-.0031901125163299256,-.010909574115055,.01692045877708555,-.06078620927575318,-.21998547499285445,.011288166830458734,.39450427611204475,.321564638169156,-.16694523801433098,-.28285607915278405,-.008643196177164006,-.016216948868002824,-.12426113686156882,-.131052745257654,.01783418219228005,.12470331491202472,.03733815149147147,-.05376656389013382,-.017697451862990946,.008764198507650423,.002017711239854182,-.003290394241803426,-.000988798848055997,.0007282635434483188,.00023394715134995964,11123369888840513e-21,-35001088996629374e-21,-3138815545488478e-21,-.000158385967784067,-.0003344519075645515,-.0001142558275417929,-.0008847304395787205,-.005503554703673921,-.00718828294403152,.005675466444331685,-.02416567152013357,-.1299491286669429,-.03043154404819853,.1938385123446293,.16309710351628273,-.07415002601418613,-.12085880532211579,-.04459501328781723,-.043366337948898985,-.09025701903746017,-.07338487102500908,.023239798472538018,.07639283896145152,.011216629301030985,-.0359133520966744,-.01357375954538888,.0067665755556069575,.0030103388508484073,-.0006514168760721264,-.00041655443776571915,.00013094293222966718,3229221596799438e-20,-1526253885399206e-20,-15127801448997461e-21,-6484569455970776e-21,-15492547416280305e-21,-9130808221291799e-20,.00016667120940429337,-.00041873515724890633,-.004902747172790411,-.003075534798824412,.009273813673723761,.0020660684229551027,-.04064403555503323,-.03323397176665684,.045775294033398174,.05716734954522341,-.02508375199406394,-.0767251452400631,-.029192878339710793,-.027962636418086263,-.036204190826297326,-.02072342388456853,.024267798198958853,.039127433373256276,.006667244744646227,-.015463651616642567,-.007692451841204994,.002747162689368753,.0010462542577807969,-.0003229360368416571,-.00014335933849004065,2766440238214689e-21,13817898707968035e-21,25461973861614876e-22,-29451008005958465e-22,-4.092213715905222e-7,3320878038416438e-21,22930933947507775e-22,.00019381368934935658,.00021177469863592545,-.0013059386478791995,-.0007473954471473123,.007400989142391346,.004050897694794256,-.024179081541404416,-.025786109831526915,.024427880538049996,.04951327324560642,.018107593495138536,-.019155633990847833,-.010866608608631909,-.011586446122093948,-.017758841021731874,-.007715199561440257,.00990834425863341,.016798455246852806,.005138503748119508,-.0053053978312845055,-.003429495076402552,.0006116966274444585,.00033799731924544067,-.00024058911609197694,-.00010154505453872226,19807787751332398e-21,11566718045558844e-21,23526983774034052e-22,-31629035250083664e-22,-1906633619859879e-21,-14241006555052951e-21,-330200303448997e-19,5290853973260344e-20,51357289146045035e-21,-.00039743496113234163,-.0006343205168911938,.0027089055320300356,.0013503752362499016,-.008288463063230112,-.009258934255387725,.008804972429009492,.02275670271313029,.011156251045765241,-.008345093031839768,-.004940669431738527,-.005800145590866721,-.007660359819079003,-.005302182077907032,.001845870794973378,.0051951770049388935,.001795161616712868,-.0014758375936677148,-.0009117499635695499,.00015619540664616496,.00011997798601084234,-7415390708438721e-20,-47705175525428954e-21,1049884054100156e-20,5701674360308773e-21,-11348311617650734e-22,-103925320562205e-20,-1.5023935068766505e-7,-4599943901272893e-21,-1708345992084472e-20,-9696763357441846e-21,8878907587721923e-21,-.00012444306086311345,-.00019783492062566108,.0006062498980952343,.0003345096593112143,-.0029572761111825215,-.0037574725417352365,.000992336165459151,.006128000465849098,.0032489106979224094,-.0026668961742810043,-.002438546997304683,-.002905573129275835,-.003533084148713472,-.0021581469455770066,.0004512779738536844,.0018583554775031736,.0007285298435105804,-.00040485086541622897,-.00029259265207938966,.00012119187628647567,5798766987054399e-20,-2689854721032224e-20,-12650266391968962e-21,14661018807957155e-22,15771327546691322e-22,-3.698251896381977e-7,-2.95255815126064e-7,-1.495621091456335e-7,1.1697432596209132e-7,-2292178667976115e-21,-2.2344957140311543e-7,90079557167444e-19,-4795139786492691e-20,-8939511172058766e-20,.00025656486918183087,.00025588309866116956,-.0007398377921297984,-.0015213421071961196,-9240330108667715e-20,.0017855278470929681,.0015458463998575377,-.0006136902721295195,-.0002650462841391821,-.0008703690254052181,-.0012627180005201106,-.0008042195507731516,.00014616084301033664,.0005880267885424399,.00023126432473923958,-.00010449095558686259,-.00010228145451208669,19325523686774618e-21,30323974870826362e-21,12683141406816166e-22,-12058446868057975e-22,8.814376877175333e-7,3.3549731120851134e-7,9.105679926165996e-8,2.0577319091974112e-8,9.283025942782679e-8,-6.470483994715781e-7,-4.5648010846713924e-7,2103388123856688e-21,732796229427314e-20,-24374370669839543e-21,-2589867431711574e-20,.0001125714428440936,.00014693728608109456,-.0002392458880004518,-.0005012377270009061,-7443520838038597e-20,.0006844439756502559,.000832077708244806,.0004882895630099605,0,-.0004333086846600954,-.0006465149337464556,-.0004135205525089448,5823257835556509e-20,.00026030164250996835,.00011785219152459624,-5047942915405733e-20,-4154319183356831e-20,775503552757304e-20,8578788970901274e-21,5.074268522214453e-8,-15265704867968537e-22,7.612742091585594e-7,3.432277360658854e-7,-2.4467237539618118e-8,0,2.4467237179738174e-8,-3.4322773619012653e-7,-7.612742091921715e-7,1526570486753494e-21,-5.074268506979446e-8,-8578788970889695e-21,-7755035527569227e-21,4154319183356831e-20,50479429154150824e-21,-.00011785219152460185,-.00026030164250998353,-5823257835557963e-20,.0004135205525090498,.0006465149337465323,.0004333086846601974,.0002650462841403281,-.0004882895630100106,-.0008320777082443153,-.0006844439756492786,7443520838062753e-20,.0005012377270007821,.00023924588800066727,-.00014693728608088972,-.000112571442844023,2589867431722904e-20,24374370669918344e-21,-7327962294092794e-21,-21033881238922216e-22,4.5648010853483173e-7,6.470483993356496e-7,-9.28302595716479e-8,-2.0577319091885375e-8,-9.105679955012225e-8,-3.35497311276606e-7,-8.814376876871839e-7,12058446867643514e-22,-12683141406445925e-22,-3032397487090597e-20,-19325523686839914e-21,.00010228145451204714,.00010449095558694352,-.00023126432473908535,-.0005880267885422517,-.00014616084301019596,.0008042195507736376,.0012627180005203068,.0008703690254049552,.0024385469973038903,.0006136902721293607,-.001545846399856955,-.0017855278470920858,9240330108662681e-20,.001521342107196109,.000739837792129673,-.0002558830986612646,-.0002565648691818949,893951117205118e-19,4795139786497207e-20,-9007955716616503e-21,2.234495713888465e-7,22921786679921674e-22,-1.1697432602157082e-7,1.4956210883105962e-7,2.9525581512599554e-7,3.6982518948350376e-7,-15771327547503337e-22,-14661018806631417e-22,12650266391950919e-21,26898547210308593e-21,-57987669870649895e-21,-.00012119187628649009,.0002925926520794114,.00040485086541640515,-.000728529843510411,-.0018583554775031031,-.0004512779738534315,.0021581469455775027,.003533084148713233,.0029055731292758334,.004940669431739408,.002666896174281276,-.003248910697921659,-.00612800046584773,-.000992336165458837,.003757472541735064,.0029572761111822826,-.00033450965931128095,-.0006062498980952801,.0001978349206256149,.00012444306086323596,-8878907587627067e-21,9696763357407648e-21,17083459920778764e-21,4599943901176715e-21,1.50239350319166e-7,1039253205622084e-21,1134831161608397e-21,-5701674360361638e-21,-104988405409158e-19,47705175525396455e-21,7415390708440185e-20,-.00011997798601094042,-.0001561954066460971,.0009117499635695794,.0014758375936678126,-.0017951616167126566,-.005195177004938604,-.0018458707949728875,.00530218207790768,.007660359819079508,.005800145590866926,.010866608608631407,.008345093031839288,-.011156251045764934,-.02275670271313004,-.00880497242900997,.00925893425538742,.00828846306322987,-.0013503752362499656,-.0027089055320300547,.0006343205168911506,.0003974349611324022,-5135728914582959e-20,-52908539732616404e-21,3302003034476244e-20,14241006554950027e-21,19066336197302612e-22,31629035250082296e-22,-2352698377375767e-21,-11566718045553533e-21,-1980778775134491e-20,.0001015450545386955,.0002405891160920911,-.00033799731924550203,-.0006116966274444732,.003429495076402614,.005305397831284527,-.0051385037481194926,-.016798455246852688,-.00990834425863296,.007715199561440763,.01775884102173201,.011586446122093877,.029192878339711306,.019155633990847316,-.018107593495138137,-.04951327324560528,-.024427880538050034,.02578610983152671,.024179081541404305,-.004050897694794173,-.007400989142391216,.0007473954471472543,.0013059386478792266,-.0002117746986358277,-.00019381368934936018,-22930933947504607e-22,-33208780385072546e-22,4.092213713989788e-7,29451008005957237e-22,-25461973862464916e-22,-13817898708041393e-21,-2766440238097494e-21,.00014335933849003848,.0003229360368416904,-.001046254257780874,-.002747162689368661,.007692451841205041,.015463651616642399,-.0066672447446463326,-.03912743337325591,-.024267798198958437,.020723423884568916,.03620419082629698,.02796263641808593,.04459501328781619,.07672514524006353,.02508375199406461,-.05716734954522297,-.045775294033398015,.03323397176665664,.04064403555503332,-.0020660684229550407,-.009273813673723708,.00307553479882429,.00490274717279044,.0004187351572489531,-.00016667120940430416,9130808221291303e-20,1549254741618293e-20,6484569455921929e-21,15127801448997605e-21,15262538853884928e-21,-3229221596802505e-20,-.00013094293222960533,.0004165544377657112,.0006514168760721156,-.0030103388508485036,-.006766575555606901,.013573759545388975,.035913352096674386,-.011216629301031098,-.07639283896145119,-.023239798472537657,.07338487102500925,.09025701903746076,.043366337948898895,.008643196177164695,.12085880532211546,.07415002601418648,-.16309710351628132,-.1938385123446288,.030431544048198395,.12994912866694291,.024165671520133634,-.005675466444331592,.007188282944031584,.005503554703674014,.0008847304395788092,.00011425582754175175,.0003344519075645258,.0001583859677839329,3138815545460048e-21,35001088996629286e-21,-11123369889024881e-21,-.000233947151349965,-.0007282635434482989,.000988798848055947,.003290394241803499,-.002017711239854204,-.00876419850765046,.017697451862991015,.053766563890133824,-.03733815149147147,-.12470331491202422,-.01783418219227963,.13105274525765467,.12426113686156864,.016216948868002876,.1325676957723277,.28285607915278405,.1669452380143309,-.321564638169156,-.39450427611204497,-.01128816683045884,.2199854749928545,.06078620927575355,-.01692045877708555,.010909574115054964,.0031901125163300605,-.0003348953484307534,-.0005751200811331908,4824134743154272e-21,.00034629566400617116,6285292982385847e-20,4196563644218682e-21,-55592435290969e-18,-.0003959378579614673,-.0008489503374664796,.0019408045705911188,.004079829332167385,.0017849945305527092,-.014396528935747516,.03904218756455085,.15466514236919257,-.06235746981204847,-.3359148726157663,-.19448842973357355,.24770054522287124,.26668667634059967,.09330684787486825,.24374357403537067,.5501221349190479,.2933842882858228,-.5650775022620788,-.3735751389584949,.284780397736683,.24153406544338699,-.010501517567550396,-.06926075485332467,.01603088361482913,.02888856442560565,.0025172833852350443,-.0019825160649420428,-.0012356709589064721,9538306571267618e-20,8492558028191072e-20,-2.7603484500895416e-7,1575415238022084e-20,8998084242646396e-20,-.00015455144974887674,.001041482456044473,.006091793021644366,-.006229408212636259,-.03237480775990959,.08609207689152654,.23992875156785606,-.03144937434939536,-.4991450162764392,-.37230089042480613,.3685028492139316,.6520378418759155,.2835664388260763,-.3356270851657694,-.13102742771679063,-.07444266944177194,-1.108414225433116,-.4897119989800905,.7572635790435917,.4897526648425272,-.10414416266224276,-.0573751620803173,.06761433595406217,.03455140111402254,.002641595347408143,-.0033313264069329894,.00017599692518009282,-.00024141713667201988,.00013701607546791344,.00011043948472760822,52753025427777066e-21,-.0005628222038358042,-.001473040310695623,.0020857584923045986,.01263191509663575,-.004927628075221602,-.07942642110626258,.003828219208729548,.21158932458700425,.2533770738198234,-.19299106678658623,-.4702178996619516,.09917627706172702,.04917488399628373,-.2710437571302268,-.6689283878072138,-.27670322508415546,1.1733277795586157,-1.1747425146844417,-1.7859746696260967,.1348249883611979,.6257943092402684,.19110346978313578,-.009201076407508389,.09154171642070574,.03579817711623483,-.01080872095146141,-.007480568970943008,.0008798249142151562,.00019700064887198773,.00029830757497410965,.00023746053900133802,-.00038855444421207136,-.002149386520661688,-.0020376676236788177,.004303489386532551,.02469255214616217,.021674632648672077,-.08359045749501866,-.13101858584940929,.3570569990766635,.7431358427778344,-.3427855602261542,-1.5181969873975907,.3051062366784956,.3275519435628456,-.7320877283879972,-.1739293166430094,.6832120976500574,1.3646033921720888,-1.0423906489195836,-1.74690534215911,.14363219386863219,.10008726366432133,.08728292900258416,-.06258743950423491,-.019764169882346593,.016921302325211187,.02451231341789838,-.007204075602470608,-.0010417550100130558,-.0011018135930777443,.0003880911286887635,7130655653596091e-20,-.0001294652629900706,-.002072023878086452,-.0058947313405104855,-.009288322138823244,.03163818247427968,.0712481728514214,-.046213719349399086,.04893715881149251,.6224763958828862,.35022259842939113,-1.375028739424532,-1.3054063480052007,1.7422719766284596,1.2315545205448166,-.21368421587766057,2.52511592465862,3.998618511022057,1.6423378558800306,-3.2598446139294928,-2.6508673621629413,1.3408717866717237,.6522903778756212,-.308151804944626,-.24794675857842133,-.1567900354280353,-.0009032287522819449,.016837193889943952,.008145792801665074,.005313406106322907,.0007444276756593883,.0004074381487042835,-9792756390863333e-20,.0004604215069290903,-20439677469763416e-21,-.009420380399277433,-.009368038924124633,.01057748453125583,.02010429668969378,-.06713074400583184,.032511080574428954,.049496223745927104,.29759023847787003,-.4077297239728414,-2.576303003859742,-1.0086268501795939,3.252000824045553,3.127661107821488,-1.1141581132568867,1.3641708343500387,3.614150940121283,-1.3538813012752458,-2.282441588916541,.8105300019353767,1.2979029496509369,-.25796922219793567,-.14660089916526964,-.034224425977123246,.020739891572330926,-.016351947795325953,-.0051337344665883956,.005162461451415738,.0015037083336985342,.0001288348124592733,.00046271928878641655,-.00017988558455328343,-.0016882901545534784,-.008066808502341562,.018334336057616227,.0075287995749028155,-.01766191897506652,-.3880856379559012,-.2929496208379211,-.11812270190565234,1.2090975123731191,-.5838233530507149,-3.2397405202403844,-1.1933011924316363,5.280137930470969,.8417368032198966,2.356307432098976,-2.7217236711600976,-1.4940913514434744,2.1710672351706584,1.1229487194040595,.9605345505025428,.962110786768179,.03580039639601351,.15414023444697636,.10125602185153926,.014179868174359136,-.01737541651892931,.006208767078144257,-.004260385218028646,.0020032348035250135,-.0008757592919680961,.0005394293684455174,-.0005677573892316519,.00040440768488539494,-.0012110563015865644,-.004417252491344408,.015096007795395007,19831683135784154e-21,-.23604949314850127,-.3094362320209155,.10726288955095381,1.2119335549119155,-.7347719953591406,.414681571273373,3.165586914922437,-2.162725826339043,-2.5879403475863874],height:32,width:32,top:{real:[26312.86148654806,16394.776884218503,-3997.4541326480944,12005.135907922067,1177.5601778241692,-334.8497151355127,-198.67917160941846,-63.09118295690562,-26.0143192287494,-17.75101650843531,-4.136628014388824,.8982053702657227,-.324806741646628,-.08434617835956747,-.13448645703297074,.02245836901316695,.0037906136595566063,.022458369013118644,-.13448645703284343,-.08434617835963924,-.32480674164661494,.8982053702658853,-4.136628014389087,-17.751016508434784,-26.0143192287494,-63.091182956905335,-198.67917160941835,-334.84971513551284,1177.5601778241696,12005.135907922073,-3997.454132648096,16394.77688421849,-7474.640597759217,-8567.904378081994,-2236.1016166727777,5029.218127936877,173.97100199359824,-922.653304038107,-153.6610478382718,-4.01177942588299,-14.977979358030328,-15.430842802070819,-7.497586109644668,1.585406689794443,.1790689360368364,-.1458960091743404,-.06104308029346263,-.004607237393951323,.008718442830944043,.017310354876342828,-.02533108502730846,-.09067358339297628,-.39184400032069594,-.7307868181546736,-.9217464577408652,-10.93402591728189,-30.447262913620346,-38.126922827402865,-60.96811030366962,-681.1328664362251,624.5385795569597,7785.429255085771,-1762.2326743166159,-6145.370350036236,-30710.86949592911,-20630.868893573344,1300.6579518513645,5360.918420669898,848.328651928997,-785.9843803018139,-108.77167233308913,41.321279695295864,-.027644771384101652,-9.534868349699865,-1.2097145653165393,.21253485530640887,-.28694451643507407,-.19362286330376682,-.015513947258845627,.0028928780958250894,.010770434199071796,.0037362591288644677,-.0334581045353286,-.15988488342210658,.11739550901211815,.746689000680089,-4.48048036129955,-15.856083499246324,-27.81649204924017,2.1424019920280393,12.12605916297551,-787.5686768088281,-403.5446810123271,3807.5774006807187,4390.115310530876,-17039.95903670892,-13609.16252827678,-9138.495529637588,2497.011334238651,4397.1447406314655,786.4046140955403,-371.53196930683333,-41.579492344426484,10.792253245683401,12.926010493557772,-.9413012216980668,-.22574146482830848,-.15910329528413825,.03954287714519109,-.16497562627541082,-.03454657200349826,.002839677815166053,.009503605024209057,.0028202375766785176,-.035341389521162114,-.14687879382002816,-.1261179825986674,.45588994614236095,-.2587631394768133,-11.107804183612142,-9.846951825287812,5.474863645049449,23.93852180867734,-449.68159927787053,-188.33038343684237,3370.1365438276152,4992.370575020496,-4902.846970969287,-11751.949054213763,-9055.77278992859,-1597.312584178899,1957.0910297219173,675.954300804676,-59.52343031546897,3.5981209875694646,26.908851107336638,3.3880871060788613,-6.3950609995768,-2.7652104861310596,.5155377250297187,.20366584836429452,-.07807676151884048,-.03230658830727563,-.0003373264014373202,.00398822838161625,.00882576812785189,-.010351412440947377,-.13141543694038546,-.35838805663068013,-.08366586649677031,-.11489505024575582,-2.0174170653233996,5.313800098890094,16.719706304911163,26.780389598343444,-155.76938280407634,15.711518936085053,2108.6641632789715,2004.0776030609009,-5284.485150872925,-7525.512448747633,-5804.138136685775,-1404.695681801157,766.7977220394387,489.03634446603957,-8.722049146589729,-31.327724554225572,11.011155797013167,-.5077972295941442,-5.742252846851467,-2.0029903992471274,.11899325802032906,.03542636355588493,-.0016279289016664685,-.006885388771059224,.000849494552456665,.0025820557167290517,.004778391224536287,-.00607766280204007,-.06602117239194515,-.14585644547184912,.31419533009862166,.4720008156080655,-3.7567756530835696,-5.29904934386644,20.30923225911653,43.66331695464585,-13.481975167534534,87.48028602503862,872.0190203286597,302.5978466997831,-3861.3331359414924,-2689.7311891987174,-2302.561977465082,-533.7087971643554,471.8258692686618,253.24935366729582,-54.914023853010136,-45.12805099298314,1.7233725901997559,4.808389091497919,-1.2558586165362935,-1.1198886962259056,-.17080663964208292,.007377669239384073,.01315742418122162,-.004201888894598299,3992740472254069e-20,.0024301018087218612,.0013997723845362102,-.01262770667339704,-.024640414526077212,-.03179823603143843,.16501061208698242,-.05307016660588926,-2.4508298603470875,-6.180412513391736,1.555942705006216,9.636927738004433,-40.99091559206867,48.38111412245632,486.7331047543382,304.00864677044143,-1317.5468335758922,-1423.509046098827,-1206.287076601419,-258.09420634314597,284.3902357476953,170.47470391854262,-20.992706500305374,-30.97334314149571,-.7340838195400219,2.876061103846032,-.9645257644832244,-.3378053034644997,.05052578418661497,.037431091543099905,-.0017411003602284265,-.009466591623426206,-.0007546810547129563,.0012390824544828156,.0015406044848658253,-.004234002187647549,-.009952738183956748,-.0178322802741179,-.0021885919874408454,-.18486506545171935,-1.5473028239900652,-.467331105631569,7.015947297517321,-4.129395186655558,-52.177815979563,-14.225382292199997,266.2443485847607,299.68761898427294,-502.7572234674145,-600.469699914582,-533.7202805364983,-84.35869563264292,149.66956177052822,98.02123918031671,5.946112129786316,-11.84091428379497,-2.356375469113162,.20453312434178955,-.31158766591945325,-.14520584302328118,-.01406756515928424,.014308802406409332,.0017127836707298723,-.004578497180531428,-.0004316686427205439,.0006203521922361554,.0009882109394230678,.00037352179846464215,-.0031201129359879932,.002805346855791697,.01155415730259296,.043098557260407636,-.5010045196848754,-.34405016878893097,4.609198482319736,-1.1472068176591008,-29.145899633206373,-2.605215160270938,142.77222209569624,179.1048285252311,-159.1039510457467,-164.80060347644744,-151.5262236364136,-12.964795600796743,78.70700527851547,49.61110259446742,2.9148898834797565,-6.698255751214301,-1.110892979527785,.533172003431064,-.06095267232150821,-.13796026336886294,-.040312063728343,.009152929268289546,.0006955121775491756,-.0004921601228612518,.00019632055084333887,.00016453496496604428,.00035411166615570894,.00029458111873911975,-.003922478174300769,-.0012902932474049059,.02273868308613074,.002964273331489508,-.040660255117105054,-.1581093035213153,.5082091496795981,-1.1517329733377961,-10.955670081779706,6.668499846942682,73.50926581750615,94.8545074898556,-30.375445723654334,-41.97651812287158,-38.3308317930417,6.6541528790739966,26.77554997576392,13.67501905826837,-.7725568354320362,-2.6427995487036586,-.26778321549867995,.3826392091266334,.06647668718575507,-.06049932513192856,-.01386060501809406,.004470540332767673,.00045553699537380387,-6683290898779943e-20,57815338715827767e-21,24201934805748865e-21,241167282829134e-19,-7790866935544309e-20,-.0020106249903568347,-.0030945645282710967,.011724362942541916,-.007318806569286237,-.13872845280170487,-.0525083726541943,.5746529904846611,-.3867960447452294,-4.853656372771019,-1.1675628703507077,21.601631857858344,37.913461849891526,8.24597762489062,-17.728252948144338,-17.91306653987751,-1.363521120172412,8.687402732758557,5.108690599549352,-.15956522315726163,-1.085338040852596,-.17672593964480066,.18144159918607325,.051467156562084934,-.02059634453149716,-.004731774665412903,.002516972317792379,.0003164356633861367,-.00017373359946045594,-7199917835031686e-20,3534845268166042e-21,37806930339121046e-21,2372924564820286e-20,-.000429721308232924,-.0011045036274546954,.0022387979975912117,-.00419544047957511,-.054281237122749564,.007982156967778375,.3612319198822241,.07823086352208347,-1.8108271356936088,-1.1161504624718657,6.26448034380691,11.381535938317967,.21980447663235644,-5.9387280202325705,-6.135787759211294,-.7235670361053693,2.8717612965534967,1.827268914106814,.03890182971715875,-.3058552550709899,-.0589919411079518,.049323041374202826,.007749491998403548,-.0026797748220028393,2606326701289029e-20,.0006615930466323916,772784949021142e-19,-3110060391079221e-20,-15561043109534526e-21,11911742325626112e-21,20491322447673862e-21,-14767672160855649e-21,7237527506491667e-20,.0002827801083782971,.0018655623121081823,.0007966565408703923,-.014230202242318532,.015605588027909496,.15269277354560382,.04241034362055825,-.5991836734745446,-.4227328181751537,2.2232923752479885,4.029734867596904,-.01297332387246361,-1.889050451466077,-1.7044228721383259,-.014407089546523855,.8147532827024284,.49486328945653796,.05137864550237867,-.07801919187423113,-.019791976482152574,.011942087677832957,.003771088162007893,-.0019373229659441914,-.0002886705798141979,.000173087047265503,392654257327213e-19,5.376138629066281e-7,-16483764627679784e-22,19354497917760563e-22,-1043216287920153e-21,1251541032126094e-21,-2039562589130497e-20,23143507174682374e-21,.0008565768791742647,.001542508933533323,-.003871347088090998,-.00452265522317206,.02648141665598214,.002481804228406049,-.156436707006408,-.01463777107064738,.7413395210802084,1.1863896819067066,-.06073539777241771,-.5542372017749815,-.4131843386810684,.012013582173996683,.22946537156729221,.14022496275890783,.010987988714373856,-.01679009744687791,-.002766362385049895,.001553491391729881,.0005498581824953059,-.00042583544807556255,-.00029614878449876606,13565162632662745e-21,47965965686279184e-22,-14046487964451716e-22,-17593082382469076e-22,-2320036873447806e-21,2.4848934678754374e-7,-14522884424931378e-22,-5208267173112263e-21,23151589195966712e-22,.00016541664707348802,3652912526796185e-20,-.0012890410598031484,-.0010500227857359876,.003691038045758511,-.0025549445466396393,-.038104522129866786,.016868811542239164,.2214789316299516,.2697221656216033,-.11164745685412412,-.1053213699265967,-.06516979219178952,.05096764271682823,.08220309725960867,.03797377653202822,.002270145289904118,-.0034852771985896215,-.0005179701401778565,.0006599947781042485,914499593950683e-19,-9120439102171607e-20,-15180477673862282e-21,-14304323510152094e-21,-4.766867538769436e-7,-3.3807620398649656e-7,-3.2827005154992035e-7,-6.005938340717767e-7,4.743645802817471e-7,7.883595062921859e-7,-25363312932279684e-22,34933053894102948e-22,4918354682850915e-20,9936763623213565e-20,-.00011095747475971185,-.0003373538870719122,-.00017205199767281925,-.0028150966049269007,-.006626377356299838,.01687499335440554,.08139280187407189,.10016944284496203,-.003989874097288895,-.056558682919194136,-.015674616081580436,.04742024835295937,.0489841835364029,.018095648558125472,.0001906158589192804,-.0005586581685228259,.0002838510302248157,38670538186828884e-21,-16713711240799624e-21,3538878170180732e-20,18038642046719724e-21,-2.7952818635613013e-7,-2465812767314031e-21,-1.5227319963665806e-7,-2.3332675048126655e-7,-1.3019579049092348e-7,-2.3332675083373355e-7,-1.5227319920541638e-7,-24658127673110402e-22,-2.7952818599492315e-7,18038642046284464e-21,3538878170245518e-20,-16713711239992412e-21,38670538186828884e-21,.0002838510302257955,-.0005586581685237537,.00019061585891278605,.01809564855812688,.04898418353640722,.0474202483529667,-.01567461608157503,-.10532136992661453,-.00398987409727738,.10016944284504853,.08139280187407594,.01687499335439334,-.006626377356290186,-.002815096604921771,-.00017205199767197964,-.00033735388707121654,-.00011095747476002673,9936763623079115e-20,491835468298072e-19,34933053890940453e-22,-25363312945761086e-22,7.883595061453216e-7,4.743645814304976e-7,-6.005938340711767e-7,-3.28270052094808e-7,-3.380762038316387e-7,-4.7668675369876225e-7,-14304323509881206e-21,-15180477673786216e-21,-912043910199929e-19,9144995939603915e-20,.000659994778106001,-.0005179701401766683,-.0034852771985941946,.0022701452899007964,.037973776532033036,.08220309725958914,.05096764271678241,-.06516979219178086,-.5542372017748879,-.11164745685411237,.26972216562160034,.22147893162997134,.01686881154224325,-.03810452212986556,-.0025549445466363117,.0036910380457617423,-.0010500227857337837,-.001289041059802577,3652912526732795e-20,.0001654166470744811,23151589193372615e-22,-5208267173934304e-21,-1452288442811783e-21,2.4848934734967557e-7,-2320036873448569e-21,-17593082396192173e-22,-14046487964490078e-22,4796596568910436e-21,13565162632914686e-21,-.0002961487844982795,-.00042583544807430477,.0005498581824961642,.0015534913917295296,-.002766362385049678,-.016790097446884332,.010987988714361836,.14022496275891236,.22946537156726918,.012013582173935911,-.4131843386810784,-1.8890504514661226,-.060735397772418,1.1863896819067115,.741339521080185,-.0146377710706385,-.1564367070064016,.0024818042284152,.02648141665598648,-.004522655223172011,-.0038713470880910664,.001542508933532456,.0008565768791748787,2314350717464594e-20,-20395625891635653e-21,12515410319035661e-22,-10432162880357027e-22,19354497917755154e-22,-1648376462389003e-21,5.376138627717133e-7,39265425733411684e-21,.00017308704726561608,-.00028867057981368457,-.0019373229659434092,.003771088162008273,.011942087677832796,-.019791976482151457,-.0780191918742265,.05137864550238155,.4948632894565238,.8147532827023561,-.014407089546580973,-1.7044228721383166,-5.938728020232454,-.012973323872509449,4.029734867596863,2.2232923752479965,-.42273281817513425,-.5991836734745476,.04241034362056052,.1526927735456053,.015605588027911042,-.014230202242318617,.0007966565408696177,.0018655623121089473,.000282780108378194,7237527506430049e-20,-14767672161149705e-21,2049132244733469e-20,11911742325624598e-21,-15561043110042614e-21,-3110060391078771e-20,7727849490171168e-20,.0006615930466324551,26063267012872924e-21,-.002679774822001514,.007749491998403798,.0493230413742033,-.058991941107945506,-.3058552550709792,.03890182971716388,1.827268914106806,2.8717612965534687,-.7235670361054382,-6.135787759211214,-17.728252948144313,.21980447663230326,11.381535938317855,6.264480343806875,-1.1161504624718652,-1.810827135693615,.07823086352208816,.3612319198822263,.007982156967779472,-.054281237122748544,-.004195440479575726,.00223879799759173,-.0011045036274548153,-.0004297213082331914,2372924564825233e-20,378069303389688e-19,353484526816315e-20,-7199917835088831e-20,-.00017373359946041533,.0003164356633857611,.0025169723177924353,-.004731774665412416,-.020596344531496415,.05146715656208672,.18144159918607133,-.17672593964479372,-1.0853380408525777,-.1595652231572473,5.108690599549304,8.687402732758427,-1.3635211201724846,-17.913066539877416,-41.9765181228714,8.245977624890596,37.9134618498915,21.601631857858315,-1.1675628703506762,-4.853656372771017,-.38679604474523593,.5746529904846626,-.0525083726541926,-.13872845280170543,-.007318806569288617,.011724362942542425,-.0030945645282711917,-.002010624990356365,-7790866935533109e-20,2411672828271513e-20,2420193480574654e-20,5781533871613657e-20,-6683290898769336e-20,.0004555369953736686,.004470540332767965,-.013860605018093377,-.060499325131926705,.06647668718575682,.3826392091266317,-.2677832154986751,-2.642799548703653,-.7725568354320241,13.67501905826833,26.775549975763717,6.654152879073815,-38.33083179304154,-164.80060347644644,-30.37544572365428,94.85450748985559,73.50926581750625,6.66849984694275,-10.955670081779644,-1.15173297333779,.5082091496795998,-.1581093035213164,-.040660255117104735,.0029642733314879993,.0227386830861314,-.0012902932474053552,-.003922478174301361,.0002945811187388569,.0003541116661554798,.00016453496496604298,.0001963205508430481,-.0004921601228615968,.000695512177549431,.009152929268289325,-.040312063728344255,-.13796026336886155,-.060952672321507556,.533172003431061,-1.1108929795277824,-6.698255751214283,2.914889883479767,49.61110259446726,78.70700527851518,-12.964795600796847,-151.5262236364129,-600.469699914582,-159.10395104574698,179.1048285252311,142.7722220956962,-2.6052151602709213,-29.145899633206394,-1.1472068176590924,4.609198482319731,-.34405016878893097,-.5010045196848737,.04309855726040865,.011554157302593657,.0028053468557916613,-.003120112935988917,.0003735217984652871,.000988210939423411,.0006203521922361554,-.00043166864272108633,-.004578497180532551,.001712783670731121,.014308802406410212,-.014067565159284841,-.1452058430232785,-.31158766591945286,.20453312434178955,-2.356375469113155,-11.840914283794984,5.9461121297862585,98.02123918031668,149.66956177052836,-84.35869563264293,-533.7202805364981,-1423.509046098827,-502.75722346741475,299.68761898427243,266.24434858476053,-14.225382292200068,-52.17781597956295,-4.129395186655552,7.0159472975173225,-.46733110563156605,-1.5473028239900675,-.18486506545171727,-.002188591987442856,-.01783228027411886,-.009952738183958814,-.004234002187645347,.0015406044848677103,.001239082454482812,-.0007546810547131915,-.00946659162342623,-.0017411003602265445,.03743109154310113,.05052578418661893,-.3378053034644978,-.9645257644832096,2.8760611038460344,-.7340838195399966,-30.97334314149568,-20.992706500305406,170.47470391854245,284.39023574769476,-258.0942063431461,-1206.2870766014166,-2689.731189198718,-1317.5468335758917,304.008646770441,486.73310475433766,48.38111412245636,-40.990915592068674,9.636927738004438,1.5559427050062113,-6.180412513391741,-2.4508298603470964,-.05307016660588521,.16501061208697854,-.031798236031439234,-.024640414526075623,-.012627706673397836,.001399772384542092,.0024301018087218504,39927404721417186e-21,-.004201888894603463,.013157424181215942,.0073776692393865565,-.17080663964207793,-1.1198886962258996,-1.2558586165362777,4.808389091497927,1.7233725901997718,-45.1280509929831,-54.91402385301027,253.24935366729582,471.8258692686622,-533.7087971643556,-2302.561977465081,-7525.512448747628,-3861.333135941492,302.5978466997821,872.0190203286596,87.48028602503858,-13.481975167534443,43.66331695464579,20.309232259116435,-5.2990493438664386,-3.7567756530835754,.4720008156080474,.3141953300986279,-.14585644547184853,-.06602117239193928,-.0060776628020447684,.00477839122453864,.002582055716729052,.0008494945524570308,-.006885388771068876,-.0016279289016736856,.03542636355589284,.11899325802032523,-2.0029903992471114,-5.742252846851455,-.5077972295941396,11.011155797013195,-31.327724554225593,-8.722049146589868,489.03634446603934,766.7977220394388,-1404.695681801156,-5804.13813668577,-11751.949054213763,-5284.485150872927,2004.0776030608997,2108.66416327897,15.711518936085099,-155.76938280407595,26.780389598343376,16.71970630491103,5.313800098890085,-2.0174170653233965,-.1148950502457917,-.083665866496762,-.3583880566306771,-.13141543694038144,-.010351412440954411,.00882576812786593,.003988228381616253,-.0003373264014390519,-.03230658830728782,-.07807676151884095,.20366584836429438,.515537725029719,-2.765210486131051,-6.395060999576777,3.3880871060788507,26.908851107336602,3.5981209875695015,-59.52343031546918,675.9543008046753,1957.0910297219166,-1597.3125841788988,-9055.772789928587,-13609.162528276773,-4902.846970969293,4992.370575020496,3370.136543827617,-188.33038343684228,-449.6815992778706,23.93852180867731,5.474863645049389,-9.846951825287803,-11.107804183612158,-.258763139476817,.45588994614236283,-.12611798259867754,-.1468787938200297,-.03534138952117152,.002820237576687255,.009503605024209053,.002839677815167327,-.03454657200350549,-.16497562627542883,.039542877145184945,-.15910329528412964,-.2257414648283198,-.941301221698037,12.926010493557788,10.792253245683524,-41.579492344426235,-371.5319693068337,786.4046140955402,4397.1447406314655,2497.0113342386503,-9138.495529637588,-30710.869495929113,-17039.959036708926,4390.115310530879,3807.5774006807205,-403.54468101232675,-787.5686768088284,12.126059162975466,2.1424019920278234,-27.81649204924017,-15.856083499246239,-4.480480361299612,.7466890006801008,.11739550901211765,-.15988488342208015,-.03345810453533239,.0037362591288712223,.010770434199071798,.0028928780958374094,-.015513947258866389,-.19362286330377187,-.2869445164350843,.21253485530639998,-1.2097145653165073,-9.534868349699844,-.0276447713840981,41.321279695296035,-108.77167233308927,-785.9843803018143,848.3286519289969,5360.918420669898,1300.6579518513656,-20630.86889357334,-7474.640597759228,-6145.370350036238,-1762.2326743166138,7785.429255085764,624.5385795569586,-681.1328664362256,-60.9681103036699,-38.12692282740297,-30.44726291362034,-10.93402591728205,-.9217464577408491,-.7307868181546915,-.3918440003206731,-.09067358339296347,-.025331085027316205,.017310354876322938,.008718442830944044,-.00460723739400158,-.061043080293425964,-.14589600917437914,.17906893603684051,1.5854066897944772,-7.497586109644648,-15.430842802070792,-14.977979358030328,-4.011779425882951,-153.66104783827134,-922.6533040381063,173.9710019935976,5029.218127936876,-2236.101616672778,-8567.904378081994],imag:[0,-565.8354014213912,2034.1707150791078,-2899.4713440958676,-705.2639507965342,-264.15772704109196,-68.25893457091972,21.864239089276673,-9.260084738727535,-.7720349614465771,.4609422748414816,.05043296371389182,.4817041633893655,.0691334367264865,-.053750756537428696,.007280372465065588,0,-.007280372465033566,.05375075653743176,-.06913343672647353,-.4817041633893806,-.05043296371382806,-.4609422748415279,.7720349614465933,9.260084738727535,-21.864239089276733,68.25893457091992,264.1577270410921,705.263950796534,2899.471344095866,-2034.1707150791096,565.8354014213901,-27456.96984600504,15801.95774991386,6659.285219513658,-5625.222440567115,-315.00701580725445,272.57265196057085,-226.29890693046426,-11.162014580405042,22.51960143730463,12.7778423361071,-.0008055122642221316,-.4061625783688211,.09097795760848884,.020544905947865743,-.005085220787426488,.005762481528077454,-.005101162806400798,.008737332888475351,-.02409739325345404,.0640899096500634,-.12938270466632,.5308817792558131,-.6296735496972713,-5.93014614292113,-10.810291764213344,-3.741612010002125,-182.38596939283659,-362.2818695046165,-992.8292924987254,-4862.668604102225,4699.203180556507,18939.315780035107,10706.514246895442,-4202.506406116029,-8815.516952124164,1263.9440399653656,1779.1449685952537,162.8570796381694,-206.3024685851984,13.222359870031848,21.464492537709937,20.567779042237813,.656008651556013,-.18805381897022255,-.36223791541012046,.1254341335131833,.020744772339125268,.00182748958184843,-.00429928762973864,-.0012201610716230688,-.017092494175410845,-.07696410325057065,.09837677643757826,.4173977832999109,-.7641941980280222,1.7461999698867376,9.858515559681356,24.776358129244393,-211.6323955131393,-238.91976950528434,1185.1238932642693,1296.4366520857086,-4946.028256286779,-5281.5723471297015,-13391.901368395223,-11194.545427930107,-3925.757791332957,887.4602336152653,945.2076614243302,84.87784143442383,-42.93226378569121,-4.96159981214052,-2.2373513523401476,3.2722596307272758,-.7253597270362521,-.26143602710083624,.1722121621819326,.1350741618808597,.00023543387332632535,-.004345917754103765,.0008505542411092727,-.0037937176827999176,-.008137883729905931,-.0756770365251313,-.15032468438850372,-.38722147995532397,.029603642148641713,7.4921225563560006,16.360105748561345,29.902810744114234,-93.46014625711202,-275.9622118519256,922.9971313338667,2711.515323984423,-1933.4800470053665,-10929.798398133844,684.9795916506339,602.5432794468298,-1010.3237650874754,-821.2649775260339,354.9129530786252,267.1270675345742,-50.77043151029089,-60.73925153098176,-3.000434366652563,2.078290590472712,-2.279554023627556,-.7016995460063911,.15105372261757208,.07861078903623217,.022330776935849336,.0012282676678784887,-.0006002530357652831,-.0034390891352469423,.011529870687322991,.014029711179492978,.1252130338315626,-.5540539099353221,-.5410772473174091,.8766735178549457,3.6828009300200657,-7.414126758856101,-13.004195929909718,-24.795065499663313,420.2705463495199,459.95573868102485,-942.1675549819201,-1112.054015955898,2348.3469931726836,1883.3636695028392,-240.70143186447856,-105.71673535442261,372.7925935337724,52.9206724532619,-92.06804037582678,-26.276835867611968,6.705113931418523,3.245275744583783,-.600452759040842,-.5038274358203952,-.06720292211650014,.02498758830601471,.02345280256265949,.003606989988511503,-.0019176843365481997,-.0026716531574556067,-.0020365413730906823,-.01108346786223183,.11877640918683252,.22402554985838732,-.9991824559003271,-3.473127171176343,.48835520550537315,-13.858896676215748,-73.25483981341625,-21.319429226850428,379.31228865246607,351.8198573628928,-537.578095249213,401.891624020517,608.0618470520731,404.4891679157129,-26.0947672494631,-28.936629621288695,88.25550333280712,24.72803539410956,-22.866056256077933,-13.157904592767515,-.15967604903152702,2.526299018978182,.12352888715752443,-.2342279584856657,-.030590557055647175,.016424937283601903,.005606089848676537,-.00045117160770213557,-.0008507168831422649,-.00113536285141135,.002369386795852434,-.0020514022508182662,.04741065885509241,-.047246191697244096,-.8089548207007815,-2.137185145427012,2.4873407504647034,5.798373379205432,-40.953249308721645,-95.73730939784454,76.82215362963292,273.3130006291081,25.450658270222483,108.35753184636786,-342.276211057315,-348.25890814832445,-304.47603827676795,-96.6290558039785,63.023130997866865,57.409949251798395,2.568042168489272,-13.095155674154295,-3.268100808309773,.8828699354509555,.134723326339215,-.09852956449722618,-.013721933165641624,.0016719543218752051,-.0008157469775326423,-.0001201660451309225,2100818845429297e-21,-.0006043136524699474,-.0008490167376128788,.013320171975788974,.024623507369733132,-.04178264068019722,-.6070074832910723,-.4301296545392609,2.2891908586667724,.4863224895474325,-15.79227042219643,-28.193965034765785,48.02961564424754,111.09879990264463,-87.49716421234633,-334.6737117352032,-142.68730890272883,-91.05357948244952,-99.78740989749116,-55.00129457882243,29.906016170654414,37.53507692009013,4.523477878507358,-7.192370807520064,-1.3689331500831903,.3520235021859304,-.0362018905598291,-.061463792395340174,-.022721689012942182,.00827378759723945,.0032130032530252534,.00039450994426574093,-2803177864854437e-20,-.0004140682790494289,-.0027075490516005737,-4603549423391104e-20,.006668143259473342,.004795152883535397,-.05690176651734323,-.24922608889607248,.498049017017482,-2.4309674287383847,-12.16171561638105,.9795136576963396,48.129088343602525,56.48606910456777,-41.17163928968426,-127.72312720337817,-5.428274623206183,-9.783586070955227,-33.97561975527628,-24.806312587182678,2.407224987485921,11.539786987684712,2.1158028157224305,-2.185828622008404,-.5516545987111455,.18427966087195025,.03632569790685596,-.04515076776742678,-.01055017661375372,.006085519605880044,.001728141461042112,7249767443549539e-20,-.00021205409372000895,-20602816877647228e-21,-.0011298747328672136,-.002880914757524112,-.0012342607279736744,-.011825603754497111,-.08706926828669412,-.14265264682578704,.15323327509603407,-.8568774554258768,-6.0248432237602145,-2.077910419819851,20.474406237761055,25.037428100181106,-14.989381828055835,-36.497593867080774,-17.72933810059155,-17.576621089243332,-19.487467662417078,-10.955871914675358,2.3165455312690852,5.4119853383600915,.5462128894496687,-1.3157595111644833,-.34743645177227866,.1287210896998103,.0474121185342446,-.0077851049698980206,-.004201560949808625,.0010934558980435574,.00023257626702487,-9280810988100937e-20,-8715532316390815e-20,-39084915731858744e-21,-.00010250720925033233,-.0006790166870309861,.001446427708002653,-.004863634286116947,-.06782394906790153,-.057130716853855026,.21557912264683496,.06519665350656248,-1.6533046454778435,-1.8832932452039048,3.726484617110755,6.401912631132283,-3.974423502798775,-16.160449140843355,-8.482222839113716,-8.73150691053847,-6.165664324454357,-2.359870465095735,1.9985565184181031,2.3405484242614913,.2938284538614533,-.5086579265157565,-.17305354955167165,.04696002934502403,.015263156905378368,-.0036170611596276912,-.0013726058920436061,2237332432783488e-20,9385945789129954e-20,13994387363258527e-21,-15306190418175455e-21,-2217956357257008e-21,1915436069625878e-20,16056362425269958e-21,.0016017335432058808,.0021630491325728405,-.015795334924840046,-.011660119791667443,.14639963344722604,.10651220377116319,-.8829128742008107,-1.256837282007682,1.6004592076355926,4.239171334755254,2.2028113471748907,-3.1469764634818462,-2.242974904561942,-2.5538673583000224,-2.2927664969925643,-.7151152630622848,.7014222583011671,.8725716306862452,.1984697655771137,-.1524924527841292,-.07086429699622016,.00993581156350367,.004706615094245603,-.0026523157902845263,-.0008543995841780177,.00013944973801692797,727047910391884e-19,12601241693252589e-21,-1580988340660887e-20,-10011729527080636e-21,-794785428476636e-19,-.0002252726513827109,.0004530770272741257,.0005010581651973888,-.004694536759989586,-.009391282753869927,.04858627370837515,.03055395863749701,-.2583878869424789,-.400933262759176,.49595628709938333,1.6851565365398353,1.1309597417418693,-1.056522952990393,-.8024784063291578,-1.026927016182452,-.886519149545294,-.43650779681426854,.11316541147379869,.23035854544536424,.05992046783303331,-.0361904386041879,-.01725390654373966,.0023509305274026565,.001478217289217426,-.0007267064872719463,-.0003680247758271001,7155227772332322e-20,33018347577537154e-21,-6270504054453194e-21,-509618903223624e-20,-8.259748136306607e-7,-24936495372693928e-21,-.00010760628949477799,-7702215479715575e-20,83265078915305e-18,-.0013990135309411168,-.0028172526227442643,.010701408851355284,.007245153039137615,-.08615003784145343,-.14460665466238934,.049708417947223346,.3952147833333318,.28744423285388176,-.29861910565037264,-.3386926979654547,-.4186567390078249,-.35458750065998923,-.15351062390629316,.023283787620964443,.07031599079037064,.02182522206883144,-.009436096855355645,-.005228648752625107,.0016419352706606338,.0006222239315880406,-.00023654954587354915,-9511658499487789e-20,983161381848219e-20,8561654453709157e-21,-18490511258670774e-22,-13806960215566987e-22,-7.841816057982982e-7,6.118778342888296e-7,-14184243450717458e-21,-16817152282181301e-22,7731541363642721e-20,-.0004977635173173894,-.0011677770881636529,.004301234445225634,.005393449938510381,-.019935861209744145,-.053344442429226806,-.0040707298903069475,.10515901839488417,.12441049519027374,-.06476311950418363,-.033271590846292554,-.10779677164705558,-.11539582523941379,-.051505283097805894,.006924698345039851,.021708652485324127,.006934762893192616,-.0022906766529511625,-.0016964640398162575,.00025142958382895784,.00031770653382385736,11032501437955532e-21,-874687797444703e-20,5594506642359602e-21,1797234545539756e-21,4.56163382035201e-7,9.720139452426724e-8,4.722493497117076e-7,-33798970421174713e-22,-284932815879587e-20,15043823885218312e-21,5812580622728298e-20,-.0002431138297897298,-.0003412141701868545,.0017972456094799462,.002919931802959911,-.006209611665928852,-.016969044244524348,-.003283584083881931,.03880789965984274,.06742646616636051,.050826644444124935,0,-.049486105286858977,-.05510226949105056,-.024933286677064983,.002713101554763883,.009423292948584742,.0031928535384108483,-.0010192088413809152,-.0006568747226787571,9940639096759055e-20,9211711722109293e-20,4.28356531581886e-7,-11077354271652886e-21,4698815982133191e-21,18643898350265165e-22,-1.3325436344526307e-7,0,1.332543614852719e-7,-18643898357013856e-22,-4698815982340655e-21,11077354271338259e-21,-4.2835653029578673e-7,-9211711722096857e-20,-994063909675417e-19,.0006568747226787571,.0010192088413828024,-.003192853538410999,-.009423292948585288,-.0027131015547645593,.024933286677071297,.05510226949105709,.049486105286870655,.033271590846436425,-.050826644444130153,-.06742646616632078,-.03880789965978733,.003283584083892587,.01696904424452016,.006209611665934435,-.002919931802955841,-.0017972456094788201,.00034121417018834725,.00024311382979051588,-581258062258525e-19,-15043823885472467e-21,28493281592184042e-22,33798970414074387e-22,-4.7224935044335926e-7,-9.720139452384815e-8,-4.5616338348029835e-7,-17972345459045348e-22,-559450664216697e-20,8746877974146394e-21,-11032501437633476e-21,-.0003177065338246917,-.00025142958382980715,.0016964640398156006,.002290676652952936,-.006934762893187993,-.021708652485317177,-.006924698345033181,.051505283097836994,.11539582523943163,.10779677164702299,.3386926979653444,.06476311950416691,-.12441049519022664,-.10515901839483223,.004070729890304727,.0533444424292264,.019935861209740766,-.005393449938512387,-.004301234445226706,.0011677770881626617,.0004977635173178583,-7731541363532951e-20,16817152281107408e-22,14184243450816806e-21,-6.118778345999597e-7,7.841816041489295e-7,13806960215563787e-22,1849051125093638e-21,-856165445414997e-20,-9831613817593162e-21,9511658499474217e-20,.000236549545873429,-.0006222239315891763,-.0016419352706608273,.005228648752625495,.009436096855359751,-.021825222068826373,-.07031599079036797,-.02328378762095141,.15351062390632836,.35458750065996514,.41865673900782463,.8024784063293012,.298619105650403,-.28744423285381543,-.3952147833332439,-.049708417947207637,.14460665466238265,.08615003784144645,-.007245153039139054,-.010701408851356092,.0028172526227436055,.0013990135309424952,-832650789144155e-19,770221547968841e-19,.00010760628949436256,2493649537217256e-20,8.259748116047541e-7,5096189032236405e-21,6270504053587473e-21,-3301834757784326e-20,-7155227772273876e-20,.0003680247758268492,.0007267064872720896,-.0014782172892186336,-.0023509305274016343,.01725390654374022,.0361904386041903,-.05992046783302622,-.2303585454453514,-.11316541147376862,.436507796814322,.8865191495453523,1.026927016182488,2.2429749045618363,1.0565229529903326,-1.1309597417418378,-1.6851565365398167,-.49595628709941025,.40093326275916286,.25838788694247145,-.030553958637498463,-.04858627370837549,.009391282753869277,.004694536759990304,-.0005010581651952867,-.000453077027274237,.00022527265138177463,7947854284708915e-20,10011729526400015e-21,15809883406608184e-21,-12601241693104561e-21,-7270479103915493e-20,-.00013944973801701606,.0008543995841777928,.002652315790285786,-.004706615094246455,-.009935811563503904,.07086429699622142,.15249245278412987,-.1984697655771132,-.8725716306862386,-.7014222583011349,.7151152630623318,2.292766496992581,2.5538673583000056,8.48222283911386,3.1469764634817636,-2.202811347174842,-4.239171334755157,-1.6004592076355943,1.256837282007673,.8829128742008066,-.10651220377116098,-.14639963344722345,.011660119791666538,.01579533492484039,-.0021630491325718448,-.0016017335432059105,-16056362425267762e-21,-19154360696782612e-21,22179563562188507e-22,1530619041817482e-20,-1399438736372572e-20,-938594578917978e-19,-22373324326887067e-21,.001372605892043584,.0036170611596280633,-.015263156905379492,-.04696002934502243,.17305354955167276,.5086579265157509,-.29382845386145795,-2.3405484242614674,-1.9985565184180694,2.359870465095777,6.165664324454299,8.731506910538362,17.729338100591146,16.16044914084344,3.9744235027988806,-6.401912631132234,-3.7264846171107413,1.8832932452038942,1.653304645477848,-.06519665350656056,-.21557912264683374,.05713071685385284,.06782394906790187,.004863634286117494,-.0014464277080027464,.0006790166870309499,.00010250720924968801,39084915731564376e-21,8715532316390898e-20,928081098803579e-19,-.0002325762670250908,-.0010934558980430407,.004201560949808545,.007785104969897888,-.04741211853424612,-.1287210896998092,.347436451772281,1.3157595111644818,-.546212889449674,-5.41198533836007,-2.3165455312690484,10.955871914675381,19.487467662417213,17.57662108924329,5.428274623206613,36.49759386708069,14.9893818280559,-25.037428100180914,-20.474406237761002,2.0779104198198417,6.024843223760218,.856877455425879,-.15323327509603168,.1426526468257883,.08706926828669556,.011825603754498296,.00123426072797323,.0028809147575238926,.0011298747328662582,20602816877460582e-21,.0002120540937200084,-724976744366971e-19,-.0017281414610421523,-.006085519605879876,.010550176613753189,.04515076776742772,-.03632569790685638,-.1842796608719509,.5516545987111475,2.1858286220084038,-2.1158028157224313,-11.539786987684664,-2.4072249874858644,24.80631258718279,33.97561975527624,9.783586070955252,142.68730890272883,127.72312720337824,41.17163928968424,-56.48606910456776,-48.129088343602554,-.9795136576963499,12.161715616381057,2.430967428738399,-.498049017017482,.24922608889607162,.05690176651734568,-.004795152883534096,-.00666814325947404,4603549423341601e-20,.0027075490515988954,.000414068279048447,2803177864854437e-20,-.00039450994426571523,-.0032130032530263515,-.008273787597239988,.022721689012943438,.06146379239534364,.03620189055982916,-.3520235021859332,1.3689331500831903,7.192370807520073,-4.523477878507348,-37.53507692009012,-29.906016170654418,55.00129457882238,99.78740989749119,91.05357948244942,342.2762110573145,334.67371173520326,87.49716421234662,-111.0987999026444,-48.02961564424746,28.193965034765707,15.792270422196436,-.4863224895474051,-2.2891908586667706,.4301296545392576,.6070074832910698,.041782640680199906,-.02462350736973284,-.013320171975792017,.0008490167376123761,.0006043136524673308,-2100818845429868e-21,.0001201660451322299,.0008157469775285331,-.001671954321877379,.013721933165640972,.09852956449722827,-.13472332633921438,-.882869935450965,3.268100808309773,13.095155674154302,-2.568042168489291,-57.40994925179825,-63.02313099786681,96.62905580397846,304.47603827676824,348.25890814832377,-608.0618470520724,-108.3575318463683,-25.45065827022236,-273.3130006291078,-76.82215362963294,95.7373093978444,40.95324930872171,-5.7983733792054135,-2.4873407504647047,2.1371851454270088,.808954820700783,.04724619169724304,-.04741065885508847,.0020514022508175854,-.002369386795852814,.0011353628514107392,.0008507168831422651,.00045117160770050525,-.005606089848679676,-.016424937283604724,.030590557055645055,.23422795848566832,-.12352888715752926,-2.526299018978185,.15967604903152918,13.157904592767508,22.86605625607793,-24.72803539410957,-88.2555033328071,28.936629621288684,26.094767249463303,-404.4891679157133,-2348.346993172679,-401.8916240205173,537.5780952492123,-351.8198573628927,-379.3122886524662,21.319429226850364,73.25483981341633,13.858896676215757,-.4883552055053771,3.4731271711763214,.9991824559003392,-.22402554985838727,-.11877640918683258,.011083467862236249,.0020365413730902885,.002671653157447994,.001917684336548198,-.0036069899885160838,-.023452802562666058,-.024987588306021404,.06720292211650539,.5038274358204086,.6004527590408355,-3.2452757445837785,-6.705113931418524,26.276835867611975,92.0680403758268,-52.920672453261844,-372.79259353377256,105.71673535442247,240.70143186447768,-1883.363669502841,-684.9795916506332,1112.0540159558975,942.16755498192,-459.9557386810245,-420.2705463495199,24.795065499662957,13.004195929909772,7.41412675885617,-3.682800930020067,-.8766735178549556,.5410772473174038,.5540539099353147,-.1252130338315631,-.014029711179499669,-.011529870687323501,.0034390891352509903,.0006002530357652831,-.0012282676678759762,-.022330776935852007,-.07861078903623528,-.15105372261757474,.7016995460063893,2.2795540236275773,-2.0782905904726996,3.000434366652557,60.73925153098181,50.77043151029089,-267.12706753457417,-354.9129530786252,821.2649775260338,1010.3237650874759,-602.5432794468305,13391.901368395234,10929.798398133857,1933.4800470053663,-2711.5153239844217,-922.9971313338666,275.9622118519249,93.46014625711196,-29.902810744114028,-16.36010574856138,-7.492122556355961,-.02960364214863991,.38722147995532696,.1503246843885088,.07567703652510885,.00813788372990984,.0037937176827991482,-.0008505542411092683,.004345917754099326,-.00023543387332691185,-.13507416188085952,-.17221216218196025,.26143602710082897,.7253597270362697,-3.2722596307272944,2.2373513523401622,4.961599812140501,42.93226378569129,-84.87784143442366,-945.2076614243296,-887.4602336152668,3925.7577913329583,11194.545427930101,-10706.514246895442,5281.572347129701,4946.02825628678,-1296.4366520857075,-1185.1238932642696,238.9197695052832,211.6323955131397,-24.776358129244326,-9.85851555968138,-1.7461999698868065,.7641941980280155,-.41739778329989746,-.09837677643757771,.07696410325055975,.017092494175422378,.001220161071587169,.004299287629738649,-.0018274895818451932,-.020744772339150463,-.12543413351316696,.3622379154101165,.18805381897020862,-.6560086515560082,-20.567779042237863,-21.46449253770993,-13.222359870031557,206.3024685851983,-162.85707963816978,-1779.1449685952532,-1263.9440399653668,8815.516952124166,4202.50640611603,27456.96984600504,-18939.315780035096,-4699.203180556507,4862.6686041022285,992.8292924987259,362.2818695046175,182.38596939283644,3.741612010002524,10.810291764213327,5.930146142921261,.6296735496971917,-.5308817792557847,.12938270466632043,-.06408990965002163,.02409739325341807,-.008737332888441708,.005101162806400806,-.00576248152809363,.005085220787449562,-.020544905947870024,-.09097795760850277,.4061625783688185,.0008055122642690454,-12.777842336107227,-22.519601437304647,11.16201458040481,226.29890693046417,-272.5726519605721,315.0070158072536,5625.222440567115,-6659.285219513651,-15801.957749913861]}},nose_filter={real:[3.0408379415611857,.3782226136313794,1.1747173276627942,.877915728669575,.2742957852453699,-.26015038230887205,-.04589694540462394,.18194913988848616,-.19035992880648842,-.05006447220662765,-.016354960260506177,.07301390320491648,.15053197342937383,-.47378158951033317,-.33333577915227425,-.30434085338299055,.2637228440630788,-.3043408533829945,-.33333577915227836,-.4737815895103303,.15053197342937505,.07301390320491558,-.016354960260505706,-.05006447220662877,-.19035992880648842,.1819491398884854,-.04589694540462493,-.2601503823088735,.2742957852453695,.8779157286695746,1.1747173276627942,.3782226136313796,1.5638480130127614,-1.0502161590016221,-.28144140655806793,.660078762090635,.25575295594566605,-.11471557758718753,.22751157962613866,-.29100003355994186,.2924299486585318,.1495006131107875,-.02214037256893809,.034503572794411914,-.1741288940590147,.060297128338254534,-.49717312826403576,-.10585857030501357,.08278017743008333,-.11056584899062352,-.7249941619639279,-.1561286375130836,-.36586758725441215,-.19718551141955715,-.04343432877571885,-.060442748560529294,.1383233017601592,-.07171439916436274,.31725814504248484,.16801904131477274,.5867500433912975,1.515502516107282,.9923275265012264,-1.0129349058609656,-1.6725083187014358,-.6607722409175779,2.2217962254133496,.983904929170131,-.16319024909703178,.6727165127601918,.16380771710007475,.2198937373567962,-.12296413131763459,-.18224776807046256,-.011168077595514938,.10364961453623285,.1359801303077682,-.2633959372271572,.039396952561874886,-.3386669625362648,-.00431018414096014,.17740469505625342,-.10830858623812685,-.3318605121146624,.12060535717228799,.0847034747306358,-.08626242606474008,-.1297477439897661,-.28426475792188655,.21965961682575447,.249559991006423,.4680408859416745,-.46946217188769823,-.31724338121882617,1.7716903674840139,.5657788112446531,.7151259504708923,.4910867492003736,.9231011957591465,-1.093993495771964,.18102793706565934,.3548459552618665,.48676804973393767,-.09792392205621177,-7820006368423637e-20,-.016095705887683227,-.08426320972768339,.008033164669753148,-.04485316816646984,.006217070245597755,-.15890945005602863,.22815908460498888,.17110516400703918,-.29052216822588434,-.18224178792918044,-.018421573557969844,.032535239746583795,-.08121081614537759,-.02917591511509403,.09292986204084308,.16824405476099044,-.2467922762570458,.00030176170486908785,.023943010115746295,-.43281940369171445,-.5716683662381382,1.2482467538506352,.7438533137124667,.5478774521600256,.9289894130003817,.5447330180533513,-.4877077226718825,-.40370312470951597,.3909652762329985,.12644205243911047,.0424168022733412,.04921969358643031,-.07774818656606704,-.04361457599167721,-.00416350617181571,.07897222152752259,.05394497327097297,.11232623315704468,-.07044562563150354,-.07205720117764265,.12706805404252855,-.13757198545862262,-.316392239894439,-.02924048624466061,.10973045554309782,.04102655016489614,.01891084247324943,-.05692236942047649,.030805208457151782,-.1512000567754726,-.058122663069861934,-.30506910575481916,-.7903386881329538,.026308878650124864,1.7521122327973906,.6456622051479368,.40042515638418263,-.334612088484084,-.5536942957177082,-.030140868003777126,.27230784814155334,.008194429787378334,-.030645866021173498,.023928227792328404,.09070651048741973,-.021569631345745226,-.006412781536769337,-.026343653609827326,.00793656086939748,-.187914504113454,.14319521757460194,.17003550871316017,-.24661106106331201,-.21167593067635404,-.09820675094642621,-.04859275944736512,.002812925595011044,.04986893975541695,.03902323739410261,-.0036267311717218496,-.12930461632538415,-.06741132095183786,.01080120538703819,.07493129145102806,.0657071501308885,-.22930577035731903,-.3489467290456117,.37107135970432037,.49136473213042475,.10645611255411164,-.27741376367012294,-.015474080963115254,.13417678111594294,-.00046677178847574514,-.06415224549575138,.038292630722847554,.017696001575747813,.005215763190194701,-.023883294001795573,.0006051884889793161,-.08839509351423595,-.117577580272467,-.019555697374511325,.025650630137194243,-.043746931993730094,-.08846438922222799,-.07444223373636531,-.009910405282542814,.06487167324863496,.03524540038796406,-.006516309042701568,-.0652868815022504,.023130909787941502,-.028452880392855154,-.09863825695148282,-.23382813425811513,-.07793324996210348,.06957578883921661,.8663549110069351,.3366879287386472,.342535292159714,-.019122146869457048,-.0165213645474579,.09816142594631652,-.011130337821465129,-.09254353938682904,-.004697312064988421,-.008688517253163962,.04191586562399075,.004043623749362439,-.037907101781325205,-.03902357631677511,-.03769096399730089,-.11419210623041842,-.0767327261839726,.12573571356763677,.012633232837618465,-.09894200529309495,-.06188860116512567,-.009001290088071785,-.014247675993027883,.027023228844142398,-.005028277416555645,-.03166737161574289,-.033818612421867206,-.01148054478950835,.002410610826462259,.08440238506225944,.06982454502965495,.043930202648898894,.07887205982729704,.05505335977604347,.0133618922103162,.06845383453783666,.08170149012888928,-.02303497290340257,-.04240668227306069,.03514872971871225,-.037569795749083354,-.0041828274568459145,.012961699649937737,-.015475583648045266,-.027857672235467607,.011169867646763214,-.052725469767566695,-.007014873006769892,.053188940442296044,-.09528942369836853,.016377276604450954,-.015232023889946105,-.07768220186100935,-.04820769301430424,.014396940553395536,.021075876818278678,-.0024069559974744716,-.01675825964935249,.03186587970698775,.03282462316832693,-.07418273257242147,-.0800368653632972,.055652716802045685,.11130862970905192,.07295297283810102,.03509839696826377,.07024247972129444,.040747896169172335,-.022459274904977577,.014257984954846613,.019887732012022184,-.04081100434571369,.00881916198202256,.012579825412037176,.0010521231241174983,.006430724322423028,-.0107697788586532,-.0653135355342319,-.06276957327196686,.11452944472315789,.040092306883550234,.12236977033818973,.1362440389652974,.027359429809611827,-.0259369720098807,-.02141908253190829,-.02797214703330133,.00803207985016095,.0013100558771969473,-.005256186606445598,-.009737528949062902,.028455863356249757,.05642570174166461,-.0014166564531825356,-.03252893302731624,-.01961911263034095,.06570068946378961,-.02757449361247655,-.03281004271094684,-.021337213333243964,.01959299008029563,-.0197597500925572,-.030135000999364853,.03169848862163001,.02352205471086472,-.021766544372719836,-.002982743443279076,.007837350887812254,-.0028057606437618767,-.03323255078204348,-.07083081897710564,.05908045566984465,.36951320092865036,.09141112866594404,.1640423341726465,.06259827020745422,.04498640351980994,-.08151089674102797,-.04234161800714717,-.019737461729971092,-.004897400116936683,.01654258945512711,.008801297726757945,-.013696041496545335,-.0020268100930256635,.015845305908809133,.01645861261947946,.0005947400127468152,-.07852906625699135,-.013402803779002156,-.003601329999506423,.03757359158202504,-.007663649465542595,-.0021144243161753088,.032140257903604356,.0203960516207237,-.013294834505552555,.0021732333351695376,.015223562704661827,-.01560949450401263,.01506060958955546,.09924124830572909,-.19173261262163863,.2450151004066432,.26383919410790774,.33963060937430933,.34586223870135113,.1799263961717959,.13137374163691276,-.03649385871696803,-.041981936023927684,-.06025893230575421,-.009907901040571007,-.01002457918175982,.016637976300589805,.03162910623031014,-.011441752446030828,-.010113005489671789,-.027490450999295705,-.018258671855796018,.06129626392127453,.10180457538537498,.0976474425888894,.0632464597546009,.0018146068702083835,-.012539173975430248,-.008345642545901014,.020763503842579332,.03599616230766787,-.01567557540926648,-.02966274712552258,.0213127701286804,.08274253615935892,-.10682054954404013,-.033729052458342255,-.12662108035586636,.18053751384272299,.7094059953008747,-.21337246968950196,.09763637724258438,.1534595963462679,-.1169011010733575,.030098075283007168,.03418607642912205,-.021402902917041923,.004634909602610389,.011776544425663813,-.008967393462662933,.025701507905379287,-.0293335209574718,.0051215906448292756,-9620791778747625e-20,-.027988212781709806,.09369529674769571,.10174972110658871,.1657472048824174,.09791737794265405,.007579036411405063,.031051039914505564,.0156926018464825,-.015197940538429407,.02615442788343286,.03817892786043429,.07391023019778703,.0062621769249755375,.14786394857966245,-.24133125024592791,.3194460948677117,.5071563706514025,.3628700351691248,1.3060302403517683,-.5146783421531846,-.23826829822593068,-.009346884510492325,.16015106243072727,.02805086056222977,-.0035899004350242064,-.005543580364317014,-.02673292092466164,-.010772744125100176,-.024390993371714485,.012627431507206405,-.008720378793527347,.017390054254405412,.12375300108425245,.24623032442851775,.3222060858193874,.14931322115435106,-.030460558403777184,.017160725214558258,-.009483975390035431,-.04093798312300821,.021461267056132466,.05260524273481167,.08258391915651302,.060994911510484674,.19212485777257118,.030490864773295545,.1759282405498893,.2988664581273196,-.3440942993173739,1.3210609586317499,.059297195869563314,.664508151802211,-.1883702247397409,.3431030805221454,.41335445680081984,.18880277280085617,-.0025387166530481263,-.027056960212979365,-.014992917126512385,-.06582507050815357,.005992440061786605,.01605849168664445,.09631821867793273,.11648035795043635,.08310567318064768,.3267135114890813,.21720864831216413,.29412476851730657,.14853499339159934,.01897098102580162,-.006319176952692685,-.01818046447321878,-.03325569084071112,.04208810691484625,.1159854409909094,.13859711550376397,-.01128947190338442,.08665386837365273,.5559656926196751,.3768055607681325,.8848889918243579,-1.1019114795534606,1.0072326177374842,-.25696609936231163,.2259560500510676,.20124367647634336,.25020565573121023,.15194580903531119,.054188690404279045,-.03158847298103453,-.07246900626544177,-.025752917138555535,-.0471489088024604,.07929355690286198,.16429646904639772,.19502382977708654,.21468548823411557,.26510515339808566,.4121092848683291,.2413785630078775,.03924506370665969,.01328784964664576,.0639384949592911,-.05680891882903846,-.03915972562302279,.028736615885883075,.07567485585281981,.10715382591497533,.2994107520295937,.24751816611443234,-.14971685838339424,.9272502035304818,-.5803073077758771,1.4965419400087898,-.5803073077758782,.9272502035304832,-.1497168583833956,.24751816611443228,.29941075202959394,.10715382591497527,.07567485585281959,.028736615885883075,-.039159725623022994,-.05680891882903847,.06393849495929133,.013287849646645755,.03924506370665942,.24137856300787733,.41210928486832976,.326713511489085,.21468548823411696,.1950238297770854,.1642964690463976,.07929355690286159,-.04714890880246026,-.025752917138555938,-.07246900626544235,-.03158847298103462,.0541886904042793,.15194580903531177,.25020565573121106,.2012436764763436,.2259560500510681,-.25696609936231096,1.007232617737484,-1.1019114795534584,.884888991824356,.3768055607681309,.555965692619678,.08665386837365335,-.011289471903383815,.13859711550376486,.11598544099090989,.042088106914846005,-.033255690840710936,-.018180464473218153,-.0063191769526928735,.018970981025801085,.1485349933915988,.2941247685173069,.21720864831216452,.24623032442851894,.08310567318064788,.11648035795043606,.09631821867793225,.01605849168664411,.00599244006178636,-.06582507050815366,-.014992917126512623,-.027056960212979545,-.002538716653047571,.18880277280085703,.41335445680082034,.3431030805221454,-.18837022473973905,.6645081518022098,.05929719586956184,1.3210609586317497,-.34409429931737384,.2988664581273206,.1759282405498891,.030490864773296485,.19212485777257224,.06099491151048541,.08258391915651307,.05260524273481172,.021461267056132546,-.04093798312300816,-.0094839753900352,.017160725214558203,-.030460558403777944,.14931322115435064,.3222060858193871,.09369529674769708,.1237530010842532,.017390054254405134,-.008720378793527876,.012627431507206037,-.024390993371714388,-.010772744125100247,-.026732920924662094,-.005543580364316986,-.0035899004350241582,.02805086056223034,.16015106243072863,-.009346884510491546,-.23826829822592965,-.514678342153184,1.3060302403517683,.3628700351691248,.5071563706514024,.3194460948677121,-.24133125024592691,.1478639485796626,.006262176924976706,.0739102301977875,.03817892786043468,.026154427883432977,-.015197940538429256,.015692601846482655,.03105103991450549,.007579036411404823,.09791737794265432,.16574720488241704,.10174972110658852,.10180457538537414,-.027988212781709362,-9620791778727375e-20,.0051215906448293215,-.02933352095747186,.025701507905379183,-.008967393462662796,.01177654442566399,.004634909602610413,-.021402902917041607,.03418607642912222,.030098075283007585,-.1169011010733573,.15345959634626896,.09763637724258231,-.21337246968950468,.7094059953008736,.18053751384272154,-.12662108035586525,-.033729052458342325,-.1068205495440398,.0827425361593592,.021312770128680637,-.02966274712552271,-.015675575409266458,.03599616230766798,.0207635038425793,-.008345642545901005,-.012539173975430275,.001814606870208027,.06324645975460065,.09764744258888952,-.013402803779000846,.06129626392127332,-.018258671855796015,-.02749045099929539,-.010113005489671634,-.01144175244603072,.03162910623031008,.016637976300589583,-.010024579181759814,-.009907901040570755,-.06025893230575406,-.041981936023927795,-.03649385871696789,.13137374163691345,.17992639617179582,.345862238701351,.3396306093743105,.2638391941079055,.24501510040664315,-.19173261262163757,.09924124830572889,.01506060958955588,-.015609494504012908,.015223562704661735,.002173233335169546,-.013294834505552418,.02039605162072387,.03214025790360414,-.002114424316175266,-.00766364946554255,.037573591582025015,-.0036013299995066783,-.027574493612477238,-.0785290662569907,.0005947400127465092,.016458612619479316,.015845305908809258,-.002026810093025809,-.013696041496545191,.008801297726758145,.016542589455127047,-.00489740011693653,-.019737461729970797,-.042341618007146614,-.08151089674102786,.044986403519810654,.06259827020745319,.16404233417264671,.09141112866594406,.36951320092864953,.05908045566984523,-.07083081897710557,-.033232550782043346,-.0028057606437617323,.007837350887812152,-.0029827434432791976,-.02176654437271973,.02352205471086483,.03169848862162995,-.030135000999364715,-.0197597500925572,.019592990080295483,-.021337213333244086,-.03281004271094604,.03509839696826556,.06570068946378826,-.019619112630341284,-.03252893302731594,-.001416656453182401,.056425701741664544,.028455863356249663,-.00973752894906295,-.005256186606445511,.00131005587719705,.008032079850161055,-.02797214703330162,-.021419082531907708,-.025936972009880058,.02735942980961241,.13624403896529816,.12236977033819048,.04009230688355046,.11452944472315811,-.062769573271967,-.065313535534232,-.010769778858653123,.006430724322423077,.0010521231241173155,.012579825412037126,.008819161982022697,-.040811004345713484,.019887732012021993,.014257984954846677,-.022459274904977573,.04074789616917183,.0702424797212939,.05505335977604347,.07295297283810104,.11130862970905199,.05565271680204555,-.08003686536329738,-.07418273257242172,.03282462316832692,.03186587970698777,-.01675825964935249,-.002406955997474462,.021075876818278654,.014396940553395566,-.048207693014304456,-.0776822018610092,-.015232023889946197,.01637727660445112,-.09528942369836853,.05318894044229575,-.007014873006770006,-.052725469767566646,.011169867646763318,-.027857672235467666,-.015475583648045285,.012961699649937817,-.0041828274568459145,-.03756979574908331,.03514872971871221,-.04240668227306084,-.023034972903402475,.08170149012888943,.06845383453783664,.013361892210316275,.33668792873864783,.07887205982729592,.043930202648898596,.06982454502965493,.08440238506225957,.0024106108264623457,-.011480544789508253,-.033818612421867275,-.03166737161574274,-.00502827741655568,.027023228844142416,-.014247675993027993,-.009001290088071238,-.0618886011651253,-.09894200529309476,.01263323283761883,.12573571356763666,-.07673272618397192,-.11419210623041808,-.037690963997301666,-.03902357631677525,-.03790710178132505,.004043623749362313,.04191586562399077,-.008688517253163995,-.004697312064988438,-.09254353938682865,-.011130337821465186,.09816142594631627,-.016521364547457937,-.01912214686945752,.3425352921597138,.3710713597043204,.8663549110069338,.06957578883921638,-.07793324996210346,-.23382813425811527,-.09863825695148333,-.02845288039285465,.02313090978794155,-.06528688150225045,-.006516309042701882,.03524540038796402,.06487167324863516,-.009910405282542379,-.07444223373636433,-.0884643892222283,-.043746931993730226,.025650630137194336,-.019555697374510583,-.11757758027246727,-.08839509351423645,.0006051884889788229,-.023883294001795972,.005215763190194649,.017696001575747886,.03829263072284757,-.06415224549575124,-.00046677178847581285,.1341767811159426,-.015474080963115183,-.2774137636701229,.10645611255411111,.491364732130425,.645662205147937,-.34894672904561197,-.22930577035731828,.06570715013088865,.07493129145102859,.010801205387038527,-.06741132095183788,-.1293046163253841,-.0036267311717218076,.0390232373941025,.04986893975541658,.002812925595011048,-.04859275944736474,-.09820675094642502,-.21167593067635238,-.24661106106331246,.17003550871316073,.14319521757460188,-.18791450411345456,.007936560869396415,-.02634365360982748,-.00641278153676982,-.021569631345745438,.09070651048741984,.023928227792328456,-.030645866021173446,.008194429787378174,.2723078481415532,-.030140868003777244,-.5536942957177085,-.3346120884840844,.40042515638418175,.547877452160026,1.7521122327973908,.02630887865012415,-.7903386881329546,-.305069105754819,-.05812266306986232,-.1512000567754718,.03080520845715192,-.05692236942047645,.018910842473248434,.04102655016489636,.10973045554309671,-.029240486244660805,-.3163922398944391,-.13757198545862218,.1270680540425267,-.07205720117764353,-.07044562563150432,.11232623315704422,.05394497327097227,.07897222152752154,-.00416350617181658,-.04361457599167779,-.07774818656606759,.04921969358643038,.04241680227334132,.12644205243911066,.39096527623299887,-.4037031247095156,-.48770772267188234,.5447330180533501,.9289894130003811,.7151259504708923,.7438533137124658,1.2482467538506357,-.5716683662381389,-.432819403691714,.023943010115746077,.00030176170486927514,-.2467922762570443,.16824405476099039,.0929298620408442,-.029175915115095267,-.0812108161453773,.03253523974658334,-.018421573557966798,-.18224178792918325,-.2905221682258862,.1711051640070395,.22815908460498383,-.15890945005602886,.0062170702455973175,-.04485316816647018,.0080331646697509,-.0842632097276826,-.016095705887684088,-7820006368420517e-20,-.09792392205621189,.48676804973393806,.35484595526186524,.18102793706565945,-1.0939934957719641,.9231011957591454,.4910867492003743,-1.6725083187014362,.5657788112446521,1.7716903674840145,-.3172433812188264,-.46946217188769945,.468040885941674,.2495599910064237,.2196596168257534,-.28426475792188616,-.12974774398976752,-.0862624260647399,.08470347473063304,.12060535717228706,-.33186051211466344,-.10830858623812538,.1774046950562415,-.004310184140959981,-.3386669625362712,.0393969525618715,-.26339593722715154,.1359801303077666,.1036496145362314,-.01116807759551522,-.18224776807046214,-.12296413131763473,.21989373735679868,.16380771710007386,.6727165127601912,-.16319024909703136,.9839049291701306,2.2217962254133496,-.660772240917578,1.5638480130127614,-1.0129349058609651,.9923275265012277,1.515502516107282,.5867500433912969,.16801904131477496,.31725814504248523,-.07171439916435922,.13832330176015895,-.06044274856052339,-.04343432877572056,-.19718551141955432,-.36586758725441343,-.15612863751307984,-.7249941619639332,-.11056584899062098,.08278017743008294,-.10585857030502534,-.49717312826403764,.06029712833825185,-.1741288940590143,.034503572794408806,-.022140372568936324,.14950061311078439,.2924299486585319,-.2910000335599442,.2275115796261395,-.11471557758718894,.255752955945665,.6600787620906332,-.2814414065580684,-1.050216159001623],bottom:{real:[5837.242024063461,16421.19056905325,8527.227518211732,3938.41845467232,969.2100004376409,269.87346390668256,193.53992011404216,135.14631901451781,58.523829955616236,29.311524302602624,20.863281166035843,14.808244655557742,11.401757474781434,9.638649393665329,8.053859109417678,7.471439806212464,7.271177617526248,7.471439806212424,8.053859109417665,9.638649393665327,11.401757474781416,14.808244655557761,20.863281166035858,29.311524302602734,58.523829955616236,135.1463190145178,193.53992011404216,269.87346390668273,969.2100004376406,3938.4184546723186,8527.22751821173,16421.19056905326,14982.474506443205,4755.19857866802,3083.864201169168,1502.8058566448747,596.268512932032,262.3552053688135,201.52671733896852,108.13603201941604,57.999252895466505,28.992297197792773,19.233600066307524,13.871180161098291,10.761421361485239,8.850682851250665,7.812558492626262,7.123450122935638,6.6618841738486525,7.176288470960696,8.141688980401993,8.866363260774406,11.328672883224474,14.773155762512141,20.0580565285724,28.68834409907191,57.995376649220766,126.94075502116374,211.30702516808583,262.5444859553627,752.9602476197267,2141.536802332785,3891.366197365788,5583.546099008517,9500.652808667768,4225.384857328793,1708.1934289355966,562.9450489663958,526.4142021082113,290.26438540271903,151.3473221830423,89.3045970775778,50.1610416734142,27.913649363990057,19.253723232543383,14.310501425792925,10.62253810462022,8.652074761601527,7.679643289534405,6.9311889072641995,6.5442165971044535,6.83524729637813,7.253158781826729,8.812570019717482,10.256278085266516,13.962876672312342,18.680978544191657,27.64161128084435,51.70590284164593,92.38303510862865,175.23999552329536,238.6238705323166,446.2130896894364,589.8495064414341,1459.800700420838,2983.642166781685,6639.698067031166,3615.9230624353354,1045.9683029029898,541.9569824673339,551.2292078912385,269.0174810237252,121.81702466062521,78.61930436899455,46.26647526114716,26.895860643920866,18.966790938143397,14.141216689343503,10.624588727031869,8.51206745844691,7.508407817845805,7.127942028564302,6.550522644160282,6.597661457074558,7.5671769464103935,8.42937533661321,10.446992271959362,13.755112829750516,18.515159362788847,25.868606557166544,43.59302593302384,76.84786004620612,125.0365119439001,241.77755195523335,523.0849929966005,633.3655585428983,855.6947679023069,2473.0066947172836,2803.949655269216,1850.6397468329815,645.7731463695902,447.0056397685769,381.6372474267435,196.7755433249871,93.58681681613771,72.61236574074685,43.711482900929944,27.782222145016455,18.647268962291367,13.844325818813939,10.350953817244738,8.7140342291789,7.351664195270592,6.886474159529909,6.1226840838853605,6.718650713141449,7.014879626817314,7.902004601266044,9.653604858655545,13.744699851401226,17.87227996094296,25.02588903079783,38.77546859762585,68.22861611587423,97.80666785184185,178.52012140604563,362.80035213144055,506.96305099601244,508.39785887877764,1271.7627571663681,1970.0713813014595,1211.9708052435174,448.82610946730466,388.9148370038566,294.26646682781944,147.68595350614527,76.56381892160427,57.53338100926053,37.094893522892434,25.168957624787666,17.405368368923924,12.931100650610183,10.211256703797424,8.378308200770265,6.884564767216135,6.295463031189576,6.1711525716900475,6.285263765474588,7.131800245728804,7.812646461498566,9.356258005810218,12.456351018938477,17.12365920646733,22.851195586808732,34.22708028584924,57.27396559547706,82.12680179596266,114.0182287640494,248.69630423497404,396.25330408596494,382.77662480077174,646.8612706088028,1066.195953557621,770.7452163454607,344.77171326148743,328.2115248838793,223.6732358532505,124.39997807543456,66.04212498002366,49.833499278727395,36.08081235450254,24.010000461569632,16.241873057458708,11.94801819096188,9.663620823552634,8.173481426927411,6.8263151892657215,6.109400553448764,5.556036412886669,6.08951612256523,6.737155385092935,7.561498049402431,9.303546039908396,11.904089289656403,15.753116847312391,22.11618678180766,33.401673308199264,45.775772578430164,60.54280760491739,91.41224059968123,164.58197575163385,289.9799614501007,367.09809735899603,433.5172945888932,538.9971467870731,436.9735160339028,214.4570000321332,226.27353228768246,190.72528880002966,104.24105887361294,63.0962910283184,44.89569211557344,34.378771692376986,22.743616534455565,14.943130070579064,11.306154107321404,9.490726177732828,8.057539867813432,6.624991765631065,5.80530835366394,5.67275940871921,5.680399455258072,6.45122342172424,7.309182096903841,8.905316851708879,11.147020821533502,13.978280110937801,19.308076160210224,27.380246565144393,39.45337202937899,53.82390657707432,70.344986096435,125.18491111128095,220.27402210338624,239.0209596497513,253.5280561179115,337.90351459641266,301.96557555412664,163.1486266603976,176.1964602722083,155.2640157056349,91.40217063585646,57.9223709952281,44.13290601551937,31.477476121951593,19.994026988386896,14.669539930994308,10.52228821405147,8.949924507684104,7.416085875937713,6.0652235290917815,5.533683634797245,5.345334549972072,5.525199888029565,6.049359333226362,7.498954463790416,8.644145711066678,10.17217183387787,12.922358897606493,16.497840703497662,24.47352534302224,36.89322569574956,46.488420049270196,60.00894968185993,101.55324863109907,172.57213254679178,186.99209153386954,177.69050334329205,224.71115213821386,219.35401697656656,131.98987419085088,139.58612051732652,133.97255559613592,83.71766714607698,52.48988401855501,39.948149447326976,29.992243301791387,19.792293237610107,13.550533437330548,10.191515700191694,8.725128556525828,7.013096609958828,6.041290502053927,5.169560945388304,5.23354642177383,5.274893760174123,5.915118914176224,6.64049249933847,8.252563319435486,9.86505065394757,11.857247340871206,15.821441128307118,21.809722446513074,33.20484260444123,45.292100524348356,53.58823709974399,86.04657086533335,138.34470513151498,144.28338780744133,137.47961624149846,184.36194031651988,195.75342807998493,111.69248606852764,108.22432115257934,110.31477193613289,70.73795275871473,45.31608419986612,35.221165127538775,25.132656234698317,17.80870832888929,13.205138111505544,9.831975695829131,8.385186971565917,6.697914777469541,5.557794982618686,5.064013606215784,4.915924071395172,5.174737523892124,5.621849200313962,6.392652273833619,7.8838556827841355,9.58804953889033,11.2702077240605,14.675031755421674,19.961485602094882,28.340133288775018,38.07180730248544,46.21180594207289,70.89628817363239,115.46517347822648,119.73189294718243,110.21299532100423,137.4907868217927,145.21239507063157,90.73647550020203,84.82013466298467,87.02888773526917,58.59278092655856,39.14047570270828,30.030590426700837,23.561748558876776,17.07171690133644,12.059539847971436,9.13034699170641,7.8824915696444915,6.557457716388455,5.450832747202711,4.631948788952135,4.85569366970317,5.095213989565805,5.36260614825461,6.023150477726759,7.392912454090475,8.869713914539098,10.839689611405708,13.484775054138881,18.12552087046162,25.51326521840107,33.81482175872351,43.00066071296376,59.28906756969899,89.52310048000626,96.00283450164133,88.24840395150595,114.22377327036351,136.39754784126862,85.13393713749406,70.75761358115078,72.94113644504662,50.41713140464106,35.29732697897046,27.270836476117434,20.337170678571646,15.328073102208975,11.22762600822461,8.889470339904383,7.306673249055975,6.111757001079701,5.224039680082537,4.692794475404797,4.446269195676172,4.8997943453914665,5.030120352863074,5.850405985335514,6.902103078533902,8.693648104841767,10.014300550884089,12.783989981758968,16.915182814597465,23.037925870268026,29.781501040175886,36.13778662893932,46.659613314406016,72.54209688440005,80.09830912470618,76.77256948716943,87.96931966600367,100.35528192635977,66.39074370667048,56.29722089299507,57.44977691289374,42.311817158751616,30.3950154293208,24.633397231162515,18.800000277532757,13.90634472463726,10.685561612392762,8.772663355326253,7.37657782226477,6.023800684787688,5.208207432749892,4.58867196645594,4.61664103539597,4.611514826957056,4.992077230917985,5.644512472351516,6.798068303404396,7.497596200534023,9.606658686908084,12.06652313244911,16.25166382630045,21.003823940677318,27.62293357307126,33.836788273738165,41.87785442344717,58.53283536970373,68.23932029676797,62.32614973900864,71.58383095513956,81.61139186167428,61.29060695836405,49.963935495056425,49.74402774735454,38.555965139546075,28.313241453630848,22.404376161451804,17.69007471646092,13.348861556136391,10.46674681432143,8.150736425345137,6.780493336316558,5.7303247473649055,4.973796153764103,4.6591603640435,4.369127354240186,4.587644085680502,4.877527941931284,5.564315782428927,6.510642451461139,7.651725877469773,9.397827067443549,12.208065227131403,15.316902707006163,20.982661610009878,26.31786929803148,32.313264556083666,38.06286011366607,50.10516748474813,58.219661124046276,59.8611576800925,61.01902036645045,69.64280516822298,57.634563900118565,46.96752310990223,43.85887184820529,34.95764055706675,26.50503998364094,21.71545909517323,16.236775633007202,12.875777825381771,9.983473961099762,7.8930497070448,6.682971556980369,5.667219370450012,5.079424691551845,4.681264046528276,4.618663229753943,4.621109290436842,5.08978657739574,5.56918107107971,6.503518731799128,7.20143269985937,9.170362043794405,12.475838151915292,15.6623920524898,19.528853843427893,25.07702804540938,30.833489267211636,39.11329640738612,46.77099142791858,55.937485646720255,57.570245344451905,57.63781758903021,59.86039156661088,52.77619568232774,43.83929696702742,39.83301283219751,33.59821343802381,26.072700016436322,20.27697550152119,16.195672497297036,12.239826665071417,9.687521348716507,7.737954389393363,6.378678225480716,5.595025932784059,5.123290382827299,4.578659230973724,4.5178908466513406,4.578659230973722,5.123290382827298,5.5950259327840595,6.378678225480715,7.737954389393368,9.687521348716508,12.239826665071421,16.195672497297036,20.276975501521182,26.072700016436304,33.598213438023805,39.83301283219751,43.839296967027416,52.77619568232774,59.860391566610836,61.01902036645044,57.57024534445192,55.937485646720255,46.77099142791852,39.113296407386116,30.833489267211636,25.07702804540937,19.528853843427893,15.662392052489803,12.475838151915296,9.1703620437944,7.201432699859367,6.503518731799129,5.569181071079711,5.0897865773957385,4.6211092904368405,4.618663229753942,4.681264046528273,5.079424691551845,5.667219370450009,6.68297155698037,7.893049707044798,9.983473961099765,12.875777825381764,16.23677563300721,21.71545909517325,26.50503998364096,34.957640557066775,43.85887184820525,46.96752310990224,57.63456390011859,69.64280516822295,71.58383095513962,59.86115768009248,58.21966112404624,50.10516748474814,38.06286011366608,32.313264556083666,26.317869298031482,20.982661610009867,15.316902707006161,12.2080652271314,9.397827067443544,7.651725877469773,6.510642451461139,5.564315782428928,4.877527941931286,4.587644085680501,4.369127354240187,4.659160364043497,4.973796153764102,5.730324747364904,6.780493336316559,8.150736425345137,10.466746814321423,13.348861556136386,17.69007471646092,22.40437616145178,28.31324145363085,38.55596513954604,49.74402774735451,49.96393549505642,61.29060695836407,81.61139186167424,87.96931966600363,62.32614973900866,68.23932029676796,58.53283536970371,41.87785442344717,33.83678827373816,27.622933573071283,21.00382394067731,16.251663826300444,12.066523132449106,9.606658686908084,7.49759620053402,6.798068303404393,5.644512472351519,4.992077230917984,4.61151482695706,4.616641035395972,4.588671966455937,5.208207432749891,6.023800684787687,7.376577822264771,8.772663355326259,10.685561612392764,13.906344724637258,18.80000027753276,24.633397231162533,30.395015429320793,42.31181715875161,57.44977691289373,56.29722089299503,66.3907437066705,100.35528192635975,114.2237732703635,76.77256948716945,80.09830912470622,72.54209688440005,46.659613314406,36.13778662893932,29.781501040175893,23.037925870268033,16.91518281459747,12.783989981758975,10.014300550884082,8.693648104841765,6.902103078533901,5.850405985335523,5.030120352863068,4.899794345391461,4.446269195676173,4.692794475404802,5.224039680082533,6.111757001079703,7.306673249055973,8.889470339904381,11.22762600822461,15.32807310220897,20.33717067857165,27.270836476117438,35.29732697897047,50.41713140464108,72.94113644504664,70.75761358115082,85.13393713749407,136.39754784126856,137.49078682179265,88.248403951506,96.00283450164132,89.52310048000622,59.28906756969897,43.00066071296374,33.814821758723504,25.51326521840107,18.125520870461624,13.484775054138884,10.839689611405714,8.869713914539101,7.3929124540904745,6.023150477726761,5.362606148254609,5.095213989565807,4.855693669703173,4.6319487889521325,5.45083274720271,6.55745771638845,7.882491569644493,9.130346991706412,12.059539847971436,17.071716901336433,23.561748558876776,30.030590426700826,39.14047570270828,58.592780926558504,87.02888773526915,84.82013466298463,90.73647550020199,145.21239507063157,184.36194031652002,110.2129953210042,119.73189294718252,115.4651734782265,70.8962881736324,46.21180594207288,38.07180730248544,28.340133288775018,19.961485602094882,14.675031755421674,11.270207724060505,9.588049538890328,7.883855682784136,6.392652273833623,5.621849200313961,5.174737523892125,4.915924071395175,5.064013606215786,5.557794982618686,6.697914777469534,8.385186971565918,9.831975695829147,13.205138111505548,17.808708328889303,25.13265623469832,35.221165127538775,45.3160841998661,70.73795275871471,110.3147719361329,108.2243211525794,111.69248606852767,195.75342807998487,224.71115213821398,137.47961624149852,144.2833878074414,138.3447051315149,86.04657086533334,53.58823709974399,45.29210052434834,33.20484260444123,21.80972244651307,15.82144112830712,11.857247340871208,9.86505065394757,8.252563319435486,6.640492499338464,5.915118914176224,5.274893760174123,5.23354642177383,5.16956094538831,6.041290502053925,7.013096609958833,8.725128556525835,10.191515700191694,13.550533437330545,19.792293237610103,29.992243301791408,39.94814944732701,52.489884018555,83.71766714607696,133.97255559613592,139.5861205173265,131.9898741908509,219.35401697656653,337.90351459641266,177.69050334329216,186.99209153386957,172.57213254679186,101.55324863109904,60.00894968185994,46.48842004927018,36.89322569574956,24.47352534302224,16.497840703497666,12.922358897606497,10.172171833877869,8.644145711066678,7.498954463790413,6.04935933322636,5.525199888029563,5.345334549972072,5.533683634797246,6.065223529091781,7.416085875937713,8.949924507684111,10.522288214051471,14.669539930994311,19.99402698838689,31.477476121951593,44.13290601551936,57.92237099522811,91.40217063585641,155.2640157056349,176.1964602722083,163.14862666039767,301.96557555412653,538.9971467870728,253.5280561179116,239.02095964975135,220.2740221033861,125.18491111128091,70.34498609643492,53.82390657707433,39.45337202937895,27.380246565144397,19.308076160210238,13.978280110937792,11.147020821533506,8.905316851708882,7.309182096903844,6.451223421724239,5.680399455258068,5.672759408719208,5.805308353663939,6.624991765631067,8.05753986781343,9.49072617773283,11.306154107321403,14.943130070579077,22.74361653445556,34.378771692377,44.895692115573446,63.09629102831839,104.241058873613,190.72528880002952,226.27353228768243,214.45700003213315,436.97351603390234,1066.195953557621,433.5172945888933,367.098097358996,289.97996145010086,164.58197575163376,91.4122405996812,60.542807604917364,45.77577257843016,33.401673308199264,22.11618678180764,15.753116847312398,11.904089289656401,9.303546039908392,7.561498049402436,6.737155385092932,6.08951612256523,5.556036412886668,6.1094005534487605,6.826315189265727,8.17348142692741,9.663620823552627,11.948018190961893,16.241873057458722,24.01000046156964,36.080812354502534,49.833499278727416,66.04212498002366,124.39997807543459,223.67323585325056,328.21152488387946,344.7717132614875,770.7452163454602,1970.0713813014588,646.861270608803,382.7766248007717,396.2533040859646,248.69630423497387,114.01822876404945,82.12680179596269,57.273965595476994,34.22708028584923,22.85119558680874,17.12365920646733,12.456351018938475,9.356258005810217,7.812646461498566,7.131800245728804,6.285263765474588,6.1711525716900475,6.295463031189579,6.884564767216139,8.378308200770256,10.211256703797417,12.931100650610194,17.405368368923916,25.168957624787648,37.094893522892434,57.53338100926052,76.56381892160427,147.68595350614524,294.26646682781944,388.9148370038566,448.8261094673048,1211.9708052435162,2803.949655269216,1271.7627571663686,508.3978588787775,506.96305099601244,362.8003521314405,178.52012140604566,97.80666785184182,68.22861611587415,38.77546859762585,25.02588903079784,17.872279960942965,13.74469985140124,9.653604858655543,7.902004601266046,7.014879626817316,6.718650713141439,6.122684083885363,6.8864741595299055,7.351664195270594,8.714034229178903,10.350953817244736,13.844325818813926,18.64726896229136,27.782222145016434,43.71148290092994,72.61236574074687,93.58681681613766,196.7755433249871,381.6372474267434,447.0056397685771,645.7731463695901,1850.6397468329806,6639.698067031165,2473.006694717284,855.694767902307,633.3655585428982,523.0849929966007,241.7775519552335,125.03651194390012,76.8478600462061,43.59302593302385,25.868606557166554,18.515159362788847,13.755112829750496,10.44699227195936,8.429375336613218,7.567176946410392,6.597661457074561,6.55052264416028,7.127942028564301,7.508407817845802,8.512067458446909,10.624588727031863,14.141216689343507,18.966790938143404,26.89586064392087,46.26647526114716,78.61930436899458,121.81702466062518,269.01748102372505,551.2292078912383,541.9569824673345,1045.9683029029893,3615.9230624353345,9500.652808667768,2983.6421667816867,1459.8007004208382,589.8495064414337,446.2130896894364,238.62387053231652,175.23999552329542,92.38303510862855,51.705902841645944,27.641611280844312,18.680978544191667,13.962876672312348,10.25627808526652,8.812570019717501,7.25315878182674,6.8352472963781254,6.544216597104452,6.931188907264199,7.679643289534406,8.652074761601519,10.622538104620222,14.310501425792921,19.253723232543386,27.913649363990046,50.161041673414196,89.30459707757784,151.3473221830423,290.2643854027191,526.4142021082113,562.945048966396,1708.193428935596,4225.384857328791,14982.4745064432,5583.546099008519,3891.3661973657854,2141.536802332784,752.9602476197266,262.54448595536314,211.3070251680859,126.94075502116375,57.99537664922077,28.688344099071898,20.0580565285724,14.773155762512143,11.328672883224492,8.866363260774417,8.141688980402005,7.176288470960711,6.661884173848655,7.123450122935626,7.812558492626261,8.850682851250665,10.76142136148522,13.871180161098282,19.233600066307527,28.99229719779277,57.999252895466505,108.13603201941609,201.52671733896852,262.35520536881353,596.2685129320319,1502.8058566448742,3083.8642011691672,4755.198578668018],imag:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},imag:[0,-.13871927675086548,-.5582757149609217,-.8538326372408309,-.4670119338361595,.047809537946767316,-.3426920474802197,.1583158937413706,.20589774809377467,-.21944378817656213,-.12654666933988368,-.19544466487854822,-.09644626945019073,-.2265628704083768,.10840537931386109,-.055457499657790024,0,.055457499657784036,-.10840537931384955,.22656287040837902,.09644626945018958,.19544466487854698,.1265466693398799,.21944378817656165,-.20589774809377467,-.15831589374137045,.34269204748022014,-.04780953794676766,.4670119338361596,.8538326372408298,.5582757149609219,.1387192767508655,-1.279550584464304,-.8069590311966991,-.5066002982483182,-1.4561178571661,-.13414323846201096,-.2505529731115498,-.640274048196847,-.19951473048424853,.3313791296331769,-.04749824375932937,-.24064979253244873,.1395435157196932,.17789090203786645,-.044374683774468404,-.36806933922228663,.19528135326361654,.3299964626914292,-.13015393203002068,.1959681784626765,.28571835588367483,.2270580105241475,-.14508578389537852,.23457709892354506,.21163882649779878,-.20150153854805303,.060946718066345364,.3100404128586439,-.2625838718707748,.13955938857309563,-.2449447076348287,.06851005109099272,-1.1758121586434307,-1.368201172600149,-1.6899938281650106,-.7501926868865519,.6891128285175293,.44086751164178845,-.2315595903433902,-.545103158770842,.26585764990704713,.2624959582084973,-.04514609184617117,.011517786678353055,-.05790784432037342,.07685412425301096,.0035092112107953564,-.23588030048916386,-.04827784038071106,-.21489820671404902,.2681728717818591,-.027468417557455105,.2987317445654509,.07289920747928859,.023829771073631354,.006649117012129198,.004829873646791909,-.13057930804766787,-.2694620959312879,.39240115086507854,.8531772106141665,-.11752989424299426,.9999870738966831,.5578743616729666,-1.0314907737559058,-1.5043263157657751,-1.3830149751777026,-.20446853801739454,-.2836403310191183,.6830314716152905,.03902721990981517,-.18273076418691683,-.013466871818696777,.028891896132398606,-.06862124221450072,-.02679286952467542,.18842973810535804,.06839228253508749,-.17097210848547728,-.23288712244734344,-.3141661235870828,.2728416921191384,-.07243899022541153,.1202436118466384,.06744326225711779,-.004045232640019184,-.15231382612170316,.020438609938141238,.10773227995476008,-.1646961578394999,-.034526357222664054,.3404569968631755,.3582562672018631,.5020328221472785,-.9005057884056485,1.1141651843864948,-1.0547694551235964,.15113295529591572,-.4201199738298069,-1.1306687523196075,.5990489956312235,.1278247611955642,-.26469201284371935,-.0028564673365734715,.2587885502662681,.0007864520134104085,-.17181320075266995,.013143422355015144,.05023839674084175,.07215692285898792,.04160467398259256,-.0112715468909201,-.016101389694688766,-.3126936366227507,.0949743341513004,-.06786938796696873,.14811752790953986,.010724993842567176,-.07149566160435743,-.037154193600070516,.05779163337935353,.09493793106291729,-.1272883333159909,-.01740846979628495,.6200376238621287,.07441700456397177,-.12904495334293709,-1.4636084587609224,-.0367437300827803,-.77470195486186,-.60686918965332,.6287263620045662,-.46894237369717673,-.18368617361305525,.26816260026693856,.13447215443394772,.04100815493405749,-.017107991149299187,-.0680369475996533,-.01240601732954733,.05935692746192456,.12615835751185028,.053672308552617974,.03774974359224236,-.10597138547480481,.022172258797336697,-.058681894939636686,.12792055300624736,-.06015432347010594,.03229830899926915,-.015701976416949814,.0007367446231764113,.07712597645572114,.05564408487662822,-.06598174001891982,-.14567847379973994,.039540586335773356,.2491706386704154,-.6432675339043068,.3675466403998282,-.0696498769749482,.2952063874323651,-.011417685121456805,-1.0450941798657123,-.17374602795438093,.19930768818407893,-.1556206112582631,.05581712853807612,.1790093649902748,.005237402448426343,-.04259609882328368,-.02083426192853383,.03668659345054796,.0007688026095817875,.06171969247781091,.027700064466885506,.10661165850403151,-.13945785164947772,-.05054425815546071,-.11937846922953205,.03439955883717337,.02521789889898339,-.004746861819041827,-.02825685744844651,.029239764799856467,.046539635523190424,-.03331642390248576,-.15842957449053302,.1474114560630888,.1752194519195491,-.07562928201952297,-.9196871674688946,-.4550470204476488,-.12177128356890227,-.10462001130261206,.1804016527269576,-.047005347129142915,-.19200701617075638,.1133507155810588,.14315736053243958,-.06754552046591941,-.0022066601859379556,.008400134072988386,.00493380069781825,.016196236751475263,.0664195740691833,-.012240235365542763,.01443312883853778,.023674926554515096,-.017114978073907605,-.1437989861779111,.08430372577238564,.005677992326511777,.048321020114327755,.022849248448590556,.012395399307186424,.023865191872962568,-.006037515267849562,-.021897165586045375,-.09217332722109582,-.17587869380621102,.09199292532210088,.014980171338571357,.0086063527817299,.098130362913165,.130338354535672,.09420330567759944,-.19730813245926024,-.10041080102702246,.07593204274580358,.02113428762188104,-.05957553232524452,.008299212542201392,.015272751179096435,.009024853611406095,-.019251438395354602,-.015788972597383853,.003250945662643008,.03296897547944033,-.015058032290062954,.017643635220692015,-.06885700316953144,.030070570566209365,-.12793975070954616,-.04353483487601328,.0017423598025251587,.028592812647173952,.0036967486190428137,.009045316783825322,-.016259252101333162,-.005207681729782719,.018046490267575967,-.026168992315517926,-.08307703486887791,.032798990212655046,-.027546636940189637,-.12409557570816734,-.008835607182220642,-.034333260533212014,.05617729507532258,.05799439311344064,-.032566171451921935,-.010465798382464413,.020079425427313443,-.017396471253638312,-.017870360905994483,.010919865739753416,.012363627500514531,-.01431321541581572,.03420155792081711,.10796975372596095,.21064351401911494,-.04601640195702946,-.0838033070266082,-.15128619138644472,-.07074541532788599,-.06951503451164355,.07063841806481566,-.008001903562601612,.02654845111893607,.019862790828204354,-.00386983557629617,-.020866890117519677,-.004808443274984591,-.00364516409639753,-.0026341276434262537,-.0023099396961399252,.04390810066375783,.09677203374284404,.04918905117971889,.07060077152873424,-.02677362863360314,-.05973226936448265,.013552286601009756,.0032289712715403013,-.023046337829044056,-.0104051517231316,.01942709625934166,.018256051683800133,-.05675987022201821,-.03296056009139303,-.0173990042730968,.12185282737260948,.03798423433754776,-.12270039394272629,-.055947445070994896,.04621845892784341,-.1857137618225036,-.06381089208694728,.07053672326645595,.03906718120738633,.01577517031413787,-.004745657011912422,-.01980141197527725,.02463719909248731,.019457415538283646,-.0067710516924983765,-.02834601701232055,-.006509832922919529,-.0013352981567293612,-.023151697315085987,-.06519950655383687,-.1042256990435297,-.023224778901070588,.00729635443120975,-.03470838640090929,-.0023809918522597964,.01616754166381201,-.005434023698746317,.002720810988399538,.006684196401156055,-.023932611476630623,-.03900580321070505,.016396390506166533,.05806798387241651,.15112210885707694,.0919535398253341,-.308789816469042,.23773808023122034,-.11496619447060334,-.15410637679425881,.16398523681965352,-.04216012313160585,-.005783889905293601,.021159112170606904,-.0008919402495326755,-.043632529695206895,.025594278576058532,.04827977682701759,.008656372871138766,-.025123508323013247,-.021222695138498154,.012727342518660707,.002732727307553498,.01672722282524492,-.062351999721191126,-.0950864851349935,.009789315676701096,.020526538310240195,-.0017729650965628652,.004236734242614828,.00969181616596509,-.014518052118829046,-.004581035374341906,-.06945150463938297,-.03628959076218118,.22708969966074724,.3665342673930222,-.5962576209185034,.3677477205864991,.2627894192943519,-.10703484463450727,-.13950623949894417,-.08080613749345363,-.018761372187400087,-.1480711283584217,.015533054933596769,-.01315617033162085,.03305379581498845,.012901798319361097,.00377273404398293,-.008705072547776149,-.026200884444946355,-.0699831200027948,-.04585110256530889,-.008021591507498945,-.04806311981862181,-.05590918830230712,.015567334119352533,-.06911372306398904,-.007247424342862186,.04252656204416145,.039806904605142766,-.027582495505149615,.004926143375425349,-.04754279011762625,-.07412235121492936,.22223052073714245,-.007741727367060801,-.08082528642091588,.6239051855537013,-.1898873716577621,-.013310214088767865,-.13538196037364333,-.38370084094404533,-.32853605615928166,-.2309534981672577,.002457368089255563,-.060148519255615616,.030360401196840837,-.008421474591235168,.033027304906486414,.0307398640217227,.009703992699996455,-.06069855739203631,-.04746519227839175,-.053530300822357386,-.04617423408269824,.005211204463466864,.020596160958060543,-.15878906772803425,-.02193329327109424,.007934242380394899,.027919450264392773,.007043080701302528,.020085011074200358,-.07593504311206385,-.04165227277395796,.16889959178925665,.18647295463827135,.014154913289577202,.06052110757646851,-.6363731233683723,.9019195738157793,.27922666018549325,-.48673882008850766,-.3337003135725931,-.3513559741645329,-.2622745616761345,-.1719749232535629,-.005731502793172811,-.04469091820910031,.053283308768024513,.03946559994643804,-.014174493080162808,-.04946368453866596,-.022857667990750397,-.1688130409012578,-.08081252690949967,.0005823444604532637,.08433842597437612,-.1251823168088108,-.04050640633805026,-.08374410530080309,-.001350704062862842,.030200114248426838,.04229988913026935,.011310849850443803,.08175917844592068,.03528956306363411,-.12268118169149339,.0581572497684168,.1945303065955717,-.3201969513996092,1.2621857571853639,.24947885513851267,-.8682713800974683,-.26346017480935824,-.4031200027249898,-.22820944406317872,.0813299683314989,.00388713671617719,-.10891614598123801,.00043800911235750134,-.04328929752692221,.012593343881888895,-.004268663667086969,-.008833188472774969,-.02414166683120631,-.03923653338217388,-.25435751708422283,0,.1310658190076192,.22441332039311174,-.09476844701896146,.0024812204443016074,.03628626839204586,.0056698536823630895,-.010705526315732189,.08204491851289233,.0010532751265284197,.015101105715477795,.09065350545022463,.27613653682211553,.17494988738073455,.3095682126985193,.0345404763627059,0,-.034540476362701966,-.3095682126985185,-.1749498873807341,-.27613653682211575,-.09065350545022713,-.015101105715478274,-.0010532751265287738,-.08204491851289233,.010705526315732109,-.0056698536823632534,-.03628626839204598,-.002481220444301584,.09476844701896192,-.224413320393112,-.13106581900761924,-.00058234446045053,.254357517084223,.03923653338217307,.024141666831206714,.008833188472774717,.004268663667086584,-.012593343881888968,.04328929752692242,-.00043800911235742604,.1089161459812379,-.0038871367161778295,-.08132996833150016,.22820944406317803,.4031200027249902,.26346017480936107,.8682713800974723,-.24947885513851314,-1.2621857571853632,.3201969513996075,-.194530306595574,-.05815724976841667,.1226811816914933,-.0352895630636345,-.08175917844592065,-.011310849850443772,-.04229988913026883,-.030200114248426623,.0013507040628626303,.08374410530080267,.040506406338050895,.12518231680881103,-.08433842597437564,.04617423408269629,.08081252690949875,.16881304090125832,.02285766799075026,.04946368453866589,.014174493080162815,-.039465599946438334,-.053283308768024965,.04469091820910013,.005731502793172531,.1719749232535624,.26227456167613394,.3513559741645329,.3337003135725934,.48673882008850966,-.2792266601854941,-.9019195738157806,.6363731233683764,-.060521107576467635,-.014154913289577215,-.18647295463827063,-.16889959178925743,.041652272773958374,.07593504311206452,-.020085011074200423,-.007043080701302525,-.02791945026439252,-.00793424238039499,.021933293271094115,.1587890677280339,-.02059616095805995,-.005211204463467397,.008021591507499164,.05353030082235833,.0474651922783904,.060698557392036064,-.00970399269999631,-.030739864021722747,-.03302730490648645,.008421474591235165,-.03036040119684083,.060148519255615165,-.0024573680892551967,.23095349816725866,.3285360561592826,.38370084094404566,.13538196037364647,.01331021408876858,.1898873716577617,-.6239051855536973,.08082528642091671,.00774172736706095,-.22223052073714233,.07412235121492945,.047542790117626306,-.004926143375424972,.027582495505149737,-.039806904605142586,-.04252656204416143,.0072474243428623,.0691137230639886,-.015567334119352927,.055909188302305984,.04806311981862192,-.0027327273075535455,.04585110256530835,.0699831200027951,.026200884444945973,.008705072547775906,-.0037727340439829347,-.012901798319361227,-.033053795814988754,.01315617033162081,-.01553305493359669,.14807112835842184,.018761372187400604,.08080613749345414,.13950623949894433,.10703484463450816,-.26278941929435246,-.36774772058649907,.5962576209185069,-.3665342673930213,-.2270896996607477,.03628959076218108,.06945150463938327,.0045810353743422905,.014518052118829408,-.009691816165965116,-.004236734242614894,.0017729650965627938,-.020526538310240098,-.00978931567670096,.09508648513499297,.06235199972119075,-.01672722282524514,.06519950655383722,-.012727342518659639,.021222695138497675,.02512350832301345,-.008656372871138747,-.048279776827017555,-.025594278576058595,.04363252969520693,.0008919402495326742,-.02115911217060702,.005783889905293781,.042160123131606046,-.16398523681965352,.15410637679425865,.1149661944706041,-.23773808023122042,.30878981646904247,-.09195353982533305,-.1511221088570756,-.05806798387241584,-.016396390506166002,.03900580321070508,.023932611476630637,-.006684196401155907,-.0027208109883995707,.005434023698746266,-.016167541663812044,.002380991852259873,.03470838640090904,-.007296354431210057,.023224778901069786,.10422569904352962,-.04918905117971928,.023151697315084544,.0013352981567299367,.006509832922919474,.02834601701232067,.006771051692498271,-.019457415538283694,-.024637199092487305,.019801411975277225,.004745657011912749,-.015775170314137797,-.03906718120738624,-.07053672326645621,.06381089208694683,.18571376182250354,-.04621845892784342,.05594744507099499,.1227003939427266,-.03798423433754704,-.12185282737260873,.01739900427309727,.03296056009139282,.05675987022201823,-.01825605168379989,-.019427096259341584,.010405151723131587,.02304633782904404,-.00322897127154033,-.013552286601009622,.05973226936448246,.02677362863360303,-.07060077152873463,.008835607182220432,-.09677203374284288,-.043908100663758234,.0023099396961402566,.0026341276434262424,.00364516409639781,.004808443274984581,.020866890117519587,.0038698355762962896,-.01986279082820429,-.026548451118935872,.008001903562601734,-.0706384180648158,.06951503451164305,.07074541532788536,.15128619138644453,.08380330702660829,.04601640195702959,-.21064351401911435,-.10796975372596025,-.03420155792081658,.01431321541581594,-.012363627500514576,-.010919865739753575,.017870360905994497,.017396471253638378,-.02007942542731345,.01046579838246435,.03256617145192176,-.05799439311344054,-.05617729507532285,.03433326053321245,-.130338354535672,.12409557570816747,.02754663694018964,-.03279899021265514,.08307703486887798,.026168992315518,-.018046490267575984,.005207681729782772,.016259252101333162,-.009045316783825131,-.0036967486190426836,-.02859281264717387,-.0017423598025251908,.04353483487601341,.12793975070954686,-.030070570566209584,.06885700316953144,-.017643635220692303,.015058032290063167,-.03296897547944007,-.0032509456626426633,.015788972597383943,.019251438395354474,-.009024853611406113,-.015272751179096435,-.008299212542201484,.05957553232524453,-.02113428762188115,-.07593204274580363,.10041080102702246,.19730813245926007,-.09420330567759928,.12177128356890216,-.09813036291316408,-.008606352781730114,-.014980171338571052,-.09199292532210057,.17587869380621152,.09217332722109572,.02189716558604548,.006037515267849643,-.02386519187296254,-.012395399307185896,-.022849248448590303,-.04832102011432769,-.005677992326511827,-.08430372577238573,.1437989861779114,.017114978073907855,-.02367492655451382,-.014433128838537597,.01224023536554338,-.06641957406918292,-.016196236751474646,-.0049338006978182185,-.008400134072988485,.0022066601859378697,.06754552046591947,-.1431573605324398,-.11335071558105927,.19200701617075636,.04700534712914311,-.1804016527269583,.10462001130261284,-.2952063874323646,.4550470204476488,.9196871674688951,.07562928201952356,-.17521945191954877,-.14741145606308895,.15842957449053352,.03331642390248584,-.04653963552319055,-.029239764799856394,.02825685744844656,.00474686181904234,-.02521789889898306,-.03439955883717374,.11937846922953181,.050544258155460854,.1394578516494776,-.10661165850403005,-.027700064466883865,-.06171969247781083,-.0007688026095812998,-.036686593450547596,.02083426192853413,.04259609882328336,-.005237402448426355,-.17900936499027453,-.05581712853807628,.1556206112582631,-.19930768818407885,.17374602795438115,1.0450941798657116,.011417685121456564,.7747019548618601,.06964987697494884,-.3675466403998272,.6432675339043074,-.24917063867041553,-.03954058633577317,.14567847379973992,.0659817400189202,-.05564408487662822,-.07712597645572139,-.0007367446231761105,.015701976416950342,-.032298308999268784,.0601543234701064,-.12792055300624763,.05868189493963719,-.022172258797336572,.105971385474807,-.03774974359224228,-.053672308552617946,-.12615835751184992,-.05935692746192366,.012406017329547145,.0680369475996537,.017107991149299284,-.04100815493405788,-.13447215443394772,-.2681626002669388,.18368617361305564,.4689423736971773,-.6287263620045653,.6068691896533199,-.15113295529591578,.036743730082780514,1.463608458760923,.1290449533429373,-.07441700456397135,-.6200376238621289,.017408469796284774,.1272883333159911,-.09493793106291715,-.05779163337935424,.03715419360007,.07149566160435859,-.010724993842566222,-.1481175279095394,.06786938796697012,-.09497433415130044,.31269363662275046,.01610138969469304,.011271546890921311,-.0416046739825933,-.07215692285898725,-.05023839674084114,-.013143422355014638,.1718132007526696,-.0007864520134103385,-.2587885502662679,.0028564673365731054,.26469201284371935,-.12782476119556443,-.5990489956312219,1.130668752319608,.4201199738298067,1.5043263157657745,1.0547694551235969,-1.114165184386494,.9005057884056495,-.5020328221472783,-.35825626720186354,-.34045699686317654,.03452635722266466,.16469615783949973,-.10773227995476188,-.02043860993814084,.15231382612170388,.00404523264002093,-.0674432622571157,-.120243611846639,.0724389902254128,-.2728416921191381,.31416612358708496,.23288712244734694,.17097210848547523,-.0683922825350877,-.1884297381053561,.026792869524674363,.068621242214501,-.028891896132398506,.01346687181869554,.18273076418691644,-.03902721990981482,-.6830314716152913,.28364033101911773,.20446853801739462,1.3830149751777017,1.3682011726001495,1.0314907737559074,-.5578743616729661,-.9999870738966836,.11752989424299397,-.8531772106141676,-.392401150865078,.2694620959312899,.13057930804766765,-.004829873646791958,-.006649117012130222,-.023829771073630532,-.07289920747928642,-.29873174456544577,.027468417557455698,-.26817287178186705,.21489820671404794,.048277840380711166,.23588030048916517,-.0035092112107956196,-.07685412425301093,.05790784432037204,-.011517786678353752,.04514609184617035,-.2624959582084973,-.2658576499070465,.5451031587708403,.2315595903433905,-.4408675116417886,-.689112828517529,.750192686886552,1.6899938281650098,1.2795505844643045,1.1758121586434311,-.0685100510909925,.24494470763482898,-.13955938857309558,.2625838718707741,-.31004041285864437,-.06094671806634362,.20150153854805294,-.21163882649779717,-.23457709892354675,.14508578389537688,-.22705801052414679,-.2857183558836735,-.19596817846267664,.13015393203001066,-.32999646269142935,-.19528135326362211,.3680693392222917,.044374683774465004,-.17789090203786717,-.13954351571969323,.24064979253244634,.04749824375933088,-.33137912963317673,.1995147304842484,.640274048196846,.2505529731115497,.13414323846201037,1.4561178571660989,.506600298248318,.8069590311966988],height:32,width:32,top:{real:[17750.107020847583,6210.865615966279,10017.081922566327,3457.5995074393513,265.850218137708,-70.20768481034305,-8.882891147089472,24.58975650378648,-11.140592103834141,-1.46746599378154,-.34121813437428317,1.0812077419156148,1.7163290532419633,-4.566614630463569,-2.684639401420383,-2.273864366622347,1.917575640981823,-2.273864366622364,-2.6846394014204122,-4.5666146304635395,1.7163290532419744,1.0812077419156028,-.34121813437427356,-1.4674659937815784,-11.140592103834141,24.589756503786372,-8.882891147089664,-70.20768481034348,265.8502181377076,3457.5995074393486,10017.081922566325,6210.865615966285,23430.31298691556,-4993.986386578701,-867.9270784111233,991.9702295167051,152.49743471969379,-30.09622891688864,45.84966179865908,-31.46758894668901,16.96071854645447,4.334366206560186,-.4258390713100009,.4786052744328573,-1.8738744001784808,.5336707597630499,-3.884194145524758,-.7540782456530397,.5514719539298555,-.7934524273933928,-5.902676979317489,-1.384293215600769,-4.144794214579823,-2.913052274311734,-.8712082218639676,-1.7340023689981476,8.022111984944255,-9.103479975813322,67.03887483927257,44.11247283269986,441.79945796279685,3245.5044122716786,3861.5097933424754,-5655.768742169554,-15889.920855591003,-2792.017020916347,3795.2577126849956,553.8844085299576,-85.90566477025423,195.26564512659746,24.791859336013662,19.6375216145314,-6.168008915359045,-5.087200295288675,-.21502707506361318,1.4832779566036471,1.4444541156654906,-2.278921340791467,.30255454236990775,-2.3473646939882187,-.02820677859184775,1.2126049622480428,-.7855793734203073,-2.9245439997897638,1.236962081731878,1.1827041713801927,-1.6114665304853286,-3.5864367039316236,-14.698165954413065,20.29282209316159,43.7328917067592,111.68572777077691,-209.48016621032312,-187.12585183373633,2586.314839382015,1688.0815183011628,4748.220391025409,1775.7319020900284,965.534591135915,-592.8974138074635,99.78788635488837,95.45976503600482,59.29663551844352,-7.698710633143011,-.003618041311866854,-.4329078625206647,-1.598202682681902,.1135987222961578,-.47654646487314006,.05292012132443119,-1.193156957130263,1.6263047283546588,1.120828251360869,-1.916766911729648,-1.3790558562903064,-.15528235781115707,.339895398198906,-1.1170639390757935,-.5401967179111659,2.403966038546336,7.33426744227294,-18.965458306286095,.03773123101507536,5.788882372224528,-226.40133474887324,-362.0750540837246,1068.1182163210274,1839.5542246985658,1536.22079311388,1719.2247320855465,351.77395499971544,-218.0081025930205,-154.06814929171503,76.93240465195194,11.83330919947551,3.0799843602247936,2.1514657945922595,-2.1600173905506583,-.8132927291931007,-.05764093599125942,.8174378178766071,.4700783435753993,.8257847464902618,-.485121980563267,-.4411834787796781,.8537258719103306,-.9650509180144995,-2.500132935450727,-.2822761000809063,1.5082121759974054,.7332379903786944,.47326064521443867,-2.2071915479661444,2.1017967421924912,-14.788373732218277,-10.376064867674437,-110.67917899227207,-400.67251265606825,13.375377575225066,2228.271084047331,1272.0006323499422,485.3035992226992,-150.18264185504094,-215.33992676901764,-8.869446734595165,40.21604419999191,.627396838406635,-1.763160286154926,.8876150621479377,2.2829883187502253,-.37542737915458396,-.08292432350233894,-.2690018095258665,.06649495301798529,-1.293709574268377,.9014801984840545,1.049315066873844,-1.550015566266476,-1.5096304544124948,-.7672546252768676,-.45464639460382006,.03503878860161394,.8539387293596101,.891727630123107,-.12413241898971583,-7.405788146756412,-5.5362761946156125,1.231534306746803,18.635135255424384,26.03667534143711,-87.77288882471544,-225.72012452523,395.63478219787083,378.7170167703935,36.70305631243881,-91.05039439794716,-3.4611377608751717,16.691588629055683,-.030826600791664327,-3.196930879641269,1.3816292236713215,.42488100600164197,.0847137636329082,-.28535803119354425,.005848312084274873,-.7224956550701193,-.802621622131051,-.11947358836291604,.1425158350557394,-.2663976476885841,-.5959983362374907,-.5628948051906861,-.09220191182028845,.7722381907211653,.5552249106419074,-.14411590791637013,-2.1806910872492855,1.0588352659849944,-1.722617263430356,-9.016744076782127,-38.48389632251889,-22.599080819691828,25.54113970512769,375.57983717352784,181.47383294778024,149.67885098073037,-4.100878251797606,-3.738347514365787,18.721866312633942,-1.1602382001305473,-5.839154093942011,-.21088907624048864,-.29870055099180226,.9533183744618138,.06042439564320553,-.42858353450158043,-.37036207729837234,-.3036964450645726,-.7565217634765898,-.4454571363152239,.7132684521528351,.07176180892895631,-.6382969819391779,-.4523550556385587,-.08015934030842575,-.15881914095274483,.37773826228539636,-.0970863633135215,-.8670604429090952,-1.3342582973973045,-.6179277702044148,.16957438507140327,10.565905071599056,15.380533375221102,10.50023919474786,19.996280010030237,18.60272375866586,4.034831471780333,11.168149094486143,14.395513359675057,-3.576502394652771,-3.876062809222843,2.0358977627782506,-1.6580642648165547,-.13166485139511078,.2591565726162201,-.22701969228044258,-.29312645623416966,.09996947219935386,-.3910166116454323,-.042546772814251566,.29433076927773894,-.5093538487418168,.09048772686114162,-.09214398588257239,-.5825352944026844,-.416714322810017,.14644815319126417,.2723500443275419,-.039709576626662156,-.41013369223337515,1.1756350920235048,1.5259648698081887,-4.451627866201312,-8.128003687892722,9.604108020551694,20.813833475064627,12.963050463991683,7.8870012209429445,15.407970089260955,5.378309688910911,-3.135003053617967,1.9101786820520572,1.6649545288728531,-2.142164884787256,.3523092008580216,.37729718445187704,.02082392939460398,.08713974495724808,-.10976037032555666,-.5698689940173911,-.4402090815221931,.6919056466115241,.20725962387572397,.6404278736867182,.7186728309989674,.16183428074791173,-.17223426808716463,-.17676233483878773,-.27594664738318686,.0952383574449861,.02072697193586424,-.11463597101365795,-.3233331161098237,1.2888258236383847,3.023753883451761,-.12189842989060286,-4.500205647906865,-2.8307120360813536,9.032505574283658,-5.083687145641661,-6.422678336118566,-2.383206402964554,2.120438050789215,-2.1797923249754283,-2.131688277076892,1.4364513793862836,.8284741731103675,-.5470510771368747,-.053118808001264,.1034933009018914,-.027586170457780668,-.2786611518494937,-.4744187891270259,.32835706009268834,1.8712198771790323,.4493701678023156,.8488760221500451,.3519180353068138,.2875824347525097,-.6426201464805843,-.4059735310092979,-.2224452936424687,-.07186950223505165,.3302146612298864,.24942995069051274,-.5214330526633183,-.09366255470033667,1.1233733739102922,1.9003965613191238,.07120934753760759,-8.654923611944618,-1.842762037193103,-.5229577546680441,3.409295272037012,-.6500317796772334,-.1840159964371442,1.8831870902689825,.7983111628921199,-.3992517298270185,.05120517740303382,.2598923527237304,-.18824332097783142,.13750859145926242,.7822683031309051,-1.2572785001190825,1.335536332855691,1.2220896356262305,1.6491421999762639,1.7622421170936717,.9648743983441674,.7912838147011229,-.26979590260649117,-.37236776211072153,-.6531881225090838,-.13360581679076858,-.1817007191765827,.4244891020544192,1.0695325895656689,-.49200291489349485,-.5995906658098875,-2.461030407050638,-1.7528842523917616,5.409297459242755,11.628502736704702,13.318871722095572,5.384420128917242,.12839725172390623,-.9146215998500353,-.4207633568928546,.7328961843606323,.9816454560601925,-.31879685258307294,-.45467275635234927,.23929181220408463,.735537321037087,-.7805028518028965,-.2061437725020578,-.6614735481139654,.8472254475644475,3.1542100241342745,-1.0454812204468338,.4911227283477408,.8978009409713777,-.8068634496024236,.2616620751435001,.3423496440167225,-.27361449647202374,.07840034325728802,.2713071574863611,-.26706243773596255,.9287956087265937,-1.3686907450256593,.37153092475944227,-.00770609153918559,-2.1487270106054996,8.242311510799118,10.211121947580189,11.004080199445575,5.512476255300478,.43541395104991965,1.3138259234516578,.4769768752500237,-.3743769063787195,.4917032514672482,.5309293320442569,.7897723185645854,.05493597003430254,1.0907299238052364,-1.4537313504920895,1.663741525652943,2.3271742206176285,1.6752406948773604,6.0227778178364675,-2.569314033109529,-1.3449083811022362,-.06354075932635939,1.2007479971921078,.26947504329539196,-.043317616642408706,-.0900924044749603,-.5614935645216418,-.29757479536733583,-.825312878504854,.5288097384008399,-.5104284962829919,1.1866854822445434,7.713048076228817,17.626109919920186,26.29568713002228,9.15149795145862,-1.521929375229722,.8536435912377126,-.365663824522519,-1.1590870007863963,.4808263000269652,.9305906744563816,1.1024013035834523,.638418295742183,1.5659590764611497,.20674310541385973,1.0081259505833966,1.4865008399227626,-1.6031905208728288,5.771883570976741,.2720344299284404,3.2411570780563994,-1.0481514144590243,2.2338214812745694,3.1628749936702945,1.7743358086362808,-.03099281849361625,-.4144288271295417,-.31459130661253104,-1.7323756021672925,.19363530105298493,.6112321227052172,4.826040478690415,6.7814469674820135,4.974801806376985,19.935738411546794,15.127019575257112,16.951752765718286,6.976320734749117,.8320458256453673,-.22090351652873133,-.48187393778382737,-.7221625941331894,.6833751487943774,1.493402769177877,1.3836806937153638,-.0891083628996989,.5791053376434419,3.1507795425198797,1.9139554692796912,4.14239902259602,-5.089358033057332,4.654532007457709,-1.3079026033800338,1.258390156840345,1.3087920196200225,1.8018391908724931,1.3933980798910508,.6760493311480307,-.49475104816844406,-1.4152366315362725,-.645806625334661,-1.4537653735214031,3.1014323943375786,7.6843087454063586,10.909142678924193,12.359496229531475,15.280082473470735,24.669023160454167,12.739042274822818,1.7204760023261643,.5292950854871518,2.1482192005482723,-1.481161898887601,-.7940407971043247,.46540881956838565,.9262471185427797,1.0380549761479756,2.3168267428989626,1.5788387366050483,-.8376697052300492,4.750572050222373,-2.6570294115495297,6.761213132395551,-2.6570294115495336,4.750572050222378,-.837669705230057,1.5788387366050476,2.3168267428989657,1.0380549761479752,.9262471185427773,.46540881956838565,-.7940407971043286,-1.4811618988876,2.148219200548279,.5292950854871515,1.7204760023261518,12.73904227482281,24.669023160454188,19.935738411547018,12.35949622953156,10.909142678924129,7.684308745406342,3.101432394337563,-1.4537653735213987,-.6458066253346709,-1.4152366315362839,-.4947510481684456,.676049331148034,1.3933980798910552,1.8018391908724987,1.3087920196200247,1.2583901568403484,-1.30790260338003,4.654532007457706,-5.08935803305732,4.142399022596009,1.913955469279683,3.1507795425198943,.5791053376434462,-.0891083628996941,1.383680693715373,1.4934027691778826,.6833751487943738,-.7221625941331862,-.4818739377838111,-.22090351652873805,.832045825645343,6.976320734749093,16.951752765718314,15.127019575257133,17.626109919920285,4.974801806376996,6.781446967481992,4.826040478690392,.6112321227052044,.193635301052977,-1.7323756021672947,-.31459130661253587,-.4144288271295444,-.030992818493609464,1.7743358086362877,3.162874993670298,2.2338214812745694,-1.0481514144590143,3.241157078056395,.27203442992843363,5.771883570976741,-1.6031905208728274,1.4865008399227673,1.0081259505833953,.20674310541386615,1.5659590764611582,.6384182957421902,1.1024013035834526,.9305906744563824,.48082630002696636,-1.159087000786395,-.3656638245225098,.8536435912377094,-1.5219293752297598,9.151497951458596,26.295687130022237,8.242311510799235,7.713048076228867,1.1866854822445243,-.5104284962830227,.5288097384008245,-.8253128785048506,-.297574795367338,-.5614935645216511,-.0900924044749598,-.043317616642408116,.26947504329539745,1.2007479971921178,-.06354075932635406,-1.3449083811022313,-2.5693140331095257,6.022777817836472,1.675240694877361,2.327174220617627,1.6637415256529449,-1.4537313504920832,1.0907299238052377,.05493597003431282,.7897723185645906,.5309293320442623,.4917032514672505,-.37437690637871607,.4769768752500283,1.3138259234516545,.43541395104990577,5.512476255300489,11.004080199445557,10.211121947580168,11.628502736704604,-2.1487270106054663,-.007706091539169374,.37153092475944555,-1.3686907450256616,.9287956087265901,-.26706243773595856,.27130715748636525,.07840034325728844,-.27361449647201985,.34234964401672396,.26166207514350365,-.8068634496024222,.8978009409713853,.49112272834772974,-1.045481220446846,3.15421002413427,.8472254475644415,-.661473548113959,-.2061437725020583,-.7805028518028938,.7355373210370894,.23929181220408727,-.45467275635235105,-.31879685258307255,.9816454560601955,.7328961843606313,-.4207633568928543,-.9146215998500377,.12839725172388108,5.38442012891722,13.318871722095585,-1.8427620371929223,5.4092974592426515,-1.752884252391761,-2.461030407050609,-.5995906658098782,-.49200291489348996,1.0695325895656664,.42448910205441354,-.18170071917658262,-.13360581679076522,-.6531881225090824,-.3723677621107227,-.26979590260649017,.7912838147011273,.9648743983441668,1.7622421170936722,1.6491421999762705,1.2220896356262196,1.3355363328556904,-1.257278500119075,.7822683031309038,.13750859145926628,-.18824332097783478,.25989235272372874,.05120517740303401,-.39925172982701423,.7983111628921264,1.8831870902689678,-.18401599643714045,-.6500317796772292,3.409295272037008,-.5229577546680811,-5.083687145641791,-8.654923611944545,.07120934753757101,1.9003965613191072,1.1233733739103013,-.09366255470034336,-.5214330526633129,.24942995069051838,.33021466122988513,-.0718695022350494,-.22244529364246549,-.40597353100929245,-.6426201464805834,.2875824347525145,.351918035306808,.8488760221500463,.44937016780231587,1.871219877179029,.32835706009269156,-.47441878912702484,-.27866115184949264,-.027586170457779294,.1034933009018901,-.053118808001266206,-.5470510771368722,.8284741731103715,1.4364513793862805,-2.131688277076882,-2.1797923249754287,2.120438050789201,-2.383206402964568,-6.422678336118408,7.88700122094335,9.032505574283476,-2.830712036081403,-4.500205647906819,-.12189842989059124,3.023753883451757,1.28882582363838,-.3233331161098253,-.11463597101365604,.02072697193586587,.09523835744498739,-.27594664738318975,-.17676233483878293,-.1722342680871602,.16183428074791517,.7186728309989714,.640427873686722,.20725962387572536,.6919056466115251,-.44020908152219435,-.5698689940173924,-.10976037032555588,.08713974495724872,.02082392939460036,.3772971844518759,.35230920085802736,-2.142164884787245,1.6649545288728365,1.9101786820520659,-3.135003053617966,5.3783096889108455,15.40797008926083,18.60272375866586,12.963050463991696,20.813833475064644,9.604108020551676,-8.128003687892736,-4.451627866201328,1.5259648698081876,1.1756350920235052,-.41013369223337515,-.039709576626662,.2723500443275417,.14644815319126442,-.41671432281001886,-.5825352944026828,-.09214398588257292,.09048772686114251,-.5093538487418168,.2943307692777374,-.042546772814252246,-.3910166116454319,.09996947219935487,-.29312645623417033,-.22701969228044291,.2591565726162216,-.13166485139511078,-1.6580642648165524,2.0358977627782484,-3.8760628092228537,-3.5765023946527563,14.395513359675084,11.168149094486147,4.034831471780354,181.47383294778047,19.996280010029963,10.50023919474779,15.38053337522109,10.565905071599067,.1695743850714092,-.6179277702044097,-1.3342582973973056,-.8670604429090915,-.09708636331352224,.37773826228539636,-.1588191409527461,-.08015934030842092,-.45235505563855616,-.6382969819391766,.07176180892895834,.7132684521528342,-.4454571363152199,-.7565217634765878,-.3036964450645788,-.3703620772983737,-.42858353450157866,.0604243956432037,.953318374461814,-.29870055099180354,-.21088907624048941,-5.839154093941986,-1.1602382001305538,18.721866312633882,-3.7383475143657954,-4.100878251797706,149.67885098073012,395.6347821978709,375.57983717352744,25.5411397051276,-22.599080819691835,-38.48389632251889,-9.016744076782171,-1.7226172634303247,1.0588352659849967,-2.1806910872492873,-.14411590791637696,.5552249106419069,.7722381907211674,-.09220191182028437,-.5628948051906791,-.5959983362374925,-.26639764768858487,.1425158350557399,-.11947358836291141,-.8026216221310536,-.7224956550701233,.005848312084270103,-.28535803119354936,.08471376363290742,.42488100600164375,1.381629223671322,-3.1969308796412634,-.030826600791668796,16.691588629055648,-3.4611377608751566,-91.05039439794719,36.70305631243863,378.7170167703935,1272.0006323499422,-225.72012452523026,-87.77288882471514,26.03667534143715,18.6351352554245,1.231534306746842,-5.536276194615616,-7.405788146756401,-.12413241898971436,.891727630123105,.8539387293596038,.03503878860161398,-.4546463946038164,-.7672546252768583,-1.509630454412483,-1.550015566266479,1.0493150668738473,.9014801984840544,-1.2937095742683813,.0664949530179763,-.2690018095258679,-.08292432350234526,-.37542737915458746,2.2829883187502267,.8876150621479396,-1.7631602861549227,.6273968384066227,40.21604419999188,-8.8694467345952,-215.33992676901772,-150.18264185504114,485.3035992226977,1536.2207931138814,2228.271084047332,13.3753775752247,-400.67251265606865,-110.679178992272,-10.376064867674508,-14.788373732218197,2.1017967421924983,-2.207191547966143,.47326064521441386,.7332379903786985,1.5082121759973919,-.2822761000809081,-2.5001329354507282,-.9650509180144967,.8537258719103169,-.4411834787796837,-.48512198056327205,.8257847464902586,.4700783435753934,.817437817876596,-.05764093599127141,-.8132927291931111,-2.160017390550672,2.151465794592262,3.0799843602248034,11.833309199475522,76.93240465195203,-154.06814929171483,-218.00810259302057,351.7739549997146,1719.2247320855445,4748.220391025408,1839.554224698564,1068.1182163210278,-362.07505408372486,-226.40133474887313,5.788882372224479,.03773123101509879,-18.96545830628597,7.334267442272939,2.4039660385463657,-.5401967179111887,-1.117063939075788,.3398953981989011,-.15528235781113153,-1.3790558562903272,-1.9167669117296613,1.1208282513608707,1.6263047283546224,-1.193156957130264,.05292012132442746,-.4765464648731435,.11359872229612604,-1.5982026826818876,-.4329078625206879,-.003618041311865411,-7.698710633143024,59.29663551844356,95.45976503600443,99.78788635488839,-592.8974138074643,965.5345911359134,1775.7319020900306,-15889.920855591006,1688.0815183011607,2586.3148393820165,-187.12585183373636,-209.48016621032366,111.68572777077674,43.73289170675933,20.292822093161472,-14.69816595441305,-3.5864367039316574,-1.611466530485326,1.1827041713801545,1.236962081731869,-2.9245439997897797,-.7855793734202979,1.2126049622479607,-.028206778591846705,-2.347364693988263,.3025545423698818,-2.278921340791416,1.4444541156654738,1.483277956603626,-.2150270750636187,-5.08720029528866,-6.168008915359052,19.637521614531632,24.791859336013527,195.26564512659732,-85.905664770254,553.8844085299576,3795.257712684994,-2792.017020916346,23430.312986915553,-5655.768742169554,3861.509793342478,3245.504412271677,441.7994579627963,44.11247283270051,67.03887483927267,-9.103479975812874,8.02211198494424,-1.7340023689979776,-.8712082218640018,-2.913052274311693,-4.144794214579845,-1.3842932156007377,-5.902676979317541,-.7934524273933764,.5514719539298532,-.7540782456531224,-3.8841941455247726,.5336707597630261,-1.8738744001784735,.4786052744328138,-.42583907130996707,4.334366206560095,16.960718546454476,-31.46758894668928,45.84966179865925,-30.096228916889014,152.4974347196931,991.9702295167021,-867.9270784111243,-4993.986386578703],imag:[0,-2277.9356791272003,-4760.5440393641,-3362.7502157108247,-452.6326365977277,12.902525613472081,-66.32459149303926,21.395810280639775,12.049924797684376,-6.432231930192483,-2.6401787430633603,-2.8941924141450355,-1.0996569736184965,-2.1837600734887777,.8730816516968187,-.4143473704962265,0,.41434737049617953,-.8730816516967246,2.1837600734887985,1.0996569736184816,2.8941924141450213,2.640178743063284,6.432231930192494,-12.049924797684376,-21.39581028063975,66.32459149303935,-12.902525613472182,452.63263659772764,3362.7502157108197,4760.544039364101,2277.9356791272016,-19170.834011440937,-3837.2504381898657,-1562.2865240696121,-2188.2624437144,-79.98538931763022,-65.73387671644744,-129.0323271304431,-21.57473128398986,19.219741943874205,-1.3770831994436832,-4.628561865608997,1.935633246860916,1.914358953204174,-.39274625271235863,-2.8755632420164114,1.391076979912747,2.198398212230069,-.9340221618772395,1.5955119590990243,2.5332827335358816,2.5722659267438073,-2.1433748844126024,4.705160710516987,6.0715674792926295,-11.686157623491814,7.736622407403881,65.5137173230452,-68.9399476604814,105.08267177765576,-524.55810593663,266.59769699529215,-6565.201391560311,-12998.804313286138,-7140.874330507554,-1281.4742181751476,387.93265499317204,232.0789193763446,-67.21350217512955,-82.49990339348469,23.74231030494058,13.167070698799225,-1.2601921779485123,.22176027695648487,-.8286902887112986,.8163858633748259,.03036195775005164,-1.8114765667849664,-.33462283171345614,-1.4063404110660631,1.8330278968089115,-.19923279402973898,2.6325944160953934,.7476745441031245,.33273215463055067,.1242120122414053,.13350548988021607,-6.751721015042069,-24.893726268864828,68.76437592093231,203.5884482467179,-52.44337724103917,589.8418819857724,814.3853839170243,-3077.5993672243876,-9988.272530974133,-5000.875744438487,-213.8676097071096,-153.72085790515706,376.50689706328353,10.499004391497454,-22.259718007212538,-1.058756094412357,1.3367261976572533,-1.845627367813951,-.5081747549074722,2.6646257572641145,.726639874038269,-1.4553261209412862,-1.748611490859247,-2.2393579162674944,1.787255682497424,-.4779279337995983,.9099046875190019,.5685045714908853,-.042260514128558184,-2.0950938638350283,.3784241201585649,2.7868839636562086,-7.179603879766707,-2.653276667752605,42.569555354666804,86.61832325668642,262.60583525697274,-570.3493516446566,953.3853188584327,-2608.4519239039555,423.7691979018007,-777.4907220078727,-730.1555176872118,267.7782795448585,48.782690015655945,-52.08491464110734,-.2673276853691823,18.791248861451912,.034376983736590996,-4.773352510756985,.2450889317389604,.6955167330950534,.7468929761078751,.3625445531781404,-.08286462770329087,-.11088180406499534,-1.914524352082348,.6380993778757686,-.4760955869340491,1.1704253870693357,.1035348526676573,-.9826864094292438,-.6640301497435355,1.4462870038602533,3.6812627646537175,-8.684706829846188,-1.702664423174063,110.68919188818327,26.998515460375977,-65.42102326237345,-744.0954066709206,-46.729307478653496,-1526.2181503116453,-735.5077404616152,282.18880697804167,-182.37864683063907,-54.0526813142352,39.603849315110104,10.295701682078779,2.359337802307917,-.6346191100738395,-1.7124190510555728,-.21593130161202514,.7675504033211141,1.2882353738829533,.4496831429006712,.25989055470659483,-.6671389396205737,.13682839189736165,-.3688311879534851,.9123038313637193,-.4699644624025633,.3021913121485442,-.19558932994062075,.01261576384947006,1.762420772813289,1.9045345605049635,-3.7790359077733253,-11.964107143689581,4.5083476182968525,61.96781696120042,-254.89688572081204,140.68826246910922,-45.053807917761794,314.747855744751,-8.800126189101572,-360.31891091191073,-57.02544877742448,44.579795546563595,-19.359200628613657,3.6862817789376683,8.920663061128309,.18896973496668307,-1.022732352408107,-.33838743748909134,.4383320859115699,.007429416907156167,.504464760143059,.1890893708139402,.6513333254686208,-.7748329018274454,-.3077900749407771,-.8042712968338931,.2601121970475906,.2346158834364472,-.05650706693953473,-.4451335771232274,.6466720997697505,1.554501701628272,-1.5250850436867627,-9.59177124730927,13.475211488788412,28.8379635870378,-21.930976284520067,-337.61540934331555,-197.27075321520147,-65.63437440423792,-45.71617418640904,38.68839724466203,-10.636065931319841,-36.620593610799475,11.815798616251305,9.03269848300071,-3.0325028906240825,-.07586226673501913,.19104942819406223,.07372642556981186,.18311714867084192,.6303699903322625,-.09862618444928073,.09561935970760504,.13744024889930673,-.09708915289878234,-.8168356827516692,.5438621702414317,.041501479859297266,.4303139947158866,.254701048212831,.17326636360277617,.46079094226119127,-.1653086566745448,-.8639170202551628,-4.961128553246363,-12.372184270457062,11.516126179313906,3.2997425925449804,2.057098700973387,24.878800155519915,44.04178808431685,28.44615541803764,-32.190550839656126,-17.692027714058376,11.789513877445387,1.9317197634824401,-3.450756085581017,.36626836712779354,.480747660556516,.18044316667269442,-.2824097442697313,-.16613612027343372,.029095718259237995,.24450075339721422,-.09133033174751364,.09763429547907566,-.36806371804963284,.1661459131254051,-.7739535250454471,-.3264657443238585,.015061212014132833,.29085100346092985,.04777071240950242,.14922819541222396,-.39792121836056477,-.1921281774085053,.8389528199741381,-1.5703737430868945,-8.436742777573645,5.660191686379234,-5.151003256170212,-22.05060531025986,-1.985459469757478,-7.531138613863072,7.414834109374134,8.095212346461937,-4.362973215395906,-.8761722254011065,1.0539667118389069,-.6949568334964709,-.5359722121834076,.21612918483653182,.16753374785242167,-.14587335963051168,.2984129896925935,.7572023138336264,1.2725586605629424,-.23788459440434945,-.4385884976219189,-.7980185869448654,-.418467544297231,-.4616140652658238,.5829480178646468,-.07893918397306843,.3147915514342539,.3142579757323138,-.08440003983266144,-.692881801996411,-.2177844961762289,-.19533791786522492,-.22665765093841067,-.3195679261340593,6.3352095159571435,13.304182061875538,9.068588917821575,13.820343051841526,-2.9904131431626517,-6.464484302874146,1.4950174056035006,.22841081726546483,-1.0443697855595202,-.36648156701751267,.4882545319244275,.32511669967392476,-.7495219254728813,-.3240674257394919,-.14589390394899102,.816159853135446,.21110858701983537,-.6213564644140027,-.275033391957563,.23916839371037824,-1.0440547633891395,-.40792084439497517,.5561013465692207,.37457806876122546,.17778944632276653,-.06964266735015433,-.395265600045646,.6982215061431774,.740778974977921,-.3129025268374792,-2.009627390680164,-.7516589877591736,-.15987777595408992,-2.551617907860878,-8.96433145647966,-15.134863386021781,-2.1073345817546003,.6188777654040759,-3.020632263557078,-.13950893398737912,.6328052716649578,-.16318694006603662,.06410706438489891,.11411070867346804,-.2886162817684455,-.35613651800395313,.12924440993745664,.38077834891929796,.8237413397844878,.42592408743381815,-1.499388757097531,1.2113263922466315,-.6165184213094926,-.9282058970090798,1.2123284995709924,-.37394823077908607,-.0626955713199254,.28532586796592635,-.016166881608109255,-1.113208302263574,.8654659680925351,2.0760623026361933,.5132282760654556,-2.249134360011389,-2.0374388890600263,1.1231676638159473,.3121424243877217,2.2815521755579042,-5.308271224660933,-6.728092771971708,.7140438104778886,1.0348891792697787,-.06258092873568138,.11553928672311624,.19710411955257187,-.22253376417909151,-.05143415191355815,-.6173870905535266,-.26515618204121805,1.3879170617746586,1.914789556971131,-2.7981144693643607,1.635105361823879,1.2876141106871726,-.538398150461572,-.8161681385562726,-.5577322903580001,-.1631047677612218,-1.4828287822897712,.1985744186572128,-.22253902629935005,.7614908977166794,.38423492006819204,.1363382578891905,-.40617531895308634,-1.9006670978622686,-5.605529579495267,-3.520106957758509,-.705653947553275,-4.823387939658201,-3.7118525914264513,.8763976476322485,-3.9705679716456896,-.3066516936670704,1.2925955094882555,.9805792936814742,-.5185509231518588,.06850464794165309,-.508021413026953,-.6502504343138331,1.639300730699956,-.04663462261514044,-.42095485749155304,2.862896234676761,-.8766418320987102,-.06138024962032572,-.6758372018583059,-2.165804182360429,-2.233410549901899,-1.7315960703588726,.023607096501577673,-.7257834989804465,.49340703388266716,-.17688316963519096,.9123110495294448,1.0401382704665323,.4063823936166456,-3.5528586670065754,-3.2389924588328527,-3.336337544628424,-3.3053285670589143,.4252936495393003,1.2623512061316915,-7.933726737283649,-1.0910503490681764,.3059123726272148,.7904901365883903,.15779582936744363,.35530534658354934,-1.0136463777621887,-.4359637933660717,1.3766560550226186,1.2643786263280588,.08111224992006862,.30101965208538256,-2.9649644331404845,3.940601481283172,1.2809925361642973,-2.3740821954043603,-1.8568139214134618,-2.2875531209700912,-2.0068530505793203,-1.6161905886738603,-.0699705599485395,-.6845264460955596,1.1180256373411306,1.0386505011587546,-.45802414484767806,-1.8827293053017495,-1.1452872829873149,-9.828238034590992,-4.837531415856278,.03553408849268729,5.873564568328072,-7.214828237282292,-1.9024855757814658,-3.672921982430532,-.04721742712852893,.8004552356650778,.9185615121387268,.1836517312402891,1.0527130168554166,.35231243394437906,-.9683286652099518,.38866324603453256,1.1024459216780036,-1.6264163010988006,5.908624805151913,1.1522588148293589,-4.01237694118883,-1.340956061423007,-2.245048288549614,-1.484164394238348,.5856922934209832,.03564645100107093,-1.3588202093923047,.006860270440306241,-.8453903643879284,.31580363771161246,-.13161779536446233,-.3454951189579537,-1.1291296924180168,-2.1947930228924113,-14.643424663744323,0,7.845651246794636,11.843681310787776,-4.154582091968257,.09883448579737673,1.2191537903053737,.14782839419733967,-.21707569483499198,1.328772630302227,.012891904979339022,.146292284007916,.7014726904124609,1.7613861146868823,.9788491568328603,1.5860078469473597,.1581490709403331,0,-.158149070940315,-1.586007846947355,-.978849156832858,-1.7613861146868832,-.7014726904124806,-.14629228400792066,-.012891904979343359,-1.328772630302227,.21707569483499028,-.14782839419734384,-1.2191537903053777,-.0988344857973758,4.154582091968275,-11.843681310787789,-7.845651246794633,-.03553408849252048,14.643424663744339,2.194793022892366,1.1291296924180338,.3454951189579438,.13161779536445045,-.3158036377116142,.8453903643879325,-.006860270440305063,1.3588202093923036,-.03564645100107677,-.5856922934209922,1.484164394238344,2.2450482885496172,1.3409560614230207,4.012376941188847,-1.1522588148293609,-5.908624805151906,1.6264163010987922,-1.102445921678016,-.3886632460345318,.9683286652099508,-.3523124339443831,-1.0527130168554157,-.18365173124028866,-.9185615121387165,-.8004552356650727,.04721742712852156,3.67292198243051,1.9024855757814958,7.21482823728231,-5.873564568328037,3.3053285670587775,4.837531415856222,9.828238034591017,1.1452872829873084,1.8827293053017478,.4580241448476783,-1.0386505011587623,-1.1180256373411397,.6845264460955567,.06997055994853607,1.6161905886738546,2.006853050579316,2.2875531209700912,1.856813921413464,2.374082195404371,-1.280992536164301,-3.9406014812831787,2.9649644331405014,-.3010196520853782,-.08111224992006867,-1.264378626328054,-1.3766560550226248,.4359637933660757,1.0136463777621971,-.3553053465835505,-.15779582936744335,-.7904901365883831,-.305912372627218,1.0910503490681696,7.93372673728363,-1.2623512061316555,-.42529364953934357,.7056539475532939,3.336337544628484,3.2389924588327594,3.552858667006559,-.4063823936166395,-1.0401382704665338,-.9123110495294464,.17688316963519082,-.4934070338826668,.7257834989804409,-.02360709650157415,1.7315960703588795,2.2334105499019046,2.165804182360432,.6758372018583214,.061380249620329064,.8766418320987087,-2.862896234676741,.4209548574915572,.04663462261514133,-1.6393007306999556,.6502504343138344,.5080214130269537,-.06850464794164784,.5185509231518611,-.9805792936814706,-1.2925955094882546,.3066516936670752,3.9705679716456634,-.8763976476322699,3.7118525914263776,4.823387939658211,-.31214242438772705,3.520106957758469,5.605529579495292,1.900667097862241,.40617531895307485,-.13633825788919066,-.384234920068196,-.7614908977166867,.2225390262993494,-.1985744186572119,1.4828287822897714,.16310476776122626,.5577322903580035,.8161681385562749,.5383981504615758,-1.287614110687174,-1.6351053618238793,2.7981144693643794,-1.9147895569711246,-1.387917061774662,.26515618204121727,.617387090553529,.05143415191356246,.22253376417909698,-.19710411955257243,-.11553928672311804,.06258092873567889,-1.0348891792697743,-.7140438104778788,6.728092771971674,5.308271224660902,-2.2815521755579335,8.964331456479705,-1.1231676638158536,2.03743888905998,2.2491343600114058,-.5132282760654543,-2.076062302636191,-.865465968092537,1.1132083022635748,.016166881608109234,-.285325867965928,.06269557131992738,.373948230779088,-1.2123284995709924,.9282058970090792,.6165184213094966,-1.2113263922466326,1.4993887570975342,-.42592408743381316,-.8237413397844804,-.38077834891929335,-.1292444099374525,.3561365180039534,.28861628176844567,-.11411070867346547,-.06410706438489967,.163186940066035,-.6328052716649591,.13950893398738348,3.0206322635570557,-.6188777654041017,2.1073345817545266,15.134863386021769,-9.068588917821655,2.5516179078607184,.15987777595415892,.7516589877591673,2.0096273906801727,.3129025268374742,-.7407789749779229,-.6982215061431771,.3952656000456455,.06964266735015913,-.1777894463227658,-.3745780687612245,-.5561013465692228,.40792084439497267,1.044054763389139,-.23916839371037832,.2750333919575636,.6213564644140045,-.21110858701983135,-.8161598531354401,.14589390394899499,.3240674257394903,.7495219254728818,-.3251166996739207,-.4882545319244257,.3664815670175123,1.0443697855595189,-.22841081726546683,-1.4950174056034862,6.464484302874131,2.9904131431626397,-13.820343051841599,1.9854594697574315,-13.304182061875386,-6.335209515957204,.3195679261341049,.22665765093840967,.19533791786523994,.2177844961762284,.692881801996408,.08440003983266403,-.31425797573231284,-.3147915514342516,.07893918397306962,-.5829480178646479,.46161406526582016,.41846754429722727,.7980185869448644,.4385884976219195,.23788459440435036,-1.2725586605629382,-.7572023138336219,-.29841298969258917,.14587335963051393,-.16753374785242225,-.21612918483653495,.5359722121834085,.6949568334964742,-1.0539667118389073,.8761722254011011,4.362973215395883,-8.09521234646192,-7.414834109374171,7.531138613863165,-44.04178808431685,22.050605310259897,5.151003256170214,-5.660191686379251,8.436742777573649,1.5703737430868991,-.8389528199741386,.19212817740850727,.39792121836056477,-.14922819541222082,-.04777071240950075,-.2908510034609289,-.01506121201413311,.3264657443238593,.7739535250454511,-.16614591312540627,.36806371804963284,-.09763429547907729,.09133033174751491,-.2445007533972123,-.02909571825923493,.16613612027343472,.2824097442697295,-.1804431666726947,-.480747660556516,-.36626836712779753,3.450756085581019,-1.9317197634824488,-11.789513877445398,17.692027714058376,32.19055083965611,-28.446155418037584,65.63437440423782,-24.8788001555197,-2.0570987009734387,-3.2997425925449106,-11.516126179313863,12.372184270457085,4.9611285532463585,.8639170202551659,.16530865667454706,-.46079094226119116,-.1732663636027687,-.25470104821282824,-.4303139947158862,-.04150147985929765,-.5438621702414322,.8168356827516703,.09708915289878373,-.1374402488992993,-.09561935970760387,.09862618444928568,-.6303699903322589,-.18311714867083492,-.07372642556981146,-.19104942819406445,.0758622667350162,3.0325028906240856,-9.032698483000724,-11.815798616251362,36.620593610799446,10.636065931319884,-38.68839724466217,45.71617418640933,-314.74785574475044,197.27075321520152,337.61540934331566,21.930976284520245,-28.83796358703773,-13.475211488788421,9.591771247309294,1.5250850436867665,-1.554501701628276,-.6466720997697484,.4451335771232284,.056507066939540815,-.23461588343644407,-.2601121970475936,.8042712968338912,.307790074940778,.7748329018274447,-.6513333254686114,-.18908937081392915,-.5044647601430582,-.007429416907151449,-.43833208591156614,.3383874374890965,1.0227323524080993,-.18896973496668346,-8.920663061128298,-3.6862817789376785,19.35920062861366,-44.57979554656358,57.025448777424586,360.31891091191056,8.800126189101382,1526.2181503116453,45.05380791776222,-140.68826246910882,254.89688572081207,-61.9678169612004,-4.508347618296833,11.964107143689583,3.779035907773343,-1.904534560504963,-1.7624207728132955,-.01261576384946491,.19558932994062728,-.3021913121485407,.4699644624025669,-.9123038313637213,.36883118795348824,-.13682839189736087,.6671389396205878,-.2598905547065944,-.4496831429006705,-1.2882353738829488,-.7675504033211031,.21593130161202181,1.7124190510555817,.6346191100738432,-2.3593378023079388,-10.295701682078779,-39.60384931511013,54.052681314235315,182.3786468306393,-282.1888069780413,735.5077404616143,-423.7691979018009,46.72930747865378,744.0954066709207,65.42102326237357,-26.998515460375824,-110.68919188818332,1.7026644231740455,8.68470682984619,-3.681262764653712,-1.4462870038602713,.6640301497435265,.9826864094292609,-.10353485266764806,-1.1704253870693322,.47609558693405896,-.638099377875768,1.9145243520823476,.11088180406502474,.08286462770329978,-.362544553178147,-.7468929761078681,-.6955167330950445,-.24508893173895085,4.773352510756971,-.03437698373658793,-18.7912488614519,.26732768536914786,52.08491464110734,-48.78269001565601,-267.7782795448579,730.1555176872121,777.4907220078719,9988.272530974127,2608.451923903957,-953.385318858432,570.3493516446571,-262.60583525697274,-86.61832325668658,-42.569555354666946,2.6532766677526505,7.1796038797667014,-2.786883963656256,-.37842412015855753,2.0950938638350354,.042260514128576405,-.5685045714908681,-.9099046875190062,.4779279337996068,-1.7872556824974217,2.239357916267509,1.748611490859272,1.4553261209412682,-.726639874038271,-2.664625757264088,.5081747549074523,1.8456273678139588,-1.3367261976572486,1.0587560944122603,22.259718007212488,-10.499004391497355,-376.5068970632838,153.72085790515695,213.8676097071096,5000.875744438484,12998.804313286144,3077.5993672243935,-814.3853839170239,-589.8418819857724,52.443377241039045,-203.5884482467181,-68.76437592093224,24.89372626886499,6.75172101504206,-.13350548988021724,-.12421201224142447,-.33273215463053935,-.7476745441031024,-2.632594416095354,.19923279402974362,-1.8330278968089646,1.4063404110660558,.33462283171345686,1.8114765667849764,-.03036195775005389,-.8163858633748258,.8286902887112786,-.22176027695649836,1.260192177948489,-13.167070698799225,-23.74231030494054,82.49990339348442,67.21350217512965,-232.0789193763447,-387.93265499317204,1281.4742181751474,7140.874330507548,19170.83401144094,6565.201391560317,-266.59769699529113,524.5581059366303,-105.08267177765569,68.93994766048132,-65.5137173230453,-7.73662240740366,11.686157623491809,-6.071567479292581,-4.705160710517021,2.1433748844125784,-2.5722659267438033,-2.5332827335358727,-1.5955119590990279,.9340221618771696,-2.1983982122300714,-1.3910769799127845,2.875563242016451,.39274625271232855,-1.9143589532041787,-1.9356332468609148,4.628561865608953,1.3770831994437265,-19.219741943874194,21.574731283989856,129.0323271304429,65.73387671644744,79.98538931762987,2188.2624437143977,1562.286524069611,3837.2504381898625]}},face_filter={real:[2.591935953853891,1.348008577031251,-.20482945082417442,2.2477358192448036,.9354084388748214,.7431437038374807,.44299233336869565,.5364686452543544,-.033677232548862526,-.1522853308878499,-.003111345323840015,.052610669730581504,-.009042177602927646,.14571584983663624,.4405710365418128,-.48335213540388067,-1.3567864542305328,-.4833521354038822,.44057103654181745,.14571584983663588,-.009042177602927639,.05261066973058391,-.0031113453238437146,-.1522853308878454,-.033677232548862526,.536468645254354,.4429923333686956,.7431437038374823,.9354084388748215,2.2477358192448023,-.20482945082417423,1.3480085770312495,2.015210638832999,.8561113487865346,-1.3363494489312076,-.5214856856793162,1.2207493971968164,.8888018554921059,-.1285135757355211,-.1350280522901679,.04130090496769948,.44502243372725686,.029355734210915238,-.514439763199465,.08745222381708008,1.214870800319445,1.118908072709358,-.27220544444671846,-.36088426941083585,-.09348594752755632,-.9769818787641994,-.683491006253959,.024322257871818426,.6051281166939971,.15343788102432432,-.4299366545774243,-.15452787333937706,.9156200895039931,1.19600272916941,.7236482520664509,.5420001169208633,2.340026643850203,-.0336083749457483,.5889816141314532,2.026988327725381,2.818789893714468,-3.5895244227646144,-3.531433237259689,2.0122812700890154,.9309318199522797,-.9630540034089701,-.7361266762847282,-.053915776695886194,.4273024289884242,.029936824487282035,-.3516829302919025,.2510842049188495,.8544524900293714,.16931894270710782,.009238574633350012,.686725698694183,.41915906104063394,-1.098448870305092,-.6369785190090863,.11186355371520935,.47269360156783113,.15279475225563477,-.02610644023700699,-.03226275117308416,.1454266230078033,.7198133190370014,1.4137393979172745,.608577113128749,-3.0736342072317173,-2.5537641666010327,.6337650914909162,1.2343577579270657,.25345561236901865,-2.0331393954447585,1.159193858429254,3.017044771870936,.49021233060315667,-.684375328954414,-.329275838633818,-.09284792777273311,-.1474089549804324,-.19413825853994604,.3691960823964432,.3054625765508249,-.552564495000317,-1.2130125640575424,.0669618839178975,-.13876096422777703,.3790222467836734,.22718444978554084,.19963817528635963,.027529920247751867,-.24231535965414738,-.016338923407765684,.45136614923078927,.2897566078397231,-.730940554917991,-1.5465072446477164,-.07076989233207973,3.1701479989789885,.024916786279245037,-2.871773070372937,-1.1681626968077414,-.9460041010371844,-.8587251724417785,2.9516513032863374,2.8131952593882126,-1.5261742763882251,-1.0558844683361728,1.1680212024537544,.9845068510873982,.06406726571926906,-.43727283330478184,-.044395094277671916,.6179734700494115,.24878996343187737,-.6389127834052382,-.7586499302584196,-.3230461946645466,-.7338756447157126,-.043145833390571785,.9239181288868988,.899460985370458,.14871674926559622,-.5482282895418322,-.2672861314212731,.309011363128886,.2141868997801377,-.5210515711382034,-1.0686411834884146,-1.3047927124000203,1.0355627592914096,2.967274684384917,1.947121812881294,.3603087555803319,.22471825920653532,1.3679256644146878,2.378479538742755,.7377644017725042,-2.220295200370375,-.986671530921888,.6094442758995167,.29273424438530327,-.05406455321306649,-.1955430963609566,.13452976853580562,.17688857701463095,-.02907863269662225,-.037177619339377604,.22892611971691484,-.22870850340942314,-.41029268509332983,.06121534900576046,.37818604838169356,.34148146887082653,.09993824558644403,-.09925433838142396,-.11254516916626593,-.2039622085642743,-.20060216516957027,.30792957356810446,1.1721236672075155,.5613641754106787,-2.324960087766699,-2.4287881268668112,2.0674326900187423,2.8441511789848586,.050947133476877834,.30280142076825006,.2344198558506899,-.6942021193743784,.5001721083381983,.9824320425486297,-.30253127598451673,-.3521780252206647,-.25522460504160704,.1267215637102088,.11584743671788442,-.2780694670329302,-.2822047158728992,.2622813962834421,.4614518667727294,.08891377992394393,.3155266824029234,.08370176736304921,-.20838882493274438,-.4502862328664914,-.21994207603667223,.24344265380915428,.14566519323380012,-.26341476824800764,-.2501486044122161,.23269603050324755,.6550747273367771,.5891693947304917,-1.2014518968451928,-1.470695947253781,.7327016024754474,1.4639339636380404,.4618049191807075,.4627405202124886,-1.2522772114725254,-1.0527125117724863,1.1798416267497167,.8831199054956721,.0044403719443055645,-.32008851183583215,-.08803912681404771,.1343567710878925,-.043849665988197006,-.3005538990034163,-.17300527880436442,.2226801182957643,.14506301721613848,.13541851865273877,.312529191840112,.13643782704324722,-.2095508102885523,-.37861030355575276,-.2528547956358855,.07656668484101714,.11737705239518459,.013018358464219467,-.04151687435317732,.02539685951545335,-.19237103418038187,-.20754469441764836,.8354358458184308,.96010698083026,-1.052325769700115,-1.33376499327856,.31064795509136994,.20053594173979683,-.09959261069001354,.046946926411794127,-.2693342598358002,-.25886956646489134,.16667582025681255,.16264384177267197,.10611595375861864,-.009840446283874638,-.13572606372513804,-.02258793083641232,.1626410940258704,.008404233415462523,-.3166768587738564,.013183667319477316,.009511483946181471,.06473581323996976,.10654247281867815,.2133121635505107,.10213744987583113,-.12973084349572184,-.0980854077359512,.07159999111733754,.09601288712563749,-.07062229032498574,-.21061961456993025,.12811225495378645,.611164351713058,.2793101223093252,-.5707680731068852,-.5021838884925864,-.4292211936011942,-.4486524346795565,.488654222807675,.5325596193896186,-.37999327914266867,-.37733114800401457,.013506411710477314,.170066818452864,.060998910324659567,-.1365679354763767,-.09068659393937568,.3743991900961478,.47466547775213164,-.4058122944660423,-.4933460399621819,-.3807436086745039,-.49035943457716413,-.12412531843683997,.3044094397307464,.5945657163530786,.3987714048284257,-.17295292843566973,-.26272159996092964,-.046183226771098686,.047879446168886036,-.01767919625538646,.11122639164092249,.28368537020126805,-.25549013964140954,-.47047462219224784,.42895932921703384,.49142711950580215,-.37646529147307217,-.2985208724149509,-.1416351202280051,.03624824270039387,.16977635036237812,.13499908156480836,-.01898512351822966,-.06931980142573659,-.04806515147602384,-.09144565423759694,.06348078027146783,.36025783734460454,.07952841509470242,-.1753773206782209,.12374069460012149,-.28367021291499456,-.3947284775676721,-.2665809890749859,.18834221718468977,.2781965194293328,.17697914055115227,-.04471849441598082,-.1052242965370093,-.05691899057683679,-.03857490424724246,.004472003676478891,.07502915725700189,-.012042674487198736,-.25791041993690383,.009446144474925764,.4514964084333483,.15522942660639183,.16359187166611067,.27184060163390095,-.26140872283435745,-.36468827084356714,.09256469643453995,.17076044356298117,-.08195216613405097,-.09481240289501351,.05687217117351184,.14314060902527834,.09005737829603709,-.4975231063672491,-.9039950447662686,.6838532144823399,1.5206479363861476,.9719450012405945,.3722337652684309,.0508854181775678,-.35886815857743665,-.8543036182405586,-.5431451742148268,.3550562539706387,.4163516012301683,.1097676276443619,.0031094617237012487,.012467253683817481,-.13435478466038733,-.3025207327612856,.06422768024628195,.26667168729095614,-.26695175931487575,-.3907043501678708,.46272484969502237,.4478152924484996,-.02777275619946918,-.36406380803433314,-.36482553236919035,-.17145017383338396,-.002276856052904647,.19648856692552516,.19795501524240586,.11579620326491886,-.20236218758832794,-1.3218815146594056,-.8951012670691179,.9168572007614602,1.0573193754484274,1.0300227650328617,1.2681463254528202,.541997943301319,-.8182545342334215,-1.115889579299406,-.4889202414797142,.3701102983727497,.5255744145017802,.12007696462970571,.005387185536187444,.0980933520274576,.04581367667589274,-.13973686519943007,-.1315893019053164,-.41025099029328865,-.7830737855834251,-.4305805131944959,-.14586342722110873,-.20332028656079115,-.5099111638385512,-.22496834802938576,-.23147407593468516,-.0020062182884880236,.35659057442027225,.21055136817067865,-.09070865795318951,-.09323655583197665,-.39644071531856356,-.157600464897638,.8521709297040498,-.006060772398080865,-1.1445855838899712,-.40779542231222293,.5719233746736145,.38110042075214373,.18372151232217485,.4553455144848944,.44338161640444884,-.33392303093222925,-.300332511734043,-.018826279470074956,-.0031918185582147274,.016996498806762936,.19478439409652604,.1483942673498718,-.16993496725014728,-.25233000300477815,-.17163872305028913,-.1689625921408603,-.3504835591240217,-.566661171565308,-.043075182629207294,.46189562289598257,.12201955959263491,.048431387757678836,.1008273185138992,-.19670456422152316,-.1664202664475642,-.15046897531292064,.1609200706656915,1.4039223524989202,1.717887524118693,-.07985019381975775,-1.5066376684783904,-1.9250211671886128,-1.0545407692185655,-.5117674935366009,1.7285428258292277,1.5863083779089326,.24208315366337785,-.8883786039184965,-.8044978292356761,-.06304921898835014,.18072374426616816,.041279056588780935,-.12639978427416398,-.05841363818060028,.18149778190196758,.37146508613201623,.6000519754710418,.38887239681739694,.1152103935846736,-.0800815407939111,.7973754858062889,.6016467310372599,.13967291436025694,-.17870113794821088,-.40389823435739103,-.33510874790612805,-.06268274906423316,.04212518172009522,.2275017878236976,1.088358328162009,.679765186013865,-.6792087414350455,-.677698317996765,.007129765269377491,-.21574274789108602,.7334613749374814,.6988401131682075,.12589091429626179,-.6834849210005094,-.4128541028855074,-.18770950063360772,-.15148842977747803,.047869931187020834,.21018250411743153,.06876363937389554,.009840196421356001,-.019137710950301583,-.440142797947338,-.21656678437317,.36831896296176964,.3196548900379982,.24180664285441536,-.20287221126440233,-.5618143827987885,-.15470815549218525,.11910006502983214,-.0029256323011974715,-.04650506403640628,-.11603914651892111,-.1530756736046411,.4224212238432043,.15967260300989697,-.8389569177082798,-1.4824802915019837,-.3796952323863866,.8958313207579505,1.77383273304373,.8958313207579488,-.37969523238638764,-1.4824802915019843,-.8389569177082784,.15967260300989483,.42242122384320435,-.15307567360464003,-.11603914651892111,-.04650506403640602,-.002925632301197385,.11910006502983216,-.15470815549218528,-.5618143827987871,-.20287221126440275,.2418066428544156,.11521039358467118,.36831896296176875,-.2165667843731702,-.44014279794733774,-.019137710950301947,.009840196421355883,.0687636393738958,.2101825041174313,.04786993118702068,-.15148842977747892,-.18770950063360678,-.4128541028855055,-.6834849210005076,.12589091429626098,.6988401131682093,.7334613749374853,-.21574274789108297,.00712976526938085,-.6776983179967644,-.6792087414350481,.6797651860138616,1.0883583281620088,.22750178782369845,.04212518172009507,-.06268274906423292,-.33510874790612777,-.4038982343573906,-.1787011379482107,.13967291436025678,.6016467310372583,.7973754858062901,-.0800815407939108,-.35048355912402274,.38887239681739855,.6000519754710422,.3714650861320155,.18149778190196694,-.058413638180600004,-.12639978427416418,.041279056588780526,.1807237442661683,-.06304921898834956,-.8044978292356768,-.8883786039184968,.24208315366337824,1.5863083779089293,1.7285428258292255,-.5117674935365991,-1.0545407692185644,-1.9250211671886148,-1.506637668478394,-.07985019381976269,1.7178875241186904,1.403922352498921,.160920070665691,-.15046897531292144,-.1664202664475644,-.19670456422152255,.10082731851389957,.048431387757679,.122019559592635,.4618956228959828,-.04307518262920681,-.566661171565308,-.1458634272211089,-.16896259214085926,-.17163872305028846,-.25233000300477826,-.1699349672501478,.14839426734987166,.19478439409652576,.016996498806763023,-.003191818558214667,-.01882627947007429,-.3003325117340433,-.3339230309322298,.4433816164044498,.4553455144848962,.18372151232217931,.3811004207521446,.5719233746736119,-.40779542231222243,-1.1445855838899728,-.006060772398081642,.8521709297040503,-.15760046489763638,-.39644071531856373,-.09323655583197697,-.0907086579531898,.21055136817067863,.3565905744202728,-.0020062182884879754,-.23147407593468516,-.22496834802938495,-.5099111638385512,-.20332028656079207,.46272484969502153,-.43058051319449625,-.7830737855834261,-.4102509902932877,-.1315893019053165,-.13973686519943013,.04581367667589293,.098093352027458,.005387185536187404,.12007696462970524,.5255744145017812,.37011029837274845,-.48892024147971336,-1.1158895792994052,-.8182545342334215,.5419979433013187,1.268146325452819,1.0300227650328604,1.0573193754484311,.9168572007614638,-.8951012670691166,-1.3218815146594056,-.20236218758832747,.11579620326491913,.19795501524240555,.19648856692552533,-.002276856052904625,-.17145017383338415,-.36482553236918996,-.36406380803433286,-.02777275619946951,.4478152924484997,.1635918716661118,-.39070435016787175,-.26695175931487636,.26667168729095614,.06422768024628231,-.3025207327612863,-.13435478466038722,.012467253683817804,.0031094617237012916,.10976762764436168,.41635160123016834,.35505625397063934,-.5431451742148266,-.8543036182405604,-.3588681585774384,.05088541817756769,.3722337652684316,.9719450012405919,1.5206479363861465,.6838532144823418,-.9039950447662684,-.49752310636725033,.09005737829603698,.14314060902527884,.056872171173512,-.09481240289501319,-.08195216613405086,.1707604435629816,.09256469643454024,-.36468827084356803,-.26140872283435806,.2718406016339017,-.37646529147307173,.15522942660639114,.45149640843334826,.009446144474926697,-.25791041993690383,-.012042674487198701,.07502915725700196,.004472003676479042,-.038574904247242366,-.056918990576836755,-.10522429653700935,-.04471849441598096,.1769791405511515,.2781965194293311,.18834221718468852,-.2665809890749849,-.3947284775676717,-.28367021291499434,.12374069460012085,-.17537732067822176,.07952841509470168,.3602578373446047,.06348078027146788,-.09144565423759717,-.04806515147602373,-.06931980142573653,-.018985123518229702,.13499908156480855,.16977635036237826,.036248242700393465,-.14163512022800506,-.29852087241494996,-.4292211936011949,.4914271195058019,.428959329217034,-.4704746221922491,-.2554901396414107,.28368537020126877,.111226391640923,-.017679196255386387,.04787944616888607,-.046183226771098616,-.2627215999609295,-.17295292843566987,.39877140482842616,.5945657163530781,.30440943973074525,-.12412531843683972,-.49035943457716313,-.3807436086745018,-.4933460399621818,-.40581229446604117,.47466547775213147,.37439919009614836,-.09068659393937563,-.13656793547637694,.06099891032465957,.17006681845286384,.013506411710477128,-.37733114800401446,-.37999327914266845,.532559619389618,.4886542228076744,-.44865243467955757,.31064795509136994,-.5021838884925864,-.5707680731068852,.2793101223093242,.6111643517130577,.12811225495378684,-.2106196145699303,-.07062229032498564,.09601288712563749,.0715999911173376,-.09808540773595104,-.12973084349572186,.10213744987583084,.21331216355051105,.10654247281867847,.06473581323996898,.009511483946181471,.013183667319477904,-.3166768587738553,.008404233415462621,.1626410940258709,-.02258793083641217,-.13572606372513854,-.009840446283874853,.10611595375861864,.162643841772672,.16667582025681238,-.2588695664648914,-.26933425983580034,.0469469264117942,-.09959261069001364,.20053594173979666,.4618049191807078,-1.3337649932785616,-1.052325769700115,.9601069808302595,.835435845818432,-.20754469441764875,-.1923710341803828,.025396859515452976,-.04151687435317712,.013018358464219362,.11737705239518428,.076566684841017,-.2528547956358843,-.37861030355575326,-.2095508102885513,.13643782704324786,.31252919184011235,.1354185186527376,.14506301721613746,.2226801182957635,-.17300527880436414,-.30055389900341645,-.04384966598819714,.1343567710878917,-.08803912681404781,-.32008851183583126,.0044403719443063165,.8831199054956711,1.179841626749716,-1.0527125117724856,-1.2522772114725254,.46274052021248885,.05094713347687782,1.4639339636380404,.732701602475446,-1.4706959472537806,-1.2014518968451935,.5891693947304912,.655074727336777,.23269603050324741,-.25014860441221576,-.26341476824800797,.14566519323380028,.24344265380915459,-.2199420760366726,-.45028623286649283,-.2083888249327452,.08370176736305028,.3155266824029228,.08891377992394488,.46145186677272854,.2622813962834421,-.28220471587289875,-.2780694670329298,.11584743671788453,.12672156371020837,-.255224605041607,-.35217802522066505,-.302531275984517,.9824320425486291,.5001721083381978,-.694202119374378,.2344198558506889,.3028014207682505,.2247182592065364,2.8441511789848586,2.067432690018742,-2.428788126866812,-2.324960087766698,.561364175410678,1.172123667207516,.30792957356810535,-.20060216516957047,-.2039622085642748,-.11254516916626582,-.09925433838142367,.0999382455864435,.34148146887082625,.37818604838169406,.06121534900576046,-.4102926850933292,-.22870850340942214,.22892611971691548,-.037177619339376564,-.029078632696622427,.17688857701463057,.13452976853580567,-.19554309636095565,-.05406455321306663,.2927342443853019,.609444275899516,-.9866715309218846,-2.2202952003703764,.737764401772501,2.3784795387427535,1.367925664414688,-.9460041010371839,.3603087555803301,1.9471218128812944,2.9672746843849187,1.0355627592914098,-1.3047927124000192,-1.068641183488414,-.5210515711382051,.21418689978013775,.30901136312888583,-.2672861314212727,-.5482282895418323,.1487167492655953,.8994609853704585,.9239181288868997,-.043145833390572444,-.7338756447157117,-.32304619466454804,-.7586499302584186,-.6389127834052369,.24878996343187765,.6179734700494102,-.0443950942776714,-.4372728333047815,.06406726571926905,.9845068510873982,1.1680212024537535,-1.0558844683361719,-1.5261742763882244,2.813195259388213,2.9516513032863356,-.8587251724417782,1.2343577579270646,-1.168162696807738,-2.8717730703729356,.024916786279243767,3.1701479989789867,-.0707698923320799,-1.5465072446477184,-.7309405549179918,.2897566078397231,.45136614923079016,-.016338923407765823,-.24231535965414835,.02752992024775208,.19963817528636058,.22718444978554045,.37902224678366964,-.13876096422777742,.06696188391789835,-1.213012564057544,-.5525644950003183,.30546257655082465,.3691960823964435,-.1941382585399454,-.14740895498043313,-.09284792777273304,-.32927583863381676,-.6843753289544129,.4902123306031531,3.0170447718709372,1.1591938584292596,-2.033139395444753,.2534556123690153,2.026988327725381,.6337650914909212,-2.553764166601033,-3.0736342072317178,.6085771131287496,1.4137393979172737,.7198133190370002,.1454266230078038,-.03226275117308411,-.026106440237006333,.15279475225563396,.4726936015678312,.11186355371520969,-.6369785190090855,-1.0984488703050919,.41915906104063416,.6867256986941827,.009238574633352287,.16931894270710687,.854452490029369,.25108420491885,-.35168293029190173,.029936824487282226,.42730242898842274,-.0539157766958862,-.7361266762847285,-.9630540034089693,.9309318199522789,2.0122812700890154,-3.5314332372596846,-3.5895244227646144,2.8187898937144658,2.015210638832999,.5889816141314536,-.03360837494574907,2.3400266438502024,.5420001169208618,.7236482520664508,1.1960027291694086,.9156200895039953,-.15452787333937676,-.42993665457742386,.1534378810243246,.6051281166939976,.024322257871818742,-.6834910062539612,-.9769818787642004,-.09348594752755465,-.36088426941083557,-.27220544444672085,1.1189080727093528,1.2148708003194422,.08745222381708102,-.5144397631994656,.029355734210916126,.4450224337272568,.0413009049676994,-.13502805229016995,-.12851357573552075,.8888018554921056,1.2207493971968146,-.5214856856793176,-1.3363494489312078,.8561113487865303],bottom:{real:[10965.975170394304,21271.915267962257,3528.270305161191,4104.475680586438,1601.061604218882,1022.7399974894073,557.8011375076204,282.8223052278124,145.15707521660474,105.9441201571383,59.01270726666721,44.66962843244353,36.50168205465414,28.529134449096524,21.777099980382825,18.33532892478512,16.253545459923078,18.33532892478509,21.777099980382847,28.529134449096492,36.50168205465414,44.66962843244357,59.01270726666728,105.94412015713864,145.15707521660474,282.82230522781276,557.8011375076204,1022.7399974894074,1601.0616042188824,4104.475680586443,3528.270305161191,21271.91526796226,12599.263825927621,3215.125406898348,5397.542249875984,1626.8549963375583,805.20630634633,515.1445920064424,359.3048107396736,212.4360242127799,110.43978615629422,81.30134061470001,50.82057050163526,41.19265124993172,32.936640633650484,26.68113372408087,18.01921088871573,14.766368476202661,15.422836018027418,15.990808141800954,20.022228188848842,26.27649582961226,35.717232769261116,41.8476776201261,54.32038790827515,97.51889627249736,133.8729941689642,238.43595357759855,456.937693043428,711.6655040473073,1144.8252089743219,1902.8385884755523,5206.768847980471,3622.968497491081,13155.61342681755,3416.743642914499,2812.4738667722154,1400.147559944327,383.1327908328127,252.15177845425933,197.2081578118225,171.5996021022252,82.27535767773409,60.48297276194193,40.77747888409448,35.028553697203044,28.877176436297923,21.966647147933095,16.37186621979068,15.053935075225828,14.23277610579999,14.86631528459676,18.218896084560566,25.18211951926569,33.82172230790013,38.32041357894052,45.570220260185515,72.05947971074444,97.66011960899296,168.65094690401955,268.62846926573025,329.42984018623156,467.75549674428515,1002.4311488284067,3554.141832934508,1764.397059903687,4621.958329476014,1569.7087860062477,1388.3341571422952,628.3710133483888,414.07061143445827,168.53157442290524,137.2795663029475,102.11362429348972,55.491719795512424,49.07312675198977,36.06338914589339,30.634459542886617,24.21678240907495,18.667040937787934,14.56741780053745,12.905268434713205,12.868626938575844,13.09593232648609,16.679039087380332,21.80969609662603,29.753917874884348,36.82782495592035,38.93474335143194,57.66833983826888,69.64196105008443,131.28843074347486,180.68252449032624,169.4404494972173,350.7497362638206,497.0283471987083,1746.1261590593115,796.9978384313032,3103.247947012358,1415.2337173839596,752.8181434617662,549.3430172736586,201.53841636766998,154.61036627522753,104.58138455482165,77.61878122511897,49.39208796429236,44.90232542624743,31.105878831006294,25.236762604525154,19.175053589853054,16.38453446468991,12.823063914611339,12.04793661480726,11.554737628486025,12.534926448772453,14.323695266188452,17.7802478368872,24.19149294587787,28.8430939532521,32.76770304982415,43.78366744373352,51.550546699271386,70.69918414080949,109.08321361427502,136.28687846912635,199.77708080210388,376.3268036983547,796.8346738354645,571.9147135830053,984.4104977034889,694.1875208097182,999.699295327579,367.7407391739818,338.97998181689366,133.72435362068052,109.5985079627268,89.93894507002496,49.03950825563833,36.109063293014415,25.98394571698211,23.01577460187165,16.882299112940213,14.591336257090045,11.32667094148311,9.91803607895827,9.675396596561606,10.57555888797221,12.046190961831451,14.768605661776913,18.648763248771505,21.576487249184964,27.01336113453004,36.90808241150531,45.645009020283105,60.83763087499848,99.37203234809671,111.28266970072299,252.63182137130968,273.926302788315,775.2357561437575,815.8507483722518,1655.1106419436521,1107.4422783913506,474.0637368651835,355.64805874163005,199.11678861892517,123.46347336694488,65.89640987180859,68.9184031909375,38.94319091920272,28.774499596319636,21.28650512309976,17.663953414249985,14.114074884510726,11.879784189493673,10.039166730615968,8.352171962934644,8.481459647539134,9.044947675010041,9.851297965928488,12.153630271582001,15.23168574488512,19.43724787739196,22.710514050850847,28.755794586161894,38.618352638886485,59.94224159872691,92.99787235795233,88.11178367375271,166.94308947555163,243.7977381142022,532.1046830802669,428.26170612042944,835.1438949224898,575.8460581748905,602.7894552112467,339.5769375590513,168.11833297683242,117.99279203678798,52.58663979325557,42.04789512862838,28.318592567301817,25.001453363505657,19.91641866758216,16.823078359396845,11.65888462925604,10.364401595593858,8.857362797886989,7.417387126462952,7.268151549939036,7.591532342124986,8.68073406208321,10.378269159275604,12.701378035616356,16.292785679101375,18.804030398726262,23.560923080173954,30.503495373532754,45.810504396910375,65.22952205439695,65.63948243081862,177.29565831054776,166.70872880265193,491.9902921130938,512.6723598171106,747.4531380999794,645.9614121973725,307.54977114778814,298.3600026574555,105.95282903225828,85.56711318209764,44.67237632428323,40.22658343389921,25.615021546435344,22.144491394300847,16.131654569456256,13.397071796412417,10.408828566613494,8.959195731352803,8.060438045250994,7.044206041178096,6.2883229388812,6.849683198285668,7.336687105800447,8.471773073333933,9.981477711221785,13.121694879148574,16.902165529440683,20.643784740763845,24.153222030769193,29.725858725465727,41.89642103755399,52.63093434695396,103.5859123323665,116.76781276597193,376.64744495733714,306.9319583240522,356.4623881053826,374.9036662854522,271.63698834940317,203.1516297981749,85.2960773992297,77.6496894667393,35.9182728161496,33.069491090524735,22.605820220395913,17.296816509483932,13.342699317421832,11.640978884779956,9.358697524191154,8.262307462508558,6.606585163220882,6.282786363296524,6.074423827911893,6.35823420109471,6.825296696781553,7.85560920629414,9.320922420319578,10.848369664421165,14.056179340078513,17.79254078513364,21.540972163896267,26.80393810368368,40.50313838179877,43.285550133972045,91.69188933524559,100.98276829758987,225.59390630676836,290.0678303886524,373.60823131669014,414.2242296987675,141.37671573357548,158.9032156570893,63.8376618794191,61.993039771960156,32.58856204913453,28.668162298507095,18.42640414438573,14.73582197546479,11.992469004096597,11.399293029930492,8.716399906802325,7.228966710134401,6.590688139850574,5.747269590602461,5.647299069353268,5.877757076959593,6.402409857819254,7.440565058022519,8.459976987008757,10.256048021590846,12.060831155359036,13.78515192510575,18.659998164390426,22.92174482648044,31.905227459883474,34.302795951832735,59.88041168976375,69.97104518096435,160.24793865518117,163.529792038828,147.83029120770976,178.6357867835558,118.15132417284869,114.19776495947795,53.37529604883215,57.17788409367902,32.93952944330524,24.968491799996325,17.430516204833694,13.433899198972929,11.836714579435053,10.548598460428181,8.048654617107779,7.118788189137296,6.459466055721909,5.815995287839976,5.476779403837907,5.390870150457815,5.897620999662963,7.130183113234809,7.567583442818569,8.751706141695365,11.338462673842365,13.133124938105077,16.059093761394507,18.84909782595904,29.651622179353478,34.09934210997649,58.70039936028965,65.26168153184753,99.21490924079085,146.35353694510258,121.37679122991287,165.7662438285251,77.65397407030467,91.33845333135417,44.07807549608674,44.566220734037245,27.02661422235957,22.147051076612073,15.399396116974053,12.432895564123392,10.640074418564296,9.327629874970073,7.579120650020736,6.782878982283792,6.181608759378763,5.669281171081803,5.1651813219751155,5.331749264880161,5.598146109324349,6.405714664558293,7.250524365147535,8.420991301858747,10.969854167863348,12.153630713859068,14.766764339656312,18.099354774134348,25.326013884328763,29.78594982984153,46.42483139190817,52.6158598873048,82.5732699993794,99.67630407007451,86.64007882892724,116.36860702141186,64.2413414100685,71.7426930539707,38.10988368760168,36.92682714597829,25.897290737678322,19.27508038337473,14.749844663752917,11.485010388879966,9.457664753967833,8.892716223761346,7.439577865966992,6.044433548094154,5.718208469162825,5.055793512094397,5.076045779069242,5.2089717500439345,5.773522000047463,5.940673265368043,6.74592757770696,7.820577383583708,9.983530512325348,11.402400865496325,14.118008059701465,15.687873342054864,23.860535436216686,29.003043185839516,40.145342185017675,49.33744888297236,59.017178205425914,84.30064306313226,70.16096453300412,106.14414492511058,57.34336460557286,60.09265217204113,35.03516422689137,31.196728233049463,22.848135981998073,17.280291997569737,14.215425049471765,11.487894696175578,9.201961745991776,8.157670273889595,7.473154498786378,6.023004288063756,5.630001966377492,5.244985217585088,4.894418784331649,5.179488529048513,5.4428139254674495,5.986696633549787,6.498853466702137,7.016105928877679,9.166209160233421,10.540688253938185,13.221652899667433,17.448751090247555,21.405199921620568,24.44364423367417,34.565403798719835,43.06493229041134,53.89676402349043,75.33061524900204,57.13904885051626,75.07127881612149,44.304162032217924,48.09109453256169,33.4913106785217,27.211025020176507,22.45352109297041,17.428281520682297,14.160857290751922,10.592079486422294,9.200167302833043,7.56611662430878,6.533568984734624,5.807359327564373,5.788062101896725,5.353907494597589,5.397813266857056,5.244731675823039,5.4735425621066245,5.861789820088422,6.537580606133601,7.563460066907533,8.841638044639843,10.50698673124036,13.949036764622399,16.252252028090993,22.019876112374043,25.162704768394917,31.578176229468394,41.77149318686092,42.95593868799199,69.85865190644714,50.780163528630226,74.07751021630408,43.697387961361706,40.315818737884314,29.770652812772006,26.340522851312056,22.034594395520614,16.748599325796118,12.84551628454659,10.52499564475608,9.245501861755603,7.487136435944887,6.8277975203922185,5.664601698004479,5.288115481792067,5.249838354768366,5.18495120033414,5.249838354768366,5.28811548179206,5.664601698004477,6.827797520392221,7.48713643594489,9.245501861755608,10.52499564475608,12.84551628454659,16.748599325796118,22.034594395520603,26.340522851312063,29.770652812772006,40.31581873788432,43.697387961361706,74.07751021630408,57.13904885051623,69.85865190644714,42.95593868799195,41.77149318686094,31.578176229468383,25.162704768394924,22.019876112374046,16.252252028090997,13.949036764622383,10.506986731240358,8.841638044639838,7.5634600669075285,6.537580606133598,5.861789820088424,5.4735425621066245,5.244731675823037,5.397813266857056,5.353907494597587,5.788062101896723,5.807359327564372,6.533568984734625,7.56611662430878,9.200167302833039,10.592079486422293,14.16085729075192,17.428281520682305,22.4535210929704,27.21102502017652,33.49131067852169,48.091094532561655,44.30416203221794,75.07127881612153,70.16096453300408,75.33061524900202,53.89676402349037,43.06493229041134,34.565403798719814,24.443644233674185,21.405199921620568,17.448751090247544,13.221652899667435,10.540688253938189,9.166209160233418,7.01610592887768,6.498853466702137,5.986696633549787,5.44281392546745,5.17948852904851,4.894418784331645,5.244985217585087,5.630001966377489,6.023004288063751,7.473154498786376,8.157670273889595,9.20196174599178,11.487894696175564,14.215425049471762,17.280291997569748,22.84813598199807,31.19672823304948,35.03516422689138,60.09265217204119,57.343364605572894,106.14414492511065,86.64007882892719,84.30064306313227,59.01717820542586,49.337448882972346,40.14534218501768,29.003043185839513,23.860535436216686,15.687873342054866,14.118008059701463,11.402400865496327,9.983530512325352,7.820577383583712,6.745927577706958,5.940673265368044,5.773522000047464,5.208971750043933,5.0760457790692435,5.0557935120943975,5.718208469162822,6.044433548094156,7.439577865966992,8.892716223761349,9.457664753967826,11.485010388879974,14.749844663752919,19.275080383374736,25.897290737678308,36.92682714597828,38.109883687601666,71.74269305397073,64.24134141006853,116.36860702141172,121.37679122991284,99.67630407007445,82.57326999937942,52.6158598873048,46.424831391908185,29.785949829841556,25.32601388432877,18.099354774134348,14.766764339656312,12.15363071385907,10.96985416786335,8.420991301858754,7.250524365147534,6.405714664558296,5.598146109324348,5.33174926488016,5.165181321975117,5.669281171081803,6.1816087593787605,6.782878982283792,7.579120650020738,9.32762987497008,10.640074418564305,12.432895564123386,15.399396116974053,22.147051076612065,27.026614222359573,44.56622073403726,44.078075496086726,91.3384533313542,77.65397407030473,165.76624382852506,147.83029120770976,146.35353694510263,99.21490924079094,65.26168153184756,58.70039936028967,34.0993421099765,29.651622179353467,18.84909782595905,16.05909376139451,13.133124938105075,11.338462673842358,8.751706141695356,7.5675834428185675,7.13018311323481,5.897620999662965,5.3908701504578165,5.476779403837908,5.8159952878399785,6.459466055721913,7.1187881891372955,8.04865461710778,10.548598460428188,11.836714579435059,13.433899198972929,17.430516204833697,24.968491799996333,32.93952944330524,57.177884093679054,53.37529604883214,114.19776495947798,118.15132417284869,178.63578678355586,373.6082313166902,163.52979203882796,160.24793865518112,69.97104518096437,59.880411689763726,34.30279595183276,31.905227459883484,22.921744826480438,18.659998164390412,13.785151925105746,12.060831155359033,10.256048021590846,8.45997698700876,7.440565058022521,6.402409857819259,5.877757076959593,5.647299069353267,5.747269590602462,6.590688139850567,7.228966710134401,8.71639990680232,11.399293029930499,11.992469004096606,14.735821975464788,18.426404144385724,28.66816229850712,32.58856204913452,61.993039771960206,63.83766187941909,158.90321565708933,141.37671573357554,414.22422969876766,356.46238810538273,290.06783038865245,225.59390630676842,100.98276829758977,91.69188933524562,43.285550133972016,40.50313838179875,26.803938103683674,21.54097216389627,17.79254078513364,14.056179340078506,10.84836966442117,9.320922420319581,7.855609206294141,6.825296696781557,6.358234201094712,6.074423827911892,6.282786363296521,6.606585163220883,8.26230746250856,9.35869752419116,11.640978884779955,13.342699317421838,17.296816509483932,22.60582022039592,33.069491090524764,35.9182728161496,77.6496894667393,85.29607739922973,203.15162979817504,271.6369883494035,374.90366628545223,747.4531380999794,306.93195832405206,376.64744495733714,116.76781276597193,103.58591233236646,52.630934346953964,41.896421037553985,29.725858725465734,24.153222030769193,20.64378474076385,16.9021655294407,13.121694879148574,9.981477711221796,8.471773073333932,7.336687105800451,6.849683198285666,6.2883229388812,7.0442060411780965,8.060438045250994,8.959195731352803,10.40882856661349,13.397071796412414,16.13165456945625,22.144491394300825,25.615021546435344,40.22658343389921,44.672376324283235,85.56711318209764,105.95282903225828,298.36000265745565,307.5497711477882,645.9614121973724,835.1438949224898,512.6723598171105,491.99029211309386,166.70872880265185,177.2956583105478,65.63948243081857,65.22952205439694,45.810504396910396,30.50349537353276,23.56092308017397,18.804030398726255,16.29278567910137,12.701378035616358,10.378269159275604,8.680734062083221,7.591532342124985,7.268151549939035,7.417387126462958,8.85736279788699,10.364401595593863,11.65888462925604,16.82307835939685,19.91641866758215,25.001453363505686,28.31859256730182,42.04789512862841,52.5866397932556,117.99279203678799,168.11833297683248,339.5769375590513,602.7894552112468,575.8460581748901,1655.110641943653,428.26170612042955,532.1046830802673,243.7977381142021,166.94308947555166,88.11178367375268,92.99787235795235,59.94224159872695,38.6183526388865,28.755794586161898,22.71051405085084,19.437247877391968,15.231685744885109,12.153630271582,9.85129796592849,9.044947675010038,8.481459647539134,8.35217196293464,10.03916673061597,11.879784189493675,14.114074884510734,17.663953414249978,21.286505123099776,28.77449959631964,38.94319091920273,68.9184031909375,65.89640987180854,123.46347336694488,199.11678861892523,355.64805874163045,474.06373686518356,1107.4422783913496,984.4104977034884,815.8507483722518,775.2357561437576,273.926302788315,252.63182137130985,111.28266970072293,99.37203234809674,60.83763087499851,45.64500902028311,36.90808241150528,27.013361134530022,21.576487249184932,18.648763248771502,14.768605661776908,12.046190961831442,10.57555888797222,9.675396596561608,9.918036078958266,11.326670941483108,14.591336257090044,16.88229911294021,23.015774601871662,25.983945716982106,36.10906329301441,49.03950825563831,89.93894507002491,109.59850796272681,133.72435362068057,338.9799818168935,367.7407391739821,999.699295327579,694.1875208097182,3103.247947012359,571.9147135830058,796.8346738354647,376.32680369835435,199.7770808021039,136.2868784691263,109.08321361427504,70.69918414080944,51.55054669927138,43.7836674437335,32.76770304982415,28.843093953252076,24.191492945877858,17.780247836887195,14.323695266188444,12.534926448772453,11.554737628486032,12.04793661480726,12.823063914611335,16.384534464689928,19.175053589853043,25.236762604525165,31.105878831006304,44.90232542624745,49.392087964292365,77.61878122511901,104.58138455482161,154.6103662752277,201.53841636767004,549.3430172736587,752.8181434617663,1415.2337173839583,4621.958329476013,796.997838431303,1746.126159059312,497.02834719870856,350.7497362638207,169.44044949721726,180.68252449032624,131.28843074347478,69.64196105008445,57.66833983826884,38.934743351431905,36.827824955920356,29.753917874884323,21.80969609662602,16.679039087380357,13.095932326486084,12.868626938575838,12.905268434713202,14.567417800537427,18.667040937787927,24.216782409074952,30.634459542886628,36.06338914589344,49.07312675198979,55.49171979551245,102.11362429348968,137.27956630294753,168.53157442290532,414.0706114344582,628.3710133483893,1388.3341571422957,1569.7087860062475,13155.613426817548,1764.3970599036886,3554.1418329345083,1002.4311488284069,467.75549674428527,329.4298401862315,268.62846926573025,168.6509469040197,97.660119608993,72.05947971074437,45.5702202601855,38.3204135789405,33.8217223079001,25.182119519265683,18.218896084560566,14.866315284596766,14.232776105799996,15.053935075225828,16.371866219790657,21.96664714793311,28.877176436297923,35.02855369720304,40.77747888409454,60.48297276194195,82.2753576777341,171.59960210222522,197.20815781182262,252.15177845425956,383.1327908328128,1400.1475599443277,2812.4738667722154,3416.743642914498,12599.263825927617,3622.96849749108,5206.768847980475,1902.838588475552,1144.8252089743219,711.6655040473072,456.93769304342817,238.43595357759864,133.8729941689642,97.51889627249736,54.320387908275166,41.847677620126085,35.71723276926113,26.276495829612255,20.022228188848846,15.990808141800953,15.42283601802741,14.766368476202668,18.019210888715723,26.681133724080873,32.93664063365048,41.192651249931764,50.820570501635224,81.30134061470001,110.43978615629425,212.43602421277993,359.3048107396736,515.144592006442,805.2063063463305,1626.8549963375588,5397.542249875985,3215.125406898349],imag:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},imag:[0,-.14902020441330027,-.6771049511087865,-.6881801226004951,.029443579937724847,-.2009487184993747,-.6879124555252177,-.7282781273126446,.07806834448451422,.4131337534576373,-.11919960000393952,-.71935556472959,-.033994075615829664,.7931027181561068,1.0485412757882202,.3196345958384655,0,-.3196345958384507,-1.0485412757882226,-.7931027181561068,.03399407561582938,.719355564729591,.11919960000393916,-.41313375345763476,-.07806834448451422,.7282781273126419,.6879124555252186,.20094871849937485,-.029443579937724836,.6881801226004943,.6771049511087863,.14902020441330027,1.1657398208090677,-.38761332589064507,-2.5163414932492363,-2.584742801901222,1.7065268205659907,-.2665994714188303,-1.7612103334384195,-.7282210101552707,.12179041297535136,.18687402270680736,-.12109853545440831,-.3840196693078635,-.08833568066008249,.055468788382487,-.08864931978023959,.10356786689233256,1.1808955745571665,-.06277980908266619,-.9140020299055188,-.6085517196782837,.009493092452206031,.20081299805530148,-.06803304935655391,.012577652358335469,.033553295747053846,-.136297955147779,-.5532247620533317,.16665348831683371,1.6347625123407883,-1.2112325279336729,-2.7678867797785314,-1.1631005581009268,.5332121226822898,.6577742402610275,-.00595950898349003,.6433355803263732,-.013400706408967681,-1.6693935905986217,-.06346970667888305,.5458080613326616,-.0655904672404718,-.42286579957171455,-.20235216162881253,.49440559267811185,.3198533678523926,-1.00209734161358,-.9461454533592136,-.3211257206364784,.6718897424030703,.12355783613973209,.2935506311844692,.6379526967108269,.21171161290294277,-.4065449504972369,-.14885884441008196,.40518645419156046,.25176669622887876,-.4761471503847452,-1.2694305395629708,-.5011524591754494,1.737935918543955,-1.510414844880989,-1.8127000456147733,1.3511857905116147,-2.224881474580971,-2.9260010474168467,2.898822773747269,2.4923883909800804,-1.3958450829260902,-.08227870572481594,2.2133069351689647,1.0491520212286578,-.07984000257837154,-.4959026067283978,-.029646930580498103,.7887217790603109,.19612727406574681,-.7509604238103976,-.6144275627847797,-.34589242057405933,-.5582798450826452,-.05763904184756616,.560006725096047,1.1779553213485192,.34297063731481625,-.31700999971207366,-.05695259840849858,.1857688253715537,.05951539896115252,-.23070889488422375,-.06728966753341102,-.45052222849242474,-.04289502798083107,1.6598740406764962,1.7912379411122816,-.11630227482832883,-2.003866342355487,-2.7192489258221713,.9217002223108024,.9938637091534104,-.45711185122492165,.9753935158802068,.30440417133895387,-.07637828779385789,.10477257582077601,.07890032367339793,.2630152461937153,.03179438244924934,-.11240615902951592,.23783868068434,.44775143101136344,-.20105686300455952,-1.0552137607230396,-.5140138351292934,.05452601160980478,-.026488236207787865,.1659074022987267,.18522424653870803,.04631481008656916,-.24537254610227913,-.2848146466957044,.34829742340973674,1.0879631977925206,1.2627265059936403,-.49634217295171235,1.3751434251570953,2.5572924798905374,-2.3835279088157275,-.34512363817546704,.04627556386614428,-.28363975810469,-.2387205493926067,1.183676666248849,.7304559467631897,-1.0994633527727609,-.5690089037921002,-.052741079187555495,.3659628798478425,.15532358639646346,-.36091327743771645,-.19067540763230895,.7146228325692489,.608575991566829,.05141114827787543,-.203915388423597,-.259541089008346,-.5391894844616433,-.5935512086649235,-.13740024164207204,.43579638717256186,.22502803407041108,-.23772213393956157,-.22688331070114534,.4272753716671274,.47834844059991255,.32734133863952164,-.523614616283883,-.20363203779578987,.7102203218191872,.2819659388244356,1.379252647142985,1.5283654352438392,-1.3044681939973228,-1.1436891608956035,1.3490121369222494,.7192221183195878,-.27032254521482335,-.33653973458463504,-.15391447881479364,.12480482561109964,-.053989084045087433,-.18576918773324888,.07719795877991671,.2969964153130992,-.11903191000719174,.22681336512596068,.5452048910885546,.04099051159893126,-.2065372892038826,-.3708184505314888,-.07530964105542165,.12159159821884764,.1435041734896,.04316576368979115,-.05797713873788352,-.1379293882828701,-.37919334928832643,-.4845628881468578,.9788775955253505,.57420771517449,-1.1922323352837048,-.13841464698630696,.7604729654567205,.5836794449508778,-.03481797552070858,.18370340800622625,-.03129254257272888,-.06731871263304186,.33696607725615524,.05414244352918586,-.020415046981723958,-.07443570829442772,-.05732302224609874,.14754486034992467,.17049224676424324,-.3543171445411326,-.378008901790788,-.08822033360935463,.2051962406454232,.17151350221764664,.17699487940227424,.19591419189057305,.006519915797770923,-.1674811218328473,-.10967941676700359,.13440132102674274,.06975527091560389,-.34407110156452,-.47647271020395277,.24778628953900186,.9488164718246461,.7144585253672119,-.6930071741015518,-.23252823659006602,-.701263275821727,-.7350871283456302,.7744103827743443,.8006307878577998,-.292113499691209,-.5026189787684557,-.15844491832687652,.10672884533820617,.08309617174683444,-.061219034404081496,.04160642779041589,.31036717878062553,.16259404663751506,-.36128817330809687,-.2937092963497004,-.3179547262684097,-.4515155411552858,-.033181026716305836,.2952295204907573,.48699666134020275,.18589909016841552,-.2294714118021266,-.20114354017885722,-.003121578634498275,.05962035574447012,-.08629332168254554,-.013702104296225414,.27636362870999703,-.2036751926813714,-.07182337562489778,.6539085309807176,.5793688562107911,-.08250732409662949,.0565651647003436,.3031303791042242,.04658092546615603,-.14205860955679683,-.10567626674414661,-.14942985439330783,.021649684970292335,.030697590171757046,-.022837521893794246,.04332280702741229,.15694334998636744,.01091806619852779,.020198601252688204,.2990216144257594,-.15020855085379564,-.40608170156430695,-.21661403238492213,.10933934038264595,.1999075728830931,.14959651238129035,.04709274666709186,-.040888308386862755,-.1125167716796989,-.04384568038568949,.15335701874304222,.24380570184994388,-.1171131305850218,-.5719525526021313,-.3727592825430122,.5223211056809565,.45087452742355255,.4539906764735704,.4510373698265433,-.2544564606102324,-.5467496726808392,-.08177577100669063,.2737673334004137,.1862560849451878,.012289477611188196,-.028787447589128854,-.05539734067338191,-.033006645910307206,-.3893684484392882,-.5905287698630661,.35206862979259157,.7597288297427168,.47741066022580114,.6179546287385225,-.010739694431020583,-.3036500767005257,-.7973446419382137,-.4001415247512849,.3574319787215245,.3354315904602904,-.04832410301584743,-.1196515677085014,.07349644489939297,.119532550238058,-.055918533770930395,.0274579890256498,-.08756550732642451,-.47798364115462866,-.30556827592707503,-.05352916552013606,-.06476254452780263,-.40460920017095653,-.121109915711457,.34242949885797147,.25707377311839885,.18878454879876447,.05963524828049447,-.042881345638875606,.08031730159298765,-.06666120918302967,-.7842696525024205,-.6720392514268617,.38802788881902983,.13118499909748943,.3117062095733994,.5189221145484694,.28497632977966614,-.6374756986952439,-.7857061642615054,-.55004558199035,.08146420972941341,.32078878775035424,.10057675741278467,-.03885695862020822,-.09381661425332505,-.12197711394968046,.1077321776114192,.5327930235222532,.49767840692700166,-.40074591616539607,-.4686202607911239,-.4734798835330848,-.38787976346044234,.002686406177698898,.3750647268903417,.15775363291879776,-.12070461118398887,.046341940929038844,.06976255535250009,.036760253935025015,.11153094686031426,-.23193620085952527,-.0253381640601482,.8371715863158414,.1406999181881844,-.8063601327776306,-1.117979830240589,-.5311691671859755,-.29647728355917563,.43255465109120794,1.0682488929022527,.7439367652619796,-.27653752308302104,-.4373663501014127,-.05194612651429091,.07548322178417509,.041517261114611535,.08969847644227011,.18582746405096062,.11108661545235869,.176359348909108,.26257982919312395,.014915731745956722,-.05159288325887455,-.15702165108916452,.26018009521205254,.10187767444835746,-.5266864552492494,-.19184365339748963,.12365061867406398,-.004046067218027323,-.10695443147688474,-.38062982787546124,-.23013531228214942,1.4911852257492946,1.8656257067805557,-.31189832297292175,-1.8409665915911073,-1.3523062385443718,-.5975807844991242,-.4109826389978809,.6447143450432765,1.2836469730056959,1.499792380953558,-.050007892106663135,-.7009792467291004,-.37676357011449496,.03959608957139379,.16672200998370845,.2761685112331568,.25535752279806784,-.25821883180569144,-.7164342307537069,-.2869241470876478,.19246225810939122,-.48949334565382685,-.6758600491934259,-.6007838939451839,-.1042403296189125,.3352692900092091,.41773479752161374,-.015233071039077716,-.23129559015563347,-.27890178606409965,-.3664416625012834,.5342153762970184,1.5124695265818406,.46952715514837384,-1.6086255934377758,-.5862728674979834,.2521262787687128,.8127432041920076,1.0066444599512538,.13589799436620603,-.5268122251551876,-.8003501444992921,.1717021427336503,.32102965848797577,.01529805589554756,-.009515217387663859,-.05852775349790857,-.2932538896452712,-.23187846370788526,.12261389073580377,.13365949638292357,.3455058405502281,.32834338818238823,-.6368165384637715,-.14332768166025622,-.05069903984927889,.07679936703286014,.6230423185882272,.1393487843808003,-.36565795334395523,-.22525673769874993,.058882171297733404,.45328032825037023,.6727851393373049,-.6293048991173013,-2.151487667311436,-.3838160654397216,1.7701780351745315,2.243458963698462,1.3655631816809142,.6771695579512921,.23622587273603302,-1.2645365769339125,-1.1592659817915987,.22681074823924935,1.053242102943924,.47375681144418214,-.017283859373080118,-.3185203640125341,-.42276437548587065,-.2085107233974252,.3253766310319703,.6780243308299491,.6422145570025669,-.1933438107424214,0,.9853475595572507,.9308283218741816,.09097573410973633,-.2354727825287765,-.42043029453907255,-.16156648245217306,.14891910968678568,.27252999755409263,.2180753750942956,-.1793267317851967,-1.3886930910143056,-1.2475969582391058,.8261768752194723,1.688041333210945,.9330767566055275,0,-.9330767566055286,-1.688041333210949,-.8261768752194756,1.2475969582391047,1.3886930910143054,.17932673178519704,-.21807537509429575,-.27252999755409263,-.14891910968678598,.1615664824521733,.42043029453907194,.23547278252877635,-.09097573410973595,-.9308283218741829,-.9853475595572504,.6368165384637743,.19334381074242313,-.6422145570025672,-.6780243308299505,-.32537663103196973,.20851072339742566,.4227643754858706,.3185203640125334,.017283859373080232,-.4737568114441822,-1.053242102943924,-.22681074823925124,1.1592659817916007,1.264536576933914,-.23622587273603313,-.6771695579512926,-1.3655631816809146,-2.243458963698462,-1.7701780351745346,.38381606543971747,2.1514876673114336,.6293048991173043,-.6727851393373054,-.45328032825037173,-.05888217129773353,.22525673769874915,.3656579533439555,-.1393487843807989,-.6230423185882269,-.07679936703285951,.05069903984927936,.14332768166025514,.48949334565382807,-.328343388182388,-.3455058405502295,-.13365949638292388,-.12261389073580344,.23187846370788381,.29325388964527066,.058527753497908265,.00951521738766379,-.015298055895547204,-.32102965848797627,-.17170214273365259,.8003501444992935,.5268122251551922,-.13589799436620179,-1.006644459951254,-.8127432041920105,-.2521262787687158,.5862728674979838,1.6086255934377784,-.46952715514837307,-1.5124695265818422,-.534215376297019,.36644166250128374,.2789017860640999,.2312955901556328,.01523307103907798,-.417734797521613,-.3352692900092092,.1042403296189123,.6007838939451835,.675860049193426,.051592883258874796,-.19246225810939102,.28692414708764713,.7164342307537082,.25821883180569155,-.2553575227980673,-.27616851123315733,-.1667220099837085,-.03959608957139386,.3767635701144942,.7009792467291001,.05000789210666385,-1.4997923809535563,-1.2836469730056956,-.6447143450432788,.41098263899788057,.5975807844991221,1.352306238544366,1.8409665915911118,.31189832297292347,-1.8656257067805575,-1.4911852257492944,.230135312282149,.3806298278754614,.10695443147688473,.004046067218027898,-.12365061867406386,.19184365339748918,.5266864552492498,-.10187767444835667,-.2601800952120525,.15702165108916435,.4734798835330851,-.014915731745956694,-.26257982919312345,-.17635934890910804,-.11108661545235819,-.18582746405096062,-.08969847644226998,-.04151726111461143,-.075483221784175,.0519461265142905,.43736635010141267,.27653752308302265,-.7439367652619783,-1.068248892902254,-.4325546510912091,.2964772835591764,.5311691671859761,1.1179798302405872,.8063601327776302,-.14069991818818398,-.8371715863158419,.025338164060147935,.2319362008595256,-.11153094686031419,-.036760253935025175,-.06976255535249963,-.046341940929038775,.12070461118398874,-.1577536329187975,-.37506472689034165,-.002686406177698734,.38787976346044295,.053529165520136666,.46862026079112395,.40074591616539496,-.4976784069270019,-.5327930235222539,-.1077321776114199,.12197711394968033,.09381661425332492,.03885695862020814,-.10057675741278502,-.3207887877503539,-.08146420972941326,.5500455819903488,.7857061642615059,.6374756986952453,-.28497632977966464,-.5189221145484681,-.31170620957339795,-.1311849990974875,-.3880278888190298,.6720392514268613,.7842696525024204,.06666120918302984,-.08031730159298785,.042881345638875745,-.05963524828049447,-.18878454879876405,-.257073773118398,-.3424294988579715,.12110991571145559,.40460920017095686,.06476254452780322,-.4539906764735712,.30556827592707503,.47798364115463,.08756550732642399,-.027457989025650414,.055918533770930486,-.11953255023805759,-.07349644489939326,.11965156770850158,.04832410301584772,-.33543159046028986,-.3574319787215247,.40014152475128417,.7973446419382142,.30365007670052546,.010739694431020585,-.6179546287385224,-.4774106602258017,-.7597288297427172,-.35206862979259274,.590528769863066,.3893684484392883,.03300664591030692,.055397340673382,.028787447589128854,-.012289477611188065,-.18625608494518778,-.2737673334004137,.08177577100669034,.5467496726808401,.25445646061023275,-.4510373698265435,.08250732409662907,-.45087452742355144,-.5223211056809562,.37275928254301144,.5719525526021314,.11711313058502268,-.24380570184994438,-.15335701874304256,.04384568038568964,.11251677167969909,.04088830838686265,-.047092746667091887,-.14959651238128985,-.1999075728830922,-.10933934038264552,.21661403238492188,.4060817015643057,.15020855085379528,-.29902161442575986,-.020198601252688145,-.010918066198527492,-.15694334998636708,-.043322807027412154,.02283752189379423,-.030697590171757067,-.02164968497029204,.14942985439330775,.10567626674414606,.1420586095567969,-.0465809254661547,-.3031303791042232,-.05656516470034452,.701263275821727,-.579368856210791,-.6539085309807172,.0718233756248975,.20367519268137155,-.2763636287099972,.013702104296225327,.08629332168254569,-.05962035574447012,.0031215786344983188,.2011435401788572,.2294714118021264,-.1858990901684156,-.48699666134020314,-.29522952049075735,.033181026716305816,.4515155411552858,.31795472626841,.2937092963496996,.3612881733080966,-.16259404663751492,-.3103671787806257,-.04160642779041598,.06121903440408152,-.08309617174683444,-.10672884533820629,.1584449183268766,.5026189787684556,.292113499691209,-.8006307878577997,-.7744103827743442,.7350871283456298,-.7604729654567195,.23252823659006566,.6930071741015513,-.7144585253672113,-.9488164718246458,-.247786289539003,.4764727102039533,.34407110156452003,-.06975527091560392,-.13440132102674238,.10967941676700353,.16748112183284758,-.0065199157977711844,-.19591419189057413,-.1769948794022748,-.1715135022176452,-.2051962406454232,.08822033360935438,.3780089017907874,.3543171445411323,-.1704922467642435,-.14754486034992517,.05732302224609858,.07443570829442787,.020415046981723993,-.05414244352918596,-.33696607725615474,.06731871263304255,.031292542572729155,-.183703408006228,.03481797552070776,-.5836794449508764,-1.379252647142985,.1384146469863056,1.1922323352837043,-.57420771517449,-.9788775955253504,.48456288814685816,.3791933492883263,.13792938828286982,.05797713873788359,-.04316576368979144,-.1435041734895995,-.12159159821884727,.0753096410554214,.3708184505314883,.20653728920388284,-.040990511598931294,-.5452048910885553,-.22681336512596068,.11903191000719161,-.2969964153130989,-.07719795877991693,.18576918773324919,.05398908404508724,-.12480482561109926,.15391447881479356,.336539734584635,.27032254521482346,-.7192221183195872,-1.3490121369222496,1.143689160895601,1.304468193997322,-1.5283654352438407,.345123638175465,-.2819659388244354,-.7102203218191857,.20363203779578934,.5236146162838812,-.3273413386395211,-.4783484405999118,-.4272753716671272,.22688331070114495,.23772213393956154,-.22502803407041136,-.4357963871725614,.13740024164207254,.5935512086649227,.5391894844616454,.25954108900834527,.2039153884235965,-.05141114827787376,-.6085759915668277,-.71462283256925,.1906754076323091,.3609132774377171,-.15532358639646357,-.36596287984784226,.05274107918755558,.5690089037920997,1.0994633527727615,-.7304559467631879,-1.18367666624885,.2387205493926066,.28363975810469044,-.04627556386614671,2.0038663423554866,2.3835279088157284,-2.5572924798905374,-1.3751434251570973,.4963421729517121,-1.2627265059936426,-1.0879631977925208,-.34829742340973796,.28481464669570433,.24537254610228046,-.04631481008656919,-.18522424653870898,-.1659074022987272,.026488236207788063,-.05452601160980553,.514013835129293,1.0552137607230383,.20105686300456052,-.4477514310113629,-.2378386806843401,.11240615902951644,-.03179438244924926,-.2630152461937155,-.07890032367339833,-.10477257582077593,.07637828779385818,-.3044041713389529,-.9753935158802062,.45711185122492154,-.9938637091534103,-.9217002223108023,2.719248925822172,2.2248814745809713,.11630227482833386,-1.791237941112284,-1.6598740406764991,.04289502798083219,.4505222284924236,.06728966753340994,.23070889488422444,-.059515398961152315,-.18576882537155384,.05695259840849844,.3170099997120737,-.3429706373148162,-1.1779553213485197,-.5600067250960489,.05763904184756634,.5582798450826452,.3458924205740594,.6144275627847795,.7509604238103975,-.19612727406574634,-.7887217790603105,.029646930580497943,.4959026067283963,.07984000257837147,-1.049152021228657,-2.2133069351689625,.08227870572481576,1.3958450829260909,-2.492388390980078,-2.8988227737472685,2.926001047416845,-.5332121226822898,-1.3511857905116138,1.8127000456147735,1.5104148448809913,-1.7379359185439534,.5011524591754516,1.2694305395629717,.47614715038474426,-.2517666962288789,-.40518645419156096,.1488588444100823,.4065449504972391,-.21171161290294366,-.6379526967108293,-.29355063118447033,-.12355783613972898,-.6718897424030705,.32112572063647804,.9461454533592134,1.0020973416135777,-.3198533678523926,-.4944055926781111,.2023521616288126,.4228657995717151,.06559046724047177,-.5458080613326622,.06346970667888246,1.6693935905986201,.013400706408968283,-.6433355803263732,.005959508983489861,-.657774240261027,-1.1657398208090681,1.1631005581009257,2.7678867797785287,1.2112325279336758,-1.6347625123407896,-.16665348831683333,.5532247620533326,.13629795514777876,-.03355329574705394,-.012577652358336237,.0680330493565556,-.20081299805530076,-.009493092452206593,.6085517196782809,.9140020299055148,.0627798090826695,-1.1808955745571674,-.10356786689233179,.08864931978023799,-.05546878838248612,.08833568066008227,.38401966930786247,.12109853545440752,-.18687402270680636,-.12179041297535122,.72822101015527,1.7612103334384188,.2665994714188308,-1.7065268205659894,2.5847428019012186,2.5163414932492363,.3876133258906464],height:32,width:32,top:{real:[28423.105313214044,28674.724231095144,-722.6936689654091,9225.77700647333,1497.6465357448014,760.0427897970139,247.10162746021342,151.72529893327805,-4.888488578182327,-16.133735393751934,-.1836089108012847,2.3500990684470797,-.3300546919437796,4.157147071353755,9.594359511231952,-8.862420389127427,-22.052590313243808,-8.862420389127442,9.594359511232064,4.157147071353741,-.33005469194377934,2.3500990684471894,-.1836089108015032,-16.13373539375151,-4.888488578182327,151.7252989332781,247.1016274602134,760.0427897970155,1497.6465357448021,9225.777006473334,-722.6936689654084,28674.724231095115,25390.1705034731,2752.5053486176007,-7213.002611204682,-848.381593265913,982.9551130913575,457.8614692220499,-46.17554600713012,-28.684822585718617,4.56126311269416,36.18092046564247,1.491875160093084,-21.191137754573024,2.8803824684767365,32.41413028080426,20.161840527236397,-4.019485893928758,-5.5658589086089485,-1.4949158508676244,-19.561354112987054,-17.95974857540964,.8687237458817322,25.323206346284437,8.334805217065067,-41.92694802148037,-20.68710908650486,218.3167491556907,546.498727940314,514.9954980598236,620.4953971180341,4452.692995979104,-174.9910396987696,2133.8618335997025,26666.27486022647,9631.082450060545,-10095.4436331661,-4944.527630255449,770.9709389498014,234.73611402062764,-189.92210588558362,-126.31904474729288,-4.435939812126877,25.844521173618485,1.2207482283869857,-12.318944408119624,7.250602885809199,18.769456353148023,2.7720670784771717,.13907690271807935,9.774013115613371,6.231350755825603,-20.01252582229142,-16.040469196891664,3.7834180501306807,18.113814308198215,6.962890514889754,-1.8812165005783674,-3.150784138478577,24.526337675319898,193.3623500499944,465.727943920867,284.66528985874095,-3081.106669433579,-9076.44005596586,1118.2132640961638,5705.150120804338,397.85150159824235,-2822.676868927594,728.4038194884191,1249.2695734137342,82.61625587807173,-93.95074834729898,-33.62354927517744,-5.152291191558482,-7.233818332133113,-7.001283565832134,11.310122449566075,7.397320750446726,-10.314744048939033,-17.670460817927417,.8641610868545724,-1.7856630822843305,4.963649694111696,3.78921831801803,4.35404793228046,.8191229861537248,-8.923947649473824,-.6361517895200606,26.029536485331942,20.179218397178587,-95.96403842194775,-279.426833105528,-11.991282367617261,1111.9285745591587,12.384349101876612,-5014.478081060262,-931.0231442918517,-2935.685284408914,-1215.29681800596,2222.056654286523,1545.4091719722733,-307.5827467643575,-163.25068439377958,122.1532745420013,76.41622188918353,3.1644160240378296,-19.63456706110856,-1.3809484232923637,15.595649759531634,4.7705608814238305,-10.468288519634084,-9.72821654451915,-3.892040076973144,-8.479740526626086,-.5408298481218079,13.233921729082965,15.992639239497516,3.5976801907925586,-15.812600063085762,-8.758352583748549,13.529650759569922,11.041451779488147,-36.83792097475794,-116.57081449547842,-177.8261258222633,206.8817050386096,1116.66499766962,1551.5341746851843,206.06587874917457,221.21501338856706,949.5969256320186,2377.764318832197,271.30602644407116,-752.6356266496861,-131.94201270845676,66.79418332501145,26.328209125885053,-2.651299103629572,-7.060878043009799,3.4956142029525408,4.071227618214561,-.4909141749797001,-.5424711450189524,2.592970827944063,-2.2683391883792092,-3.9697444489461264,.6473865282581908,4.555701357906309,5.043205154557586,1.8637246814391786,-2.141559966513084,-3.0402232986351168,-7.52785400252287,-9.156487638653356,18.73370573223203,116.47631097371497,62.47010411404529,-587.3589015881012,-665.3089518487826,1602.7477447230021,2320.402867858619,84.3231427941042,335.3350953157289,111.12995285997569,-246.891636129823,99.59266396905916,121.294472320036,-19.935724961316957,-24.271547137145927,-9.939260521413413,3.6463495838243953,2.465987055193222,-4.911806111595,-3.9830584925921726,3.1158463847663604,4.632592228685417,.7426231797993057,2.6761268245222913,.7570781061046433,-2.0529004071821726,-5.472612390642812,-3.3500885842682195,4.73185520601865,3.308131417656121,-7.5747009667011485,-9.660327017316277,13.948321679490391,60.92055587778603,51.91276625568891,-200.57409151559827,-358.5523453941958,389.8739539776016,626.9468569152699,385.6735588989417,266.4673045221598,-754.8594980769828,-357.47689087779764,198.35300746583653,104.20178335269868,.2335042399832746,-13.459048177551795,-2.4931441622280337,3.35911454642515,-.8733283062545694,-5.056241794156717,-2.01704858583236,2.307946173371649,1.2848757720394648,1.0044515769395077,2.2715095300739048,1.0357721766880663,-1.8190548566089728,-3.9293196367766434,-3.2116043474898985,1.2474845862739923,2.207161661351936,.30672454240560637,-1.2664097847556852,1.1634429445003909,-12.54827061669637,-13.623126322836848,148.11914826060797,160.05821428876476,-517.7340628328959,-683.7844465455721,232.19478887738595,129.53848012256918,-30.629684625724426,14.007085088982263,-28.536726784912368,-22.150721493101905,7.44580496667092,6.54260607107829,2.718162441947553,-.21791167804934167,-2.189485976085934,-.3026121311478138,1.692903265601751,.07529517214110443,-2.5525542005113677,.09286846897674433,.05981128268157322,.44341981227717964,.7816687865488906,1.8071322433818207,1.0194826794166407,-1.7022885447654383,-1.657855797575729,1.4780948040669197,2.319020580560703,-2.0993082250693513,-8.824208050789139,6.742667679512961,63.30801695721644,32.61443206545601,-214.97833639893088,-154.136284333817,-153.00121169652448,-168.2014426492601,132.73656142769508,108.19035464369672,-32.411936148940164,-29.299646468639978,.4851269805841619,5.624023137620874,1.3789304004393061,-2.362190521013929,-1.2100039550542188,4.358373066387974,4.442250631457886,-3.3529459489445013,-3.2593326279479276,-2.392130752492481,-2.978651033636929,-.7892178449068877,2.077684743463387,4.670675915130116,3.716917327847608,-1.8762573022143243,-3.692861925563191,-.821716945913849,1.0313698171467438,-.473872082152255,4.505017932340429,12.279477314121408,-23.426373610246564,-47.5098297627359,96.77061072480174,142.54719834919302,-140.65053169937673,-123.6545784250871,-20.023908130365463,5.7599623270112,10.838125249555288,8.369003432625258,-.6186978757843106,-1.9872713177733001,-.8856679063583336,-1.3475268812751358,.7612912897614448,4.106684654220183,.6932014699196007,-1.2677968128954245,.8155363283178926,-1.6303291884460738,-2.229149764015147,-1.5668982951183865,1.2058440679467928,2.069939301729377,1.4972394562433364,-.4586350261835414,-1.2690924739742997,-.7846369325253577,-.7198076424450808,.10250612713533153,2.393822328408012,-.41309740564872016,-15.44378212490165,.6609566018409474,72.35136876166182,25.38463585124977,24.183834027615426,48.560459752587064,-30.88578675321252,-41.646585437272115,4.940668075863847,9.763720849829356,-2.6994657893152145,-2.367322704222093,.9913113012439738,1.922936512925184,1.0659834826624002,-5.24817147385301,-7.275943890900581,4.868206186360457,9.822573727789889,5.652827547254917,2.038642219035176,.27431668194701375,-2.116468388136669,-6.091341232354227,-4.11029642743493,3.1073479985221883,4.720787089742764,1.4415919680128015,.049935137368385736,.2349964843073239,-3.983837312738201,-10.31575796178785,3.7701904804417365,17.40344272954281,-26.485594572094836,-57.18096354690577,56.164057478325546,74.23265895816026,-2.156664889774473,-33.25302513977903,-16.080807358669208,-7.640886291947646,-.0615357101816982,4.351642327669915,3.0483876930594445,1.4396821019147403,-2.1531487354432772,-12.330021507307762,-6.784080497103278,6.21893143680046,6.535934712732882,5.839488667586418,6.550205713760284,2.889797135763367,-4.580708437255836,-7.14807024214599,-3.544928123462484,3.1166956033252706,5.765474681444693,1.4593710853505601,.07955129926688503,1.7754263793290057,1.1602778115858083,-4.162195256209554,-6.1090111539332135,-21.585708623899716,-64.66096312641629,-42.918674159823304,-12.637618832694352,-23.660098526273554,-32.75737716495774,-16.139835139531076,-8.82145011056593,-.07408327595609765,9.23472978007751,4.0583945463193585,-1.3379386144670409,-1.0708228123536387,-3.749403380306174,-1.4014962110675557,6.3397919866467625,-.03663393601032304,-6.544978979481311,-2.061729450387931,2.9031092319630374,1.9851413256277737,1.0607201932740675,2.7050589244056695,2.99102027355106,-2.611470903566315,-2.998378794740129,-.21466478532365837,-.04506212012998023,.26663892053888355,4.647659937762156,4.303885344479347,-6.822097409456934,-12.449318624888502,-10.129633105210658,-14.243655171088259,-24.590264561101538,-60.147765518061014,-2.4700759029582726,27.756533006476555,4.274975309220922,1.5109008418257455,2.3037162841058008,-3.399112307002629,-2.3657348243984693,-1.7285717434362748,1.4807803344279866,11.452735641829591,12.838038879276603,-.480938059779123,-8.482373036151738,-10.096707565442667,-5.161364149706894,-2.650693862312733,9.408136963190175,9.49674702579923,1.5732629424154292,-6.232958390040639,-7.374195371727957,-.6645821620104788,2.389466617415538,.7202679836578819,-2.705612652438192,-1.4278421900811593,6.2735441200134945,15.997118782527094,32.34085972379201,29.293996905608573,6.583012307121869,-6.0118236769643065,35.32705272368031,28.93384981751958,4.6778289682139205,-4.86264113584278,-9.068937524557185,-5.840369598551354,-.8876414640906193,.44619327315923196,2.093054509671643,8.234646039911487,4.441292736242551,-3.9444092199360696,-3.922559950916231,.038172103710441746,-1.1645390667947013,3.846808106127327,3.825131103533594,.7379460798634513,-4.4683377641176865,-3.1226055206334693,-1.659659462142453,-1.5916869216083986,.667739430047698,3.41593902881177,1.5141668200491456,.24760595741359728,-.6043340090172503,-18.385421885703135,-9.302829511389472,25.73026622408986,16.23212758885586,17.912434056418146,-8.864985722199924,-22.650006821252305,-4.605762784462193,3.1371579845110453,-.06446512110731989,-.7788946841662594,-1.4905827462536891,-1.611120798006951,3.9054962114874257,1.1954905638175628,-5.728227962444492,-8.397660376500312,-2.0078722367450874,4.702969627117891,9.197236158387076,4.7029696271178825,-2.0078722367450905,-8.397660376500312,-5.728227962444484,1.1954905638175473,3.9054962114874288,-1.6111207980069395,-1.4905827462536891,-.7788946841662552,-.06446512110731795,3.137157984511046,-4.605762784462194,-22.65000682125226,-8.864985722199942,17.912434056418164,6.583012307121729,25.7302662240898,-9.302829511389472,-18.385421885703128,-.6043340090172618,.24760595741359434,1.5141668200491516,3.415939028811767,.6677394300476951,-1.5916869216084077,-1.6596594621424434,-3.122605520633453,-4.468337764117672,.737946079863447,3.8251311035336037,3.8468081061273467,-1.1645390667946849,.03817210371045972,-3.922559950916226,-3.944409219936084,4.44129273624253,8.234646039911485,2.09305450967165,.4461932731592304,-.8876414640906158,-5.8403695985513515,-9.068937524557173,-4.862641135842777,4.677828968213913,28.933849817519487,35.327052723680374,-6.011823676964289,-24.590264561101595,29.293996905608687,32.34085972379199,15.997118782527064,6.273544120013469,-1.4278421900811535,-2.705612652438196,.7202679836578744,2.38946661741554,-.6645821620104728,-7.374195371727961,-6.232958390040642,1.5732629424154319,9.49674702579921,9.408136963190167,-2.6506938623127225,-5.161364149706884,-10.096707565442674,-8.482373036151754,-.48093805977915227,12.83803887927658,11.452735641829598,1.4807803344279824,-1.7285717434362824,-2.365734824398472,-3.3991123070026203,2.3037162841058088,1.5109008418257512,4.274975309220927,27.756533006476598,-2.470075902958246,-60.14776551806104,-12.637618832694358,-14.243655171088175,-10.12963310521061,-12.449318624888507,-6.822097409456957,4.303885344479342,4.647659937762149,.266638920538885,-.04506212012997937,-.21466478532365083,-2.998378794740133,-2.6114709035663206,2.9910202735510656,2.7050589244056806,1.0607201932740935,1.985141325627778,2.903109231963025,-2.0617294503879293,-6.544978979481317,-.036633936010327744,6.339791986646766,-1.4014962110675422,-3.749403380306173,-1.0708228123536432,-1.3379386144670453,4.058394546319359,9.234729780077519,-.07408327595609586,-8.821450110565928,-16.139835139531023,-32.75737716495775,-23.660098526273632,56.164057478325425,-42.91867415982332,-64.66096312641639,-21.585708623899666,-6.1090111539332215,-4.162195256209558,1.1602778115858134,1.775426379329013,.07955129926688442,1.4593710853505546,5.765474681444705,3.116695603325263,-3.544928123462478,-7.148070242145987,-4.580708437255835,2.8897971357633647,6.5502057137602785,5.83948866758641,6.535934712732902,6.218931436800485,-6.78408049710327,-12.330021507307773,-2.153148735443274,1.439682101914743,3.04838769305944,4.351642327669918,-.06153571018169762,-7.640886291947656,-16.080807358669187,-33.253025139779005,-2.1566648897745,74.23265895816026,24.183834027615593,-57.180963546905936,-26.485594572094925,17.403442729542817,3.7701904804417596,-10.315757961787877,-3.9838373127381965,.2349964843073301,.04993513736838644,1.4415919680127984,4.720787089742761,3.10734799852219,-4.110296427434927,-6.091341232354242,-2.11646838813668,.27431668194701325,2.0386422190351805,5.652827547254905,9.822573727789889,4.868206186360469,-7.275943890900581,-5.248171473853026,1.0659834826623993,1.9229365129251905,.9913113012439768,-2.3673227042220857,-2.699465789315211,9.763720849829385,4.940668075863862,-41.64658543727223,-30.885786753212596,48.56045975258722,-140.6505316993766,25.38463585124965,72.35136876166179,.6609566018410128,-15.443782124901649,-.41309740564871933,2.393822328408015,.10250612713533497,-.7198076424450784,-.784636932525357,-1.2690924739743,-.45863502618354285,1.4972394562433307,2.0699393017293644,1.2058440679467857,-1.5668982951183805,-2.2291497640151445,-1.6303291884460729,.8155363283178877,-1.2677968128954307,.693201469919594,4.106684654220188,.7612912897614459,-1.347526881275139,-.8856679063583313,-1.9872713177733001,-.6186978757843116,8.369003432625277,10.838125249555295,5.759962327011137,-20.023908130365466,-123.65457842508674,-153.00121169652476,142.547198349193,96.7706107248018,-47.509829762735976,-23.426373610246678,12.279477314121431,4.505017932340448,-.47387208215225296,1.031369817146745,-.8217169459138478,-3.6928619255631867,-1.8762573022143267,3.7169173278476135,4.670675915130111,2.07768474346338,-.7892178449068863,-2.9786510336369223,-2.392130752492467,-3.2593326279479267,-3.3529459489444933,4.4422506314578865,4.35837306638798,-1.2100039550542185,-2.362190521013933,1.3789304004393068,5.624023137620873,.48512698058415527,-29.29964646863997,-32.41193614894016,108.19035464369668,132.73656142769508,-168.20144264926049,232.19478887738595,-154.13628433381695,-214.9783363989309,32.61443206545589,63.30801695721639,6.742667679512982,-8.82420805078914,-2.0993082250693487,2.319020580560703,1.4780948040669208,-1.657855797575728,-1.7022885447654388,1.019482679416639,1.8071322433818233,.7816687865488934,.4434198122771743,.05981128268157322,.0928684689767485,-2.5525542005113593,.07529517214110532,1.6929032656017555,-.30261213114781177,-2.1894859760859413,-.21791167804934622,2.718162441947553,6.542606071078292,7.445804966670914,-22.150721493101912,-28.536726784912382,14.007085088982294,-30.629684625724458,129.53848012256904,385.67355889894196,-683.7844465455728,-517.7340628328959,160.0582142887646,148.1191482606082,-13.623126322836866,-12.548270616696426,1.1634429445003742,-1.2664097847556794,.30672454240560415,2.20716166135193,1.2474845862739898,-3.211604347489884,-3.9293196367766487,-1.8190548566089664,1.0357721766880712,2.2715095300739065,1.0044515769394997,1.284875772039456,2.3079461733716413,-2.017048585832357,-5.056241794156722,-.8733283062545716,3.3591145464251335,-2.493144162228037,-13.459048177551766,.23350423998331427,104.20178335269858,198.35300746583647,-357.4768908777974,-754.8594980769828,266.4673045221598,84.32314279410423,626.94685691527,389.87395397760116,-358.5523453941956,-200.57409151559838,51.91276625568885,60.92055587778603,13.948321679490393,-9.660327017316268,-7.574700966701158,3.308131417656124,4.731855206018658,-3.350088584268223,-5.472612390642829,-2.0529004071821806,.7570781061046526,2.676126824522286,.7426231797993132,4.632592228685409,3.1158463847663604,-3.9830584925921673,-4.911806111594991,2.465987055193226,3.6463495838243847,-9.939260521413413,-24.271547137145948,-19.93572496131696,121.29447232003592,99.5926639690591,-246.89163612982315,111.12995285997523,335.33509531572906,221.21501338856802,2320.402867858619,1602.7477447230024,-665.3089518487828,-587.3589015881013,62.470104114045164,116.47631097371504,18.733705732232092,-9.156487638653367,-7.527854002522884,-3.0402232986351114,-2.1415599665130745,1.8637246814391684,5.04320515455758,4.555701357906312,.6473865282581913,-3.969744448946121,-2.2683391883791986,2.59297082794407,-.5424711450189373,-.49091417497970297,4.071227618214554,3.495614202952542,-7.0608780430097635,-2.6512991036295777,26.328209125884918,66.79418332501139,-131.94201270845636,-752.6356266496862,271.3060264440702,2377.764318832196,949.5969256320187,-2935.685284408913,206.06587874917372,1551.534174685185,1116.6649976696197,206.88170503860968,-177.82612582226307,-116.57081449547834,-36.837920974758035,11.04145177948815,13.52965075956991,-8.758352583748536,-15.812600063085752,3.597680190792535,15.99263923949752,13.233921729082972,-.5408298481218161,-8.479740526626081,-3.8920400769731613,-9.728216544519134,-10.468288519634076,4.770560881423832,15.595649759531605,-1.380948423292348,-19.63456706110855,3.1644160240378296,76.41622188918357,122.15327454200114,-163.2506843937796,-307.5827467643575,1545.4091719722737,2222.056654286522,-1215.2968180059584,5705.150120804333,-931.0231442918487,-5014.478081060261,12.384349101875989,1111.9285745591585,-11.99128236761729,-279.4268331055283,-95.96403842194779,20.17921839717859,26.029536485331974,-.6361517895200655,-8.923947649473861,.8191229861537305,4.354047932280479,3.789218318018029,4.963649694111646,-1.785663082284335,.8641610868545833,-17.670460817927413,-10.314744048939055,7.39732075044672,11.310122449566087,-7.001283565832121,-7.2338183321331515,-5.15229119155848,-33.6235492751773,-93.95074834729884,82.61625587807117,1249.2695734137344,728.4038194884231,-2822.676868927588,397.85150159823706,26666.27486022647,1118.2132640961736,-9076.440055965862,-3081.1066694335805,284.6652898587414,465.72794392086666,193.3623500499941,24.526337675320004,-3.1507841384785733,-1.8812165005783184,6.962890514889715,18.11381430819821,3.783418050130689,-16.04046919689164,-20.012525822291416,6.231350755825608,9.77401311561337,.1390769027181136,2.7720670784771526,18.76945635314798,7.250602885809213,-12.318944408119592,1.2207482283869953,25.84452117361841,-4.435939812126878,-126.31904474729296,-189.92210588558356,234.73611402062767,770.9709389498016,-4944.527630255446,-10095.4436331661,9631.082450060534,25390.17050347309,2133.8618335997035,-174.99103969877373,4452.692995979102,620.4953971180324,514.9954980598235,546.4987279403136,218.31674915569133,-20.687109086504822,-41.92694802148033,8.334805217065085,25.323206346284447,.8687237458817438,-17.959748575409694,-19.56135411298708,-1.4949158508675975,-5.565858908608942,-4.019485893928795,20.161840527236293,32.41413028080419,2.8803824684767667,-21.191137754573067,1.491875160093128,36.180920465642465,4.561263112694152,-28.68482258571906,-46.17554600712999,457.8614692220494,982.9551130913566,-848.3815932659156,-7213.002611204684,2752.5053486175875],imag:[0,-3169.945161494138,-2389.009292474752,-2824.6185770767256,47.14098532904063,-205.51829185355012,-383.7183501976268,-205.9732988135564,11.33217255237444,43.76909201728548,-7.034291101336307,-32.133345787281364,-1.2408409398708855,22.626534078219475,22.834188196398234,5.860605450439017,0,-5.8606054504387375,-22.83418819639831,-22.626534078219454,1.240840939870875,32.133345787281435,7.034291101336293,-43.76909201728535,-11.33217255237444,205.97329881355589,383.7183501976273,205.51829185355027,-47.14098532904063,2824.6185770767256,2389.009292474751,3169.9451614941386,14687.463554763033,-1246.2254521233822,-13582.059524928778,-4205.001741520543,1374.1061578688877,-137.33727593318653,-632.8113455288487,-154.70037614560013,13.450507164884565,15.193108572125329,-6.154296658705534,-15.818788310912929,-2.909480569030046,1.479970160345879,-1.5973907882613358,1.5293212848264928,18.21275880080945,-1.003899882219808,-18.30035720783934,-15.99060672422979,.33906699281555863,8.403557604549265,-3.695581631630837,1.2265587756840484,4.49188016589487,-32.498332906337446,-252.7892465071488,118.6015387642415,1871.5173348139303,-2304.779993768985,-14411.746659687838,-4213.876681413953,7014.732560501017,2247.44595388478,-16.76096327485996,900.764743019339,-5.134250045598947,-420.94056280958415,-12.516743930999253,93.66044614887166,-5.396479152459517,-25.576180637452808,-8.251410997969776,17.318312851322737,9.236462137217643,-22.012718711107286,-15.490166786860247,-4.834205749446653,9.56285627140653,1.836849747935801,5.348168445107009,16.065001056209898,7.160451380960977,-15.578970641484018,-6.7835303274441205,29.197525074885235,24.587565667273296,-80.30266777803787,-341.00518268197084,-165.09457453510524,812.929078888263,-1514.0868881615295,-6442.593062681756,2384.028236162332,-10283.309463536394,-4592.969551993708,4024.534672295305,1566.1446188979135,-577.9784269549883,-13.866559817282136,303.84181615530144,107.13271532249853,-4.430459051551983,-24.3354914766248,-1.06916879450579,24.162065431216654,4.7495715205351985,-14.018208973927269,-8.950623015251843,-4.4638345370409525,-7.184295053694476,-.7548369913992261,9.34037405707282,25.69084757401466,10.204720176161787,-11.674788778672609,-2.2174348022320634,10.712979752882786,4.144769096332819,-30.28940876791103,-12.158067002051448,-76.33668890424448,-15.045419751305701,825.0044509954804,3127.7274260756976,-92.69266164282145,-6218.494113001829,-3848.3727657836507,693.8726501883154,545.9720887451243,-92.12559859876467,150.80594875272075,31.835009702890954,-5.928389610620629,5.174936281185259,3.5428080098191677,8.181320378808998,.8023872820291866,-2.1553941232205127,3.896876060708947,5.741545217717403,-2.4223203414509196,-12.192718147122756,-6.443125616997143,.7810139743794973,-.4709674045364774,4.013547752378568,5.342440345336286,1.5176299437256986,-10.74330995836436,-14.68235074512339,24.62434367341447,118.67852190927127,172.0930538620998,-99.15779039126605,517.5033298161774,2037.7393191154626,-1363.1746812874464,-339.7433324255503,32.123918954310476,-283.55446630414355,-87.78727128965622,401.2426948021161,97.67974932928976,-120.49954302359174,-51.17606054251282,-2.5863965882294027,13.214576791319574,4.035919637492688,-8.30669864432925,-3.219039265130443,10.42730204701207,6.893139999364272,.5098976234806418,-1.9729622551402084,-2.7447920706562,-6.495179494436407,-8.76592374084332,-2.5623445767069972,9.402955191069655,6.078763549737345,-8.773868110480242,-10.356090763505474,25.99442134346248,47.53445671295613,36.4274180672144,-132.28171420843677,-55.78017124265114,550.5881882141604,230.04212220540037,2282.815734215307,1692.5764998210254,-618.4010666681479,-406.7508298763652,268.6109645119121,88.79766085006811,-17.81328523706651,-23.19378111787497,-5.993920933714092,3.591196404165329,-1.1492389141172172,-3.281418277923168,1.0895777711511168,3.528253318972853,-1.1949811908258732,1.894384229023907,4.624133283408544,.37075703258422543,-2.0346603770225924,-4.506790345640636,-1.1470927861162812,2.3634060343879923,3.259053548391299,1.2412658338184401,-2.238981588773232,-8.267796716016413,-35.26417469610022,-42.695700376724766,163.41685001540142,139.99054216726472,-634.3924089241822,-59.27769287041278,635.1043543547817,336.1095076126709,-20.98790849568645,62.381440709915225,-5.260850091933738,-7.943122859894799,17.71991372721576,2.2765757875228916,-.5781253977177655,-1.861000889502646,-1.1416693103444284,2.4821587471930475,1.9877494352069631,-3.6722851782283747,-3.348161983991842,-.654364366806294,1.4913973744886961,1.3020502991963898,1.5364454784416322,2.033250215562337,.0828119153078757,-2.728734023318047,-2.0624150870013023,3.1666191865848514,2.1277795836536475,-15.762070711071239,-31.08008715856702,16.26456379879305,168.22104098804192,119.10647254618513,-340.95280202269214,-119.21079977674056,-524.1614361472213,-474.8379195142545,238.1697359967206,238.87620399289383,-30.950251690797295,-43.00765504375078,-7.078111018168548,4.293336801801075,2.128510229721456,-1.3556643805285902,.6711805209840143,4.158011377374009,1.6924135574018535,-3.2368514600901537,-2.3674255865410236,-2.2397386036010594,-2.8392755347081424,-.22727952120054792,2.1660066162361877,4.125725202345454,1.8555476250524485,-3.0110538491549583,-3.3997614112807475,-.06444119738194992,1.4400236898496321,-2.5651430892865172,-.5740691306951373,14.545275998521815,-21.097880653370396,-8.386658477188135,246.29297742969297,177.82681762874435,-29.41075778366933,21.206487630199256,82.34142325708432,9.462990925956907,-12.117042155983494,-8.205729296687293,-5.367262276976342,.7159440642377497,.6939442046221322,-.3950164257282811,.5780431877534518,1.8269742232979342,.10217887910111716,.16688705386232044,1.9755117613475777,-.9437282349547598,-2.4667123640612325,-1.3772827491468491,.7462734387419473,1.570395769948343,1.3943774862563845,.5108795243575502,-.5747333955981793,-2.001959249122612,-.9444785806952298,4.110572038153962,9.874896080299848,-5.069306285284377,-52.44341015820585,-37.64226425981684,117.83245857703734,130.78419594725884,169.61465367155833,186.83060708175802,-35.97421869826457,-86.88028114844637,-5.220374019453921,16.97166918775532,6.069817981265125,.35231673872141245,-.530449143562611,-.8163253500771305,-.3958311780085509,-4.438525040368828,-5.147284914598521,2.545092404453277,5.007135787687879,2.743807769745191,3.4897745997776024,-.06312531494631476,-1.9440922443950184,-5.93269468200695,-3.385188090942465,3.665839538220193,4.0455837767151035,-.6661551017179177,-2.2326980338070728,1.6846667556373658,3.813713204205189,-1.9181620538698931,1.644195687028925,-6.127050069431315,-76.59589320592706,-49.969516616017785,-7.913232126947411,-11.568908095829089,-47.80511277271571,-13.830481688679152,18.277275877397457,14.698934402888547,6.218474203597997,1.489002207682271,-.7474439900434958,1.078974533533704,-.7890497066195372,-8.272945648947578,-5.409011823874466,2.7622883519807897,.8473850486901422,1.8128818460693508,2.842021949155072,1.5362703897962247,-3.7595900673998903,-5.60222882438188,-4.1625158390656765,.7129508246172668,3.6372516960945322,1.3208871209715871,-.6240075417645504,-1.768358539761187,-3.6168192973638713,3.673596380624533,31.275163257132462,32.479329698147204,-39.759969700967346,-68.58423265091736,-57.4694689751587,-64.29737144593432,.2086101156653365,34.25783205331058,6.9534765415767215,-5.379348345641788,1.2524657598045081,1.5450348766267965,.5660857117060044,1.3866526144820828,-2.467818437504425,-.23634501606433136,6.345024457457011,.9543505178876851,-4.984602859992024,-6.3381420012322005,-2.743585061158078,-1.5807425386703018,2.421504137076397,6.842897598662122,5.393931642661025,-2.3287200765196823,-4.797845078543163,-.6313340386700949,1.1146429476849253,.7514356381637266,2.271704859780069,5.535047521228594,5.157177392273493,9.279298792017928,21.682075132354747,1.4867450129376456,-4.470011472560532,-18.272390809448236,16.714318324621598,7.308978727000863,-20.071959549384122,-7.08417742806207,3.202216021696031,-.07798827086401403,-1.5775612503840553,-4.371537527467265,-2.1765426316142653,13.260687049653976,13.879467714343647,-1.885248686971834,-10.52703075548209,-6.8369811071974125,-3.0333474188096656,-2.140796956298466,3.722272454853548,7.625727254705552,10.117490783509389,-.39109059001006397,-6.9982476982268125,-4.2960092579610025,.5590179117015986,2.6155137759572247,6.5895285486459425,7.4061452615413605,-10.366283361455007,-35.34703723782264,-16.933453520111545,16.22469212400422,-34.34332526355967,-71.73858701067937,-34.4509698796545,-6.264077870088225,11.74621463570591,13.03195895176973,-.3480472785242843,-3.996855335639563,-3.964707435958017,-4.209643231106255,4.915829456805765,12.338227697160551,3.508848971799439,-9.688758847164829,-3.3007173968474173,1.3223986051066356,3.9779056054352555,5.213903433147754,.7396674961794831,-3.153864974849434,-5.201358311154781,1.2046804216345655,2.9426249963390902,.16125203808628796,-.12580690156457183,-1.0212362026563724,-6.277158135649886,-5.667954672326474,4.238198644615171,5.756037161701083,18.621646756873353,24.73430944472121,-36.387091300098106,-10.759792351985398,-2.2461784763603254,3.6933656200181786,20.866503857704814,3.7918232583171383,-8.210308568220889,-3.925837839044303,.8338220247168117,4.801181266459511,6.189735840763045,-4.761394258970372,-14.056893094185043,-2.2289578077004246,10.245900399003714,12.011271759567334,7.371055058808771,3.551572630490227,1.2929923686914595,-7.412447633800669,-7.578794799911184,1.7154740370529804,9.312385447605473,4.977756531678763,-.24109318982965802,-5.176673232010988,-9.309219172924053,-5.246693773893865,10.274800595678272,28.322088715789157,27.586929135138202,-13.506737972920812,0,72.99209390971254,40.67476630635939,3.667761205914089,-7.0101784555215705,-11.074353780690299,-3.560051908744632,2.4941865000982566,3.5007885216085395,2.2952423730960096,-1.6579656325825838,-10.397334640078137,-8.51833941791384,4.679962930220257,8.92655750805772,4.898502144770566,0,-4.898502144770571,-8.926557508057728,-4.679962930220274,8.518339417913836,10.397334640078139,1.6579656325825878,-2.2952423730960114,-3.5007885216085395,-2.4941865000982615,3.560051908744636,11.074353780690284,7.010178455521566,-3.6677612059140743,-40.67476630635944,-72.99209390971251,36.38709130009825,13.50673797292093,-27.58692913513819,-28.322088715789224,-10.274800595678252,5.2466937738938775,9.309219172924053,5.1766732320109785,.24109318982965933,-4.977756531678763,-9.312385447605468,-1.7154740370529937,7.578794799911192,7.41244763380068,-1.2929923686914602,-3.5515726304902286,-7.371055058808773,-12.011271759567332,-10.245900399003729,2.2289578077004006,14.05689309418503,4.7613942589703955,-6.189735840763048,-4.801181266459526,-.8338220247168133,3.9258378390442905,8.210308568220892,-3.791823258317102,-20.8665038577048,-3.693365620018146,2.246178476360347,10.759792351985324,34.343325263559734,-24.734309444721188,-18.621646756873407,-5.756037161701096,-4.2381986446151565,5.667954672326443,6.2771581356498745,1.0212362026563664,.12580690156457094,-.16125203808628427,-2.942624996339094,-1.2046804216345817,5.20135831115479,3.1538649748494616,-.7396674961794603,-5.2139034331477525,-3.9779056054352657,-1.322398605106651,3.300717396847418,9.688758847164834,-3.508848971799433,-12.338227697160564,-4.915829456805772,4.209643231106254,3.9647074359580197,3.9968553356395535,.3480472785242903,-13.031958951769711,-11.746214635705918,6.26407787008822,34.450969879654494,71.73858701067942,4.47001147256055,-16.224692124004207,16.93345352011149,35.34703723782269,10.366283361455015,-7.406145261541344,-6.589528548645957,-2.615513775957226,-.5590179117015994,4.2960092579609945,6.998247698226812,.3910905900100697,-10.117490783509375,-7.625727254705552,-3.722272454853562,2.140796956298464,3.0333474188096563,6.836981107197385,10.52703075548211,1.8852486869718446,-13.879467714343662,-13.26068704965398,2.1765426316142595,4.371537527467271,1.5775612503840555,.07798827086402514,-3.2022160216960267,7.084177428062051,20.071959549384133,-7.308978727000809,-16.7143183246216,18.272390809448193,57.46946897515871,-1.486745012937642,-21.682075132354715,-9.27929879201793,-5.157177392273471,-5.5350475212285986,-2.271704859780067,-.7514356381637247,-1.114642947684924,.63133403867009,4.797845078543163,2.3287200765196983,-5.393931642661015,-6.842897598662133,-2.4215041370764028,1.5807425386703056,2.7435850611580817,6.338142001232191,4.98460285999202,-.9543505178876822,-6.345024457457017,.23634501606432906,2.4678184375044308,-1.3866526144820814,-.5660857117060069,-1.5450348766267858,-1.2524657598045066,5.379348345641785,-6.953476541576708,-34.25783205331058,-.20861011566532392,64.29737144593442,7.9132321269475,68.58423265091739,39.759969700967275,-32.47932969814723,-31.275163257132508,-3.6735963806245575,3.616819297363866,1.7683585397611854,.6240075417645492,-1.3208871209715913,-3.6372516960945265,-.7129508246172646,4.162515839065667,5.602228824381885,3.7595900673999,-1.5362703897962169,-2.842021949155066,-1.8128818460693434,-.8473850486901302,-2.762288351980789,5.409011823874463,8.272945648947582,.7890497066195395,-1.0789745335337066,.7474439900434985,-1.4890022076822718,-6.218474203597983,-14.69893440288851,-18.277275877397457,13.830481688678995,47.80511277271575,11.5689080958292,-169.61465367155867,49.96951661601778,76.59589320592725,6.127050069431279,-1.6441956870289614,1.918162053869898,-3.8137132042051767,-1.6846667556373722,2.2326980338070745,.6661551017179216,-4.0455837767150955,-3.665839538220195,3.3851880909424605,5.932694682006955,1.9440922443950184,.06312531494631478,-3.4897745997776015,-2.7438077697451946,-5.007135787687877,-2.5450924044532854,5.147284914598517,4.438525040368832,.3958311780085478,.8163253500771318,.5304491435626107,-.352316738721409,-6.069817981265121,-16.971669187755335,5.220374019453901,86.88028114844653,35.974218698264636,-186.8306070817582,29.41075778366919,-130.78419594725855,-117.83245857703733,37.64226425981672,52.44341015820588,5.06930628528441,-9.874896080299864,-4.11057203815397,.9444785806952333,2.0019592491226157,.5747333955981775,-.5108795243575508,-1.3943774862563805,-1.570395769948336,-.7462734387419447,1.3772827491468478,2.466712364061224,.943728234954757,-1.9755117613475803,-.16688705386232,-.10217887910111442,-1.8269742232979298,-.5780431877534501,.3950164257282808,-.6939442046221329,-.7159440642377405,5.367262276976339,8.20572929668725,12.117042155983503,-9.462990925956644,-82.34142325708414,-21.206487630199604,524.1614361472213,-177.82681762874424,-246.29297742969288,8.386658477188103,21.097880653370403,-14.545275998521824,.5740691306951337,2.5651430892865226,-1.4400236898496321,.06444119738195084,3.3997614112807506,3.0110538491549557,-1.8555476250524514,-4.125725202345457,-2.1660066162361895,.22727952120054773,2.8392755347081424,2.2397386036010616,2.3674255865410174,3.236851460090151,-1.6924135574018513,-4.15801137737401,-.6711805209840154,1.3556643805285893,-2.128510229721456,-4.29333680180108,7.078111018168553,43.00765504375077,30.950251690797295,-238.87620399289392,-238.1697359967206,474.83791951425417,-635.1043543547808,119.21079977674036,340.9528020226919,-119.10647254618499,-168.2210409880419,-16.264563798793112,31.080087158567054,15.76207071107125,-2.127779583653649,-3.1666191865848456,2.0624150870013005,2.728734023318051,-.08281191530787903,-2.033250215562348,-1.5364454784416388,-1.302050299196379,-1.4913973744886957,.6543643668062926,3.348161983991837,3.6722851782283725,-1.987749435206966,-2.4821587471930564,1.1416693103444246,1.8610008895026517,.5781253977177665,-2.276575787522897,-17.719913727215747,7.943122859894882,5.260850091933786,-62.38144070991582,20.98790849568596,-336.10950761267,-2282.8157342153086,59.27769287041221,634.3924089241824,-139.99054216726466,-163.41685001540142,42.69570037672479,35.26417469610021,8.2677967160164,2.2389815887732354,-1.2412658338184486,-3.2590535483912864,-2.363406034387986,1.1470927861162765,4.506790345640629,2.034660377022595,-.37075703258422554,-4.6241332834085505,-1.8943842290239064,1.194981190825872,-3.5282533189728493,-1.0895777711511203,3.281418277923172,1.149238914117214,-3.591196404165319,5.993920933714089,23.193781117874966,17.813285237066506,-88.79766085006803,-268.6109645119122,406.7508298763647,618.4010666681477,-1692.5764998210257,339.74333242554815,-230.04212220540018,-550.5881882141593,55.780171242650994,132.2817142084364,-36.42741806721432,-47.534456712956064,-25.994421343462484,10.356090763505458,8.773868110480235,-6.078763549737348,-9.402955191069632,2.562344576707006,8.765923740843304,6.495179494436428,2.7447920706561946,1.972962255140204,-.5098976234806252,-6.893139999364257,-10.427302047012086,3.2190392651304447,8.30669864432927,-4.03591963749269,-13.214576791319564,2.5863965882294058,51.17606054251275,120.49954302359184,-97.67974932928956,-401.2426948021163,87.78727128965625,283.554466304144,-32.12391895431216,6218.494113001829,1363.174681287448,-2037.739319115463,-517.5033298161776,99.15779039126602,-172.09305386210005,-118.67852190927132,-24.624343673414536,14.682350745123385,10.743309958364414,-1.5176299437256995,-5.342440345336309,-4.013547752378579,.4709674045364808,-.7810139743795077,6.443125616997137,12.192718147122749,2.4223203414509316,-5.741545217717394,-3.8968760607089528,2.155394123220521,-.8023872820291849,-8.181320378809007,-3.542808009819187,-5.174936281185256,5.9283896106206555,-31.835009702890844,-150.8059487527208,92.12559859876468,-545.9720887451243,-693.8726501883154,3848.372765783648,10283.309463536396,92.69266164282541,-3127.727426075702,-825.0044509954823,15.045419751306099,76.33668890424428,12.15806700205125,30.2894087679111,-4.144769096332806,-10.712979752882784,2.217434802232056,11.674788778672612,-10.204720176161779,-25.690847574014658,-9.340374057072866,.7548369913992282,7.184295053694473,4.463834537040952,8.950623015251825,14.018208973927262,-4.749571520535188,-24.162065431216647,1.0691687945057857,24.33549147662474,4.430459051551981,-107.13271532249837,-303.84181615530116,13.866559817282113,577.9784269549884,-1566.1446188979132,-4024.534672295306,4592.969551993704,-7014.732560501017,-2384.0282361623326,6442.593062681757,1514.086888161532,-812.9290788882627,165.09457453510592,341.00518268197106,80.30266777803779,-24.587565667273314,-29.19752507488524,6.783530327444133,15.578970641484096,-7.160451380961001,-16.065001056209955,-5.34816844510703,-1.8368497479357557,-9.562856271406536,4.834205749446648,15.490166786860224,22.012718711107244,-9.236462137217643,-17.31831285132271,8.25141099796979,25.57618063745285,5.3964791524595155,-93.66044614887178,12.516743930999144,420.9405628095841,5.134250045599179,-900.7647430193394,16.760963274859485,-2247.4459538847777,-14687.463554763033,4213.876681413947,14411.746659687837,2304.77999376899,-1871.5173348139317,-118.60153876424121,252.7892465071493,32.498332906337396,-4.491880165894884,-1.2265587756841234,3.695581631630931,-8.403557604549233,-.33906699281557884,15.990606724229716,18.300357207839266,1.0038998822198608,-18.212758800809453,-1.529321284826482,1.5973907882613065,-1.4799701603458557,2.909480569030038,15.818788310912904,6.15429665870549,-15.193108572125247,-13.450507164884552,154.7003761456,632.8113455288485,137.3372759331867,-1374.1061578688873,4205.001741520538,13582.05952492878,1246.225452123387]}};function mosseFilter(e){var t,r,n,o,l,h,f,c,d,v;this.psr_prev=void 0,this.peak_prev=void 0;var _=!1;if(e||(e={}),void 0===e.drawResponse)e.drawResponse=!1;else if("CANVAS"!=e.drawResponse.tagName)e.drawResponse=!1;else var m=e.drawResponse.getContext("2d");void 0===e.psrThreshold&&(e.psrThreshold=10),void 0===e.eta&&(e.eta=.1),void 0===e.convertToGrayscale&&(e.convertToGrayscale=!0),this.load=function(filter){l=filter.width,h=filter.height,c=l*h,t=[filter.real,filter.imag],filter.top&&filter.bottom&&(_=!0,r=[filter.top.real,filter.top.imag],n=[filter.bottom.real,filter.bottom.imag]),(o=new FFT).init(filter.width),"undefined"!=typeof Float64Array?(f=new Float64Array(c),v=new Float64Array(c)):(f=new Array(c),v=new Array(c));var canvas=document.createElement("canvas");canvas.setAttribute("width",l),canvas.setAttribute("height",h),d=canvas.getContext("2d")},this.init=function(e,v){c=(l=e)*(h=v),t=[[],[]],r=[[],[]],n=[[],[]];for(var i=0;i<c;i++)t[0][i]=0,t[1][i]=0,r[0][i]=0,r[1][i]=0,n[0][i]=0,n[1][i]=0;_=!0,(o=new FFT).init(e),f="undefined"!=typeof Float64Array?new Float64Array(c):new Array(c);var canvas=document.createElement("canvas");canvas.setAttribute("width",l),canvas.setAttribute("height",h),d=canvas.getContext("2d")},this.fft=function(e){for(var t=new Array(c),i=0;i<c;i++)t[i]=0;return o.fft2d(e,t),[e,t]},this.fft_inplace=function(e){for(var i=0;i<c;i++)f[i]=0;return o.fft2d(e,f),[e,f]},this.ifft=function(e,t){return o.ifft2d(e,t),e},this.psr=function(e){for(var t,r=0,n=0,o=[0,0],f=0,c=0;c<l;c++)for(var d=0;d<h;d++)r+=t=e[d*l+c],f+=t*t,n<t&&(n=t,o=[c,d]);for(c=-5;c<6;c++)for(d=-5;d<6;d++)Math.sqrt(c*c+d*d)<5&&(f-=(t=e[(o[1]+d)*l+(o[0]+c)])*t,r-=t);var v=r/e.length;return(n-v)/Math.sqrt(f/e.length-v*v)},this.getResponse=function(e){var r=y(e);r=x(r);var n=this.fft_inplace(r);return M(n,t),this.ifft(n[0],n[1])},this.track=function(input,o,f,M,T,A,R,C){if(!t)return console.log("Mosse-filter needs to be initialized or trained before starting tracking."),!1;if("VIDEO"==input.tagName||"IMG"==input.tagName){var L=Math.round(o/input.width*input.videoWidth),P=Math.round(f/input.height*input.videoHeight),O=Math.round(M/input.width*input.videoWidth),k=Math.round(T/input.height*input.videoHeight);d.drawImage(input,L,P,O,k,0,0,l,h)}else"CANVAS"==input.tagName&&d.drawImage(input,o,f,M,T,0,0,l,h);var I=d.getImageData(0,0,l,h).data;if(e.convertToGrayscale)for(var i=0;i<c;i++)v[i]=.3*I[4*i],v[i]+=.59*I[4*i+1],v[i]+=.11*I[4*i+2];else for(i=0;i<c;i++)v[i]=I[4*i];var N=y(v);N=x(N);var D=this.fft_inplace(N),B=w(D,t),F=this.ifft(B[0],B[1]),U=0,j=0,V=[0,0];if(R)for(var z,G,H,W=0;W<l;W++)for(var X=0;X<h;X++)G=W-l/2,H=X-h/2,z=Math.exp(-.5*(G*G+H*H)/128),F[X*l+W]*z>U&&(U=F[X*l+W]*z,V=[W,X]),F[X*l+W]<j&&(j=F[X*l+W]);else for(W=0;W<l;W++)for(X=0;X<h;X++)F[X*l+W]>U&&(U=F[X*l+W],V=[W,X]),F[X*l+W]<j&&(j=F[X*l+W]);if(this.peak_prev=U,e.drawResponse){var Y=U-j,Z=document.createElement("canvas");Z.setAttribute("width",32),Z.setAttribute("height",32);for(var J=Z.getContext("2d"),K=J.createImageData(32,32),Q=K.data,$=0;$<1024;$++){var ee=F[$];ee=Math.round((ee+Math.abs(j))*(255/Y)),Q[4*$]=ee,Q[4*$+1]=ee,Q[4*$+2]=ee,Q[4*$+3]=255}J.putImageData(K,0,0),m.drawImage(Z,o,f,M,M)}if(C&&(this.psr_prev=this.psr(F)),A)if(_){if(C)var te=this.psr_prev;else te=this.psr(F);if(te>e.psrThreshold){var re=[],ae=V[0],ie=V[1];for(W=0;W<l;W++)for(X=0;X<h;X++)re[X*l+W]=Math.exp(-((W-ae)*(W-ae)+(X-ie)*(X-ie))/4);re=this.fft(re);var ne=E(D),oe=w(re,ne),se=w(D,ne),le=e.eta;for(i=0;i<c;i++)r[0][i]=le*oe[0][i]+(1-le)*r[0][i],r[1][i]=le*oe[1][i]+(1-le)*r[1][i],n[0][i]=le*se[0][i]+(1-le)*n[0][i],n[1][i]=le*se[1][i]+(1-le)*n[1][i];t=S(r,n)}}else console.log("The loaded filter does not support updating. Ignoring parameter 'updateFilter'.");return V[0]=V[0]*(M/l),V[1]=V[1]*(M/h),!(U<0)&&V},this.train=function(input,o,f,m,M){if(!_)return console.log("The loaded filter does not support updating. Unable to do training."),!1;if("VIDEO"==input.tagName||"IMG"==input.tagName){var T=Math.round(o/input.width*input.videoWidth),A=Math.round(f/input.height*input.videoHeight),R=Math.round(m/input.width*input.videoWidth),C=Math.round(M/input.height*input.videoHeight);d.drawImage(input,T,A,R,C,0,0,l,h)}else"CANVAS"==input.tagName&&d.drawImage(input,o,f,m,M,0,0,l,h);for(var L=d.getImageData(0,0,l,h).data,i=0;i<c;i++)v[i]=.3*L[4*i],v[i]+=.59*L[4*i+1],v[i]+=.11*L[4*i+2];var P=y(v);P=x(P);for(var O=[],k=l/2,I=h/2,N=0;N<l;N++)for(var D=0;D<h;D++)O[D*l+N]=Math.exp(-((N-k)*(N-k)+(D-I)*(D-I))/4);O=this.fft(O);var B=this.fft(P),F=E(B),U=w(O,F),j=w(B,F),V=e.eta;for(i=0;i<c;i++)r[0][i]=V*U[0][i]+(1-V)*r[0][i],r[1][i]=V*U[1][i]+(1-V)*r[1][i],n[0][i]=V*j[0][i]+(1-V)*n[0][i],n[1][i]=V*j[1][i]+(1-V)*n[1][i];return t=S(r,n),!0};var y=function(e){for(var i=0;i<c;i++)e[i]=Math.log(e[i]+1);var t=0;for(i=0;i<c;i++)t+=e[i];t/=c;for(i=0;i<c;i++)e[i]-=t;var r=0;for(i=0;i<c;i++)r+=e[i]*e[i];if(0!==(r=Math.sqrt(r)))for(i=0;i<c;i++)e[i]/=r;return e},x=function(e){for(var t=0,i=0;i<l;i++)for(var r=0;r<h;r++){var n=Math.sin(Math.PI*i/(l-1)),o=Math.sin(Math.PI*r/(h-1));e[t]=Math.min(n,o)*e[t],t++}return e},w=function(e,t){for(var r=[new Array(l),new Array(l)],n=0;n<c;n++)r[0][n]=e[0][n]*t[0][n]-e[1][n]*t[1][n],r[1][n]=e[0][n]*t[1][n]+e[1][n]*t[0][n];return r},M=function(e,t){for(var r,n,o=0;o<c;o++)r=e[0][o]*t[0][o]-e[1][o]*t[1][o],n=e[0][o]*t[1][o]+e[1][o]*t[0][o],e[0][o]=r,e[1][o]=n},E=function(e){for(var t=[[],[]],i=0;i<c;i++)t[0][i]=e[0][i],t[1][i]=-e[1][i];return t},S=function(e,t){for(var r=[[],[]],n=0;n<c;n++)r[0][n]=(e[0][n]*t[0][n]+e[1][n]*t[1][n])/(t[0][n]*t[0][n]+t[1][n]*t[1][n]),r[1][n]=(e[1][n]*t[0][n]-e[0][n]*t[1][n])/(t[0][n]*t[0][n]+t[1][n]*t[1][n]);return r}}var mosse={mosseFilter:mosseFilter,filters:{left_eye_filter:left_eye_filter,right_eye_filter:right_eye_filter,mouth_filter:mouth_filter,nose_filter:nose_filter,face_filter:face_filter}},jsfeat_1=createCommonjsModule((function(e){var t,r=r||{REVISION:"ALPHA"};!function(e){var t=new Int32Array([-1,1,4,-1,4,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,8]),n=function(e){return 65280&e},o=function(e){return 255&e},l=function(e){return t[(65280&e)>>8]},h=function(e,t){this.size=-8&(e+7|0),void 0===t?this.buffer=new ArrayBuffer(this.size):(this.buffer=t,this.size=t.length),this.u8=new Uint8Array(this.buffer),this.i32=new Int32Array(this.buffer),this.f32=new Float32Array(this.buffer),this.f64=new Float64Array(this.buffer)},f=function(){function e(e,t,r,l){this.type=0|n(r),this.channel=0|o(r),this.cols=0|e,this.rows=0|t,void 0===l?this.allocate():(this.buffer=l,this.data=256&this.type?this.buffer.u8:512&this.type?this.buffer.i32:1024&this.type?this.buffer.f32:this.buffer.f64)}return e.prototype.allocate=function(){delete this.data,delete this.buffer,this.buffer=new h(this.cols*l(this.type)*this.channel*this.rows),this.data=256&this.type?this.buffer.u8:512&this.type?this.buffer.i32:1024&this.type?this.buffer.f32:this.buffer.f64},e.prototype.copy_to=function(e){for(var t=e.data,td=this.data,i=0,r=this.cols*this.rows*this.channel|0;i<r-4;i+=4)t[i]=td[i],t[i+1]=td[i+1],t[i+2]=td[i+2],t[i+3]=td[i+3];for(;i<r;++i)t[i]=td[i]},e.prototype.resize=function(e,t,r){void 0===r&&(r=this.channel),e*l(this.type)*r*t>this.buffer.size?(this.cols=e,this.rows=t,this.channel=r,this.allocate()):(this.cols=e,this.rows=t,this.channel=r)},e}(),c=function(){function e(e){this.levels=0|e,this.data=new Array(e),this.pyrdown=r.imgproc.pyrdown}return e.prototype.allocate=function(e,t,r){for(var i=this.levels;--i>=0;)this.data[i]=new f(e>>i,t>>i,r)},e.prototype.build=function(input,e){void 0===e&&(e=!0);var i=2,a=input,b=this.data[0];if(!e)for(var t=input.cols*input.rows;--t>=0;)b.data[t]=input.data[t];for(b=this.data[1],this.pyrdown(a,b);i<this.levels;++i)a=b,b=this.data[i],this.pyrdown(a,b)},e}(),d=function(e,t,r,n,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===r&&(r=0),void 0===n&&(n=0),void 0===o&&(o=-1),this.x=e,this.y=t,this.score=r,this.level=n,this.angle=o};e.U8_t=256,e.S32_t=512,e.F32_t=1024,e.S64_t=2048,e.F64_t=4096,e.C1_t=1,e.C2_t=2,e.C3_t=3,e.C4_t=4,e.U8C1_t=257,e.U8C3_t=259,e.U8C4_t=260,e.F32C1_t=1025,e.F32C2_t=1026,e.S32C1_t=513,e.S32C2_t=514,e.EPSILON=1.192092896e-7,e.FLT_MIN=1e-37,e.COLOR_RGBA2GRAY=0,e.COLOR_RGB2GRAY=1,e.COLOR_BGRA2GRAY=2,e.COLOR_BGR2GRAY=3,e.BOX_BLUR_NOSCALE=1,e.SVD_U_T=1,e.SVD_V_T=2,e.get_data_type=n,e.get_channel=o,e.get_data_type_size=l,e.data_t=h,e.matrix_t=f,e.pyramid_t=c,e.keypoint_t=d}(r),function(e){var t,n,o,l=(o=function(){function e(e){this.next=null,this.data=new r.data_t(e),this.size=this.data.size,this.buffer=this.data.buffer,this.u8=this.data.u8,this.i32=this.data.i32,this.f32=this.data.f32,this.f64=this.data.f64}return e.prototype.resize=function(e){delete this.data,this.data=new r.data_t(e),this.size=this.data.size,this.buffer=this.data.buffer,this.u8=this.data.u8,this.i32=this.data.i32,this.f32=this.data.f32,this.f64=this.data.f64},e}(),{allocate:function(e,r){t=n=new o(r);for(var i=0;i<e;++i){var l=new o(r);n=n.next=l}},get_buffer:function(e){var r=t;return t=t.next,e>r.size&&r.resize(e),r},put_buffer:function(e){n=n.next=e}});e.cache=l,l.allocate(30,2560)}(r),function(e){var t,n=(t=new Int32Array(96),{get_gaussian_kernel:function(e,t,n,o){var i=0,l=0,h=0,f=0,c=0,d=0,v=r.cache.get_buffer(e<<2),_=v.f32;if(1==(1&e)&&e<=7&&t<=0)switch(e>>1){case 0:_[0]=1,d=1;break;case 1:_[0]=.25,_[1]=.5,_[2]=.25,d=1;break;case 2:_[0]=.0625,_[1]=.25,_[2]=.375,_[3]=.25,_[4]=.0625,d=1;break;case 3:_[0]=.03125,_[1]=.109375,_[2]=.21875,_[3]=.28125,_[4]=.21875,_[5]=.109375,_[6]=.03125,d=1}else for(c=-.5/((f=t>0?t:.3*(.5*(e-1)-1)+.8)*f);i<e;++i)l=i-.5*(e-1),h=Math.exp(c*l*l),_[i]=h,d+=h;if(o&r.U8_t)for(d=256/d,i=0;i<e;++i)n[i]=_[i]*d+.5|0;else for(d=1/d,i=0;i<e;++i)n[i]=_[i]*d;r.cache.put_buffer(v)},perspective_4point_transform:function(e,t,r,n,o,l,h,f,c,d,v,_,m,y,x,w,M){var E=t,S=d,T=h,A=E*S*T,R=x,C=E*R,L=S*C,P=v,O=E*P,k=l,I=r,N=y,D=I*N,B=D*k,F=N*k*P,U=N*T,j=N*P,V=S*T,z=R*S,G=R*k,H=P*k,W=1/(U-j-V+z-G+H),X=E*N,Y=I*k,Z=T*E,J=R*Z,K=I*S,Q=D*P,$=I*P*k,ee=T*R*S,te=R*I,re=-(L-A+O*k-k*C-D*S+B-F+U*S)*W,ae=(A-L-X*T+X*P+B-S*Y+G*S-F)*W,ie=E,ne=(-P*C+J+K*T-D*T+Q-$+G*P-ee)*W,oe=(Z*P-J-te*S+Q-$+te*k+ee-U*P)*W,se=I,le=(-O+Z+K-Y+j-U-z+G)*W,he=(-C+O+D-K+G-H-U+V)*W,ue=-((L=(S=_)*(C=(E=n)*(R=M)))-(A=E*S*(T=c))+(O=E*(P=m))*(k=f)-k*C-(D=(I=o)*(N=w))*S+(B=D*k)-(F=N*k*P)+(U=N*T)*S)*(W=1/(U-(j=N*P)-(V=S*T)+(z=R*S)-(G=R*k)+(H=P*k))),fe=(A-L-(X=E*N)*T+X*P+B-S*(Y=I*k)+G*S-F)*W,ce=E,de=(-P*C+(J=R*(Z=T*E))+(K=I*S)*T-D*T+(Q=D*P)-($=I*P*k)+G*P-(ee=T*R*S))*W,ve=(Z*P-J-(te=R*I)*S+Q-$+te*k+ee-U*P)*W,pe=I,_e=(-O+Z+K-Y+j-U-z+G)*W,ge=(-C+O+D-K+G-H-U+V)*W,me=ie*le;B=se*le-ne;var ye=-ne*he+oe*le,be=re-me;Y=re*he-(O=ae*le);var xe=(A=re*se)-(L=ie*ne),we=(T=re*oe)-(C=ne*ae);$=(S=oe-he*se)*(N=1/(T-A*he-C+L*he+O*se-me*oe));var Me=(H=ie*he-ae)*N,Ee=(Z=-ae*se+ie*oe)*N,Se=e.data;Se[0]=ue*$+fe*(B*N)-ce*(ye*N),Se[1]=ue*Me+fe*(be*N)-ce*(Y*N),Se[2]=-ue*Ee-fe*(xe*N)+ce*(we*N),Se[3]=de*$+ve*(B*N)-pe*(ye*N),Se[4]=de*Me+ve*(be*N)-pe*(Y*N),Se[5]=-de*Ee-ve*(xe*N)+pe*(we*N),Se[6]=_e*$+ge*(B*N)-ye*N,Se[7]=_e*Me+ge*(be*N)-Y*N,Se[8]=-_e*Ee-ge*(xe*N)+we*N},qsort:function(e,r,n,o){var l,h,f,c,d=0,v=0,_=0,i=0,m=0,y=0,x=0,w=0,M=0,E=0,S=0,T=0,A=0,R=0,a=0,b=0,C=0,L=0,P=t;if(!(n-r+1<=1))for(P[0]=r,P[1]=n;d>=0;)for(v=P[d<<1],_=P[1+(d<<1)],d--;;){if((m=_-v+1)<=7){for(x=v+1;x<=_;x++)for(w=x;w>v&&o(e[w],e[w-1]);w--)l=e[w],e[w]=e[w-1],e[w-1]=l;break}for(L=0,E=v,T=_,R=v+(m>>1),m>40&&(b=v+(M=m>>3),C=v+(M<<1),h=e[a=v],f=e[b],c=e[C],v=o(h,f)?o(f,c)?b:o(h,c)?C:a:o(c,f)?b:o(h,c)?a:C,b=R,C=R+M,h=e[a=R-M],f=e[b],c=e[C],R=o(h,f)?o(f,c)?b:o(h,c)?C:a:o(c,f)?b:o(h,c)?a:C,b=_-M,C=_,h=e[a=_-(M<<1)],f=e[b],c=e[C],_=o(h,f)?o(f,c)?b:o(h,c)?C:a:o(c,f)?b:o(h,c)?a:C),b=R,C=_,h=e[a=v],f=e[b],c=e[C],(R=o(h,f)?o(f,c)?b:o(h,c)?C:a:o(c,f)?b:o(h,c)?a:C)!=E&&(l=e[R],e[R]=e[E],e[E]=l,R=E),v=S=E+1,_=A=T,h=e[R];;){for(;v<=_&&!o(h,e[v]);)o(e[v],h)||(v>S&&(l=e[S],e[S]=e[v],e[v]=l),L=1,S++),v++;for(;v<=_&&!o(e[_],h);)o(h,e[_])||(_<A&&(l=e[A],e[A]=e[_],e[_]=l),L=1,A--),_--;if(v>_)break;l=e[v],e[v]=e[_],e[_]=l,L=1,v++,_--}if(0==L){for(_=T,x=(v=E)+1;x<=_;x++)for(w=x;w>v&&o(e[w],e[w-1]);w--)l=e[w],e[w]=e[w-1],e[w-1]=l;break}for(y=v-(m=Math.min(S-E,v-S))|0,i=0;i<m;++i,++y)l=e[E+i],e[E+i]=e[y],e[y]=l;for(y=T-(m=Math.min(T-A,A-_))+1|0,i=0;i<m;++i,++y)l=e[v+i],e[v+i]=e[y],e[y]=l;if(y=A-_,(m=v-S)>1)y>1?m>y?(P[++d<<1]=E,P[1+(d<<1)]=E+m-1,v=T-y+1,_=T):(P[++d<<1]=T-y+1,P[1+(d<<1)]=T,v=E,_=E+m-1):(v=E,_=E+m-1);else{if(!(y>1))break;v=T-y+1,_=T}}},median:function(e,t,r){for(var n,o=0,l=0,h=0,f=t+r>>1;;){if(r<=t)return e[f];if(r==t+1)return e[t]>e[r]&&(n=e[t],e[t]=e[r],e[r]=n),e[f];for(e[o=t+r>>1]>e[r]&&(n=e[o],e[o]=e[r],e[r]=n),e[t]>e[r]&&(n=e[t],e[t]=e[r],e[r]=n),e[o]>e[t]&&(n=e[o],e[o]=e[t],e[t]=n),l=t+1,n=e[o],e[o]=e[l],e[l]=n,h=r;;){do{++l}while(e[t]>e[l]);do{--h}while(e[h]>e[t]);if(h<l)break;n=e[l],e[l]=e[h],e[h]=n}n=e[t],e[t]=e[h],e[h]=n,h<=f?t=l:h>=f&&(r=h-1)}return 0}});e.math=n}(r),function(e){var t={identity:function(e,t){void 0===t&&(t=1);for(var r=e.data,n=e.rows,o=e.cols,l=o+1|0,h=n*o,f=h;--h>=0;)r[h]=0;for(h=f,f=0;f<h;)r[f]=t,f+=l},transpose:function(e,t){for(var i=0,r=0,n=t.rows,o=t.cols,l=0,h=0,f=0,c=t.data,d=e.data;i<n;h+=1,l+=o,i++)for(f=h,r=0;r<o;f+=n,r++)d[f]=c[l+r]},multiply:function(e,t,r){for(var i=0,n=0,o=0,l=0,h=0,f=0,c=0,d=0,v=t.cols,_=t.rows,m=r.cols,y=t.data,x=r.data,w=e.data,M=0;i<_;l+=v,i++)for(c=0,n=0;n<m;d++,c++,n++){for(f=c,h=l,M=0,o=0;o<v;h++,f+=m,o++)M+=y[h]*x[f];w[d]=M}},multiply_ABt:function(e,t,r){for(var i=0,n=0,o=0,l=0,h=0,f=0,c=0,d=t.cols,v=t.rows,_=r.rows,m=t.data,y=r.data,x=e.data,w=0;i<v;l+=d,i++)for(f=0,n=0;n<_;c++,n++){for(h=l,w=0,o=0;o<d;h++,f++,o++)w+=m[h]*y[f];x[c]=w}},multiply_AtB:function(e,t,r){for(var i=0,n=0,o=0,l=0,h=0,f=0,c=0,d=0,v=t.cols,_=t.rows,m=r.cols,y=t.data,x=r.data,w=e.data,M=0;i<v;l++,i++)for(c=0,n=0;n<m;d++,c++,n++){for(f=c,h=l,M=0,o=0;o<_;h+=v,f+=m,o++)M+=y[h]*x[f];w[d]=M}},multiply_AAt:function(e,t){for(var i=0,r=0,n=0,o=0,l=0,h=0,f=0,c=0,d=0,v=t.cols,_=t.rows,m=t.data,y=e.data,x=0;i<_;o+=_+1,l=h,i++)for(c=o,d=o,f=l,r=i;r<_;c++,d+=_,r++){for(h=l,x=0,n=0;n<v;n++)x+=m[h++]*m[f++];y[c]=x,y[d]=x}},multiply_AtA:function(e,t){for(var i=0,r=0,n=0,o=0,l=0,h=0,f=0,c=0,d=0,v=t.cols,_=t.rows,m=t.data,y=e.data,x=0;i<v;f+=v,i++)for(o=i,c=d=f+i,r=i;r<v;c++,d+=v,r++){for(l=o,h=r,x=0,n=0;n<_;l+=v,h+=v,n++)x+=m[l]*m[h];y[c]=x,y[d]=x}},identity_3x3:function(e,t){void 0===t&&(t=1);var dt=e.data;dt[0]=dt[4]=dt[8]=t,dt[1]=dt[2]=dt[3]=0,dt[5]=dt[6]=dt[7]=0},invert_3x3:function(e,t){var r=e.data,n=t.data,o=r[4],l=r[8],h=r[5],f=r[7],c=r[0],d=c*o,v=c*h,_=r[3],m=r[1],y=_*m,x=r[2],w=_*x,M=r[6],E=M*m,S=M*x,T=1/(d*l-v*f-y*l+w*f+E*h-S*o);n[0]=(o*l-h*f)*T,n[1]=-(m*l-x*f)*T,n[2]=-(-m*h+x*o)*T,n[3]=-(_*l-h*M)*T,n[4]=(c*l-S)*T,n[5]=-(v-w)*T,n[6]=-(-_*f+o*M)*T,n[7]=-(c*f-E)*T,n[8]=(d-y)*T},multiply_3x3:function(e,t,r){var n=e.data,o=t.data,l=r.data,h=o[0],f=o[1],c=o[2],d=o[3],v=o[4],_=o[5],m=o[6],y=o[7],x=o[8],w=l[0],M=l[1],E=l[2],S=l[3],T=l[4],A=l[5],R=l[6],C=l[7],L=l[8];n[0]=h*w+f*S+c*R,n[1]=h*M+f*T+c*C,n[2]=h*E+f*A+c*L,n[3]=d*w+v*S+_*R,n[4]=d*M+v*T+_*C,n[5]=d*E+v*A+_*L,n[6]=m*w+y*S+x*R,n[7]=m*M+y*T+x*C,n[8]=m*E+y*A+x*L},mat3x3_determinant:function(e){var t=e.data;return t[0]*t[4]*t[8]-t[0]*t[5]*t[7]-t[3]*t[1]*t[8]+t[3]*t[2]*t[7]+t[6]*t[1]*t[5]-t[6]*t[2]*t[4]},determinant_3x3:function(e,t,r,n,o,l,h,f,c){return e*o*c-e*l*f-n*t*c+n*r*f+h*t*l-h*r*o}};e.matmath=t}(r),function(e){var t,n,o=(t=function(e,t,r,n){n=e[t],e[t]=e[r],e[r]=n},n=function(a,b){return(a=Math.abs(a))>(b=Math.abs(b))?(b/=a,a*Math.sqrt(1+b*b)):b>0?(a/=b,b*Math.sqrt(1+a*a)):0},{lu_solve:function(e,n){var o,l,h,s,i=0,f=0,c=0,p=1,d=e.cols,v=e.data,_=n.data;for(i=0;i<d;i++){for(c=i,f=i+1;f<d;f++)Math.abs(v[f*d+i])>Math.abs(v[c*d+i])&&(c=f);if(Math.abs(v[c*d+i])<r.EPSILON)return 0;if(c!=i){for(f=i;f<d;f++)t(v,i*d+f,c*d+f,o);t(_,i,c,o),p=-p}for(h=-1/v[i*d+i],f=i+1;f<d;f++){for(l=v[f*d+i]*h,c=i+1;c<d;c++)v[f*d+c]+=l*v[i*d+c];_[f]+=l*_[i]}v[i*d+i]=-h}for(i=d-1;i>=0;i--){for(s=_[i],c=i+1;c<d;c++)s-=v[i*d+c]*_[c];_[i]=s*v[i*d+i]}return 1},cholesky_solve:function(e,t){var r,n,col=0,o=0,l=0,h=0,f=0,i=0,c=0,d=e.cols,v=e.data,_=t.data;for(col=0;col<d;col++)for(n=1,f=h=col*d,o=col;o<d;o++){for(r=v[f+col],l=0;l<col;l++)r-=v[l*d+col]*v[f+l];if(o==col){if(v[f+col]=r,0==r)return 0;n=1/r}else v[h+o]=r,v[f+col]=r*n;f+=d}for(h=0,i=0;i<d;i++){for(r=_[i],c=0;c<i;c++)r-=v[h+c]*_[c];_[i]=r,h+=d}for(h=0,i=0;i<d;i++)_[i]/=v[h+i],h+=d;for(i=d-1;i>=0;i--){for(r=_[i],h=(c=i+1)*d;c<d;c++)r-=v[h+i]*_[c],h+=d;_[i]=r}return 1},svd_decompose:function(e,o,l,h,f){void 0===f&&(f=0);var c=0,i=0,d=e.rows,v=e.cols,_=d,m=v,dt=e.type|r.C1_t;_<m&&(c=1,i=_,_=m,m=i);var y=r.cache.get_buffer(_*_<<3),x=r.cache.get_buffer(m<<3),w=r.cache.get_buffer(m*m<<3),M=new r.matrix_t(_,_,dt,y.data),E=new r.matrix_t(1,m,dt,x.data),S=new r.matrix_t(m,m,dt,w.data);if(0==c)r.matmath.transpose(M,e);else{for(i=0;i<v*d;i++)M.data[i]=e.data[i];for(;i<m*_;i++)M.data[i]=0}if(function(e,o,l,h,f,c,d,v){for(var _=2*r.EPSILON,m=r.FLT_MIN,i=0,y=0,x=0,w=0,M=Math.max(c,30),E=0,S=0,T=0,A=0,R=0,C=0,s=0,L=0,P=0,O=0,k=0,I=0,N=0,D=0,a=0,p=0,b=0,B=4660,F=0,U=0,j=0,V=r.cache.get_buffer(d<<3),z=V.f64;i<d;i++){for(x=0,k=0;x<c;x++)k+=(L=e[i*o+x])*L;if(z[i]=k,h){for(x=0;x<d;x++)h[i*f+x]=0;h[i*f+i]=1}}for(;w<M;w++){for(R=0,i=0;i<d-1;i++)for(y=i+1;y<d;y++){for(E=i*o|0,S=y*o|0,a=z[i],p=0,b=z[y],x=2,p+=e[E]*e[S],p+=e[E+1]*e[S+1];x<c;x++)p+=e[E+x]*e[S+x];if(!(Math.abs(p)<=_*Math.sqrt(a*b))){for(N=n(p*=2,I=a-b),I<0?(D=.5*(N-I),C=p/(N*(s=Math.sqrt(D/N))*2)):s=p/(N*(C=Math.sqrt((N+I)/(2*N)))*2),a=0,b=0,x=2,P=C*e[E]+s*e[S],O=-s*e[E]+C*e[S],e[E]=P,e[S]=O,a+=P*P,b+=O*O,P=C*e[E+1]+s*e[S+1],O=-s*e[E+1]+C*e[S+1],e[E+1]=P,e[S+1]=O,a+=P*P,b+=O*O;x<c;x++)P=C*e[E+x]+s*e[S+x],O=-s*e[E+x]+C*e[S+x],e[E+x]=P,e[S+x]=O,a+=P*P,b+=O*O;if(z[i]=a,z[y]=b,R=1,h)for(A=y*f|0,x=2,P=C*h[T=i*f|0]+s*h[A],O=-s*h[T]+C*h[A],h[T]=P,h[A]=O,P=C*h[T+1]+s*h[A+1],O=-s*h[T+1]+C*h[A+1],h[T+1]=P,h[A+1]=O;x<d;x++)P=C*h[T+x]+s*h[A+x],O=-s*h[T+x]+C*h[A+x],h[T+x]=P,h[A+x]=O}}if(0==R)break}for(i=0;i<d;i++){for(x=0,k=0;x<c;x++)k+=(L=e[i*o+x])*L;z[i]=Math.sqrt(k)}for(i=0;i<d-1;i++){for(y=i,x=i+1;x<d;x++)z[y]<z[x]&&(y=x);if(i!=y&&(t(z,i,y,k),h)){for(x=0;x<c;x++)t(e,i*o+x,y*o+x,L);for(x=0;x<d;x++)t(h,i*f+x,y*f+x,L)}}for(i=0;i<d;i++)l[i]=z[i];if(h){for(i=0;i<v;i++){for(k=i<d?z[i]:0;k<=m;){for(U=1/c,x=0;x<c;x++)F=0!=(256&(B=214013*B+2531011)>>16)?U:-U,e[i*o+x]=F;for(w=0;w<2;w++)for(y=0;y<i;y++){for(k=0,x=0;x<c;x++)k+=e[i*o+x]*e[y*o+x];for(j=0,x=0;x<c;x++)L=e[i*o+x]-k*e[y*o+x],e[i*o+x]=L,j+=Math.abs(L);for(j=j?1/j:0,x=0;x<c;x++)e[i*o+x]*=j}for(k=0,x=0;x<c;x++)k+=(L=e[i*o+x])*L;k=Math.sqrt(k)}for(s=1/k,x=0;x<c;x++)e[i*o+x]*=s}r.cache.put_buffer(V)}else r.cache.put_buffer(V)}(M.data,_,E.data,S.data,m,_,m,_),o){for(i=0;i<m;i++)o.data[i]=E.data[i];for(;i<v;i++)o.data[i]=0}if(0==c){if(l&&f&r.SVD_U_T)for(i=_*_;--i>=0;)l.data[i]=M.data[i];else l&&r.matmath.transpose(l,M);if(h&&f&r.SVD_V_T)for(i=m*m;--i>=0;)h.data[i]=S.data[i];else h&&r.matmath.transpose(h,S)}else{if(l&&f&r.SVD_U_T)for(i=m*m;--i>=0;)l.data[i]=S.data[i];else l&&r.matmath.transpose(l,S);if(h&&f&r.SVD_V_T)for(i=_*_;--i>=0;)h.data[i]=M.data[i];else h&&r.matmath.transpose(h,M)}r.cache.put_buffer(y),r.cache.put_buffer(x),r.cache.put_buffer(w)},svd_solve:function(e,t,n){var o,i=0,l=0,h=0,f=0,c=0,d=e.rows,v=e.cols,_=0,m=0,dt=e.type|r.C1_t,y=r.cache.get_buffer(d*d<<3),x=r.cache.get_buffer(v<<3),w=r.cache.get_buffer(v*v<<3),M=new r.matrix_t(d,d,dt,y.data),E=new r.matrix_t(1,v,dt,x.data),S=new r.matrix_t(v,v,dt,w.data),T=n.data,A=M.data,R=E.data,C=S.data;for(this.svd_decompose(e,E,M,S,0),o=r.EPSILON*R[0]*v;i<v;i++,c+=v){for(m=0,l=0;l<v;l++)if(R[l]>o){for(h=0,_=0,f=0;h<d;h++,f+=v)_+=A[f+l]*T[h];m+=_*C[c+l]/R[l]}t.data[i]=m}r.cache.put_buffer(y),r.cache.put_buffer(x),r.cache.put_buffer(w)},svd_invert:function(e,t){var n,i=0,o=0,l=0,h=0,f=0,c=0,d=t.rows,v=t.cols,_=0,dt=t.type|r.C1_t,m=r.cache.get_buffer(d*d<<3),y=r.cache.get_buffer(v<<3),x=r.cache.get_buffer(v*v<<3),w=new r.matrix_t(d,d,dt,m.data),M=new r.matrix_t(1,v,dt,y.data),E=new r.matrix_t(v,v,dt,x.data),S=e.data,T=w.data,A=M.data,R=E.data;for(this.svd_decompose(t,M,w,E,0),n=r.EPSILON*A[0]*v;i<v;i++,f+=v)for(o=0,h=0;o<d;o++,c++){for(l=0,_=0;l<v;l++,h++)A[l]>n&&(_+=R[f+l]*T[h]/A[l]);S[c]=_}r.cache.put_buffer(m),r.cache.put_buffer(y),r.cache.put_buffer(x)},eigenVV:function(e,o,l){for(var h=e.cols,i=h*h,dt=e.type|r.C1_t,f=r.cache.get_buffer(h*h<<3),c=r.cache.get_buffer(h<<3),d=new r.matrix_t(h,h,dt,f.data),v=new r.matrix_t(1,h,dt,c.data);--i>=0;)d.data[i]=e.data[i];if(function(e,o,l,h,f,c){var d=r.EPSILON,i=0,v=0,_=0,m=0,y=0,x=0,w=0,M=0,E=0,S=c*c*30,T=0,A=0,p=0,R=0,C=0,s=0,L=0,P=0,O=0,k=r.cache.get_buffer(c<<2),I=r.cache.get_buffer(c<<2),N=k.i32,D=I.i32;if(h)for(;i<c;i++){for(_=i*f,v=0;v<c;v++)h[_+v]=0;h[_+i]=1}for(_=0;_<c;_++){if(l[_]=e[(o+1)*_],_<c-1){for(m=_+1,T=Math.abs(e[o*_+m]),i=_+2;i<c;i++)T<(A=Math.abs(e[o*_+i]))&&(T=A,m=i);N[_]=m}if(_>0){for(m=0,T=Math.abs(e[_]),i=1;i<_;i++)T<(A=Math.abs(e[o*i+_]))&&(T=A,m=i);D[_]=m}}if(c>1)for(;E<S;E++){for(_=0,T=Math.abs(e[N[0]]),i=1;i<c-1;i++)T<(A=Math.abs(e[o*i+N[i]]))&&(T=A,_=i);for(y=N[_],i=1;i<c;i++)T<(A=Math.abs(e[o*D[i]+i]))&&(T=A,_=D[i],y=i);if(p=e[o*_+y],Math.abs(p)<=d)break;for(R=.5*(l[y]-l[_]),L=(C=Math.abs(R)+n(p,R))/(s=n(p,C)),s=p/s,C=p/C*p,R<0&&(s=-s,C=-C),e[o*_+y]=0,l[_]-=C,l[y]+=C,i=0;i<_;i++)M=o*i+y,P=e[w=o*i+_],O=e[M],e[w]=P*L-O*s,e[M]=P*s+O*L;for(i=_+1;i<y;i++)M=o*i+y,P=e[w=o*_+i],O=e[M],e[w]=P*L-O*s,e[M]=P*s+O*L;for(w=o*_+(i=y+1),M=o*y+i;i<c;i++,w++,M++)P=e[w],O=e[M],e[w]=P*L-O*s,e[M]=P*s+O*L;if(h)for(w=f*_,M=f*y,i=0;i<c;i++,w++,M++)P=h[w],O=h[M],h[w]=P*L-O*s,h[M]=P*s+O*L;for(v=0;v<2;v++){if((x=0==v?_:y)<c-1){for(m=x+1,T=Math.abs(e[o*x+m]),i=x+2;i<c;i++)T<(A=Math.abs(e[o*x+i]))&&(T=A,m=i);N[x]=m}if(x>0){for(m=0,T=Math.abs(e[x]),i=1;i<x;i++)T<(A=Math.abs(e[o*i+x]))&&(T=A,m=i);D[x]=m}}}for(_=0;_<c-1;_++){for(m=_,i=_+1;i<c;i++)l[m]<l[i]&&(m=i);if(_!=m&&(t(l,m,_,T),h))for(i=0;i<c;i++)t(h,f*m+i,f*_+i,T)}r.cache.put_buffer(k),r.cache.put_buffer(I)}(d.data,h,v.data,o?o.data:null,h,h),l)for(;--h>=0;)l.data[h]=v.data[h];r.cache.put_buffer(f),r.cache.put_buffer(c)}});e.linalg=o}(r),function(e){var t,n,o,l,h,f,c,d,v,_,m=(t=function(e){return e*e},n=new r.matrix_t(3,3,r.F32_t|r.C1_t),o=new r.matrix_t(3,3,r.F32_t|r.C1_t),l=new r.matrix_t(6,6,r.F32_t|r.C1_t),h=new r.matrix_t(6,1,r.F32_t|r.C1_t),f=function(){function e(){}return e.prototype.run=function(e,t,f,c){var d,v,i=0,_=0,dt=f.type|r.C1_t,m=f.data,y=n.data,x=o.data,w=0,M=0;!function(e,t,r,n,o){for(var l,h,i=0,f=0,c=0,d=0,v=0,_=0,m=0,y=0,x=0;i<o;++i)f+=e[i].x,c+=e[i].y,v+=t[i].x,_+=t[i].y;for(f/=o,c/=o,v/=o,_/=o,i=0;i<o;++i)y=e[i].x-f,x=e[i].y-c,d+=Math.sqrt(y*y+x*x),y=t[i].x-v,x=t[i].y-_,m+=Math.sqrt(y*y+x*x);d/=o,m/=o,l=Math.SQRT2/d,h=Math.SQRT2/m,r[0]=r[4]=l,r[2]=-f*l,r[5]=-c*l,r[1]=r[3]=r[6]=r[7]=0,r[8]=1,n[0]=n[4]=h,n[2]=-v*h,n[5]=-_*h,n[1]=n[3]=n[6]=n[7]=0,n[8]=1}(e,t,y,x,c);for(var E=r.cache.get_buffer(2*c*6<<3),S=r.cache.get_buffer(2*c<<3),T=new r.matrix_t(6,2*c,dt,E.data),A=new r.matrix_t(1,2*c,dt,S.data),R=T.data,C=A.data;i<c;++i)d=e[i],v=t[i],w=y[0]*d.x+y[1]*d.y+y[2],M=y[3]*d.x+y[4]*d.y+y[5],R[_=2*i*6]=w,R[_+1]=M,R[_+2]=1,R[_+3]=0,R[_+4]=0,R[_+5]=0,R[_+=6]=0,R[_+1]=0,R[_+2]=0,R[_+3]=w,R[_+4]=M,R[_+5]=1,C[i<<1]=x[0]*v.x+x[1]*v.y+x[2],C[1+(i<<1)]=x[3]*v.x+x[4]*v.y+x[5];return r.matmath.multiply_AtA(l,T),r.matmath.multiply_AtB(h,T,A),r.linalg.lu_solve(l,h),m[0]=h.data[0],m[1]=h.data[1],m[2]=h.data[2],m[3]=h.data[3],m[4]=h.data[4],m[5]=h.data[5],m[6]=0,m[7]=0,m[8]=1,r.matmath.invert_3x3(o,o),r.matmath.multiply_3x3(f,o,f),r.matmath.multiply_3x3(f,f,n),r.cache.put_buffer(E),r.cache.put_buffer(S),1},e.prototype.error=function(e,r,n,o,l){for(var h,f,i=0,c=n.data;i<l;++i)h=e[i],f=r[i],o[i]=t(f.x-c[0]*h.x-c[1]*h.y-c[2])+t(f.y-c[3]*h.x-c[4]*h.y-c[5])},e.prototype.check_subset=function(e,t,r){return!0},e}(),c=new r.matrix_t(9,9,r.F32_t|r.C1_t),d=new r.matrix_t(9,9,r.F32_t|r.C1_t),{affine2d:f,homography2d:function(){function e(){}return e.prototype.run=function(e,t,l,h){for(var i=0,f=0,v=l.data,_=n.data,m=o.data,y=c.data,x=d.data,w=0,M=0,E=0,S=0,T=0,A=0,R=0,C=0,L=0,P=0,O=0,k=0;i<h;++i)R+=t[i].x,C+=t[i].y,O+=e[i].x,k+=e[i].y;for(R/=h,C/=h,O/=h,k/=h,i=0;i<h;++i)T+=Math.abs(t[i].x-R),A+=Math.abs(t[i].y-C),L+=Math.abs(e[i].x-O),P+=Math.abs(e[i].y-k);if(Math.abs(T)<r.EPSILON||Math.abs(A)<r.EPSILON||Math.abs(L)<r.EPSILON||Math.abs(P)<r.EPSILON)return 0;for(T=h/T,A=h/A,L=h/L,P=h/P,_[0]=L,_[1]=0,_[2]=-O*L,_[3]=0,_[4]=P,_[5]=-k*P,_[6]=0,_[7]=0,_[8]=1,m[0]=1/T,m[1]=0,m[2]=R,m[3]=0,m[4]=1/A,m[5]=C,m[6]=0,m[7]=0,m[8]=1,i=81;--i>=0;)y[i]=0;for(i=0;i<h;++i)w=(t[i].x-R)*T,M=(t[i].y-C)*A,E=(e[i].x-O)*L,S=(e[i].y-k)*P,y[0]+=E*E,y[1]+=E*S,y[2]+=E,y[6]+=E*-w*E,y[7]+=E*-w*S,y[8]+=E*-w,y[10]+=S*S,y[11]+=S,y[15]+=S*-w*E,y[16]+=S*-w*S,y[17]+=S*-w,y[20]+=1,y[24]+=-w*E,y[25]+=-w*S,y[26]+=-w,y[30]+=E*E,y[31]+=E*S,y[32]+=E,y[33]+=E*-M*E,y[34]+=E*-M*S,y[35]+=E*-M,y[40]+=S*S,y[41]+=S,y[42]+=S*-M*E,y[43]+=S*-M*S,y[44]+=S*-M,y[50]+=1,y[51]+=-M*E,y[52]+=-M*S,y[53]+=-M,y[60]+=-w*E*-w*E+-M*E*-M*E,y[61]+=-w*E*-w*S+-M*E*-M*S,y[62]+=-w*E*-w+-M*E*-M,y[70]+=-w*S*-w*S+-M*S*-M*S,y[71]+=-w*S*-w+-M*S*-M,y[80]+=-w*-w+-M*-M;for(i=0;i<9;++i)for(f=0;f<i;++f)y[9*i+f]=y[9*f+i];return r.linalg.eigenVV(c,d),v[0]=x[72],v[1]=x[73],v[2]=x[74],v[3]=x[75],v[4]=x[76],v[5]=x[77],v[6]=x[78],v[7]=x[79],v[8]=x[80],r.matmath.multiply_3x3(l,o,l),r.matmath.multiply_3x3(l,l,n),w=1/v[8],v[0]*=w,v[1]*=w,v[2]*=w,v[3]*=w,v[4]*=w,v[5]*=w,v[6]*=w,v[7]*=w,v[8]=1,1},e.prototype.error=function(e,t,r,n,o){for(var l,h,i=0,f=0,c=0,d=0,v=r.data;i<o;++i)l=e[i],h=t[i],f=1/(v[6]*l.x+v[7]*l.y+1),c=(v[0]*l.x+v[1]*l.y+v[2])*f-h.x,d=(v[3]*l.x+v[4]*l.y+v[5])*f-h.y,n[i]=c*c+d*d},e.prototype.check_subset=function(e,t,n){if(4==n){var o=0,l=e[0],h=e[1],f=e[2],c=e[3],d=t[0],v=t[1],_=t[2],m=t[3],y=l.x,x=l.y,w=h.x,M=h.y,E=f.x,S=f.y,T=d.x,A=d.y,R=v.x,C=v.y,L=_.x,P=_.y,O=r.matmath.determinant_3x3(y,x,1,w,M,1,E,S,1),k=r.matmath.determinant_3x3(T,A,1,R,C,1,L,P,1);if(O*k<0&&o++,y=h.x,x=h.y,w=f.x,M=f.y,E=c.x,S=c.y,T=v.x,A=v.y,R=_.x,C=_.y,L=m.x,P=m.y,(O=r.matmath.determinant_3x3(y,x,1,w,M,1,E,S,1))*(k=r.matmath.determinant_3x3(T,A,1,R,C,1,L,P,1))<0&&o++,y=l.x,x=l.y,w=f.x,M=f.y,E=c.x,S=c.y,T=d.x,A=d.y,R=_.x,C=_.y,L=m.x,P=m.y,(O=r.matmath.determinant_3x3(y,x,1,w,M,1,E,S,1))*(k=r.matmath.determinant_3x3(T,A,1,R,C,1,L,P,1))<0&&o++,y=l.x,x=l.y,w=h.x,M=h.y,E=c.x,S=c.y,T=d.x,A=d.y,R=v.x,C=v.y,L=m.x,P=m.y,(O=r.matmath.determinant_3x3(y,x,1,w,M,1,E,S,1))*(k=r.matmath.determinant_3x3(T,A,1,R,C,1,L,P,1))<0&&o++,0!=o&&4!=o)return!1}return!0},e}()}),y=function(){function e(e,t,r,n){void 0===e&&(e=0),void 0===t&&(t=.5),void 0===r&&(r=.5),void 0===n&&(n=.99),this.size=e,this.thresh=t,this.eps=r,this.prob=n}return e.prototype.update_iters=function(e,t){var r=Math.log(1-this.prob),n=Math.log(1-Math.pow(1-e,this.size));return 0|(n>=0||-r>=t*-n?t:Math.round(r/n))},e}(),x=(v=function(e,t,r,n,o,l,h){for(var f=[],i=0,c=0,d=0,v=0,_=!1;d<1e3;++d){for(i=0;i<n&&d<1e3;){for(_=!1,v=0;!_;)for(_=!0,v=f[i]=0|Math.floor(Math.random()*o),c=0;c<i;++c)if(v==f[c]){_=!1;break}l[i]=t[v],h[i]=r[v],e.check_subset(l,h,i+1)?++i:d++}break}return i==n&&d<1e3},_=function(e,t,r,n,o,l,h,mask){var f=0,i=0,c=0,d=l*l;for(e.error(r,n,t,h,o);i<o;++i)c=h[i]<=d,mask[i]=c,f+=c;return f},{ransac:function(e,t,n,o,l,h,mask,f){if(void 0===f&&(f=1e3),l<e.size)return!1;var c=e.size,d=f,m=0,y=!1,x=[],w=[],M=h.cols,E=h.rows,dt=h.type|r.C1_t,S=r.cache.get_buffer(M*E<<3),T=r.cache.get_buffer(l),A=r.cache.get_buffer(l<<2),R=new r.matrix_t(M,E,dt,S.data),C=new r.matrix_t(l,1,r.U8C1_t,T.data),L=-1,P=0,O=A.f32;if(l==c){if(t.run(n,o,R,l)<=0)return r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(A),!1;if(R.copy_to(h),mask)for(;--l>=0;)mask.data[l]=1;return r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(A),!0}for(;m<d;++m){if(!v(t,n,o,c,l,x,w)){if(0==m)return r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(A),!1;break}t.run(x,w,R,c)<=0||(P=_(t,R,n,o,l,e.thresh,O,C.data))>Math.max(L,c-1)&&(R.copy_to(h),L=P,mask&&C.copy_to(mask),d=e.update_iters((l-P)/l,d),y=!0)}return r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(A),y},lmeds:function(e,t,n,o,l,h,mask,f){if(void 0===f&&(f=1e3),l<e.size)return!1;var c=e.size,d=f,m=0,y=!1,x=[],w=[],M=h.cols,E=h.rows,dt=h.type|r.C1_t,S=r.cache.get_buffer(M*E<<3),T=r.cache.get_buffer(l),A=r.cache.get_buffer(l<<2),R=new r.matrix_t(M,E,dt,S.data),C=new r.matrix_t(l,1,r.U8_t|r.C1_t,T.data),L=0,P=A.f32,O=1e9,k=0,I=0;if(e.eps=.45,d=e.update_iters(e.eps,d),l==c){if(t.run(n,o,R,l)<=0)return r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(A),!1;if(R.copy_to(h),mask)for(;--l>=0;)mask.data[l]=1;return r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(A),!0}for(;m<d;++m){if(!v(t,n,o,c,l,x,w)){if(0==m)return r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(A),!1;break}t.run(x,w,R,c)<=0||(t.error(n,o,R,P,l),(I=r.math.median(P,0,l-1))<O&&(O=I,R.copy_to(h),y=!0))}return y&&(k=2.5*1.4826*(1+5/(l-c))*Math.sqrt(O),k=Math.max(k,.001),L=_(t,h,n,o,l,k,P,C.data),mask&&C.copy_to(mask),y=L>=c),r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(A),y}});e.ransac_params_t=y,e.motion_model=m,e.motion_estimator=x}(r),function(e){var t={grayscale:function(e,t,n,o,code){void 0===code&&(code=r.COLOR_RGBA2GRAY);var l=0,h=0,i=0,f=0,c=0,d=0,v=4899,_=1868,m=4;code!=r.COLOR_BGRA2GRAY&&code!=r.COLOR_BGR2GRAY||(v=1868,_=4899),code!=r.COLOR_RGB2GRAY&&code!=r.COLOR_BGR2GRAY||(m=3);var y=m<<1,x=3*m|0;o.resize(t,n,1);var w=o.data;for(h=0;h<n;++h,f+=t,i+=t*m){for(l=0,c=i,d=f;l<=t-4;l+=4,c+=m<<2,d+=4)w[d]=e[c]*v+9617*e[c+1]+e[c+2]*_+8192>>14,w[d+1]=e[c+m]*v+9617*e[c+m+1]+e[c+m+2]*_+8192>>14,w[d+2]=e[c+y]*v+9617*e[c+y+1]+e[c+y+2]*_+8192>>14,w[d+3]=e[c+x]*v+9617*e[c+x+1]+e[c+x+2]*_+8192>>14;for(;l<t;++l,++d,c+=m)w[d]=e[c]*v+9617*e[c+1]+e[c+2]*_+8192>>14}},resample:function(e,t,n,o){var l=e.rows,h=e.cols;l>o&&h>n&&(t.resize(n,o,e.channel),e.type&r.U8_t&&t.type&r.U8_t&&l*h/(o*n)<256?function(e,t,n,o){for(var l=0,h=e.channel,f=e.cols,c=e.rows,d=e.data,v=t.data,_=f/n,m=c/o,y=_*m*65536|0,x=0,w=0,M=0,E=0,S=0,T=0,i=0,A=0,R=0,C=0,a=0,b=0,L=0,P=0,O=0,k=0,I=r.cache.get_buffer(n*h<<2),N=r.cache.get_buffer(n*h<<2),D=r.cache.get_buffer(2*f*3<<2),B=I.i32,F=N.i32,U=D.i32;x<n;x++){for(S=1+(R=x*_)-1e-6|0,T=0|(C=R+_),S=Math.min(S,f-1),T=Math.min(T,f-1),S>R&&(U[A++]=x*h|0,U[A++]=(S-1)*h|0,U[A++]=256*(S-R)|0,l++),M=S;M<T;M++)l++,U[A++]=x*h|0,U[A++]=M*h|0,U[A++]=256;C-T>.001&&(l++,U[A++]=x*h|0,U[A++]=T*h|0,U[A++]=256*(C-T)|0)}for(x=0;x<n*h;x++)B[x]=F[x]=0;for(w=0,E=0;E<c;E++){for(a=f*E,A=0;A<l;A++)for(L=U[3*A],S=U[3*A+1],P=U[3*A+2],i=0;i<h;i++)B[L+i]+=d[a+S+i]*P;if((w+1)*m<=E+1||E==c-1){if(k=256-(O=256*Math.max(E+1-(w+1)*m,0)|0),b=n*w,O<=0)for(x=0;x<n*h;x++)v[b+x]=Math.min(Math.max((F[x]+256*B[x])/y,0),255),F[x]=B[x]=0;else for(x=0;x<n*h;x++)v[b+x]=Math.min(Math.max((F[x]+B[x]*k)/y,0),255),F[x]=B[x]*O,B[x]=0;w++}else for(x=0;x<n*h;x++)F[x]+=256*B[x],B[x]=0}r.cache.put_buffer(N),r.cache.put_buffer(I),r.cache.put_buffer(D)}(e,t,n,o):function(e,t,n,o){for(var l=0,h=e.channel,f=e.cols,c=e.rows,d=e.data,v=t.data,_=f/n,m=c/o,y=1/(_*m),x=0,w=0,M=0,E=0,S=0,T=0,i=0,A=0,R=0,C=0,a=0,b=0,L=0,P=0,O=0,k=0,I=r.cache.get_buffer(n*h<<2),N=r.cache.get_buffer(n*h<<2),D=r.cache.get_buffer(2*f*3<<2),B=I.f32,F=N.f32,U=D.f32;x<n;x++){for(S=1+(R=x*_)-1e-6|0,T=0|(C=R+_),S=Math.min(S,f-1),T=Math.min(T,f-1),S>R&&(l++,U[A++]=(S-1)*h|0,U[A++]=x*h|0,U[A++]=(S-R)*y),M=S;M<T;M++)l++,U[A++]=M*h|0,U[A++]=x*h|0,U[A++]=y;C-T>.001&&(l++,U[A++]=T*h|0,U[A++]=x*h|0,U[A++]=(C-T)*y)}for(x=0;x<n*h;x++)B[x]=F[x]=0;for(w=0,E=0;E<c;E++){for(a=f*E,A=0;A<l;A++)for(S=0|U[3*A],L=0|U[3*A+1],P=U[3*A+2],i=0;i<h;i++)B[L+i]+=d[a+S+i]*P;if((w+1)*m<=E+1||E==c-1){if(k=1-(O=Math.max(E+1-(w+1)*m,0)),b=n*w,Math.abs(O)<.001)for(x=0;x<n*h;x++)v[b+x]=F[x]+B[x],F[x]=B[x]=0;else for(x=0;x<n*h;x++)v[b+x]=F[x]+B[x]*k,F[x]=B[x]*O,B[x]=0;w++}else for(x=0;x<n*h;x++)F[x]+=B[x],B[x]=0}r.cache.put_buffer(N),r.cache.put_buffer(I),r.cache.put_buffer(D)}(e,t,n,o))},box_blur_gray:function(e,t,n,o){void 0===o&&(o=0);var l=e.cols,h=e.rows,h2=h<<1,f=l<<1,i=0,c=0,d=0,v=0,_=1+(n<<1)|0,m=n+1|0,y=m+1|0,x=o&r.BOX_BLUR_NOSCALE?1:1/(_*_),w=r.cache.get_buffer(l*h<<2),M=0,E=0,S=0,T=0,A=0,R=w.i32,C=e.data,L=0;for(t.resize(l,h,e.channel),d=0;d<h;++d){for(E=d,M=m*C[S],i=S+1|0,v=S+n|0;i<=v;++i)M+=C[i];for(T=S+m|0,L=C[A=S],c=0;c<n;++c,E+=h)R[E]=M,M+=C[T]-L,T++;for(;c<l-y;c+=2,E+=h2)R[E]=M,M+=C[T]-C[A],R[E+h]=M,M+=C[T+1]-C[A+1],T+=2,A+=2;for(;c<l-m;++c,E+=h)R[E]=M,M+=C[T]-C[A],T++,A++;for(L=C[T-1];c<l;++c,E+=h)R[E]=M,M+=L-C[A],A++;S+=l}if(S=0,C=t.data,1==x)for(d=0;d<l;++d){for(E=d,M=m*R[S],i=S+1|0,v=S+n|0;i<=v;++i)M+=R[i];for(T=S+m,L=R[A=S],c=0;c<n;++c,E+=l)C[E]=M,M+=R[T]-L,T++;for(;c<h-y;c+=2,E+=f)C[E]=M,M+=R[T]-R[A],C[E+l]=M,M+=R[T+1]-R[A+1],T+=2,A+=2;for(;c<h-m;++c,E+=l)C[E]=M,M+=R[T]-R[A],T++,A++;for(L=R[T-1];c<h;++c,E+=l)C[E]=M,M+=L-R[A],A++;S+=h}else for(d=0;d<l;++d){for(E=d,M=m*R[S],i=S+1|0,v=S+n|0;i<=v;++i)M+=R[i];for(T=S+m,L=R[A=S],c=0;c<n;++c,E+=l)C[E]=M*x,M+=R[T]-L,T++;for(;c<h-y;c+=2,E+=f)C[E]=M*x,M+=R[T]-R[A],C[E+l]=M*x,M+=R[T+1]-R[A+1],T+=2,A+=2;for(;c<h-m;++c,E+=l)C[E]=M*x,M+=R[T]-R[A],T++,A++;for(L=R[T-1];c<h;++c,E+=l)C[E]=M*x,M+=L-R[A],A++;S+=h}r.cache.put_buffer(w)},gaussian_blur:function(e,t,n,o){void 0===o&&(o=0),void 0===n&&(n=0);var l=(n=0==n?2*Math.max(1,4*o+1-1e-8)+1|0:n)>>1,h=e.cols,f=e.rows,c=e.type,d=c&r.U8_t;t.resize(h,f,e.channel);var v,filter,_=e.data,m=t.data,y=n+Math.max(f,h)|0,x=r.cache.get_buffer(y<<2),w=r.cache.get_buffer(n<<2);d?(v=x.i32,filter=w.i32):c&r.S32_t?(v=x.i32,filter=w.f32):(v=x.f32,filter=w.f32),r.math.get_gaussian_kernel(n,o,filter,c),d?function(e,t,r,n,o,filter,l,h){for(var i=0,f=0,c=0,d=0,v=0,_=0,m=0,y=0,x=0,w=filter[0],M=0,E=n<<1,S=3*n,T=n<<2;i<o;++i){for(_=t[d],f=0;f<h;++f)e[f]=_;for(f=0;f<=n-2;f+=2)e[f+h]=t[d+f],e[f+h+1]=t[d+f+1];for(;f<n;++f)e[f+h]=t[d+f];for(_=t[d+n-1],f=n;f<h+n;++f)e[f+h]=_;for(f=0;f<=n-4;f+=4){for(_=e[f]*w,m=e[f+1]*w,y=e[f+2]*w,x=e[f+3]*w,c=1;c<l;++c)M=filter[c],_+=e[c+f]*M,m+=e[c+f+1]*M,y+=e[c+f+2]*M,x+=e[c+f+3]*M;r[v+f]=Math.min(_>>8,255),r[v+f+1]=Math.min(m>>8,255),r[v+f+2]=Math.min(y>>8,255),r[v+f+3]=Math.min(x>>8,255)}for(;f<n;++f){for(_=e[f]*w,c=1;c<l;++c)_+=e[c+f]*filter[c];r[v+f]=Math.min(_>>8,255)}d+=n,v+=n}for(i=0;i<n;++i){for(_=r[i],f=0;f<h;++f)e[f]=_;for(c=i,f=0;f<=o-2;f+=2,c+=E)e[f+h]=r[c],e[f+h+1]=r[c+n];for(;f<o;++f,c+=n)e[f+h]=r[c];for(_=r[(o-1)*n+i],f=o;f<h+o;++f)e[f+h]=_;for(v=i,f=0;f<=o-4;f+=4,v+=T){for(_=e[f]*w,m=e[f+1]*w,y=e[f+2]*w,x=e[f+3]*w,c=1;c<l;++c)M=filter[c],_+=e[c+f]*M,m+=e[c+f+1]*M,y+=e[c+f+2]*M,x+=e[c+f+3]*M;r[v]=Math.min(_>>8,255),r[v+n]=Math.min(m>>8,255),r[v+E]=Math.min(y>>8,255),r[v+S]=Math.min(x>>8,255)}for(;f<o;++f,v+=n){for(_=e[f]*w,c=1;c<l;++c)_+=e[c+f]*filter[c];r[v]=Math.min(_>>8,255)}}}(v,_,m,h,f,filter,n,l):function(e,t,r,n,o,filter,l,h){for(var i=0,f=0,c=0,d=0,v=0,_=0,m=0,y=0,x=0,w=filter[0],M=0,E=n<<1,S=3*n,T=n<<2;i<o;++i){for(_=t[d],f=0;f<h;++f)e[f]=_;for(f=0;f<=n-2;f+=2)e[f+h]=t[d+f],e[f+h+1]=t[d+f+1];for(;f<n;++f)e[f+h]=t[d+f];for(_=t[d+n-1],f=n;f<h+n;++f)e[f+h]=_;for(f=0;f<=n-4;f+=4){for(_=e[f]*w,m=e[f+1]*w,y=e[f+2]*w,x=e[f+3]*w,c=1;c<l;++c)M=filter[c],_+=e[c+f]*M,m+=e[c+f+1]*M,y+=e[c+f+2]*M,x+=e[c+f+3]*M;r[v+f]=_,r[v+f+1]=m,r[v+f+2]=y,r[v+f+3]=x}for(;f<n;++f){for(_=e[f]*w,c=1;c<l;++c)_+=e[c+f]*filter[c];r[v+f]=_}d+=n,v+=n}for(i=0;i<n;++i){for(_=r[i],f=0;f<h;++f)e[f]=_;for(c=i,f=0;f<=o-2;f+=2,c+=E)e[f+h]=r[c],e[f+h+1]=r[c+n];for(;f<o;++f,c+=n)e[f+h]=r[c];for(_=r[(o-1)*n+i],f=o;f<h+o;++f)e[f+h]=_;for(v=i,f=0;f<=o-4;f+=4,v+=T){for(_=e[f]*w,m=e[f+1]*w,y=e[f+2]*w,x=e[f+3]*w,c=1;c<l;++c)M=filter[c],_+=e[c+f]*M,m+=e[c+f+1]*M,y+=e[c+f+2]*M,x+=e[c+f+3]*M;r[v]=_,r[v+n]=m,r[v+E]=y,r[v+S]=x}for(;f<o;++f,v+=n){for(_=e[f]*w,c=1;c<l;++c)_+=e[c+f]*filter[c];r[v]=_}}}(v,_,m,h,f,filter,n,l),r.cache.put_buffer(x),r.cache.put_buffer(w)},hough_transform:function(img,e,t,r){var image=img.data,n=img.cols,o=img.rows,l=n;min_theta=0,max_theta=Math.PI,numangle=Math.round((max_theta-min_theta)/t),numrho=Math.round((2*(n+o)+1)/e),irho=1/e;for(var h=new Int32Array((numangle+2)*(numrho+2)),f=new Float32Array(numangle),c=new Float32Array(numangle),d=0,v=min_theta;d<numangle;d++)f[d]=Math.sin(v)*irho,c[d]=Math.cos(v)*irho,v+=t;for(var i=0;i<o;i++)for(var _=0;_<n;_++)if(0!=image[i*l+_])for(d=0;d<numangle;d++){var m=Math.round(_*c[d]+i*f[d]);m+=(numrho-1)/2,h[(d+1)*(numrho+2)+m+1]+=1}for(_sort_buf=new Array,m=0;m<numrho;m++)for(d=0;d<numangle;d++){var base=(d+1)*(numrho+2)+m+1;h[base]>r&&h[base]>h[base-1]&&h[base]>=h[base+1]&&h[base]>h[base-numrho-2]&&h[base]>=h[base+numrho+2]&&_sort_buf.push(base)}for(_sort_buf.sort((function(e,t){return h[e]>h[t]||h[e]==h[t]&&e<t})),linesMax=Math.min(numangle*numrho,_sort_buf.length),scale=1/(numrho+2),lines=new Array,i=0;i<linesMax;i++){var y=_sort_buf[i],x=((m=y-(1+(d=Math.floor(y*scale)-1))*(numrho+2)-1)-.5*(numrho-1))*e,w=d*t;lines.push([x,w])}return lines},pyrdown:function(e,t,r,n){void 0===r&&(r=0),void 0===n&&(n=0);var o=e.cols,l=o>>1,h2=e.rows>>1,h=l-(r<<1),f=h2-(n<<1),c=0,d=0,v=r+n*o,_=0,m=0,y=0;t.resize(l,h2,e.channel);var x=e.data,w=t.data;for(d=0;d<f;++d){for(_=v,y=m,c=0;c<=h-2;c+=2,y+=2,_+=4)w[y]=x[_]+x[_+1]+x[_+o]+x[_+o+1]+2>>2,w[y+1]=x[_+2]+x[_+3]+x[_+o+2]+x[_+o+3]+2>>2;for(;c<h;++c,++y,_+=2)w[y]=x[_]+x[_+1]+x[_+o]+x[_+o+1]+2>>2;v+=o<<1,m+=l}},scharr_derivatives:function(e,t){var a,b,n,o,l,h,f,c,d=e.cols,v=e.rows,_=d<<1,m=0,y=0,x=0,w=0,M=0,E=0,S=0;t.resize(d,v,2);var img=e.data,T=t.data,A=r.cache.get_buffer(d+2<<2),R=r.cache.get_buffer(d+2<<2);for(e.type&r.U8_t||e.type&r.S32_t?(f=A.i32,c=R.i32):(f=A.f32,c=R.f32);y<v;++y,M+=d){for(w=(y>0?y-1:1)*d|0,E=(y<v-1?y+1:v-2)*d|0,S=y*_|0,m=0,x=1;m<=d-2;m+=2,x+=2)a=img[w+m],b=img[E+m],f[x]=3*(a+b)+10*img[M+m],c[x]=b-a,a=img[w+m+1],b=img[E+m+1],f[x+1]=3*(a+b)+10*img[M+m+1],c[x+1]=b-a;for(;m<d;++m,++x)a=img[w+m],b=img[E+m],f[x]=3*(a+b)+10*img[M+m],c[x]=b-a;for(m=d+1|0,f[0]=f[1],f[m]=f[d],c[0]=c[1],c[m]=c[d],m=0;m<=d-4;m+=4)a=c[m+2],b=c[m+1],n=c[m+3],o=c[m+4],l=f[m+2],h=f[m+3],T[S++]=l-f[m],T[S++]=3*(a+c[m])+10*b,T[S++]=h-f[m+1],T[S++]=3*(n+b)+10*a,T[S++]=f[m+4]-l,T[S++]=3*(o+a)+10*n,T[S++]=f[m+5]-h,T[S++]=3*(c[m+5]+n)+10*o;for(;m<d;++m)T[S++]=f[m+2]-f[m],T[S++]=3*(c[m+2]+c[m])+10*c[m+1]}r.cache.put_buffer(A),r.cache.put_buffer(R)},sobel_derivatives:function(e,t){var a,b,n,o,l,h,f,c,d=e.cols,v=e.rows,_=d<<1,m=0,y=0,x=0,w=0,M=0,E=0,S=0;t.resize(d,v,2);var img=e.data,T=t.data,A=r.cache.get_buffer(d+2<<2),R=r.cache.get_buffer(d+2<<2);for(e.type&r.U8_t||e.type&r.S32_t?(f=A.i32,c=R.i32):(f=A.f32,c=R.f32);y<v;++y,M+=d){for(w=(y>0?y-1:1)*d|0,E=(y<v-1?y+1:v-2)*d|0,S=y*_|0,m=0,x=1;m<=d-2;m+=2,x+=2)a=img[w+m],b=img[E+m],f[x]=a+b+2*img[M+m],c[x]=b-a,a=img[w+m+1],b=img[E+m+1],f[x+1]=a+b+2*img[M+m+1],c[x+1]=b-a;for(;m<d;++m,++x)a=img[w+m],b=img[E+m],f[x]=a+b+2*img[M+m],c[x]=b-a;for(m=d+1|0,f[0]=f[1],f[m]=f[d],c[0]=c[1],c[m]=c[d],m=0;m<=d-4;m+=4)a=c[m+2],b=c[m+1],n=c[m+3],o=c[m+4],l=f[m+2],h=f[m+3],T[S++]=l-f[m],T[S++]=a+c[m]+2*b,T[S++]=h-f[m+1],T[S++]=n+b+2*a,T[S++]=f[m+4]-l,T[S++]=o+a+2*n,T[S++]=f[m+5]-h,T[S++]=c[m+5]+n+2*o;for(;m<d;++m)T[S++]=f[m+2]-f[m],T[S++]=c[m+2]+c[m]+2*c[m+1]}r.cache.put_buffer(A),r.cache.put_buffer(R)},compute_integral_image:function(e,t,r,n){var o=0|e.cols,l=0|e.rows,h=e.data,f=o+1|0,s=0,c=0,p=0,d=0,i=0,v=0,_=0,m=0;if(t&&r){for(;i<f;++i)t[i]=0,r[i]=0;for(p=f+1|0,d=1,i=0,m=0;i<l;++i,++p,++d){for(s=c=0,v=0;v<=o-2;v+=2,m+=2,p+=2,d+=2)s+=_=h[m],c+=_*_,t[p]=t[d]+s,r[p]=r[d]+c,s+=_=h[m+1],c+=_*_,t[p+1]=t[d+1]+s,r[p+1]=r[d+1]+c;for(;v<o;++v,++m,++p,++d)s+=_=h[m],c+=_*_,t[p]=t[d]+s,r[p]=r[d]+c}}else if(t){for(;i<f;++i)t[i]=0;for(p=f+1|0,d=1,i=0,m=0;i<l;++i,++p,++d){for(s=0,v=0;v<=o-2;v+=2,m+=2,p+=2,d+=2)s+=h[m],t[p]=t[d]+s,s+=h[m+1],t[p+1]=t[d+1]+s;for(;v<o;++v,++m,++p,++d)s+=h[m],t[p]=t[d]+s}}else if(r){for(;i<f;++i)r[i]=0;for(p=f+1|0,d=1,i=0,m=0;i<l;++i,++p,++d){for(c=0,v=0;v<=o-2;v+=2,m+=2,p+=2,d+=2)c+=(_=h[m])*_,r[p]=r[d]+c,c+=(_=h[m+1])*_,r[p+1]=r[d+1]+c;for(;v<o;++v,++m,++p,++d)c+=(_=h[m])*_,r[p]=r[d]+c}}if(n){for(i=0;i<f;++i)n[i]=0;for(p=f+1|0,d=0,i=0,m=0;i<l;++i,++p,++d){for(v=0;v<=o-2;v+=2,m+=2,p+=2,d+=2)n[p]=h[m]+n[d],n[p+1]=h[m+1]+n[d+1];for(;v<o;++v,++m,++p,++d)n[p]=h[m]+n[d]}for(p=f+o|0,d=o,i=0;i<l;++i,p+=f,d+=f)n[p]+=n[d];for(v=o-1;v>0;--v)for(d=(p=v+l*f)-f,i=l;i>0;--i,p-=f,d-=f)n[p]+=n[d]+n[d+1]}},equalize_histogram:function(e,t){var n=e.cols,o=e.rows,l=e.data;t.resize(n,o,e.channel);var h,f,c=t.data,d=n*o,i=0,v=0,_=r.cache.get_buffer(1024);for(h=_.i32;i<256;++i)h[i]=0;for(i=0;i<d;++i)++h[l[i]];for(v=h[0],i=1;i<256;++i)v=h[i]+=v;for(f=255/d,i=0;i<d;++i)c[i]=h[l[i]]*f+.5|0;r.cache.put_buffer(_)},canny:function(e,t,n,o){var l=e.cols,h=e.rows;e.data,t.resize(l,h,e.channel);var f=t.data,i=0,c=0,d=0,v=l<<1,_=0,m=0,y=0,x=0,w=0,s=0,M=0,E=0,S=r.cache.get_buffer(h*v<<2),T=r.cache.get_buffer(3*(l+2)<<2),A=r.cache.get_buffer((h+2)*(l+2)<<2),R=r.cache.get_buffer(h*l<<2),C=T.i32,map=A.i32,L=R.i32,P=S.i32,O=new r.matrix_t(l,h,r.S32C2_t,S.data),k=1,I=l+2+1|0,N=2*(l+2)+1|0,D=l+2|0,B=D+1|0,F=0;for(this.sobel_derivatives(e,O),n>o&&(i=n,n=o,o=i),i=3*(l+2)|0;--i>=0;)C[i]=0;for(i=(h+2)*(l+2)|0;--i>=0;)map[i]=0;for(;c<l;++c,d+=2)x=P[d],w=P[d+1],C[I+c]=(x^x>>31)-(x>>31)+((w^w>>31)-(w>>31));for(i=1;i<=h;++i,d+=v){if(i==h)for(c=N+l;--c>=N;)C[c]=0;else for(c=0;c<l;c++)x=P[d+(c<<1)],w=P[d+(c<<1)+1],C[N+c]=(x^x>>31)-(x>>31)+((w^w>>31)-(w>>31));for(_=d-v|0,map[B-1]=0,m=0,c=0;c<l;++c,_+=2){if((y=C[I+c])>n)if(s=(x=P[_])^(w=P[_+1]),w=(w^w>>31)-(w>>31)|0,E=(M=13573*(x=(x^x>>31)-(x>>31)|0))+(x+x<<15),(w<<=15)<M){if(y>C[I+c-1]&&y>=C[I+c+1]){y>o&&!m&&2!=map[B+c-D]?(map[B+c]=2,m=1,L[F++]=B+c):map[B+c]=1;continue}}else if(w>E){if(y>C[k+c]&&y>=C[N+c]){y>o&&!m&&2!=map[B+c-D]?(map[B+c]=2,m=1,L[F++]=B+c):map[B+c]=1;continue}}else if(y>C[k+c-(s=s<0?-1:1)]&&y>C[N+c+s]){y>o&&!m&&2!=map[B+c-D]?(map[B+c]=2,m=1,L[F++]=B+c):map[B+c]=1;continue}map[B+c]=0,m=0}map[B+l]=0,B+=D,c=k,k=I,I=N,N=c}for(c=B-D-1,i=0;i<D;++i,++c)map[c]=0;for(;F>0;)B=L[--F],1==map[B-=D+1]&&(map[B]=2,L[F++]=B),1==map[B+=1]&&(map[B]=2,L[F++]=B),1==map[B+=1]&&(map[B]=2,L[F++]=B),1==map[B+=D]&&(map[B]=2,L[F++]=B),1==map[B-=2]&&(map[B]=2,L[F++]=B),1==map[B+=D]&&(map[B]=2,L[F++]=B),1==map[B+=1]&&(map[B]=2,L[F++]=B),1==map[B+=1]&&(map[B]=2,L[F++]=B);for(B=D+1,k=0,i=0;i<h;++i,B+=D)for(c=0;c<l;++c)f[k++]=255*(2==map[B+c]);r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(A),r.cache.put_buffer(R)},warp_perspective:function(e,t,r,n){void 0===n&&(n=0);for(var o=0|e.cols,l=0|e.rows,h=0|t.cols,f=0|t.rows,c=e.data,d=t.data,v=0,_=0,m=0,y=0,x=0,w=0,M=0,E=0,S=0,T=0,A=0,a=0,b=0,R=0,C=0,td=r.data,L=td[0],P=td[1],O=td[2],k=td[3],I=td[4],N=td[5],D=td[6],B=td[7],F=td[8],U=0;_<f;++_)for(E=P*_+O,S=I*_+N,T=B*_+F,v=0;v<h;++v,++U,E+=L,S+=k,T+=D)y=0|(w=E*(A=1/T)),x=0|(M=S*A),w>0&&M>0&&y<o-1&&x<l-1?(a=Math.max(w-y,0),b=Math.max(M-x,0),R=c[m=o*x+y|0]+a*(c[m+1]-c[m]),C=c[m+o]+a*(c[m+o+1]-c[m+o]),d[U]=R+b*(C-R)):d[U]=n},warp_affine:function(e,t,r,n){void 0===n&&(n=0);for(var o=e.cols,l=e.rows,h=t.cols,f=t.rows,c=e.data,d=t.data,v=0,_=0,m=0,y=0,x=0,w=0,M=0,a=0,b=0,E=0,S=0,td=r.data,T=td[0],A=td[1],R=td[2],C=td[3],L=td[4],P=td[5],O=0;_<f;++_)for(w=A*_+R,M=L*_+P,v=0;v<h;++v,++O,w+=T,M+=C)x=0|M,(y=0|w)>=0&&x>=0&&y<o-1&&x<l-1?(a=w-y,b=M-x,E=c[m=o*x+y]+a*(c[m+1]-c[m]),S=c[m+o]+a*(c[m+o+1]-c[m+o]),d[O]=E+b*(S-E)):d[O]=n},skindetector:function(e,t){for(var r,g,b,n,i=e.width*e.height;i--;)n=4*i,r=e.data[n],g=e.data[n+1],b=e.data[n+2],r>95&&g>40&&b>20&&r>g&&r>b&&r-Math.min(g,b)>15&&Math.abs(r-g)>15?t[i]=255:t[i]=0}};e.imgproc=t}(r),function(e){var t,n,o,l,h,f,c=(t=new Int32Array([0,3,1,3,2,2,3,1,3,0,3,-1,2,-2,1,-3,0,-3,-1,-3,-2,-2,-3,-1,-3,0,-3,1,-2,2,-1,3]),n=new Uint8Array(512),o=new Int32Array(25),l=new Int32Array(25),h=function(e,t,r,n,o){for(var l=0,h=e[t],f=o,a=0,c=0,b=0;l<25;++l)n[l]=h-e[t+r[l]];for(l=0;l<16;l+=2)a=Math.min(n[l+1],n[l+2]),(a=Math.min(a,n[l+3]))<=f||(a=Math.min(a,n[l+4]),a=Math.min(a,n[l+5]),a=Math.min(a,n[l+6]),a=Math.min(a,n[l+7]),a=Math.min(a,n[l+8]),f=Math.max(f,Math.min(a,n[l])),f=Math.max(f,Math.min(a,n[l+9])));for(c=-f,l=0;l<16;l+=2)b=Math.max(n[l+1],n[l+2]),b=Math.max(b,n[l+3]),b=Math.max(b,n[l+4]),(b=Math.max(b,n[l+5]))>=c||(b=Math.max(b,n[l+6]),b=Math.max(b,n[l+7]),b=Math.max(b,n[l+8]),c=Math.min(c,Math.max(b,n[l])),c=Math.min(c,Math.max(b,n[l+9])));return-c-1},f=20,{set_threshold:function(e){f=Math.min(Math.max(e,0),255);for(var i=-255;i<=255;++i)n[i+255]=i<-f?1:i>f?2:0;return f},detect:function(e,c,d){void 0===d&&(d=3);var v,img=e.data,_=e.cols,m=e.rows,i=0,y=0,x=0,w=0,M=0,E=r.cache.get_buffer(3*_),S=r.cache.get_buffer(3*(_+1)<<2),T=E.u8,A=S.i32,R=o,C=l,L=Math.max(3,d),P=Math.min(m-2,m-d),O=Math.max(3,d),k=Math.min(_-3,_-d),I=0,N=0,D=h,B=n,F=f,U=0,j=0,V=0,z=0,G=0,H=0,W=0,X=0,Y=0,Z=0,J=0,K=0;!function(e,r,n){for(var o=0,l=t;o<n;++o)e[o]=l[o<<1]+l[1+(o<<1)]*r;for(;o<25;++o)e[o]=e[o-n]}(R,_,16);var Q=R[0],$=R[1],ee=R[2],te=R[3],re=R[4],ae=R[5],ie=R[6],ne=R[7],oe=R[8],se=R[9],le=R[10],he=R[11],ue=R[12],fe=R[13],ce=R[14],de=R[15];for(i=0;i<3*_;++i)T[i]=0;for(i=L;i<P;++i){for(W=i*_+O|0,H=(M=(i-3)%3)*_|0,G=M*(_+1)|0,y=0;y<_;++y)T[H+y]=0;if(z=0,i<P-1)for(y=O;y<k;++y,++W)if(0!=(V=B[(j=255-(U=img[W]))+img[W+Q]]|B[j+img[W+oe]])&&(V&=B[j+img[W+ee]]|B[j+img[W+le]],V&=B[j+img[W+re]]|B[j+img[W+ue]],0!=(V&=B[j+img[W+ie]]|B[j+img[W+ce]]))){if(V&=B[j+img[W+$]]|B[j+img[W+se]],V&=B[j+img[W+te]]|B[j+img[W+he]],V&=B[j+img[W+ae]]|B[j+img[W+fe]],1&(V&=B[j+img[W+ne]]|B[j+img[W+de]]))for(w=U-F,I=0,x=0;x<25;++x)if(img[W+R[x]]<w){if(++I>8){A[G+ ++z]=y,T[H+y]=D(img,W,R,C,F);break}}else I=0;if(2&V)for(w=U+F,I=0,x=0;x<25;++x)if(img[W+R[x]]>w){if(++I>8){A[G+ ++z]=y,T[H+y]=D(img,W,R,C,F);break}}else I=0}if(A[G+_]=z,i!=L)for(X=(M=(i-4+3)%3)*_|0,G=M*(_+1)|0,Y=(M=(i-5+3)%3)*_|0,z=A[G+_],x=0;x<z;++x)Z=(y=A[G+x])+1|0,J=y-1|0,(K=T[X+y])>T[X+Z]&&K>T[X+J]&&K>T[Y+J]&&K>T[Y+y]&&K>T[Y+Z]&&K>T[H+J]&&K>T[H+y]&&K>T[H+Z]&&((v=c[N]).x=y,v.y=i-1,v.score=K,N++)}return r.cache.put_buffer(E),r.cache.put_buffer(S),N}});e.fast_corners=c,c.set_threshold(20)}(r),function(e){var t,n=(t=function(e,t,tr,r,n,o,l){var h=-2*e[t]+e[t+r]+e[t-r],f=-2*e[t]+e[t+n]+e[t-n],c=e[t+o]+e[t-o]-e[t+l]-e[t-l],d=0|Math.sqrt((h-f)*(h-f)+4*c*c);return Math.min(Math.abs(tr-d),Math.abs(-(tr+d)))},{laplacian_threshold:30,min_eigen_value_threshold:25,detect:function(e,n,o){void 0===o&&(o=5);var l,h=0,f=0,c=e.cols,d=e.rows,v=e.data,_=5*c|0,m=3+3*c|0,y=3-3*c|0,x=r.cache.get_buffer(c*d<<2),w=x.i32,M=0,E=0,S=0,T=0,A=0,R=this.laplacian_threshold,C=this.min_eigen_value_threshold,L=0|Math.max(5,o),P=0|Math.max(3,o),O=0|Math.min(c-5,c-o),k=0|Math.min(d-3,d-o);for(h=c*d;--h>=0;)w[h]=0;for(function(e,t,r,n,o,l,h,f,c,d){var v=0,_=0,m=f*r+h|0,y=m;for(v=f;v<d;++v,y=m+=r)for(_=h;_<c;++_,++y)t[y]=-4*e[y]+e[y+o]+e[y-o]+e[y+l]+e[y-l]}(v,w,c,0,5,_,L,P,O,k),E=P*c+L|0,f=P;f<k;++f,E+=c)for(h=L,S=E;h<O;++h,++S)((M=w[S])<-R&&M<w[S-1]&&M<w[S+1]&&M<w[S-c]&&M<w[S+c]&&M<w[S-c-1]&&M<w[S+c-1]&&M<w[S-c+1]&&M<w[S+c+1]||M>R&&M>w[S-1]&&M>w[S+1]&&M>w[S-c]&&M>w[S+c]&&M>w[S-c-1]&&M>w[S+c-1]&&M>w[S-c+1]&&M>w[S+c+1])&&(T=t(v,S,M,5,_,m,y))>C&&((l=n[A]).x=h,l.y=f,l.score=T,++A,++h,++S);return r.cache.put_buffer(x),A}});e.yape06=n}(r),function(e){var t,r,n,o=(t=function(p,e,t,r,n){var o,l;if(t>0)for(e-=r*n,l=-n;l<=n;++l){for(o=-n;o<=n;++o)if(p[e+o]>t)return!1;e+=r}else for(e-=r*n,l=-n;l<=n;++l){for(o=-n;o<=n;++o)if(p[e+o]<t)return!1;e+=r}return!0},r=function(e,t,r,n,o,l,h,f){var c=0,a=0,b=h-1|0,d=0,v=0,_=0,m=0,y=0;if((d=e[t+l[a]])<=o)if(d>=n)if((v=e[t+l[b]])<=o){if(v>=n)return void(r[t]=0);if((_=e[t+l[++b]])>o)if((m=e[t+l[++b]])>o)y=3;else{if(!(m<n))return void(r[t]=0);y=6}else if((m=e[t+l[++b]])>o)y=7;else{if(!(m<n))return void(r[t]=0);y=2}}else if((_=e[t+l[++b]])>o)if((m=e[t+l[++b]])>o)y=3;else{if(!(m<n))return void(r[t]=0);y=6}else{if(!(_<n))return void(r[t]=0);if((m=e[t+l[++b]])>o)y=7;else{if(!(m<n))return void(r[t]=0);y=2}}else{if((v=e[t+l[b]])>o)return void(r[t]=0);if((_=e[t+l[++b]])>o)return void(r[t]=0);if((m=e[t+l[++b]])>o)return void(r[t]=0);y=1}else{if((v=e[t+l[b]])<n)return void(r[t]=0);if((_=e[t+l[++b]])<n)return void(r[t]=0);if((m=e[t+l[++b]])<n)return void(r[t]=0);y=0}for(a=1;a<=h;a++)switch(d=e[t+l[a]],y){case 0:if(d>o){if(_=m,(m=e[t+l[++b]])<n)return void(r[t]=0);c-=d+_,y=0;break}if(d<n){if(_>o)return void(r[t]=0);if(m>o)return void(r[t]=0);if(_=m,(m=e[t+l[++b]])>o)return void(r[t]=0);c-=d+_,y=8;break}if(_<=o)return void(r[t]=0);if(m<=o)return void(r[t]=0);if(_=m,(m=e[t+l[++b]])>o){c-=d+_,y=3;break}if(m<n){c-=d+_,y=6;break}return void(r[t]=0);case 1:if(d<n){if(_=m,(m=e[t+l[++b]])>o)return void(r[t]=0);c-=d+_,y=1;break}if(d>o){if(_<n)return void(r[t]=0);if(m<n)return void(r[t]=0);if(_=m,(m=e[t+l[++b]])<n)return void(r[t]=0);c-=d+_,y=9;break}if(_>=n)return void(r[t]=0);if(m>=n)return void(r[t]=0);if(_=m,(m=e[t+l[++b]])<n){c-=d+_,y=2;break}if(m>o){c-=d+_,y=7;break}return void(r[t]=0);case 2:if(d>o)return void(r[t]=0);if(_=m,m=e[t+l[++b]],d<n){if(m>o)return void(r[t]=0);c-=d+_,y=4;break}if(m>o){c-=d+_,y=7;break}if(m<n){c-=d+_,y=2;break}return void(r[t]=0);case 3:if(d<n)return void(r[t]=0);if(_=m,m=e[t+l[++b]],d>o){if(m<n)return void(r[t]=0);c-=d+_,y=5;break}if(m>o){c-=d+_,y=3;break}if(m<n){c-=d+_,y=6;break}return void(r[t]=0);case 4:if(d>o)return void(r[t]=0);if(d<n){if(_=m,(m=e[t+l[++b]])>o)return void(r[t]=0);c-=d+_,y=1;break}if(m>=n)return void(r[t]=0);if(_=m,(m=e[t+l[++b]])<n){c-=d+_,y=2;break}if(m>o){c-=d+_,y=7;break}return void(r[t]=0);case 5:if(d<n)return void(r[t]=0);if(d>o){if(_=m,(m=e[t+l[++b]])<n)return void(r[t]=0);c-=d+_,y=0;break}if(m<=o)return void(r[t]=0);if(_=m,(m=e[t+l[++b]])>o){c-=d+_,y=3;break}if(m<n){c-=d+_,y=6;break}return void(r[t]=0);case 7:if(d>o)return void(r[t]=0);if(d<n)return void(r[t]=0);if(_=m,(m=e[t+l[++b]])>o){c-=d+_,y=3;break}if(m<n){c-=d+_,y=6;break}return void(r[t]=0);case 6:if(d>o)return void(r[t]=0);if(d<n)return void(r[t]=0);if(_=m,(m=e[t+l[++b]])<n){c-=d+_,y=2;break}if(m>o){c-=d+_,y=7;break}return void(r[t]=0);case 8:if(d>o){if(m<n)return void(r[t]=0);if(_=m,(m=e[t+l[++b]])<n)return void(r[t]=0);c-=d+_,y=9;break}if(d<n){if(_=m,(m=e[t+l[++b]])>o)return void(r[t]=0);c-=d+_,y=1;break}return void(r[t]=0);case 9:if(d<n){if(m>o)return void(r[t]=0);if(_=m,(m=e[t+l[++b]])>o)return void(r[t]=0);c-=d+_,y=8;break}if(d>o){if(_=m,(m=e[t+l[++b]])<n)return void(r[t]=0);c-=d+_,y=0;break}return void(r[t]=0)}r[t]=c+f*e[t]},n=function(e,t,r){this.dirs=new Int32Array(1024),this.dirs_count=0|function(e,t,r){var n,o,i=0;for(n=r,o=0;o<n;o++,i++)n=Math.sqrt(r*r-o*o)+.5|0,t[i]=n+e*o;for(n--;n<o&&n>=0;n--,i++)o=Math.sqrt(r*r-n*n)+.5|0,t[i]=n+e*o;for(;-n<o;n--,i++)o=Math.sqrt(r*r-n*n)+.5|0,t[i]=n+e*o;for(o--;o>=0;o--,i++)n=-Math.sqrt(r*r-o*o)-.5|0,t[i]=n+e*o;for(;o>n;o--,i++)n=-Math.sqrt(r*r-o*o)-.5|0,t[i]=n+e*o;for(n++;n<=0;n++,i++)o=-Math.sqrt(r*r-n*n)-.5|0,t[i]=n+e*o;for(;n<-o;n++,i++)o=-Math.sqrt(r*r-n*n)-.5|0,t[i]=n+e*o;for(o++;o<0;o++,i++)n=Math.sqrt(r*r-o*o)+.5|0,t[i]=n+e*o;return t[i]=t[0],t[i+1]=t[1],i}(e,this.dirs,r),this.scores=new Int32Array(e*t),this.radius=0|r},{level_tables:[],tau:7,init:function(e,t,r,o){var i;for(void 0===o&&(o=1),r=Math.min(r,7),r=Math.max(r,3),i=0;i<o;++i)this.level_tables[i]=new n(e>>i,t>>i,r)},detect:function(e,n,o){void 0===o&&(o=4);var l,h,f,c,d,v=this.level_tables[0],_=0|v.radius,m=_-1|0,y=v.dirs,x=0|v.dirs_count,w=x>>1,img=e.data,M=0|e.cols,E=0|e.rows,S=M>>1,T=v.scores,A=0,R=0,C=0,L=0,P=0,O=0,k=0,I=0,N=0|this.tau,D=0,B=0|Math.max(_+1,o),F=0|Math.max(_+1,o),U=0|Math.min(M-_-2,M-o),j=0|Math.min(E-_-2,E-o);for(C=F*M+B|0,R=F;R<j;++R,C+=M)for(A=B,L=C;A<U;++A,++L)P=img[L]+N,(O=img[L]-N)<img[L+_]&&img[L+_]<P&&O<img[L-_]&&img[L-_]<P?T[L]=0:r(img,L,T,O,P,y,w,x);for(C=F*M+B|0,R=F;R<j;++R,C+=M)for(A=B,L=C;A<U;++A,++L)I=T[L],(k=Math.abs(I))<5?(++A,++L):(c=M,d=void 0,d=0,0!=(h=T)[(f=L)+1]&&d++,0!=h[f-1]&&d++,0!=h[f+c]&&d++,0!=h[f+c+1]&&d++,0!=h[f+c-1]&&d++,0!=h[f-c]&&d++,0!=h[f-c+1]&&d++,0!=h[f-c-1]&&d++,d>=3&&t(T,L,I,S,_)&&((l=n[D]).x=A,l.y=R,l.score=k,++D,A+=m,L+=m));return D}});e.yape=o}(r),function(e){var t,n,o,l,h=(t=new Int32Array([8,-3,9,5,4,2,7,-12,-11,9,-8,2,7,-12,12,-13,2,-13,2,12,1,-7,1,6,-2,-10,-2,-4,-13,-13,-11,-8,-13,-3,-12,-9,10,4,11,9,-13,-8,-8,-9,-11,7,-9,12,7,7,12,6,-4,-5,-3,0,-13,2,-12,-3,-9,0,-7,5,12,-6,12,-1,-3,6,-2,12,-6,-13,-4,-8,11,-13,12,-8,4,7,5,1,5,-3,10,-3,3,-7,6,12,-8,-7,-6,-2,-2,11,-1,-10,-13,12,-8,10,-7,3,-5,-3,-4,2,-3,7,-10,-12,-6,11,5,-12,6,-7,5,-6,7,-1,1,0,4,-5,9,11,11,-13,4,7,4,12,2,-1,4,4,-4,-12,-2,7,-8,-5,-7,-10,4,11,9,12,0,-8,1,-13,-13,-2,-8,2,-3,-2,-2,3,-6,9,-4,-9,8,12,10,7,0,9,1,3,7,-5,11,-10,-13,-6,-11,0,10,7,12,1,-6,-3,-6,12,10,-9,12,-4,-13,8,-8,-12,-13,0,-8,-4,3,3,7,8,5,7,10,-7,-1,7,1,-12,3,-10,5,6,2,-4,3,-10,-13,0,-13,5,-13,-7,-12,12,-13,3,-11,8,-7,12,-4,7,6,-10,12,8,-9,-1,-7,-6,-2,-5,0,12,-12,5,-7,5,3,-10,8,-13,-7,-7,-4,5,-3,-2,-1,-7,2,9,5,-11,-11,-13,-5,-13,-1,6,0,-1,5,-3,5,2,-4,-13,-4,12,-9,-6,-9,6,-12,-10,-8,-4,10,2,12,-3,7,12,12,12,-7,-13,-6,5,-4,9,-3,4,7,-1,12,2,-7,6,-5,1,-13,11,-12,5,-3,7,-2,-6,7,-8,12,-7,-13,-7,-11,-12,1,-3,12,12,2,-6,3,0,-4,3,-2,-13,-1,-13,1,9,7,1,8,-6,1,-1,3,12,9,1,12,6,-1,-9,-1,3,-13,-13,-10,5,7,7,10,12,12,-5,12,9,6,3,7,11,5,-13,6,10,2,-12,2,3,3,8,4,-6,2,6,12,-13,9,-12,10,3,-8,4,-7,9,-11,12,-4,-6,1,12,2,-8,6,-9,7,-4,2,3,3,-2,6,3,11,0,3,-3,8,-8,7,8,9,3,-11,-5,-6,-4,-10,11,-5,10,-5,-8,-3,12,-10,5,-9,0,8,-1,12,-6,4,-6,6,-11,-10,12,-8,7,4,-2,6,7,-2,0,-2,12,-5,-8,-5,2,7,-6,10,12,-9,-13,-8,-8,-5,-13,-5,-2,8,-8,9,-13,-9,-11,-9,0,1,-8,1,-2,7,-4,9,1,-2,1,-1,-4,11,-6,12,-11,-12,-9,-6,4,3,7,7,12,5,5,10,8,0,-4,2,8,-9,12,-5,-13,0,7,2,12,-1,2,1,7,5,11,7,-9,3,5,6,-8,-13,-4,-8,9,-5,9,-3,-3,-4,-7,-3,-12,6,5,8,0,-7,6,-6,12,-13,6,-5,-2,1,-10,3,10,4,1,8,-4,-2,-2,2,-13,2,-12,12,12,-2,-13,0,-6,4,1,9,3,-6,-10,-3,-5,-3,-13,-1,1,7,5,12,-11,4,-2,5,-7,-13,9,-9,-5,7,1,8,6,7,-8,7,6,-7,-4,-7,1,-8,11,-7,-8,-13,6,-12,-8,2,4,3,9,10,-5,12,3,-6,-5,-6,7,8,-3,9,-8,2,-12,2,8,-11,-2,-10,3,-12,-13,-7,-9,-11,0,-10,-5,5,-3,11,8,-2,-13,-1,12,-1,-8,0,9,-13,-11,-12,-5,-10,-2,-10,11,-3,9,-2,-13,2,-3,3,2,-9,-13,-4,0,-4,6,-3,-10,-4,12,-2,-7,-6,-11,-4,9,6,-3,6,11,-13,11,-5,5,11,11,12,6,7,-5,12,-2,-1,12,0,7,-4,-8,-3,-2,-7,1,-6,7,-13,-12,-8,-13,-7,-2,-6,-8,-8,5,-6,-9,-5,-1,-4,5,-13,7,-8,10,1,5,5,-13,1,0,10,-13,9,12,10,-1,5,-8,10,-9,-1,11,1,-13,-9,-3,-6,2,-1,-10,1,12,-13,1,-8,-10,8,-11,10,-6,2,-13,3,-6,7,-13,12,-9,-10,-10,-5,-7,-10,-8,-8,-13,4,-6,8,5,3,12,8,-13,-4,2,-3,-3,5,-13,10,-12,4,-13,5,-1,-9,9,-4,3,0,3,3,-9,-12,1,-6,1,3,2,4,-8,-10,-10,-10,9,8,-13,12,12,-8,-12,-6,-5,2,2,3,7,10,6,11,-8,6,8,8,-12,-7,10,-6,5,-3,-9,-3,9,-1,-13,-1,5,-3,-7,-3,4,-8,-2,-8,3,4,2,12,12,2,-5,3,11,6,-9,11,-13,3,-1,7,12,11,-1,12,4,-3,0,-3,6,4,-11,4,12,2,-4,2,1,-10,-6,-8,1,-13,7,-11,1,-13,12,-11,-13,6,0,11,-13,0,-1,1,4,-13,3,-9,-2,-9,8,-6,-3,-13,-6,-8,-2,5,-9,8,10,2,7,3,-9,-1,-6,-1,-1,9,5,11,-2,11,-3,12,-8,3,0,3,5,-1,4,0,10,3,-6,4,5,-13,0,-10,5,5,8,12,11,8,9,9,-6,7,-4,8,-12,-10,4,-10,9,7,3,12,4,9,-7,10,-2,7,0,12,-2,-1,-6,0,-11]),n=new r.matrix_t(3,3,r.F32_t|r.C1_t),o=new r.matrix_t(32,32,r.U8_t|r.C1_t),l=function(e,t,o,l,h,f){var c=Math.cos(o),d=Math.sin(o);n.data[0]=c,n.data[1]=-d,n.data[2]=(-c+d)*f*.5+l,n.data[3]=d,n.data[4]=c,n.data[5]=(-d-c)*f*.5+h,r.imgproc.warp_affine(e,t,n,128)},{describe:function(e,n,h,f){var i=0,b=0,c=0,d=0,v=0,_=0,m=0,y=0,x=(e.data,e.cols,e.rows,o.data),w=0;f.type&r.U8_t?f.resize(32,h,1):(f.type=r.U8_t,f.cols=32,f.rows=h,f.channel=1,f.allocate());var M=f.data,E=0;for(i=0;i<h;++i){for(c=n[i].x,d=n[i].y,v=n[i].angle,l(e,o,v,c,d,32),w=0,b=0;b<32;++b)y=(_=x[528+32*t[w+1]+t[w]])<(m=x[528+32*t[(w+=2)+1]+t[w]])|0,y|=((_=x[528+32*t[(w+=2)+1]+t[w]])<(m=x[528+32*t[(w+=2)+1]+t[w]]))<<1,y|=((_=x[528+32*t[(w+=2)+1]+t[w]])<(m=x[528+32*t[(w+=2)+1]+t[w]]))<<2,y|=((_=x[528+32*t[(w+=2)+1]+t[w]])<(m=x[528+32*t[(w+=2)+1]+t[w]]))<<3,y|=((_=x[528+32*t[(w+=2)+1]+t[w]])<(m=x[528+32*t[(w+=2)+1]+t[w]]))<<4,y|=((_=x[528+32*t[(w+=2)+1]+t[w]])<(m=x[528+32*t[(w+=2)+1]+t[w]]))<<5,y|=((_=x[528+32*t[(w+=2)+1]+t[w]])<(m=x[528+32*t[(w+=2)+1]+t[w]]))<<6,_=x[528+32*t[(w+=2)+1]+t[w]],m=x[528+32*t[(w+=2)+1]+t[w]],w+=2,y|=(_<m)<<7,M[E+b]=y;E+=32}}});e.orb=h}(r),function(e){var t,n=(t=r.imgproc.scharr_derivatives,{track:function(e,n,o,l,h,f,c,d,v,_){void 0===c&&(c=30),void 0===d&&(d=new Uint8Array(h)),void 0===v&&(v=.01),void 0===_&&(_=1e-4);var m=.5*(f-1),y=f*f|0,x=y<<1,w=e.data,M=n.data,E=w[0].data,S=M[0].data,T=w[0].cols,A=w[0].rows,R=0,C=0,L=r.cache.get_buffer(y<<2),P=r.cache.get_buffer(x<<2),O=r.cache.get_buffer(A*(T<<1)<<2),k=new r.matrix_t(T,A,r.S32C2_t,O.data),I=L.i32,N=P.i32,D=O.i32,B=0,F=0,U=0,j=0,V=0,z=0,G=0,H=0,W=0,X=0,Y=0,Z=0,J=0,K=0,Q=0,$=0,ee=0,te=0,re=0,i=0,ae=0,ie=0,ne=0,oe=0,se=0,le=0,he=0,ue=0,a=0,b=0,fe=0,ce=0,de=0,ve=0,pe=0,_e=0,ge=0,me=0,ye=0,be=0,xe=0,we=0,Me=0;for(v*=v;i<h;++i)d[i]=1;var Ee=e.levels-1|0;for(oe=Ee;oe>=0;--oe)for(G=1/(1<<oe),C=A>>oe,B=(R=T>>oe)<<1,E=w[oe].data,S=M[oe].data,he=R-f|0,ue=C-f|0,t(w[oe],k),se=0;se<h;++se)if(ae=1+(i=se<<1),H=o[i]*G,W=o[ae]*G,oe==Ee?(X=H,Y=W):(X=2*l[i],Y=2*l[ae]),l[i]=X,l[ae]=Y,0==(ie=($=0|(H-=m))<=0|$>=he|(ee=0|(W-=m))<=0|ee>=ue)){for(_e=16384-(de=(1-(a=H-$))*(1-(b=W-ee))*16384+.5|0)-(ve=a*(1-b)*16384+.5|0)-(pe=(1-a)*b*16384+.5|0),be=0,xe=0,we=0,ne=0;ne<f;++ne)for(U=(F=(ne+ee)*R+$|0)<<1,V=(j=ne*f|0)<<1,ie=0;ie<f;++ie,++F,++j,U+=2)ge=256+(ge=E[F]*de+E[F+1]*ve+E[F+R]*pe+E[F+R+1]*_e)>>9,me=8192+(me=D[U]*de+D[U+2]*ve+D[U+B]*pe+D[U+B+2]*_e)>>14,ye=8192+(ye=D[U+1]*de+D[U+3]*ve+D[U+B+1]*pe+D[U+B+3]*_e)>>14,I[j]=ge,N[V++]=me,N[V++]=ye,be+=me*me,xe+=me*ye,we+=ye*ye;if(Me=(be*=1/(1<<20))*(we*=1/(1<<20))-(xe*=1/(1<<20))*xe,(we+be-Math.sqrt((be-we)*(be-we)+4*xe*xe))/x<_||Me<1.1920929e-7)0==oe&&(d[se]=0);else for(Me=1/Me,X-=m,Y-=m,Z=0,J=0,le=0;le<c;++le){if(0!=(ie=(te=0|X)<=0|te>=he|(re=0|Y)<=0|re>=ue)){0==oe&&(d[se]=0);break}for(_e=16384-(de=(1-(a=X-te))*(1-(b=Y-re))*16384+.5|0)-(ve=a*(1-b)*16384+.5|0)-(pe=(1-a)*b*16384+.5|0),fe=0,ce=0,ne=0;ne<f;++ne)for(z=(ne+re)*R+te|0,V=(j=ne*f|0)<<1,ie=0;ie<f;++ie,++z,++j)ge=256+(ge=S[z]*de+S[z+1]*ve+S[z+R]*pe+S[z+R+1]*_e)>>9,fe+=(ge-=I[j])*N[V++],ce+=ge*N[V++];if(X+=K=(xe*(ce*=1/(1<<20))-we*(fe*=1/(1<<20)))*Me,Y+=Q=(xe*fe-be*ce)*Me,l[i]=X+m,l[ae]=Y+m,K*K+Q*Q<=v)break;if(le>0&&Math.abs(K+Z)<.01&&Math.abs(Q+J)<.01){l[i]-=.5*K,l[ae]-=.5*Q;break}Z=K,J=Q}}else 0==oe&&(d[se]=0);r.cache.put_buffer(L),r.cache.put_buffer(P),r.cache.put_buffer(O)}});e.optical_flow_lk=n}(r),function(e){var t,r=(t=function(e,t){var r=.25*e.width+.5|0;return t.x<=e.x+r&&t.x>=e.x-r&&t.y<=e.y+r&&t.y>=e.y-r&&t.width<=1.5*e.width+.5|0&&1.5*t.width+.5|0>=e.width},{edges_density:.07,detect_single_scale:function(e,t,r,n,o,l,h,f){var i,c,d,v,_,m,y,x,w,M,E,S,T,A,R,C,L,P,O,k,I,N,D,B,F,U=f.size[0]*h|0,j=f.size[1]*h|0,V=.5*h+1.5|0,z=V,G=o-U|0,H=l-j|0,W=o+1|0,X=1/(U*j),Y=!0,Z=0,J=U,K=j*W,Q=K+U,$=U*j*255*this.edges_density|0,ee=[];for(_=0;_<H;_+=z)for(Z=_*W,v=0;v<G;v+=V,Z+=V)if(m=e[Z]-e[Z+J]-e[Z+K]+e[Z+Q],n&&(n[Z]-n[Z+J]-n[Z+K]+n[Z+Q]<$||m<20))v+=V,Z+=V;else{for(m*=X,x=(y=(t[Z]-t[Z+J]-t[Z+K]+t[Z+Q])*X-m*m)>0?Math.sqrt(y):1,T=(w=f.complexClassifiers).length,Y=!0,i=0;i<T;++i){for(C=(M=w[i]).threshold,A=(E=M.simpleClassifiers).length,L=0,c=0;c<A;++c){if(P=0,R=(k=(S=E[c]).features).length,1===S.tilted)for(d=0;d<R;++d)I=~~(v+(O=k[d])[0]*h)+~~(_+O[1]*h)*W,N=(B=~~(O[2]*h))*W,D=(F=~~(O[3]*h))*W,P+=(r[I]-r[I+B+N]-r[I-F+D]+r[I+B-F+N+D])*O[4];else for(d=0;d<R;++d)I=~~(v+(O=k[d])[0]*h)+~~(_+O[1]*h)*W,B=~~(O[2]*h),D=(F=~~(O[3]*h))*W,P+=(e[I]-e[I+B]-e[I+D]+e[I+D+B])*O[4];L+=P*X<S.threshold*x?S.left_val:S.right_val}if(L<C){Y=!1;break}}Y&&(ee.push({x:v,y:_,width:U,height:j,neighbor:1,confidence:L}),v+=V,Z+=V)}return ee},detect_multi_scale:function(e,t,r,n,o,l,h,f,c){void 0===f&&(f=1.2),void 0===c&&(c=1);for(var d=h.size[0],v=h.size[1],_=[];c*d<o&&c*v<l;)_=_.concat(this.detect_single_scale(e,t,r,n,o,l,c,h)),c*=f;return _},group_rectangles:function(e,r){void 0===r&&(r=1);var i,n,o=e.length,l=[];for(i=0;i<o;++i)l[i]={parent:-1,element:e[i],rank:0};for(i=0;i<o;++i)if(l[i].element){for(var h=i;-1!=l[h].parent;)h=l[h].parent;for(n=0;n<o;++n)if(i!=n&&l[n].element&&t(l[i].element,l[n].element)){for(var f=n;-1!=l[f].parent;)f=l[f].parent;if(f!=h){l[h].rank>l[f].rank?l[f].parent=h:(l[h].parent=f,l[h].rank==l[f].rank&&l[f].rank++,h=f);for(var c,d=n;-1!=l[d].parent;)c=d,d=l[d].parent,l[c].parent=h;for(d=i;-1!=l[d].parent;)c=d,d=l[d].parent,l[c].parent=h}}}var v=[],_=0;for(i=0;i<o;i++){n=-1;var m=i;if(l[m].element){for(;-1!=l[m].parent;)m=l[m].parent;l[m].rank>=0&&(l[m].rank=~_++),n=~l[m].rank}v[i]=n}var y=[];for(i=0;i<_+1;++i)y[i]={neighbors:0,x:0,y:0,width:0,height:0,confidence:0};for(i=0;i<o;++i){var x=e[i],w=v[i];0==y[w].neighbors&&(y[w].confidence=x.confidence),++y[w].neighbors,y[w].x+=x.x,y[w].y+=x.y,y[w].width+=x.width,y[w].height+=x.height,y[w].confidence=Math.max(y[w].confidence,x.confidence)}var M=[];for(i=0;i<_;++i)(o=y[i].neighbors)>=r&&M.push({x:(2*y[i].x+o)/(2*o),y:(2*y[i].y+o)/(2*o),width:(2*y[i].width+o)/(2*o),height:(2*y[i].height+o)/(2*o),neighbors:y[i].neighbors,confidence:y[i].confidence});var E=[];for(o=M.length,i=0;i<o;++i){x=M[i];var S=!0;for(n=0;n<o;++n){var T=M[n],A=.25*T.width+.5|0;if(i!=n&&x.x>=T.x-A&&x.y>=T.y-A&&x.x+x.width<=T.x+T.width+A&&x.y+x.height<=T.y+T.height+A&&(T.neighbors>Math.max(3,x.neighbors)||x.neighbors<3)){S=!1;break}}S&&E.push(x)}return E}});e.haar=r}(r),function(e){var t,n,o=(t=function(e,t){var r=.25*e.width+.5|0;return t.x<=e.x+r&&t.x>=e.x-r&&t.y<=e.y+r&&t.y>=e.y-r&&t.width<=1.5*e.width+.5|0&&1.5*t.width+.5|0>=e.width},n=new r.pyramid_t(1),{interval:4,scale:1.1486,next:5,scale_to:1,prepare_cascade:function(e){for(var t=e.stage_classifier.length,r=0;r<t;r++)for(var n=e.stage_classifier[r].feature,o=e.stage_classifier[r].count,l=e.stage_classifier[r]._feature=new Array(o),h=0;h<o;h++)l[h]={size:n[h].size,px:new Array(n[h].size),pz:new Array(n[h].size),nx:new Array(n[h].size),nz:new Array(n[h].size)}},build_pyramid:function(e,t,o,l){void 0===l&&(l=4);var h=e.cols,f=e.rows,i=0,c=0,d=0,v=!1,_=e,m=e,y=r.U8_t|r.C1_t;this.interval=l,this.scale=Math.pow(2,1/(this.interval+1)),this.next=this.interval+1|0,this.scale_to=Math.log(Math.min(h/t,f/o))/Math.log(this.scale)|0;var x=4*(this.scale_to+2*this.next)|0;for(n.levels!=x&&(n.levels=x,n.data=new Array(x),v=!0,n.data[0]=e),i=1;i<=this.interval;++i)c=h/Math.pow(this.scale,i)|0,d=f/Math.pow(this.scale,i)|0,_=n.data[i<<2],(v||c!=_.cols||d!=_.rows)&&(n.data[i<<2]=new r.matrix_t(c,d,y),_=n.data[i<<2]),r.imgproc.resample(e,_,c,d);for(i=this.next;i<this.scale_to+2*this.next;++i)m=n.data[(i<<2)-(this.next<<2)],_=n.data[i<<2],c=m.cols>>1,d=m.rows>>1,(v||c!=_.cols||d!=_.rows)&&(n.data[i<<2]=new r.matrix_t(c,d,y),_=n.data[i<<2]),r.imgproc.pyrdown(m,_);for(i=2*this.next;i<this.scale_to+2*this.next;++i)c=(m=n.data[(i<<2)-(this.next<<2)]).cols>>1,d=m.rows>>1,_=n.data[1+(i<<2)],(v||c!=_.cols||d!=_.rows)&&(n.data[1+(i<<2)]=new r.matrix_t(c,d,y),_=n.data[1+(i<<2)]),r.imgproc.pyrdown(m,_,1,0),_=n.data[2+(i<<2)],(v||c!=_.cols||d!=_.rows)&&(n.data[2+(i<<2)]=new r.matrix_t(c,d,y),_=n.data[2+(i<<2)]),r.imgproc.pyrdown(m,_,0,1),_=n.data[3+(i<<2)],(v||c!=_.cols||d!=_.rows)&&(n.data[3+(i<<2)]=new r.matrix_t(c,d,y),_=n.data[3+(i<<2)]),r.imgproc.pyrdown(m,_,1,1);return n},detect:function(e,t){this.interval;var r,n,o,l,h,f=this.scale,c=this.next,d=this.scale_to,i=0,v=0,_=0,m=0,y=0,x=0,q=0,w=0,M=0,E=0,p=0,S=0,T=0,A=0,R=0,C=0,L=0,P=0,O=!0,k=!0,I=1,N=1,D=[0,1,0,1],B=[0,0,1,1],F=[],U=e.data,j=[],V=[0,0,0],z=[0,0,0],G=[0,0,0];for(i=0;i<d;i++){for(C=U[(R=i<<2)+(c<<3)].cols-(t.width>>2),L=U[R+(c<<3)].rows-(t.height>>2),z[0]=1*U[R].cols,z[1]=1*U[R+(c<<2)].cols,z[2]=1*U[R+(c<<3)].cols,G[0]=4*U[R].cols-4*C,G[1]=2*U[R+(c<<2)].cols-2*C,G[2]=1*U[R+(c<<3)].cols-1*C,w=t.stage_classifier.length,v=0;v<w;v++)for(o=t.stage_classifier[v].feature,n=t.stage_classifier[v]._feature,M=t.stage_classifier[v].count,_=0;_<M;_++)for(l=n[_],E=0|(h=o[_]).size,q=0;q<E;q++)l.px[q]=1*h.px[q]+h.py[q]*z[h.pz[q]],l.pz[q]=h.pz[q],l.nx[q]=1*h.nx[q]+h.ny[q]*z[h.nz[q]],l.nz[q]=h.nz[q];for(j[0]=U[R].data,j[1]=U[R+(c<<2)].data,q=0;q<4;q++)for(j[2]=U[R+(c<<3)+q].data,V[0]=2*D[q]+B[q]*(2*U[R].cols),V[1]=1*D[q]+B[q]*(1*U[R+(c<<2)].cols),V[2]=0,x=0;x<L;x++){for(y=0;y<C;y++){for(P=0,O=!0,w=t.stage_classifier.length,v=0;v<w;v++){for(P=0,r=t.stage_classifier[v].alpha,n=t.stage_classifier[v]._feature,M=t.stage_classifier[v].count,_=0;_<M;_++)if((S=j[(l=n[_]).pz[0]][V[l.pz[0]]+l.px[0]])<=(T=j[l.nz[0]][V[l.nz[0]]+l.nx[0]]))P+=r[_<<1];else{for(k=!0,E=l.size,A=1;A<E;A++){if(l.pz[A]>=0&&(p=j[l.pz[A]][V[l.pz[A]]+l.px[A]])<S){if(p<=T){k=!1;break}S=p}if(l.nz[A]>=0&&(m=j[l.nz[A]][V[l.nz[A]]+l.nx[A]])>T){if(S<=m){k=!1;break}T=m}}P+=k?r[1+(_<<1)]:r[_<<1]}if(P<t.stage_classifier[v].threshold){O=!1;break}}O&&(F.push({x:(4*y+2*D[q])*I,y:(4*x+2*B[q])*N,width:t.width*I,height:t.height*N,neighbor:1,confidence:P}),++y,V[0]+=4,V[1]+=2,V[2]+=1),V[0]+=4,V[1]+=2,V[2]+=1}V[0]+=G[0],V[1]+=G[1],V[2]+=G[2]}I*=f,N*=f}return F},group_rectangles:function(e,r){void 0===r&&(r=1);var i,n,o=e.length,l=[];for(i=0;i<o;++i)l[i]={parent:-1,element:e[i],rank:0};for(i=0;i<o;++i)if(l[i].element){for(var h=i;-1!=l[h].parent;)h=l[h].parent;for(n=0;n<o;++n)if(i!=n&&l[n].element&&t(l[i].element,l[n].element)){for(var f=n;-1!=l[f].parent;)f=l[f].parent;if(f!=h){l[h].rank>l[f].rank?l[f].parent=h:(l[h].parent=f,l[h].rank==l[f].rank&&l[f].rank++,h=f);for(var c,d=n;-1!=l[d].parent;)c=d,d=l[d].parent,l[c].parent=h;for(d=i;-1!=l[d].parent;)c=d,d=l[d].parent,l[c].parent=h}}}var v=[],_=0;for(i=0;i<o;i++){n=-1;var m=i;if(l[m].element){for(;-1!=l[m].parent;)m=l[m].parent;l[m].rank>=0&&(l[m].rank=~_++),n=~l[m].rank}v[i]=n}var y=[];for(i=0;i<_+1;++i)y[i]={neighbors:0,x:0,y:0,width:0,height:0,confidence:0};for(i=0;i<o;++i){var x=e[i],w=v[i];0==y[w].neighbors&&(y[w].confidence=x.confidence),++y[w].neighbors,y[w].x+=x.x,y[w].y+=x.y,y[w].width+=x.width,y[w].height+=x.height,y[w].confidence=Math.max(y[w].confidence,x.confidence)}var M=[];for(i=0;i<_;++i)(o=y[i].neighbors)>=r&&M.push({x:(2*y[i].x+o)/(2*o),y:(2*y[i].y+o)/(2*o),width:(2*y[i].width+o)/(2*o),height:(2*y[i].height+o)/(2*o),neighbors:y[i].neighbors,confidence:y[i].confidence});var E=[];for(o=M.length,i=0;i<o;++i){x=M[i];var S=!0;for(n=0;n<o;++n){var T=M[n],A=.25*T.width+.5|0;if(i!=n&&x.x>=T.x-A&&x.y>=T.y-A&&x.x+x.width<=T.x+T.width+A&&x.y+x.height<=T.y+T.height+A&&(T.neighbors>Math.max(3,x.neighbors)||x.neighbors<3)){S=!1;break}}S&&E.push(x)}return E}});e.bbf=o}(r),t=r,e.exports=t})),findFaceWorker=function(e){var b,a,t=self,r=r||{REVISION:"ALPHA"};!function(e){var t=256,i=512,n=1024,o=new Int32Array([-1,1,4,-1,4,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,8]),l=function(e){return 65280&e},h=function(e){return 255&e},f=function(e){return o[(65280&e)>>8]},c=function(e,t){this.size=-8&(e+7|0),void 0===t?this.buffer=new ArrayBuffer(this.size):(this.buffer=t,this.size=t.length),this.u8=new Uint8Array(this.buffer),this.i32=new Int32Array(this.buffer),this.f32=new Float32Array(this.buffer),this.f64=new Float64Array(this.buffer)},q=function(){function e(e,r,o,f){this.type=0|l(o),this.channel=0|h(o),this.cols=0|e,this.rows=0|r,void 0===f?this.allocate():(this.buffer=f,this.data=this.type&t?this.buffer.u8:this.type&i?this.buffer.i32:this.type&n?this.buffer.f32:this.buffer.f64)}return e.prototype.allocate=function(){delete this.data,delete this.buffer,this.buffer=new c(this.cols*f(this.type)*this.channel*this.rows),this.data=this.type&t?this.buffer.u8:this.type&i?this.buffer.i32:this.type&n?this.buffer.f32:this.buffer.f64},e.prototype.copy_to=function(e){for(var t=e.data,r=this.data,n=0,o=this.cols*this.rows*this.channel|0;n<o-4;n+=4)t[n]=r[n],t[n+1]=r[n+1],t[n+2]=r[n+2],t[n+3]=r[n+3];for(;n<o;++n)t[n]=r[n]},e.prototype.resize=function(e,t,r){void 0===r&&(r=this.channel),e*f(this.type)*r*t>this.buffer.size?(this.cols=e,this.rows=t,this.channel=r,this.allocate()):(this.cols=e,this.rows=t,this.channel=r)},e}(),d=function(){function e(e){this.levels=0|e,this.data=new Array(e),this.pyrdown=r.imgproc.pyrdown}return e.prototype.allocate=function(e,t,r){for(var n=this.levels;--n>=0;)this.data[n]=new q(e>>n,t>>n,r)},e.prototype.build=function(e,t){void 0===t&&(t=!0);var r=2,n=e,o=this.data[0];if(!t)for(var l=e.cols*e.rows;--l>=0;)o.data[l]=e.data[l];for(o=this.data[1],this.pyrdown(n,o);r<this.levels;++r)n=o,o=this.data[r],this.pyrdown(n,o)},e}(),v=function(e,t,r,n,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===r&&(r=0),void 0===n&&(n=0),void 0===o&&(o=-1),this.x=e,this.y=t,this.score=r,this.level=n,this.angle=o};e.U8_t=t,e.S32_t=i,e.F32_t=n,e.S64_t=2048,e.F64_t=4096,e.C1_t=1,e.C2_t=2,e.C3_t=3,e.C4_t=4,e.U8C1_t=257,e.U8C3_t=259,e.U8C4_t=260,e.F32C1_t=1025,e.F32C2_t=1026,e.S32C1_t=513,e.S32C2_t=514,e.EPSILON=1.192092896e-7,e.FLT_MIN=1e-37,e.COLOR_RGBA2GRAY=0,e.COLOR_RGB2GRAY=1,e.COLOR_BGRA2GRAY=2,e.COLOR_BGR2GRAY=3,e.BOX_BLUR_NOSCALE=1,e.SVD_U_T=1,e.SVD_V_T=2,e.get_data_type=l,e.get_channel=h,e.get_data_type_size=f,e.data_t=c,e.matrix_t=q,e.pyramid_t=d,e.keypoint_t=v}(r),b=r,a=function(){var e,t,n=function(){function g(e){this.next=null,this.data=new r.data_t(e),this.size=this.data.size,this.buffer=this.data.buffer,this.u8=this.data.u8,this.i32=this.data.i32,this.f32=this.data.f32,this.f64=this.data.f64}return g.prototype.resize=function(e){delete this.data,this.data=new r.data_t(e),this.size=this.data.size,this.buffer=this.data.buffer,this.u8=this.data.u8,this.i32=this.data.i32,this.f32=this.data.f32,this.f64=this.data.f64},g}();return{allocate:function(g,r){e=t=new n(r);for(var o=0;o<g;++o){var l=new n(r);t=t.next=l}},get_buffer:function(g){var t=e;return e=e.next,g>t.size&&t.resize(g),t},put_buffer:function(g){t=t.next=g}}}(),b.cache=a,a.allocate(30,2560),function(b){var e,a=(e=new Int32Array(96),{get_gaussian_kernel:function(p,e,t,n){var o=0,l=0,h=0,f=0,c=0,g=0,d=r.cache.get_buffer(p<<2),v=d.f32;if(1==(1&p)&&p<=7&&e<=0)switch(p>>1){case 0:v[0]=1,g=1;break;case 1:v[0]=.25,v[1]=.5,v[2]=.25,g=1;break;case 2:v[0]=.0625,v[1]=.25,v[2]=.375,v[3]=.25,v[4]=.0625,g=1;break;case 3:v[0]=.03125,v[1]=.109375,v[2]=.21875,v[3]=.28125,v[4]=.21875,v[5]=.109375,v[6]=.03125,g=1}else for(c=-.5/((f=e>0?e:.3*(.5*(p-1)-1)+.8)*f);o<p;++o)l=o-.5*(p-1),h=Math.exp(c*l*l),v[o]=h,g+=h;if(n&r.U8_t)for(g=256/g,o=0;o<p;++o)t[o]=v[o]*g+.5|0;else for(g=1/g,o=0;o<p;++o)t[o]=v[o]*g;r.cache.put_buffer(d)},perspective_4point_transform:function(e,t,r,n,g,o,q,l,h,f,p,u,c,d,v,_,m){var y=t,x=f,w=q,M=y*x*w,E=v,S=y*E,T=x*S,A=p,R=y*A,C=o,L=r,P=d,i=L*P,O=i*C,k=P*C*A,I=P*w,N=P*A,D=x*w,B=E*x,F=E*C,U=A*C,j=1/(I-N-D+B-F+U),V=y*P,z=L*C,G=w*y,H=E*G,W=L*x,X=i*A,Y=L*A*C,Z=w*E*x,J=E*L,K=-(T-M+R*C-C*S-i*x+O-k+I*x)*j,Q=(M-T-V*w+V*A+O-x*z+F*x-k)*j,$=y,ee=(-A*S+H+W*w-i*w+X-Y+F*A-Z)*j,te=(G*A-H-J*x+X-Y+J*C+Z-I*A)*j,re=L,ae=(-R+G+W-z+N-I-B+F)*j,ie=(-S+R+i-W+F-U-I+D)*j,ne=-((T=(x=u)*(S=(y=n)*(E=m)))-(M=y*x*(w=h))+(R=y*(A=c))*(C=l)-C*S-(i=(L=g)*(P=_))*x+(O=i*C)-(k=P*C*A)+(I=P*w)*x)*(j=1/(I-(N=P*A)-(D=x*w)+(B=E*x)-(F=E*C)+(U=A*C))),oe=(M-T-(V=y*P)*w+V*A+O-x*(z=L*C)+F*x-k)*j,se=y,le=(-A*S+(H=E*(G=w*y))+(W=L*x)*w-i*w+(X=i*A)-(Y=L*A*C)+F*A-(Z=w*E*x))*j,he=(G*A-H-(J=E*L)*x+X-Y+J*C+Z-I*A)*j,ue=L,fe=(-R+G+W-z+N-I-B+F)*j,ce=(-S+R+i-W+F-U-I+D)*j,de=$*ae;O=re*ae-ee;var ve=-ee*ie+te*ae,pe=K-de;z=K*ie-(R=Q*ae);var _e=(M=K*re)-(T=$*ee),ge=(w=K*te)-(S=ee*Q);Y=(x=te-ie*re)*(P=1/(w-M*ie-S+T*ie+R*re-de*te));var me=(U=$*ie-Q)*P,ye=(G=-Q*re+$*te)*P,s=e.data;s[0]=ne*Y+oe*(O*P)-se*(ve*P),s[1]=ne*me+oe*(pe*P)-se*(z*P),s[2]=-ne*ye-oe*(_e*P)+se*(ge*P),s[3]=le*Y+he*(O*P)-ue*(ve*P),s[4]=le*me+he*(pe*P)-ue*(z*P),s[5]=-le*ye-he*(_e*P)+ue*(ge*P),s[6]=fe*Y+ce*(O*P)-ve*P,s[7]=fe*me+ce*(pe*P)-z*P,s[8]=-fe*ye-ce*(_e*P)+ge*P},qsort:function(t,r,s,u){var n,o,q,p,l=0,h=0,f=0,c=0,d=0,v=0,_=0,m=0,y=0,x=0,w=0,M=0,g=0,E=0,S=0,T=0,A=0,R=0,C=e;if(!(s-r+1<=1))for(C[0]=r,C[1]=s;l>=0;)for(h=C[l<<1],f=C[1+(l<<1)],l--;;){if((d=f-h+1)<=7){for(_=h+1;_<=f;_++)for(m=_;m>h&&u(t[m],t[m-1]);m--)n=t[m],t[m]=t[m-1],t[m-1]=n;break}for(R=0,x=h,M=f,E=h+(d>>1),d>40&&(T=h+(y=d>>3),A=h+(y<<1),o=t[S=h],q=t[T],p=t[A],h=u(o,q)?u(q,p)?T:u(o,p)?A:S:u(p,q)?T:u(o,p)?S:A,T=E,A=E+y,o=t[S=E-y],q=t[T],p=t[A],E=u(o,q)?u(q,p)?T:u(o,p)?A:S:u(p,q)?T:u(o,p)?S:A,T=f-y,A=f,o=t[S=f-(y<<1)],q=t[T],p=t[A],f=u(o,q)?u(q,p)?T:u(o,p)?A:S:u(p,q)?T:u(o,p)?S:A),T=E,A=f,o=t[S=h],q=t[T],p=t[A],(E=u(o,q)?u(q,p)?T:u(o,p)?A:S:u(p,q)?T:u(o,p)?S:A)!=x&&(n=t[E],t[E]=t[x],t[x]=n,E=x),h=w=x+1,f=g=M,o=t[E];;){for(;h<=f&&!u(o,t[h]);)u(t[h],o)||(h>w&&(n=t[w],t[w]=t[h],t[h]=n),R=1,w++),h++;for(;h<=f&&!u(t[f],o);)u(o,t[f])||(f<g&&(n=t[g],t[g]=t[f],t[f]=n),R=1,g--),f--;if(h>f)break;n=t[h],t[h]=t[f],t[f]=n,R=1,h++,f--}if(0==R){for(f=M,_=(h=x)+1;_<=f;_++)for(m=_;m>h&&u(t[m],t[m-1]);m--)n=t[m],t[m]=t[m-1],t[m-1]=n;break}for(v=h-(d=Math.min(w-x,h-w))|0,c=0;c<d;++c,++v)n=t[x+c],t[x+c]=t[v],t[v]=n;for(v=M-(d=Math.min(M-g,g-f))+1|0,c=0;c<d;++c,++v)n=t[h+c],t[h+c]=t[v],t[v]=n;if(v=g-f,(d=h-w)>1)v>1?d>v?(C[++l<<1]=x,C[1+(l<<1)]=x+d-1,h=M-v+1,f=M):(C[++l<<1]=M-v+1,C[1+(l<<1)]=M,h=x,f=x+d-1):(h=x,f=x+d-1);else{if(!(v>1))break;h=M-v+1,f=M}}},median:function(e,t,i){for(var r,n=0,o=0,g=0,l=t+i>>1;;){if(i<=t)return e[l];if(i==t+1)return e[t]>e[i]&&(r=e[t],e[t]=e[i],e[i]=r),e[l];for(e[n=t+i>>1]>e[i]&&(r=e[n],e[n]=e[i],e[i]=r),e[t]>e[i]&&(r=e[t],e[t]=e[i],e[i]=r),e[n]>e[t]&&(r=e[n],e[n]=e[t],e[t]=r),o=t+1,r=e[n],e[n]=e[o],e[o]=r,g=i;;){do{++o}while(e[t]>e[o]);do{--g}while(e[g]>e[t]);if(g<o)break;r=e[o],e[o]=e[g],e[g]=r}r=e[t],e[t]=e[g],e[g]=r,g<=l?t=o:g>=l&&(i=g-1)}return 0}});b.math=a}(r),function(b){var a={identity:function(e,g){void 0===g&&(g=1);for(var i=e.data,t=e.rows,r=e.cols,n=r+1|0,o=t*r,l=o;--o>=0;)i[o]=0;for(o=l,l=0;l<o;)i[l]=g,l+=n},transpose:function(e,t){for(var r=0,n=0,o=t.rows,l=t.cols,h=0,f=0,c=0,d=t.data,g=e.data;r<o;f+=1,h+=l,r++)for(c=f,n=0;n<l;c+=o,n++)g[c]=d[h+n]},multiply:function(e,t,r){for(var u=0,s=0,n=0,o=0,l=0,q=0,h=0,g=0,f=t.cols,c=t.rows,p=r.cols,d=t.data,v=r.data,_=e.data,m=0;u<c;o+=f,u++)for(h=0,s=0;s<p;g++,h++,s++){for(q=h,l=o,m=0,n=0;n<f;l++,q+=p,n++)m+=d[l]*v[q];_[g]=m}},multiply_ABt:function(e,g,t){for(var p=0,r=0,n=0,o=0,l=0,h=0,u=0,f=g.cols,c=g.rows,q=t.rows,d=g.data,v=t.data,_=e.data,s=0;p<c;o+=f,p++)for(h=0,r=0;r<q;u++,r++){for(l=o,s=0,n=0;n<f;l++,h++,n++)s+=d[l]*v[h];_[u]=s}},multiply_AtB:function(e,t,r){for(var u=0,s=0,n=0,o=0,l=0,q=0,h=0,g=0,f=t.cols,c=t.rows,p=r.cols,d=t.data,v=r.data,_=e.data,m=0;u<f;o++,u++)for(h=0,s=0;s<p;g++,h++,s++){for(q=h,l=o,m=0,n=0;n<c;l+=f,q+=p,n++)m+=d[l]*v[q];_[g]=m}},multiply_AAt:function(e,t){for(var q=0,r=0,n=0,o=0,l=0,h=0,g=0,f=0,u=0,c=t.cols,p=t.rows,d=t.data,v=e.data,s=0;q<p;o+=p+1,l=h,q++)for(f=o,u=o,g=l,r=q;r<p;f++,u+=p,r++){for(h=l,s=0,n=0;n<c;n++)s+=d[h++]*d[g++];v[f]=s,v[u]=s}},multiply_AtA:function(e,g){for(var t=0,p=0,r=0,s=0,n=0,o=0,l=0,h=0,f=0,c=g.cols,q=g.rows,u=g.data,d=e.data,v=0;t<c;l+=c,t++)for(s=t,h=f=l+t,p=t;p<c;h++,f+=c,p++){for(n=s,o=p,v=0,r=0;r<q;n+=c,o+=c,r++)v+=u[n]*u[o];d[h]=v,d[f]=v}},identity_3x3:function(e,t){void 0===t&&(t=1);var r=e.data;r[0]=r[4]=r[8]=t,r[1]=r[2]=r[3]=0,r[5]=r[6]=r[7]=0},invert_3x3:function(s,e){var t=s.data,r=e.data,n=t[4],o=t[8],l=t[5],h=t[7],f=t[0],i=f*n,c=f*l,u=t[3],d=t[1],v=u*d,q=t[2],p=u*q,g=t[6],_=g*d,m=g*q,y=1/(i*o-c*h-v*o+p*h+_*l-m*n);r[0]=(n*o-l*h)*y,r[1]=-(d*o-q*h)*y,r[2]=-(-d*l+q*n)*y,r[3]=-(u*o-l*g)*y,r[4]=(f*o-m)*y,r[5]=-(c-p)*y,r[6]=-(-u*h+n*g)*y,r[7]=-(f*h-_)*y,r[8]=(i-v)*y},multiply_3x3:function(e,t,r){var n=e.data,o=t.data,l=r.data,h=o[0],f=o[1],u=o[2],s=o[3],q=o[4],p=o[5],c=o[6],d=o[7],v=o[8],_=l[0],m=l[1],i=l[2],y=l[3],g=l[4],x=l[5],w=l[6],M=l[7],E=l[8];n[0]=h*_+f*y+u*w,n[1]=h*m+f*g+u*M,n[2]=h*i+f*x+u*E,n[3]=s*_+q*y+p*w,n[4]=s*m+q*g+p*M,n[5]=s*i+q*x+p*E,n[6]=c*_+d*y+v*w,n[7]=c*m+d*g+v*M,n[8]=c*i+d*x+v*E},mat3x3_determinant:function(e){var t=e.data;return t[0]*t[4]*t[8]-t[0]*t[5]*t[7]-t[3]*t[1]*t[8]+t[3]*t[2]*t[7]+t[6]*t[1]*t[5]-t[6]*t[2]*t[4]},determinant_3x3:function(e,g,t,r,n,o,l,h,i){return e*n*i-e*o*h-r*g*i+r*t*h+l*g*o-l*t*n}};b.matmath=a}(r),function(b){var e,t,a=(e=function(g,e,i,t){t=g[e],g[e]=g[i],g[i]=t},t=function(e,g){return(e=Math.abs(e))>(g=Math.abs(g))?(g/=e,e*Math.sqrt(1+g*g)):g>0?(e/=g,g*Math.sqrt(1+e*e)):0},{lu_solve:function(t,g){var n,o,u,l,q=0,h=0,f=0,c=1,d=t.cols,v=t.data,_=g.data;for(q=0;q<d;q++){for(f=q,h=q+1;h<d;h++)Math.abs(v[h*d+q])>Math.abs(v[f*d+q])&&(f=h);if(Math.abs(v[f*d+q])<r.EPSILON)return 0;if(f!=q){for(h=q;h<d;h++)e(v,q*d+h,f*d+h,n);e(_,q,f,n),c=-c}for(u=-1/v[q*d+q],h=q+1;h<d;h++){for(o=v[h*d+q]*u,f=q+1;f<d;f++)v[h*d+f]+=o*v[q*d+f];_[h]+=o*_[q]}v[q*d+q]=-u}for(q=d-1;q>=0;q--){for(l=_[q],f=q+1;f<d;f++)l-=v[q*d+f]*_[f];_[q]=l*v[q*d+q]}return 1},cholesky_solve:function(e,g){var t,r,n=0,o=0,l=0,s=0,h=0,p=0,f=0,u=e.cols,c=e.data,q=g.data;for(n=0;n<u;n++)for(r=1,h=s=n*u,o=n;o<u;o++){for(t=c[h+n],l=0;l<n;l++)t-=c[l*u+n]*c[h+l];if(o==n){if(c[h+n]=t,0==t)return 0;r=1/t}else c[s+o]=t,c[h+n]=t*r;h+=u}for(s=0,p=0;p<u;p++){for(t=q[p],f=0;f<p;f++)t-=c[s+f]*q[f];q[p]=t,s+=u}for(s=0,p=0;p<u;p++)q[p]/=c[s+p],s+=u;for(p=u-1;p>=0;p--){for(t=q[p],s=(f=p+1)*u;f<u;f++)t-=c[s+p]*q[f],s+=u;q[p]=t}return 1},svd_decompose:function(n,o,p,l,h){void 0===h&&(h=0);var f=0,c=0,g=n.rows,d=n.cols,v=g,_=d,s=n.type|r.C1_t;v<_&&(f=1,c=v,v=_,_=c);var q=r.cache.get_buffer(v*v<<3),m=r.cache.get_buffer(_<<3),y=r.cache.get_buffer(_*_<<3),u=new r.matrix_t(v,v,s,q.data),x=new r.matrix_t(1,_,s,m.data),w=new r.matrix_t(_,_,s,y.data);if(0==f)r.matmath.transpose(u,n);else{for(c=0;c<d*g;c++)u.data[c]=n.data[c];for(;c<_*v;c++)u.data[c]=0}if(function(n,o,l,h,f,c,d,v){for(var _=2*r.EPSILON,q=r.FLT_MIN,m=0,y=0,x=0,w=0,u=Math.max(c,30),M=0,E=0,S=0,T=0,A=0,R=0,C=0,L=0,P=0,O=0,k=0,I=0,N=0,D=0,B=0,F=0,U=0,j=4660,V=0,z=0,G=0,H=r.cache.get_buffer(d<<3),g=H.f64;m<d;m++){for(x=0,k=0;x<c;x++)k+=(L=n[m*o+x])*L;if(g[m]=k,h){for(x=0;x<d;x++)h[m*f+x]=0;h[m*f+m]=1}}for(;w<u;w++){for(A=0,m=0;m<d-1;m++)for(y=m+1;y<d;y++){for(M=m*o|0,E=y*o|0,B=g[m],F=0,U=g[y],x=2,F+=n[M]*n[E],F+=n[M+1]*n[E+1];x<c;x++)F+=n[M+x]*n[E+x];if(!(Math.abs(F)<=_*Math.sqrt(B*U))){for(N=t(F*=2,I=B-U),I<0?(D=.5*(N-I),R=F/(N*(C=Math.sqrt(D/N))*2)):C=F/(N*(R=Math.sqrt((N+I)/(2*N)))*2),B=0,U=0,x=2,P=R*n[M]+C*n[E],O=-C*n[M]+R*n[E],n[M]=P,n[E]=O,B+=P*P,U+=O*O,P=R*n[M+1]+C*n[E+1],O=-C*n[M+1]+R*n[E+1],n[M+1]=P,n[E+1]=O,B+=P*P,U+=O*O;x<c;x++)P=R*n[M+x]+C*n[E+x],O=-C*n[M+x]+R*n[E+x],n[M+x]=P,n[E+x]=O,B+=P*P,U+=O*O;if(g[m]=B,g[y]=U,A=1,h)for(T=y*f|0,x=2,P=R*h[S=m*f|0]+C*h[T],O=-C*h[S]+R*h[T],h[S]=P,h[T]=O,P=R*h[S+1]+C*h[T+1],O=-C*h[S+1]+R*h[T+1],h[S+1]=P,h[T+1]=O;x<d;x++)P=R*h[S+x]+C*h[T+x],O=-C*h[S+x]+R*h[T+x],h[S+x]=P,h[T+x]=O}}if(0==A)break}for(m=0;m<d;m++){for(x=0,k=0;x<c;x++)k+=(L=n[m*o+x])*L;g[m]=Math.sqrt(k)}for(m=0;m<d-1;m++){for(y=m,x=m+1;x<d;x++)g[y]<g[x]&&(y=x);if(m!=y&&(e(g,m,y,k),h)){for(x=0;x<c;x++)e(n,m*o+x,y*o+x,L);for(x=0;x<d;x++)e(h,m*f+x,y*f+x,L)}}for(m=0;m<d;m++)l[m]=g[m];if(h){for(m=0;m<v;m++){for(k=m<d?g[m]:0;k<=q;){for(z=1/c,x=0;x<c;x++)V=0!=(256&(j=214013*j+2531011)>>16)?z:-z,n[m*o+x]=V;for(w=0;w<2;w++)for(y=0;y<m;y++){for(k=0,x=0;x<c;x++)k+=n[m*o+x]*n[y*o+x];for(G=0,x=0;x<c;x++)L=n[m*o+x]-k*n[y*o+x],n[m*o+x]=L,G+=Math.abs(L);for(G=G?1/G:0,x=0;x<c;x++)n[m*o+x]*=G}for(k=0,x=0;x<c;x++)k+=(L=n[m*o+x])*L;k=Math.sqrt(k)}for(C=1/k,x=0;x<c;x++)n[m*o+x]*=C}r.cache.put_buffer(H)}else r.cache.put_buffer(H)}(u.data,v,x.data,w.data,_,v,_,v),o){for(c=0;c<_;c++)o.data[c]=x.data[c];for(;c<d;c++)o.data[c]=0}if(0==f){if(p&&h&r.SVD_U_T)for(c=v*v;--c>=0;)p.data[c]=u.data[c];else p&&r.matmath.transpose(p,u);if(l&&h&r.SVD_V_T)for(c=_*_;--c>=0;)l.data[c]=w.data[c];else l&&r.matmath.transpose(l,w)}else{if(p&&h&r.SVD_U_T)for(c=_*_;--c>=0;)p.data[c]=w.data[c];else p&&r.matmath.transpose(p,w);if(l&&h&r.SVD_V_T)for(c=v*v;--c>=0;)l.data[c]=u.data[c];else l&&r.matmath.transpose(l,u)}r.cache.put_buffer(q),r.cache.put_buffer(m),r.cache.put_buffer(y)},svd_solve:function(e,t,s){var n,o=0,l=0,h=0,f=0,u=0,c=e.rows,p=e.cols,d=0,v=0,_=e.type|r.C1_t,m=r.cache.get_buffer(c*c<<3),y=r.cache.get_buffer(p<<3),x=r.cache.get_buffer(p*p<<3),w=new r.matrix_t(c,c,_,m.data),M=new r.matrix_t(1,p,_,y.data),E=new r.matrix_t(p,p,_,x.data),S=s.data,T=w.data,q=M.data,g=E.data;for(this.svd_decompose(e,M,w,E,0),n=r.EPSILON*q[0]*p;o<p;o++,u+=p){for(v=0,l=0;l<p;l++)if(q[l]>n){for(h=0,d=0,f=0;h<c;h++,f+=p)d+=T[f+l]*S[h];v+=d*g[u+l]/q[l]}t.data[o]=v}r.cache.put_buffer(m),r.cache.put_buffer(y),r.cache.put_buffer(x)},svd_invert:function(e,t){var n,o=0,l=0,h=0,f=0,s=0,c=0,d=t.rows,v=t.cols,_=0,q=t.type|r.C1_t,m=r.cache.get_buffer(d*d<<3),y=r.cache.get_buffer(v<<3),x=r.cache.get_buffer(v*v<<3),u=new r.matrix_t(d,d,q,m.data),w=new r.matrix_t(1,v,q,y.data),M=new r.matrix_t(v,v,q,x.data),E=e.data,S=u.data,p=w.data,g=M.data;for(this.svd_decompose(t,w,u,M,0),n=r.EPSILON*p[0]*v;o<v;o++,s+=v)for(l=0,f=0;l<d;l++,c++){for(h=0,_=0;h<v;h++,f++)p[h]>n&&(_+=g[s+h]*S[f]/p[h]);E[c]=_}r.cache.put_buffer(m),r.cache.put_buffer(y),r.cache.put_buffer(x)},eigenVV:function(n,p,o){for(var l=n.cols,h=l*l,g=n.type|r.C1_t,f=r.cache.get_buffer(l*l<<3),c=r.cache.get_buffer(l<<3),d=new r.matrix_t(l,l,g,f.data),q=new r.matrix_t(1,l,g,c.data);--h>=0;)d.data[h]=n.data[h];if(function(n,o,q,l,h,f){var c=r.EPSILON,d=0,v=0,_=0,m=0,y=0,x=0,w=0,M=0,u=0,E=f*f*30,S=0,T=0,A=0,R=0,C=0,L=0,P=0,O=0,k=0,I=r.cache.get_buffer(f<<2),N=r.cache.get_buffer(f<<2),D=I.i32,g=N.i32;if(l)for(;d<f;d++){for(_=d*h,v=0;v<f;v++)l[_+v]=0;l[_+d]=1}for(_=0;_<f;_++){if(q[_]=n[(o+1)*_],_<f-1){for(m=_+1,S=Math.abs(n[o*_+m]),d=_+2;d<f;d++)S<(T=Math.abs(n[o*_+d]))&&(S=T,m=d);D[_]=m}if(_>0){for(m=0,S=Math.abs(n[_]),d=1;d<_;d++)S<(T=Math.abs(n[o*d+_]))&&(S=T,m=d);g[_]=m}}if(f>1)for(;u<E;u++){for(_=0,S=Math.abs(n[D[0]]),d=1;d<f-1;d++)S<(T=Math.abs(n[o*d+D[d]]))&&(S=T,_=d);for(y=D[_],d=1;d<f;d++)S<(T=Math.abs(n[o*g[d]+d]))&&(S=T,_=g[d],y=d);if(A=n[o*_+y],Math.abs(A)<=c)break;for(R=.5*(q[y]-q[_]),P=(C=Math.abs(R)+t(A,R))/(L=t(A,C)),L=A/L,C=A/C*A,R<0&&(L=-L,C=-C),n[o*_+y]=0,q[_]-=C,q[y]+=C,d=0;d<_;d++)M=o*d+y,O=n[w=o*d+_],k=n[M],n[w]=O*P-k*L,n[M]=O*L+k*P;for(d=_+1;d<y;d++)M=o*d+y,O=n[w=o*_+d],k=n[M],n[w]=O*P-k*L,n[M]=O*L+k*P;for(w=o*_+(d=y+1),M=o*y+d;d<f;d++,w++,M++)O=n[w],k=n[M],n[w]=O*P-k*L,n[M]=O*L+k*P;if(l)for(w=h*_,M=h*y,d=0;d<f;d++,w++,M++)O=l[w],k=l[M],l[w]=O*P-k*L,l[M]=O*L+k*P;for(v=0;v<2;v++){if((x=0==v?_:y)<f-1){for(m=x+1,S=Math.abs(n[o*x+m]),d=x+2;d<f;d++)S<(T=Math.abs(n[o*x+d]))&&(S=T,m=d);D[x]=m}if(x>0){for(m=0,S=Math.abs(n[x]),d=1;d<x;d++)S<(T=Math.abs(n[o*d+x]))&&(S=T,m=d);g[x]=m}}}for(_=0;_<f-1;_++){for(m=_,d=_+1;d<f;d++)q[m]<q[d]&&(m=d);if(_!=m&&(e(q,m,_,S),l))for(d=0;d<f;d++)e(l,h*m+d,h*_+d,S)}r.cache.put_buffer(I),r.cache.put_buffer(N)}(d.data,l,q.data,p?p.data:null,l,l),o)for(;--l>=0;)o.data[l]=q.data[l];r.cache.put_buffer(f),r.cache.put_buffer(c)}});b.linalg=a}(r),function(a){var e=function(){var e=function(p){return p*p},t=new r.matrix_t(3,3,r.F32_t|r.C1_t),i=new r.matrix_t(3,3,r.F32_t|r.C1_t),n=new r.matrix_t(6,6,r.F32_t|r.C1_t),o=new r.matrix_t(6,1,r.F32_t|r.C1_t),l=function(){function p(){}return p.prototype.run=function(e,q,l,h){var f,c,d=0,v=0,_=l.type|r.C1_t,m=l.data,y=t.data,x=i.data,w=0,M=0;!function(e,t,r,n,u){for(var o,l,h=0,f=0,s=0,q=0,c=0,d=0,p=0,v=0,_=0;h<u;++h)f+=e[h].x,s+=e[h].y,c+=t[h].x,d+=t[h].y;for(f/=u,s/=u,c/=u,d/=u,h=0;h<u;++h)v=e[h].x-f,_=e[h].y-s,q+=Math.sqrt(v*v+_*_),v=t[h].x-c,_=t[h].y-d,p+=Math.sqrt(v*v+_*_);q/=u,p/=u,o=Math.SQRT2/q,l=Math.SQRT2/p,r[0]=r[4]=o,r[2]=-f*o,r[5]=-s*o,r[1]=r[3]=r[6]=r[7]=0,r[8]=1,n[0]=n[4]=l,n[2]=-c*l,n[5]=-d*l,n[1]=n[3]=n[6]=n[7]=0,n[8]=1}(e,q,y,x,h);for(var u=r.cache.get_buffer(2*h*6<<3),E=r.cache.get_buffer(2*h<<3),S=new r.matrix_t(6,2*h,_,u.data),T=new r.matrix_t(1,2*h,_,E.data),A=S.data,s=T.data;d<h;++d)f=e[d],c=q[d],w=y[0]*f.x+y[1]*f.y+y[2],M=y[3]*f.x+y[4]*f.y+y[5],A[v=2*d*6]=w,A[v+1]=M,A[v+2]=1,A[v+3]=0,A[v+4]=0,A[v+5]=0,A[v+=6]=0,A[v+1]=0,A[v+2]=0,A[v+3]=w,A[v+4]=M,A[v+5]=1,s[d<<1]=x[0]*c.x+x[1]*c.y+x[2],s[1+(d<<1)]=x[3]*c.x+x[4]*c.y+x[5];return r.matmath.multiply_AtA(n,S),r.matmath.multiply_AtB(o,S,T),r.linalg.lu_solve(n,o),m[0]=o.data[0],m[1]=o.data[1],m[2]=o.data[2],m[3]=o.data[3],m[4]=o.data[4],m[5]=o.data[5],m[6]=0,m[7]=0,m[8]=1,r.matmath.invert_3x3(i,i),r.matmath.multiply_3x3(l,i,l),r.matmath.multiply_3x3(l,l,t),r.cache.put_buffer(u),r.cache.put_buffer(E),1},p.prototype.error=function(t,r,n,o,u){for(var l,h,s=0,q=n.data;s<u;++s)l=t[s],h=r[s],o[s]=e(h.x-q[0]*l.x-q[1]*l.y-q[2])+e(h.y-q[3]*l.x-q[4]*l.y-q[5])},p.prototype.check_subset=function(s,e,q){return!0},p}(),g=new r.matrix_t(9,9,r.F32_t|r.C1_t),h=new r.matrix_t(9,9,r.F32_t|r.C1_t);return{affine2d:l,homography2d:function(){function p(){}return p.prototype.run=function(e,n,o,l){for(var f=0,c=0,d=o.data,v=t.data,_=i.data,m=g.data,y=h.data,x=0,w=0,s=0,q=0,u=0,M=0,E=0,S=0,T=0,A=0,R=0,C=0;f<l;++f)E+=n[f].x,S+=n[f].y,R+=e[f].x,C+=e[f].y;for(E/=l,S/=l,R/=l,C/=l,f=0;f<l;++f)u+=Math.abs(n[f].x-E),M+=Math.abs(n[f].y-S),T+=Math.abs(e[f].x-R),A+=Math.abs(e[f].y-C);if(Math.abs(u)<r.EPSILON||Math.abs(M)<r.EPSILON||Math.abs(T)<r.EPSILON||Math.abs(A)<r.EPSILON)return 0;for(u=l/u,M=l/M,T=l/T,A=l/A,v[0]=T,v[1]=0,v[2]=-R*T,v[3]=0,v[4]=A,v[5]=-C*A,v[6]=0,v[7]=0,v[8]=1,_[0]=1/u,_[1]=0,_[2]=E,_[3]=0,_[4]=1/M,_[5]=S,_[6]=0,_[7]=0,_[8]=1,f=81;--f>=0;)m[f]=0;for(f=0;f<l;++f)x=(n[f].x-E)*u,w=(n[f].y-S)*M,s=(e[f].x-R)*T,q=(e[f].y-C)*A,m[0]+=s*s,m[1]+=s*q,m[2]+=s,m[6]+=s*-x*s,m[7]+=s*-x*q,m[8]+=s*-x,m[10]+=q*q,m[11]+=q,m[15]+=q*-x*s,m[16]+=q*-x*q,m[17]+=q*-x,m[20]+=1,m[24]+=-x*s,m[25]+=-x*q,m[26]+=-x,m[30]+=s*s,m[31]+=s*q,m[32]+=s,m[33]+=s*-w*s,m[34]+=s*-w*q,m[35]+=s*-w,m[40]+=q*q,m[41]+=q,m[42]+=q*-w*s,m[43]+=q*-w*q,m[44]+=q*-w,m[50]+=1,m[51]+=-w*s,m[52]+=-w*q,m[53]+=-w,m[60]+=-x*s*-x*s+-w*s*-w*s,m[61]+=-x*s*-x*q+-w*s*-w*q,m[62]+=-x*s*-x+-w*s*-w,m[70]+=-x*q*-x*q+-w*q*-w*q,m[71]+=-x*q*-x+-w*q*-w,m[80]+=-x*-x+-w*-w;for(f=0;f<9;++f)for(c=0;c<f;++c)m[9*f+c]=m[9*c+f];return r.linalg.eigenVV(g,h),d[0]=y[72],d[1]=y[73],d[2]=y[74],d[3]=y[75],d[4]=y[76],d[5]=y[77],d[6]=y[78],d[7]=y[79],d[8]=y[80],r.matmath.multiply_3x3(o,i,o),r.matmath.multiply_3x3(o,o,t),x=1/d[8],d[0]*=x,d[1]*=x,d[2]*=x,d[3]*=x,d[4]*=x,d[5]*=x,d[6]*=x,d[7]*=x,d[8]=1,1},p.prototype.error=function(e,t,u,r,n){for(var o,l,h=0,s=0,f=0,c=0,q=u.data;h<n;++h)o=e[h],l=t[h],s=1/(q[6]*o.x+q[7]*o.y+1),f=(q[0]*o.x+q[1]*o.y+q[2])*s-l.x,c=(q[3]*o.x+q[4]*o.y+q[5])*s-l.y,r[h]=f*f+c*c},p.prototype.check_subset=function(e,s,t){if(4==t){var n=0,o=e[0],l=e[1],h=e[2],f=e[3],c=s[0],d=s[1],v=s[2],u=s[3],_=o.x,m=o.y,y=l.x,x=l.y,w=h.x,M=h.y,E=c.x,S=c.y,T=d.x,A=d.y,R=v.x,C=v.y,L=r.matmath.determinant_3x3(_,m,1,y,x,1,w,M,1),P=r.matmath.determinant_3x3(E,S,1,T,A,1,R,C,1);if(L*P<0&&n++,_=l.x,m=l.y,y=h.x,x=h.y,w=f.x,M=f.y,E=d.x,S=d.y,T=v.x,A=v.y,R=u.x,C=u.y,(L=r.matmath.determinant_3x3(_,m,1,y,x,1,w,M,1))*(P=r.matmath.determinant_3x3(E,S,1,T,A,1,R,C,1))<0&&n++,_=o.x,m=o.y,y=h.x,x=h.y,w=f.x,M=f.y,E=c.x,S=c.y,T=v.x,A=v.y,R=u.x,C=u.y,(L=r.matmath.determinant_3x3(_,m,1,y,x,1,w,M,1))*(P=r.matmath.determinant_3x3(E,S,1,T,A,1,R,C,1))<0&&n++,_=o.x,m=o.y,y=l.x,x=l.y,w=f.x,M=f.y,E=c.x,S=c.y,T=d.x,A=d.y,R=u.x,C=u.y,(L=r.matmath.determinant_3x3(_,m,1,y,x,1,w,M,1))*(P=r.matmath.determinant_3x3(E,S,1,T,A,1,R,C,1))<0&&n++,0!=n&&4!=n)return!1}return!0},p}()}}(),b=function(){function e(e,i,t,g){void 0===e&&(e=0),void 0===i&&(i=.5),void 0===t&&(t=.5),void 0===g&&(g=.99),this.size=e,this.thresh=i,this.eps=t,this.prob=g}return e.prototype.update_iters=function(g,i){var e=Math.log(1-this.prob),t=Math.log(1-Math.pow(1-g,this.size));return 0|(t>=0||-e>=i*-t?i:Math.round(e/t))},e}(),t=function(){var e=function(e,q,t,p,r,n,g){for(var o=1e3,s=[],l=0,h=0,u=0,f=0,c=!1;u<o;++u){for(l=0;l<p&&u<o;){for(c=!1,f=0;!c;)for(c=!0,f=s[l]=0|Math.floor(Math.random()*r),h=0;h<l;++h)if(f==s[h]){c=!1;break}n[l]=q[f],g[l]=t[f],e.check_subset(n,g,l+1)?++l:u++}break}return l==p&&u<o},t=function(e,t,p,q,r,g,n,s){var o=0,l=0,h=0,f=g*g;for(e.error(p,q,t,n,r);l<r;++l)h=n[l]<=f,s[l]=h,o+=h;return o};return{ransac:function(n,o,l,i,h,f,c,g){if(void 0===g&&(g=1e3),h<n.size)return!1;var d=n.size,v=g,_=0,q=!1,m=[],y=[],x=f.cols,w=f.rows,u=f.type|r.C1_t,M=r.cache.get_buffer(x*w<<3),E=r.cache.get_buffer(h),S=r.cache.get_buffer(h<<2),T=new r.matrix_t(x,w,u,M.data),s=new r.matrix_t(h,1,r.U8C1_t,E.data),A=-1,p=0,R=S.f32;if(h==d){if(o.run(l,i,T,h)<=0)return r.cache.put_buffer(M),r.cache.put_buffer(E),r.cache.put_buffer(S),!1;if(T.copy_to(f),c)for(;--h>=0;)c.data[h]=1;return r.cache.put_buffer(M),r.cache.put_buffer(E),r.cache.put_buffer(S),!0}for(;_<v;++_){if(!e(o,l,i,d,h,m,y)){if(0==_)return r.cache.put_buffer(M),r.cache.put_buffer(E),r.cache.put_buffer(S),!1;break}o.run(m,y,T,d)<=0||(p=t(o,T,l,i,h,n.thresh,R,s.data))>Math.max(A,d-1)&&(T.copy_to(f),A=p,c&&s.copy_to(c),v=n.update_iters((h-p)/h,v),q=!0)}return r.cache.put_buffer(M),r.cache.put_buffer(E),r.cache.put_buffer(S),q},lmeds:function(n,o,l,i,h,f,c,g){if(void 0===g&&(g=1e3),h<n.size)return!1;var d=n.size,v=g,_=0,m=!1,y=[],x=[],w=f.cols,M=f.rows,E=f.type|r.C1_t,S=r.cache.get_buffer(w*M<<3),T=r.cache.get_buffer(h),u=r.cache.get_buffer(h<<2),p=new r.matrix_t(w,M,E,S.data),A=new r.matrix_t(h,1,r.U8_t|r.C1_t,T.data),q=0,R=u.f32,C=1e9,L=0,P=0;if(n.eps=.45,v=n.update_iters(n.eps,v),h==d){if(o.run(l,i,p,h)<=0)return r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(u),!1;if(p.copy_to(f),c)for(;--h>=0;)c.data[h]=1;return r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(u),!0}for(;_<v;++_){if(!e(o,l,i,d,h,y,x)){if(0==_)return r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(u),!1;break}o.run(y,x,p,d)<=0||(o.error(l,i,p,R,h),(P=r.math.median(R,0,h-1))<C&&(C=P,p.copy_to(f),m=!0))}return m&&(L=2.5*1.4826*(1+5/(h-d))*Math.sqrt(C),L=Math.max(L,.001),q=t(o,f,l,i,h,L,R,A.data),c&&A.copy_to(c),m=q>=d),r.cache.put_buffer(S),r.cache.put_buffer(T),r.cache.put_buffer(u),m}}}();a.ransac_params_t=b,a.motion_model=e,a.motion_estimator=t}(r),function(b){var a={grayscale:function(e,t,n,o,g){void 0===g&&(g=r.COLOR_RGBA2GRAY);var q=0,p=0,l=0,h=0,f=0,u=0,s=4899,c=9617,d=1868,v=4;g!=r.COLOR_BGRA2GRAY&&g!=r.COLOR_BGR2GRAY||(s=1868,d=4899),g!=r.COLOR_RGB2GRAY&&g!=r.COLOR_BGR2GRAY||(v=3);var _=v<<1,m=3*v|0;o.resize(t,n,1);var y=o.data;for(p=0;p<n;++p,h+=t,l+=t*v){for(q=0,f=l,u=h;q<=t-4;q+=4,f+=v<<2,u+=4)y[u]=e[f]*s+e[f+1]*c+e[f+2]*d+8192>>14,y[u+1]=e[f+v]*s+e[f+v+1]*c+e[f+v+2]*d+8192>>14,y[u+2]=e[f+_]*s+e[f+_+1]*c+e[f+_+2]*d+8192>>14,y[u+3]=e[f+m]*s+e[f+m+1]*c+e[f+m+2]*d+8192>>14;for(;q<t;++q,++u,f+=v)y[u]=e[f]*s+e[f+1]*c+e[f+2]*d+8192>>14}},resample:function(e,t,i,n){var o=e.rows,g=e.cols;o>n&&g>i&&(t.resize(i,n,e.channel),e.type&r.U8_t&&t.type&r.U8_t&&o*g/(n*i)<256?function(q,e,t,p){for(var n=0,o=q.channel,l=q.cols,h=q.rows,f=q.data,c=e.data,d=l/t,v=h/p,_=d*v*65536|0,m=0,u=0,y=0,x=0,w=0,s=0,M=0,E=0,S=0,T=0,A=0,R=0,C=0,L=0,P=0,O=0,k=r.cache.get_buffer(t*o<<2),g=r.cache.get_buffer(t*o<<2),I=r.cache.get_buffer(2*l*3<<2),N=k.i32,D=g.i32,B=I.i32;m<t;m++){for(w=1+(S=m*d)-1e-6|0,s=0|(T=S+d),w=Math.min(w,l-1),s=Math.min(s,l-1),w>S&&(B[E++]=m*o|0,B[E++]=(w-1)*o|0,B[E++]=256*(w-S)|0,n++),y=w;y<s;y++)n++,B[E++]=m*o|0,B[E++]=y*o|0,B[E++]=256;T-s>.001&&(n++,B[E++]=m*o|0,B[E++]=s*o|0,B[E++]=256*(T-s)|0)}for(m=0;m<t*o;m++)N[m]=D[m]=0;for(u=0,x=0;x<h;x++){for(A=l*x,E=0;E<n;E++)for(C=B[3*E],w=B[3*E+1],L=B[3*E+2],M=0;M<o;M++)N[C+M]+=f[A+w+M]*L;if((u+1)*v<=x+1||x==h-1){if(O=256-(P=256*Math.max(x+1-(u+1)*v,0)|0),R=t*u,P<=0)for(m=0;m<t*o;m++)c[R+m]=Math.min(Math.max((D[m]+256*N[m])/_,0),255),D[m]=N[m]=0;else for(m=0;m<t*o;m++)c[R+m]=Math.min(Math.max((D[m]+N[m]*O)/_,0),255),D[m]=N[m]*P,N[m]=0;u++}else for(m=0;m<t*o;m++)D[m]+=256*N[m],N[m]=0}r.cache.put_buffer(g),r.cache.put_buffer(k),r.cache.put_buffer(I)}(e,t,i,n):function(p,e,t,n){for(var q=0,o=p.channel,u=p.cols,l=p.rows,h=p.data,f=e.data,c=u/t,d=l/n,v=1/(c*d),_=0,m=0,y=0,x=0,s=0,w=0,M=0,E=0,S=0,T=0,A=0,R=0,C=0,L=0,P=0,O=0,k=r.cache.get_buffer(t*o<<2),g=r.cache.get_buffer(t*o<<2),I=r.cache.get_buffer(2*u*3<<2),N=k.f32,D=g.f32,B=I.f32;_<t;_++){for(s=1+(S=_*c)-1e-6|0,w=0|(T=S+c),s=Math.min(s,u-1),w=Math.min(w,u-1),s>S&&(q++,B[E++]=(s-1)*o|0,B[E++]=_*o|0,B[E++]=(s-S)*v),y=s;y<w;y++)q++,B[E++]=y*o|0,B[E++]=_*o|0,B[E++]=v;T-w>.001&&(q++,B[E++]=w*o|0,B[E++]=_*o|0,B[E++]=(T-w)*v)}for(_=0;_<t*o;_++)N[_]=D[_]=0;for(m=0,x=0;x<l;x++){for(A=u*x,E=0;E<q;E++)for(s=0|B[3*E],C=0|B[3*E+1],L=B[3*E+2],M=0;M<o;M++)N[C+M]+=h[A+s+M]*L;if((m+1)*d<=x+1||x==l-1){if(O=1-(P=Math.max(x+1-(m+1)*d,0)),R=t*m,Math.abs(P)<.001)for(_=0;_<t*o;_++)f[R+_]=D[_]+N[_],D[_]=N[_]=0;else for(_=0;_<t*o;_++)f[R+_]=D[_]+N[_]*O,D[_]=N[_]*P,N[_]=0;m++}else for(_=0;_<t*o;_++)D[_]+=N[_],N[_]=0}r.cache.put_buffer(g),r.cache.put_buffer(k),r.cache.put_buffer(I)}(e,t,i,n))},box_blur_gray:function(e,t,n,o){void 0===o&&(o=0);var l=e.cols,h=e.rows,s=h<<1,f=l<<1,c=0,u=0,d=0,v=0,_=1+(n<<1)|0,p=n+1|0,m=p+1|0,y=o&r.BOX_BLUR_NOSCALE?1:1/(_*_),x=r.cache.get_buffer(l*h<<2),w=0,M=0,E=0,q=0,S=0,T=x.i32,g=e.data,A=0;for(t.resize(l,h,e.channel),d=0;d<h;++d){for(M=d,w=p*g[E],c=E+1|0,v=E+n|0;c<=v;++c)w+=g[c];for(q=E+p|0,A=g[S=E],u=0;u<n;++u,M+=h)T[M]=w,w+=g[q]-A,q++;for(;u<l-m;u+=2,M+=s)T[M]=w,w+=g[q]-g[S],T[M+h]=w,w+=g[q+1]-g[S+1],q+=2,S+=2;for(;u<l-p;++u,M+=h)T[M]=w,w+=g[q]-g[S],q++,S++;for(A=g[q-1];u<l;++u,M+=h)T[M]=w,w+=A-g[S],S++;E+=l}if(E=0,g=t.data,1==y)for(d=0;d<l;++d){for(M=d,w=p*T[E],c=E+1|0,v=E+n|0;c<=v;++c)w+=T[c];for(q=E+p,A=T[S=E],u=0;u<n;++u,M+=l)g[M]=w,w+=T[q]-A,q++;for(;u<h-m;u+=2,M+=f)g[M]=w,w+=T[q]-T[S],g[M+l]=w,w+=T[q+1]-T[S+1],q+=2,S+=2;for(;u<h-p;++u,M+=l)g[M]=w,w+=T[q]-T[S],q++,S++;for(A=T[q-1];u<h;++u,M+=l)g[M]=w,w+=A-T[S],S++;E+=h}else for(d=0;d<l;++d){for(M=d,w=p*T[E],c=E+1|0,v=E+n|0;c<=v;++c)w+=T[c];for(q=E+p,A=T[S=E],u=0;u<n;++u,M+=l)g[M]=w*y,w+=T[q]-A,q++;for(;u<h-m;u+=2,M+=f)g[M]=w*y,w+=T[q]-T[S],g[M+l]=w*y,w+=T[q+1]-T[S+1],q+=2,S+=2;for(;u<h-p;++u,M+=l)g[M]=w*y,w+=T[q]-T[S],q++,S++;for(A=T[q-1];u<h;++u,M+=l)g[M]=w*y,w+=A-T[S],S++;E+=h}r.cache.put_buffer(x)},gaussian_blur:function(g,s,e,t){void 0===t&&(t=0),void 0===e&&(e=0);var n=(e=0==e?2*Math.max(1,4*t+1-1e-8)+1|0:e)>>1,o=g.cols,p=g.rows,u=g.type,l=u&r.U8_t;s.resize(o,p,g.channel);var h,i,f=g.data,c=s.data,q=e+Math.max(p,o)|0,d=r.cache.get_buffer(q<<2),v=r.cache.get_buffer(e<<2);l?(h=d.i32,i=v.i32):u&r.S32_t?(h=d.i32,i=v.f32):(h=d.f32,i=v.f32),r.math.get_gaussian_kernel(e,t,i,u),l?function(e,t,r,s,n,o,g,l){for(var h=0,f=0,c=0,d=0,u=0,v=0,_=0,m=0,y=0,x=o[0],w=0,q=s<<1,p=3*s,M=s<<2;h<n;++h){for(v=t[d],f=0;f<l;++f)e[f]=v;for(f=0;f<=s-2;f+=2)e[f+l]=t[d+f],e[f+l+1]=t[d+f+1];for(;f<s;++f)e[f+l]=t[d+f];for(v=t[d+s-1],f=s;f<l+s;++f)e[f+l]=v;for(f=0;f<=s-4;f+=4){for(v=e[f]*x,_=e[f+1]*x,m=e[f+2]*x,y=e[f+3]*x,c=1;c<g;++c)w=o[c],v+=e[c+f]*w,_+=e[c+f+1]*w,m+=e[c+f+2]*w,y+=e[c+f+3]*w;r[u+f]=Math.min(v>>8,255),r[u+f+1]=Math.min(_>>8,255),r[u+f+2]=Math.min(m>>8,255),r[u+f+3]=Math.min(y>>8,255)}for(;f<s;++f){for(v=e[f]*x,c=1;c<g;++c)v+=e[c+f]*o[c];r[u+f]=Math.min(v>>8,255)}d+=s,u+=s}for(h=0;h<s;++h){for(v=r[h],f=0;f<l;++f)e[f]=v;for(c=h,f=0;f<=n-2;f+=2,c+=q)e[f+l]=r[c],e[f+l+1]=r[c+s];for(;f<n;++f,c+=s)e[f+l]=r[c];for(v=r[(n-1)*s+h],f=n;f<l+n;++f)e[f+l]=v;for(u=h,f=0;f<=n-4;f+=4,u+=M){for(v=e[f]*x,_=e[f+1]*x,m=e[f+2]*x,y=e[f+3]*x,c=1;c<g;++c)w=o[c],v+=e[c+f]*w,_+=e[c+f+1]*w,m+=e[c+f+2]*w,y+=e[c+f+3]*w;r[u]=Math.min(v>>8,255),r[u+s]=Math.min(_>>8,255),r[u+q]=Math.min(m>>8,255),r[u+p]=Math.min(y>>8,255)}for(;f<n;++f,u+=s){for(v=e[f]*x,c=1;c<g;++c)v+=e[c+f]*o[c];r[u]=Math.min(v>>8,255)}}}(h,f,c,o,p,i,e,n):function(e,t,r,s,n,o,g,l){for(var h=0,f=0,c=0,d=0,u=0,v=0,_=0,m=0,y=0,x=o[0],w=0,q=s<<1,p=3*s,M=s<<2;h<n;++h){for(v=t[d],f=0;f<l;++f)e[f]=v;for(f=0;f<=s-2;f+=2)e[f+l]=t[d+f],e[f+l+1]=t[d+f+1];for(;f<s;++f)e[f+l]=t[d+f];for(v=t[d+s-1],f=s;f<l+s;++f)e[f+l]=v;for(f=0;f<=s-4;f+=4){for(v=e[f]*x,_=e[f+1]*x,m=e[f+2]*x,y=e[f+3]*x,c=1;c<g;++c)w=o[c],v+=e[c+f]*w,_+=e[c+f+1]*w,m+=e[c+f+2]*w,y+=e[c+f+3]*w;r[u+f]=v,r[u+f+1]=_,r[u+f+2]=m,r[u+f+3]=y}for(;f<s;++f){for(v=e[f]*x,c=1;c<g;++c)v+=e[c+f]*o[c];r[u+f]=v}d+=s,u+=s}for(h=0;h<s;++h){for(v=r[h],f=0;f<l;++f)e[f]=v;for(c=h,f=0;f<=n-2;f+=2,c+=q)e[f+l]=r[c],e[f+l+1]=r[c+s];for(;f<n;++f,c+=s)e[f+l]=r[c];for(v=r[(n-1)*s+h],f=n;f<l+n;++f)e[f+l]=v;for(u=h,f=0;f<=n-4;f+=4,u+=M){for(v=e[f]*x,_=e[f+1]*x,m=e[f+2]*x,y=e[f+3]*x,c=1;c<g;++c)w=o[c],v+=e[c+f]*w,_+=e[c+f+1]*w,m+=e[c+f+2]*w,y+=e[c+f+3]*w;r[u]=v,r[u+s]=_,r[u+q]=m,r[u+p]=y}for(;f<n;++f,u+=s){for(v=e[f]*x,c=1;c<g;++c)v+=e[c+f]*o[c];r[u]=v}}}(h,f,c,o,p,i,e,n),r.cache.put_buffer(d),r.cache.put_buffer(v)},pyrdown:function(e,t,s,r){void 0===s&&(s=0),void 0===r&&(r=0);var q=e.cols,p=q>>1,n=e.rows>>1,o=p-(s<<1),u=n-(r<<1),l=0,h=0,g=s+r*q,f=0,c=0,i=0;t.resize(p,n,e.channel);var d=e.data,v=t.data;for(h=0;h<u;++h){for(f=g,i=c,l=0;l<=o-2;l+=2,i+=2,f+=4)v[i]=d[f]+d[f+1]+d[f+q]+d[f+q+1]+2>>2,v[i+1]=d[f+2]+d[f+3]+d[f+q+2]+d[f+q+3]+2>>2;for(;l<o;++l,++i,f+=2)v[i]=d[f]+d[f+1]+d[f+q]+d[f+q+1]+2>>2;g+=q<<1,c+=p}},scharr_derivatives:function(e,t){var n,o,l,h,f,c,d,v,p=e.cols,s=e.rows,_=p<<1,m=0,y=0,u=0,x=0,w=0,M=0,i=0;t.resize(p,s,2);var E=e.data,g=t.data,S=r.cache.get_buffer(p+2<<2),q=r.cache.get_buffer(p+2<<2);for(e.type&r.U8_t||e.type&r.S32_t?(d=S.i32,v=q.i32):(d=S.f32,v=q.f32);y<s;++y,w+=p){for(x=(y>0?y-1:1)*p|0,M=(y<s-1?y+1:s-2)*p|0,i=y*_|0,m=0,u=1;m<=p-2;m+=2,u+=2)n=E[x+m],o=E[M+m],d[u]=3*(n+o)+10*E[w+m],v[u]=o-n,n=E[x+m+1],o=E[M+m+1],d[u+1]=3*(n+o)+10*E[w+m+1],v[u+1]=o-n;for(;m<p;++m,++u)n=E[x+m],o=E[M+m],d[u]=3*(n+o)+10*E[w+m],v[u]=o-n;for(m=p+1|0,d[0]=d[1],d[m]=d[p],v[0]=v[1],v[m]=v[p],m=0;m<=p-4;m+=4)n=v[m+2],o=v[m+1],l=v[m+3],h=v[m+4],f=d[m+2],c=d[m+3],g[i++]=f-d[m],g[i++]=3*(n+v[m])+10*o,g[i++]=c-d[m+1],g[i++]=3*(l+o)+10*n,g[i++]=d[m+4]-f,g[i++]=3*(h+n)+10*l,g[i++]=d[m+5]-c,g[i++]=3*(v[m+5]+l)+10*h;for(;m<p;++m)g[i++]=d[m+2]-d[m],g[i++]=3*(v[m+2]+v[m])+10*v[m+1]}r.cache.put_buffer(S),r.cache.put_buffer(q)},sobel_derivatives:function(e,t){var n,o,l,h,f,c,d,v,p=e.cols,s=e.rows,_=p<<1,m=0,y=0,u=0,x=0,w=0,M=0,i=0;t.resize(p,s,2);var E=e.data,g=t.data,S=r.cache.get_buffer(p+2<<2),q=r.cache.get_buffer(p+2<<2);for(e.type&r.U8_t||e.type&r.S32_t?(d=S.i32,v=q.i32):(d=S.f32,v=q.f32);y<s;++y,w+=p){for(x=(y>0?y-1:1)*p|0,M=(y<s-1?y+1:s-2)*p|0,i=y*_|0,m=0,u=1;m<=p-2;m+=2,u+=2)n=E[x+m],o=E[M+m],d[u]=n+o+2*E[w+m],v[u]=o-n,n=E[x+m+1],o=E[M+m+1],d[u+1]=n+o+2*E[w+m+1],v[u+1]=o-n;for(;m<p;++m,++u)n=E[x+m],o=E[M+m],d[u]=n+o+2*E[w+m],v[u]=o-n;for(m=p+1|0,d[0]=d[1],d[m]=d[p],v[0]=v[1],v[m]=v[p],m=0;m<=p-4;m+=4)n=v[m+2],o=v[m+1],l=v[m+3],h=v[m+4],f=d[m+2],c=d[m+3],g[i++]=f-d[m],g[i++]=n+v[m]+2*o,g[i++]=c-d[m+1],g[i++]=l+o+2*n,g[i++]=d[m+4]-f,g[i++]=h+n+2*l,g[i++]=d[m+5]-c,g[i++]=v[m+5]+l+2*h;for(;m<p;++m)g[i++]=d[m+2]-d[m],g[i++]=v[m+2]+v[m]+2*v[m+1]}r.cache.put_buffer(S),r.cache.put_buffer(q)},compute_integral_image:function(g,e,t,u){var r=0|g.cols,n=0|g.rows,o=g.data,l=r+1|0,h=0,f=0,c=0,d=0,q=0,v=0,_=0,m=0;if(e&&t){for(;q<l;++q)e[q]=0,t[q]=0;for(c=l+1|0,d=1,q=0,m=0;q<n;++q,++c,++d){for(h=f=0,v=0;v<=r-2;v+=2,m+=2,c+=2,d+=2)h+=_=o[m],f+=_*_,e[c]=e[d]+h,t[c]=t[d]+f,h+=_=o[m+1],f+=_*_,e[c+1]=e[d+1]+h,t[c+1]=t[d+1]+f;for(;v<r;++v,++m,++c,++d)h+=_=o[m],f+=_*_,e[c]=e[d]+h,t[c]=t[d]+f}}else if(e){for(;q<l;++q)e[q]=0;for(c=l+1|0,d=1,q=0,m=0;q<n;++q,++c,++d){for(h=0,v=0;v<=r-2;v+=2,m+=2,c+=2,d+=2)h+=o[m],e[c]=e[d]+h,h+=o[m+1],e[c+1]=e[d+1]+h;for(;v<r;++v,++m,++c,++d)h+=o[m],e[c]=e[d]+h}}else if(t){for(;q<l;++q)t[q]=0;for(c=l+1|0,d=1,q=0,m=0;q<n;++q,++c,++d){for(f=0,v=0;v<=r-2;v+=2,m+=2,c+=2,d+=2)f+=(_=o[m])*_,t[c]=t[d]+f,f+=(_=o[m+1])*_,t[c+1]=t[d+1]+f;for(;v<r;++v,++m,++c,++d)f+=(_=o[m])*_,t[c]=t[d]+f}}if(u){for(q=0;q<l;++q)u[q]=0;for(c=l+1|0,d=0,q=0,m=0;q<n;++q,++c,++d){for(v=0;v<=r-2;v+=2,m+=2,c+=2,d+=2)u[c]=o[m]+u[d],u[c+1]=o[m+1]+u[d+1];for(;v<r;++v,++m,++c,++d)u[c]=o[m]+u[d]}for(c=l+r|0,d=r,q=0;q<n;++q,c+=l,d+=l)u[c]+=u[d];for(v=r-1;v>0;--v)for(d=(c=v+n*l)-l,q=n;q>0;--q,c-=l,d-=l)u[c]+=u[d]+u[d+1]}},equalize_histogram:function(e,t){var s=e.cols,q=e.rows,n=e.data;t.resize(s,q,e.channel);var o,g,l=t.data,h=s*q,p=0,f=0,c=r.cache.get_buffer(1024);for(o=c.i32;p<256;++p)o[p]=0;for(p=0;p<h;++p)++o[n[p]];for(f=o[0],p=1;p<256;++p)f=o[p]+=f;for(g=255/h,p=0;p<h;++p)l[p]=o[n[p]]*g+.5|0;r.cache.put_buffer(c)},canny:function(u,e,t,n){var o=u.cols,l=u.rows;u.data,e.resize(o,l,u.channel);var h=e.data,f=0,c=0,q=0,d=o<<1,v=0,_=0,m=0,y=0,x=0,w=0,g=0,M=0,p=r.cache.get_buffer(l*d<<2),E=r.cache.get_buffer(3*(o+2)<<2),S=r.cache.get_buffer((l+2)*(o+2)<<2),T=r.cache.get_buffer(l*o<<2),A=E.i32,R=S.i32,C=T.i32,L=p.i32,P=new r.matrix_t(o,l,r.S32C2_t,p.data),O=1,k=o+2+1|0,I=2*(o+2)+1|0,N=o+2|0,D=N+1|0,B=0;for(this.sobel_derivatives(u,P),t>n&&(f=t,t=n,n=f),f=3*(o+2)|0;--f>=0;)A[f]=0;for(f=(l+2)*(o+2)|0;--f>=0;)R[f]=0;for(;c<o;++c,q+=2)y=L[q],x=L[q+1],A[k+c]=(y^y>>31)-(y>>31)+((x^x>>31)-(x>>31));for(f=1;f<=l;++f,q+=d){if(f==l)for(c=I+o;--c>=I;)A[c]=0;else for(c=0;c<o;c++)y=L[q+(c<<1)],x=L[q+(c<<1)+1],A[I+c]=(y^y>>31)-(y>>31)+((x^x>>31)-(x>>31));for(v=q-d|0,R[D-1]=0,_=0,c=0;c<o;++c,v+=2){if((m=A[k+c])>t)if(w=(y=L[v])^(x=L[v+1]),x=(x^x>>31)-(x>>31)|0,M=(g=13573*(y=(y^y>>31)-(y>>31)|0))+(y+y<<15),(x<<=15)<g){if(m>A[k+c-1]&&m>=A[k+c+1]){m>n&&!_&&2!=R[D+c-N]?(R[D+c]=2,_=1,C[B++]=D+c):R[D+c]=1;continue}}else if(x>M){if(m>A[O+c]&&m>=A[I+c]){m>n&&!_&&2!=R[D+c-N]?(R[D+c]=2,_=1,C[B++]=D+c):R[D+c]=1;continue}}else if(m>A[O+c-(w=w<0?-1:1)]&&m>A[I+c+w]){m>n&&!_&&2!=R[D+c-N]?(R[D+c]=2,_=1,C[B++]=D+c):R[D+c]=1;continue}R[D+c]=0,_=0}R[D+o]=0,D+=N,c=O,O=k,k=I,I=c}for(c=D-N-1,f=0;f<N;++f,++c)R[c]=0;for(;B>0;)D=C[--B],1==R[D-=N+1]&&(R[D]=2,C[B++]=D),1==R[D+=1]&&(R[D]=2,C[B++]=D),1==R[D+=1]&&(R[D]=2,C[B++]=D),1==R[D+=N]&&(R[D]=2,C[B++]=D),1==R[D-=2]&&(R[D]=2,C[B++]=D),1==R[D+=N]&&(R[D]=2,C[B++]=D),1==R[D+=1]&&(R[D]=2,C[B++]=D),1==R[D+=1]&&(R[D]=2,C[B++]=D);for(D=N+1,O=0,f=0;f<l;++f,D+=N)for(c=0;c<o;++c)h[O++]=255*(2==R[D+c]);r.cache.put_buffer(p),r.cache.put_buffer(E),r.cache.put_buffer(S),r.cache.put_buffer(T)},warp_perspective:function(e,t,r,n){void 0===n&&(n=0);for(var o=0|e.cols,l=0|e.rows,h=0|t.cols,f=0|t.rows,c=e.data,q=t.data,d=0,v=0,_=0,u=0,m=0,y=0,p=0,x=0,w=0,M=0,s=0,E=0,S=0,T=0,A=0,i=r.data,R=i[0],C=i[1],L=i[2],P=i[3],O=i[4],k=i[5],I=i[6],N=i[7],D=i[8],g=0;v<f;++v)for(x=C*v+L,w=O*v+k,M=N*v+D,d=0;d<h;++d,++g,x+=R,w+=P,M+=I)u=0|(y=x*(s=1/M)),m=0|(p=w*s),y>0&&p>0&&u<o-1&&m<l-1?(E=Math.max(y-u,0),S=Math.max(p-m,0),T=c[_=o*m+u|0]+E*(c[_+1]-c[_]),A=c[_+o]+E*(c[_+o+1]-c[_+o]),q[g]=T+S*(A-T)):q[g]=n},warp_affine:function(e,t,p,r){void 0===r&&(r=0);for(var u=e.cols,n=e.rows,o=t.cols,l=t.rows,h=e.data,i=t.data,f=0,c=0,d=0,q=0,v=0,_=0,m=0,y=0,x=0,w=0,g=0,M=p.data,E=M[0],s=M[1],S=M[2],T=M[3],A=M[4],R=M[5],C=0;c<l;++c)for(_=s*c+S,m=A*c+R,f=0;f<o;++f,++C,_+=E,m+=T)v=0|m,(q=0|_)>=0&&v>=0&&q<u-1&&v<n-1?(y=_-q,x=m-v,w=h[d=u*v+q]+y*(h[d+1]-h[d]),g=h[d+u]+y*(h[d+u+1]-h[d+u]),i[C]=w+x*(g-w)):i[C]=r},skindetector:function(e,p){for(var t,r,n,o,l=e.width*e.height;l--;)o=4*l,t=e.data[o],r=e.data[o+1],n=e.data[o+2],t>95&&r>40&&n>20&&t>r&&t>n&&t-Math.min(r,n)>15&&Math.abs(t-r)>15?p[l]=255:p[l]=0}};b.imgproc=a}(r),function(a){var b=function(){var e=new Int32Array([0,3,1,3,2,2,3,1,3,0,3,-1,2,-2,1,-3,0,-3,-1,-3,-2,-2,-3,-1,-3,0,-3,1,-2,2,-1,3]),t=new Uint8Array(512),n=new Int32Array(25),i=new Int32Array(25),g=function(e,t,r,n,p){for(var o=0,l=e[t],h=p,f=0,u=0,s=0;o<25;++o)n[o]=l-e[t+r[o]];for(o=0;o<16;o+=2)f=Math.min(n[o+1],n[o+2]),(f=Math.min(f,n[o+3]))<=h||(f=Math.min(f,n[o+4]),f=Math.min(f,n[o+5]),f=Math.min(f,n[o+6]),f=Math.min(f,n[o+7]),f=Math.min(f,n[o+8]),h=Math.max(h,Math.min(f,n[o])),h=Math.max(h,Math.min(f,n[o+9])));for(u=-h,o=0;o<16;o+=2)s=Math.max(n[o+1],n[o+2]),s=Math.max(s,n[o+3]),s=Math.max(s,n[o+4]),(s=Math.max(s,n[o+5]))>=u||(s=Math.max(s,n[o+6]),s=Math.max(s,n[o+7]),s=Math.max(s,n[o+8]),u=Math.min(u,Math.max(s,n[o])),u=Math.min(u,Math.max(s,n[o+9])));return-u-1},o=20;return{set_threshold:function(e){o=Math.min(Math.max(e,0),255);for(var r=-255;r<=255;++r)t[r+255]=r<-o?1:r>o?2:0;return o},detect:function(l,h,f){void 0===f&&(f=3);var c,u=l.data,d=l.cols,v=l.rows,_=0,m=0,y=0,x=0,w=0,M=r.cache.get_buffer(3*d),E=r.cache.get_buffer(3*(d+1)<<2),S=M.u8,T=E.i32,A=n,R=i,C=Math.max(3,f),L=Math.min(v-2,v-f),P=Math.max(3,f),O=Math.min(d-3,d-f),k=0,I=0,N=g,D=t,p=o,B=0,F=0,U=0,j=0,V=0,z=0,G=0,H=0,W=0,X=0,Y=0,Z=0;!function(t,r,n){for(var o=0,l=e;o<n;++o)t[o]=l[o<<1]+l[1+(o<<1)]*r;for(;o<25;++o)t[o]=t[o-n]}(A,d,16);var J=A[0],K=A[1],Q=A[2],$=A[3],ee=A[4],te=A[5],re=A[6],ae=A[7],ie=A[8],ne=A[9],s=A[10],oe=A[11],q=A[12],se=A[13],le=A[14],he=A[15];for(_=0;_<3*d;++_)S[_]=0;for(_=C;_<L;++_){for(G=_*d+P|0,z=(w=(_-3)%3)*d|0,V=w*(d+1)|0,m=0;m<d;++m)S[z+m]=0;if(j=0,_<L-1)for(m=P;m<O;++m,++G)if(0!=(U=D[(F=255-(B=u[G]))+u[G+J]]|D[F+u[G+ie]])&&(U&=D[F+u[G+Q]]|D[F+u[G+s]],U&=D[F+u[G+ee]]|D[F+u[G+q]],0!=(U&=D[F+u[G+re]]|D[F+u[G+le]]))){if(U&=D[F+u[G+K]]|D[F+u[G+ne]],U&=D[F+u[G+$]]|D[F+u[G+oe]],U&=D[F+u[G+te]]|D[F+u[G+se]],1&(U&=D[F+u[G+ae]]|D[F+u[G+he]]))for(x=B-p,k=0,y=0;y<25;++y)if(u[G+A[y]]<x){if(++k>8){T[V+ ++j]=m,S[z+m]=N(u,G,A,R,p);break}}else k=0;if(2&U)for(x=B+p,k=0,y=0;y<25;++y)if(u[G+A[y]]>x){if(++k>8){T[V+ ++j]=m,S[z+m]=N(u,G,A,R,p);break}}else k=0}if(T[V+d]=j,_!=C)for(H=(w=(_-4+3)%3)*d|0,V=w*(d+1)|0,W=(w=(_-5+3)%3)*d|0,j=T[V+d],y=0;y<j;++y)X=(m=T[V+y])+1|0,Y=m-1|0,(Z=S[H+m])>S[H+X]&&Z>S[H+Y]&&Z>S[W+Y]&&Z>S[W+m]&&Z>S[W+X]&&Z>S[z+Y]&&Z>S[z+m]&&Z>S[z+X]&&((c=h[I]).x=m,c.y=_-1,c.score=Z,I++)}return r.cache.put_buffer(M),r.cache.put_buffer(E),I}}}();a.fast_corners=b,b.set_threshold(20)}(r),function(b){var e,a=(e=function(e,t,r,n,g,o,l){var h=-2*e[t]+e[t+n]+e[t-n],i=-2*e[t]+e[t+g]+e[t-g],f=e[t+o]+e[t-o]-e[t+l]-e[t-l],c=0|Math.sqrt((h-i)*(h-i)+4*f*f);return Math.min(Math.abs(r-c),Math.abs(-(r+c)))},{laplacian_threshold:30,min_eigen_value_threshold:25,detect:function(t,n,o){void 0===o&&(o=5);var l,h=0,f=0,p=t.cols,c=t.rows,q=t.data,d=5*p|0,v=3+3*p|0,g=3-3*p|0,_=r.cache.get_buffer(p*c<<2),m=_.i32,i=0,y=0,x=0,w=0,u=0,M=this.laplacian_threshold,E=this.min_eigen_value_threshold,S=0|Math.max(5,o),s=0|Math.max(3,o),T=0|Math.min(p-5,p-o),A=0|Math.min(c-3,c-o);for(h=p*c;--h>=0;)m[h]=0;for(function(e,t,q,i,r,g,p,n,o,l){var h=0,f=0,c=n*q+p|0,s=c;for(h=n;h<l;++h,s=c+=q)for(f=p;f<o;++f,++s)t[s]=-4*e[s]+e[s+r]+e[s-r]+e[s+g]+e[s-g]}(q,m,p,0,5,d,S,s,T,A),y=s*p+S|0,f=s;f<A;++f,y+=p)for(h=S,x=y;h<T;++h,++x)((i=m[x])<-M&&i<m[x-1]&&i<m[x+1]&&i<m[x-p]&&i<m[x+p]&&i<m[x-p-1]&&i<m[x+p-1]&&i<m[x-p+1]&&i<m[x+p+1]||i>M&&i>m[x-1]&&i>m[x+1]&&i>m[x-p]&&i>m[x+p]&&i>m[x-p-1]&&i>m[x+p-1]&&i>m[x-p+1]&&i>m[x+p+1])&&(w=e(q,x,i,5,d,v,g))>E&&((l=n[u]).x=h,l.y=f,l.score=w,++u,++h,++x);return r.cache.put_buffer(_),u}});b.yape06=a}(r),function(a){var b=function(){var g=function(e,t,i){var r=0;return 0!=e[t+1]&&r++,0!=e[t-1]&&r++,0!=e[t+i]&&r++,0!=e[t+i+1]&&r++,0!=e[t+i-1]&&r++,0!=e[t-i]&&r++,0!=e[t-i+1]&&r++,0!=e[t-i-1]&&r++,r},e=function(e,t,i,r,n){var o,l;if(i>0)for(t-=r*n,l=-n;l<=n;++l){for(o=-n;o<=n;++o)if(e[t+o]>i)return!1;t+=r}else for(t-=r*n,l=-n;l<=n;++l){for(o=-n;o<=n;++o)if(e[t+o]<i)return!1;t+=r}return!0},t=function(s,e,t,u,p,i,r,n){var o=0,q=0,l=r-1|0,h=0,f=0,c=0,d=0,v=0;if((h=s[e+i[q]])<=p)if(h>=u)if((f=s[e+i[l]])<=p){if(f>=u)return void(t[e]=0);if((c=s[e+i[++l]])>p)if((d=s[e+i[++l]])>p)v=3;else{if(!(d<u))return void(t[e]=0);v=6}else if((d=s[e+i[++l]])>p)v=7;else{if(!(d<u))return void(t[e]=0);v=2}}else if((c=s[e+i[++l]])>p)if((d=s[e+i[++l]])>p)v=3;else{if(!(d<u))return void(t[e]=0);v=6}else{if(!(c<u))return void(t[e]=0);if((d=s[e+i[++l]])>p)v=7;else{if(!(d<u))return void(t[e]=0);v=2}}else{if((f=s[e+i[l]])>p)return void(t[e]=0);if((c=s[e+i[++l]])>p)return void(t[e]=0);if((d=s[e+i[++l]])>p)return void(t[e]=0);v=1}else{if((f=s[e+i[l]])<u)return void(t[e]=0);if((c=s[e+i[++l]])<u)return void(t[e]=0);if((d=s[e+i[++l]])<u)return void(t[e]=0);v=0}for(q=1;q<=r;q++)switch(h=s[e+i[q]],v){case 0:if(h>p){if(c=d,(d=s[e+i[++l]])<u)return void(t[e]=0);o-=h+c,v=0;break}if(h<u){if(c>p)return void(t[e]=0);if(d>p)return void(t[e]=0);if(c=d,(d=s[e+i[++l]])>p)return void(t[e]=0);o-=h+c,v=8;break}if(c<=p)return void(t[e]=0);if(d<=p)return void(t[e]=0);if(c=d,(d=s[e+i[++l]])>p){o-=h+c,v=3;break}if(d<u){o-=h+c,v=6;break}return void(t[e]=0);case 1:if(h<u){if(c=d,(d=s[e+i[++l]])>p)return void(t[e]=0);o-=h+c,v=1;break}if(h>p){if(c<u)return void(t[e]=0);if(d<u)return void(t[e]=0);if(c=d,(d=s[e+i[++l]])<u)return void(t[e]=0);o-=h+c,v=9;break}if(c>=u)return void(t[e]=0);if(d>=u)return void(t[e]=0);if(c=d,(d=s[e+i[++l]])<u){o-=h+c,v=2;break}if(d>p){o-=h+c,v=7;break}return void(t[e]=0);case 2:if(h>p)return void(t[e]=0);if(c=d,d=s[e+i[++l]],h<u){if(d>p)return void(t[e]=0);o-=h+c,v=4;break}if(d>p){o-=h+c,v=7;break}if(d<u){o-=h+c,v=2;break}return void(t[e]=0);case 3:if(h<u)return void(t[e]=0);if(c=d,d=s[e+i[++l]],h>p){if(d<u)return void(t[e]=0);o-=h+c,v=5;break}if(d>p){o-=h+c,v=3;break}if(d<u){o-=h+c,v=6;break}return void(t[e]=0);case 4:if(h>p)return void(t[e]=0);if(h<u){if(c=d,(d=s[e+i[++l]])>p)return void(t[e]=0);o-=h+c,v=1;break}if(d>=u)return void(t[e]=0);if(c=d,(d=s[e+i[++l]])<u){o-=h+c,v=2;break}if(d>p){o-=h+c,v=7;break}return void(t[e]=0);case 5:if(h<u)return void(t[e]=0);if(h>p){if(c=d,(d=s[e+i[++l]])<u)return void(t[e]=0);o-=h+c,v=0;break}if(d<=p)return void(t[e]=0);if(c=d,(d=s[e+i[++l]])>p){o-=h+c,v=3;break}if(d<u){o-=h+c,v=6;break}return void(t[e]=0);case 7:if(h>p)return void(t[e]=0);if(h<u)return void(t[e]=0);if(c=d,(d=s[e+i[++l]])>p){o-=h+c,v=3;break}if(d<u){o-=h+c,v=6;break}return void(t[e]=0);case 6:if(h>p)return void(t[e]=0);if(h<u)return void(t[e]=0);if(c=d,(d=s[e+i[++l]])<u){o-=h+c,v=2;break}if(d>p){o-=h+c,v=7;break}return void(t[e]=0);case 8:if(h>p){if(d<u)return void(t[e]=0);if(c=d,(d=s[e+i[++l]])<u)return void(t[e]=0);o-=h+c,v=9;break}if(h<u){if(c=d,(d=s[e+i[++l]])>p)return void(t[e]=0);o-=h+c,v=1;break}return void(t[e]=0);case 9:if(h<u){if(d>p)return void(t[e]=0);if(c=d,(d=s[e+i[++l]])>p)return void(t[e]=0);o-=h+c,v=8;break}if(h>p){if(c=d,(d=s[e+i[++l]])<u)return void(t[e]=0);o-=h+c,v=0;break}return void(t[e]=0)}t[e]=o+n*s[e]},r=function(i,e,t){this.dirs=new Int32Array(1024),this.dirs_count=0|function(e,t,r){var n,o,l=0;for(n=r,o=0;o<n;o++,l++)n=Math.sqrt(r*r-o*o)+.5|0,t[l]=n+e*o;for(n--;n<o&&n>=0;n--,l++)o=Math.sqrt(r*r-n*n)+.5|0,t[l]=n+e*o;for(;-n<o;n--,l++)o=Math.sqrt(r*r-n*n)+.5|0,t[l]=n+e*o;for(o--;o>=0;o--,l++)n=-Math.sqrt(r*r-o*o)-.5|0,t[l]=n+e*o;for(;o>n;o--,l++)n=-Math.sqrt(r*r-o*o)-.5|0,t[l]=n+e*o;for(n++;n<=0;n++,l++)o=-Math.sqrt(r*r-n*n)-.5|0,t[l]=n+e*o;for(;n<-o;n++,l++)o=-Math.sqrt(r*r-n*n)-.5|0,t[l]=n+e*o;for(o++;o<0;o++,l++)n=Math.sqrt(r*r-o*o)+.5|0,t[l]=n+e*o;return t[l]=t[0],t[l+1]=t[1],l}(i,this.dirs,t),this.scores=new Int32Array(i*e),this.radius=0|t};return{level_tables:[],tau:7,init:function(e,t,n,o){var l;for(void 0===o&&(o=1),n=Math.min(n,7),n=Math.max(n,3),l=0;l<o;++l)this.level_tables[l]=new r(e>>l,t>>l,n)},detect:function(r,n,o){void 0===o&&(o=4);var l,h=this.level_tables[0],i=0|h.radius,q=i-1|0,f=h.dirs,c=0|h.dirs_count,d=c>>1,v=r.data,u=0|r.cols,_=0|r.rows,m=u>>1,y=h.scores,s=0,x=0,w=0,M=0,E=0,p=0,S=0,T=0,A=0|this.tau,R=0,C=0|Math.max(i+1,o),L=0|Math.max(i+1,o),P=0|Math.min(u-i-2,u-o),O=0|Math.min(_-i-2,_-o);for(w=L*u+C|0,x=L;x<O;++x,w+=u)for(s=C,M=w;s<P;++s,++M)E=v[M]+A,(p=v[M]-A)<v[M+i]&&v[M+i]<E&&p<v[M-i]&&v[M-i]<E?y[M]=0:t(v,M,y,p,E,f,d,c);for(w=L*u+C|0,x=L;x<O;++x,w+=u)for(s=C,M=w;s<P;++s,++M)T=y[M],(S=Math.abs(T))<5?(++s,++M):g(y,M,u)>=3&&e(y,M,T,m,i)&&((l=n[R]).x=s,l.y=x,l.score=S,++R,s+=q,M+=q);return R}}}();a.yape=b}(r),function(b){var a=function(){var e=new Int32Array([8,-3,9,5,4,2,7,-12,-11,9,-8,2,7,-12,12,-13,2,-13,2,12,1,-7,1,6,-2,-10,-2,-4,-13,-13,-11,-8,-13,-3,-12,-9,10,4,11,9,-13,-8,-8,-9,-11,7,-9,12,7,7,12,6,-4,-5,-3,0,-13,2,-12,-3,-9,0,-7,5,12,-6,12,-1,-3,6,-2,12,-6,-13,-4,-8,11,-13,12,-8,4,7,5,1,5,-3,10,-3,3,-7,6,12,-8,-7,-6,-2,-2,11,-1,-10,-13,12,-8,10,-7,3,-5,-3,-4,2,-3,7,-10,-12,-6,11,5,-12,6,-7,5,-6,7,-1,1,0,4,-5,9,11,11,-13,4,7,4,12,2,-1,4,4,-4,-12,-2,7,-8,-5,-7,-10,4,11,9,12,0,-8,1,-13,-13,-2,-8,2,-3,-2,-2,3,-6,9,-4,-9,8,12,10,7,0,9,1,3,7,-5,11,-10,-13,-6,-11,0,10,7,12,1,-6,-3,-6,12,10,-9,12,-4,-13,8,-8,-12,-13,0,-8,-4,3,3,7,8,5,7,10,-7,-1,7,1,-12,3,-10,5,6,2,-4,3,-10,-13,0,-13,5,-13,-7,-12,12,-13,3,-11,8,-7,12,-4,7,6,-10,12,8,-9,-1,-7,-6,-2,-5,0,12,-12,5,-7,5,3,-10,8,-13,-7,-7,-4,5,-3,-2,-1,-7,2,9,5,-11,-11,-13,-5,-13,-1,6,0,-1,5,-3,5,2,-4,-13,-4,12,-9,-6,-9,6,-12,-10,-8,-4,10,2,12,-3,7,12,12,12,-7,-13,-6,5,-4,9,-3,4,7,-1,12,2,-7,6,-5,1,-13,11,-12,5,-3,7,-2,-6,7,-8,12,-7,-13,-7,-11,-12,1,-3,12,12,2,-6,3,0,-4,3,-2,-13,-1,-13,1,9,7,1,8,-6,1,-1,3,12,9,1,12,6,-1,-9,-1,3,-13,-13,-10,5,7,7,10,12,12,-5,12,9,6,3,7,11,5,-13,6,10,2,-12,2,3,3,8,4,-6,2,6,12,-13,9,-12,10,3,-8,4,-7,9,-11,12,-4,-6,1,12,2,-8,6,-9,7,-4,2,3,3,-2,6,3,11,0,3,-3,8,-8,7,8,9,3,-11,-5,-6,-4,-10,11,-5,10,-5,-8,-3,12,-10,5,-9,0,8,-1,12,-6,4,-6,6,-11,-10,12,-8,7,4,-2,6,7,-2,0,-2,12,-5,-8,-5,2,7,-6,10,12,-9,-13,-8,-8,-5,-13,-5,-2,8,-8,9,-13,-9,-11,-9,0,1,-8,1,-2,7,-4,9,1,-2,1,-1,-4,11,-6,12,-11,-12,-9,-6,4,3,7,7,12,5,5,10,8,0,-4,2,8,-9,12,-5,-13,0,7,2,12,-1,2,1,7,5,11,7,-9,3,5,6,-8,-13,-4,-8,9,-5,9,-3,-3,-4,-7,-3,-12,6,5,8,0,-7,6,-6,12,-13,6,-5,-2,1,-10,3,10,4,1,8,-4,-2,-2,2,-13,2,-12,12,12,-2,-13,0,-6,4,1,9,3,-6,-10,-3,-5,-3,-13,-1,1,7,5,12,-11,4,-2,5,-7,-13,9,-9,-5,7,1,8,6,7,-8,7,6,-7,-4,-7,1,-8,11,-7,-8,-13,6,-12,-8,2,4,3,9,10,-5,12,3,-6,-5,-6,7,8,-3,9,-8,2,-12,2,8,-11,-2,-10,3,-12,-13,-7,-9,-11,0,-10,-5,5,-3,11,8,-2,-13,-1,12,-1,-8,0,9,-13,-11,-12,-5,-10,-2,-10,11,-3,9,-2,-13,2,-3,3,2,-9,-13,-4,0,-4,6,-3,-10,-4,12,-2,-7,-6,-11,-4,9,6,-3,6,11,-13,11,-5,5,11,11,12,6,7,-5,12,-2,-1,12,0,7,-4,-8,-3,-2,-7,1,-6,7,-13,-12,-8,-13,-7,-2,-6,-8,-8,5,-6,-9,-5,-1,-4,5,-13,7,-8,10,1,5,5,-13,1,0,10,-13,9,12,10,-1,5,-8,10,-9,-1,11,1,-13,-9,-3,-6,2,-1,-10,1,12,-13,1,-8,-10,8,-11,10,-6,2,-13,3,-6,7,-13,12,-9,-10,-10,-5,-7,-10,-8,-8,-13,4,-6,8,5,3,12,8,-13,-4,2,-3,-3,5,-13,10,-12,4,-13,5,-1,-9,9,-4,3,0,3,3,-9,-12,1,-6,1,3,2,4,-8,-10,-10,-10,9,8,-13,12,12,-8,-12,-6,-5,2,2,3,7,10,6,11,-8,6,8,8,-12,-7,10,-6,5,-3,-9,-3,9,-1,-13,-1,5,-3,-7,-3,4,-8,-2,-8,3,4,2,12,12,2,-5,3,11,6,-9,11,-13,3,-1,7,12,11,-1,12,4,-3,0,-3,6,4,-11,4,12,2,-4,2,1,-10,-6,-8,1,-13,7,-11,1,-13,12,-11,-13,6,0,11,-13,0,-1,1,4,-13,3,-9,-2,-9,8,-6,-3,-13,-6,-8,-2,5,-9,8,10,2,7,3,-9,-1,-6,-1,-1,9,5,11,-2,11,-3,12,-8,3,0,3,5,-1,4,0,10,3,-6,4,5,-13,0,-10,5,5,8,12,11,8,9,9,-6,7,-4,8,-12,-10,4,-10,9,7,3,12,4,9,-7,10,-2,7,0,12,-2,-1,-6,0,-11]),t=new r.matrix_t(3,3,r.F32_t|r.C1_t),n=new r.matrix_t(32,32,r.U8_t|r.C1_t),o=function(e,n,o,i,l,h){var f=Math.cos(o),g=Math.sin(o);t.data[0]=f,t.data[1]=-g,t.data[2]=(-f+g)*h*.5+i,t.data[3]=g,t.data[4]=f,t.data[5]=(-g-f)*h*.5+l,r.imgproc.warp_affine(e,n,t,128)};return{describe:function(t,u,g,l){var h=0,f=0,q=0,p=0,c=0,d=0,v=0,_=0,m=(t.data,t.cols,t.rows,n.data),y=528,x=0;l.type&r.U8_t?l.resize(32,g,1):(l.type=r.U8_t,l.cols=32,l.rows=g,l.channel=1,l.allocate());var w=l.data,s=0;for(h=0;h<g;++h){for(q=u[h].x,p=u[h].y,c=u[h].angle,o(t,n,c,q,p,32),x=0,f=0;f<32;++f)_=(d=m[y+32*e[x+1]+e[x]])<(v=m[y+32*e[(x+=2)+1]+e[x]])|0,_|=((d=m[y+32*e[(x+=2)+1]+e[x]])<(v=m[y+32*e[(x+=2)+1]+e[x]]))<<1,_|=((d=m[y+32*e[(x+=2)+1]+e[x]])<(v=m[y+32*e[(x+=2)+1]+e[x]]))<<2,_|=((d=m[y+32*e[(x+=2)+1]+e[x]])<(v=m[y+32*e[(x+=2)+1]+e[x]]))<<3,_|=((d=m[y+32*e[(x+=2)+1]+e[x]])<(v=m[y+32*e[(x+=2)+1]+e[x]]))<<4,_|=((d=m[y+32*e[(x+=2)+1]+e[x]])<(v=m[y+32*e[(x+=2)+1]+e[x]]))<<5,_|=((d=m[y+32*e[(x+=2)+1]+e[x]])<(v=m[y+32*e[(x+=2)+1]+e[x]]))<<6,d=m[y+32*e[(x+=2)+1]+e[x]],v=m[y+32*e[(x+=2)+1]+e[x]],x+=2,_|=(d<v)<<7,w[s+f]=_;s+=32}}}}();b.orb=a}(r),function(b){var e,a=(e=r.imgproc.scharr_derivatives,{track:function(t,u,n,o,l,h,f,c,d,q){void 0===f&&(f=30),void 0===c&&(c=new Uint8Array(l)),void 0===d&&(d=.01),void 0===q&&(q=1e-4);var v=.5*(h-1),_=h*h|0,m=_<<1,y=t.data,x=u.data,g=y[0].data,w=x[0].data,M=y[0].cols,E=y[0].rows,S=0,T=0,A=r.cache.get_buffer(_<<2),s=r.cache.get_buffer(m<<2),R=r.cache.get_buffer(E*(M<<1)<<2),C=new r.matrix_t(M,E,r.S32C2_t,R.data),L=A.i32,P=s.i32,O=R.i32,k=0,I=0,N=0,D=0,B=0,F=0,U=0,j=0,V=0,z=0,G=0,H=0,W=0,X=0,Y=0,p=0,Z=0,J=0,K=0,Q=0,$=0,ee=0,te=0,re=0,ae=0,ie=0,ne=0,oe=0,se=0,le=0,he=0,ue=0,fe=16384,ce=1/(1<<20),de=0,ve=0,pe=0,_e=0,ge=0,me=0,ye=0,be=0,xe=0,we=0,Me=0;for(d*=d;Q<l;++Q)c[Q]=1;var Ee=t.levels-1|0;for(re=Ee;re>=0;--re)for(U=1/(1<<re),T=E>>re,k=(S=M>>re)<<1,g=y[re].data,w=x[re].data,ne=S-h|0,oe=T-h|0,e(y[re],C),ae=0;ae<l;++ae)if($=1+(Q=ae<<1),j=n[Q]*U,V=n[$]*U,re==Ee?(z=j,G=V):(z=2*o[Q],G=2*o[$]),o[Q]=z,o[$]=G,0==(ee=(p=0|(j-=v))<=0|p>=ne|(Z=0|(V-=v))<=0|Z>=oe)){for(_e=fe-(de=(1-(se=j-p))*(1-(le=V-Z))*fe+.5|0)-(ve=se*(1-le)*fe+.5|0)-(pe=(1-se)*le*fe+.5|0),be=0,xe=0,we=0,te=0;te<h;++te)for(N=(I=(te+Z)*S+p|0)<<1,B=(D=te*h|0)<<1,ee=0;ee<h;++ee,++I,++D,N+=2)ge=256+(ge=g[I]*de+g[I+1]*ve+g[I+S]*pe+g[I+S+1]*_e)>>9,me=8192+(me=O[N]*de+O[N+2]*ve+O[N+k]*pe+O[N+k+2]*_e)>>14,ye=8192+(ye=O[N+1]*de+O[N+3]*ve+O[N+k+1]*pe+O[N+k+3]*_e)>>14,L[D]=ge,P[B++]=me,P[B++]=ye,be+=me*me,xe+=me*ye,we+=ye*ye;if(Me=(be*=ce)*(we*=ce)-(xe*=ce)*xe,(we+be-Math.sqrt((be-we)*(be-we)+4*xe*xe))/m<q||Me<1.1920929e-7)0==re&&(c[ae]=0);else for(Me=1/Me,z-=v,G-=v,H=0,W=0,ie=0;ie<f;++ie){if(0!=(ee=(J=0|z)<=0|J>=ne|(K=0|G)<=0|K>=oe)){0==re&&(c[ae]=0);break}for(_e=fe-(de=(1-(se=z-J))*(1-(le=G-K))*fe+.5|0)-(ve=se*(1-le)*fe+.5|0)-(pe=(1-se)*le*fe+.5|0),he=0,ue=0,te=0;te<h;++te)for(F=(te+K)*S+J|0,B=(D=te*h|0)<<1,ee=0;ee<h;++ee,++F,++D)ge=256+(ge=w[F]*de+w[F+1]*ve+w[F+S]*pe+w[F+S+1]*_e)>>9,he+=(ge-=L[D])*P[B++],ue+=ge*P[B++];if(z+=X=(xe*(ue*=ce)-we*(he*=ce))*Me,G+=Y=(xe*he-be*ue)*Me,o[Q]=z+v,o[$]=G+v,X*X+Y*Y<=d)break;if(ie>0&&Math.abs(X+H)<.01&&Math.abs(Y+W)<.01){o[Q]-=.5*X,o[$]-=.5*Y;break}H=X,W=Y}}else 0==re&&(c[ae]=0);r.cache.put_buffer(A),r.cache.put_buffer(s),r.cache.put_buffer(R)}});b.optical_flow_lk=a}(r),function(b){var e,a=(e=function(e,t){var r=.25*e.width+.5|0;return t.x<=e.x+r&&t.x>=e.x-r&&t.y<=e.y+r&&t.y>=e.y-r&&t.width<=1.5*e.width+.5|0&&1.5*t.width+.5|0>=e.width},{edges_density:.07,detect_single_scale:function(e,t,r,q,n,o,l,h){var f,c,d,v,_,p,m,y,x,w,M,u,s,E,S,T,A,R,C,L,P,O,k,I,N,D=h.size[0]*l|0,B=h.size[1]*l|0,F=.5*l+1.5|0,U=F,j=n-D|0,V=o-B|0,z=n+1|0,G=1/(D*B),g=!0,H=0,W=D,X=B*z,Y=X+D,Z=D*B*255*this.edges_density|0,J=[];for(_=0;_<V;_+=U)for(H=_*z,v=0;v<j;v+=F,H+=F)if(p=e[H]-e[H+W]-e[H+X]+e[H+Y],q&&(q[H]-q[H+W]-q[H+X]+q[H+Y]<Z||p<20))v+=F,H+=F;else{for(p*=G,y=(m=(t[H]-t[H+W]-t[H+X]+t[H+Y])*G-p*p)>0?Math.sqrt(m):1,s=(x=h.complexClassifiers).length,g=!0,f=0;f<s;++f){for(T=(w=x[f]).threshold,E=(M=w.simpleClassifiers).length,A=0,c=0;c<E;++c){if(R=0,S=(L=(u=M[c]).features).length,1===u.tilted)for(d=0;d<S;++d)P=~~(v+(C=L[d])[0]*l)+~~(_+C[1]*l)*z,O=(I=~~(C[2]*l))*z,k=(N=~~(C[3]*l))*z,R+=(r[P]-r[P+I+O]-r[P-N+k]+r[P+I-N+O+k])*C[4];else for(d=0;d<S;++d)P=~~(v+(C=L[d])[0]*l)+~~(_+C[1]*l)*z,I=~~(C[2]*l),k=(N=~~(C[3]*l))*z,R+=(e[P]-e[P+I]-e[P+k]+e[P+k+I])*C[4];A+=R*G<u.threshold*y?u.left_val:u.right_val}if(A<T){g=!1;break}}g&&(J.push({x:v,y:_,width:D,height:B,neighbor:1,confidence:A}),v+=F,H+=F)}return J},detect_multi_scale:function(e,t,r,n,o,l,i,g,h){void 0===g&&(g=1.2),void 0===h&&(h=1);for(var f=i.size[0],c=i.size[1],d=[];h*f<o&&h*c<l;)d=d.concat(this.detect_single_scale(e,t,r,n,o,l,h,i)),h*=g;return d},group_rectangles:function(g,t){void 0===t&&(t=1);var r,n,q=g.length,o=[];for(r=0;r<q;++r)o[r]={parent:-1,element:g[r],rank:0};for(r=0;r<q;++r)if(o[r].element){for(var l=r;-1!=o[l].parent;)l=o[l].parent;for(n=0;n<q;++n)if(r!=n&&o[n].element&&e(o[r].element,o[n].element)){for(var s=n;-1!=o[s].parent;)s=o[s].parent;if(s!=l){o[l].rank>o[s].rank?o[s].parent=l:(o[l].parent=s,o[l].rank==o[s].rank&&o[s].rank++,l=s);for(var h,f=n;-1!=o[f].parent;)h=f,f=o[f].parent,o[h].parent=l;for(f=r;-1!=o[f].parent;)h=f,f=o[f].parent,o[h].parent=l}}}var c=[],d=0;for(r=0;r<q;r++){n=-1;var v=r;if(o[v].element){for(;-1!=o[v].parent;)v=o[v].parent;o[v].rank>=0&&(o[v].rank=~d++),n=~o[v].rank}c[r]=n}var _=[];for(r=0;r<d+1;++r)_[r]={neighbors:0,x:0,y:0,width:0,height:0,confidence:0};for(r=0;r<q;++r){var m=g[r],y=c[r];0==_[y].neighbors&&(_[y].confidence=m.confidence),++_[y].neighbors,_[y].x+=m.x,_[y].y+=m.y,_[y].width+=m.width,_[y].height+=m.height,_[y].confidence=Math.max(_[y].confidence,m.confidence)}var x=[];for(r=0;r<d;++r)(q=_[r].neighbors)>=t&&x.push({x:(2*_[r].x+q)/(2*q),y:(2*_[r].y+q)/(2*q),width:(2*_[r].width+q)/(2*q),height:(2*_[r].height+q)/(2*q),neighbors:_[r].neighbors,confidence:_[r].confidence});var p=[];for(q=x.length,r=0;r<q;++r){m=x[r];var w=!0;for(n=0;n<q;++n){var u=x[n],M=.25*u.width+.5|0;if(r!=n&&m.x>=u.x-M&&m.y>=u.y-M&&m.x+m.width<=u.x+u.width+M&&m.y+m.height<=u.y+u.height+M&&(u.neighbors>Math.max(3,m.neighbors)||m.neighbors<3)){w=!1;break}}w&&p.push(m)}return p}});b.haar=a}(r),function(a){var e,t,b=(e=function(e,t){var g=.25*e.width+.5|0;return t.x<=e.x+g&&t.x>=e.x-g&&t.y<=e.y+g&&t.y>=e.y-g&&t.width<=1.5*e.width+.5|0&&1.5*t.width+.5|0>=e.width},t=new r.pyramid_t(1),{interval:4,scale:1.1486,next:5,scale_to:1,prepare_cascade:function(g){for(var e=g.stage_classifier.length,t=0;t<e;t++)for(var r=g.stage_classifier[t].feature,n=g.stage_classifier[t].count,i=g.stage_classifier[t]._feature=new Array(n),o=0;o<n;o++)i[o]={size:r[o].size,px:new Array(r[o].size),pz:new Array(r[o].size),nx:new Array(r[o].size),nz:new Array(r[o].size)}},build_pyramid:function(e,n,s,o){void 0===o&&(o=4);var q=e.cols,l=e.rows,h=0,f=0,c=0,p=!1,d=e,g=e,v=r.U8_t|r.C1_t;this.interval=o,this.scale=Math.pow(2,1/(this.interval+1)),this.next=this.interval+1|0,this.scale_to=Math.log(Math.min(q/n,l/s))/Math.log(this.scale)|0;var _=4*(this.scale_to+2*this.next)|0;for(t.levels!=_&&(t.levels=_,t.data=new Array(_),p=!0,t.data[0]=e),h=1;h<=this.interval;++h)f=q/Math.pow(this.scale,h)|0,c=l/Math.pow(this.scale,h)|0,d=t.data[h<<2],(p||f!=d.cols||c!=d.rows)&&(t.data[h<<2]=new r.matrix_t(f,c,v),d=t.data[h<<2]),r.imgproc.resample(e,d,f,c);for(h=this.next;h<this.scale_to+2*this.next;++h)g=t.data[(h<<2)-(this.next<<2)],d=t.data[h<<2],f=g.cols>>1,c=g.rows>>1,(p||f!=d.cols||c!=d.rows)&&(t.data[h<<2]=new r.matrix_t(f,c,v),d=t.data[h<<2]),r.imgproc.pyrdown(g,d);for(h=2*this.next;h<this.scale_to+2*this.next;++h)f=(g=t.data[(h<<2)-(this.next<<2)]).cols>>1,c=g.rows>>1,d=t.data[1+(h<<2)],(p||f!=d.cols||c!=d.rows)&&(t.data[1+(h<<2)]=new r.matrix_t(f,c,v),d=t.data[1+(h<<2)]),r.imgproc.pyrdown(g,d,1,0),d=t.data[2+(h<<2)],(p||f!=d.cols||c!=d.rows)&&(t.data[2+(h<<2)]=new r.matrix_t(f,c,v),d=t.data[2+(h<<2)]),r.imgproc.pyrdown(g,d,0,1),d=t.data[3+(h<<2)],(p||f!=d.cols||c!=d.rows)&&(t.data[3+(h<<2)]=new r.matrix_t(f,c,v),d=t.data[3+(h<<2)]),r.imgproc.pyrdown(g,d,1,1);return t},detect:function(e,t){this.interval;var r,n,o,l,h,f=this.scale,c=this.next,d=this.scale_to,v=0,_=0,m=0,y=0,x=0,w=0,M=0,E=0,S=0,T=0,A=0,R=0,C=0,L=0,P=0,O=0,g=0,k=0,I=!0,N=!0,D=1,B=1,s=[0,1,0,1],F=[0,0,1,1],U=[],j=e.data,V=[],z=[0,0,0],G=[0,0,0],H=[0,0,0];for(v=0;v<d;v++){for(O=j[(P=v<<2)+(c<<3)].cols-(t.width>>2),g=j[P+(c<<3)].rows-(t.height>>2),G[0]=1*j[P].cols,G[1]=1*j[P+(c<<2)].cols,G[2]=1*j[P+(c<<3)].cols,H[0]=4*j[P].cols-4*O,H[1]=2*j[P+(c<<2)].cols-2*O,H[2]=1*j[P+(c<<3)].cols-1*O,E=t.stage_classifier.length,_=0;_<E;_++)for(o=t.stage_classifier[_].feature,n=t.stage_classifier[_]._feature,S=t.stage_classifier[_].count,m=0;m<S;m++)for(l=n[m],T=0|(h=o[m]).size,M=0;M<T;M++)l.px[M]=1*h.px[M]+h.py[M]*G[h.pz[M]],l.pz[M]=h.pz[M],l.nx[M]=1*h.nx[M]+h.ny[M]*G[h.nz[M]],l.nz[M]=h.nz[M];for(V[0]=j[P].data,V[1]=j[P+(c<<2)].data,M=0;M<4;M++)for(V[2]=j[P+(c<<3)+M].data,z[0]=2*s[M]+F[M]*(2*j[P].cols),z[1]=1*s[M]+F[M]*(1*j[P+(c<<2)].cols),z[2]=0,w=0;w<g;w++){for(x=0;x<O;x++){for(k=0,I=!0,E=t.stage_classifier.length,_=0;_<E;_++){for(k=0,r=t.stage_classifier[_].alpha,n=t.stage_classifier[_]._feature,S=t.stage_classifier[_].count,m=0;m<S;m++)if((R=V[(l=n[m]).pz[0]][z[l.pz[0]]+l.px[0]])<=(C=V[l.nz[0]][z[l.nz[0]]+l.nx[0]]))k+=r[m<<1];else{for(N=!0,T=l.size,L=1;L<T;L++){if(l.pz[L]>=0&&(A=V[l.pz[L]][z[l.pz[L]]+l.px[L]])<R){if(A<=C){N=!1;break}R=A}if(l.nz[L]>=0&&(y=V[l.nz[L]][z[l.nz[L]]+l.nx[L]])>C){if(R<=y){N=!1;break}C=y}}k+=N?r[1+(m<<1)]:r[m<<1]}if(k<t.stage_classifier[_].threshold){I=!1;break}}I&&(U.push({x:(4*x+2*s[M])*D,y:(4*w+2*F[M])*B,width:t.width*D,height:t.height*B,neighbor:1,confidence:k}),++x,z[0]+=4,z[1]+=2,z[2]+=1),z[0]+=4,z[1]+=2,z[2]+=1}z[0]+=H[0],z[1]+=H[1],z[2]+=H[2]}D*=f,B*=f}return U},group_rectangles:function(t,r){void 0===r&&(r=1);var n,o,l=t.length,s=[];for(n=0;n<l;++n)s[n]={parent:-1,element:t[n],rank:0};for(n=0;n<l;++n)if(s[n].element){for(var u=n;-1!=s[u].parent;)u=s[u].parent;for(o=0;o<l;++o)if(n!=o&&s[o].element&&e(s[n].element,s[o].element)){for(var h=o;-1!=s[h].parent;)h=s[h].parent;if(h!=u){s[u].rank>s[h].rank?s[h].parent=u:(s[u].parent=h,s[u].rank==s[h].rank&&s[h].rank++,u=h);for(var f,c=o;-1!=s[c].parent;)f=c,c=s[c].parent,s[f].parent=u;for(c=n;-1!=s[c].parent;)f=c,c=s[c].parent,s[f].parent=u}}}var d=[],p=0;for(n=0;n<l;n++){o=-1;var v=n;if(s[v].element){for(;-1!=s[v].parent;)v=s[v].parent;s[v].rank>=0&&(s[v].rank=~p++),o=~s[v].rank}d[n]=o}var _=[];for(n=0;n<p+1;++n)_[n]={neighbors:0,x:0,y:0,width:0,height:0,confidence:0};for(n=0;n<l;++n){var m=t[n],y=d[n];0==_[y].neighbors&&(_[y].confidence=m.confidence),++_[y].neighbors,_[y].x+=m.x,_[y].y+=m.y,_[y].width+=m.width,_[y].height+=m.height,_[y].confidence=Math.max(_[y].confidence,m.confidence)}var x=[];for(n=0;n<p;++n)(l=_[n].neighbors)>=r&&x.push({x:(2*_[n].x+l)/(2*l),y:(2*_[n].y+l)/(2*l),width:(2*_[n].width+l)/(2*l),height:(2*_[n].height+l)/(2*l),neighbors:_[n].neighbors,confidence:_[n].confidence});var q=[];for(l=x.length,n=0;n<l;++n){m=x[n];var w=!0;for(o=0;o<l;++o){var M=x[o],g=.25*M.width+.5|0;if(n!=o&&m.x>=M.x-g&&m.y>=M.y-g&&m.x+m.width<=M.x+M.width+g&&m.y+m.height<=M.y+M.height+g&&(M.neighbors>Math.max(3,m.neighbors)||m.neighbors<3)){w=!1;break}}w&&q.push(m)}return q}});a.bbf=b}(r),function(a){void 0===module.exports?t.jsfeat=a:module.exports=a}(r),r.haar.frontalface={complexClassifiers:[{simpleClassifiers:[{features:[[3,7,14,4,-1],[3,9,14,2,2]],threshold:.004014195874333382,right_val:.8378106951713562,left_val:.0337941907346249},{features:[[1,2,18,4,-1],[7,2,6,4,3]],threshold:.0151513395830989,right_val:.7488812208175659,left_val:.1514132022857666},{features:[[1,7,15,9,-1],[1,10,15,3,3]],threshold:.004210993181914091,right_val:.6374819874763489,left_val:.0900492817163467}],threshold:.822689414024353},{simpleClassifiers:[{features:[[5,6,2,6,-1],[5,9,2,3,2]],threshold:.0016227109590545297,right_val:.7110946178436279,left_val:.0693085864186287},{features:[[7,5,6,3,-1],[9,5,2,3,3]],threshold:.002290664939209819,right_val:.6668692231178284,left_val:.1795803010463715},{features:[[4,0,12,9,-1],[4,3,12,3,3]],threshold:.005002570804208517,right_val:.6554006934165955,left_val:.1693672984838486},{features:[[6,9,10,8,-1],[6,13,10,4,2]],threshold:.007965989410877228,right_val:.0914145186543465,left_val:.5866332054138184},{features:[[3,6,14,8,-1],[3,10,14,4,2]],threshold:-.003522701095789671,right_val:.6031895875930786,left_val:.1413166970014572},{features:[[14,1,6,10,-1],[14,1,3,10,2]],threshold:.0366676896810532,right_val:.7920318245887756,left_val:.3675672113895416},{features:[[7,8,5,12,-1],[7,12,5,4,3]],threshold:.009336147457361221,right_val:.2088509947061539,left_val:.6161385774612427},{features:[[1,1,18,3,-1],[7,1,6,3,3]],threshold:.008696131408214569,right_val:.6360273957252502,left_val:.2836230993270874},{features:[[1,8,17,2,-1],[1,9,17,1,2]],threshold:.0011488880263641477,right_val:.5800700783729553,left_val:.2223580926656723},{features:[[16,6,4,2,-1],[16,7,4,1,2]],threshold:-.002148468978703022,right_val:.5787054896354675,left_val:.2406464070081711},{features:[[5,17,2,2,-1],[5,18,2,1,2]],threshold:.002121906029060483,right_val:.136223703622818,left_val:.5559654831886292},{features:[[14,2,6,12,-1],[14,2,3,12,2]],threshold:-.0939491465687752,right_val:.4717740118503571,left_val:.8502737283706665},{features:[[4,0,4,12,-1],[4,0,2,6,2],[6,6,2,6,2]],threshold:.0013777789426967502,right_val:.2834529876708984,left_val:.5993673801422119},{features:[[2,11,18,8,-1],[8,11,6,8,3]],threshold:.0730631574988365,right_val:.7060034275054932,left_val:.4341886043548584},{features:[[5,7,10,2,-1],[5,8,10,1,2]],threshold:.00036767389974556863,right_val:.6051574945449829,left_val:.3027887940406799},{features:[[15,11,5,3,-1],[15,12,5,1,3]],threshold:-.0060479710809886456,right_val:.5675256848335266,left_val:.17984339594841}],threshold:6.956608772277832},{simpleClassifiers:[{features:[[5,3,10,9,-1],[5,6,10,3,3]],threshold:-.0165106896311045,right_val:.1424857974052429,left_val:.6644225120544434},{features:[[9,4,2,14,-1],[9,11,2,7,2]],threshold:.002705249935388565,right_val:.1288477033376694,left_val:.6325352191925049},{features:[[3,5,4,12,-1],[3,9,4,4,3]],threshold:.002806986914947629,right_val:.6193193197250366,left_val:.1240288019180298},{features:[[4,5,12,5,-1],[8,5,4,5,3]],threshold:-.0015402400167658925,right_val:.5670015811920166,left_val:.1432143002748489},{features:[[5,6,10,8,-1],[5,10,10,4,2]],threshold:-.0005638627917505801,right_val:.5905207991600037,left_val:.1657433062791824},{features:[[8,0,6,9,-1],[8,3,6,3,3]],threshold:.0019253729842603207,right_val:.5738824009895325,left_val:.2695507109165192},{features:[[9,12,1,8,-1],[9,16,1,4,2]],threshold:-.005021484103053808,right_val:.5782774090766907,left_val:.1893538981676102},{features:[[0,7,20,6,-1],[0,9,20,2,3]],threshold:.0026365420781075954,right_val:.5695425868034363,left_val:.2309329062700272},{features:[[7,0,6,17,-1],[9,0,2,17,3]],threshold:-.0015127769438549876,right_val:.5956642031669617,left_val:.2759602069854736},{features:[[9,0,6,4,-1],[11,0,2,4,3]],threshold:-.0101574398577213,right_val:.5522047281265259,left_val:.1732538044452667},{features:[[5,1,6,4,-1],[7,1,2,4,3]],threshold:-.011953660286963,right_val:.5559014081954956,left_val:.1339409947395325},{features:[[12,1,6,16,-1],[14,1,2,16,3]],threshold:.004885949194431305,right_val:.6188849210739136,left_val:.3628703951835632},{features:[[0,5,18,8,-1],[0,5,9,4,2],[9,9,9,4,2]],threshold:-.0801329165697098,right_val:.5475944876670837,left_val:.0912110507488251},{features:[[8,15,10,4,-1],[13,15,5,2,2],[8,17,5,2,2]],threshold:.0010643280111253262,right_val:.5711399912834167,left_val:.3715142905712128},{features:[[3,1,4,8,-1],[3,1,2,4,2],[5,5,2,4,2]],threshold:-.0013419450260698795,right_val:.331809788942337,left_val:.5953313708305359},{features:[[3,6,14,10,-1],[10,6,7,5,2],[3,11,7,5,2]],threshold:-.0546011403203011,right_val:.5602846145629883,left_val:.1844065934419632},{features:[[2,1,6,16,-1],[4,1,2,16,3]],threshold:.0029071690514683723,right_val:.6131715178489685,left_val:.3594244122505188},{features:[[0,18,20,2,-1],[0,19,20,1,2]],threshold:.0007471871795132756,right_val:.3459562957286835,left_val:.5994353294372559},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.004301380831748247,right_val:.6990845203399658,left_val:.4172652065753937},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.004501757211983204,right_val:.7801457047462463,left_val:.4509715139865875},{features:[[0,12,9,6,-1],[0,14,9,2,3]],threshold:.0241385009139776,right_val:.1319826990365982,left_val:.5438212752342224}],threshold:9.498542785644531},{simpleClassifiers:[{features:[[5,7,3,4,-1],[5,9,3,2,2]],threshold:.001921223010867834,right_val:.6199870705604553,left_val:.1415266990661621},{features:[[9,3,2,16,-1],[9,11,2,8,2]],threshold:-.00012748669541906565,right_val:.1884928941726685,left_val:.6191074252128601},{features:[[3,6,13,8,-1],[3,10,13,4,2]],threshold:.0005140993162058294,right_val:.5857927799224854,left_val:.1487396955490112},{features:[[12,3,8,2,-1],[12,3,4,2,2]],threshold:.004187860991805792,right_val:.6359239816665649,left_val:.2746909856796265},{features:[[8,8,4,12,-1],[8,12,4,4,3]],threshold:.005101571790874004,right_val:.2175628989934921,left_val:.5870851278305054},{features:[[11,3,8,6,-1],[15,3,4,3,2],[11,6,4,3,2]],threshold:-.002144844038411975,right_val:.2979590892791748,left_val:.5880944728851318},{features:[[7,1,6,19,-1],[9,1,2,19,3]],threshold:-.0028977119363844395,right_val:.5876647233963013,left_val:.2373327016830444},{features:[[9,0,6,4,-1],[11,0,2,4,3]],threshold:-.0216106791049242,right_val:.5194202065467834,left_val:.1220654994249344},{features:[[3,1,9,3,-1],[6,1,3,3,3]],threshold:-.004629931878298521,right_val:.5817409157752991,left_val:.263123095035553},{features:[[8,15,10,4,-1],[13,15,5,2,2],[8,17,5,2,2]],threshold:.000593937118537724,right_val:.5698544979095459,left_val:.363862007856369},{features:[[0,3,6,10,-1],[3,3,3,10,2]],threshold:.0538786612451077,right_val:.7559366226196289,left_val:.4303531050682068},{features:[[3,4,15,15,-1],[3,9,15,5,3]],threshold:.0018887349870055914,right_val:.561342716217041,left_val:.2122603058815002},{features:[[6,5,8,6,-1],[6,7,8,2,3]],threshold:-.0023635339457541704,right_val:.2642767131328583,left_val:.563184916973114},{features:[[4,4,12,10,-1],[10,4,6,5,2],[4,9,6,5,2]],threshold:.0240177996456623,right_val:.2751705944538117,left_val:.5797107815742493},{features:[[6,4,4,4,-1],[8,4,2,4,2]],threshold:.00020543030404951423,right_val:.575256884098053,left_val:.2705242037773132},{features:[[15,11,1,2,-1],[15,12,1,1,2]],threshold:.0008479019743390381,right_val:.2334876954555512,left_val:.5435624718666077},{features:[[3,11,2,2,-1],[3,12,2,1,2]],threshold:.0014091329649090767,right_val:.2063155025243759,left_val:.5319424867630005},{features:[[16,11,1,3,-1],[16,12,1,1,3]],threshold:.0014642629539594054,right_val:.3068861067295075,left_val:.5418980717658997},{features:[[3,15,6,4,-1],[3,15,3,2,2],[6,17,3,2,2]],threshold:.0016352549428120255,right_val:.6112868189811707,left_val:.3695372939109802},{features:[[6,7,8,2,-1],[6,8,8,1,2]],threshold:.0008317275205627084,right_val:.6025236248970032,left_val:.3565036952495575},{features:[[3,11,1,3,-1],[3,12,1,1,3]],threshold:-.0020998890977352858,right_val:.5362827181816101,left_val:.1913982033729553},{features:[[6,0,12,2,-1],[6,1,12,1,2]],threshold:-.0007421398186124861,right_val:.552931010723114,left_val:.3835555016994476},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.0032655049581080675,right_val:.7101895809173584,left_val:.4312896132469177},{features:[[7,15,6,2,-1],[7,16,6,1,2]],threshold:.0008913499186746776,right_val:.6391963958740234,left_val:.3984830975532532},{features:[[0,5,4,6,-1],[0,7,4,2,3]],threshold:-.0152841797098517,right_val:.5433713793754578,left_val:.2366732954978943},{features:[[4,12,12,2,-1],[8,12,4,2,3]],threshold:.004838141147047281,right_val:.3239189088344574,left_val:.5817500948905945},{features:[[6,3,1,9,-1],[6,6,1,3,3]],threshold:-.0009109317907132208,right_val:.2911868989467621,left_val:.5540593862533569},{features:[[10,17,3,2,-1],[11,17,1,2,3]],threshold:-.006127506028860807,right_val:.5196629166603088,left_val:.1775255054235458},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.00044576259097084403,right_val:.5533593893051147,left_val:.3024170100688934},{features:[[7,6,6,4,-1],[9,6,2,4,3]],threshold:.0226465407758951,right_val:.6975377202033997,left_val:.4414930939674377},{features:[[7,17,3,2,-1],[8,17,1,2,3]],threshold:-.0018804960418492556,right_val:.5497952103614807,left_val:.2791394889354706},{features:[[10,17,3,3,-1],[11,17,1,3,3]],threshold:.007088910788297653,right_val:.2385547012090683,left_val:.5263199210166931},{features:[[8,12,3,2,-1],[8,13,3,1,2]],threshold:.0017318050377070904,right_val:.6983600854873657,left_val:.4319379031658173},{features:[[9,3,6,2,-1],[11,3,2,2,3]],threshold:-.006848270073533058,right_val:.5390920042991638,left_val:.3082042932510376},{features:[[3,11,14,4,-1],[3,13,14,2,2]],threshold:-15062530110299122e-21,right_val:.3120366036891937,left_val:.552192211151123},{features:[[1,10,18,4,-1],[10,10,9,2,2],[1,12,9,2,2]],threshold:.0294755697250366,right_val:.1770603060722351,left_val:.5401322841644287},{features:[[0,10,3,3,-1],[0,11,3,1,3]],threshold:.008138732984662056,right_val:.121101900935173,left_val:.5178617835044861},{features:[[9,1,6,6,-1],[11,1,2,6,3]],threshold:.0209429506212473,right_val:.3311221897602081,left_val:.5290294289588928},{features:[[8,7,3,6,-1],[9,7,1,6,3]],threshold:-.009566552937030792,right_val:.4451968967914581,left_val:.7471994161605835}],threshold:18.4129695892334},{simpleClassifiers:[{features:[[1,0,18,9,-1],[1,3,18,3,3]],threshold:-.00028206960996612906,right_val:.6076732277870178,left_val:.2064086049795151},{features:[[12,10,2,6,-1],[12,13,2,3,2]],threshold:.00167906004935503,right_val:.1255383938550949,left_val:.5851997137069702},{features:[[0,5,19,8,-1],[0,9,19,4,2]],threshold:.0006982791237533092,right_val:.5728961229324341,left_val:.094018429517746},{features:[[7,0,6,9,-1],[9,0,2,9,3]],threshold:.0007895901217125356,right_val:.5694308876991272,left_val:.1781987994909287},{features:[[5,3,6,1,-1],[7,3,2,1,3]],threshold:-.002856049919500947,right_val:.5788664817810059,left_val:.1638399064540863},{features:[[11,3,6,1,-1],[13,3,2,1,3]],threshold:-.0038122469559311867,right_val:.5508564710617065,left_val:.2085440009832382},{features:[[5,10,4,6,-1],[5,13,4,3,2]],threshold:.0015896620461717248,right_val:.1857215017080307,left_val:.5702760815620422},{features:[[11,3,6,1,-1],[13,3,2,1,3]],threshold:.0100783398374915,right_val:.2189770042896271,left_val:.5116943120956421},{features:[[4,4,12,6,-1],[4,6,12,2,3]],threshold:-.0635263025760651,right_val:.4043813049793243,left_val:.7131379842758179},{features:[[15,12,2,6,-1],[15,14,2,2,3]],threshold:-.009103149175643921,right_val:.54639732837677,left_val:.2567181885242462},{features:[[9,3,2,2,-1],[10,3,1,2,2]],threshold:-.002403500024229288,right_val:.559097409248352,left_val:.1700665950775147},{features:[[9,3,3,1,-1],[10,3,1,1,3]],threshold:.001522636041045189,right_val:.2619054019451141,left_val:.5410556793212891},{features:[[1,1,4,14,-1],[3,1,2,14,2]],threshold:.0179974399507046,right_val:.6535220742225647,left_val:.3732436895370483},{features:[[9,0,4,4,-1],[11,0,2,2,2],[9,2,2,2,2]],threshold:-.00645381910726428,right_val:.5537446141242981,left_val:.2626481950283051},{features:[[7,5,1,14,-1],[7,12,1,7,2]],threshold:-.0118807600811124,right_val:.5544745922088623,left_val:.2003753930330277},{features:[[19,0,1,4,-1],[19,2,1,2,2]],threshold:.0012713660253211856,right_val:.303197592496872,left_val:.5591902732849121},{features:[[5,5,6,4,-1],[8,5,3,4,2]],threshold:.0011376109905540943,right_val:.5646508932113647,left_val:.2730407118797302},{features:[[9,18,3,2,-1],[10,18,1,2,3]],threshold:-.00426519988104701,right_val:.5461820960044861,left_val:.1405909061431885},{features:[[8,18,3,2,-1],[9,18,1,2,3]],threshold:-.0029602861031889915,right_val:.5459290146827698,left_val:.1795035004615784},{features:[[4,5,12,6,-1],[4,7,12,2,3]],threshold:-.008844822645187378,right_val:.280921995639801,left_val:.5736783146858215},{features:[[3,12,2,6,-1],[3,14,2,2,3]],threshold:-.006643068976700306,right_val:.5503826141357422,left_val:.2370675951242447},{features:[[10,8,2,12,-1],[10,12,2,4,3]],threshold:.003999780863523483,right_val:.3304282128810883,left_val:.5608199834823608},{features:[[7,18,3,2,-1],[8,18,1,2,3]],threshold:-.004122172016650438,right_val:.5378993153572083,left_val:.1640105992555618},{features:[[9,0,6,2,-1],[11,0,2,2,3]],threshold:.0156249096617103,right_val:.2288603931665421,left_val:.5227649211883545},{features:[[5,11,9,3,-1],[5,12,9,1,3]],threshold:-.0103564197197557,right_val:.4252927899360657,left_val:.7016193866729736},{features:[[9,0,6,2,-1],[11,0,2,2,3]],threshold:-.008796080946922302,right_val:.5355830192565918,left_val:.2767347097396851},{features:[[1,1,18,5,-1],[7,1,6,5,3]],threshold:.1622693985700607,right_val:.744257926940918,left_val:.434224009513855},{features:[[8,0,4,4,-1],[10,0,2,2,2],[8,2,2,2,2]],threshold:.0045542530715465546,right_val:.2582125067710877,left_val:.5726485848426819},{features:[[3,12,1,3,-1],[3,13,1,1,3]],threshold:-.002130920998752117,right_val:.5361018776893616,left_val:.2106848061084747},{features:[[8,14,5,3,-1],[8,15,5,1,3]],threshold:-.0132084200158715,right_val:.4552468061447144,left_val:.7593790888786316},{features:[[5,4,10,12,-1],[5,4,5,6,2],[10,10,5,6,2]],threshold:-.0659966766834259,right_val:.5344039797782898,left_val:.125247597694397},{features:[[9,6,9,12,-1],[9,10,9,4,3]],threshold:.007914265617728233,right_val:.5601043105125427,left_val:.3315384089946747},{features:[[2,2,12,14,-1],[2,2,6,7,2],[8,9,6,7,2]],threshold:.0208942797034979,right_val:.2768838107585907,left_val:.5506049990653992}],threshold:15.324139595031738},{simpleClassifiers:[{features:[[4,7,12,2,-1],[8,7,4,2,3]],threshold:.0011961159761995077,right_val:.6156241297721863,left_val:.1762690991163254},{features:[[7,4,6,4,-1],[7,6,6,2,2]],threshold:-.0018679830245673656,right_val:.1832399964332581,left_val:.6118106842041016},{features:[[4,5,11,8,-1],[4,9,11,4,2]],threshold:-.00019579799845814705,right_val:.5723816156387329,left_val:.0990442633628845},{features:[[3,10,16,4,-1],[3,12,16,2,2]],threshold:-.0008025565766729414,right_val:.2377282977104187,left_val:.5579879879951477},{features:[[0,0,16,2,-1],[0,1,16,1,2]],threshold:-.0024510810617357492,right_val:.5858935117721558,left_val:.2231457978487015},{features:[[7,5,6,2,-1],[9,5,2,2,3]],threshold:.0005036185029894114,right_val:.5794103741645813,left_val:.2653993964195252},{features:[[3,2,6,10,-1],[3,2,3,5,2],[6,7,3,5,2]],threshold:.0040293349884450436,right_val:.2484865039587021,left_val:.5803827047348022},{features:[[10,5,8,15,-1],[10,10,8,5,3]],threshold:-.0144517095759511,right_val:.5484204888343811,left_val:.1830351948738098},{features:[[3,14,8,6,-1],[3,14,4,3,2],[7,17,4,3,2]],threshold:.0020380979403853416,right_val:.6051092743873596,left_val:.3363558948040009},{features:[[14,2,2,2,-1],[14,3,2,1,2]],threshold:-.0016155190533027053,right_val:.5441246032714844,left_val:.2286642044782639},{features:[[1,10,7,6,-1],[1,13,7,3,2]],threshold:.0033458340913057327,right_val:.2392338067293167,left_val:.5625913143157959},{features:[[15,4,4,3,-1],[15,4,2,3,2]],threshold:.0016379579901695251,right_val:.5964621901512146,left_val:.3906993865966797},{features:[[2,9,14,6,-1],[2,9,7,3,2],[9,12,7,3,2]],threshold:.0302512105554342,right_val:.1575746983289719,left_val:.524848222732544},{features:[[5,7,10,4,-1],[5,9,10,2,2]],threshold:.037251990288496,right_val:.6748418807983398,left_val:.4194310903549194},{features:[[6,9,8,8,-1],[6,9,4,4,2],[10,13,4,4,2]],threshold:-.0251097902655602,right_val:.5473451018333435,left_val:.1882549971342087},{features:[[14,1,3,2,-1],[14,2,3,1,2]],threshold:-.005309905856847763,right_val:.5227110981941223,left_val:.133997306227684},{features:[[1,4,4,2,-1],[3,4,2,2,2]],threshold:.0012086479691788554,right_val:.6109635829925537,left_val:.3762088119983673},{features:[[11,10,2,8,-1],[11,14,2,4,2]],threshold:-.0219076797366142,right_val:.5404006838798523,left_val:.266314297914505},{features:[[0,0,5,3,-1],[0,1,5,1,3]],threshold:.0054116579703986645,right_val:.2232273072004318,left_val:.5363578796386719},{features:[[2,5,18,8,-1],[11,5,9,4,2],[2,9,9,4,2]],threshold:.069946326315403,right_val:.2453698068857193,left_val:.5358232855796814},{features:[[6,6,1,6,-1],[6,9,1,3,2]],threshold:.00034520021290518343,right_val:.5376930236816406,left_val:.2409671992063522},{features:[[19,1,1,3,-1],[19,2,1,1,3]],threshold:.0012627709656953812,right_val:.3155693113803864,left_val:.5425856709480286},{features:[[7,6,6,6,-1],[9,6,2,6,3]],threshold:.0227195098996162,right_val:.6597865223884583,left_val:.4158405959606171},{features:[[19,1,1,3,-1],[19,2,1,1,3]],threshold:-.001811100053600967,right_val:.5505244731903076,left_val:.2811253070831299},{features:[[3,13,2,3,-1],[3,14,2,1,3]],threshold:.0033469670452177525,right_val:.1891465038061142,left_val:.526002824306488},{features:[[8,4,8,12,-1],[12,4,4,6,2],[8,10,4,6,2]],threshold:.00040791751234792173,right_val:.3344210088253021,left_val:.5673509240150452},{features:[[5,2,6,3,-1],[7,2,2,3,3]],threshold:.0127347996458411,right_val:.2395612001419067,left_val:.5343592166900635},{features:[[6,1,9,10,-1],[6,6,9,5,2]],threshold:-.007311972789466381,right_val:.4022207856178284,left_val:.6010890007019043},{features:[[0,4,6,12,-1],[2,4,2,12,3]],threshold:-.0569487512111664,right_val:.4543190896511078,left_val:.8199151158332825},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:-.005011659115552902,right_val:.5357710719108582,left_val:.2200281023979187},{features:[[7,14,5,3,-1],[7,15,5,1,3]],threshold:.006033436860889196,right_val:.7181751132011414,left_val:.4413081109523773},{features:[[15,13,3,3,-1],[15,14,3,1,3]],threshold:.0039437441155314445,right_val:.2791733145713806,left_val:.547886073589325},{features:[[6,14,8,3,-1],[6,15,8,1,3]],threshold:-.0036591119132936,right_val:.3989723920822144,left_val:.635786771774292},{features:[[15,13,3,3,-1],[15,14,3,1,3]],threshold:-.0038456181064248085,right_val:.5300664901733398,left_val:.3493686020374298},{features:[[2,13,3,3,-1],[2,14,3,1,3]],threshold:-.007192626129835844,right_val:.5229672789573669,left_val:.1119614988565445},{features:[[4,7,12,12,-1],[10,7,6,6,2],[4,13,6,6,2]],threshold:-.0527989417314529,right_val:.54534512758255,left_val:.2387102991342545},{features:[[9,7,2,6,-1],[10,7,1,6,2]],threshold:-.007953766733407974,right_val:.4439376890659332,left_val:.7586917877197266},{features:[[8,9,5,2,-1],[8,10,5,1,2]],threshold:-.0027344180271029472,right_val:.5489321947097778,left_val:.2565476894378662},{features:[[8,6,3,4,-1],[9,6,1,4,3]],threshold:-.0018507939530536532,right_val:.4252474904060364,left_val:.6734347939491272},{features:[[9,6,2,8,-1],[9,10,2,4,2]],threshold:.0159189198166132,right_val:.2292661964893341,left_val:.548835277557373},{features:[[7,7,3,6,-1],[8,7,1,6,3]],threshold:-.0012687679845839739,right_val:.4022389948368073,left_val:.6104331016540527},{features:[[11,3,3,3,-1],[12,3,1,3,3]],threshold:.006288391072303057,right_val:.1536193042993546,left_val:.5310853123664856},{features:[[5,4,6,1,-1],[7,4,2,1,3]],threshold:-.0062259892001748085,right_val:.524160623550415,left_val:.1729111969470978},{features:[[5,6,10,3,-1],[5,7,10,1,3]],threshold:-.0121325999498367,right_val:.4325182139873505,left_val:.659775972366333}],threshold:21.010639190673828},{simpleClassifiers:[{features:[[7,3,6,9,-1],[7,6,6,3,3]],threshold:-.0039184908382594585,right_val:.1469330936670303,left_val:.6103435158729553},{features:[[6,7,9,1,-1],[9,7,3,1,3]],threshold:.0015971299726516008,right_val:.5896466970443726,left_val:.2632363140583038},{features:[[2,8,16,8,-1],[2,12,16,4,2]],threshold:.0177801102399826,right_val:.1760361939668655,left_val:.587287425994873},{features:[[14,6,2,6,-1],[14,9,2,3,2]],threshold:.0006533476989716291,right_val:.5596066117286682,left_val:.1567801982164383},{features:[[1,5,6,15,-1],[1,10,6,5,3]],threshold:-.00028353091329336166,right_val:.5732036232948303,left_val:.1913153976202011},{features:[[10,0,6,9,-1],[10,3,6,3,3]],threshold:.0016104689566418529,right_val:.5623080730438232,left_val:.2914913892745972},{features:[[6,6,7,14,-1],[6,13,7,7,2]],threshold:-.0977506190538406,right_val:.5648233294487,left_val:.194347694516182},{features:[[13,7,3,6,-1],[13,9,3,2,3]],threshold:.0005518235848285258,right_val:.5504639744758606,left_val:.3134616911411285},{features:[[1,8,15,4,-1],[6,8,5,4,3]],threshold:-.0128582203760743,right_val:.5760142803192139,left_val:.253648191690445},{features:[[11,2,3,10,-1],[11,7,3,5,2]],threshold:.004153023939579725,right_val:.36597740650177,left_val:.5767722129821777},{features:[[3,7,4,6,-1],[3,9,4,2,3]],threshold:.0017092459602281451,right_val:.5918939113616943,left_val:.2843191027641296},{features:[[13,3,6,10,-1],[15,3,2,10,3]],threshold:.007521735969930887,right_val:.6183109283447266,left_val:.4052427113056183},{features:[[5,7,8,10,-1],[5,7,4,5,2],[9,12,4,5,2]],threshold:.0022479810286313295,right_val:.3135401010513306,left_val:.578375518321991},{features:[[4,4,12,12,-1],[10,4,6,6,2],[4,10,6,6,2]],threshold:.0520062111318111,right_val:.1916636973619461,left_val:.5541312098503113},{features:[[1,4,6,9,-1],[3,4,2,9,3]],threshold:.0120855299755931,right_val:.6644591093063354,left_val:.4032655954360962},{features:[[11,3,2,5,-1],[11,3,1,5,2]],threshold:14687820112158079e-21,right_val:.5709382891654968,left_val:.3535977900028229},{features:[[7,3,2,5,-1],[8,3,1,5,2]],threshold:7139518857002258e-21,right_val:.5610269904136658,left_val:.3037444949150085},{features:[[10,14,2,3,-1],[10,15,2,1,3]],threshold:-.0046001640148460865,right_val:.4580326080322266,left_val:.7181087136268616},{features:[[5,12,6,2,-1],[8,12,3,2,2]],threshold:.0020058949012309313,right_val:.2953684031963348,left_val:.5621951818466187},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.004505027085542679,right_val:.7619017958641052,left_val:.4615387916564941},{features:[[4,11,12,6,-1],[4,14,12,3,2]],threshold:.0117468303069472,right_val:.1772529035806656,left_val:.5343837141990662},{features:[[11,11,5,9,-1],[11,14,5,3,3]],threshold:-.0583163388073444,right_val:.5340772271156311,left_val:.1686245948076248},{features:[[6,15,3,2,-1],[6,16,3,1,2]],threshold:.00023629379575140774,right_val:.6026803851127625,left_val:.3792056143283844},{features:[[11,0,3,5,-1],[12,0,1,5,3]],threshold:-.007815618067979813,right_val:.5324323773384094,left_val:.151286706328392},{features:[[5,5,6,7,-1],[8,5,3,7,2]],threshold:-.0108761601150036,right_val:.5319945216178894,left_val:.2081822007894516},{features:[[13,0,1,9,-1],[13,3,1,3,3]],threshold:-.0027745519764721394,right_val:.5210328102111816,left_val:.4098246991634369},{features:[[3,2,4,8,-1],[3,2,2,4,2],[5,6,2,4,2]],threshold:-.0007827638182789087,right_val:.3478842079639435,left_val:.5693274140357971},{features:[[13,12,4,6,-1],[13,14,4,2,3]],threshold:.0138704096898437,right_val:.2257698029279709,left_val:.5326750874519348},{features:[[3,12,4,6,-1],[3,14,4,2,3]],threshold:-.0236749108880758,right_val:.5200707912445068,left_val:.1551305055618286},{features:[[13,11,3,4,-1],[13,13,3,2,2]],threshold:-14879409718560055e-21,right_val:.3820176124572754,left_val:.5500566959381104},{features:[[4,4,4,3,-1],[4,5,4,1,3]],threshold:.00361906411126256,right_val:.6639748215675354,left_val:.4238683879375458},{features:[[7,5,11,8,-1],[7,9,11,4,2]],threshold:-.0198171101510525,right_val:.5382357835769653,left_val:.2150038033723831},{features:[[7,8,3,4,-1],[8,8,1,4,3]],threshold:-.0038154039066284895,right_val:.4215297102928162,left_val:.6675711274147034},{features:[[9,1,6,1,-1],[11,1,2,1,3]],threshold:-.0049775829538702965,right_val:.5386328101158142,left_val:.2267289012670517},{features:[[5,5,3,3,-1],[5,6,3,1,3]],threshold:.002244102070108056,right_val:.6855735778808594,left_val:.4308691024780273},{features:[[0,9,20,6,-1],[10,9,10,3,2],[0,12,10,3,2]],threshold:.0122824599966407,right_val:.3467479050159454,left_val:.5836614966392517},{features:[[8,6,3,5,-1],[9,6,1,5,3]],threshold:-.002854869933798909,right_val:.4311453998088837,left_val:.7016944885253906},{features:[[11,0,1,3,-1],[11,1,1,1,3]],threshold:-.0037875669077038765,right_val:.5224946141242981,left_val:.2895345091819763},{features:[[4,2,4,2,-1],[4,3,4,1,2]],threshold:-.0012201230274513364,right_val:.5481644868850708,left_val:.2975570857524872},{features:[[12,6,4,3,-1],[12,7,4,1,3]],threshold:.010160599835217,right_val:.8182697892189026,left_val:.4888817965984345},{features:[[5,0,6,4,-1],[7,0,2,4,3]],threshold:-.0161745697259903,right_val:.5239992737770081,left_val:.1481492966413498},{features:[[9,7,3,8,-1],[10,7,1,8,3]],threshold:.0192924607545137,right_val:.7378190755844116,left_val:.4786309897899628},{features:[[9,7,2,2,-1],[10,7,1,2,2]],threshold:-.003247953951358795,right_val:.4470643997192383,left_val:.7374222874641418},{features:[[6,7,14,4,-1],[13,7,7,2,2],[6,9,7,2,2]],threshold:-.009380348026752472,right_val:.5537996292114258,left_val:.3489154875278473},{features:[[0,5,3,6,-1],[0,7,3,2,3]],threshold:-.0126061299815774,right_val:.5315443277359009,left_val:.2379686981439591},{features:[[13,11,3,4,-1],[13,13,3,2,2]],threshold:-.0256219301372766,right_val:.5138769745826721,left_val:.1964688003063202},{features:[[4,11,3,4,-1],[4,13,3,2,2]],threshold:-7574149640277028e-20,right_val:.3365853130817413,left_val:.5590522885322571},{features:[[5,9,12,8,-1],[11,9,6,4,2],[5,13,6,4,2]],threshold:-.0892108827829361,right_val:.516263484954834,left_val:.0634046569466591},{features:[[9,12,1,3,-1],[9,13,1,1,3]],threshold:-.002767048077657819,right_val:.4490706026554108,left_val:.732346773147583},{features:[[10,15,2,4,-1],[10,17,2,2,2]],threshold:.0002715257869567722,right_val:.5985518097877502,left_val:.411483496427536}],threshold:23.918790817260742},{simpleClassifiers:[{features:[[7,7,6,1,-1],[9,7,2,1,3]],threshold:.001478621968999505,right_val:.6643316745758057,left_val:.266354501247406},{features:[[12,3,6,6,-1],[15,3,3,3,2],[12,6,3,3,2]],threshold:-.001874165958724916,right_val:.2518512904644013,left_val:.6143848896026611},{features:[[0,4,10,6,-1],[0,6,10,2,3]],threshold:-.001715100952424109,right_val:.2397463023662567,left_val:.5766341090202332},{features:[[8,3,8,14,-1],[12,3,4,7,2],[8,10,4,7,2]],threshold:-.0018939269939437509,right_val:.2529144883155823,left_val:.5682045817375183},{features:[[4,4,7,15,-1],[4,9,7,5,3]],threshold:-.005300605203956366,right_val:.5556079745292664,left_val:.1640675961971283},{features:[[12,2,6,8,-1],[15,2,3,4,2],[12,6,3,4,2]],threshold:-.0466625317931175,right_val:.4762830138206482,left_val:.6123154163360596},{features:[[2,2,6,8,-1],[2,2,3,4,2],[5,6,3,4,2]],threshold:-.000794313324149698,right_val:.2839404046535492,left_val:.5707858800888062},{features:[[2,13,18,7,-1],[8,13,6,7,3]],threshold:.0148916700854898,right_val:.6006367206573486,left_val:.4089672863483429},{features:[[4,3,8,14,-1],[4,3,4,7,2],[8,10,4,7,2]],threshold:-.0012046529445797205,right_val:.2705289125442505,left_val:.5712450742721558},{features:[[18,1,2,6,-1],[18,3,2,2,3]],threshold:.006061938125640154,right_val:.3262225985527039,left_val:.526250422000885},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.0025286648888140917,right_val:.4199256896972656,left_val:.6853830814361572},{features:[[18,1,2,6,-1],[18,3,2,2,3]],threshold:-.005901021882891655,right_val:.5434812903404236,left_val:.3266282081604004},{features:[[0,1,2,6,-1],[0,3,2,2,3]],threshold:.005670276004821062,right_val:.2319003939628601,left_val:.5468410849571228},{features:[[1,5,18,6,-1],[1,7,18,2,3]],threshold:-.003030410036444664,right_val:.2708238065242767,left_val:.557066798210144},{features:[[0,2,6,7,-1],[3,2,3,7,2]],threshold:.002980364952236414,right_val:.5890625715255737,left_val:.3700568974018097},{features:[[7,3,6,14,-1],[7,10,6,7,2]],threshold:-.0758405104279518,right_val:.5419948101043701,left_val:.2140070050954819},{features:[[3,7,13,10,-1],[3,12,13,5,2]],threshold:.0192625392228365,right_val:.2726590037345886,left_val:.5526772141456604},{features:[[11,15,2,2,-1],[11,16,2,1,2]],threshold:.00018888259364757687,right_val:.6017209887504578,left_val:.3958011865615845},{features:[[2,11,16,4,-1],[2,11,8,2,2],[10,13,8,2,2]],threshold:.0293695498257875,right_val:.1435758024454117,left_val:.5241373777389526},{features:[[13,7,6,4,-1],[16,7,3,2,2],[13,9,3,2,2]],threshold:.0010417619487270713,right_val:.5929983258247375,left_val:.3385409116744995},{features:[[6,10,3,9,-1],[6,13,3,3,3]],threshold:.0026125640142709017,right_val:.3021597862243652,left_val:.5485377907752991},{features:[[14,6,1,6,-1],[14,9,1,3,2]],threshold:.0009697746718302369,right_val:.553203284740448,left_val:.3375276029109955},{features:[[5,10,4,1,-1],[7,10,2,1,2]],threshold:.0005951265920884907,right_val:.3359399139881134,left_val:.563174307346344},{features:[[3,8,15,5,-1],[8,8,5,5,3]],threshold:-.1015655994415283,right_val:.5230425000190735,left_val:.0637350380420685},{features:[[1,6,5,4,-1],[1,8,5,2,2]],threshold:.0361566990613937,right_val:.1029528975486755,left_val:.5136963129043579},{features:[[3,1,17,6,-1],[3,3,17,2,3]],threshold:.003462414024397731,right_val:.5558289289474487,left_val:.3879320025444031},{features:[[6,7,8,2,-1],[10,7,4,2,2]],threshold:.0195549800992012,right_val:.1875859946012497,left_val:.5250086784362793},{features:[[9,7,3,2,-1],[10,7,1,2,3]],threshold:-.0023121440317481756,right_val:.4679641127586365,left_val:.667202889919281},{features:[[8,7,3,2,-1],[9,7,1,2,3]],threshold:-.001860528951510787,right_val:.4334670901298523,left_val:.7163379192352295},{features:[[8,9,4,2,-1],[8,10,4,1,2]],threshold:-.0009402636205777526,right_val:.5650203227996826,left_val:.302136093378067},{features:[[8,8,4,3,-1],[8,9,4,1,3]],threshold:-.005241833161562681,right_val:.5250256061553955,left_val:.1820009052753449},{features:[[9,5,6,4,-1],[9,5,3,4,2]],threshold:.00011729019752237946,right_val:.544597327709198,left_val:.3389188051223755},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.0011878840159624815,right_val:.6253563165664673,left_val:.4085349142551422},{features:[[4,7,12,6,-1],[10,7,6,3,2],[4,10,6,3,2]],threshold:-.0108813596889377,right_val:.5700082778930664,left_val:.3378399014472961},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.0017354859737679362,right_val:.6523038744926453,left_val:.4204635918140411},{features:[[9,7,3,3,-1],[9,8,3,1,3]],threshold:-.00651190523058176,right_val:.5428143739700317,left_val:.2595216035842896},{features:[[7,4,3,8,-1],[8,4,1,8,3]],threshold:-.0012136430013924837,right_val:.3977893888950348,left_val:.6165143847465515},{features:[[10,0,3,6,-1],[11,0,1,6,3]],threshold:-.010354240424931,right_val:.5219504833221436,left_val:.1628028005361557},{features:[[6,3,4,8,-1],[8,3,2,8,2]],threshold:.0005585883045569062,right_val:.5503574013710022,left_val:.3199650943279266},{features:[[14,3,6,13,-1],[14,3,3,13,2]],threshold:.0152996499091387,right_val:.6122388243675232,left_val:.4103994071483612},{features:[[8,13,3,6,-1],[8,16,3,3,2]],threshold:-.021588210016489,right_val:.519738495349884,left_val:.103491298854351},{features:[[14,3,6,13,-1],[14,3,3,13,2]],threshold:-.1283462941646576,right_val:.4893102943897247,left_val:.8493865132331848},{features:[[0,7,10,4,-1],[0,7,5,2,2],[5,9,5,2,2]],threshold:-.0022927189711481333,right_val:.5471575260162354,left_val:.3130157887935638},{features:[[14,3,6,13,-1],[14,3,3,13,2]],threshold:.0799151062965393,right_val:.6073989272117615,left_val:.4856320917606354},{features:[[0,3,6,13,-1],[3,3,3,13,2]],threshold:-.0794410929083824,right_val:.462453305721283,left_val:.8394674062728882},{features:[[9,1,4,1,-1],[9,1,2,1,2]],threshold:-.00528000108897686,right_val:.5306698083877563,left_val:.1881695985794067},{features:[[8,0,2,1,-1],[9,0,1,1,2]],threshold:.0010463109938427806,right_val:.2583065927028656,left_val:.5271229147911072},{features:[[10,16,4,4,-1],[12,16,2,2,2],[10,18,2,2,2]],threshold:.00026317298761568964,right_val:.5735440850257874,left_val:.4235304892063141},{features:[[9,6,2,3,-1],[10,6,1,3,2]],threshold:-.0036173160187900066,right_val:.4495444893836975,left_val:.6934396028518677},{features:[[4,5,12,2,-1],[8,5,4,2,3]],threshold:.0114218797534704,right_val:.4138193130493164,left_val:.590092122554779},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:-.0019963278900831938,right_val:.4327239990234375,left_val:.6466382741928101}],threshold:24.52787971496582},{simpleClassifiers:[{features:[[6,4,8,6,-1],[6,6,8,2,3]],threshold:-.00996912457048893,right_val:.2482212036848068,left_val:.6142324209213257},{features:[[9,5,2,12,-1],[9,11,2,6,2]],threshold:.0007307305932044983,right_val:.2321965992450714,left_val:.5704951882362366},{features:[[4,6,6,8,-1],[4,10,6,4,2]],threshold:.0006404530140571296,right_val:.5814933180809021,left_val:.2112251967191696},{features:[[12,2,8,5,-1],[12,2,4,5,2]],threshold:.004542401991784573,right_val:.586631178855896,left_val:.2950482070446014},{features:[[0,8,18,3,-1],[0,9,18,1,3]],threshold:9247744310414419e-20,right_val:.5791326761245728,left_val:.2990990877151489},{features:[[8,12,4,8,-1],[8,16,4,4,2]],threshold:-.008660314604640007,right_val:.5635542273521423,left_val:.2813029885292053},{features:[[0,2,8,5,-1],[4,2,4,5,2]],threshold:.008051581680774689,right_val:.6054757237434387,left_val:.3535369038581848},{features:[[13,11,3,4,-1],[13,13,3,2,2]],threshold:.00043835240649059415,right_val:.2731510996818543,left_val:.5596532225608826},{features:[[5,11,6,1,-1],[7,11,2,1,3]],threshold:-981689736363478e-19,right_val:.3638561069965363,left_val:.5978031754493713},{features:[[11,3,3,1,-1],[12,3,1,1,3]],threshold:-.0011298790341243148,right_val:.5432729125022888,left_val:.2755252122879028},{features:[[7,13,5,3,-1],[7,14,5,1,3]],threshold:.006435615010559559,right_val:.7069833278656006,left_val:.4305641949176788},{features:[[11,11,7,6,-1],[11,14,7,3,2]],threshold:-.0568293295800686,right_val:.5294997096061707,left_val:.2495242953300476},{features:[[2,11,7,6,-1],[2,14,7,3,2]],threshold:.004066816996783018,right_val:.2497723996639252,left_val:.5478553175926208},{features:[[12,14,2,6,-1],[12,16,2,2,3]],threshold:481647984997835e-19,right_val:.5706356167793274,left_val:.3938601016998291},{features:[[8,14,3,3,-1],[8,15,3,1,3]],threshold:.00617950176820159,right_val:.7394766807556152,left_val:.440760612487793},{features:[[11,0,3,5,-1],[12,0,1,5,3]],threshold:.006498575210571289,right_val:.2479152977466583,left_val:.5445243120193481},{features:[[6,1,4,9,-1],[8,1,2,9,2]],threshold:-.0010211090557277203,right_val:.5338971018791199,left_val:.2544766962528229},{features:[[10,3,6,1,-1],[12,3,2,1,3]],threshold:-.005424752831459045,right_val:.5324069261550903,left_val:.2718858122825623},{features:[[8,8,3,4,-1],[8,10,3,2,2]],threshold:-.0010559899965301156,right_val:.553450882434845,left_val:.3178288042545319},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0006646580877713859,right_val:.6558194160461426,left_val:.4284219145774841},{features:[[5,18,4,2,-1],[5,19,4,1,2]],threshold:-.00027524109464138746,right_val:.3810262978076935,left_val:.5902860760688782},{features:[[2,1,18,6,-1],[2,3,18,2,3]],threshold:.004229320213198662,right_val:.5709385871887207,left_val:.381648987531662},{features:[[6,0,3,2,-1],[7,0,1,2,3]],threshold:-.0032868210691958666,right_val:.5259544253349304,left_val:.1747743934392929},{features:[[13,8,6,2,-1],[16,8,3,1,2],[13,9,3,1,2]],threshold:.0001561187964398414,right_val:.5725612044334412,left_val:.3601722121238709},{features:[[6,10,3,6,-1],[6,13,3,3,2]],threshold:-7362138148891972e-21,right_val:.3044497072696686,left_val:.540185809135437},{features:[[0,13,20,4,-1],[10,13,10,2,2],[0,15,10,2,2]],threshold:-.014767250046134,right_val:.5573434829711914,left_val:.3220770061016083},{features:[[7,7,6,5,-1],[9,7,2,5,3]],threshold:.0244895908981562,right_val:.6518812775611877,left_val:.4301528036594391},{features:[[11,0,2,2,-1],[11,1,2,1,2]],threshold:-.000376520911231637,right_val:.5598236918449402,left_val:.356458306312561},{features:[[1,8,6,2,-1],[1,8,3,1,2],[4,9,3,1,2]],threshold:736576885174145e-20,right_val:.556189775466919,left_val:.3490782976150513},{features:[[0,2,20,2,-1],[10,2,10,1,2],[0,3,10,1,2]],threshold:-.0150999398902059,right_val:.5335299968719482,left_val:.1776272058486939},{features:[[7,14,5,3,-1],[7,15,5,1,3]],threshold:-.0038316650316119194,right_val:.4221394062042236,left_val:.6149687767028809},{features:[[7,13,6,6,-1],[10,13,3,3,2],[7,16,3,3,2]],threshold:.0169254001230001,right_val:.2166585028171539,left_val:.5413014888763428},{features:[[9,12,2,3,-1],[9,13,2,1,3]],threshold:-.003047785023227334,right_val:.4354617893695831,left_val:.6449490785598755},{features:[[16,11,1,6,-1],[16,13,1,2,3]],threshold:.003214058931916952,right_val:.3523217141628265,left_val:.5400155186653137},{features:[[3,11,1,6,-1],[3,13,1,2,3]],threshold:-.004002320114523172,right_val:.5338417291641235,left_val:.2774524092674255},{features:[[4,4,14,12,-1],[11,4,7,6,2],[4,10,7,6,2]],threshold:.0074182129465043545,right_val:.3702817857265472,left_val:.567673921585083},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:-.008876458741724491,right_val:.4583688974380493,left_val:.7749221920967102},{features:[[12,3,3,3,-1],[13,3,1,3,3]],threshold:.002731173997744918,right_val:.3996661007404327,left_val:.5338721871376038},{features:[[6,6,8,3,-1],[6,7,8,1,3]],threshold:-.0025082379579544067,right_val:.377749890089035,left_val:.5611963272094727},{features:[[12,3,3,3,-1],[13,3,1,3,3]],threshold:-.008054107427597046,right_val:.5179182887077332,left_val:.291522890329361},{features:[[3,1,4,10,-1],[3,1,2,5,2],[5,6,2,5,2]],threshold:-.0009793881326913834,right_val:.3700192868709564,left_val:.5536432862281799},{features:[[5,7,10,2,-1],[5,7,5,2,2]],threshold:-.005874590948224068,right_val:.5679376125335693,left_val:.3754391074180603},{features:[[8,7,3,3,-1],[9,7,1,3,3]],threshold:-.00449367193505168,right_val:.4480949938297272,left_val:.7019699215888977},{features:[[15,12,2,3,-1],[15,13,2,1,3]],threshold:-.00543892290443182,right_val:.5313386917114258,left_val:.2310364991426468},{features:[[7,8,3,4,-1],[8,8,1,4,3]],threshold:-.0007509464048780501,right_val:.4129343032836914,left_val:.5864868760108948},{features:[[13,4,1,12,-1],[13,10,1,6,2]],threshold:14528800420521293e-21,right_val:.5619621276855469,left_val:.3732407093048096},{features:[[4,5,12,12,-1],[4,5,6,6,2],[10,11,6,6,2]],threshold:.0407580696046352,right_val:.2720521986484528,left_val:.5312091112136841},{features:[[7,14,7,3,-1],[7,15,7,1,3]],threshold:.006650593131780624,right_val:.6693493723869324,left_val:.4710015952587128},{features:[[3,12,2,3,-1],[3,13,2,1,3]],threshold:.0045759351924061775,right_val:.1637275964021683,left_val:.5167819261550903},{features:[[3,2,14,2,-1],[10,2,7,1,2],[3,3,7,1,2]],threshold:.0065269311890006065,right_val:.2938531935214996,left_val:.5397608876228333},{features:[[0,1,3,10,-1],[1,1,1,10,3]],threshold:-.0136603796854615,right_val:.453220009803772,left_val:.7086488008499146},{features:[[9,0,6,5,-1],[11,0,2,5,3]],threshold:.0273588690906763,right_val:.3589231967926025,left_val:.5206481218338013},{features:[[5,7,6,2,-1],[8,7,3,2,2]],threshold:.0006219755159690976,right_val:.5441123247146606,left_val:.3507075905799866},{features:[[7,1,6,10,-1],[7,6,6,5,2]],threshold:-.0033077080734074116,right_val:.402489185333252,left_val:.5859522819519043},{features:[[1,1,18,3,-1],[7,1,6,3,3]],threshold:-.0106311095878482,right_val:.4422602951526642,left_val:.6743267178535461},{features:[[16,3,3,6,-1],[16,5,3,2,3]],threshold:.0194416493177414,right_val:.1797904968261719,left_val:.5282716155052185}],threshold:27.153350830078125},{simpleClassifiers:[{features:[[6,3,7,6,-1],[6,6,7,3,2]],threshold:-.005505216773599386,right_val:.2626559138298035,left_val:.5914731025695801},{features:[[4,7,12,2,-1],[8,7,4,2,3]],threshold:.001956227933987975,right_val:.5741627216339111,left_val:.2312581986188889},{features:[[0,4,17,10,-1],[0,9,17,5,2]],threshold:-.008892478421330452,right_val:.5626654028892517,left_val:.1656530052423477},{features:[[3,4,15,16,-1],[3,12,15,8,2]],threshold:.0836383774876595,right_val:.1957294940948486,left_val:.5423449873924255},{features:[[7,15,6,4,-1],[7,17,6,2,2]],threshold:.0012282270472496748,right_val:.5992503762245178,left_val:.3417904078960419},{features:[[15,2,4,9,-1],[15,2,2,9,2]],threshold:.0057629169896245,right_val:.6079903841018677,left_val:.3719581961631775},{features:[[2,3,3,2,-1],[2,4,3,1,2]],threshold:-.0016417410224676132,right_val:.5576915740966797,left_val:.2577486038208008},{features:[[13,6,7,9,-1],[13,9,7,3,3]],threshold:.0034113149158656597,right_val:.5514171719551086,left_val:.2950749099254608},{features:[[8,11,4,3,-1],[8,12,4,1,3]],threshold:-.0110693201422691,right_val:.4477078914642334,left_val:.7569358944892883},{features:[[0,2,20,6,-1],[10,2,10,3,2],[0,5,10,3,2]],threshold:.0348659716546535,right_val:.2669621109962463,left_val:.5583708882331848},{features:[[3,2,6,10,-1],[3,2,3,5,2],[6,7,3,5,2]],threshold:.0006570109981112182,right_val:.2988890111446381,left_val:.5627313256263733},{features:[[13,10,3,4,-1],[13,12,3,2,2]],threshold:-.0243391301482916,right_val:.5108863115310669,left_val:.2771185040473938},{features:[[4,10,3,4,-1],[4,12,3,2,2]],threshold:.0005943520227447152,right_val:.3120341897010803,left_val:.5580651760101318},{features:[[7,5,6,3,-1],[9,5,2,3,3]],threshold:.0022971509024500847,right_val:.5679075717926025,left_val:.3330250084400177},{features:[[7,6,6,8,-1],[7,10,6,4,2]],threshold:-.0037801829166710377,right_val:.5344808101654053,left_val:.2990534901618958},{features:[[0,11,20,6,-1],[0,14,20,3,2]],threshold:-.13420669734478,right_val:.5392568111419678,left_val:.1463858932256699},{features:[[4,13,4,6,-1],[4,13,2,3,2],[6,16,2,3,2]],threshold:.0007522454834543169,right_val:.5692734718322754,left_val:.3746953904628754},{features:[[6,0,8,12,-1],[10,0,4,6,2],[6,6,4,6,2]],threshold:-.040545541793108,right_val:.5484297871589661,left_val:.2754747867584229},{features:[[2,0,15,2,-1],[2,1,15,1,2]],threshold:.0012572970008477569,right_val:.5756075978279114,left_val:.3744584023952484},{features:[[9,12,2,3,-1],[9,13,2,1,3]],threshold:-.007424994837492704,right_val:.4728231132030487,left_val:.7513859272003174},{features:[[3,12,1,2,-1],[3,13,1,1,2]],threshold:.0005090812919661403,right_val:.2932321131229401,left_val:.540489673614502},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.001280845026485622,right_val:.4273349046707153,left_val:.6169779896736145},{features:[[7,3,3,1,-1],[8,3,1,1,3]],threshold:-.0018348860321566463,right_val:.5206472277641296,left_val:.2048496007919312},{features:[[17,7,3,6,-1],[17,9,3,2,3]],threshold:.0274848695844412,right_val:.1675522029399872,left_val:.5252984762191772},{features:[[7,2,3,2,-1],[8,2,1,2,3]],threshold:.0022372419480234385,right_val:.2777658104896545,left_val:.5267782807350159},{features:[[11,4,5,3,-1],[11,5,5,1,3]],threshold:-.008863529190421104,right_val:.4812048971652985,left_val:.69545578956604},{features:[[4,4,5,3,-1],[4,5,5,1,3]],threshold:.004175397101789713,right_val:.6349195837974548,left_val:.4291887879371643},{features:[[19,3,1,2,-1],[19,4,1,1,2]],threshold:-.0017098189564421773,right_val:.5361248850822449,left_val:.2930536866188049},{features:[[5,5,4,3,-1],[5,6,4,1,3]],threshold:.006532854866236448,right_val:.7409694194793701,left_val:.4495325088500977},{features:[[17,7,3,6,-1],[17,9,3,2,3]],threshold:-.009537290781736374,right_val:.5416501760482788,left_val:.3149119913578033},{features:[[0,7,3,6,-1],[0,9,3,2,3]],threshold:.0253109894692898,right_val:.1311707943677902,left_val:.5121892094612122},{features:[[14,2,6,9,-1],[14,5,6,3,3]],threshold:.0364609695971012,right_val:.2591339945793152,left_val:.5175911784172058},{features:[[0,4,5,6,-1],[0,6,5,2,3]],threshold:.0208543296903372,right_val:.1582316011190414,left_val:.5137140154838562},{features:[[10,5,6,2,-1],[12,5,2,2,3]],threshold:-.0008720774785615504,right_val:.439897894859314,left_val:.5574309825897217},{features:[[4,5,6,2,-1],[6,5,2,2,3]],threshold:-15227000403683633e-21,right_val:.3708069920539856,left_val:.5548940896987915},{features:[[8,1,4,6,-1],[8,3,4,2,3]],threshold:-.0008431650931015611,right_val:.5554211139678955,left_val:.3387419879436493},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.0036037859972566366,right_val:.3411171138286591,left_val:.5358061790466309},{features:[[6,6,8,3,-1],[6,7,8,1,3]],threshold:-.006805789191275835,right_val:.4345862865447998,left_val:.6125202775001526},{features:[[0,1,5,9,-1],[0,4,5,3,3]],threshold:-.0470216609537601,right_val:.519373893737793,left_val:.2358165979385376},{features:[[16,0,4,15,-1],[16,0,2,15,2]],threshold:-.0369541086256504,right_val:.4760943949222565,left_val:.7323111295700073},{features:[[1,10,3,2,-1],[1,11,3,1,2]],threshold:.0010439479956403375,right_val:.3411330878734589,left_val:.5419455170631409},{features:[[14,4,1,10,-1],[14,9,1,5,2]],threshold:-.00021050689974799752,right_val:.5554947257041931,left_val:.2821694016456604},{features:[[0,1,4,12,-1],[2,1,2,12,2]],threshold:-.0808315873146057,right_val:.4697434902191162,left_val:.9129930138587952},{features:[[11,11,4,2,-1],[11,11,2,2,2]],threshold:-.0003657905908767134,right_val:.3978292942047119,left_val:.6022670269012451},{features:[[5,11,4,2,-1],[7,11,2,2,2]],threshold:-.00012545920617412776,right_val:.384553998708725,left_val:.5613213181495667},{features:[[3,8,15,5,-1],[8,8,5,5,3]],threshold:-.0687864869832993,right_val:.5300496816635132,left_val:.2261611968278885},{features:[[0,0,6,10,-1],[3,0,3,10,2]],threshold:.0124157899990678,right_val:.5828812122344971,left_val:.4075691998004913},{features:[[11,4,3,2,-1],[12,4,1,2,3]],threshold:-.004717481788247824,right_val:.5267757773399353,left_val:.2827253937721252},{features:[[8,12,3,8,-1],[8,16,3,4,2]],threshold:.0381368584930897,right_val:.1023615971207619,left_val:.5074741244316101},{features:[[8,14,5,3,-1],[8,15,5,1,3]],threshold:-.0028168049175292253,right_val:.4359692931175232,left_val:.6169006824493408},{features:[[7,14,4,3,-1],[7,15,4,1,3]],threshold:.008130360394716263,right_val:.76060950756073,left_val:.4524433016777039},{features:[[11,4,3,2,-1],[12,4,1,2,3]],threshold:.006005601957440376,right_val:.185971200466156,left_val:.5240408778190613},{features:[[3,15,14,4,-1],[3,15,7,2,2],[10,17,7,2,2]],threshold:.0191393196582794,right_val:.2332071959972382,left_val:.5209379196166992},{features:[[2,2,16,4,-1],[10,2,8,2,2],[2,4,8,2,2]],threshold:.0164457596838474,right_val:.3264234960079193,left_val:.5450702905654907},{features:[[0,8,6,12,-1],[3,8,3,12,2]],threshold:-.0373568907380104,right_val:.4533241987228394,left_val:.6999046802520752},{features:[[5,7,10,2,-1],[5,7,5,2,2]],threshold:-.0197279006242752,right_val:.54128098487854,left_val:.2653664946556091},{features:[[9,7,2,5,-1],[10,7,1,5,2]],threshold:.0066972579807043076,right_val:.7138652205467224,left_val:.4480566084384918},{features:[[13,7,6,4,-1],[16,7,3,2,2],[13,9,3,2,2]],threshold:.0007445752853527665,right_val:.5471320152282715,left_val:.4231350123882294},{features:[[0,13,8,2,-1],[0,14,8,1,2]],threshold:.0011790640419349074,right_val:.3130455017089844,left_val:.5341702103614807},{features:[[13,7,6,4,-1],[16,7,3,2,2],[13,9,3,2,2]],threshold:.0349806100130081,right_val:.343053013086319,left_val:.5118659734725952},{features:[[1,7,6,4,-1],[1,7,3,2,2],[4,9,3,2,2]],threshold:.0005685979267582297,right_val:.5468639731407166,left_val:.3532187044620514},{features:[[12,6,1,12,-1],[12,12,1,6,2]],threshold:-.0113406497985125,right_val:.5348700881004333,left_val:.2842353880405426},{features:[[9,5,2,6,-1],[10,5,1,6,2]],threshold:-.00662281084805727,right_val:.4492664933204651,left_val:.6883640289306641},{features:[[14,12,2,3,-1],[14,13,2,1,3]],threshold:-.008016033098101616,right_val:.5224308967590332,left_val:.1709893941879273},{features:[[4,12,2,3,-1],[4,13,2,1,3]],threshold:.0014206819469109178,right_val:.299338310956955,left_val:.5290846228599548},{features:[[8,12,4,3,-1],[8,13,4,1,3]],threshold:-.002780171111226082,right_val:.4460499882698059,left_val:.6498854160308838},{features:[[5,2,2,4,-1],[5,2,1,2,2],[6,4,1,2,2]],threshold:-.0014747589593753219,right_val:.5388113260269165,left_val:.3260438144207001},{features:[[5,5,11,3,-1],[5,6,11,1,3]],threshold:-.0238303393125534,right_val:.4801219999790192,left_val:.7528941035270691},{features:[[7,6,4,12,-1],[7,12,4,6,2]],threshold:.00693697901442647,right_val:.3261427879333496,left_val:.5335165858268738},{features:[[12,13,8,5,-1],[12,13,4,5,2]],threshold:.008280625566840172,right_val:.5737829804420471,left_val:.458039402961731},{features:[[7,6,1,12,-1],[7,12,1,6,2]],threshold:-.0104395002126694,right_val:.5233827829360962,left_val:.2592320144176483}],threshold:34.55411148071289},{simpleClassifiers:[{features:[[1,2,6,3,-1],[4,2,3,3,2]],threshold:.0072006587870419025,right_val:.6849808096885681,left_val:.325888603925705},{features:[[9,5,6,10,-1],[12,5,3,5,2],[9,10,3,5,2]],threshold:-.002859358908608556,right_val:.2537829875946045,left_val:.5838881134986877},{features:[[5,5,8,12,-1],[5,5,4,6,2],[9,11,4,6,2]],threshold:.0006858052802272141,right_val:.2812424004077911,left_val:.5708081722259521},{features:[[0,7,20,6,-1],[0,9,20,2,3]],threshold:.007958019152283669,right_val:.5544260740280151,left_val:.2501051127910614},{features:[[4,2,2,2,-1],[4,3,2,1,2]],threshold:-.0012124150525778532,right_val:.5433350205421448,left_val:.2385368049144745},{features:[[4,18,12,2,-1],[8,18,4,2,3]],threshold:.00794261321425438,right_val:.6220757961273193,left_val:.3955070972442627},{features:[[7,4,4,16,-1],[7,12,4,8,2]],threshold:.0024630590341985226,right_val:.2992357909679413,left_val:.5639708042144775},{features:[[7,6,7,8,-1],[7,10,7,4,2]],threshold:-.006039659958332777,right_val:.541167676448822,left_val:.218651294708252},{features:[[6,3,3,1,-1],[7,3,1,1,3]],threshold:-.0012988339876756072,right_val:.5364584922790527,left_val:.23507060110569},{features:[[11,15,2,4,-1],[11,17,2,2,2]],threshold:.00022299369447864592,right_val:.572960615158081,left_val:.380411297082901},{features:[[3,5,4,8,-1],[3,9,4,4,2]],threshold:.0014654280385002494,right_val:.5258268713951111,left_val:.2510167956352234},{features:[[7,1,6,12,-1],[7,7,6,6,2]],threshold:-.0008121004211716354,right_val:.3851158916950226,left_val:.5992823839187622},{features:[[4,6,6,2,-1],[6,6,2,2,3]],threshold:-.0013836020370945334,right_val:.3636586964130402,left_val:.5681396126747131},{features:[[16,4,4,6,-1],[16,6,4,2,3]],threshold:-.0279364492744207,right_val:.5377560257911682,left_val:.1491317003965378},{features:[[3,3,5,2,-1],[3,4,5,1,2]],threshold:-.0004691955109592527,right_val:.5572484731674194,left_val:.3692429959774017},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.004982965998351574,right_val:.4532504081726074,left_val:.6758509278297424},{features:[[2,16,4,2,-1],[2,17,4,1,2]],threshold:.001881530974060297,right_val:.2932539880275726,left_val:.5368022918701172},{features:[[7,13,6,6,-1],[10,13,3,3,2],[7,16,3,3,2]],threshold:-.0190675500780344,right_val:.5330067276954651,left_val:.1649377048015595},{features:[[7,0,3,4,-1],[8,0,1,4,3]],threshold:-.0046906559728085995,right_val:.5119361877441406,left_val:.1963925957679749},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:.005977713968604803,right_val:.7008398175239563,left_val:.467117190361023},{features:[[0,4,4,6,-1],[0,6,4,2,3]],threshold:-.0333031304180622,right_val:.5104162096977234,left_val:.1155416965484619},{features:[[5,6,12,3,-1],[9,6,4,3,3]],threshold:.0907441079616547,right_val:.1306173056364059,left_val:.5149660110473633},{features:[[7,6,6,14,-1],[9,6,2,14,3]],threshold:.0009355589863844216,right_val:.543985903263092,left_val:.3605481088161469},{features:[[9,7,3,3,-1],[10,7,1,3,3]],threshold:.0149016501381993,right_val:.7687569856643677,left_val:.4886212050914764},{features:[[6,12,2,4,-1],[6,14,2,2,2]],threshold:.0006159411859698594,right_val:.3240939080715179,left_val:.5356813073158264},{features:[[10,12,7,6,-1],[10,14,7,2,3]],threshold:-.0506709888577461,right_val:.5230404138565063,left_val:.1848621964454651},{features:[[1,0,15,2,-1],[1,1,15,1,2]],threshold:.0006866574985906482,right_val:.5517945885658264,left_val:.3840579986572266},{features:[[14,0,6,6,-1],[14,0,3,6,2]],threshold:.008371243253350258,right_val:.6131753921508789,left_val:.4288564026355743},{features:[[5,3,3,1,-1],[6,3,1,1,3]],threshold:-.0012953069526702166,right_val:.528073787689209,left_val:.2913674116134644},{features:[[14,0,6,6,-1],[14,0,3,6,2]],threshold:-.0419416800141335,right_val:.4856030941009522,left_val:.7554799914360046},{features:[[0,3,20,10,-1],[0,8,20,5,2]],threshold:-.0235293805599213,right_val:.5256081223487854,left_val:.2838279902935028},{features:[[14,0,6,6,-1],[14,0,3,6,2]],threshold:.0408574491739273,right_val:.6277297139167786,left_val:.4870935082435608},{features:[[0,0,6,6,-1],[3,0,3,6,2]],threshold:-.0254068691283464,right_val:.4575029015541077,left_val:.7099707722663879},{features:[[19,15,1,2,-1],[19,16,1,1,2]],threshold:-.00041415440500713885,right_val:.5469412207603455,left_val:.4030886888504028},{features:[[0,2,4,8,-1],[2,2,2,8,2]],threshold:.0218241196125746,right_val:.6768701076507568,left_val:.4502024054527283},{features:[[2,1,18,4,-1],[11,1,9,2,2],[2,3,9,2,2]],threshold:.0141140399500728,right_val:.3791700005531311,left_val:.5442860722541809},{features:[[8,12,1,2,-1],[8,13,1,1,2]],threshold:6721459067193791e-20,right_val:.5873476266860962,left_val:.4200463891029358},{features:[[5,2,10,6,-1],[10,2,5,3,2],[5,5,5,3,2]],threshold:-.00794176384806633,right_val:.5585265755653381,left_val:.3792561888694763},{features:[[9,7,2,4,-1],[10,7,1,4,2]],threshold:-.00721444096416235,right_val:.4603548943996429,left_val:.7253103852272034},{features:[[9,7,3,3,-1],[10,7,1,3,3]],threshold:.002581733977422118,right_val:.5900238752365112,left_val:.4693301916122437},{features:[[4,5,12,8,-1],[8,5,4,8,3]],threshold:.1340931951999664,right_val:.1808844953775406,left_val:.5149213075637817},{features:[[15,15,4,3,-1],[15,16,4,1,3]],threshold:.0022962710354477167,right_val:.3717867136001587,left_val:.5399743914604187},{features:[[8,18,3,1,-1],[9,18,1,1,3]],threshold:-.002157584996894002,right_val:.5148863792419434,left_val:.2408495992422104},{features:[[9,13,4,3,-1],[9,14,4,1,3]],threshold:-.004919618833810091,right_val:.4738740026950836,left_val:.6573588252067566},{features:[[7,13,4,3,-1],[7,14,4,1,3]],threshold:.0016267469618469477,right_val:.6303114295005798,left_val:.4192821979522705},{features:[[19,15,1,2,-1],[19,16,1,1,2]],threshold:.00033413388882763684,right_val:.3702101111412048,left_val:.5540298223495483},{features:[[0,15,8,4,-1],[0,17,8,2,2]],threshold:-.0266980808228254,right_val:.5101410746574402,left_val:.1710917949676514},{features:[[9,3,6,4,-1],[11,3,2,4,3]],threshold:-.0305618792772293,right_val:.5168793797492981,left_val:.1904218047857285},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.002851154888048768,right_val:.6313853859901428,left_val:.4447506964206696},{features:[[3,14,14,6,-1],[3,16,14,2,3]],threshold:-.0362114794552326,right_val:.5377349257469177,left_val:.2490727007389069},{features:[[6,3,6,6,-1],[6,6,6,3,2]],threshold:-.002411518944427371,right_val:.3664236962795258,left_val:.5381243228912354},{features:[[5,11,10,6,-1],[5,14,10,3,2]],threshold:-.0007725320174358785,right_val:.3541550040245056,left_val:.5530232191085815},{features:[[3,10,3,4,-1],[4,10,1,4,3]],threshold:.0002948172914329916,right_val:.5667243003845215,left_val:.4132699072360992},{features:[[13,9,2,2,-1],[13,9,1,2,2]],threshold:-.006233456078916788,right_val:.5198668837547302,left_val:.0987872332334518},{features:[[5,3,6,4,-1],[7,3,2,4,3]],threshold:-.0262747295200825,right_val:.5028107166290283,left_val:.0911274924874306},{features:[[9,7,3,3,-1],[10,7,1,3,3]],threshold:.005321226082742214,right_val:.6222720742225647,left_val:.4726648926734924},{features:[[2,12,2,3,-1],[2,13,2,1,3]],threshold:-.004112905822694302,right_val:.5137804746627808,left_val:.2157457023859024},{features:[[9,8,3,12,-1],[9,12,3,4,3]],threshold:.0032457809429615736,right_val:.3721776902675629,left_val:.5410770773887634},{features:[[3,14,4,6,-1],[3,14,2,3,2],[5,17,2,3,2]],threshold:-.0163597092032433,right_val:.4685291945934296,left_val:.7787874937057495},{features:[[16,15,2,2,-1],[16,16,2,1,2]],threshold:.00032166109303943813,right_val:.4240373969078064,left_val:.5478987097740173},{features:[[2,15,2,2,-1],[2,16,2,1,2]],threshold:.000644524407107383,right_val:.3501324951648712,left_val:.5330560803413391},{features:[[8,12,4,3,-1],[8,13,4,1,3]],threshold:-.0078909732401371,right_val:.4726569056510925,left_val:.6923521161079407},{features:[[0,7,20,1,-1],[10,7,10,1,2]],threshold:.048336211591959,right_val:.0757492035627365,left_val:.50559002161026},{features:[[7,6,8,3,-1],[7,6,4,3,2]],threshold:-.000751781277358532,right_val:.5538573861122131,left_val:.3783741891384125},{features:[[5,7,8,2,-1],[9,7,4,2,2]],threshold:-.002495391061529517,right_val:.5359612107276917,left_val:.3081651031970978},{features:[[9,7,3,5,-1],[10,7,1,5,3]],threshold:-.0022385010961443186,right_val:.4649342894554138,left_val:.663395881652832},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:-.0017988430336117744,right_val:.4347187876701355,left_val:.6596844792366028},{features:[[11,1,3,5,-1],[12,1,1,5,3]],threshold:.008786091580986977,right_val:.2315579950809479,left_val:.523183286190033},{features:[[6,2,3,6,-1],[7,2,1,6,3]],threshold:.003671538084745407,right_val:.2977376878261566,left_val:.520425021648407},{features:[[14,14,6,5,-1],[14,14,3,5,2]],threshold:-.0353364497423172,right_val:.4861505031585693,left_val:.7238878011703491},{features:[[9,8,2,2,-1],[9,9,2,1,2]],threshold:-.0006918924045749009,right_val:.5229824781417847,left_val:.3105022013187408},{features:[[10,7,1,3,-1],[10,8,1,1,3]],threshold:-.003394610946998,right_val:.5210173726081848,left_val:.3138968050479889},{features:[[6,6,2,2,-1],[6,6,1,1,2],[7,7,1,1,2]],threshold:.0009856928372755647,right_val:.6585097908973694,left_val:.4536580145359039},{features:[[2,11,18,4,-1],[11,11,9,2,2],[2,13,9,2,2]],threshold:-.0501631014049053,right_val:.5198916792869568,left_val:.1804454028606415},{features:[[6,6,2,2,-1],[6,6,1,1,2],[7,7,1,1,2]],threshold:-.0022367259953171015,right_val:.4651359021663666,left_val:.7255702018737793},{features:[[0,15,20,2,-1],[0,16,20,1,2]],threshold:.0007432628772221506,right_val:.5898545980453491,left_val:.4412921071052551},{features:[[4,14,2,3,-1],[4,15,2,1,3]],threshold:-.0009348518215119839,right_val:.5366017818450928,left_val:.3500052988529205},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.0174979399889708,right_val:.8315284848213196,left_val:.4912194907665253},{features:[[8,7,2,3,-1],[8,8,2,1,3]],threshold:-.0015200000489130616,right_val:.537056028842926,left_val:.3570275902748108},{features:[[9,10,2,3,-1],[9,11,2,1,3]],threshold:.0007800394087098539,right_val:.5967335104942322,left_val:.4353772103786469}],threshold:39.1072883605957},{simpleClassifiers:[{features:[[5,4,10,4,-1],[5,6,10,2,2]],threshold:-.00999455526471138,right_val:.3054533004760742,left_val:.6162583231925964},{features:[[9,7,6,4,-1],[12,7,3,2,2],[9,9,3,2,2]],threshold:-.001108522992581129,right_val:.3155578076839447,left_val:.5818294882774353},{features:[[4,7,3,6,-1],[4,9,3,2,3]],threshold:.001036438043229282,right_val:.5692911744117737,left_val:.2552052140235901},{features:[[11,15,4,4,-1],[13,15,2,2,2],[11,17,2,2,2]],threshold:.000682113110087812,right_val:.5934931039810181,left_val:.3685089945793152},{features:[[7,8,4,2,-1],[7,9,4,1,2]],threshold:-.0006805734010413289,right_val:.5474792122840881,left_val:.2332392036914825},{features:[[13,1,4,3,-1],[13,1,2,3,2]],threshold:.0002606878988444805,right_val:.5667545795440674,left_val:.325745701789856},{features:[[5,15,4,4,-1],[5,15,2,2,2],[7,17,2,2,2]],threshold:.0005160737200640142,right_val:.5845472812652588,left_val:.3744716942310333},{features:[[9,5,4,7,-1],[9,5,2,7,2]],threshold:.0008500752155669034,right_val:.5522807240486145,left_val:.3420371115207672},{features:[[5,6,8,3,-1],[9,6,4,3,2]],threshold:-.0018607829697430134,right_val:.5375424027442932,left_val:.2804419994354248},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.001503397012129426,right_val:.5498952269554138,left_val:.2579050958156586},{features:[[7,15,5,3,-1],[7,16,5,1,3]],threshold:.0023478909861296415,right_val:.6313710808753967,left_val:.4175156056880951},{features:[[11,10,4,3,-1],[11,10,2,3,2]],threshold:-.00028880240279249847,right_val:.4052666127681732,left_val:.5865169763565063},{features:[[6,9,8,10,-1],[6,14,8,5,2]],threshold:.008940547704696655,right_val:.231865406036377,left_val:.5211141109466553},{features:[[10,11,6,2,-1],[10,11,3,2,2]],threshold:-.0193277392536402,right_val:.5241525769233704,left_val:.2753432989120483},{features:[[4,11,6,2,-1],[7,11,3,2,2]],threshold:-.0002020206011366099,right_val:.3677195906639099,left_val:.5722978711128235},{features:[[11,3,8,1,-1],[11,3,4,1,2]],threshold:.002117906929925084,right_val:.5542430877685547,left_val:.4466108083724976},{features:[[6,3,3,2,-1],[7,3,1,2,3]],threshold:-.0017743760254234076,right_val:.5300959944725037,left_val:.2813253104686737},{features:[[14,5,6,5,-1],[14,5,3,5,2]],threshold:.004223445896059275,right_val:.5795428156852722,left_val:.439970999956131},{features:[[7,5,2,12,-1],[7,11,2,6,2]],threshold:-.0143752200528979,right_val:.5292059183120728,left_val:.2981117963790894},{features:[[8,11,4,3,-1],[8,12,4,1,3]],threshold:-.0153491804376245,right_val:.4748171865940094,left_val:.7705215215682983},{features:[[4,1,2,3,-1],[5,1,1,3,2]],threshold:15152279956964776e-21,right_val:.5576897263526917,left_val:.3718844056129456},{features:[[18,3,2,6,-1],[18,5,2,2,3]],threshold:-.009129391983151436,right_val:.5286766886711121,left_val:.3615196049213409},{features:[[0,3,2,6,-1],[0,5,2,2,3]],threshold:.0022512159775942564,right_val:.3486298024654388,left_val:.5364704728126526},{features:[[9,12,2,3,-1],[9,13,2,1,3]],threshold:-.0049696918576955795,right_val:.4676836133003235,left_val:.6927651762962341},{features:[[7,13,4,3,-1],[7,14,4,1,3]],threshold:-.0128290103748441,right_val:.4660735130310059,left_val:.7712153792381287},{features:[[18,0,2,6,-1],[18,2,2,2,3]],threshold:-.009366006590425968,right_val:.5351287722587585,left_val:.3374983966350555},{features:[[0,0,2,6,-1],[0,2,2,2,3]],threshold:.0032452319283038378,right_val:.3289610147476196,left_val:.5325189828872681},{features:[[8,14,6,3,-1],[8,15,6,1,3]],threshold:-.0117235602810979,right_val:.4754300117492676,left_val:.6837652921676636},{features:[[7,4,2,4,-1],[8,4,1,4,2]],threshold:2925794069597032e-20,right_val:.5360502004623413,left_val:.357208788394928},{features:[[8,5,4,6,-1],[8,7,4,2,3]],threshold:-22244219508138485e-21,right_val:.3552064001560211,left_val:.5541427135467529},{features:[[6,4,2,2,-1],[7,4,1,2,2]],threshold:.005088150966912508,right_val:.1256462037563324,left_val:.5070844292640686},{features:[[3,14,14,4,-1],[10,14,7,2,2],[3,16,7,2,2]],threshold:.0274296794086695,right_val:.1625818014144898,left_val:.5269560217857361},{features:[[6,15,6,2,-1],[6,15,3,1,2],[9,16,3,1,2]],threshold:-.00641428679227829,right_val:.4584197103977203,left_val:.7145588994026184},{features:[[14,15,6,2,-1],[14,16,6,1,2]],threshold:.003347995923832059,right_val:.3494696915149689,left_val:.5398612022399902},{features:[[2,12,12,8,-1],[2,16,12,4,2]],threshold:-.0826354920864105,right_val:.5160226225852966,left_val:.2439192980527878},{features:[[7,7,7,2,-1],[7,8,7,1,2]],threshold:.0010261740535497665,right_val:.5767908096313477,left_val:.3886891901493073},{features:[[0,2,18,2,-1],[0,3,18,1,2]],threshold:-.0016307090409100056,right_val:.5347700715065002,left_val:.3389458060264587},{features:[[9,6,2,5,-1],[9,6,1,5,2]],threshold:.0024546680506318808,right_val:.638724684715271,left_val:.4601413905620575},{features:[[7,5,3,8,-1],[8,5,1,8,3]],threshold:-.0009947651997208595,right_val:.4120396077632904,left_val:.5769879221916199},{features:[[9,6,3,4,-1],[10,6,1,4,3]],threshold:.0154091902077198,right_val:.7089822292327881,left_val:.4878709018230438},{features:[[4,13,3,2,-1],[4,14,3,1,2]],threshold:.001178440055809915,right_val:.2895244956016541,left_val:.5263553261756897},{features:[[9,4,6,3,-1],[11,4,2,3,3]],threshold:-.0277019198983908,right_val:.5219606757164001,left_val:.149882897734642},{features:[[5,4,6,3,-1],[7,4,2,3,3]],threshold:-.0295053999871016,right_val:.4999816119670868,left_val:.024893319234252},{features:[[14,11,5,2,-1],[14,12,5,1,2]],threshold:.0004515943001024425,right_val:.4029662907123566,left_val:.5464622974395752},{features:[[1,2,6,9,-1],[3,2,2,9,3]],threshold:.007177263963967562,right_val:.5866296887397766,left_val:.4271056950092316},{features:[[14,6,6,13,-1],[14,6,3,13,2]],threshold:-.0741820484399796,right_val:.4919027984142304,left_val:.6874179244041443},{features:[[3,6,14,8,-1],[3,6,7,4,2],[10,10,7,4,2]],threshold:-.0172541607171297,right_val:.534873902797699,left_val:.3370676040649414},{features:[[16,0,4,11,-1],[16,0,2,11,2]],threshold:.0148515598848462,right_val:.6129904985427856,left_val:.4626792967319489},{features:[[3,4,12,12,-1],[3,4,6,6,2],[9,10,6,6,2]],threshold:.0100020002573729,right_val:.3423453867435455,left_val:.5346122980117798},{features:[[11,4,5,3,-1],[11,5,5,1,3]],threshold:.0020138120744377375,right_val:.5824304223060608,left_val:.4643830060958862},{features:[[4,11,4,2,-1],[4,12,4,1,2]],threshold:.0015135470312088728,right_val:.2856149971485138,left_val:.5196396112442017},{features:[[10,7,2,2,-1],[10,7,1,2,2]],threshold:.003138143103569746,right_val:.5958529710769653,left_val:.4838162958621979},{features:[[8,7,2,2,-1],[9,7,1,2,2]],threshold:-.005145044066011906,right_val:.4741412103176117,left_val:.8920302987098694},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:-.004473670851439238,right_val:.5337278842926025,left_val:.2033942937850952},{features:[[5,6,3,3,-1],[5,7,3,1,3]],threshold:.001962847076356411,right_val:.6725863218307495,left_val:.457163393497467},{features:[[10,0,3,3,-1],[11,0,1,3,3]],threshold:.005426045041531324,right_val:.2845670878887177,left_val:.5271108150482178},{features:[[5,6,6,2,-1],[5,6,3,1,2],[8,7,3,1,2]],threshold:.0004961146041750908,right_val:.5718597769737244,left_val:.4138312935829163},{features:[[12,16,4,3,-1],[12,17,4,1,3]],threshold:.009372878819704056,right_val:.2804847061634064,left_val:.5225151181221008},{features:[[3,12,3,2,-1],[3,13,3,1,2]],threshold:.0006050089723430574,right_val:.3314523994922638,left_val:.523676872253418},{features:[[9,12,3,2,-1],[9,13,3,1,2]],threshold:.0005679255118593574,right_val:.6276971101760864,left_val:.4531059861183167},{features:[[1,11,16,4,-1],[1,11,8,2,2],[9,13,8,2,2]],threshold:.0246443394571543,right_val:.2017143964767456,left_val:.5130851864814758},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:-.0102904504165053,right_val:.4876641035079956,left_val:.7786595225334167},{features:[[4,4,5,3,-1],[4,5,5,1,3]],threshold:.002062941901385784,right_val:.5881264209747314,left_val:.4288598895072937},{features:[[12,16,4,3,-1],[12,17,4,1,3]],threshold:-.005051948130130768,right_val:.5286008715629578,left_val:.3523977994918823},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:-.0057692620903253555,right_val:.4588094055652618,left_val:.6841086149215698},{features:[[9,0,2,2,-1],[9,1,2,1,2]],threshold:-.0004578994121402502,right_val:.5485978126525879,left_val:.356552004814148},{features:[[8,9,4,2,-1],[8,10,4,1,2]],threshold:-.0007591883768327534,right_val:.5254197120666504,left_val:.336879312992096},{features:[[8,8,4,3,-1],[8,9,4,1,3]],threshold:-.001773725962266326,right_val:.5454015135765076,left_val:.3422161042690277},{features:[[0,13,6,3,-1],[2,13,2,3,3]],threshold:-.008561046794056892,right_val:.4485856890678406,left_val:.6533612012863159},{features:[[16,14,3,2,-1],[16,15,3,1,2]],threshold:.0017277270089834929,right_val:.3925352990627289,left_val:.5307580232620239},{features:[[1,18,18,2,-1],[7,18,6,2,3]],threshold:-.0281996093690395,right_val:.4588584005832672,left_val:.685745894908905},{features:[[16,14,3,2,-1],[16,15,3,1,2]],threshold:-.001778110978193581,right_val:.5369856953620911,left_val:.4037851095199585},{features:[[1,14,3,2,-1],[1,15,3,1,2]],threshold:.00033177141449414194,right_val:.3705750107765198,left_val:.539979875087738},{features:[[7,14,6,3,-1],[7,15,6,1,3]],threshold:.0026385399978607893,right_val:.6452730894088745,left_val:.4665437042713165},{features:[[5,14,8,3,-1],[5,15,8,1,3]],threshold:-.0021183069329708815,right_val:.4064677059650421,left_val:.5914781093597412},{features:[[10,6,4,14,-1],[10,6,2,14,2]],threshold:-.0147732896730304,right_val:.5294762849807739,left_val:.3642038106918335},{features:[[6,6,4,14,-1],[8,6,2,14,2]],threshold:-.0168154407292604,right_val:.5144972801208496,left_val:.2664231956005096},{features:[[13,5,2,3,-1],[13,6,2,1,3]],threshold:-.006337014026939869,right_val:.4852097928524017,left_val:.6779531240463257},{features:[[7,16,6,1,-1],[9,16,2,1,3]],threshold:-44560048991115764e-21,right_val:.4153054058551788,left_val:.5613964796066284},{features:[[9,12,3,3,-1],[9,13,3,1,3]],threshold:-.0010240620467811823,right_val:.4566304087638855,left_val:.5964478254318237},{features:[[7,0,3,3,-1],[8,0,1,3,3]],threshold:-.00231616897508502,right_val:.5188159942626953,left_val:.2976115047931671},{features:[[4,0,16,18,-1],[4,9,16,9,2]],threshold:.5321757197380066,right_val:.220263198018074,left_val:.5187839269638062},{features:[[1,1,16,14,-1],[1,8,16,7,2]],threshold:-.1664305031299591,right_val:.5060343146324158,left_val:.1866022944450378},{features:[[3,9,15,4,-1],[8,9,5,4,3]],threshold:.112535297870636,right_val:.1185022965073586,left_val:.5212125182151794},{features:[[6,12,7,3,-1],[6,13,7,1,3]],threshold:.009304686449468136,right_val:.6826149225234985,left_val:.4589937031269074},{features:[[14,15,2,3,-1],[14,16,2,1,3]],threshold:-.004625509958714247,right_val:.5225008726119995,left_val:.3079940974712372},{features:[[2,3,16,14,-1],[2,3,8,7,2],[10,10,8,7,2]],threshold:-.1111646965146065,right_val:.5080801844596863,left_val:.2101044058799744},{features:[[16,2,4,18,-1],[18,2,2,9,2],[16,11,2,9,2]],threshold:-.0108884396031499,right_val:.4790464043617249,left_val:.5765355229377747},{features:[[4,15,2,3,-1],[4,16,2,1,3]],threshold:.005856430158019066,right_val:.1563598960638046,left_val:.5065100193023682},{features:[[16,2,4,18,-1],[18,2,2,9,2],[16,11,2,9,2]],threshold:.0548543892800808,right_val:.7230510711669922,left_val:.49669149518013},{features:[[1,1,8,3,-1],[1,2,8,1,3]],threshold:-.0111973397433758,right_val:.5098798274993896,left_val:.2194979041814804},{features:[[8,11,4,3,-1],[8,12,4,1,3]],threshold:.004406907130032778,right_val:.6770902872085571,left_val:.4778401851654053},{features:[[5,11,5,9,-1],[5,14,5,3,3]],threshold:-.0636652931571007,right_val:.5081024169921875,left_val:.1936362981796265},{features:[[16,0,4,11,-1],[16,0,2,11,2]],threshold:-.009808149188756943,right_val:.4810341000556946,left_val:.599906325340271},{features:[[7,0,6,1,-1],[9,0,2,1,3]],threshold:-.0021717099007219076,right_val:.5235472917556763,left_val:.3338333964347839},{features:[[16,3,3,7,-1],[17,3,1,7,3]],threshold:-.0133155202493072,right_val:.4919213056564331,left_val:.6617069840431213},{features:[[1,3,3,7,-1],[2,3,1,7,3]],threshold:.002544207964092493,right_val:.6082184910774231,left_val:.4488744139671326},{features:[[7,8,6,12,-1],[7,12,6,4,3]],threshold:.0120378397405148,right_val:.3292432129383087,left_val:.540939211845398},{features:[[0,0,4,11,-1],[2,0,2,11,2]],threshold:-.0207010507583618,right_val:.4594995975494385,left_val:.6819120049476624},{features:[[14,0,6,20,-1],[14,0,3,20,2]],threshold:.0276082791388035,right_val:.5767282843589783,left_val:.4630792140960693},{features:[[0,3,1,2,-1],[0,4,1,1,2]],threshold:.0012370620388537645,right_val:.2635016143321991,left_val:.5165379047393799},{features:[[5,5,10,8,-1],[10,5,5,4,2],[5,9,5,4,2]],threshold:-.037669338285923,right_val:.5278980135917664,left_val:.2536393105983734},{features:[[4,7,12,4,-1],[4,7,6,2,2],[10,9,6,2,2]],threshold:-.0018057259730994701,right_val:.5517500042915344,left_val:.3985156118869782}],threshold:50.61048126220703},{simpleClassifiers:[{features:[[2,1,6,4,-1],[5,1,3,4,2]],threshold:.004429902881383896,right_val:.633522629737854,left_val:.2891018092632294},{features:[[9,7,6,4,-1],[12,7,3,2,2],[9,9,3,2,2]],threshold:-.0023813319858163595,right_val:.3477487862110138,left_val:.621178925037384},{features:[[5,6,2,6,-1],[5,9,2,3,2]],threshold:.0022915711160749197,right_val:.5582118034362793,left_val:.2254412025213242},{features:[[9,16,6,4,-1],[12,16,3,2,2],[9,18,3,2,2]],threshold:.0009945794008672237,right_val:.5930070877075195,left_val:.3711710870265961},{features:[[9,4,2,12,-1],[9,10,2,6,2]],threshold:.0007716466789133847,right_val:.334799587726593,left_val:.565172016620636},{features:[[7,1,6,18,-1],[9,1,2,18,3]],threshold:-.001138641033321619,right_val:.5508630871772766,left_val:.3069126009941101},{features:[[4,12,12,2,-1],[8,12,4,2,3]],threshold:-.0001640303962631151,right_val:.3699047863483429,left_val:.576282799243927},{features:[[8,8,6,2,-1],[8,9,6,1,2]],threshold:29793529392918572e-21,right_val:.5437911152839661,left_val:.2644244134426117},{features:[[8,0,3,6,-1],[9,0,1,6,3]],threshold:.008577490225434303,right_val:.1795724928379059,left_val:.5051138997077942},{features:[[11,18,3,2,-1],[11,19,3,1,2]],threshold:-.0002603268949314952,right_val:.4446826875209808,left_val:.5826969146728516},{features:[[1,1,17,4,-1],[1,3,17,2,2]],threshold:-.006140463054180145,right_val:.5346971750259399,left_val:.3113852143287659},{features:[[11,8,4,12,-1],[11,8,2,12,2]],threshold:-.0230869501829147,right_val:.533119797706604,left_val:.32779461145401},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.0142436502501369,right_val:.4588063061237335,left_val:.7381709814071655},{features:[[12,3,2,17,-1],[12,3,1,17,2]],threshold:.0194871295243502,right_val:.2274471968412399,left_val:.5256630778312683},{features:[[4,7,6,1,-1],[6,7,2,1,3]],threshold:-.0009668110869824886,right_val:.3815006911754608,left_val:.5511230826377869},{features:[[18,3,2,3,-1],[18,4,2,1,3]],threshold:.003147470997646451,right_val:.2543726861476898,left_val:.5425636768341064},{features:[[8,4,3,4,-1],[8,6,3,2,2]],threshold:-.00018026070029009134,right_val:.3406304121017456,left_val:.5380191802978516},{features:[[4,5,12,10,-1],[4,10,12,5,2]],threshold:-.006026626098901033,right_val:.54205721616745,left_val:.3035801947116852},{features:[[5,18,4,2,-1],[7,18,2,2,2]],threshold:.00044462960795499384,right_val:.5660110116004944,left_val:.3990997076034546},{features:[[17,2,3,6,-1],[17,4,3,2,3]],threshold:.002260976005345583,right_val:.3940688073635101,left_val:.5562806725502014},{features:[[7,7,6,6,-1],[9,7,2,6,3]],threshold:.0511330589652061,right_val:.7118561863899231,left_val:.4609653949737549},{features:[[17,2,3,6,-1],[17,4,3,2,3]],threshold:-.0177863091230392,right_val:.5322144031524658,left_val:.2316166013479233},{features:[[8,0,3,4,-1],[9,0,1,4,3]],threshold:-.004967962857335806,right_val:.5122029185295105,left_val:.233077198266983},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.002066768938675523,right_val:.6455488204956055,left_val:.4657444059848785},{features:[[0,12,6,3,-1],[0,13,6,1,3]],threshold:.007441376801580191,right_val:.236163392663002,left_val:.5154392123222351},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.003627727972343564,right_val:.4476661086082459,left_val:.6219773292541504},{features:[[3,12,2,3,-1],[3,13,2,1,3]],threshold:-.005353075917810202,right_val:.5102208256721497,left_val:.1837355047464371},{features:[[5,6,12,7,-1],[9,6,4,7,3]],threshold:.1453091949224472,right_val:.1535930931568146,left_val:.5145987272262573},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.0024394490756094456,right_val:.3624661862850189,left_val:.5343660116195679},{features:[[14,6,1,3,-1],[14,7,1,1,3]],threshold:-.003128339070826769,right_val:.4845592081546783,left_val:.6215007901191711},{features:[[2,0,3,14,-1],[3,0,1,14,3]],threshold:.0017940260004252195,right_val:.5824198126792908,left_val:.4299261868000031},{features:[[12,14,5,6,-1],[12,16,5,2,3]],threshold:.0362538211047649,right_val:.1439467966556549,left_val:.5260334014892578},{features:[[4,14,5,6,-1],[4,16,5,2,3]],threshold:-.005174672231078148,right_val:.5287045240402222,left_val:.350653886795044},{features:[[11,10,2,2,-1],[12,10,1,1,2],[11,11,1,1,2]],threshold:.0006538329762406647,right_val:.6122040152549744,left_val:.4809640944004059},{features:[[5,0,3,14,-1],[6,0,1,14,3]],threshold:-.0264802295714617,right_val:.5045586228370667,left_val:.1139362007379532},{features:[[10,15,2,3,-1],[10,16,2,1,3]],threshold:-.0030440660193562508,right_val:.4794734120368958,left_val:.6352095007896423},{features:[[0,2,2,3,-1],[0,3,2,1,3]],threshold:.0036993520334362984,right_val:.2498510926961899,left_val:.5131118297576904},{features:[[5,11,12,6,-1],[5,14,12,3,2]],threshold:-.0003676293126773089,right_val:.3709532022476196,left_val:.54213947057724},{features:[[6,11,3,9,-1],[6,14,3,3,3]],threshold:-.041382260620594,right_val:.5081691741943359,left_val:.1894959956407547},{features:[[11,10,2,2,-1],[12,10,1,1,2],[11,11,1,1,2]],threshold:-.0010532729793339968,right_val:.4783608913421631,left_val:.645436704158783},{features:[[5,6,1,3,-1],[5,7,1,1,3]],threshold:-.0021648600231856108,right_val:.449982613325119,left_val:.6215031147003174},{features:[[4,9,13,3,-1],[4,10,13,1,3]],threshold:-.0005674774874933064,right_val:.5419334769248962,left_val:.3712610900402069},{features:[[1,7,15,6,-1],[6,7,5,6,3]],threshold:.173758402466774,right_val:.1215742006897926,left_val:.5023643970489502},{features:[[4,5,12,6,-1],[8,5,4,6,3]],threshold:-.0029049699660390615,right_val:.5381883978843689,left_val:.3240267932415009},{features:[[8,10,4,3,-1],[8,11,4,1,3]],threshold:.0012299539521336555,right_val:.5703486204147339,left_val:.4165507853031158},{features:[[15,14,1,3,-1],[15,15,1,1,3]],threshold:-.0005432923790067434,right_val:.554754912853241,left_val:.3854042887687683},{features:[[1,11,5,3,-1],[1,12,5,1,3]],threshold:-.008329725824296474,right_val:.5097082853317261,left_val:.2204494029283524},{features:[[7,1,7,12,-1],[7,7,7,6,2]],threshold:-.00010417630255687982,right_val:.4303036034107208,left_val:.560706615447998},{features:[[0,1,6,10,-1],[0,1,3,5,2],[3,6,3,5,2]],threshold:.0312047004699707,right_val:.6982004046440125,left_val:.4621657133102417},{features:[[16,1,4,3,-1],[16,2,4,1,3]],threshold:.007894350215792656,right_val:.226906806230545,left_val:.5269594192504883},{features:[[5,5,2,3,-1],[5,6,2,1,3]],threshold:-.004364531021565199,right_val:.4537956118583679,left_val:.6359223127365112},{features:[[12,2,3,5,-1],[13,2,1,5,3]],threshold:.007679305970668793,right_val:.274048388004303,left_val:.5274767875671387},{features:[[0,3,4,6,-1],[0,5,4,2,3]],threshold:-.0254311393946409,right_val:.5071732997894287,left_val:.2038519978523254},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0008200060110539198,right_val:.6119868159294128,left_val:.4587455093860626},{features:[[8,18,3,1,-1],[9,18,1,1,3]],threshold:.002928460016846657,right_val:.2028204947710037,left_val:.5071274042129517},{features:[[11,10,2,2,-1],[12,10,1,1,2],[11,11,1,1,2]],threshold:4525647091213614e-20,right_val:.5430821776390076,left_val:.4812104105949402},{features:[[7,10,2,2,-1],[7,10,1,1,2],[8,11,1,1,2]],threshold:.0013158309739083052,right_val:.6779323220252991,left_val:.4625813961029053},{features:[[11,11,4,4,-1],[11,13,4,2,2]],threshold:.0015870389761403203,right_val:.3431465029716492,left_val:.5386291742324829},{features:[[8,12,3,8,-1],[9,12,1,8,3]],threshold:-.0215396601706743,right_val:.5003222823143005,left_val:.025942500680685},{features:[[13,0,6,3,-1],[13,1,6,1,3]],threshold:.014334480278194,right_val:.1590632945299149,left_val:.5202844738960266},{features:[[8,8,3,4,-1],[9,8,1,4,3]],threshold:-.008388138376176357,right_val:.4648044109344482,left_val:.728248119354248},{features:[[5,7,10,10,-1],[10,7,5,5,2],[5,12,5,5,2]],threshold:.00919068418443203,right_val:.3923191130161285,left_val:.556235671043396},{features:[[3,18,8,2,-1],[3,18,4,1,2],[7,19,4,1,2]],threshold:-.005845305975526571,right_val:.4629127979278565,left_val:.6803392767906189},{features:[[10,2,6,8,-1],[12,2,2,8,3]],threshold:-.0547077991068363,right_val:.5206125974655151,left_val:.2561671137809753},{features:[[4,2,6,8,-1],[6,2,2,8,3]],threshold:.009114277549088001,right_val:.3053877055644989,left_val:.518962025642395},{features:[[11,0,3,7,-1],[12,0,1,7,3]],threshold:-.0155750000849366,right_val:.5169094800949097,left_val:.1295074969530106},{features:[[7,11,2,1,-1],[8,11,1,1,2]],threshold:-.0001205060034408234,right_val:.4230825006961823,left_val:.5735098123550415},{features:[[15,14,1,3,-1],[15,15,1,1,3]],threshold:.0012273970060050488,right_val:.4079791903495789,left_val:.5289878249168396},{features:[[7,15,2,2,-1],[7,15,1,1,2],[8,16,1,1,2]],threshold:-.0012186600361019373,right_val:.4574409127235413,left_val:.6575639843940735},{features:[[15,14,1,3,-1],[15,15,1,1,3]],threshold:-.0033256649039685726,right_val:.5195019841194153,left_val:.3628047108650208},{features:[[6,0,3,7,-1],[7,0,1,7,3]],threshold:-.0132883097976446,right_val:.504348874092102,left_val:.1284265965223312},{features:[[18,1,2,7,-1],[18,1,1,7,2]],threshold:-.0033839771058410406,right_val:.475750595331192,left_val:.6292240023612976},{features:[[2,0,8,20,-1],[2,10,8,10,2]],threshold:-.2195422053337097,right_val:.5065013766288757,left_val:.148773193359375},{features:[[3,0,15,6,-1],[3,2,15,2,3]],threshold:.004911170806735754,right_val:.5665838718414307,left_val:.425610214471817},{features:[[4,3,12,2,-1],[4,4,12,1,2]],threshold:-.00018744950648397207,right_val:.5586857199668884,left_val:.4004144072532654},{features:[[16,0,4,5,-1],[16,0,2,5,2]],threshold:-.00521786417812109,right_val:.4812706112861633,left_val:.6009116172790527},{features:[[7,0,3,4,-1],[8,0,1,4,3]],threshold:-.0011111519997939467,right_val:.5287089943885803,left_val:.3514933884143829},{features:[[16,0,4,5,-1],[16,0,2,5,2]],threshold:.004403640050441027,right_val:.5924085974693298,left_val:.4642275869846344},{features:[[1,7,6,13,-1],[3,7,2,13,3]],threshold:.1229949966073036,right_val:.0691524818539619,left_val:.5025529265403748},{features:[[16,0,4,5,-1],[16,0,2,5,2]],threshold:-.0123135102912784,right_val:.4934012889862061,left_val:.5884591937065125},{features:[[0,0,4,5,-1],[2,0,2,5,2]],threshold:.004147103987634182,right_val:.589347779750824,left_val:.4372239112854004},{features:[[14,12,3,6,-1],[14,14,3,2,3]],threshold:-.003550264984369278,right_val:.5396270155906677,left_val:.4327551126480103},{features:[[3,12,3,6,-1],[3,14,3,2,3]],threshold:-.0192242693156004,right_val:.5068330764770508,left_val:.1913134008646011},{features:[[16,1,4,3,-1],[16,2,4,1,3]],threshold:.0014395059552043676,right_val:.424353301525116,left_val:.5308178067207336},{features:[[8,7,2,10,-1],[8,7,1,5,2],[9,12,1,5,2]],threshold:-.00677519990131259,right_val:.4540086090564728,left_val:.6365395784378052},{features:[[11,11,4,4,-1],[11,13,4,2,2]],threshold:.007011963054537773,right_val:.302619993686676,left_val:.5189834237098694},{features:[[0,1,4,3,-1],[0,2,4,1,3]],threshold:.005401465110480785,right_val:.2557682991027832,left_val:.5105062127113342},{features:[[13,4,1,3,-1],[13,5,1,1,3]],threshold:.0009027498890645802,right_val:.5861827731132507,left_val:.4696914851665497},{features:[[7,15,3,5,-1],[8,15,1,5,3]],threshold:.0114744501188397,right_val:.152717798948288,left_val:.5053645968437195},{features:[[9,7,3,5,-1],[10,7,1,5,3]],threshold:-.006702343001961708,right_val:.4890604019165039,left_val:.6508980989456177},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:-.0020462959073483944,right_val:.4514600038528442,left_val:.6241816878318787},{features:[[10,6,4,14,-1],[10,6,2,14,2]],threshold:-.009995156899094582,right_val:.5400953888893127,left_val:.3432781100273132},{features:[[0,5,5,6,-1],[0,7,5,2,3]],threshold:-.0357007086277008,right_val:.5074077844619751,left_val:.1878059059381485},{features:[[9,5,6,4,-1],[9,5,3,4,2]],threshold:.0004558456130325794,right_val:.5402569770812988,left_val:.3805277049541473},{features:[[0,0,18,10,-1],[6,0,6,10,3]],threshold:-.0542606003582478,right_val:.4595097005367279,left_val:.6843714714050293},{features:[[10,6,4,14,-1],[10,6,2,14,2]],threshold:.0060600461438298225,right_val:.450052797794342,left_val:.5502905249595642},{features:[[6,6,4,14,-1],[8,6,2,14,2]],threshold:-.006479183211922646,right_val:.5310757160186768,left_val:.3368858098983765},{features:[[13,4,1,3,-1],[13,5,1,1,3]],threshold:-.0014939469983801246,right_val:.4756175875663757,left_val:.6487640142440796},{features:[[5,1,2,3,-1],[6,1,1,3,2]],threshold:14610530342906713e-21,right_val:.5451064109802246,left_val:.403457909822464},{features:[[18,1,2,18,-1],[19,1,1,9,2],[18,10,1,9,2]],threshold:-.00723219383507967,right_val:.4824739992618561,left_val:.6386873722076416},{features:[[2,1,4,3,-1],[2,2,4,1,3]],threshold:-.004064581822603941,right_val:.5157335996627808,left_val:.2986421883106232},{features:[[18,1,2,18,-1],[19,1,1,9,2],[18,10,1,9,2]],threshold:.0304630808532238,right_val:.7159956097602844,left_val:.5022199749946594},{features:[[1,14,4,6,-1],[1,14,2,3,2],[3,17,2,3,2]],threshold:-.008054491132497787,right_val:.4619275033473969,left_val:.6492452025413513},{features:[[10,11,7,6,-1],[10,13,7,2,3]],threshold:.0395051389932632,right_val:.2450613975524902,left_val:.5150570869445801},{features:[[0,10,6,10,-1],[0,10,3,5,2],[3,15,3,5,2]],threshold:.008453020825982094,right_val:.6394037008285522,left_val:.4573669135570526},{features:[[11,0,3,4,-1],[12,0,1,4,3]],threshold:-.0011688120430335402,right_val:.548366129398346,left_val:.3865512013435364},{features:[[5,10,5,6,-1],[5,13,5,3,2]],threshold:.002807067008689046,right_val:.2701480090618134,left_val:.5128579139709473},{features:[[14,6,1,8,-1],[14,10,1,4,2]],threshold:.000473652093205601,right_val:.5387461185455322,left_val:.4051581919193268},{features:[[1,7,18,6,-1],[1,7,9,3,2],[10,10,9,3,2]],threshold:.0117410803213716,right_val:.3719413876533508,left_val:.5295950174331665},{features:[[9,7,2,2,-1],[9,7,1,2,2]],threshold:.0031833238899707794,right_val:.6895126104354858,left_val:.4789406955242157},{features:[[5,9,4,5,-1],[7,9,2,5,2]],threshold:.0007024150108918548,right_val:.3918080925941467,left_val:.5384489297866821}],threshold:54.62007141113281},{simpleClassifiers:[{features:[[7,6,6,3,-1],[9,6,2,3,3]],threshold:.0170599296689034,right_val:.7142534852027893,left_val:.3948527872562408},{features:[[1,0,18,4,-1],[7,0,6,4,3]],threshold:.0218408405780792,right_val:.6090016961097717,left_val:.3370316028594971},{features:[[7,15,2,4,-1],[7,17,2,2,2]],threshold:.00024520049919374287,right_val:.5987902283668518,left_val:.3500576019287109},{features:[[1,0,19,9,-1],[1,3,19,3,3]],threshold:.008327260613441467,right_val:.5697240829467773,left_val:.3267528116703033},{features:[[3,7,3,6,-1],[3,9,3,2,3]],threshold:.0005714829894714057,right_val:.5531656742095947,left_val:.3044599890708923},{features:[[13,7,4,4,-1],[15,7,2,2,2],[13,9,2,2,2]],threshold:.0006737398798577487,right_val:.567263126373291,left_val:.3650012016296387},{features:[[3,7,4,4,-1],[3,7,2,2,2],[5,9,2,2,2]],threshold:3468159047770314e-20,right_val:.5388727188110352,left_val:.3313541114330292},{features:[[9,6,10,8,-1],[9,10,10,4,2]],threshold:-.005856339819729328,right_val:.5498778820037842,left_val:.2697942852973938},{features:[[3,8,14,12,-1],[3,14,14,6,2]],threshold:.00851022731512785,right_val:.2762879133224487,left_val:.5269358158111572},{features:[[6,5,10,12,-1],[11,5,5,6,2],[6,11,5,6,2]],threshold:-.0698172077536583,right_val:.5259246826171875,left_val:.2909603118896484},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.0008611367084085941,right_val:.4073697924613953,left_val:.5892577171325684},{features:[[9,5,6,5,-1],[9,5,3,5,2]],threshold:.0009714924963191152,right_val:.5415862202644348,left_val:.3523564040660858},{features:[[9,4,2,4,-1],[9,6,2,2,2]],threshold:-1472749045206001e-20,right_val:.3503156006336212,left_val:.5423017740249634},{features:[[9,5,6,5,-1],[9,5,3,5,2]],threshold:.0484202913939953,right_val:.3411195874214172,left_val:.51939457654953},{features:[[5,5,6,5,-1],[8,5,3,5,2]],threshold:.0013257140526548028,right_val:.5335376262664795,left_val:.315776914358139},{features:[[11,2,6,1,-1],[13,2,2,1,3]],threshold:1492214960308047e-20,right_val:.5536553859710693,left_val:.4451299905776978},{features:[[3,2,6,1,-1],[5,2,2,1,3]],threshold:-.002717339899390936,right_val:.5248088836669922,left_val:.3031741976737976},{features:[[13,5,2,3,-1],[13,6,2,1,3]],threshold:.0029219500720500946,right_val:.6606041789054871,left_val:.4781453013420105},{features:[[0,10,1,4,-1],[0,12,1,2,2]],threshold:-.0019804988987743855,right_val:.5287625193595886,left_val:.3186308145523071},{features:[[13,5,2,3,-1],[13,6,2,1,3]],threshold:-.004001210909336805,right_val:.4749928116798401,left_val:.6413596868515015},{features:[[8,18,3,2,-1],[9,18,1,2,3]],threshold:-.004349199123680592,right_val:.5098996758460999,left_val:.1507498025894165},{features:[[6,15,9,2,-1],[6,16,9,1,2]],threshold:.0013490889687091112,right_val:.5881167054176331,left_val:.4316158890724182},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.0185970701277256,right_val:.9089794158935547,left_val:.4735553860664368},{features:[[18,4,2,4,-1],[18,6,2,2,2]],threshold:-.001856237999163568,right_val:.5577837228775024,left_val:.3553189039230347},{features:[[5,5,2,3,-1],[5,6,2,1,3]],threshold:.002294043079018593,right_val:.6580877900123596,left_val:.4500094950199127},{features:[[15,16,3,2,-1],[15,17,3,1,2]],threshold:.00029982850537635386,right_val:.3975878953933716,left_val:.5629242062568665},{features:[[0,0,3,9,-1],[0,3,3,3,3]],threshold:.0035455459728837013,right_val:.3605485856533051,left_val:.5381547212600708},{features:[[9,7,3,3,-1],[9,8,3,1,3]],threshold:.009610472247004509,right_val:.1796745955944061,left_val:.5255997180938721},{features:[[8,7,3,3,-1],[8,8,3,1,3]],threshold:-.0062783220782876015,right_val:.5114030241966248,left_val:.227285698056221},{features:[[9,5,2,6,-1],[9,5,1,6,2]],threshold:.0034598479978740215,right_val:.6608219146728516,left_val:.4626308083534241},{features:[[8,6,3,4,-1],[9,6,1,4,3]],threshold:-.0013112019514665008,right_val:.4436857998371124,left_val:.6317539811134338},{features:[[7,6,8,12,-1],[11,6,4,6,2],[7,12,4,6,2]],threshold:.002687617903575301,right_val:.4054022133350372,left_val:.5421109795570374},{features:[[5,6,8,12,-1],[5,6,4,6,2],[9,12,4,6,2]],threshold:.003911816980689764,right_val:.3273454904556274,left_val:.5358477830886841},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:-.014206450432539,right_val:.4975781142711639,left_val:.7793576717376709},{features:[[2,16,3,2,-1],[2,17,3,1,2]],threshold:.0007170552853494883,right_val:.3560903966426849,left_val:.5297319889068604},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:.001663501956500113,right_val:.5816481709480286,left_val:.467809408903122},{features:[[2,12,6,6,-1],[2,14,6,2,3]],threshold:.0033686188980937004,right_val:.3446420133113861,left_val:.5276734232902527},{features:[[7,13,6,3,-1],[7,14,6,1,3]],threshold:.0127995302900672,right_val:.7472159266471863,left_val:.4834679961204529},{features:[[6,14,6,3,-1],[6,15,6,1,3]],threshold:.0033901201095432043,right_val:.6401721239089966,left_val:.4511859118938446},{features:[[14,15,5,3,-1],[14,16,5,1,3]],threshold:.004707077983766794,right_val:.355522096157074,left_val:.533565878868103},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.0014819339849054813,right_val:.5772724151611328,left_val:.4250707030296326},{features:[[14,15,5,3,-1],[14,16,5,1,3]],threshold:-.0069995759986341,right_val:.5292900204658508,left_val:.3003320097923279},{features:[[5,3,6,2,-1],[7,3,2,2,3]],threshold:.0159390103071928,right_val:.1675581932067871,left_val:.5067319273948669},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:.007637734990566969,right_val:.7085601091384888,left_val:.4795069992542267},{features:[[1,15,5,3,-1],[1,16,5,1,3]],threshold:.006733404006808996,right_val:.2162470072507858,left_val:.5133113265037537},{features:[[8,13,4,6,-1],[10,13,2,3,2],[8,16,2,3,2]],threshold:-.012858809903264,right_val:.525137186050415,left_val:.1938841938972473},{features:[[7,8,3,3,-1],[8,8,1,3,3]],threshold:-.0006227080011740327,right_val:.419786810874939,left_val:.5686538219451904},{features:[[12,0,5,4,-1],[12,2,5,2,2]],threshold:-.0005265168147161603,right_val:.5429695844650269,left_val:.4224168956279755},{features:[[0,2,20,2,-1],[0,2,10,1,2],[10,3,10,1,2]],threshold:.0110750999301672,right_val:.2514517903327942,left_val:.5113775134086609},{features:[[1,0,18,4,-1],[7,0,6,4,3]],threshold:-.0367282517254353,right_val:.4849618971347809,left_val:.7194662094116211},{features:[[4,3,6,1,-1],[6,3,2,1,3]],threshold:-.00028207109426148236,right_val:.539444625377655,left_val:.3840261995792389},{features:[[4,18,13,2,-1],[4,19,13,1,2]],threshold:-.0027489690110087395,right_val:.4569182097911835,left_val:.593708872795105},{features:[[2,10,3,6,-1],[2,12,3,2,3]],threshold:.0100475195795298,right_val:.2802298069000244,left_val:.5138576030731201},{features:[[14,12,6,8,-1],[17,12,3,4,2],[14,16,3,4,2]],threshold:-.008149784058332443,right_val:.4636121094226837,left_val:.6090037226676941},{features:[[4,13,10,6,-1],[4,13,5,3,2],[9,16,5,3,2]],threshold:-.006883388850837946,right_val:.5254660248756409,left_val:.3458611071109772},{features:[[14,12,1,2,-1],[14,13,1,1,2]],threshold:-140393603942357e-19,right_val:.4082083106040955,left_val:.5693104267120361},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.001549841952510178,right_val:.5806517004966736,left_val:.4350537061691284},{features:[[14,12,2,2,-1],[14,13,2,1,2]],threshold:-.006784149911254644,right_val:.5182775259017944,left_val:.1468873023986816},{features:[[4,12,2,2,-1],[4,13,2,1,2]],threshold:.00021705629478674382,right_val:.345617413520813,left_val:.5293524265289307},{features:[[8,12,9,2,-1],[8,13,9,1,2]],threshold:.00031198898795992136,right_val:.5942413806915283,left_val:.4652450978755951},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.005450753029435873,right_val:.7024846076965332,left_val:.4653508961200714},{features:[[11,10,3,6,-1],[11,13,3,3,2]],threshold:-.00025818689027801156,right_val:.3768967092037201,left_val:.5497295260429382},{features:[[5,6,9,12,-1],[5,12,9,6,2]],threshold:-.0174425393342972,right_val:.5457497835159302,left_val:.3919087946414948},{features:[[11,10,3,6,-1],[11,13,3,3,2]],threshold:-.045343529433012,right_val:.5154908895492554,left_val:.1631357073783875},{features:[[6,10,3,6,-1],[6,13,3,3,2]],threshold:.0019190689781680703,right_val:.2791895866394043,left_val:.514589786529541},{features:[[5,4,11,3,-1],[5,5,11,1,3]],threshold:-.006017786916345358,right_val:.4756332933902741,left_val:.6517636179924011},{features:[[7,1,5,10,-1],[7,6,5,5,2]],threshold:-.004072073847055435,right_val:.4092685878276825,left_val:.5514652729034424},{features:[[2,8,18,2,-1],[2,9,18,1,2]],threshold:.00039855059003457427,right_val:.5285550951957703,left_val:.316524088382721},{features:[[7,17,5,3,-1],[7,18,5,1,3]],threshold:-.0065418570302426815,right_val:.4652808904647827,left_val:.6853377819061279},{features:[[5,9,12,1,-1],[9,9,4,1,3]],threshold:.003484508953988552,right_val:.4502759873867035,left_val:.5484588146209717},{features:[[0,14,6,6,-1],[0,14,3,3,2],[3,17,3,3,2]],threshold:-.0136967804282904,right_val:.4572555124759674,left_val:.6395779848098755},{features:[[5,9,12,1,-1],[9,9,4,1,3]],threshold:-.017347140237689,right_val:.5181614756584167,left_val:.2751072943210602},{features:[[3,9,12,1,-1],[7,9,4,1,3]],threshold:-.004088542889803648,right_val:.5194984078407288,left_val:.3325636088848114},{features:[[14,10,6,7,-1],[14,10,3,7,2]],threshold:-.009468790143728256,right_val:.485181987285614,left_val:.5942280888557434},{features:[[1,0,16,2,-1],[1,1,16,1,2]],threshold:.0017084840219467878,right_val:.5519806146621704,left_val:.4167110919952393},{features:[[10,9,10,9,-1],[10,12,10,3,3]],threshold:.009480909444391727,right_val:.4208514988422394,left_val:.5433894991874695},{features:[[0,1,10,2,-1],[5,1,5,2,2]],threshold:-.004738965071737766,right_val:.4560655057430267,left_val:.6407189965248108},{features:[[17,3,2,3,-1],[17,4,2,1,3]],threshold:.006576105020940304,right_val:.2258227020502091,left_val:.5214555263519287},{features:[[1,3,2,3,-1],[1,4,2,1,3]],threshold:-.0021690549328923225,right_val:.5156704783439636,left_val:.3151527941226959},{features:[[9,7,3,6,-1],[10,7,1,6,3]],threshold:.014660170301795,right_val:.668994128704071,left_val:.4870837032794952},{features:[[6,5,4,3,-1],[8,5,2,3,2]],threshold:.00017231999663636088,right_val:.5251078009605408,left_val:.3569748997688294},{features:[[7,5,6,6,-1],[9,5,2,6,3]],threshold:-.0218037609010935,right_val:.496632993221283,left_val:.8825920820236206},{features:[[3,4,12,12,-1],[3,4,6,6,2],[9,10,6,6,2]],threshold:-.0947361066937447,right_val:.5061113834381104,left_val:.1446162015199661},{features:[[9,2,6,15,-1],[11,2,2,15,3]],threshold:.0055825551971793175,right_val:.4238066077232361,left_val:.5396478772163391},{features:[[2,2,6,17,-1],[4,2,2,17,3]],threshold:.001951709040440619,right_val:.5497786998748779,left_val:.4170410931110382},{features:[[14,10,6,7,-1],[14,10,3,7,2]],threshold:.0121499001979828,right_val:.5664274096488953,left_val:.4698367118835449},{features:[[0,10,6,7,-1],[3,10,3,7,2]],threshold:-.007516962010413408,right_val:.4463135898113251,left_val:.6267772912979126},{features:[[9,2,6,15,-1],[11,2,2,15,3]],threshold:-.0716679096221924,right_val:.5221003293991089,left_val:.3097011148929596},{features:[[5,2,6,15,-1],[7,2,2,15,3]],threshold:-.0882924199104309,right_val:.5006365180015564,left_val:.0811238884925842},{features:[[17,9,3,6,-1],[17,11,3,2,3]],threshold:.0310630798339844,right_val:.1282255947589874,left_val:.5155503749847412},{features:[[6,7,6,6,-1],[8,7,2,6,3]],threshold:.0466218404471874,right_val:.736396074295044,left_val:.4699777960777283},{features:[[1,10,18,6,-1],[10,10,9,3,2],[1,13,9,3,2]],threshold:-.0121894897893071,right_val:.5518996715545654,left_val:.3920530080795288},{features:[[0,9,10,9,-1],[0,12,10,3,3]],threshold:.0130161102861166,right_val:.3685136139392853,left_val:.5260658264160156},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:-.003495289944112301,right_val:.4716280996799469,left_val:.6339294910430908},{features:[[5,12,3,4,-1],[5,14,3,2,2]],threshold:-4401503974804655e-20,right_val:.3776184916496277,left_val:.5333027243614197},{features:[[3,3,16,12,-1],[3,9,16,6,2]],threshold:-.1096649020910263,right_val:.5198346972465515,left_val:.1765342056751251},{features:[[1,1,12,12,-1],[1,1,6,6,2],[7,7,6,6,2]],threshold:-.0009027955820783973,right_val:.3838908076286316,left_val:.5324159860610962},{features:[[10,4,2,4,-1],[11,4,1,2,2],[10,6,1,2,2]],threshold:.0007112664170563221,right_val:.5755224227905273,left_val:.4647929966449738},{features:[[0,9,10,2,-1],[0,9,5,1,2],[5,10,5,1,2]],threshold:-.003125027986243367,right_val:.5166770815849304,left_val:.323670893907547},{features:[[9,11,3,3,-1],[9,12,3,1,3]],threshold:.002414467977359891,right_val:.6459717750549316,left_val:.4787439107894898},{features:[[3,12,9,2,-1],[3,13,9,1,2]],threshold:.00044391240226104856,right_val:.6010255813598633,left_val:.4409308135509491},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.0002261118934256956,right_val:.5493255853652954,left_val:.4038113951683044}],threshold:50.16973114013672},{simpleClassifiers:[{features:[[3,4,13,6,-1],[3,6,13,2,3]],threshold:-.0469012893736362,right_val:.3743801116943359,left_val:.660017192363739},{features:[[9,7,6,4,-1],[12,7,3,2,2],[9,9,3,2,2]],threshold:-.001456834957934916,right_val:.3437797129154205,left_val:.578399121761322},{features:[[1,0,6,8,-1],[4,0,3,8,2]],threshold:.005559836979955435,right_val:.5908216238021851,left_val:.3622266948223114},{features:[[9,5,2,12,-1],[9,11,2,6,2]],threshold:.0007317048730328679,right_val:.2873558104038239,left_val:.550041913986206},{features:[[4,4,3,10,-1],[4,9,3,5,2]],threshold:.001331800944171846,right_val:.5431019067764282,left_val:.267316997051239},{features:[[6,17,8,3,-1],[6,18,8,1,3]],threshold:.00024347059661522508,right_val:.574138879776001,left_val:.3855027854442596},{features:[[0,5,10,6,-1],[0,7,10,2,3]],threshold:-.0030512469820678234,right_val:.3462845087051392,left_val:.5503209829330444},{features:[[13,2,3,2,-1],[13,3,3,1,2]],threshold:-.0006865719915367663,right_val:.5429509282112122,left_val:.3291221857070923},{features:[[7,5,4,5,-1],[9,5,2,5,2]],threshold:.001466820016503334,right_val:.5351811051368713,left_val:.3588382005691528},{features:[[12,14,3,6,-1],[12,16,3,2,3]],threshold:.0003202187072020024,right_val:.5700234174728394,left_val:.429684191942215},{features:[[1,11,8,2,-1],[1,12,8,1,2]],threshold:.0007412218837998807,right_val:.3366870880126953,left_val:.5282164812088013},{features:[[7,13,6,3,-1],[7,14,6,1,3]],threshold:.0038330298848450184,right_val:.6257336139678955,left_val:.4559567868709564},{features:[[0,5,3,6,-1],[0,7,3,2,3]],threshold:-.0154564399272203,right_val:.512945294380188,left_val:.2350116968154907},{features:[[13,2,3,2,-1],[13,3,3,1,2]],threshold:.002679677912965417,right_val:.4155062139034271,left_val:.5329415202140808},{features:[[4,14,4,6,-1],[4,14,2,3,2],[6,17,2,3,2]],threshold:.0028296569362282753,right_val:.5804538130760193,left_val:.4273087978363037},{features:[[13,2,3,2,-1],[13,3,3,1,2]],threshold:-.0039444249123334885,right_val:.5202686190605164,left_val:.2912611961364746},{features:[[8,2,4,12,-1],[8,6,4,4,3]],threshold:.002717955969274044,right_val:.3585677146911621,left_val:.5307688117027283},{features:[[14,0,6,8,-1],[17,0,3,4,2],[14,4,3,4,2]],threshold:.005907762795686722,right_val:.5941585898399353,left_val:.470377504825592},{features:[[7,17,3,2,-1],[8,17,1,2,3]],threshold:-.004224034957587719,right_val:.5088796019554138,left_val:.2141567021608353},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0040725888684391975,right_val:.6841061115264893,left_val:.4766413867473602},{features:[[6,0,8,12,-1],[6,0,4,6,2],[10,6,4,6,2]],threshold:.0101495301350951,right_val:.3748497068881989,left_val:.5360798835754395},{features:[[14,0,2,10,-1],[15,0,1,5,2],[14,5,1,5,2]],threshold:-.00018864999583456665,right_val:.3853805065155029,left_val:.5720130205154419},{features:[[5,3,8,6,-1],[5,3,4,3,2],[9,6,4,3,2]],threshold:-.0048864358104765415,right_val:.5340958833694458,left_val:.3693122863769531},{features:[[14,0,6,10,-1],[17,0,3,5,2],[14,5,3,5,2]],threshold:.0261584799736738,right_val:.6059989929199219,left_val:.4962374866008759},{features:[[9,14,1,2,-1],[9,15,1,1,2]],threshold:.0004856075975112617,right_val:.6012468934059143,left_val:.4438945949077606},{features:[[15,10,4,3,-1],[15,11,4,1,3]],threshold:.0112687097862363,right_val:.1840388029813767,left_val:.5244250297546387},{features:[[8,14,2,3,-1],[8,15,2,1,3]],threshold:-.0028114619199186563,right_val:.4409897029399872,left_val:.6060283780097961},{features:[[3,13,14,4,-1],[10,13,7,2,2],[3,15,7,2,2]],threshold:-.005611272994428873,right_val:.5589237213134766,left_val:.3891170918941498},{features:[[1,10,4,3,-1],[1,11,4,1,3]],threshold:.008568009361624718,right_val:.2062619030475617,left_val:.5069345831871033},{features:[[9,11,6,1,-1],[11,11,2,1,3]],threshold:-.00038172779022715986,right_val:.41926109790802,left_val:.5882201790809631},{features:[[5,11,6,1,-1],[7,11,2,1,3]],threshold:-.00017680290329735726,right_val:.400336891412735,left_val:.5533605813980103},{features:[[3,5,16,15,-1],[3,10,16,5,3]],threshold:.006511253770440817,right_val:.5444191098213196,left_val:.3310146927833557},{features:[[6,12,4,2,-1],[8,12,2,2,2]],threshold:-6594868318643421e-20,right_val:.3944905996322632,left_val:.5433831810951233},{features:[[4,4,12,10,-1],[10,4,6,5,2],[4,9,6,5,2]],threshold:.006993905175477266,right_val:.4192714095115662,left_val:.5600358247756958},{features:[[8,6,3,4,-1],[9,6,1,4,3]],threshold:-.0046744439750909805,right_val:.4604960978031158,left_val:.6685466766357422},{features:[[8,12,4,8,-1],[10,12,2,4,2],[8,16,2,4,2]],threshold:.0115898502990603,right_val:.2926830053329468,left_val:.5357121229171753},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.013007840141654,right_val:.730746328830719,left_val:.4679817855358124},{features:[[12,2,3,2,-1],[13,2,1,2,3]],threshold:-.0011008579749614,right_val:.5415065288543701,left_val:.3937501013278961},{features:[[8,15,3,2,-1],[8,16,3,1,2]],threshold:.0006047264905646443,right_val:.5604041218757629,left_val:.4242376089096069},{features:[[6,0,9,14,-1],[9,0,3,14,3]],threshold:-.0144948400557041,right_val:.5293182730674744,left_val:.3631210029125214},{features:[[9,6,2,3,-1],[10,6,1,3,2]],threshold:-.005305694881826639,right_val:.4621821045875549,left_val:.686045229434967},{features:[[10,8,2,3,-1],[10,9,2,1,3]],threshold:-.00081829127157107,right_val:.542043924331665,left_val:.3944096863269806},{features:[[0,9,4,6,-1],[0,11,4,2,3]],threshold:-.0190775208175182,right_val:.5037891864776611,left_val:.1962621957063675},{features:[[6,0,8,2,-1],[6,1,8,1,2]],threshold:.00035549470339901745,right_val:.5613973140716553,left_val:.4086259007453919},{features:[[6,14,7,3,-1],[6,15,7,1,3]],threshold:.0019679730758070946,right_val:.5926123261451721,left_val:.448912113904953},{features:[[8,10,8,9,-1],[8,13,8,3,3]],threshold:.006918914150446653,right_val:.3728385865688324,left_val:.5335925817489624},{features:[[5,2,3,2,-1],[6,2,1,2,3]],threshold:.002987277926877141,right_val:.2975643873214722,left_val:.5111321210861206},{features:[[14,1,6,8,-1],[17,1,3,4,2],[14,5,3,4,2]],threshold:-.006226461846381426,right_val:.4824537932872772,left_val:.5541489720344543},{features:[[0,1,6,8,-1],[0,1,3,4,2],[3,5,3,4,2]],threshold:.013353300280869,right_val:.6414797902107239,left_val:.4586423933506012},{features:[[1,2,18,6,-1],[10,2,9,3,2],[1,5,9,3,2]],threshold:.0335052385926247,right_val:.3429994881153107,left_val:.5392425060272217},{features:[[9,3,2,1,-1],[10,3,1,1,2]],threshold:-.0025294460356235504,right_val:.5013315081596375,left_val:.1703713983297348},{features:[[13,2,4,6,-1],[15,2,2,3,2],[13,5,2,3,2]],threshold:-.001280162949115038,right_val:.4697405099868774,left_val:.5305461883544922},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.007068738806992769,right_val:.643650472164154,left_val:.4615545868873596},{features:[[13,5,1,3,-1],[13,6,1,1,3]],threshold:.0009688049904070795,right_val:.6043894290924072,left_val:.4833599030971527},{features:[[2,16,5,3,-1],[2,17,5,1,3]],threshold:.003964765928685665,right_val:.323181688785553,left_val:.5187637209892273},{features:[[13,2,4,6,-1],[15,2,2,3,2],[13,5,2,3,2]],threshold:-.022057730704546,right_val:.520098090171814,left_val:.4079256951808929},{features:[[3,2,4,6,-1],[3,2,2,3,2],[5,5,2,3,2]],threshold:-.0006690631271339953,right_val:.3815600872039795,left_val:.533160924911499},{features:[[13,5,1,2,-1],[13,6,1,1,2]],threshold:-.0006700932863168418,right_val:.4688901901245117,left_val:.5655422210693359},{features:[[5,5,2,2,-1],[5,6,2,1,2]],threshold:.000742845528293401,right_val:.6287400126457214,left_val:.4534381031990051},{features:[[13,9,2,2,-1],[13,9,1,2,2]],threshold:.0022227810695767403,right_val:.3303655982017517,left_val:.5350633263587952},{features:[[5,9,2,2,-1],[6,9,1,2,2]],threshold:-.005413052160292864,right_val:.500543475151062,left_val:.1113687008619309},{features:[[13,17,3,2,-1],[13,18,3,1,2]],threshold:-14520040167553816e-21,right_val:.4325133860111237,left_val:.5628737807273865},{features:[[6,16,4,4,-1],[6,16,2,2,2],[8,18,2,2,2]],threshold:.00023369169502984732,right_val:.5447791218757629,left_val:.4165835082530975},{features:[[9,16,2,3,-1],[9,17,2,1,3]],threshold:.004289454780519009,right_val:.6778649091720581,left_val:.4860391020774841},{features:[[0,13,9,6,-1],[0,15,9,2,3]],threshold:.0059103150852024555,right_val:.3612113893032074,left_val:.52623051404953},{features:[[9,14,2,6,-1],[9,17,2,3,2]],threshold:.0129005396738648,right_val:.32502880692482,left_val:.5319377183914185},{features:[[9,15,2,3,-1],[9,16,2,1,3]],threshold:.004698297940194607,right_val:.6665925979614258,left_val:.461824506521225},{features:[[1,10,18,6,-1],[1,12,18,2,3]],threshold:.0104398597031832,right_val:.3883604109287262,left_val:.550567090511322},{features:[[8,11,4,2,-1],[8,12,4,1,2]],threshold:.0030443191062659025,right_val:.7301844954490662,left_val:.4697853028774262},{features:[[7,9,6,2,-1],[7,10,6,1,2]],threshold:-.0006159375188872218,right_val:.5464984178543091,left_val:.3830839097499847},{features:[[8,8,2,3,-1],[8,9,2,1,3]],threshold:-.0034247159492224455,right_val:.5089530944824219,left_val:.256630003452301},{features:[[17,5,3,4,-1],[18,5,1,4,3]],threshold:-.009353856556117535,right_val:.49407958984375,left_val:.6469966173171997},{features:[[1,19,18,1,-1],[7,19,6,1,3]],threshold:.0523389987647533,right_val:.787877082824707,left_val:.4745982885360718},{features:[[9,0,3,2,-1],[10,0,1,2,3]],threshold:.0035765620414167643,right_val:.2748498022556305,left_val:.5306664705276489},{features:[[1,8,1,6,-1],[1,10,1,2,3]],threshold:.0007155531784519553,right_val:.4041908979415894,left_val:.541312575340271},{features:[[12,17,8,3,-1],[12,17,4,3,2]],threshold:-.0105166798457503,right_val:.4815283119678497,left_val:.6158512234687805},{features:[[0,5,3,4,-1],[1,5,1,4,3]],threshold:.007734792772680521,right_val:.7028980851173401,left_val:.4695805907249451},{features:[[9,7,2,3,-1],[9,8,2,1,3]],threshold:-.004322677850723267,right_val:.5304684042930603,left_val:.2849566042423248},{features:[[7,11,2,2,-1],[7,11,1,1,2],[8,12,1,1,2]],threshold:-.0025534399319440126,right_val:.4688892066478729,left_val:.7056984901428223},{features:[[11,3,2,5,-1],[11,3,1,5,2]],threshold:.00010268510231981054,right_val:.5573464035987854,left_val:.3902932107448578},{features:[[7,3,2,5,-1],[8,3,1,5,2]],threshold:7139518857002258e-21,right_val:.526398777961731,left_val:.368423193693161},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:-.0016711989883333445,right_val:.5387271046638489,left_val:.3849175870418549},{features:[[5,6,2,3,-1],[5,7,2,1,3]],threshold:.004926044959574938,right_val:.7447251081466675,left_val:.4729771912097931},{features:[[4,19,15,1,-1],[9,19,5,1,3]],threshold:.0043908702209591866,right_val:.5591921806335449,left_val:.4809181094169617},{features:[[1,19,15,1,-1],[6,19,5,1,3]],threshold:-.0177936293184757,right_val:.4676927030086517,left_val:.6903678178787231},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:.002046966925263405,right_val:.3308162093162537,left_val:.5370690226554871},{features:[[5,0,4,15,-1],[7,0,2,15,2]],threshold:.0298914890736341,right_val:.3309059143066406,left_val:.5139865279197693},{features:[[9,6,2,5,-1],[9,6,1,5,2]],threshold:.0015494900289922953,right_val:.6078342795372009,left_val:.466023713350296},{features:[[9,5,2,7,-1],[10,5,1,7,2]],threshold:.001495696953497827,right_val:.5863919854164124,left_val:.4404835999011993},{features:[[16,11,3,3,-1],[16,12,3,1,3]],threshold:.0009588592802174389,right_val:.4208523035049439,left_val:.5435971021652222},{features:[[1,11,3,3,-1],[1,12,3,1,3]],threshold:.0004964370164088905,right_val:.4000622034072876,left_val:.5370578169822693},{features:[[6,6,8,3,-1],[6,7,8,1,3]],threshold:-.00272808107547462,right_val:.4259642958641052,left_val:.5659412741661072},{features:[[0,15,6,2,-1],[0,16,6,1,2]],threshold:.0023026480339467525,right_val:.3350869119167328,left_val:.5161657929420471},{features:[[1,0,18,6,-1],[7,0,6,6,3]],threshold:.2515163123607636,right_val:.714730978012085,left_val:.4869661927223206},{features:[[6,0,3,4,-1],[7,0,1,4,3]],threshold:-.004632802214473486,right_val:.5083789825439453,left_val:.27274489402771},{features:[[14,10,4,10,-1],[16,10,2,5,2],[14,15,2,5,2]],threshold:-.0404344908893108,right_val:.5021767020225525,left_val:.6851438879966736},{features:[[3,2,3,2,-1],[4,2,1,2,3]],threshold:14972220014897175e-21,right_val:.5522555112838745,left_val:.428446501493454},{features:[[11,2,2,2,-1],[11,3,2,1,2]],threshold:-.00024050309730228037,right_val:.5390074849128723,left_val:.4226118922233582},{features:[[2,10,4,10,-1],[2,10,2,5,2],[4,15,2,5,2]],threshold:.0236578397452831,right_val:.7504366040229797,left_val:.4744631946086884},{features:[[0,13,20,6,-1],[10,13,10,3,2],[0,16,10,3,2]],threshold:-.00814491044729948,right_val:.5538362860679626,left_val:.424505889415741},{features:[[0,5,2,15,-1],[1,5,1,15,2]],threshold:-.003699213033542037,right_val:.4529713094234467,left_val:.5952357053756714},{features:[[1,7,18,4,-1],[10,7,9,2,2],[1,9,9,2,2]],threshold:-.0067718601785600185,right_val:.5473399758338928,left_val:.4137794077396393},{features:[[0,0,2,17,-1],[1,0,1,17,2]],threshold:.004266953095793724,right_val:.5797994136810303,left_val:.4484114944934845},{features:[[2,6,16,6,-1],[10,6,8,3,2],[2,9,8,3,2]],threshold:.0017791989957913756,right_val:.4432444870471954,left_val:.5624858736991882},{features:[[8,14,1,3,-1],[8,15,1,1,3]],threshold:.0016774770338088274,right_val:.63642418384552,left_val:.4637751877307892},{features:[[8,15,4,2,-1],[8,16,4,1,2]],threshold:.0011732629500329494,right_val:.5914415717124939,left_val:.4544503092765808},{features:[[5,2,8,2,-1],[5,2,4,1,2],[9,3,4,1,2]],threshold:.000869981711730361,right_val:.3885917961597443,left_val:.5334752798080444},{features:[[6,11,8,6,-1],[6,14,8,3,2]],threshold:.0007637834060005844,right_val:.374494194984436,left_val:.5398585200309753},{features:[[9,13,2,2,-1],[9,14,2,1,2]],threshold:.00015684569370932877,right_val:.5614616274833679,left_val:.4317873120307922},{features:[[18,4,2,6,-1],[18,6,2,2,3]],threshold:-.0215113703161478,right_val:.5185542702674866,left_val:.1785925030708313},{features:[[9,12,2,2,-1],[9,13,2,1,2]],threshold:.00013081369979772717,right_val:.5682849884033203,left_val:.4342499077320099},{features:[[18,4,2,6,-1],[18,6,2,2,3]],threshold:.021992040798068,right_val:.2379394024610519,left_val:.5161716938018799},{features:[[9,13,1,3,-1],[9,14,1,1,3]],threshold:-.0008013650076463819,right_val:.4466426968574524,left_val:.598676323890686},{features:[[18,4,2,6,-1],[18,6,2,2,3]],threshold:-.008273609913885593,right_val:.5251057147979736,left_val:.410821795463562},{features:[[0,4,2,6,-1],[0,6,2,2,3]],threshold:.0036831789184361696,right_val:.339751809835434,left_val:.5173814296722412},{features:[[9,12,3,3,-1],[9,13,3,1,3]],threshold:-.007952568121254444,right_val:.4845924079418182,left_val:.6888983249664307},{features:[[3,13,2,3,-1],[3,14,2,1,3]],threshold:.0015382299898192286,right_val:.3454113900661469,left_val:.5178567171096802},{features:[[13,13,4,3,-1],[13,14,4,1,3]],threshold:-.0140435304492712,right_val:.518866777420044,left_val:.1678421050310135},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.0014315890148282051,right_val:.5655773878097534,left_val:.436825692653656},{features:[[5,2,10,6,-1],[5,4,10,2,3]],threshold:-.0340142287313938,right_val:.4959217011928558,left_val:.7802296280860901},{features:[[3,13,4,3,-1],[3,14,4,1,3]],threshold:-.0120272999629378,right_val:.503223180770874,left_val:.1585101038217545},{features:[[3,7,15,5,-1],[8,7,5,5,3]],threshold:.1331661939620972,right_val:.2755128145217896,left_val:.5163304805755615},{features:[[3,7,12,2,-1],[7,7,4,2,3]],threshold:-.0015221949433907866,right_val:.5214552283287048,left_val:.372831791639328},{features:[[10,3,3,9,-1],[11,3,1,9,3]],threshold:-.000939292716793716,right_val:.4511165022850037,left_val:.5838379263877869},{features:[[8,6,4,6,-1],[10,6,2,6,2]],threshold:.0277197398245335,right_val:.7331544756889343,left_val:.4728286862373352},{features:[[9,7,4,3,-1],[9,8,4,1,3]],threshold:.003103015013039112,right_val:.4101563096046448,left_val:.5302202105522156},{features:[[0,9,4,9,-1],[2,9,2,9,2]],threshold:.0778612196445465,right_val:.127296194434166,left_val:.4998334050178528},{features:[[9,13,3,5,-1],[10,13,1,5,3]],threshold:-.0158549398183823,right_val:.5165656208992004,left_val:.0508333593606949},{features:[[7,7,6,3,-1],[9,7,2,3,3]],threshold:-.00497253006324172,right_val:.4684231877326965,left_val:.6798133850097656},{features:[[9,7,3,5,-1],[10,7,1,5,3]],threshold:-.0009767650626599789,right_val:.4788931906223297,left_val:.6010771989822388},{features:[[5,7,8,2,-1],[9,7,4,2,2]],threshold:-.0024647710379213095,right_val:.5220503807067871,left_val:.3393397927284241},{features:[[5,9,12,2,-1],[9,9,4,2,3]],threshold:-.006793770007789135,right_val:.5239663124084473,left_val:.4365136921405792},{features:[[5,6,10,3,-1],[10,6,5,3,2]],threshold:.0326080210506916,right_val:.2425214946269989,left_val:.505272388458252},{features:[[10,12,3,1,-1],[11,12,1,1,3]],threshold:-.0005851442110724747,right_val:.4758574068546295,left_val:.5733973979949951},{features:[[0,1,11,15,-1],[0,6,11,5,3]],threshold:-.0296326000243425,right_val:.5263597965240479,left_val:.3892289102077484}],threshold:66.66912078857422},{simpleClassifiers:[{features:[[1,0,18,6,-1],[7,0,6,6,3]],threshold:.0465508513152599,right_val:.6240522861480713,left_val:.3276950120925903},{features:[[7,7,6,1,-1],[9,7,2,1,3]],threshold:.007953712716698647,right_val:.6942939162254333,left_val:.4256485104560852},{features:[[5,16,6,4,-1],[5,16,3,2,2],[8,18,3,2,2]],threshold:.0006822156137786806,right_val:.59007328748703,left_val:.3711487054824829},{features:[[6,5,9,8,-1],[6,9,9,4,2]],threshold:-.00019348249770700932,right_val:.53005450963974,left_val:.2041133940219879},{features:[[5,10,2,6,-1],[5,13,2,3,2]],threshold:-.0002671050897333771,right_val:.3103179037570953,left_val:.5416126251220703},{features:[[7,6,8,10,-1],[11,6,4,5,2],[7,11,4,5,2]],threshold:.0027818060480058193,right_val:.3467069864273071,left_val:.5277832746505737},{features:[[5,6,8,10,-1],[5,6,4,5,2],[9,11,4,5,2]],threshold:-.000467790785478428,right_val:.3294492065906525,left_val:.5308231115341187},{features:[[9,5,2,2,-1],[9,6,2,1,2]],threshold:-30335160772665404e-21,right_val:.3852097094058991,left_val:.577387273311615},{features:[[5,12,8,2,-1],[5,13,8,1,2]],threshold:.0007803800981491804,right_val:.6150057911872864,left_val:.4317438900470734},{features:[[10,2,8,2,-1],[10,3,8,1,2]],threshold:-.004255385138094425,right_val:.5324292778968811,left_val:.2933903932571411},{features:[[4,0,2,10,-1],[4,0,1,5,2],[5,5,1,5,2]],threshold:-.0002473561035003513,right_val:.3843030035495758,left_val:.5468844771385193},{features:[[9,10,2,2,-1],[9,11,2,1,2]],threshold:-.00014724259381182492,right_val:.5755587220191956,left_val:.4281542897224426},{features:[[2,8,15,3,-1],[2,9,15,1,3]],threshold:.0011864770203828812,right_val:.5471466183662415,left_val:.374730110168457},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.0023936580400913954,right_val:.6111528873443604,left_val:.4537783861160278},{features:[[7,2,3,2,-1],[8,2,1,2,3]],threshold:-.0015390539774671197,right_val:.518953800201416,left_val:.2971341907978058},{features:[[7,13,6,3,-1],[7,14,6,1,3]],threshold:-.007196879014372826,right_val:.4726476967334747,left_val:.6699066758155823},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.0004149978922214359,right_val:.5260317921638489,left_val:.3384954035282135},{features:[[17,2,3,6,-1],[17,4,3,2,3]],threshold:.004435983020812273,right_val:.3920140862464905,left_val:.539912223815918},{features:[[1,5,3,4,-1],[2,5,1,4,3]],threshold:.0026606200262904167,right_val:.6119617819786072,left_val:.4482578039169312},{features:[[14,8,4,6,-1],[14,10,4,2,3]],threshold:-.0015287200221791863,right_val:.5340266227722168,left_val:.3711237907409668},{features:[[1,4,3,8,-1],[2,4,1,8,3]],threshold:-.0047397250309586525,right_val:.4455145001411438,left_val:.603108823299408},{features:[[8,13,4,6,-1],[8,16,4,3,2]],threshold:-.0148291299119592,right_val:.5341861844062805,left_val:.2838754057884216},{features:[[3,14,2,2,-1],[3,15,2,1,2]],threshold:.0009227555710822344,right_val:.3361653983592987,left_val:.5209547281265259},{features:[[14,8,4,6,-1],[14,10,4,2,3]],threshold:.0835298076272011,right_val:.0811644494533539,left_val:.5119969844818115},{features:[[2,8,4,6,-1],[2,10,4,2,3]],threshold:-.0007563314866274595,right_val:.5189831256866455,left_val:.331712007522583},{features:[[10,14,1,6,-1],[10,17,1,3,2]],threshold:.009840385988354683,right_val:.233495905995369,left_val:.524759829044342},{features:[[7,5,3,6,-1],[8,5,1,6,3]],threshold:-.0015953830443322659,right_val:.4295622110366821,left_val:.5750094056129456},{features:[[11,2,2,6,-1],[12,2,1,3,2],[11,5,1,3,2]],threshold:34766020689858124e-21,right_val:.5564029216766357,left_val:.4342445135116577},{features:[[6,6,6,5,-1],[8,6,2,5,3]],threshold:.0298629105091095,right_val:.6579188108444214,left_val:.4579147100448608},{features:[[17,1,3,6,-1],[17,3,3,2,3]],threshold:.0113255903124809,right_val:.3673888146877289,left_val:.5274311900138855},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:-.008782864548265934,right_val:.4642167091369629,left_val:.7100368738174438},{features:[[9,18,3,2,-1],[10,18,1,2,3]],threshold:.004363995976746082,right_val:.2705877125263214,left_val:.5279216170310974},{features:[[8,18,3,2,-1],[9,18,1,2,3]],threshold:.004180472809821367,right_val:.2449083030223846,left_val:.5072525143623352},{features:[[12,3,5,2,-1],[12,4,5,1,2]],threshold:-.0004566851130221039,right_val:.5548691153526306,left_val:.4283105134963989},{features:[[7,1,5,12,-1],[7,7,5,6,2]],threshold:-.0037140368949621916,right_val:.4103653132915497,left_val:.5519387722015381},{features:[[1,0,18,4,-1],[7,0,6,4,3]],threshold:-.025304289534688,right_val:.48698890209198,left_val:.6867002248764038},{features:[[4,2,2,2,-1],[4,3,2,1,2]],threshold:-.0003445408074185252,right_val:.528769314289093,left_val:.3728874027729034},{features:[[11,14,4,2,-1],[13,14,2,1,2],[11,15,2,1,2]],threshold:-.0008393523166887462,right_val:.4616062045097351,left_val:.6060152053833008},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.0172800496220589,right_val:.1819823980331421,left_val:.5049635767936707},{features:[[9,7,2,3,-1],[9,8,2,1,3]],threshold:-.006359507795423269,right_val:.5232778787612915,left_val:.1631239950656891},{features:[[5,5,1,3,-1],[5,6,1,1,3]],threshold:.0010298109846189618,right_val:.6176549196243286,left_val:.446327805519104},{features:[[10,10,6,1,-1],[10,10,3,1,2]],threshold:.0010117109632119536,right_val:.4300698935985565,left_val:.5473384857177734},{features:[[4,10,6,1,-1],[7,10,3,1,2]],threshold:-.010308800265193,right_val:.5000867247581482,left_val:.1166985034942627},{features:[[9,17,3,3,-1],[9,18,3,1,3]],threshold:.005468201823532581,right_val:.6719213724136353,left_val:.4769287109375},{features:[[4,14,1,3,-1],[4,15,1,1,3]],threshold:-.0009169646073132753,right_val:.5178164839744568,left_val:.3471089899539948},{features:[[12,5,3,3,-1],[12,6,3,1,3]],threshold:.002392282010987401,right_val:.6216310858726501,left_val:.4785236120223999},{features:[[4,5,12,3,-1],[4,6,12,1,3]],threshold:-.007557381875813007,right_val:.4410085082054138,left_val:.5814796090126038},{features:[[9,8,2,3,-1],[9,9,2,1,3]],threshold:-.0007702403236180544,right_val:.546572208404541,left_val:.387800008058548},{features:[[4,9,3,3,-1],[5,9,1,3,3]],threshold:-.00871259905397892,right_val:.4995836019515991,left_val:.1660051047801971},{features:[[6,0,9,17,-1],[9,0,3,17,3]],threshold:-.0103063201531768,right_val:.5274233818054199,left_val:.4093391001224518},{features:[[9,12,1,3,-1],[9,13,1,1,3]],threshold:-.002094097901135683,right_val:.4572280049324036,left_val:.6206194758415222},{features:[[9,5,2,15,-1],[9,10,2,5,3]],threshold:.006809905171394348,right_val:.4155600070953369,left_val:.5567759275436401},{features:[[8,14,2,3,-1],[8,15,2,1,3]],threshold:-.0010746059706434608,right_val:.4353024959564209,left_val:.5638927817344666},{features:[[10,14,1,3,-1],[10,15,1,1,3]],threshold:.0021550289820879698,right_val:.6749758124351501,left_val:.4826265871524811},{features:[[7,1,6,5,-1],[9,1,2,5,3]],threshold:.0317423194646835,right_val:.188324898481369,left_val:.5048379898071289},{features:[[0,0,20,2,-1],[0,0,10,2,2]],threshold:-.0783827230334282,right_val:.5260158181190491,left_val:.2369548976421356},{features:[[2,13,5,3,-1],[2,14,5,1,3]],threshold:.005741511937230825,right_val:.2776469886302948,left_val:.5048828721046448},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.0029014600440859795,right_val:.4693317115306854,left_val:.6238604784011841},{features:[[2,5,9,15,-1],[2,10,9,5,3]],threshold:-.0026427931152284145,right_val:.5169777274131775,left_val:.3314141929149628},{features:[[5,0,12,10,-1],[11,0,6,5,2],[5,5,6,5,2]],threshold:-.1094966009259224,right_val:.5183441042900085,left_val:.2380045056343079},{features:[[5,1,2,3,-1],[6,1,1,3,2]],threshold:7407591328956187e-20,right_val:.5362150073051453,left_val:.406963586807251},{features:[[10,7,6,1,-1],[12,7,2,1,3]],threshold:-.0005059380200691521,right_val:.437459409236908,left_val:.5506706237792969},{features:[[3,1,2,10,-1],[3,1,1,5,2],[4,6,1,5,2]],threshold:-.0008213177789002657,right_val:.4209375977516174,left_val:.5525709986686707},{features:[[13,7,2,1,-1],[13,7,1,1,2]],threshold:-60276539443293586e-21,right_val:.4748266041278839,left_val:.5455474853515625},{features:[[4,13,4,6,-1],[4,15,4,2,3]],threshold:.006806514225900173,right_val:.3424577116966248,left_val:.5157995820045471},{features:[[13,7,2,1,-1],[13,7,1,1,2]],threshold:.0017202789895236492,right_val:.6331263780593872,left_val:.5013207793235779},{features:[[5,7,2,1,-1],[6,7,1,1,2]],threshold:-.0001301692973356694,right_val:.4226869940757752,left_val:.5539718270301819},{features:[[2,12,18,4,-1],[11,12,9,2,2],[2,14,9,2,2]],threshold:-.004801638890057802,right_val:.5430780053138733,left_val:.4425095021724701},{features:[[5,7,2,2,-1],[5,7,1,1,2],[6,8,1,1,2]],threshold:-.002539931097999215,right_val:.4697605073451996,left_val:.7145782113075256},{features:[[16,3,4,2,-1],[16,4,4,1,2]],threshold:-.0014278929447755218,right_val:.539960503578186,left_val:.4070445001125336},{features:[[0,2,2,18,-1],[0,2,1,9,2],[1,11,1,9,2]],threshold:-.0251425504684448,right_val:.4747352004051209,left_val:.7884690761566162},{features:[[1,2,18,4,-1],[10,2,9,2,2],[1,4,9,2,2]],threshold:-.0038899609353393316,right_val:.5577110052108765,left_val:.4296191930770874},{features:[[9,14,1,3,-1],[9,15,1,1,3]],threshold:.004394745919853449,right_val:.702394425868988,left_val:.4693162143230438},{features:[[2,12,18,4,-1],[11,12,9,2,2],[2,14,9,2,2]],threshold:.0246784202754498,right_val:.3812510073184967,left_val:.5242322087287903},{features:[[0,12,18,4,-1],[0,12,9,2,2],[9,14,9,2,2]],threshold:.0380476787686348,right_val:.1687828004360199,left_val:.5011739730834961},{features:[[11,4,5,3,-1],[11,5,5,1,3]],threshold:.007942486554384232,right_val:.6369568109512329,left_val:.4828582108020783},{features:[[6,4,7,3,-1],[6,5,7,1,3]],threshold:-.0015110049862414598,right_val:.4487667977809906,left_val:.5906485915184021},{features:[[13,17,3,3,-1],[13,18,3,1,3]],threshold:.0064201741479337215,right_val:.2990570068359375,left_val:.5241097807884216},{features:[[8,1,3,4,-1],[9,1,1,4,3]],threshold:-.0029802159406244755,right_val:.5078489780426025,left_val:.3041465878486633},{features:[[11,4,2,4,-1],[11,4,1,4,2]],threshold:-.0007458007894456387,right_val:.5256826281547546,left_val:.4128139019012451},{features:[[0,17,9,3,-1],[3,17,3,3,3]],threshold:-.0104709500446916,right_val:.4494296014308929,left_val:.5808395147323608},{features:[[11,0,2,8,-1],[12,0,1,4,2],[11,4,1,4,2]],threshold:.009336920455098152,right_val:.265894889831543,left_val:.524655282497406},{features:[[0,8,6,12,-1],[0,8,3,6,2],[3,14,3,6,2]],threshold:.0279369000345469,right_val:.7087256908416748,left_val:.4674955010414124},{features:[[10,7,4,12,-1],[10,13,4,6,2]],threshold:.007427767850458622,right_val:.3758518099784851,left_val:.5409486889839172},{features:[[5,3,8,14,-1],[5,10,8,7,2]],threshold:-.0235845092684031,right_val:.5238550901412964,left_val:.3758639991283417},{features:[[14,10,6,1,-1],[14,10,3,1,2]],threshold:.0011452640173956752,right_val:.5804247260093689,left_val:.4329578876495361},{features:[[0,4,10,4,-1],[0,6,10,2,2]],threshold:-.0004346866044215858,right_val:.3873069882392883,left_val:.5280618071556091},{features:[[10,0,5,8,-1],[10,4,5,4,2]],threshold:.0106485402211547,right_val:.5681251883506775,left_val:.4902113080024719},{features:[[8,1,4,8,-1],[8,1,2,4,2],[10,5,2,4,2]],threshold:-.0003941805043723434,right_val:.4318251013755798,left_val:.5570880174636841},{features:[[9,11,6,1,-1],[11,11,2,1,3]],threshold:-.00013270479394122958,right_val:.4343554973602295,left_val:.5658439993858337},{features:[[8,9,3,4,-1],[9,9,1,4,3]],threshold:-.002012551063671708,right_val:.4537523984909058,left_val:.6056739091873169},{features:[[18,4,2,6,-1],[18,6,2,2,3]],threshold:.0024854319635778666,right_val:.4138010144233704,left_val:.5390477180480957},{features:[[8,8,3,4,-1],[9,8,1,4,3]],threshold:.0018237880431115627,right_val:.5717188715934753,left_val:.4354828894138336},{features:[[7,1,13,3,-1],[7,2,13,1,3]],threshold:-.0166566595435143,right_val:.521612286567688,left_val:.3010913133621216},{features:[[7,13,6,1,-1],[9,13,2,1,3]],threshold:.0008034955826587975,right_val:.3818396925926209,left_val:.5300151109695435},{features:[[12,11,3,6,-1],[12,13,3,2,3]],threshold:.003417037893086672,right_val:.4241400063037872,left_val:.5328028798103333},{features:[[5,11,6,1,-1],[7,11,2,1,3]],threshold:-.00036222729249857366,right_val:.418697714805603,left_val:.5491728186607361},{features:[[1,4,18,10,-1],[10,4,9,5,2],[1,9,9,5,2]],threshold:-.1163002029061317,right_val:.522645115852356,left_val:.1440722048282623},{features:[[8,6,4,9,-1],[8,9,4,3,3]],threshold:-.0146950101479888,right_val:.4715717136859894,left_val:.7747725248336792},{features:[[8,6,4,3,-1],[8,7,4,1,3]],threshold:.0021972130052745342,right_val:.3315644860267639,left_val:.5355433821678162},{features:[[8,7,3,3,-1],[9,7,1,3,3]],threshold:-.00046965209185145795,right_val:.4458136856555939,left_val:.5767235159873962},{features:[[14,15,4,3,-1],[14,16,4,1,3]],threshold:.006514499895274639,right_val:.3647888898849487,left_val:.5215674042701721},{features:[[5,10,3,10,-1],[6,10,1,10,3]],threshold:.0213000606745481,right_val:.1567950993776321,left_val:.4994204938411713},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:.0031881409231573343,right_val:.6287270188331604,left_val:.4742200076580048},{features:[[0,8,1,6,-1],[0,10,1,2,3]],threshold:.0009001977741718292,right_val:.394375205039978,left_val:.5347954034805298},{features:[[10,15,1,3,-1],[10,16,1,1,3]],threshold:-.005177227780222893,right_val:.5013138055801392,left_val:.6727191805839539},{features:[[2,15,4,3,-1],[2,16,4,1,3]],threshold:-.004376464989036322,right_val:.5128793120384216,left_val:.3106675148010254},{features:[[18,3,2,8,-1],[19,3,1,4,2],[18,7,1,4,2]],threshold:.002629996044561267,right_val:.5755215883255005,left_val:.488631010055542},{features:[[0,3,2,8,-1],[0,3,1,4,2],[1,7,1,4,2]],threshold:-.002045868895947933,right_val:.4558076858520508,left_val:.6025794148445129},{features:[[3,7,14,10,-1],[10,7,7,5,2],[3,12,7,5,2]],threshold:.0694827064871788,right_val:.2185259014368057,left_val:.5240747928619385},{features:[[0,7,19,3,-1],[0,8,19,1,3]],threshold:.0240489393472672,right_val:.2090622037649155,left_val:.501186728477478},{features:[[12,6,3,3,-1],[12,7,3,1,3]],threshold:.003109534038230777,right_val:.7108548283576965,left_val:.4866712093353272},{features:[[0,6,1,3,-1],[0,7,1,1,3]],threshold:-.00125032605137676,right_val:.5156195163726807,left_val:.3407891094684601},{features:[[12,6,3,3,-1],[12,7,3,1,3]],threshold:-.0010281190043315291,right_val:.443943202495575,left_val:.557557225227356},{features:[[5,6,3,3,-1],[5,7,3,1,3]],threshold:-.008889362215995789,right_val:.4620442092418671,left_val:.6402000784873962},{features:[[8,2,4,2,-1],[8,3,4,1,2]],threshold:-.0006109480164013803,right_val:.5448899865150452,left_val:.3766441941261292},{features:[[6,3,4,12,-1],[8,3,2,12,2]],threshold:-.005768635775893927,right_val:.5133677124977112,left_val:.3318648934364319},{features:[[13,6,2,3,-1],[13,7,2,1,3]],threshold:.0018506490159779787,right_val:.6406934857368469,left_val:.4903570115566254},{features:[[0,10,20,4,-1],[0,12,20,2,2]],threshold:-.0997994691133499,right_val:.5015562176704407,left_val:.1536051034927368},{features:[[2,0,17,14,-1],[2,7,17,7,2]],threshold:-.3512834906578064,right_val:.5174378752708435,left_val:.0588231310248375},{features:[[0,0,6,10,-1],[0,0,3,5,2],[3,5,3,5,2]],threshold:-.0452445708215237,right_val:.4677872955799103,left_val:.6961488723754883},{features:[[14,6,6,4,-1],[14,6,3,4,2]],threshold:.0714815780520439,right_val:.1038092970848084,left_val:.5167986154556274},{features:[[0,6,6,4,-1],[3,6,3,4,2]],threshold:.0021895780228078365,right_val:.5532060861587524,left_val:.4273078143596649},{features:[[13,2,7,2,-1],[13,3,7,1,2]],threshold:-.0005924265133216977,right_val:.5276389122009277,left_val:.46389439702034},{features:[[0,2,7,2,-1],[0,3,7,1,2]],threshold:.0016788389766588807,right_val:.3932034969329834,left_val:.530164897441864},{features:[[6,11,14,2,-1],[13,11,7,1,2],[6,12,7,1,2]],threshold:-.0022163488902151585,right_val:.4757033884525299,left_val:.5630694031715393},{features:[[8,5,2,2,-1],[8,5,1,1,2],[9,6,1,1,2]],threshold:.00011568699846975505,right_val:.5535702705383301,left_val:.4307535886764526},{features:[[13,9,2,3,-1],[13,9,1,3,2]],threshold:-.007201728876680136,right_val:.5193064212799072,left_val:.144488200545311},{features:[[1,1,3,12,-1],[2,1,1,12,3]],threshold:.0008908127201721072,right_val:.5593621134757996,left_val:.4384432137012482},{features:[[17,4,1,3,-1],[17,5,1,1,3]],threshold:.00019605009583756328,right_val:.4705956876277924,left_val:.5340415835380554},{features:[[2,4,1,3,-1],[2,5,1,1,3]],threshold:.0005202214233577251,right_val:.3810079097747803,left_val:.5213856101036072},{features:[[14,5,1,3,-1],[14,6,1,1,3]],threshold:.0009458857239224017,right_val:.6130738854408264,left_val:.4769414961338043},{features:[[7,16,2,3,-1],[7,17,2,1,3]],threshold:916984718060121e-19,right_val:.5429363250732422,left_val:.4245009124279022},{features:[[8,13,4,6,-1],[10,13,2,3,2],[8,16,2,3,2]],threshold:.002183320000767708,right_val:.419107586145401,left_val:.5457730889320374},{features:[[5,5,1,3,-1],[5,6,1,1,3]],threshold:-.0008603967144154012,right_val:.4471659958362579,left_val:.5764588713645935},{features:[[16,0,4,20,-1],[16,0,2,20,2]],threshold:-.0132362395524979,right_val:.4695009887218475,left_val:.6372823119163513},{features:[[5,1,2,6,-1],[5,1,1,3,2],[6,4,1,3,2]],threshold:.0004337670106906444,right_val:.394582986831665,left_val:.5317873954772949}],threshold:67.69892120361328},{simpleClassifiers:[{features:[[5,4,10,4,-1],[5,6,10,2,2]],threshold:-.024847149848938,right_val:.3873311877250671,left_val:.6555516719818115},{features:[[15,2,4,12,-1],[15,2,2,12,2]],threshold:.006134861148893833,right_val:.5973997712135315,left_val:.374807208776474},{features:[[7,6,4,12,-1],[7,12,4,6,2]],threshold:.006449849810451269,right_val:.2548811137676239,left_val:.542549192905426},{features:[[14,5,1,8,-1],[14,9,1,4,2]],threshold:.0006349121103994548,right_val:.5387253761291504,left_val:.2462442070245743},{features:[[1,4,14,10,-1],[1,4,7,5,2],[8,9,7,5,2]],threshold:.0014023890253156424,right_val:.3528657853603363,left_val:.5594322085380554},{features:[[11,6,6,14,-1],[14,6,3,7,2],[11,13,3,7,2]],threshold:.0003004400059580803,right_val:.576593816280365,left_val:.3958503901958466},{features:[[3,6,6,14,-1],[3,6,3,7,2],[6,13,3,7,2]],threshold:.00010042409849120304,right_val:.5534998178482056,left_val:.3698996901512146},{features:[[4,9,15,2,-1],[9,9,5,2,3]],threshold:-.005084149073809385,right_val:.5547800064086914,left_val:.3711090981960297},{features:[[7,14,6,3,-1],[7,15,6,1,3]],threshold:-.0195372607558966,right_val:.4579297006130219,left_val:.7492755055427551},{features:[[6,3,14,4,-1],[13,3,7,2,2],[6,5,7,2,2]],threshold:-7453274065483129e-21,right_val:.390406996011734,left_val:.5649787187576294},{features:[[1,9,15,2,-1],[6,9,5,2,3]],threshold:-.0036079459823668003,right_val:.5267801284790039,left_val:.3381088078022003},{features:[[6,11,8,9,-1],[6,14,8,3,3]],threshold:.002069750102236867,right_val:.3714388906955719,left_val:.5519291162490845},{features:[[7,4,3,8,-1],[8,4,1,8,3]],threshold:-.0004646384040825069,right_val:.4113566875457764,left_val:.5608214735984802},{features:[[14,6,2,6,-1],[14,9,2,3,2]],threshold:.0007549045258201659,right_val:.532935619354248,left_val:.3559206128120422},{features:[[5,7,6,4,-1],[5,7,3,2,2],[8,9,3,2,2]],threshold:-.0009832223877310753,right_val:.3763205111026764,left_val:.5414795875549316},{features:[[1,1,18,19,-1],[7,1,6,19,3]],threshold:-.0199406407773495,right_val:.4705299139022827,left_val:.634790301322937},{features:[[1,2,6,5,-1],[4,2,3,5,2]],threshold:.0037680300883948803,right_val:.5563716292381287,left_val:.3913489878177643},{features:[[12,17,6,2,-1],[12,18,6,1,2]],threshold:-.009452850557863712,right_val:.5215116739273071,left_val:.2554892897605896},{features:[[2,17,6,2,-1],[2,18,6,1,2]],threshold:.002956084907054901,right_val:.3063920140266419,left_val:.5174679160118103},{features:[[17,3,3,6,-1],[17,5,3,2,3]],threshold:.009107873775064945,right_val:.2885963022708893,left_val:.5388448238372803},{features:[[8,17,3,3,-1],[8,18,3,1,3]],threshold:.0018219229532405734,right_val:.58521968126297,left_val:.4336043000221252},{features:[[10,13,2,6,-1],[10,16,2,3,2]],threshold:.0146887395530939,right_val:.2870005965232849,left_val:.5287361741065979},{features:[[7,13,6,3,-1],[7,14,6,1,3]],threshold:-.0143879903480411,right_val:.4647370874881744,left_val:.701944887638092},{features:[[17,3,3,6,-1],[17,5,3,2,3]],threshold:-.0189866498112679,right_val:.5247011780738831,left_val:.2986552119255066},{features:[[8,13,2,3,-1],[8,14,2,1,3]],threshold:.0011527639580890536,right_val:.593166172504425,left_val:.4323473870754242},{features:[[9,3,6,2,-1],[11,3,2,2,3]],threshold:.0109336702153087,right_val:.3130319118499756,left_val:.5286864042282104},{features:[[0,3,3,6,-1],[0,5,3,2,3]],threshold:-.0149327302351594,right_val:.508407711982727,left_val:.2658419013023377},{features:[[8,5,4,6,-1],[8,7,4,2,3]],threshold:-.0002997053961735219,right_val:.374072402715683,left_val:.5463526844978333},{features:[[5,5,3,2,-1],[5,6,3,1,2]],threshold:.004167762119323015,right_val:.7435721755027771,left_val:.4703496992588043},{features:[[10,1,3,4,-1],[11,1,1,4,3]],threshold:-.00639053201302886,right_val:.5280538201332092,left_val:.2069258987903595},{features:[[1,2,5,9,-1],[1,5,5,3,3]],threshold:.004502960946410894,right_val:.348354309797287,left_val:.518264889717102},{features:[[13,6,2,3,-1],[13,7,2,1,3]],threshold:-.009204036556184292,right_val:.4932360053062439,left_val:.680377721786499},{features:[[0,6,14,3,-1],[7,6,7,3,2]],threshold:.0813272595405579,right_val:.2253051996231079,left_val:.5058398842811584},{features:[[2,11,18,8,-1],[2,15,18,4,2]],threshold:-.150792807340622,right_val:.5264679789543152,left_val:.2963424921035767},{features:[[5,6,2,3,-1],[5,7,2,1,3]],threshold:.0033179009333252907,right_val:.7072932124137878,left_val:.4655495882034302},{features:[[10,6,4,2,-1],[12,6,2,1,2],[10,7,2,1,2]],threshold:.0007740280125290155,right_val:.5668237805366516,left_val:.4780347943305969},{features:[[6,6,4,2,-1],[6,6,2,1,2],[8,7,2,1,2]],threshold:.0006819954141974449,right_val:.5722156763076782,left_val:.4286996126174927},{features:[[10,1,3,4,-1],[11,1,1,4,3]],threshold:.0053671570494771,right_val:.3114621937274933,left_val:.5299307107925415},{features:[[7,1,2,7,-1],[8,1,1,7,2]],threshold:9701866656541824e-20,right_val:.5269461870193481,left_val:.3674638867378235},{features:[[4,2,15,14,-1],[4,9,15,7,2]],threshold:-.1253408938646317,right_val:.5245791077613831,left_val:.2351492047309876},{features:[[8,7,3,2,-1],[9,7,1,2,3]],threshold:-.005251626949757338,right_val:.4693767130374908,left_val:.7115936875343323},{features:[[2,3,18,4,-1],[11,3,9,2,2],[2,5,9,2,2]],threshold:-.007834210991859436,right_val:.5409085750579834,left_val:.4462651014328003},{features:[[9,7,2,2,-1],[10,7,1,2,2]],threshold:-.001131006982177496,right_val:.4417662024497986,left_val:.5945618748664856},{features:[[13,9,2,3,-1],[13,9,1,3,2]],threshold:.0017601120052859187,right_val:.3973453044891357,left_val:.5353249907493591},{features:[[5,2,6,2,-1],[7,2,2,2,3]],threshold:-.00081581249833107,right_val:.5264726877212524,left_val:.3760268092155457},{features:[[9,5,2,7,-1],[9,5,1,7,2]],threshold:-.003868758911266923,right_val:.4749819934368134,left_val:.6309912800788879},{features:[[5,9,2,3,-1],[6,9,1,3,2]],threshold:.0015207129763439298,right_val:.3361223936080933,left_val:.5230181813240051},{features:[[6,0,14,18,-1],[6,9,14,9,2]],threshold:.545867383480072,right_val:.1172635033726692,left_val:.5167139768600464},{features:[[2,16,6,3,-1],[2,17,6,1,3]],threshold:.0156501904129982,right_val:.1393294930458069,left_val:.4979439079761505},{features:[[9,7,3,6,-1],[10,7,1,6,3]],threshold:-.0117318602278829,right_val:.4921196103096008,left_val:.7129650712013245},{features:[[7,8,4,3,-1],[7,9,4,1,3]],threshold:-.006176512222737074,right_val:.5049701929092407,left_val:.2288102954626083},{features:[[7,12,6,3,-1],[7,13,6,1,3]],threshold:.0022457661107182503,right_val:.6048725843429565,left_val:.4632433950901032},{features:[[9,12,2,3,-1],[9,13,2,1,3]],threshold:-.005191586911678314,right_val:.4602192938327789,left_val:.6467421054840088},{features:[[7,12,6,2,-1],[9,12,2,2,3]],threshold:-.0238278806209564,right_val:.5226079225540161,left_val:.1482000946998596},{features:[[5,11,4,6,-1],[5,14,4,3,2]],threshold:.0010284580057486892,right_val:.3375957012176514,left_val:.5135489106178284},{features:[[11,12,7,2,-1],[11,13,7,1,2]],threshold:-.0100788502022624,right_val:.5303567051887512,left_val:.2740561068058014},{features:[[6,10,8,6,-1],[6,10,4,3,2],[10,13,4,3,2]],threshold:.002616893034428358,right_val:.3972454071044922,left_val:.533267080783844},{features:[[11,10,3,4,-1],[11,12,3,2,2]],threshold:.000543853675480932,right_val:.4063411951065064,left_val:.5365604162216187},{features:[[9,16,2,3,-1],[9,17,2,1,3]],threshold:.005351051222532988,right_val:.6889045834541321,left_val:.4653759002685547},{features:[[13,3,1,9,-1],[13,6,1,3,3]],threshold:-.0015274790348485112,right_val:.3624723851680756,left_val:.5449501276016235},{features:[[1,13,14,6,-1],[1,15,14,2,3]],threshold:-.0806244164705276,right_val:.5000287294387817,left_val:.1656087040901184},{features:[[13,6,1,6,-1],[13,9,1,3,2]],threshold:.0221920292824507,right_val:.2002808004617691,left_val:.5132731199264526},{features:[[0,4,3,8,-1],[1,4,1,8,3]],threshold:.007310063112527132,right_val:.6366536021232605,left_val:.4617947936058044},{features:[[18,0,2,18,-1],[18,0,1,18,2]],threshold:-.006406307220458984,right_val:.4867860972881317,left_val:.5916250944137573},{features:[[2,3,6,2,-1],[2,4,6,1,2]],threshold:-.0007641504053026438,right_val:.5315797924995422,left_val:.388840913772583},{features:[[9,0,8,6,-1],[9,2,8,2,3]],threshold:.0007673448999412358,right_val:.5605279803276062,left_val:.4159064888954163},{features:[[6,6,1,6,-1],[6,9,1,3,2]],threshold:.0006147450185380876,right_val:.5120148062705994,left_val:.3089022040367127},{features:[[14,8,6,3,-1],[14,9,6,1,3]],threshold:-.005010527092963457,right_val:.5207306146621704,left_val:.3972199857234955},{features:[[0,0,2,18,-1],[1,0,1,18,2]],threshold:-.008690913207828999,right_val:.4608575999736786,left_val:.6257408261299133},{features:[[1,18,18,2,-1],[10,18,9,1,2],[1,19,9,1,2]],threshold:-.016391459852457,right_val:.5242266058921814,left_val:.2085209935903549},{features:[[3,15,2,2,-1],[3,16,2,1,2]],threshold:.00040973909199237823,right_val:.3780320882797241,left_val:.5222427248954773},{features:[[8,14,5,3,-1],[8,15,5,1,3]],threshold:-.002524228999391198,right_val:.4611890017986298,left_val:.5803927183151245},{features:[[8,14,2,3,-1],[8,15,2,1,3]],threshold:.0005094531225040555,right_val:.5846015810966492,left_val:.4401271939277649},{features:[[12,3,3,3,-1],[13,3,1,3,3]],threshold:.001965641975402832,right_val:.4184590876102448,left_val:.5322325229644775},{features:[[7,5,6,2,-1],[9,5,2,2,3]],threshold:.0005629889783449471,right_val:.5234565734863281,left_val:.3741844892501831},{features:[[15,5,5,2,-1],[15,6,5,1,2]],threshold:-.0006794679793529212,right_val:.5356478095054626,left_val:.4631041884422302},{features:[[0,5,5,2,-1],[0,6,5,1,2]],threshold:.007285634987056255,right_val:.2377564013004303,left_val:.5044670104980469},{features:[[17,14,1,6,-1],[17,17,1,3,2]],threshold:-.0174594894051552,right_val:.5050435066223145,left_val:.7289121150970459},{features:[[2,9,9,3,-1],[5,9,3,3,3]],threshold:-.0254217498004436,right_val:.4678100049495697,left_val:.6667134761810303},{features:[[12,3,3,3,-1],[13,3,1,3,3]],threshold:-.0015647639520466328,right_val:.532362699508667,left_val:.4391759037971497},{features:[[0,0,4,18,-1],[2,0,2,18,2]],threshold:.0114443600177765,right_val:.5680012106895447,left_val:.4346440136432648},{features:[[17,6,1,3,-1],[17,7,1,1,3]],threshold:-.0006735255010426044,right_val:.5296812057495117,left_val:.44771409034729},{features:[[2,14,1,6,-1],[2,17,1,3,2]],threshold:.009319420903921127,right_val:.7462607026100159,left_val:.4740200042724609},{features:[[19,8,1,2,-1],[19,9,1,1,2]],threshold:.00013328490604180843,right_val:.475213497877121,left_val:.536506175994873},{features:[[5,3,3,3,-1],[6,3,1,3,3]],threshold:-.007881579920649529,right_val:.5015255212783813,left_val:.1752219051122665},{features:[[9,16,2,3,-1],[9,17,2,1,3]],threshold:-.005798568017780781,right_val:.4896200895309448,left_val:.7271236777305603},{features:[[2,6,1,3,-1],[2,7,1,1,3]],threshold:-.0003892249951604754,right_val:.5344941020011902,left_val:.4003908932209015},{features:[[12,4,8,2,-1],[16,4,4,1,2],[12,5,4,1,2]],threshold:-.0019288610201328993,right_val:.4803955852985382,left_val:.5605612993240356},{features:[[0,4,8,2,-1],[0,4,4,1,2],[4,5,4,1,2]],threshold:.008421415463089943,right_val:.7623608708381653,left_val:.4753246903419495},{features:[[2,16,18,4,-1],[2,18,18,2,2]],threshold:.008165587671101093,right_val:.419164389371872,left_val:.5393261909484863},{features:[[7,15,2,4,-1],[7,17,2,2,2]],threshold:.00048280550981871784,right_val:.5399821996688843,left_val:.4240800142288208},{features:[[4,0,14,3,-1],[4,1,14,1,3]],threshold:-.002718663075938821,right_val:.5424923896789551,left_val:.4244599938392639},{features:[[0,0,4,20,-1],[2,0,2,20,2]],threshold:-.0125072300434113,right_val:.4550411105155945,left_val:.5895841717720032},{features:[[12,4,4,8,-1],[14,4,2,4,2],[12,8,2,4,2]],threshold:-.0242865197360516,right_val:.518917977809906,left_val:.2647134959697723},{features:[[6,7,2,2,-1],[6,7,1,1,2],[7,8,1,1,2]],threshold:-.0029676330741494894,right_val:.4749749898910523,left_val:.734768271446228},{features:[[10,6,2,3,-1],[10,7,2,1,3]],threshold:-.0125289997085929,right_val:.5177599787712097,left_val:.2756049931049347},{features:[[8,7,3,2,-1],[8,8,3,1,2]],threshold:-.0010104000102728605,right_val:.5144724249839783,left_val:.3510560989379883},{features:[[8,2,6,12,-1],[8,8,6,6,2]],threshold:-.0021348530426621437,right_val:.466731995344162,left_val:.5637925863265991},{features:[[4,0,11,12,-1],[4,4,11,4,3]],threshold:.0195642597973347,right_val:.6137639880180359,left_val:.4614573121070862},{features:[[14,9,6,11,-1],[16,9,2,11,3]],threshold:-.0971463471651077,right_val:.5193555951118469,left_val:.2998378872871399},{features:[[0,14,4,3,-1],[0,15,4,1,3]],threshold:.00450145686045289,right_val:.3045755922794342,left_val:.5077884793281555},{features:[[9,10,2,3,-1],[9,11,2,1,3]],threshold:.006370697170495987,right_val:.6887500882148743,left_val:.486101895570755},{features:[[5,11,3,2,-1],[5,12,3,1,2]],threshold:-.009072152897715569,right_val:.5017563104629517,left_val:.1673395931720734},{features:[[9,15,3,3,-1],[10,15,1,3,3]],threshold:-.005353720858693123,right_val:.524263322353363,left_val:.2692756950855255},{features:[[8,8,3,4,-1],[9,8,1,4,3]],threshold:-.0109328404068947,right_val:.4736028909683228,left_val:.7183864116668701},{features:[[9,15,3,3,-1],[10,15,1,3,3]],threshold:.008235607296228409,right_val:.2389862984418869,left_val:.5223966836929321},{features:[[7,7,3,2,-1],[8,7,1,2,3]],threshold:-.0010038160253316164,right_val:.4433943033218384,left_val:.5719355940818787},{features:[[2,10,16,4,-1],[10,10,8,2,2],[2,12,8,2,2]],threshold:.004085912834852934,right_val:.4148836135864258,left_val:.5472841858863831},{features:[[2,3,4,17,-1],[4,3,2,17,2]],threshold:.1548541933298111,right_val:.0610615983605385,left_val:.4973812103271484},{features:[[15,13,2,7,-1],[15,13,1,7,2]],threshold:.00020897459762636572,right_val:.542388916015625,left_val:.4709174036979675},{features:[[2,2,6,1,-1],[5,2,3,1,2]],threshold:.0003331699117552489,right_val:.5300992131233215,left_val:.4089626967906952},{features:[[5,2,12,4,-1],[9,2,4,4,3]],threshold:-.0108134001493454,right_val:.4957334101200104,left_val:.6104369759559631},{features:[[6,0,8,12,-1],[6,0,4,6,2],[10,6,4,6,2]],threshold:.0456560105085373,right_val:.2866660058498383,left_val:.5069689154624939},{features:[[13,7,2,2,-1],[14,7,1,1,2],[13,8,1,1,2]],threshold:.0012569549726322293,right_val:.631817102432251,left_val:.484691709280014},{features:[[0,12,20,6,-1],[0,14,20,2,3]],threshold:-.120150700211525,right_val:.4980959892272949,left_val:.0605261400341988},{features:[[14,7,2,3,-1],[14,7,1,3,2]],threshold:-.00010533799650147557,right_val:.4708042144775391,left_val:.5363109707832336},{features:[[0,8,9,12,-1],[3,8,3,12,3]],threshold:-.2070319056510925,right_val:.497909814119339,left_val:.059660330414772},{features:[[3,0,16,2,-1],[3,0,8,2,2]],threshold:.00012909180077258497,right_val:.5377997756004333,left_val:.4712977111339569},{features:[[6,15,3,3,-1],[6,16,3,1,3]],threshold:.000388185289921239,right_val:.5534191131591797,left_val:.4363538026809692},{features:[[8,15,6,3,-1],[8,16,6,1,3]],threshold:-.0029243610333651304,right_val:.4825215935707092,left_val:.5811185836791992},{features:[[0,10,1,6,-1],[0,12,1,2,3]],threshold:.0008388233254663646,right_val:.403813898563385,left_val:.5311700105667114},{features:[[10,9,4,3,-1],[10,10,4,1,3]],threshold:-.0019061550265178084,right_val:.526001513004303,left_val:.3770701885223389},{features:[[9,15,2,3,-1],[9,16,2,1,3]],threshold:.00895143486559391,right_val:.7682183980941772,left_val:.4766167998313904},{features:[[5,7,10,1,-1],[5,7,5,1,2]],threshold:.0130834598094225,right_val:.3062222003936768,left_val:.5264462828636169},{features:[[4,0,12,19,-1],[10,0,6,19,2]],threshold:-.2115933001041412,right_val:.4695810079574585,left_val:.6737198233604431},{features:[[0,6,20,6,-1],[10,6,10,3,2],[0,9,10,3,2]],threshold:.0031493250280618668,right_val:.4386953115463257,left_val:.5644835233688354},{features:[[3,6,2,2,-1],[3,6,1,1,2],[4,7,1,1,2]],threshold:.00039754100725986063,right_val:.5895630121231079,left_val:.4526061117649078},{features:[[15,6,2,2,-1],[16,6,1,1,2],[15,7,1,1,2]],threshold:-.0013814480043947697,right_val:.4942413866519928,left_val:.6070582270622253},{features:[[3,6,2,2,-1],[3,6,1,1,2],[4,7,1,1,2]],threshold:-.0005812218878418207,right_val:.4508252143859863,left_val:.5998213291168213},{features:[[14,4,1,12,-1],[14,10,1,6,2]],threshold:-.002390532987192273,right_val:.5223848223686218,left_val:.420558899641037},{features:[[2,5,16,10,-1],[2,5,8,5,2],[10,10,8,5,2]],threshold:.0272689294070005,right_val:.3563301861286163,left_val:.5206447243690491},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:-.0037658358924090862,right_val:.5218814015388489,left_val:.3144704103469849},{features:[[1,4,2,2,-1],[1,5,2,1,2]],threshold:-.0014903489500284195,right_val:.5124437212944031,left_val:.338019609451294},{features:[[5,0,15,5,-1],[10,0,5,5,3]],threshold:-.0174282304942608,right_val:.4919725954532623,left_val:.5829960703849792},{features:[[0,0,15,5,-1],[5,0,5,5,3]],threshold:-.0152780301868916,right_val:.4617887139320374,left_val:.6163144707679749},{features:[[11,2,2,17,-1],[11,2,1,17,2]],threshold:.0319956094026566,right_val:.171276405453682,left_val:.5166357159614563},{features:[[7,2,2,17,-1],[8,2,1,17,2]],threshold:-.003825671039521694,right_val:.5131387710571289,left_val:.3408012092113495},{features:[[15,11,2,9,-1],[15,11,1,9,2]],threshold:-.00851864367723465,right_val:.4997941851615906,left_val:.6105518937110901},{features:[[3,11,2,9,-1],[4,11,1,9,2]],threshold:.0009064162150025368,right_val:.5582311153411865,left_val:.4327270984649658},{features:[[5,16,14,4,-1],[5,16,7,4,2]],threshold:.0103448498994112,right_val:.5452420115470886,left_val:.4855653047561646}],threshold:69.22987365722656},{simpleClassifiers:[{features:[[1,4,18,1,-1],[7,4,6,1,3]],threshold:.007898182608187199,right_val:.5946462154388428,left_val:.333252489566803},{features:[[13,7,6,4,-1],[16,7,3,2,2],[13,9,3,2,2]],threshold:.0016170160379260778,right_val:.5577868819236755,left_val:.3490641117095947},{features:[[9,8,2,12,-1],[9,12,2,4,3]],threshold:-.0005544974119402468,right_val:.3291530013084412,left_val:.5542566180229187},{features:[[12,1,6,6,-1],[12,3,6,2,3]],threshold:.001542898011393845,right_val:.5545979142189026,left_val:.3612579107284546},{features:[[5,2,6,6,-1],[5,2,3,3,2],[8,5,3,3,2]],threshold:-.0010329450014978647,right_val:.5576140284538269,left_val:.3530139029026032},{features:[[9,16,6,4,-1],[12,16,3,2,2],[9,18,3,2,2]],threshold:.0007769815856590867,right_val:.5645321011543274,left_val:.3916778862476349},{features:[[1,2,18,3,-1],[7,2,6,3,3]],threshold:.143203005194664,right_val:.7023633122444153,left_val:.4667482078075409},{features:[[7,4,9,10,-1],[7,9,9,5,2]],threshold:-.007386649027466774,right_val:.5289257764816284,left_val:.3073684871196747},{features:[[5,9,4,4,-1],[7,9,2,4,2]],threshold:-.0006293674232438207,right_val:.4037049114704132,left_val:.562211811542511},{features:[[11,10,3,6,-1],[11,13,3,3,2]],threshold:.0007889352855272591,right_val:.3557874858379364,left_val:.5267661213874817},{features:[[7,11,5,3,-1],[7,12,5,1,3]],threshold:-.0122280502691865,right_val:.4625549912452698,left_val:.6668320894241333},{features:[[7,11,6,6,-1],[10,11,3,3,2],[7,14,3,3,2]],threshold:.0035420239437371492,right_val:.3869673013687134,left_val:.5521438121795654},{features:[[0,0,10,9,-1],[0,3,10,3,3]],threshold:-.0010585320414975286,right_val:.5320926904678345,left_val:.3628678023815155},{features:[[13,14,1,6,-1],[13,16,1,2,3]],threshold:14935660146875307e-21,right_val:.5363323092460632,left_val:.4632444977760315},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.005253770854324102,right_val:.3265708982944489,left_val:.5132231712341309},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.008233802393078804,right_val:.4774140119552612,left_val:.6693689823150635},{features:[[6,14,1,6,-1],[6,16,1,2,3]],threshold:2186681012972258e-20,right_val:.5457931160926819,left_val:.405386209487915},{features:[[9,15,2,3,-1],[9,16,2,1,3]],threshold:-.0038150229956954718,right_val:.4793178141117096,left_val:.645499587059021},{features:[[6,4,3,3,-1],[7,4,1,3,3]],threshold:.0011105879675596952,right_val:.3529678881168366,left_val:.5270407199859619},{features:[[9,0,11,3,-1],[9,1,11,1,3]],threshold:-.005770768970251083,right_val:.5352957844734192,left_val:.3803547024726868},{features:[[0,6,20,3,-1],[0,7,20,1,3]],threshold:-.003015833906829357,right_val:.3887133002281189,left_val:.533940315246582},{features:[[10,1,1,2,-1],[10,2,1,1,2]],threshold:-.0008545368909835815,right_val:.5273603796958923,left_val:.3564616143703461},{features:[[9,6,2,6,-1],[10,6,1,6,2]],threshold:.0110505102202296,right_val:.6849737763404846,left_val:.4671907126903534},{features:[[5,8,12,1,-1],[9,8,4,1,3]],threshold:.0426058396697044,right_val:.0702200904488564,left_val:.51514732837677},{features:[[3,8,12,1,-1],[7,8,4,1,3]],threshold:-.0030781750101596117,right_val:.5152602195739746,left_val:.3041661083698273},{features:[[9,7,3,5,-1],[10,7,1,5,3]],threshold:-.005481572821736336,right_val:.4897229969501495,left_val:.6430295705795288},{features:[[3,9,6,2,-1],[6,9,3,2,2]],threshold:.003188186092302203,right_val:.3826209902763367,left_val:.5307493209838867},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:.00035947180003859103,right_val:.5421904921531677,left_val:.4650047123432159},{features:[[7,0,6,1,-1],[9,0,2,1,3]],threshold:-.004070503171533346,right_val:.5079116225242615,left_val:.2849679887294769},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:-.0145941702648997,right_val:.5128461718559265,left_val:.2971645891666412},{features:[[7,10,2,1,-1],[8,10,1,1,2]],threshold:-.00011947689927183092,right_val:.4343082010746002,left_val:.563109815120697},{features:[[6,4,9,13,-1],[9,4,3,13,3]],threshold:-.0006934464909136295,right_val:.5359959006309509,left_val:.4403578042984009},{features:[[6,8,4,2,-1],[6,9,4,1,2]],threshold:14834799912932795e-21,right_val:.5164697766304016,left_val:.3421008884906769},{features:[[16,2,4,6,-1],[16,2,2,6,2]],threshold:.009029698558151722,right_val:.6114075183868408,left_val:.4639343023300171},{features:[[0,17,6,3,-1],[0,18,6,1,3]],threshold:-.008064081892371178,right_val:.5075494050979614,left_val:.2820158898830414},{features:[[10,10,3,10,-1],[10,15,3,5,2]],threshold:.0260621197521687,right_val:.2688778042793274,left_val:.5208905935287476},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:.0173146594315767,right_val:.6738539934158325,left_val:.4663713872432709},{features:[[10,4,4,3,-1],[10,4,2,3,2]],threshold:.0226666405797005,right_val:.2212723940610886,left_val:.5209349989891052},{features:[[8,4,3,8,-1],[9,4,1,8,3]],threshold:-.002196592977270484,right_val:.4538190066814423,left_val:.6063101291656494},{features:[[6,6,9,13,-1],[9,6,3,13,3]],threshold:-.009528247639536858,right_val:.5247430801391602,left_val:.4635204970836639},{features:[[6,0,8,12,-1],[6,0,4,6,2],[10,6,4,6,2]],threshold:.00809436198323965,right_val:.3913882076740265,left_val:.5289440155029297},{features:[[14,2,6,8,-1],[16,2,2,8,3]],threshold:-.0728773325681686,right_val:.4990234971046448,left_val:.7752001881599426},{features:[[6,0,3,6,-1],[7,0,1,6,3]],threshold:-.006900952197611332,right_val:.5048090219497681,left_val:.2428039014339447},{features:[[14,2,6,8,-1],[16,2,2,8,3]],threshold:-.0113082397729158,right_val:.4842376112937927,left_val:.5734364986419678},{features:[[0,5,6,6,-1],[0,8,6,3,2]],threshold:.0596132017672062,right_val:.2524977028369904,left_val:.5029836297035217},{features:[[9,12,6,2,-1],[12,12,3,1,2],[9,13,3,1,2]],threshold:-.0028624620754271746,right_val:.4898459911346436,left_val:.6073045134544373},{features:[[8,17,3,2,-1],[9,17,1,2,3]],threshold:.00447814492508769,right_val:.2220316976308823,left_val:.5015289187431335},{features:[[11,6,2,2,-1],[12,6,1,1,2],[11,7,1,1,2]],threshold:-.001751324045471847,right_val:.4933868944644928,left_val:.6614428758621216},{features:[[1,9,18,2,-1],[7,9,6,2,3]],threshold:.0401634201407433,right_val:.3741044998168945,left_val:.5180878043174744},{features:[[11,6,2,2,-1],[12,6,1,1,2],[11,7,1,1,2]],threshold:.0003476894926279783,right_val:.5818032026290894,left_val:.4720416963100433},{features:[[3,4,12,8,-1],[7,4,4,8,3]],threshold:.00265516503714025,right_val:.5221335887908936,left_val:.3805010914802551},{features:[[13,11,5,3,-1],[13,12,5,1,3]],threshold:-.008770627900958061,right_val:.5231295228004456,left_val:.294416606426239},{features:[[9,10,2,3,-1],[9,11,2,1,3]],threshold:-.005512209143489599,right_val:.4722816944122315,left_val:.7346177101135254},{features:[[14,7,2,3,-1],[14,7,1,3,2]],threshold:.0006867204210720956,right_val:.424241304397583,left_val:.5452876091003418},{features:[[5,4,1,3,-1],[5,5,1,1,3]],threshold:.0005601966986432672,right_val:.5601285099983215,left_val:.439886212348938},{features:[[13,4,2,3,-1],[13,5,2,1,3]],threshold:.0024143769405782223,right_val:.6136621832847595,left_val:.4741686880588532},{features:[[5,4,2,3,-1],[5,5,2,1,3]],threshold:-.0015680900542065501,right_val:.4516409933567047,left_val:.604455292224884},{features:[[9,8,2,3,-1],[9,9,2,1,3]],threshold:-.0036827491130679846,right_val:.5294982194900513,left_val:.2452459037303925},{features:[[8,9,2,2,-1],[8,10,2,1,2]],threshold:-.000294091907562688,right_val:.5251451134681702,left_val:.3732838034629822},{features:[[15,14,1,4,-1],[15,16,1,2,2]],threshold:.00042847759323194623,right_val:.4065535068511963,left_val:.5498809814453125},{features:[[3,12,2,2,-1],[3,13,2,1,2]],threshold:-.004881707020103931,right_val:.4999957084655762,left_val:.2139908969402313},{features:[[12,15,2,2,-1],[13,15,1,1,2],[12,16,1,1,2]],threshold:.00027272020815871656,right_val:.581342875957489,left_val:.465028703212738},{features:[[9,13,2,2,-1],[9,14,2,1,2]],threshold:.00020947199664078653,right_val:.5572792887687683,left_val:.4387486875057221},{features:[[4,11,14,9,-1],[4,14,14,3,3]],threshold:.0485011897981167,right_val:.3212889134883881,left_val:.5244972705841064},{features:[[7,13,4,3,-1],[7,14,4,1,3]],threshold:-.004516641143709421,right_val:.4545882046222687,left_val:.605681300163269},{features:[[15,14,1,4,-1],[15,16,1,2,2]],threshold:-.0122916800901294,right_val:.5152214169502258,left_val:.2040929049253464},{features:[[4,14,1,4,-1],[4,16,1,2,2]],threshold:.0004854967992287129,right_val:.3739503026008606,left_val:.5237604975700378},{features:[[14,0,6,13,-1],[16,0,2,13,3]],threshold:.0305560491979122,right_val:.5938246250152588,left_val:.4960533976554871},{features:[[4,1,2,12,-1],[4,1,1,6,2],[5,7,1,6,2]],threshold:-.00015105320198927075,right_val:.4145204126834869,left_val:.5351303815841675},{features:[[11,14,6,6,-1],[14,14,3,3,2],[11,17,3,3,2]],threshold:.0024937440175563097,right_val:.5514941215515137,left_val:.4693366885185242},{features:[[3,14,6,6,-1],[3,14,3,3,2],[6,17,3,3,2]],threshold:-.012382130138576,right_val:.4681667983531952,left_val:.6791396737098694},{features:[[14,17,3,2,-1],[14,18,3,1,2]],threshold:-.005133346188813448,right_val:.5229160189628601,left_val:.3608739078044891},{features:[[3,17,3,2,-1],[3,18,3,1,2]],threshold:.0005191927775740623,right_val:.3633613884449005,left_val:.5300073027610779},{features:[[14,0,6,13,-1],[16,0,2,13,3]],threshold:.1506042033433914,right_val:.2211782038211823,left_val:.515731692314148},{features:[[0,0,6,13,-1],[2,0,2,13,3]],threshold:.007714414969086647,right_val:.5776609182357788,left_val:.4410496950149536},{features:[[10,10,7,6,-1],[10,12,7,2,3]],threshold:.009444352239370346,right_val:.375665009021759,left_val:.5401855111122131},{features:[[6,15,2,2,-1],[6,15,1,1,2],[7,16,1,1,2]],threshold:.00025006249779835343,right_val:.5607374906539917,left_val:.4368270933628082},{features:[[6,11,8,6,-1],[10,11,4,3,2],[6,14,4,3,2]],threshold:-.003307715058326721,right_val:.551823079586029,left_val:.4244799017906189},{features:[[7,6,2,2,-1],[7,6,1,1,2],[8,7,1,1,2]],threshold:.0007404891075566411,right_val:.5900576710700989,left_val:.4496962130069733},{features:[[2,2,16,6,-1],[10,2,8,3,2],[2,5,8,3,2]],threshold:.0440920516848564,right_val:.3156355023384094,left_val:.5293493270874023},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.0033639909233897924,right_val:.5848662257194519,left_val:.4483296871185303},{features:[[11,7,3,10,-1],[11,12,3,5,2]],threshold:-.003976007923483849,right_val:.5483639240264893,left_val:.4559507071971893},{features:[[6,7,3,10,-1],[6,12,3,5,2]],threshold:.0027716930489987135,right_val:.3792484104633331,left_val:.534178614616394},{features:[[10,7,3,2,-1],[11,7,1,2,3]],threshold:-.00024123019829858094,right_val:.4576973021030426,left_val:.5667188763618469},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0004942566738463938,right_val:.5628787279129028,left_val:.4421244859695435},{features:[[10,1,1,3,-1],[10,2,1,1,3]],threshold:-.0003887646889779717,right_val:.5391063094139099,left_val:.4288370907306671},{features:[[1,2,4,18,-1],[1,2,2,9,2],[3,11,2,9,2]],threshold:-.0500488989055157,right_val:.4703742861747742,left_val:.6899513006210327},{features:[[12,4,4,12,-1],[12,10,4,6,2]],threshold:-.0366354808211327,right_val:.5191826224327087,left_val:.2217779010534287},{features:[[0,0,1,6,-1],[0,2,1,2,3]],threshold:.0024273579474538565,right_val:.3497397899627686,left_val:.5136224031448364},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:.001955803018063307,right_val:.640838086605072,left_val:.4826192855834961},{features:[[8,7,4,3,-1],[8,8,4,1,3]],threshold:-.0017494610510766506,right_val:.5272685289382935,left_val:.3922835886478424},{features:[[10,7,3,2,-1],[11,7,1,2,3]],threshold:.0139550799503922,right_val:.8416504859924316,left_val:.507820188999176},{features:[[7,7,3,2,-1],[8,7,1,2,3]],threshold:-.00021896739781368524,right_val:.4314234852790833,left_val:.5520489811897278},{features:[[9,4,6,1,-1],[11,4,2,1,3]],threshold:-.0015131309628486633,right_val:.5382571220397949,left_val:.3934605121612549},{features:[[8,7,2,3,-1],[9,7,1,3,2]],threshold:-.004362280014902353,right_val:.4736475944519043,left_val:.7370628714561462},{features:[[12,7,8,6,-1],[16,7,4,3,2],[12,10,4,3,2]],threshold:.0651605874300003,right_val:.328159511089325,left_val:.5159279704093933},{features:[[0,7,8,6,-1],[0,7,4,3,2],[4,10,4,3,2]],threshold:-.0023567399475723505,right_val:.5172886252403259,left_val:.3672826886177063},{features:[[18,2,2,10,-1],[19,2,1,5,2],[18,7,1,5,2]],threshold:.0151466596871614,right_val:.6687604188919067,left_val:.5031493902206421},{features:[[0,2,6,4,-1],[3,2,3,4,2]],threshold:-.0228509604930878,right_val:.4709596931934357,left_val:.676751971244812},{features:[[9,4,6,1,-1],[11,4,2,1,3]],threshold:.004886765033006668,right_val:.4059878885746002,left_val:.5257998108863831},{features:[[7,15,2,2,-1],[7,15,1,1,2],[8,16,1,1,2]],threshold:.0017619599821045995,right_val:.6688278913497925,left_val:.4696272909641266},{features:[[11,13,1,6,-1],[11,16,1,3,2]],threshold:-.0012942519970238209,right_val:.5344281792640686,left_val:.4320712983608246},{features:[[8,13,1,6,-1],[8,16,1,3,2]],threshold:.0109299495816231,right_val:.1637486070394516,left_val:.4997706115245819},{features:[[14,3,2,1,-1],[14,3,1,1,2]],threshold:2995848990394734e-20,right_val:.5633224248886108,left_val:.4282417893409729},{features:[[8,15,2,3,-1],[8,16,2,1,3]],threshold:-.0065884361974895,right_val:.4700526893138886,left_val:.677212119102478},{features:[[12,15,7,4,-1],[12,17,7,2,2]],threshold:.0032527779694646597,right_val:.4536148905754089,left_val:.531339704990387},{features:[[4,14,12,3,-1],[4,15,12,1,3]],threshold:-.00404357397928834,right_val:.4413388967514038,left_val:.5660061836242676},{features:[[10,3,3,2,-1],[11,3,1,2,3]],threshold:-.0012523540062829852,right_val:.5356451869010925,left_val:.3731913864612579},{features:[[4,12,2,2,-1],[4,13,2,1,2]],threshold:.00019246719602961093,right_val:.3738811016082764,left_val:.5189986228942871},{features:[[10,11,4,6,-1],[10,14,4,3,2]],threshold:-.038589671254158,right_val:.51888108253479,left_val:.2956373989582062},{features:[[7,13,2,2,-1],[7,13,1,1,2],[8,14,1,1,2]],threshold:.0001548987056594342,right_val:.5509533286094666,left_val:.4347135126590729},{features:[[4,11,14,4,-1],[11,11,7,2,2],[4,13,7,2,2]],threshold:-.0337638482451439,right_val:.5195475816726685,left_val:.3230330049991608},{features:[[1,18,18,2,-1],[7,18,6,2,3]],threshold:-.008265706710517406,right_val:.4552114009857178,left_val:.5975489020347595},{features:[[11,18,2,2,-1],[12,18,1,1,2],[11,19,1,1,2]],threshold:14481440302915871e-21,right_val:.5497426986694336,left_val:.4745678007602692},{features:[[7,18,2,2,-1],[7,18,1,1,2],[8,19,1,1,2]],threshold:14951299817766994e-21,right_val:.5480644106864929,left_val:.4324473142623901},{features:[[12,18,8,2,-1],[12,19,8,1,2]],threshold:-.018741799518466,right_val:.517853319644928,left_val:.1580052971839905},{features:[[7,14,6,2,-1],[7,15,6,1,2]],threshold:.0017572239739820361,right_val:.5773764252662659,left_val:.4517636895179749},{features:[[8,12,4,8,-1],[10,12,2,4,2],[8,16,2,4,2]],threshold:-.0031391119118779898,right_val:.5460842251777649,left_val:.4149647951126099},{features:[[4,9,3,3,-1],[4,10,3,1,3]],threshold:6665677938144654e-20,right_val:.5293084979057312,left_val:.4039090871810913},{features:[[7,10,6,2,-1],[9,10,2,2,3]],threshold:.006774342153221369,right_val:.612195611000061,left_val:.4767651855945587},{features:[[5,0,4,15,-1],[7,0,2,15,2]],threshold:-.0073868161998689175,right_val:.5187280774116516,left_val:.3586258888244629},{features:[[8,6,12,14,-1],[12,6,4,14,3]],threshold:.0140409301966429,right_val:.5576155781745911,left_val:.4712139964103699},{features:[[5,16,3,3,-1],[5,17,3,1,3]],threshold:-.005525832995772362,right_val:.5039281249046326,left_val:.2661027014255524},{features:[[8,1,12,19,-1],[12,1,4,19,3]],threshold:.3868423998355866,right_val:.2525899112224579,left_val:.5144339799880981},{features:[[3,0,3,2,-1],[3,1,3,1,2]],threshold:.0001145924034062773,right_val:.5423371195793152,left_val:.4284994900226593},{features:[[10,12,4,5,-1],[10,12,2,5,2]],threshold:-.0184675697237253,right_val:.5213062167167664,left_val:.3885835111141205},{features:[[6,12,4,5,-1],[8,12,2,5,2]],threshold:-.0004590701137203723,right_val:.4235909879207611,left_val:.541256308555603},{features:[[11,11,2,2,-1],[12,11,1,1,2],[11,12,1,1,2]],threshold:.0012527540093287826,right_val:.6624091267585754,left_val:.4899305105209351},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.001491060946136713,right_val:.4040051996707916,left_val:.5286778211593628},{features:[[11,11,2,2,-1],[12,11,1,1,2],[11,12,1,1,2]],threshold:-.0007543556275777519,right_val:.4795120060443878,left_val:.6032990217208862},{features:[[7,6,4,10,-1],[7,11,4,5,2]],threshold:-.0069478838704526424,right_val:.5373504161834717,left_val:.408440113067627},{features:[[11,11,2,2,-1],[12,11,1,1,2],[11,12,1,1,2]],threshold:.0002809292054735124,right_val:.5759382247924805,left_val:.4846062958240509},{features:[[2,13,5,2,-1],[2,14,5,1,2]],threshold:.0009607371757738292,right_val:.3554979860782623,left_val:.5164741277694702},{features:[[11,11,2,2,-1],[12,11,1,1,2],[11,12,1,1,2]],threshold:-.0002688392996788025,right_val:.4731765985488892,left_val:.5677582025527954},{features:[[7,11,2,2,-1],[7,11,1,1,2],[8,12,1,1,2]],threshold:.0021599370520561934,right_val:.7070567011833191,left_val:.4731487035751343},{features:[[14,13,3,3,-1],[14,14,3,1,3]],threshold:.005623530130833387,right_val:.2781791985034943,left_val:.5240243077278137},{features:[[3,13,3,3,-1],[3,14,3,1,3]],threshold:-.005024399142712355,right_val:.5062304139137268,left_val:.2837013900279999},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:-.009761163964867592,right_val:.4934569001197815,left_val:.7400717735290527},{features:[[8,7,3,3,-1],[8,8,3,1,3]],threshold:.004151510074734688,right_val:.3407008051872253,left_val:.5119131207466125},{features:[[13,5,3,3,-1],[13,6,3,1,3]],threshold:.006246508099138737,right_val:.6579058766365051,left_val:.4923788011074066},{features:[[0,9,5,3,-1],[0,10,5,1,3]],threshold:-.007059747818857431,right_val:.503284215927124,left_val:.2434711009263992},{features:[[13,5,3,3,-1],[13,6,3,1,3]],threshold:-.0020587709732353687,right_val:.469508707523346,left_val:.590031087398529},{features:[[9,12,2,8,-1],[9,12,1,4,2],[10,16,1,4,2]],threshold:-.0024146060459315777,right_val:.5189201831817627,left_val:.3647317886352539},{features:[[11,7,2,2,-1],[12,7,1,1,2],[11,8,1,1,2]],threshold:-.0014817609917372465,right_val:.4940128028392792,left_val:.6034948229789734},{features:[[0,16,6,4,-1],[3,16,3,4,2]],threshold:-.0063016400672495365,right_val:.4560427963733673,left_val:.5818989872932434},{features:[[10,6,2,3,-1],[10,7,2,1,3]],threshold:.00347634288482368,right_val:.3483993113040924,left_val:.5217475891113281},{features:[[9,5,2,6,-1],[9,7,2,2,3]],threshold:-.0222508702427149,right_val:.5032082796096802,left_val:.2360700070858002},{features:[[12,15,8,4,-1],[12,15,4,4,2]],threshold:-.030612550675869,right_val:.4914919137954712,left_val:.6499186754226685},{features:[[0,14,8,6,-1],[4,14,4,6,2]],threshold:.013057479634881,right_val:.5683764219284058,left_val:.4413323104381561},{features:[[9,0,3,2,-1],[10,0,1,2,3]],threshold:-.0006009574281051755,right_val:.5333483219146729,left_val:.4359731078147888},{features:[[4,15,4,2,-1],[6,15,2,2,2]],threshold:-.0004151425091549754,right_val:.4326060116291046,left_val:.550406277179718},{features:[[12,7,3,13,-1],[13,7,1,13,3]],threshold:-.013776290230453,right_val:.5201548933982849,left_val:.4064112901687622},{features:[[5,7,3,13,-1],[6,7,1,13,3]],threshold:-.0322965085506439,right_val:.4977194964885712,left_val:.0473519712686539},{features:[[9,6,3,9,-1],[9,9,3,3,3]],threshold:.0535569787025452,right_val:.666693925857544,left_val:.4881733059883118},{features:[[4,4,7,12,-1],[4,10,7,6,2]],threshold:.008188954554498196,right_val:.4240820109844208,left_val:.5400037169456482},{features:[[12,12,2,2,-1],[13,12,1,1,2],[12,13,1,1,2]],threshold:.00021055320394225419,right_val:.5563852787017822,left_val:.4802047908306122},{features:[[6,12,2,2,-1],[6,12,1,1,2],[7,13,1,1,2]],threshold:-.00243827304802835,right_val:.4773685038089752,left_val:.7387793064117432},{features:[[8,9,4,2,-1],[10,9,2,1,2],[8,10,2,1,2]],threshold:.003283557016402483,right_val:.3171291947364807,left_val:.5288546085357666},{features:[[3,6,2,2,-1],[3,6,1,1,2],[4,7,1,1,2]],threshold:.00237295706756413,right_val:.7060170769691467,left_val:.4750812947750092},{features:[[16,6,3,2,-1],[16,7,3,1,2]],threshold:-.0014541699783876538,right_val:.533073902130127,left_val:.3811730146408081}],threshold:79.24907684326172},{simpleClassifiers:[{features:[[0,7,19,4,-1],[0,9,19,2,2]],threshold:.0557552389800549,right_val:.6806036829948425,left_val:.4019156992435455},{features:[[10,2,10,1,-1],[10,2,5,1,2]],threshold:.002473024884238839,right_val:.5965719819068909,left_val:.3351148962974548},{features:[[9,4,2,12,-1],[9,10,2,6,2]],threshold:-.00035031698644161224,right_val:.3482286930084229,left_val:.5557708144187927},{features:[[12,18,4,1,-1],[12,18,2,1,2]],threshold:.0005416763015091419,right_val:.5693380832672119,left_val:.426085889339447},{features:[[1,7,6,4,-1],[1,7,3,2,2],[4,9,3,2,2]],threshold:.0007719367858953774,right_val:.5433688759803772,left_val:.3494240045547485},{features:[[12,0,6,13,-1],[14,0,2,13,3]],threshold:-.0015999219613149762,right_val:.5484359264373779,left_val:.4028499126434326},{features:[[2,0,6,13,-1],[4,0,2,13,3]],threshold:-.00011832080053864047,right_val:.5425465106964111,left_val:.3806901872158051},{features:[[10,5,8,8,-1],[10,9,8,4,2]],threshold:.0003290903114248067,right_val:.5429521799087524,left_val:.262010008096695},{features:[[8,3,2,5,-1],[9,3,1,5,2]],threshold:.0002951810893137008,right_val:.5399264097213745,left_val:.379976898431778},{features:[[8,4,9,1,-1],[11,4,3,1,3]],threshold:9046671038959175e-20,right_val:.5440226197242737,left_val:.4433645009994507},{features:[[3,4,9,1,-1],[6,4,3,1,3]],threshold:15007190086180344e-21,right_val:.5409119725227356,left_val:.3719654977321625},{features:[[1,0,18,10,-1],[7,0,6,10,3]],threshold:.1393561065196991,right_val:.4479042887687683,left_val:.552539587020874},{features:[[7,17,5,3,-1],[7,18,5,1,3]],threshold:.0016461990308016539,right_val:.5772169828414917,left_val:.4264501035213471},{features:[[7,11,6,1,-1],[9,11,2,1,3]],threshold:.0004998443182557821,right_val:.5685871243476868,left_val:.4359526038169861},{features:[[2,2,3,2,-1],[2,3,3,1,2]],threshold:-.001097128028050065,right_val:.5205408930778503,left_val:.3390136957168579},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0006691989256069064,right_val:.598065972328186,left_val:.4557456076145172},{features:[[6,10,3,6,-1],[6,13,3,3,2]],threshold:.0008647104259580374,right_val:.2944033145904541,left_val:.5134841203689575},{features:[[11,4,2,4,-1],[11,4,1,4,2]],threshold:-.0002718259929679334,right_val:.5377181172370911,left_val:.3906578123569489},{features:[[7,4,2,4,-1],[8,4,1,4,2]],threshold:3024949910468422e-20,right_val:.5225688815116882,left_val:.3679609894752502},{features:[[9,6,2,4,-1],[9,6,1,4,2]],threshold:-.008522589690983295,right_val:.4892365038394928,left_val:.7293102145195007},{features:[[6,13,8,3,-1],[6,14,8,1,3]],threshold:.0016705560265108943,right_val:.5696138143539429,left_val:.43453249335289},{features:[[9,15,3,4,-1],[10,15,1,4,3]],threshold:-.0071433838456869125,right_val:.5225623846054077,left_val:.2591280043125153},{features:[[9,2,2,17,-1],[10,2,1,17,2]],threshold:-.0163193698972464,right_val:.4651575982570648,left_val:.6922279000282288},{features:[[7,0,6,1,-1],[9,0,2,1,3]],threshold:.004803426098078489,right_val:.3286302983760834,left_val:.5352262854576111},{features:[[8,15,3,4,-1],[9,15,1,4,3]],threshold:-.0075421929359436035,right_val:.5034546256065369,left_val:.2040544003248215},{features:[[7,13,7,3,-1],[7,14,7,1,3]],threshold:-.0143631100654602,right_val:.4889059066772461,left_val:.6804888844490051},{features:[[8,16,3,3,-1],[9,16,1,3,3]],threshold:.0008906358852982521,right_val:.3895480930805206,left_val:.5310695767402649},{features:[[6,2,8,10,-1],[6,7,8,5,2]],threshold:-.004406019113957882,right_val:.4372426867485046,left_val:.5741562843322754},{features:[[2,5,8,8,-1],[2,9,8,4,2]],threshold:-.0001886254030978307,right_val:.5098205208778381,left_val:.2831785976886749},{features:[[14,16,2,2,-1],[14,17,2,1,2]],threshold:-.0037979281041771173,right_val:.5246580243110657,left_val:.3372507989406586},{features:[[4,16,2,2,-1],[4,17,2,1,2]],threshold:.00014627049677073956,right_val:.391171008348465,left_val:.5306674242019653},{features:[[10,11,4,6,-1],[10,14,4,3,2]],threshold:-49164638767251745e-21,right_val:.3942720890045166,left_val:.5462496280670166},{features:[[6,11,4,6,-1],[6,14,4,3,2]],threshold:-.0335825011134148,right_val:.5048211812973022,left_val:.2157824039459229},{features:[[10,14,1,3,-1],[10,15,1,1,3]],threshold:-.0035339309833943844,right_val:.4872696995735169,left_val:.6465312242507935},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.005014411173760891,right_val:.6248074769973755,left_val:.4617668092250824},{features:[[10,0,4,6,-1],[12,0,2,3,2],[10,3,2,3,2]],threshold:.0188173707574606,right_val:.2000052034854889,left_val:.5220689177513123},{features:[[0,3,20,2,-1],[0,4,20,1,2]],threshold:-.001343433978036046,right_val:.53016197681427,left_val:.4014537930488586},{features:[[12,0,8,2,-1],[16,0,4,1,2],[12,1,4,1,2]],threshold:.001755796023644507,right_val:.5653169751167297,left_val:.4794039130210877},{features:[[2,12,10,8,-1],[2,16,10,4,2]],threshold:-.0956374630331993,right_val:.5006706714630127,left_val:.2034195065498352},{features:[[17,7,2,10,-1],[18,7,1,5,2],[17,12,1,5,2]],threshold:-.0222412291914225,right_val:.5046340227127075,left_val:.7672473192214966},{features:[[1,7,2,10,-1],[1,7,1,5,2],[2,12,1,5,2]],threshold:-.0155758196488023,right_val:.4755851030349731,left_val:.7490342259407043},{features:[[15,10,3,6,-1],[15,12,3,2,3]],threshold:.005359911825507879,right_val:.4004670977592468,left_val:.5365303754806519},{features:[[4,4,6,2,-1],[6,4,2,2,3]],threshold:-.0217634998261929,right_val:.4964174926280975,left_val:.0740154981613159},{features:[[0,5,20,6,-1],[0,7,20,2,3]],threshold:-.165615901350975,right_val:.5218086242675781,left_val:.2859103083610535},{features:[[0,0,8,2,-1],[0,0,4,1,2],[4,1,4,1,2]],threshold:.0001646132004680112,right_val:.5380793213844299,left_val:.4191615879535675},{features:[[1,0,18,4,-1],[7,0,6,4,3]],threshold:-.008907750248908997,right_val:.4877404868602753,left_val:.6273192763328552},{features:[[1,13,6,2,-1],[1,14,6,1,2]],threshold:.0008634644909761846,right_val:.3671025931835175,left_val:.5159940719604492},{features:[[10,8,3,4,-1],[11,8,1,4,3]],threshold:-.0013751760125160217,right_val:.4579083919525147,left_val:.5884376764297485},{features:[[6,1,6,1,-1],[8,1,2,1,3]],threshold:-.0014081239933148026,right_val:.5139945149421692,left_val:.3560509979724884},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.003934288863092661,right_val:.466427206993103,left_val:.5994288921356201},{features:[[1,6,18,2,-1],[10,6,9,2,2]],threshold:-.0319669283926487,right_val:.5144183039665222,left_val:.3345462083816528},{features:[[15,11,1,2,-1],[15,12,1,1,2]],threshold:-15089280168467667e-21,right_val:.441405713558197,left_val:.5582656264305115},{features:[[6,5,1,2,-1],[6,6,1,1,2]],threshold:.0005199447041377425,right_val:.6168993711471558,left_val:.4623680114746094},{features:[[13,4,1,3,-1],[13,5,1,1,3]],threshold:-.0034220460802316666,right_val:.4974805116653442,left_val:.6557074785232544},{features:[[2,15,1,2,-1],[2,16,1,1,2]],threshold:.00017723299970384687,right_val:.3901908099651337,left_val:.5269501805305481},{features:[[12,4,4,3,-1],[12,5,4,1,3]],threshold:.0015716759953647852,right_val:.5790457725524902,left_val:.4633373022079468},{features:[[0,0,7,3,-1],[0,1,7,1,3]],threshold:-.00890413299202919,right_val:.5053591132164001,left_val:.2689608037471771},{features:[[9,12,6,2,-1],[9,12,3,2,2]],threshold:.00040677518700249493,right_val:.4329898953437805,left_val:.5456603169441223},{features:[[5,4,2,3,-1],[5,5,2,1,3]],threshold:.0067604780197143555,right_val:.6689761877059937,left_val:.4648993909358978},{features:[[18,4,2,3,-1],[18,5,2,1,3]],threshold:.0029100088868290186,right_val:.3377839922904968,left_val:.5309703946113586},{features:[[3,0,8,6,-1],[3,2,8,2,3]],threshold:.0013885459629818797,right_val:.5349133014678955,left_val:.4074738919734955},{features:[[0,2,20,6,-1],[10,2,10,3,2],[0,5,10,3,2]],threshold:-.0767642632126808,right_val:.522824227809906,left_val:.1992176026105881},{features:[[4,7,2,4,-1],[5,7,1,4,2]],threshold:-.00022688310127705336,right_val:.4253072142601013,left_val:.5438501834869385},{features:[[3,10,15,2,-1],[8,10,5,2,3]],threshold:-.006309415213763714,right_val:.5378909707069397,left_val:.4259178936481476},{features:[[3,0,12,11,-1],[9,0,6,11,2]],threshold:-.1100727990269661,right_val:.4721749126911163,left_val:.6904156804084778},{features:[[13,0,2,6,-1],[13,0,1,6,2]],threshold:.0002861965913325548,right_val:.5548306107521057,left_val:.4524914920330048},{features:[[0,19,2,1,-1],[1,19,1,1,2]],threshold:2942532955785282e-20,right_val:.4236463904380798,left_val:.5370373725891113},{features:[[16,10,4,10,-1],[18,10,2,5,2],[16,15,2,5,2]],threshold:-.0248865708708763,right_val:.4969303905963898,left_val:.6423557996749878},{features:[[4,8,10,3,-1],[4,9,10,1,3]],threshold:.0331488512456417,right_val:.1613811999559403,left_val:.4988475143909454},{features:[[14,12,3,3,-1],[14,13,3,1,3]],threshold:.0007849169196560979,right_val:.4223009049892426,left_val:.541602611541748},{features:[[0,10,4,10,-1],[0,10,2,5,2],[2,15,2,5,2]],threshold:.004708718974143267,right_val:.6027557849884033,left_val:.4576328992843628},{features:[[18,3,2,6,-1],[18,5,2,2,3]],threshold:.0024144479539245367,right_val:.4422498941421509,left_val:.530897319316864},{features:[[6,6,1,3,-1],[6,7,1,1,3]],threshold:.0019523180089890957,right_val:.666332483291626,left_val:.4705634117126465},{features:[[7,7,7,2,-1],[7,8,7,1,2]],threshold:.0013031980488449335,right_val:.5526962280273438,left_val:.4406126141548157},{features:[[0,3,2,6,-1],[0,5,2,2,3]],threshold:.004473549779504538,right_val:.3301498889923096,left_val:.5129023790359497},{features:[[11,1,3,1,-1],[12,1,1,1,3]],threshold:-.002665286883711815,right_val:.5175036191940308,left_val:.3135471045970917},{features:[[5,0,2,6,-1],[6,0,1,6,2]],threshold:.0001366677024634555,right_val:.530687689781189,left_val:.4119370877742767},{features:[[1,1,18,14,-1],[7,1,6,14,3]],threshold:-.0171264503151178,right_val:.4836578965187073,left_val:.6177806258201599},{features:[[4,6,8,3,-1],[8,6,4,3,2]],threshold:-.0002660143072716892,right_val:.5169736742973328,left_val:.3654330968856812},{features:[[9,12,6,2,-1],[9,12,3,2,2]],threshold:-.022932380437851,right_val:.5163992047309875,left_val:.349091500043869},{features:[[5,12,6,2,-1],[8,12,3,2,2]],threshold:.0023316550068557262,right_val:.3709389865398407,left_val:.5166299939155579},{features:[[10,7,3,5,-1],[11,7,1,5,3]],threshold:.016925660893321,right_val:.8053988218307495,left_val:.501473605632782},{features:[[7,7,3,5,-1],[8,7,1,5,3]],threshold:-.008985882624983788,right_val:.465702086687088,left_val:.6470788717269897},{features:[[13,0,3,10,-1],[14,0,1,10,3]],threshold:-.0118746999651194,right_val:.5258755087852478,left_val:.3246378898620606},{features:[[4,11,3,2,-1],[4,12,3,1,2]],threshold:.00019350569345988333,right_val:.3839643895626068,left_val:.5191941857337952},{features:[[17,3,3,6,-1],[18,3,1,6,3]],threshold:.005871349014341831,right_val:.6187043190002441,left_val:.4918133914470673},{features:[[1,8,18,10,-1],[1,13,18,5,2]],threshold:-.2483879029750824,right_val:.4988150000572205,left_val:.1836802959442139},{features:[[13,0,3,10,-1],[14,0,1,10,3]],threshold:.0122560001909733,right_val:.3632029891014099,left_val:.5227053761482239},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.0008399017970077693,right_val:.5774148106575012,left_val:.4490250051021576},{features:[[16,3,3,7,-1],[17,3,1,7,3]],threshold:.002540736924856901,right_val:.5858299136161804,left_val:.4804787039756775},{features:[[4,0,3,10,-1],[5,0,1,10,3]],threshold:-.0148224299773574,right_val:.5023537278175354,left_val:.2521049976348877},{features:[[16,3,3,7,-1],[17,3,1,7,3]],threshold:-.005797395948320627,right_val:.4853715002536774,left_val:.5996695756912231},{features:[[0,9,1,2,-1],[0,10,1,1,2]],threshold:.000726621481589973,right_val:.3671779930591583,left_val:.5153716802597046},{features:[[18,1,2,10,-1],[18,1,1,10,2]],threshold:-.0172325801104307,right_val:.4994656145572662,left_val:.6621719002723694},{features:[[0,1,2,10,-1],[1,1,1,10,2]],threshold:.007862408645451069,right_val:.6256101727485657,left_val:.4633395075798035},{features:[[10,16,3,4,-1],[11,16,1,4,3]],threshold:-.004734362009912729,right_val:.5281885266304016,left_val:.3615573048591614},{features:[[2,8,3,3,-1],[3,8,1,3,3]],threshold:.0008304847870022058,right_val:.5550957918167114,left_val:.4442889094352722},{features:[[11,0,2,6,-1],[12,0,1,3,2],[11,3,1,3,2]],threshold:.00766021991148591,right_val:.2613354921340942,left_val:.5162935256958008},{features:[[7,0,2,6,-1],[7,0,1,3,2],[8,3,1,3,2]],threshold:-.004104837775230408,right_val:.5019031763076782,left_val:.2789632081985474},{features:[[16,3,3,7,-1],[17,3,1,7,3]],threshold:.004851257894188166,right_val:.5661668181419373,left_val:.4968984127044678},{features:[[1,3,3,7,-1],[2,3,1,7,3]],threshold:.0009989645332098007,right_val:.5551813244819641,left_val:.4445607960224152},{features:[[14,1,6,16,-1],[16,1,2,16,3]],threshold:-.2702363133430481,right_val:.515131413936615,left_val:.0293882098048925},{features:[[0,1,6,16,-1],[2,1,2,16,3]],threshold:-.0130906803533435,right_val:.4447459876537323,left_val:.5699399709701538},{features:[[2,0,16,8,-1],[10,0,8,4,2],[2,4,8,4,2]],threshold:-.009434279054403305,right_val:.5487895011901855,left_val:.4305466115474701},{features:[[6,8,5,3,-1],[6,9,5,1,3]],threshold:-.0015482039889320731,right_val:.512808084487915,left_val:.3680317103862763},{features:[[9,7,3,3,-1],[10,7,1,3,3]],threshold:.005374613218009472,right_val:.6101555824279785,left_val:.4838916957378388},{features:[[8,8,4,3,-1],[8,9,4,1,3]],threshold:.0015786769799888134,right_val:.4118548035621643,left_val:.5325223207473755},{features:[[9,6,2,4,-1],[9,6,1,4,2]],threshold:.003685605013743043,right_val:.6252303123474121,left_val:.4810948073863983},{features:[[0,7,15,1,-1],[5,7,5,1,3]],threshold:.009388701990246773,right_val:.3629410862922669,left_val:.520022988319397},{features:[[8,2,7,9,-1],[8,5,7,3,3]],threshold:.0127926301211119,right_val:.673801600933075,left_val:.4961709976196289},{features:[[1,7,16,4,-1],[1,7,8,2,2],[9,9,8,2,2]],threshold:-.003366104094311595,right_val:.5283598899841309,left_val:.4060279130935669},{features:[[6,12,8,2,-1],[6,13,8,1,2]],threshold:.00039771420415490866,right_val:.5900775194168091,left_val:.4674113988876343},{features:[[8,11,3,3,-1],[8,12,3,1,3]],threshold:.0014868030557408929,right_val:.6082053780555725,left_val:.4519116878509522},{features:[[4,5,14,10,-1],[11,5,7,5,2],[4,10,7,5,2]],threshold:-.0886867493391037,right_val:.5180991888046265,left_val:.2807899117469788},{features:[[4,12,3,2,-1],[4,13,3,1,2]],threshold:-7429611287079751e-20,right_val:.408762514591217,left_val:.5295584201812744},{features:[[9,11,6,1,-1],[11,11,2,1,3]],threshold:-14932939848222304e-21,right_val:.4538542926311493,left_val:.5461400151252747},{features:[[4,9,7,6,-1],[4,11,7,2,3]],threshold:.005916223861277103,right_val:.4192134141921997,left_val:.5329161286354065},{features:[[7,10,6,3,-1],[7,11,6,1,3]],threshold:.001114164013415575,right_val:.5706217288970947,left_val:.4512017965316773},{features:[[9,11,2,2,-1],[9,12,2,1,2]],threshold:8924936264520511e-20,right_val:.5897638201713562,left_val:.4577805995941162},{features:[[0,5,20,6,-1],[0,7,20,2,3]],threshold:.0025319510605186224,right_val:.3357639014720917,left_val:.5299603939056396},{features:[[6,4,6,1,-1],[8,4,2,1,3]],threshold:.0124262003228068,right_val:.1346601992845535,left_val:.4959059059619904},{features:[[9,11,6,1,-1],[11,11,2,1,3]],threshold:.0283357501029968,right_val:.0006104363710619509,left_val:.5117079019546509},{features:[[5,11,6,1,-1],[7,11,2,1,3]],threshold:.006616588216274977,right_val:.7011628150939941,left_val:.4736349880695343},{features:[[10,16,3,4,-1],[11,16,1,4,3]],threshold:.008046876639127731,right_val:.3282819986343384,left_val:.5216417908668518},{features:[[8,7,3,3,-1],[9,7,1,3,3]],threshold:-.001119398046284914,right_val:.4563739001750946,left_val:.5809860825538635},{features:[[2,12,16,8,-1],[2,16,16,4,2]],threshold:.0132775902748108,right_val:.4103901088237763,left_val:.5398362278938293},{features:[[0,15,15,2,-1],[0,16,15,1,2]],threshold:.0004879473999608308,right_val:.5410590767860413,left_val:.424928605556488},{features:[[15,4,5,6,-1],[15,6,5,2,3]],threshold:.0112431701272726,right_val:.3438215851783752,left_val:.526996374130249},{features:[[9,5,2,4,-1],[10,5,1,4,2]],threshold:-.0008989666821435094,right_val:.4456613063812256,left_val:.5633075833320618},{features:[[8,10,9,6,-1],[8,12,9,2,3]],threshold:.006667715962976217,right_val:.4362679123878479,left_val:.5312889218330383},{features:[[2,19,15,1,-1],[7,19,5,1,3]],threshold:.0289472993463278,right_val:.657579779624939,left_val:.4701794981956482},{features:[[10,16,3,4,-1],[11,16,1,4,3]],threshold:-.0234000496566296,right_val:.5137398838996887,left_val:0},{features:[[0,15,20,4,-1],[0,17,20,2,2]],threshold:-.0891170501708984,right_val:.4942430853843689,left_val:.0237452797591686},{features:[[10,16,3,4,-1],[11,16,1,4,3]],threshold:-.0140546001493931,right_val:.511751115322113,left_val:.3127323091030121},{features:[[7,16,3,4,-1],[8,16,1,4,3]],threshold:.008123939856886864,right_val:.2520025968551636,left_val:.50090491771698},{features:[[9,16,3,3,-1],[9,17,3,1,3]],threshold:-.004996465053409338,right_val:.4927811920642853,left_val:.6387143731117249},{features:[[8,11,4,6,-1],[8,14,4,3,2]],threshold:.0031253970228135586,right_val:.3680452108383179,left_val:.5136849880218506},{features:[[9,6,2,12,-1],[9,10,2,4,3]],threshold:.006766964215785265,right_val:.4363631904125214,left_val:.5509843826293945},{features:[[8,17,4,3,-1],[8,18,4,1,3]],threshold:-.002371144015341997,right_val:.4586946964263916,left_val:.6162335276603699},{features:[[9,18,8,2,-1],[13,18,4,1,2],[9,19,4,1,2]],threshold:-.005352279171347618,right_val:.4920490980148315,left_val:.6185457706451416},{features:[[1,18,8,2,-1],[1,19,8,1,2]],threshold:-.0159688591957092,right_val:.4983252882957459,left_val:.1382617950439453},{features:[[13,5,6,15,-1],[15,5,2,15,3]],threshold:.004767606034874916,right_val:.5490046143531799,left_val:.4688057899475098},{features:[[9,8,2,2,-1],[9,9,2,1,2]],threshold:-.002471469109877944,right_val:.5003952980041504,left_val:.2368514984846115},{features:[[9,5,2,3,-1],[9,5,1,3,2]],threshold:-.0007103378884494305,right_val:.4721533060073853,left_val:.5856394171714783},{features:[[1,5,6,15,-1],[3,5,2,15,3]],threshold:-.1411755979061127,right_val:.4961591064929962,left_val:.0869000628590584},{features:[[4,1,14,8,-1],[11,1,7,4,2],[4,5,7,4,2]],threshold:.1065180972218514,right_val:.1741005033254623,left_val:.5138837099075317},{features:[[2,4,4,16,-1],[2,4,2,8,2],[4,12,2,8,2]],threshold:-.0527447499334812,right_val:.4772881865501404,left_val:.7353636026382446},{features:[[12,4,3,12,-1],[12,10,3,6,2]],threshold:-.00474317604675889,right_val:.5292701721191406,left_val:.3884406089782715},{features:[[4,5,10,12,-1],[4,5,5,6,2],[9,11,5,6,2]],threshold:.0009967676596716046,right_val:.4003424048423767,left_val:.5223492980003357},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.00802841316908598,right_val:.7212964296340942,left_val:.4959106147289276},{features:[[5,4,2,3,-1],[5,5,2,1,3]],threshold:.0008602585876360536,right_val:.55384761095047,left_val:.4444884061813355},{features:[[12,2,4,10,-1],[14,2,2,5,2],[12,7,2,5,2]],threshold:.0009319150121882558,right_val:.4163244068622589,left_val:.539837121963501},{features:[[6,4,7,3,-1],[6,5,7,1,3]],threshold:-.002508206060156226,right_val:.456250011920929,left_val:.5854265093803406},{features:[[2,0,18,2,-1],[11,0,9,1,2],[2,1,9,1,2]],threshold:-.0021378761157393456,right_val:.5280259251594543,left_val:.4608069062232971},{features:[[0,0,18,2,-1],[0,0,9,1,2],[9,1,9,1,2]],threshold:-.002154604997485876,right_val:.5255997180938721,left_val:.3791126906871796},{features:[[13,13,4,6,-1],[15,13,2,3,2],[13,16,2,3,2]],threshold:-.007621400989592075,right_val:.4952073991298676,left_val:.5998609066009521},{features:[[3,13,4,6,-1],[3,13,2,3,2],[5,16,2,3,2]],threshold:.002205536002293229,right_val:.5588530898094177,left_val:.4484206140041351},{features:[[10,12,2,6,-1],[10,15,2,3,2]],threshold:.0012586950324475765,right_val:.4423840939998627,left_val:.5450747013092041},{features:[[5,9,10,10,-1],[5,9,5,5,2],[10,14,5,5,2]],threshold:-.005092672072350979,right_val:.5263035893440247,left_val:.4118275046348572},{features:[[11,4,4,2,-1],[13,4,2,1,2],[11,5,2,1,2]],threshold:-.0025095739401876926,right_val:.4998494982719421,left_val:.5787907838821411},{features:[[7,12,6,8,-1],[10,12,3,8,2]],threshold:-.0773275569081306,right_val:.481112003326416,left_val:.8397865891456604},{features:[[12,2,4,10,-1],[14,2,2,5,2],[12,7,2,5,2]],threshold:-.041485819965601,right_val:.5176993012428284,left_val:.240861102938652},{features:[[8,11,2,1,-1],[9,11,1,1,2]],threshold:.00010355669655837119,right_val:.5417054295539856,left_val:.4355360865592957},{features:[[10,5,1,12,-1],[10,9,1,4,3]],threshold:.0013255809899419546,right_val:.4894095063209534,left_val:.5453971028327942},{features:[[0,11,6,9,-1],[3,11,3,9,2]],threshold:-.00805987324565649,right_val:.4577918946743012,left_val:.5771024227142334},{features:[[12,2,4,10,-1],[14,2,2,5,2],[12,7,2,5,2]],threshold:.019058620557189,right_val:.3400475084781647,left_val:.5169867873191833},{features:[[4,2,4,10,-1],[4,2,2,5,2],[6,7,2,5,2]],threshold:-.0350578911602497,right_val:.5000503063201904,left_val:.2203243970870972},{features:[[11,4,4,2,-1],[13,4,2,1,2],[11,5,2,1,2]],threshold:.005729605909436941,right_val:.6597570776939392,left_val:.5043408274650574},{features:[[0,14,6,3,-1],[0,15,6,1,3]],threshold:-.0116483299061656,right_val:.4996652901172638,left_val:.2186284959316254},{features:[[11,4,4,2,-1],[13,4,2,1,2],[11,5,2,1,2]],threshold:.0014544479781761765,right_val:.5503727793693542,left_val:.5007681846618652},{features:[[6,1,3,2,-1],[7,1,1,2,3]],threshold:-.00025030909455381334,right_val:.524167001247406,left_val:.4129841029644013},{features:[[11,4,4,2,-1],[13,4,2,1,2],[11,5,2,1,2]],threshold:-.000829072727356106,right_val:.4974496066570282,left_val:.541286826133728},{features:[[5,4,4,2,-1],[5,4,2,1,2],[7,5,2,1,2]],threshold:.0010862209601327777,right_val:.5879228711128235,left_val:.460552990436554},{features:[[13,0,2,12,-1],[14,0,1,6,2],[13,6,1,6,2]],threshold:.0002000050008064136,right_val:.4705209136009216,left_val:.5278854966163635},{features:[[6,0,3,10,-1],[7,0,1,10,3]],threshold:.0029212920926511288,right_val:.375553697347641,left_val:.5129609704017639},{features:[[3,0,17,8,-1],[3,4,17,4,2]],threshold:.0253874007612467,right_val:.5790768265724182,left_val:.4822691977024078},{features:[[0,4,20,4,-1],[0,6,20,2,2]],threshold:-.00319684692658484,right_val:.3962840139865875,left_val:.5248395204544067}],threshold:87.69602966308594},{simpleClassifiers:[{features:[[0,3,8,2,-1],[4,3,4,2,2]],threshold:.005803173873573542,right_val:.596198320388794,left_val:.3498983979225159},{features:[[8,11,4,3,-1],[8,12,4,1,3]],threshold:-.009000306949019432,right_val:.4478552043437958,left_val:.6816636919975281},{features:[[5,7,6,4,-1],[5,7,3,2,2],[8,9,3,2,2]],threshold:-.00115496595390141,right_val:.3578251004219055,left_val:.5585706233978271},{features:[[8,3,4,9,-1],[8,6,4,3,3]],threshold:-.0011069850297644734,right_val:.3050428032875061,left_val:.5365036129951477},{features:[[8,15,1,4,-1],[8,17,1,2,2]],threshold:.00010308309720130637,right_val:.5344635844230652,left_val:.363909512758255},{features:[[4,5,12,7,-1],[8,5,4,7,3]],threshold:-.005098483990877867,right_val:.5504264831542969,left_val:.2859157025814056},{features:[[4,2,4,10,-1],[4,2,2,5,2],[6,7,2,5,2]],threshold:.0008257220033556223,right_val:.3476041853427887,left_val:.5236523747444153},{features:[[3,0,17,2,-1],[3,1,17,1,2]],threshold:.009978332556784153,right_val:.621964693069458,left_val:.4750322103500366},{features:[[2,2,16,15,-1],[2,7,16,5,3]],threshold:-.0374025292694569,right_val:.527806282043457,left_val:.334337592124939},{features:[[15,2,5,2,-1],[15,3,5,1,2]],threshold:.0048548257909715176,right_val:.3700444102287293,left_val:.5192180871963501},{features:[[9,3,2,2,-1],[10,3,1,2,2]],threshold:-.001866447040811181,right_val:.5091944932937622,left_val:.2929843962192535},{features:[[4,5,16,15,-1],[4,10,16,5,3]],threshold:.0168888904154301,right_val:.5431225895881653,left_val:.3686845898628235},{features:[[7,13,5,6,-1],[7,16,5,3,2]],threshold:-.005837262142449617,right_val:.5221335887908936,left_val:.3632183969020844},{features:[[10,7,3,2,-1],[11,7,1,2,3]],threshold:-.00147137395106256,right_val:.4700650870800018,left_val:.5870683789253235},{features:[[8,3,3,1,-1],[9,3,1,1,3]],threshold:-.0011522950371727347,right_val:.5140954256057739,left_val:.3195894956588745},{features:[[9,16,3,3,-1],[9,17,3,1,3]],threshold:-.004256030078977346,right_val:.4814921021461487,left_val:.6301859021186829},{features:[[0,2,5,2,-1],[0,3,5,1,2]],threshold:-.006737829186022282,right_val:.5025808215141296,left_val:.1977048069238663},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:.0113826701417565,right_val:.6867045760154724,left_val:.495413213968277},{features:[[1,7,12,1,-1],[5,7,4,1,3]],threshold:.005179470870643854,right_val:.3350647985935211,left_val:.5164427757263184},{features:[[7,5,6,14,-1],[7,12,6,7,2]],threshold:-.1174378991127014,right_val:.5234413743019104,left_val:.2315246015787125},{features:[[0,0,8,10,-1],[0,0,4,5,2],[4,5,4,5,2]],threshold:.0287034492939711,right_val:.6722521185874939,left_val:.4664297103881836},{features:[[9,1,3,2,-1],[10,1,1,2,3]],threshold:.004823103081434965,right_val:.2723532915115356,left_val:.5220875144004822},{features:[[8,1,3,2,-1],[9,1,1,2,3]],threshold:.0026798530016094446,right_val:.2906948924064636,left_val:.5079277157783508},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:.008050408214330673,right_val:.6395021080970764,left_val:.4885950982570648},{features:[[7,4,6,16,-1],[7,12,6,8,2]],threshold:.004805495962500572,right_val:.365666389465332,left_val:.5197256803512573},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:-.0022420159075409174,right_val:.4763701856136322,left_val:.6153467893600464},{features:[[2,3,2,6,-1],[2,5,2,2,3]],threshold:-.0137577103450894,right_val:.5030903220176697,left_val:.2637344896793366},{features:[[14,2,6,9,-1],[14,5,6,3,3]],threshold:-.1033829972147942,right_val:.5182461142539978,left_val:.2287521958351135},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:-.009443208575248718,right_val:.4694949090480804,left_val:.6953303813934326},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:.0008027118165045977,right_val:.4268783926963806,left_val:.5450655221939087},{features:[[5,5,2,3,-1],[5,6,2,1,3]],threshold:-.004194566980004311,right_val:.4571642875671387,left_val:.6091387867927551},{features:[[13,11,3,6,-1],[13,13,3,2,3]],threshold:.0109422104433179,right_val:.3284547030925751,left_val:.5241063237190247},{features:[[3,14,2,6,-1],[3,17,2,3,2]],threshold:-.0005784106906503439,right_val:.4179368913173676,left_val:.5387929081916809},{features:[[14,3,6,2,-1],[14,4,6,1,2]],threshold:-.002088862005621195,right_val:.5301715731620789,left_val:.4292691051959992},{features:[[0,8,16,2,-1],[0,9,16,1,2]],threshold:.0032383969519287348,right_val:.5220744013786316,left_val:.379234790802002},{features:[[14,3,6,2,-1],[14,4,6,1,2]],threshold:.004907502792775631,right_val:.4126757979393005,left_val:.5237283110618591},{features:[[0,0,5,6,-1],[0,2,5,2,3]],threshold:-.0322779417037964,right_val:.4994502067565918,left_val:.1947655975818634},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:-.008971123024821281,right_val:.4929032027721405,left_val:.6011285185813904},{features:[[4,11,3,6,-1],[4,13,3,2,3]],threshold:.0153210898861289,right_val:.2039822041988373,left_val:.5009753704071045},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:.002085556974634528,right_val:.5721694827079773,left_val:.4862189888954163},{features:[[9,5,1,3,-1],[9,6,1,1,3]],threshold:.005061502102762461,right_val:.1801805943250656,left_val:.5000218749046326},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:-.0037174751050770283,right_val:.4897592961788178,left_val:.5530117154121399},{features:[[6,6,8,12,-1],[6,12,8,6,2]],threshold:-.0121705001220107,right_val:.5383723974227905,left_val:.4178605973720551},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:.004624839872121811,right_val:.5761327147483826,left_val:.4997169971466065},{features:[[5,12,9,2,-1],[8,12,3,2,3]],threshold:-.0002104042941937223,right_val:.4097681045532227,left_val:.5331807136535645},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:-.0146417804062366,right_val:.5051776170730591,left_val:.5755925178527832},{features:[[4,5,4,3,-1],[4,6,4,1,3]],threshold:.00331994891166687,right_val:.6031805872917175,left_val:.4576976895332336},{features:[[6,6,9,2,-1],[9,6,3,2,3]],threshold:.003723687957972288,right_val:.541588306427002,left_val:.4380396902561188},{features:[[4,11,1,3,-1],[4,12,1,1,3]],threshold:.0008295116131193936,right_val:.3702219128608704,left_val:.5163031816482544},{features:[[14,12,6,6,-1],[14,12,3,6,2]],threshold:-.0114084901288152,right_val:.4862565100193024,left_val:.6072946786880493},{features:[[7,0,3,7,-1],[8,0,1,7,3]],threshold:-.004532012157142162,right_val:.5088962912559509,left_val:.3292475938796997},{features:[[9,8,3,3,-1],[10,8,1,3,3]],threshold:.00512760179117322,right_val:.6122708916664124,left_val:.4829767942428589},{features:[[8,8,3,3,-1],[9,8,1,3,3]],threshold:.00985831581056118,right_val:.6556177139282227,left_val:.4660679996013641},{features:[[5,10,11,3,-1],[5,11,11,1,3]],threshold:.036985918879509,right_val:.1690472066402435,left_val:.5204849243164062},{features:[[5,7,10,1,-1],[10,7,5,1,2]],threshold:.004649116192013025,right_val:.3725225031375885,left_val:.5167322158813477},{features:[[9,7,3,2,-1],[10,7,1,2,3]],threshold:-.004266470205038786,right_val:.4987342953681946,left_val:.6406493186950684},{features:[[8,7,3,2,-1],[9,7,1,2,3]],threshold:-.0004795659042429179,right_val:.4464873969554901,left_val:.5897293090820312},{features:[[11,9,4,2,-1],[11,9,2,2,2]],threshold:.0036827160511165857,right_val:.347266286611557,left_val:.5441560745239258},{features:[[5,9,4,2,-1],[7,9,2,2,2]],threshold:-.0100598800927401,right_val:.500482976436615,left_val:.2143162935972214},{features:[[14,10,2,4,-1],[14,12,2,2,2]],threshold:-.0003036184061784297,right_val:.4590323865413666,left_val:.538642406463623},{features:[[7,7,3,2,-1],[8,7,1,2,3]],threshold:-.0014545479789376259,right_val:.4497095048427582,left_val:.5751184225082397},{features:[[14,17,6,3,-1],[14,18,6,1,3]],threshold:.0016515209572389722,right_val:.4238520860671997,left_val:.5421937704086304},{features:[[4,5,12,12,-1],[4,5,6,6,2],[10,11,6,6,2]],threshold:-.007846863940358162,right_val:.5258157253265381,left_val:.4077920913696289},{features:[[6,9,8,8,-1],[10,9,4,4,2],[6,13,4,4,2]],threshold:-.005125985015183687,right_val:.5479453206062317,left_val:.422927588224411},{features:[[0,4,15,4,-1],[5,4,5,4,3]],threshold:-.0368909612298012,right_val:.4674678146839142,left_val:.6596375703811646},{features:[[13,2,4,1,-1],[13,2,2,1,2]],threshold:.0002403563994448632,right_val:.5573202967643738,left_val:.4251135885715485},{features:[[4,12,2,2,-1],[4,13,2,1,2]],threshold:-15150169929256663e-21,right_val:.4074114859104157,left_val:.5259246826171875},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.0022108471021056175,right_val:.5886352062225342,left_val:.4671722948551178},{features:[[9,13,2,3,-1],[9,14,2,1,3]],threshold:-.0011568620102480054,right_val:.4487161934375763,left_val:.5711066126823425},{features:[[13,11,2,3,-1],[13,12,2,1,3]],threshold:.004999629221856594,right_val:.2898327112197876,left_val:.5264198184013367},{features:[[7,12,4,4,-1],[7,12,2,2,2],[9,14,2,2,2]],threshold:-.0014656189596280456,right_val:.5197871923446655,left_val:.3891738057136536},{features:[[10,11,2,2,-1],[11,11,1,1,2],[10,12,1,1,2]],threshold:-.0011975039960816503,right_val:.4927955865859985,left_val:.5795872807502747},{features:[[8,17,3,2,-1],[9,17,1,2,3]],threshold:-.0044954330660402775,right_val:.5012555122375488,left_val:.2377603054046631},{features:[[10,11,2,2,-1],[11,11,1,1,2],[10,12,1,1,2]],threshold:.00014997160178609192,right_val:.5617607831954956,left_val:.4876626133918762},{features:[[0,17,6,3,-1],[0,18,6,1,3]],threshold:.002639150945469737,right_val:.3765509128570557,left_val:.516808807849884},{features:[[10,11,2,2,-1],[11,11,1,1,2],[10,12,1,1,2]],threshold:-.0002936813107226044,right_val:.4874630868434906,left_val:.5446649193763733},{features:[[8,11,2,2,-1],[8,11,1,1,2],[9,12,1,1,2]],threshold:.0014211760135367513,right_val:.669133186340332,left_val:.4687897861003876},{features:[[12,5,8,4,-1],[12,5,4,4,2]],threshold:.0794276371598244,right_val:.273294597864151,left_val:.5193443894386292},{features:[[0,5,8,4,-1],[4,5,4,4,2]],threshold:.0799375027418137,right_val:.1782083958387375,left_val:.4971731007099152},{features:[[13,2,4,1,-1],[13,2,2,1,2]],threshold:.0110892597585917,right_val:.3209475874900818,left_val:.5165994763374329},{features:[[3,2,4,1,-1],[5,2,2,1,2]],threshold:.00016560709627810866,right_val:.5307276248931885,left_val:.4058471918106079},{features:[[10,0,4,2,-1],[12,0,2,1,2],[10,1,2,1,2]],threshold:-.0053354292176663876,right_val:.5158129930496216,left_val:.3445056974887848},{features:[[7,12,3,1,-1],[8,12,1,1,3]],threshold:.0011287260567769408,right_val:.6075533032417297,left_val:.4594863057136536},{features:[[8,11,4,8,-1],[10,11,2,4,2],[8,15,2,4,2]],threshold:-.0219692196696997,right_val:.5228595733642578,left_val:.1680400967597961},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.00021775320055894554,right_val:.5215672850608826,left_val:.3861596882343292},{features:[[3,18,15,2,-1],[3,19,15,1,2]],threshold:.00020200149447191507,right_val:.4363039135932922,left_val:.5517979264259338},{features:[[2,6,2,12,-1],[2,6,1,6,2],[3,12,1,6,2]],threshold:-.0217331498861313,right_val:.4789851009845734,left_val:.7999460101127625},{features:[[9,8,2,3,-1],[9,9,2,1,3]],threshold:-.0008439993252977729,right_val:.5374773144721985,left_val:.4085975885391235},{features:[[7,10,3,2,-1],[8,10,1,2,3]],threshold:-.00043895249837078154,right_val:.4366143047809601,left_val:.5470405220985413},{features:[[11,11,3,1,-1],[12,11,1,1,3]],threshold:.0015092400135472417,right_val:.5842149257659912,left_val:.4988996982574463},{features:[[6,11,3,1,-1],[7,11,1,1,3]],threshold:-.003554783994331956,right_val:.4721005856990814,left_val:.6753690242767334},{features:[[9,2,4,2,-1],[11,2,2,1,2],[9,3,2,1,2]],threshold:.00048191400128416717,right_val:.4357109069824219,left_val:.541585385799408},{features:[[4,12,2,3,-1],[4,13,2,1,3]],threshold:-.00602643983438611,right_val:.499188095331192,left_val:.2258509993553162},{features:[[2,1,18,3,-1],[8,1,6,3,3]],threshold:-.0116681400686502,right_val:.4927498996257782,left_val:.625655472278595},{features:[[5,1,4,14,-1],[7,1,2,14,2]],threshold:-.0028718370012938976,right_val:.524580180644989,left_val:.3947784900665283},{features:[[8,16,12,3,-1],[8,16,6,3,2]],threshold:.0170511696487665,right_val:.5794224143028259,left_val:.4752511084079742},{features:[[1,17,18,3,-1],[7,17,6,3,3]],threshold:-.0133520802482963,right_val:.4544535875320435,left_val:.6041104793548584},{features:[[9,14,2,6,-1],[9,17,2,3,2]],threshold:-.0003930180100724101,right_val:.5544905066490173,left_val:.4258275926113129},{features:[[9,12,1,8,-1],[9,16,1,4,2]],threshold:.0030483349692076445,right_val:.3780272901058197,left_val:.5233420133590698},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:-.00435792887583375,right_val:.4838674068450928,left_val:.6371889114379883},{features:[[9,6,2,12,-1],[9,10,2,4,3]],threshold:.0056661018170416355,right_val:.4163666069507599,left_val:.5374705791473389},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:6067733920644969e-20,right_val:.5311625003814697,left_val:.4638795852661133},{features:[[0,1,4,8,-1],[2,1,2,8,2]],threshold:.0367381609976292,right_val:.6466524004936218,left_val:.4688656032085419},{features:[[9,1,6,2,-1],[12,1,3,1,2],[9,2,3,1,2]],threshold:.008652813732624054,right_val:.2188657969236374,left_val:.5204318761825562},{features:[[1,3,12,14,-1],[1,10,12,7,2]],threshold:-.1537135988473892,right_val:.4958840012550354,left_val:.1630371958017349},{features:[[8,12,4,2,-1],[10,12,2,1,2],[8,13,2,1,2]],threshold:-.00041560421232134104,right_val:.4696458876132965,left_val:.577445924282074},{features:[[1,9,10,2,-1],[1,9,5,1,2],[6,10,5,1,2]],threshold:-.0012640169588848948,right_val:.5217198133468628,left_val:.3977175951004028},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:-.003547334112226963,right_val:.480831503868103,left_val:.6046528220176697},{features:[[6,8,8,3,-1],[6,9,8,1,3]],threshold:3001906952704303e-20,right_val:.5228201150894165,left_val:.3996723890304565},{features:[[9,15,5,3,-1],[9,16,5,1,3]],threshold:.00131130195222795,right_val:.5765997767448425,left_val:.4712158143520355},{features:[[8,7,4,3,-1],[8,8,4,1,3]],threshold:-.0013374709524214268,right_val:.5253170132637024,left_val:.4109584987163544},{features:[[7,7,6,2,-1],[7,8,6,1,2]],threshold:.0208767093718052,right_val:.1757981926202774,left_val:.5202993750572205},{features:[[5,7,8,2,-1],[5,7,4,1,2],[9,8,4,1,2]],threshold:-.007549794856458902,right_val:.4694975018501282,left_val:.6566609740257263},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:.0241885501891375,right_val:.3370220959186554,left_val:.5128673911094666},{features:[[4,7,4,2,-1],[4,8,4,1,2]],threshold:-.002935882890596986,right_val:.4694541096687317,left_val:.658078670501709},{features:[[14,2,6,9,-1],[14,5,6,3,3]],threshold:.0575579293072224,right_val:.2775259912014008,left_val:.5146445035934448},{features:[[4,9,3,3,-1],[5,9,1,3,3]],threshold:-.0011343370424583554,right_val:.5192667245864868,left_val:.3836601972579956},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:.0168169997632504,right_val:.6177260875701904,left_val:.5085592865943909},{features:[[0,2,6,9,-1],[0,5,6,3,3]],threshold:.005053517874330282,right_val:.3684791922569275,left_val:.5138763189315796},{features:[[17,3,3,6,-1],[18,3,1,6,3]],threshold:-.004587471019476652,right_val:.4835202097892761,left_val:.5989655256271362},{features:[[0,3,3,6,-1],[1,3,1,6,3]],threshold:.001688246033154428,right_val:.5723056793212891,left_val:.4509486854076386},{features:[[17,14,1,2,-1],[17,15,1,1,2]],threshold:-.0016554000321775675,right_val:.5243319272994995,left_val:.3496770858764648},{features:[[4,9,4,3,-1],[6,9,2,3,2]],threshold:-.0193738006055355,right_val:.496871292591095,left_val:.1120536997914314},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:.0103744501248002,right_val:.4395213127136231,left_val:.5148196816444397},{features:[[5,9,3,3,-1],[5,10,3,1,3]],threshold:.00014973050565458834,right_val:.526988685131073,left_val:.4084999859333038},{features:[[9,5,6,8,-1],[12,5,3,4,2],[9,9,3,4,2]],threshold:-.042981930077076,right_val:.501850426197052,left_val:.6394104957580566},{features:[[5,5,6,8,-1],[5,5,3,4,2],[8,9,3,4,2]],threshold:.008306593634188175,right_val:.6698353290557861,left_val:.470755398273468},{features:[[16,1,4,6,-1],[16,4,4,3,2]],threshold:-.0041285790503025055,right_val:.5323647260665894,left_val:.4541369080543518},{features:[[1,0,6,20,-1],[3,0,2,20,3]],threshold:.0017399420030415058,right_val:.5439866185188293,left_val:.433396190404892},{features:[[12,11,3,2,-1],[13,11,1,2,3]],threshold:.00011739750334527344,right_val:.5543426275253296,left_val:.4579687118530273},{features:[[5,11,3,2,-1],[6,11,1,2,3]],threshold:.00018585780344437808,right_val:.5426754951477051,left_val:.4324643909931183},{features:[[9,4,6,1,-1],[11,4,2,1,3]],threshold:.005558769218623638,right_val:.3550611138343811,left_val:.525722086429596},{features:[[0,0,8,3,-1],[4,0,4,3,2]],threshold:-.007985156029462814,right_val:.4630635976791382,left_val:.6043018102645874},{features:[[15,0,2,5,-1],[15,0,1,5,2]],threshold:.0006059412262402475,right_val:.55331951379776,left_val:.4598254859447479},{features:[[4,1,3,2,-1],[5,1,1,2,3]],threshold:-.0002298304025316611,right_val:.5322461128234863,left_val:.4130752086639404},{features:[[7,0,6,15,-1],[9,0,2,15,3]],threshold:.0004374021082185209,right_val:.5409289002418518,left_val:.4043039977550507},{features:[[6,11,3,1,-1],[7,11,1,1,3]],threshold:.0002948202018160373,right_val:.5628852248191833,left_val:.4494963884353638},{features:[[12,0,3,4,-1],[13,0,1,4,3]],threshold:.0103126596659422,right_val:.2704316973686218,left_val:.5177510976791382},{features:[[5,4,6,1,-1],[7,4,2,1,3]],threshold:-.007724110968410969,right_val:.4980553984642029,left_val:.1988019049167633},{features:[[12,7,3,2,-1],[12,8,3,1,2]],threshold:-.004679720848798752,right_val:.5018296241760254,left_val:.6644750237464905},{features:[[0,1,4,6,-1],[0,4,4,3,2]],threshold:-.005075545981526375,right_val:.5185269117355347,left_val:.3898304998874664},{features:[[12,7,3,2,-1],[12,8,3,1,2]],threshold:.00224797404371202,right_val:.5660336017608643,left_val:.4801808893680573},{features:[[2,16,3,3,-1],[2,17,3,1,3]],threshold:.0008332700817845762,right_val:.3957188129425049,left_val:.5210919976234436},{features:[[13,8,6,10,-1],[16,8,3,5,2],[13,13,3,5,2]],threshold:-.0412793308496475,right_val:.5007054209709167,left_val:.6154541969299316},{features:[[0,9,5,2,-1],[0,10,5,1,2]],threshold:-.0005093018990010023,right_val:.5228403806686401,left_val:.3975942134857178},{features:[[12,11,2,2,-1],[13,11,1,1,2],[12,12,1,1,2]],threshold:.0012568780221045017,right_val:.5939183235168457,left_val:.4979138076305389},{features:[[3,15,3,3,-1],[3,16,3,1,3]],threshold:.008004849776625633,right_val:.1633366048336029,left_val:.4984497129917145},{features:[[12,7,3,2,-1],[12,8,3,1,2]],threshold:-.0011879300000146031,right_val:.4942624866962433,left_val:.5904964804649353},{features:[[5,7,3,2,-1],[5,8,3,1,2]],threshold:.0006194895249791443,right_val:.5328726172447205,left_val:.4199557900428772},{features:[[9,5,9,9,-1],[9,8,9,3,3]],threshold:.006682985927909613,right_val:.490588903427124,left_val:.5418602824211121},{features:[[5,0,3,7,-1],[6,0,1,7,3]],threshold:-.0037062340416014194,right_val:.5138000249862671,left_val:.3725939095020294},{features:[[5,2,12,5,-1],[9,2,4,5,3]],threshold:-.0397394113242626,right_val:.5050346851348877,left_val:.6478961110115051},{features:[[6,11,2,2,-1],[6,11,1,1,2],[7,12,1,1,2]],threshold:.0014085009461268783,right_val:.6377884149551392,left_val:.4682339131832123},{features:[[15,15,3,2,-1],[15,16,3,1,2]],threshold:.0003932268882635981,right_val:.415048211812973,left_val:.5458530187606812},{features:[[2,15,3,2,-1],[2,16,3,1,2]],threshold:-.0018979819724336267,right_val:.5149704217910767,left_val:.3690159916877747},{features:[[14,12,6,8,-1],[17,12,3,4,2],[14,16,3,4,2]],threshold:-.0139704402536154,right_val:.4811357855796814,left_val:.6050562858581543},{features:[[2,8,15,6,-1],[7,8,5,6,3]],threshold:-.1010081991553307,right_val:.4992361962795258,left_val:.2017080038785934},{features:[[2,2,18,17,-1],[8,2,6,17,3]],threshold:-.0173469204455614,right_val:.4899486005306244,left_val:.5713148713111877},{features:[[5,1,4,1,-1],[7,1,2,1,2]],threshold:.000156197595060803,right_val:.5392642021179199,left_val:.4215388894081116},{features:[[5,2,12,5,-1],[9,2,4,5,3]],threshold:.1343892961740494,right_val:.3767612874507904,left_val:.5136151909828186},{features:[[3,2,12,5,-1],[7,2,4,5,3]],threshold:-.0245822407305241,right_val:.4747906923294067,left_val:.7027357816696167},{features:[[4,9,12,4,-1],[10,9,6,2,2],[4,11,6,2,2]],threshold:-.0038553720805794,right_val:.5427716970443726,left_val:.4317409098148346},{features:[[5,15,6,2,-1],[5,15,3,1,2],[8,16,3,1,2]],threshold:-.002316524973139167,right_val:.4618647992610931,left_val:.594269871711731},{features:[[10,14,2,3,-1],[10,15,2,1,3]],threshold:-.004851812031120062,right_val:.4884895086288452,left_val:.6191568970680237},{features:[[0,13,20,2,-1],[0,13,10,1,2],[10,14,10,1,2]],threshold:.002469993894919753,right_val:.4017199873924255,left_val:.5256664752960205},{features:[[4,9,12,8,-1],[10,9,6,4,2],[4,13,6,4,2]],threshold:.0454969592392445,right_val:.2685773968696594,left_val:.5237867832183838},{features:[[8,13,3,6,-1],[8,16,3,3,2]],threshold:-.0203195996582508,right_val:.4979738891124725,left_val:.213044598698616},{features:[[10,12,2,2,-1],[10,13,2,1,2]],threshold:.0002699499891605228,right_val:.5543122291564941,left_val:.481404185295105},{features:[[9,12,2,2,-1],[9,12,1,1,2],[10,13,1,1,2]],threshold:-.0018232699949294329,right_val:.4709989130496979,left_val:.6482579708099365},{features:[[4,11,14,4,-1],[11,11,7,2,2],[4,13,7,2,2]],threshold:-.006301579065620899,right_val:.5306236147880554,left_val:.4581927955150604},{features:[[8,5,4,2,-1],[8,6,4,1,2]],threshold:-.0002413949987385422,right_val:.4051763117313385,left_val:.5232086777687073},{features:[[10,10,6,3,-1],[12,10,2,3,3]],threshold:-.001033036969602108,right_val:.4789193868637085,left_val:.5556201934814453},{features:[[2,14,1,2,-1],[2,15,1,1,2]],threshold:.0001804116036510095,right_val:.4011810123920441,left_val:.5229442715644836},{features:[[13,8,6,12,-1],[16,8,3,6,2],[13,14,3,6,2]],threshold:-.0614078603684902,right_val:.5010703206062317,left_val:.62986820936203},{features:[[1,8,6,12,-1],[1,8,3,6,2],[4,14,3,6,2]],threshold:-.0695439130067825,right_val:.4773184061050415,left_val:.7228280901908875},{features:[[10,0,6,10,-1],[12,0,2,10,3]],threshold:-.0705426633358002,right_val:.5182529091835022,left_val:.2269513010978699},{features:[[5,11,8,4,-1],[5,11,4,2,2],[9,13,4,2,2]],threshold:.0024423799477517605,right_val:.4098151028156281,left_val:.5237097144126892},{features:[[10,16,8,4,-1],[14,16,4,2,2],[10,18,4,2,2]],threshold:.0015494349645450711,right_val:.5468043088912964,left_val:.4773750901222229},{features:[[7,7,6,6,-1],[9,7,2,6,3]],threshold:-.0239142198115587,right_val:.4783824980258942,left_val:.7146975994110107},{features:[[10,2,4,10,-1],[10,2,2,10,2]],threshold:-.0124536901712418,right_val:.5241122841835022,left_val:.2635296881198883},{features:[[6,1,4,9,-1],[8,1,2,9,2]],threshold:-.00020760179904755205,right_val:.5113608837127686,left_val:.3623757064342499},{features:[[12,19,2,1,-1],[12,19,1,1,2]],threshold:29781080229440704e-21,right_val:.5432801842689514,left_val:.4705932140350342}],threshold:90.25334930419922},{simpleClassifiers:[{features:[[1,2,4,9,-1],[3,2,2,9,2]],threshold:.0117727499455214,right_val:.6421167254447937,left_val:.3860518932342529},{features:[[7,5,6,4,-1],[9,5,2,4,3]],threshold:.0270375702530146,right_val:.675403892993927,left_val:.4385654926300049},{features:[[9,4,2,4,-1],[9,6,2,2,2]],threshold:-3641950024757534e-20,right_val:.34233158826828,left_val:.5487101078033447},{features:[[14,5,2,8,-1],[14,9,2,4,2]],threshold:.001999540952965617,right_val:.5400317907333374,left_val:.3230532109737396},{features:[[7,6,5,12,-1],[7,12,5,6,2]],threshold:.0045278300531208515,right_val:.2935043871402741,left_val:.5091639757156372},{features:[[14,6,2,6,-1],[14,9,2,3,2]],threshold:.00047890920541249216,right_val:.5344064235687256,left_val:.4178153872489929},{features:[[4,6,2,6,-1],[4,9,2,3,2]],threshold:.0011720920447260141,right_val:.5132070779800415,left_val:.2899182140827179},{features:[[8,15,10,4,-1],[13,15,5,2,2],[8,17,5,2,2]],threshold:.0009530570241622627,right_val:.5560845136642456,left_val:.428012490272522},{features:[[6,18,2,2,-1],[7,18,1,2,2]],threshold:15099150004971307e-21,right_val:.5404760241508484,left_val:.4044871926307678},{features:[[11,3,6,2,-1],[11,4,6,1,2]],threshold:-.0006081790197640657,right_val:.5503466129302979,left_val:.4271768927574158},{features:[[2,0,16,6,-1],[2,2,16,2,3]],threshold:.003322452073916793,right_val:.5369734764099121,left_val:.3962723910808563},{features:[[11,3,6,2,-1],[11,4,6,1,2]],threshold:-.0011037490330636501,right_val:.5237749814987183,left_val:.4727177917957306},{features:[[4,11,10,3,-1],[4,12,10,1,3]],threshold:-.0014350269921123981,right_val:.4223509132862091,left_val:.5603008270263672},{features:[[11,3,6,2,-1],[11,4,6,1,2]],threshold:.0020767399109899998,right_val:.4732725918292999,left_val:.5225917100906372},{features:[[3,3,6,2,-1],[3,4,6,1,2]],threshold:-.00016412809782195836,right_val:.5432739853858948,left_val:.3999075889587402},{features:[[16,0,4,7,-1],[16,0,2,7,2]],threshold:.008830243721604347,right_val:.6027327179908752,left_val:.4678385853767395},{features:[[0,14,9,6,-1],[0,16,9,2,3]],threshold:-.0105520701035857,right_val:.5213974714279175,left_val:.3493967056274414},{features:[[9,16,3,3,-1],[9,17,3,1,3]],threshold:-.00227316003292799,right_val:.4749062955379486,left_val:.6185818910598755},{features:[[4,6,6,2,-1],[6,6,2,2,3]],threshold:-.0008478633244521916,right_val:.3843482136726379,left_val:.5285341143608093},{features:[[15,11,1,3,-1],[15,12,1,1,3]],threshold:.0012081359745934606,right_val:.3447335958480835,left_val:.536064088344574},{features:[[5,5,2,3,-1],[5,6,2,1,3]],threshold:.002651273040100932,right_val:.6193962097167969,left_val:.4558292031288147},{features:[[10,9,2,2,-1],[10,10,2,1,2]],threshold:-.0011012479662895203,right_val:.5327628254890442,left_val:.368023008108139},{features:[[3,1,4,3,-1],[5,1,2,3,2]],threshold:.0004956151824444532,right_val:.5274940729141235,left_val:.396059513092041},{features:[[16,0,4,7,-1],[16,0,2,7,2]],threshold:-.0439017713069916,right_val:.4992839097976685,left_val:.7020444869995117},{features:[[0,0,20,1,-1],[10,0,10,1,2]],threshold:.0346903502941132,right_val:.276660293340683,left_val:.5049164295196533},{features:[[15,11,1,3,-1],[15,12,1,1,3]],threshold:-.002744219033047557,right_val:.5274971127510071,left_val:.2672632932662964},{features:[[0,4,3,4,-1],[1,4,1,4,3]],threshold:.003331658896058798,right_val:.6001101732254028,left_val:.4579482972621918},{features:[[16,3,3,6,-1],[16,5,3,2,3]],threshold:-.0200445707887411,right_val:.523571789264679,left_val:.3171594142913818},{features:[[1,3,3,6,-1],[1,5,3,2,3]],threshold:.0013492030557245016,right_val:.4034324884414673,left_val:.5265362858772278},{features:[[6,2,12,6,-1],[12,2,6,3,2],[6,5,6,3,2]],threshold:.0029702018946409225,right_val:.4571984112262726,left_val:.5332456827163696},{features:[[8,10,4,3,-1],[8,11,4,1,3]],threshold:.006303998176008463,right_val:.6034635901451111,left_val:.4593310952186585},{features:[[4,2,14,6,-1],[11,2,7,3,2],[4,5,7,3,2]],threshold:-.0129365902394056,right_val:.5372971296310425,left_val:.4437963962554932},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:.004014872945845127,right_val:.6437833905220032,left_val:.4680323898792267},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:-.002640167949721217,right_val:.5314332842826843,left_val:.3709631860256195},{features:[[8,12,4,3,-1],[8,13,4,1,3]],threshold:.0139184398576617,right_val:.713080883026123,left_val:.4723555147647858},{features:[[15,11,1,3,-1],[15,12,1,1,3]],threshold:-.00045087869511917233,right_val:.5370404124259949,left_val:.4492394030094147},{features:[[7,13,5,2,-1],[7,14,5,1,2]],threshold:.00025384349282830954,right_val:.5514402985572815,left_val:.4406864047050476},{features:[[7,12,6,3,-1],[7,13,6,1,3]],threshold:.002271000063046813,right_val:.5967984199523926,left_val:.4682416915893555},{features:[[5,11,4,4,-1],[5,13,4,2,2]],threshold:.002412077970802784,right_val:.3018598854541779,left_val:.5079392194747925},{features:[[11,4,3,3,-1],[12,4,1,3,3]],threshold:-3602567085181363e-20,right_val:.4471096992492676,left_val:.560103714466095},{features:[[6,4,3,3,-1],[7,4,1,3,3]],threshold:-.0074905529618263245,right_val:.4989944100379944,left_val:.2207535058259964},{features:[[16,5,3,6,-1],[17,5,1,6,3]],threshold:-.017513120546937,right_val:.5017648935317993,left_val:.6531215906143188},{features:[[3,6,12,7,-1],[7,6,4,7,3]],threshold:.1428163051605225,right_val:.1482062041759491,left_val:.4967963099479675},{features:[[16,5,3,6,-1],[17,5,1,6,3]],threshold:.005534526892006397,right_val:.5954223871231079,left_val:.4898946881294251},{features:[[3,13,2,3,-1],[3,14,2,1,3]],threshold:-.0009632359142415226,right_val:.519607424736023,left_val:.3927116990089417},{features:[[16,5,3,6,-1],[17,5,1,6,3]],threshold:-.0020370010752230883,right_val:.4884858131408691,left_val:.5613325238227844},{features:[[1,5,3,6,-1],[2,5,1,6,3]],threshold:.0016614829655736685,right_val:.5578880906105042,left_val:.4472880065441132},{features:[[1,9,18,1,-1],[7,9,6,1,3]],threshold:-.0031188090797513723,right_val:.5397477746009827,left_val:.3840532898902893},{features:[[0,9,8,7,-1],[4,9,4,7,2]],threshold:-.006400061771273613,right_val:.4533218145370483,left_val:.5843983888626099},{features:[[12,11,8,2,-1],[12,12,8,1,2]],threshold:.0003131960111204535,right_val:.4234727919101715,left_val:.5439221858978271},{features:[[0,11,8,2,-1],[0,12,8,1,2]],threshold:-.0182220991700888,right_val:.4958404898643494,left_val:.1288464963436127},{features:[[9,13,2,3,-1],[9,14,2,1,3]],threshold:.008796924725174904,right_val:.7153480052947998,left_val:.49512979388237},{features:[[4,10,12,4,-1],[4,10,6,2,2],[10,12,6,2,2]],threshold:-.004239507019519806,right_val:.5194936990737915,left_val:.3946599960327148},{features:[[9,3,3,7,-1],[10,3,1,7,3]],threshold:.009708627127110958,right_val:.6064900159835815,left_val:.4897503852844238},{features:[[7,2,3,5,-1],[8,2,1,5,3]],threshold:-.003993417136371136,right_val:.5060828924179077,left_val:.3245440125465393},{features:[[9,12,4,6,-1],[11,12,2,3,2],[9,15,2,3,2]],threshold:-.0167850591242313,right_val:.5203778743743896,left_val:.1581953018903732},{features:[[8,7,3,6,-1],[9,7,1,6,3]],threshold:.018272090703249,right_val:.6626979112625122,left_val:.4680935144424439},{features:[[15,4,4,2,-1],[15,5,4,1,2]],threshold:.00568728381767869,right_val:.3512184917926788,left_val:.5211697816848755},{features:[[8,7,3,3,-1],[9,7,1,3,3]],threshold:-.0010739039862528443,right_val:.4529845118522644,left_val:.5768386125564575},{features:[[14,2,6,4,-1],[14,4,6,2,2]],threshold:-.00370938703417778,right_val:.5313581228256226,left_val:.4507763087749481},{features:[[7,16,6,1,-1],[9,16,2,1,3]],threshold:-.0002111070934915915,right_val:.4333376884460449,left_val:.5460820198059082},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:.0010670139454305172,right_val:.4078390896320343,left_val:.5371856093406677},{features:[[8,7,3,10,-1],[9,7,1,10,3]],threshold:.0035943021066486835,right_val:.5643836259841919,left_val:.4471287131309509},{features:[[11,10,2,6,-1],[11,12,2,2,3]],threshold:-.005177603103220463,right_val:.5280330181121826,left_val:.4499393105506897},{features:[[6,10,4,1,-1],[8,10,2,1,2]],threshold:-.00025414369883947074,right_val:.4407708048820496,left_val:.5516173243522644},{features:[[10,9,2,2,-1],[10,10,2,1,2]],threshold:.006352256052196026,right_val:.2465227991342545,left_val:.5194190144538879},{features:[[8,9,2,2,-1],[8,10,2,1,2]],threshold:-.00044205080484971404,right_val:.5139682292938232,left_val:.3830705881118774},{features:[[12,7,2,2,-1],[13,7,1,1,2],[12,8,1,1,2]],threshold:.0007448872784152627,right_val:.5974786877632141,left_val:.4891090989112854},{features:[[5,7,2,2,-1],[5,7,1,1,2],[6,8,1,1,2]],threshold:-.0035116379149258137,right_val:.4768764972686768,left_val:.7413681745529175},{features:[[13,0,3,14,-1],[14,0,1,14,3]],threshold:-.0125409103929996,right_val:.5252826809883118,left_val:.3648819029331207},{features:[[4,0,3,14,-1],[5,0,1,14,3]],threshold:.009493185207247734,right_val:.362958699464798,left_val:.5100492835044861},{features:[[13,4,3,14,-1],[14,4,1,14,3]],threshold:.0129611501470208,right_val:.4333561062812805,left_val:.5232442021369934},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.004720944911241531,right_val:.6331052780151367,left_val:.4648149013519287},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.0023119079414755106,right_val:.4531058073043823,left_val:.5930309891700745},{features:[[4,2,3,16,-1],[5,2,1,16,3]],threshold:-.002826229901984334,right_val:.5257101058959961,left_val:.3870477974414825},{features:[[7,2,8,10,-1],[7,7,8,5,2]],threshold:-.0014311339473351836,right_val:.4561854898929596,left_val:.552250325679779},{features:[[6,14,7,3,-1],[6,15,7,1,3]],threshold:.0019378310535103083,right_val:.5736966729164124,left_val:.4546220898628235},{features:[[9,2,10,12,-1],[14,2,5,6,2],[9,8,5,6,2]],threshold:.00026343559147790074,right_val:.4571875035762787,left_val:.5345739126205444},{features:[[6,7,8,2,-1],[6,8,8,1,2]],threshold:.0007825752254575491,right_val:.5220187902450562,left_val:.3967815935611725},{features:[[8,13,4,6,-1],[8,16,4,3,2]],threshold:-.0195504408329725,right_val:.5243508219718933,left_val:.282964289188385},{features:[[6,6,1,3,-1],[6,7,1,1,3]],threshold:.00043914958951063454,right_val:.589909017086029,left_val:.4590066969394684},{features:[[16,2,4,6,-1],[16,4,4,2,3]],threshold:.0214520003646612,right_val:.2855378985404968,left_val:.523141086101532},{features:[[6,6,4,2,-1],[6,6,2,1,2],[8,7,2,1,2]],threshold:.0005897358059883118,right_val:.550642192363739,left_val:.4397256970405579},{features:[[16,2,4,6,-1],[16,4,4,2,3]],threshold:-.0261576101183891,right_val:.5189175009727478,left_val:.3135079145431519},{features:[[0,2,4,6,-1],[0,4,4,2,3]],threshold:-.0139598604291677,right_val:.5040717720985413,left_val:.3213272988796234},{features:[[9,6,2,6,-1],[9,6,1,6,2]],threshold:-.006369901821017265,right_val:.4849506914615631,left_val:.6387544870376587},{features:[[3,4,6,10,-1],[3,9,6,5,2]],threshold:-.008561382070183754,right_val:.5032019019126892,left_val:.2759132087230682},{features:[[9,5,2,6,-1],[9,5,1,6,2]],threshold:.000966229010373354,right_val:.5834879279136658,left_val:.4685640931129456},{features:[[3,13,2,3,-1],[3,14,2,1,3]],threshold:.0007655026856809855,right_val:.389642208814621,left_val:.5175207257270813},{features:[[13,13,3,2,-1],[13,14,3,1,2]],threshold:-.008183334022760391,right_val:.5208122134208679,left_val:.2069136947393417},{features:[[2,16,10,4,-1],[2,16,5,2,2],[7,18,5,2,2]],threshold:-.009397693909704685,right_val:.4641222953796387,left_val:.6134091019630432},{features:[[5,6,10,6,-1],[10,6,5,3,2],[5,9,5,3,2]],threshold:.004802898038178682,right_val:.439521998167038,left_val:.5454108119010925},{features:[[7,14,1,3,-1],[7,15,1,1,3]],threshold:-.003568056970834732,right_val:.4681093990802765,left_val:.6344485282897949},{features:[[14,16,6,3,-1],[14,17,6,1,3]],threshold:.0040733120404183865,right_val:.4015620052814484,left_val:.5292683243751526},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.0012568129459396005,right_val:.5452824831008911,left_val:.4392988085746765},{features:[[7,4,10,3,-1],[7,5,10,1,3]],threshold:-.0029065010603517294,right_val:.4863379895687103,left_val:.5898832082748413},{features:[[0,4,5,4,-1],[0,6,5,2,2]],threshold:-.00244093406945467,right_val:.5247421860694885,left_val:.4069364964962006},{features:[[13,11,3,9,-1],[13,14,3,3,3]],threshold:.0248307008296251,right_val:.3682524859905243,left_val:.5182725787162781},{features:[[4,11,3,9,-1],[4,14,3,3,3]],threshold:-.0488540083169937,right_val:.496128112077713,left_val:.1307577937841415},{features:[[9,7,2,1,-1],[9,7,1,1,2]],threshold:-.001611037994734943,right_val:.4872662127017975,left_val:.6421005725860596},{features:[[5,0,6,17,-1],[7,0,2,17,3]],threshold:-.0970094799995422,right_val:.495098888874054,left_val:.0477693490684032},{features:[[10,3,6,3,-1],[10,3,3,3,2]],threshold:.0011209240183234215,right_val:.5354745984077454,left_val:.4616267085075378},{features:[[2,2,15,4,-1],[7,2,5,4,3]],threshold:-.001306409016251564,right_val:.4638805985450745,left_val:.626185417175293},{features:[[8,2,8,2,-1],[12,2,4,1,2],[8,3,4,1,2]],threshold:.00045771620352752507,right_val:.4646640121936798,left_val:.5384417772293091},{features:[[8,1,3,6,-1],[8,3,3,2,3]],threshold:-.0006314995116554201,right_val:.51302570104599,left_val:.3804047107696533},{features:[[9,17,2,2,-1],[9,18,2,1,2]],threshold:.0001450597046641633,right_val:.5664461851119995,left_val:.4554310142993927},{features:[[0,0,2,14,-1],[1,0,1,14,2]],threshold:-.0164745505899191,right_val:.4715859889984131,left_val:.6596958041191101},{features:[[12,0,7,3,-1],[12,1,7,1,3]],threshold:.0133695797994733,right_val:.3035964965820313,left_val:.519546627998352},{features:[[1,14,1,2,-1],[1,15,1,1,2]],threshold:.00010271780047332868,right_val:.4107066094875336,left_val:.522917628288269},{features:[[14,12,2,8,-1],[15,12,1,4,2],[14,16,1,4,2]],threshold:-.0055311559699475765,right_val:.4960907101631165,left_val:.6352887749671936},{features:[[1,0,7,3,-1],[1,1,7,1,3]],threshold:-.0026187049224972725,right_val:.5140984058380127,left_val:.3824546039104462},{features:[[14,12,2,8,-1],[15,12,1,4,2],[14,16,1,4,2]],threshold:.005083426833152771,right_val:.6220818758010864,left_val:.4950439929962158},{features:[[6,0,8,12,-1],[6,0,4,6,2],[10,6,4,6,2]],threshold:.0798181593418121,right_val:.1322475969791412,left_val:.4952335953712463},{features:[[6,1,8,9,-1],[6,4,8,3,3]],threshold:-.0992265865206718,right_val:.5008416771888733,left_val:.7542728781700134},{features:[[5,2,2,2,-1],[5,3,2,1,2]],threshold:-.0006517401780001819,right_val:.5130121111869812,left_val:.3699302971363068},{features:[[13,14,6,6,-1],[16,14,3,3,2],[13,17,3,3,2]],threshold:-.018996849656105,right_val:.4921202957630158,left_val:.6689178943634033},{features:[[0,17,20,2,-1],[0,17,10,1,2],[10,18,10,1,2]],threshold:.0173468999564648,right_val:.1859198063611984,left_val:.4983300864696503},{features:[[10,3,2,6,-1],[11,3,1,3,2],[10,6,1,3,2]],threshold:.0005508210160769522,right_val:.5522121787071228,left_val:.4574424028396606},{features:[[5,12,6,2,-1],[8,12,3,2,2]],threshold:.002005605027079582,right_val:.3856469988822937,left_val:.5131744742393494},{features:[[10,7,6,13,-1],[10,7,3,13,2]],threshold:-.007768819108605385,right_val:.5434309244155884,left_val:.4361700117588043},{features:[[5,15,10,5,-1],[10,15,5,5,2]],threshold:.0508782789111137,right_val:.6840639710426331,left_val:.4682720899581909},{features:[[10,4,4,10,-1],[10,4,2,10,2]],threshold:-.0022901780903339386,right_val:.5306099057197571,left_val:.4329245090484619},{features:[[5,7,2,1,-1],[6,7,1,1,2]],threshold:-.00015715380141045898,right_val:.4378164112567902,left_val:.5370057225227356},{features:[[10,3,6,7,-1],[10,3,3,7,2]],threshold:.1051924005150795,right_val:.0673614665865898,left_val:.5137274265289307},{features:[[4,3,6,7,-1],[7,3,3,7,2]],threshold:.002719891956076026,right_val:.5255665183067322,left_val:.4112060964107513},{features:[[1,7,18,5,-1],[7,7,6,5,3]],threshold:.0483377799391747,right_val:.4438967108726502,left_val:.5404623746871948},{features:[[3,17,4,3,-1],[5,17,2,3,2]],threshold:.0009570376132614911,right_val:.5399510860443115,left_val:.4355969130992889},{features:[[8,14,12,6,-1],[14,14,6,3,2],[8,17,6,3,2]],threshold:-.0253712590783834,right_val:.5031024813652039,left_val:.5995175242424011},{features:[[0,13,20,4,-1],[0,13,10,2,2],[10,15,10,2,2]],threshold:.0524579510092735,right_val:.1398351043462753,left_val:.4950287938117981},{features:[[4,5,14,2,-1],[11,5,7,1,2],[4,6,7,1,2]],threshold:-.0123656298965216,right_val:.496410608291626,left_val:.639729917049408},{features:[[1,2,10,12,-1],[1,2,5,6,2],[6,8,5,6,2]],threshold:-.1458971947431564,right_val:.494632214307785,left_val:.1001669988036156},{features:[[6,1,14,3,-1],[6,2,14,1,3]],threshold:-.0159086007624865,right_val:.5208340883255005,left_val:.3312329947948456},{features:[[8,16,2,3,-1],[8,17,2,1,3]],threshold:.00039486068999394774,right_val:.5426102876663208,left_val:.4406363964080811},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:-.0052454001270234585,right_val:.5189967155456543,left_val:.2799589931964874},{features:[[5,15,4,2,-1],[5,15,2,1,2],[7,16,2,1,2]],threshold:-.005042179953306913,right_val:.4752142131328583,left_val:.6987580060958862},{features:[[10,15,1,3,-1],[10,16,1,1,3]],threshold:.0029812189750373363,right_val:.6307479739189148,left_val:.4983288943767548},{features:[[8,16,4,4,-1],[8,16,2,2,2],[10,18,2,2,2]],threshold:-.007288430817425251,right_val:.5026869773864746,left_val:.298233300447464},{features:[[6,11,8,6,-1],[6,14,8,3,2]],threshold:.0015094350092113018,right_val:.3832970857620239,left_val:.5308442115783691},{features:[[2,13,5,2,-1],[2,14,5,1,2]],threshold:-.009334079921245575,right_val:.4969817101955414,left_val:.2037964016199112},{features:[[13,14,6,6,-1],[16,14,3,3,2],[13,17,3,3,2]],threshold:.0286671407520771,right_val:.6928027272224426,left_val:.5025696754455566},{features:[[1,9,18,4,-1],[7,9,6,4,3]],threshold:.1701968014240265,right_val:.1476442962884903,left_val:.4960052967071533},{features:[[13,14,6,6,-1],[16,14,3,3,2],[13,17,3,3,2]],threshold:-.003261447884142399,right_val:.4826056063175201,left_val:.5603063702583313},{features:[[0,2,1,6,-1],[0,4,1,2,3]],threshold:.0005576927796937525,right_val:.4129633009433746,left_val:.5205562114715576},{features:[[5,0,15,20,-1],[5,10,15,10,2]],threshold:.3625833988189697,right_val:.3768612146377564,left_val:.5221652984619141},{features:[[1,14,6,6,-1],[1,14,3,3,2],[4,17,3,3,2]],threshold:-.0116151301190257,right_val:.4637489914894104,left_val:.6022682785987854},{features:[[8,14,4,6,-1],[10,14,2,3,2],[8,17,2,3,2]],threshold:-.004079519771039486,right_val:.5337479114532471,left_val:.4070447087287903},{features:[[7,11,2,1,-1],[8,11,1,1,2]],threshold:.0005720430053770542,right_val:.5900393128395081,left_val:.4601835012435913},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:.000675433489959687,right_val:.4345428943634033,left_val:.5398252010345459},{features:[[8,17,3,2,-1],[9,17,1,2,3]],threshold:.0006329569732770324,right_val:.4051358997821808,left_val:.5201563239097595},{features:[[12,14,4,6,-1],[14,14,2,3,2],[12,17,2,3,2]],threshold:.00124353205319494,right_val:.5547441244125366,left_val:.4642387926578522},{features:[[4,14,4,6,-1],[4,14,2,3,2],[6,17,2,3,2]],threshold:-.004736385773867369,right_val:.4672552049160004,left_val:.6198567152023315},{features:[[13,14,2,6,-1],[14,14,1,3,2],[13,17,1,3,2]],threshold:-.006465846206992865,right_val:.5019000768661499,left_val:.6837332844734192},{features:[[5,14,2,6,-1],[5,14,1,3,2],[6,17,1,3,2]],threshold:.000350173213519156,right_val:.5363622903823853,left_val:.4344803094863892},{features:[[7,0,6,12,-1],[7,4,6,4,3]],threshold:.00015754920605104417,right_val:.5732020735740662,left_val:.4760079085826874},{features:[[0,7,12,2,-1],[4,7,4,2,3]],threshold:.009977436624467373,right_val:.3635039925575256,left_val:.5090985894203186},{features:[[10,3,3,13,-1],[11,3,1,13,3]],threshold:-.0004146452993154526,right_val:.4593802094459534,left_val:.5570064783096313},{features:[[7,3,3,13,-1],[8,3,1,13,3]],threshold:-.00035888899583369493,right_val:.4339134991168976,left_val:.5356845855712891},{features:[[10,8,6,3,-1],[10,9,6,1,3]],threshold:.0004046325047966093,right_val:.5436776876449585,left_val:.4439803063869476},{features:[[3,11,3,2,-1],[4,11,1,2,3]],threshold:-.0008218478760682046,right_val:.5176299214363098,left_val:.4042294919490814},{features:[[13,12,6,8,-1],[16,12,3,4,2],[13,16,3,4,2]],threshold:.005946741905063391,right_val:.5633779764175415,left_val:.4927651882171631},{features:[[7,6,6,5,-1],[9,6,2,5,3]],threshold:-.0217533893883228,right_val:.480084091424942,left_val:.8006293773651123},{features:[[17,11,2,7,-1],[17,11,1,7,2]],threshold:-.0145403798669577,right_val:.5182222723960876,left_val:.3946054875850678},{features:[[3,13,8,2,-1],[7,13,4,2,2]],threshold:-.0405107699334621,right_val:.4935792982578278,left_val:.0213249903172255},{features:[[6,9,8,3,-1],[6,10,8,1,3]],threshold:-.0005845826817676425,right_val:.5314025282859802,left_val:.4012795984745026},{features:[[4,3,4,3,-1],[4,4,4,1,3]],threshold:.005515180062502623,right_val:.5896260738372803,left_val:.4642418920993805},{features:[[11,3,4,3,-1],[11,4,4,1,3]],threshold:-.006062622182071209,right_val:.5016477704048157,left_val:.6502159237861633},{features:[[1,4,17,12,-1],[1,8,17,4,3]],threshold:.0945358425378799,right_val:.4126827120780945,left_val:.5264708995819092},{features:[[11,3,4,3,-1],[11,4,4,1,3]],threshold:.004731505177915096,right_val:.5892447829246521,left_val:.4879199862480164},{features:[[4,8,6,3,-1],[4,9,6,1,3]],threshold:-.0005257147131487727,right_val:.5189412832260132,left_val:.391728013753891},{features:[[12,3,5,3,-1],[12,4,5,1,3]],threshold:-.002546404954046011,right_val:.498570591211319,left_val:.5837599039077759},{features:[[1,11,2,7,-1],[2,11,1,7,2]],threshold:-.0260756891220808,right_val:.4955821931362152,left_val:.1261983960866928},{features:[[15,12,2,8,-1],[16,12,1,4,2],[15,16,1,4,2]],threshold:-.00547797093167901,right_val:.5010265707969666,left_val:.5722513794898987},{features:[[4,8,11,3,-1],[4,9,11,1,3]],threshold:.005133774131536484,right_val:.4226376116275787,left_val:.527326226234436},{features:[[9,13,6,2,-1],[12,13,3,1,2],[9,14,3,1,2]],threshold:.000479449809063226,right_val:.5819587111473083,left_val:.4450066983699799},{features:[[6,13,4,3,-1],[6,14,4,1,3]],threshold:-.0021114079281687737,right_val:.451171487569809,left_val:.5757653117179871},{features:[[9,12,3,3,-1],[10,12,1,3,3]],threshold:-.0131799904629588,right_val:.5160734057426453,left_val:.1884381026029587},{features:[[5,3,3,3,-1],[5,4,3,1,3]],threshold:-.004796809982508421,right_val:.4736118912696838,left_val:.6589789986610413},{features:[[9,4,2,3,-1],[9,5,2,1,3]],threshold:.0067483168095350266,right_val:.3356395065784454,left_val:.5259429812431335},{features:[[0,2,16,3,-1],[0,3,16,1,3]],threshold:.0014623369788751006,right_val:.4264092147350311,left_val:.5355271100997925},{features:[[15,12,2,8,-1],[16,12,1,4,2],[15,16,1,4,2]],threshold:.004764515906572342,right_val:.5786827802658081,left_val:.5034406781196594},{features:[[3,12,2,8,-1],[3,12,1,4,2],[4,16,1,4,2]],threshold:.0068066660314798355,right_val:.6677829027175903,left_val:.475660502910614},{features:[[14,13,3,6,-1],[14,15,3,2,3]],threshold:.0036608621012419462,right_val:.4311546981334686,left_val:.5369611978530884},{features:[[3,13,3,6,-1],[3,15,3,2,3]],threshold:.0214496403932571,right_val:.1888816058635712,left_val:.4968641996383667},{features:[[6,5,10,2,-1],[11,5,5,1,2],[6,6,5,1,2]],threshold:.004167890176177025,right_val:.5815368890762329,left_val:.4930733144283295},{features:[[2,14,14,6,-1],[2,17,14,3,2]],threshold:.008646756410598755,right_val:.4132595062255859,left_val:.5205205082893372},{features:[[10,14,1,3,-1],[10,15,1,1,3]],threshold:-.0003611407882999629,right_val:.4800927937030792,left_val:.5483555197715759},{features:[[4,16,2,2,-1],[4,16,1,1,2],[5,17,1,1,2]],threshold:.0010808729566633701,right_val:.6041421294212341,left_val:.4689902067184448},{features:[[10,6,2,3,-1],[10,7,2,1,3]],threshold:.005771995987743139,right_val:.3053277134895325,left_val:.5171142220497131},{features:[[0,17,20,2,-1],[0,17,10,1,2],[10,18,10,1,2]],threshold:.001572077046148479,right_val:.4178803861141205,left_val:.5219978094100952},{features:[[13,6,1,3,-1],[13,7,1,1,3]],threshold:-.0019307859474793077,right_val:.4812920093536377,left_val:.5860369801521301},{features:[[8,13,3,2,-1],[9,13,1,2,3]],threshold:-.007892627269029617,right_val:.497173398733139,left_val:.1749276965856552},{features:[[12,2,3,3,-1],[13,2,1,3,3]],threshold:-.002222467912361026,right_val:.521284818649292,left_val:.434258908033371},{features:[[3,18,2,2,-1],[3,18,1,1,2],[4,19,1,1,2]],threshold:.0019011989934369922,right_val:.689205527305603,left_val:.4765186905860901},{features:[[9,16,3,4,-1],[10,16,1,4,3]],threshold:.0027576119173318148,right_val:.4337486028671265,left_val:.5262191295623779},{features:[[6,6,1,3,-1],[6,7,1,1,3]],threshold:.005178744904696941,right_val:.7843729257583618,left_val:.4804069101810455},{features:[[13,1,5,2,-1],[13,2,5,1,2]],threshold:-.0009027334162965417,right_val:.5353423953056335,left_val:.412084698677063},{features:[[7,14,6,2,-1],[7,14,3,1,2],[10,15,3,1,2]],threshold:.005179795902222395,right_val:.6425960063934326,left_val:.4740372896194458},{features:[[11,3,3,4,-1],[12,3,1,4,3]],threshold:-.0101140001788735,right_val:.5175017714500427,left_val:.2468792051076889},{features:[[1,13,12,6,-1],[5,13,4,6,3]],threshold:-.0186170600354671,right_val:.4628978967666626,left_val:.5756294131278992},{features:[[14,11,5,2,-1],[14,12,5,1,2]],threshold:.0059225959703326225,right_val:.3214271068572998,left_val:.5169625878334045},{features:[[2,15,14,4,-1],[2,15,7,2,2],[9,17,7,2,2]],threshold:-.006294507998973131,right_val:.5141636729240417,left_val:.3872014880180359},{features:[[3,7,14,2,-1],[10,7,7,1,2],[3,8,7,1,2]],threshold:.0065353019163012505,right_val:.6310489773750305,left_val:.4853048920631409},{features:[[1,11,4,2,-1],[1,12,4,1,2]],threshold:.0010878399480134249,right_val:.3723258972167969,left_val:.5117315053939819},{features:[[14,0,6,14,-1],[16,0,2,14,3]],threshold:-.0225422400981188,right_val:.4887112975120544,left_val:.5692740082740784},{features:[[4,11,1,3,-1],[4,12,1,1,3]],threshold:-.003006566083058715,right_val:.5003992915153503,left_val:.2556012868881226},{features:[[14,0,6,14,-1],[16,0,2,14,3]],threshold:.007474127225577831,right_val:.5675926804542542,left_val:.4810872972011566},{features:[[1,10,3,7,-1],[2,10,1,7,3]],threshold:.0261623207479715,right_val:.1777237057685852,left_val:.4971194863319397},{features:[[8,12,9,2,-1],[8,13,9,1,2]],threshold:.0009435273823328316,right_val:.549125075340271,left_val:.4940010905265808},{features:[[0,6,20,1,-1],[10,6,10,1,2]],threshold:.0333632417023182,right_val:.2790724039077759,left_val:.5007612109184265},{features:[[8,4,4,4,-1],[8,4,2,4,2]],threshold:-.0151186501607299,right_val:.4973031878471375,left_val:.7059578895568848},{features:[[0,0,2,2,-1],[0,1,2,1,2]],threshold:.0009864894673228264,right_val:.3776761889457703,left_val:.5128620266914368}],threshold:104.74919891357422},{simpleClassifiers:[{features:[[5,3,10,9,-1],[5,6,10,3,3]],threshold:-.0951507985591888,right_val:.4017286896705627,left_val:.6470757126808167},{features:[[15,2,4,10,-1],[15,2,2,10,2]],threshold:.006270234007388353,right_val:.574644923210144,left_val:.399982213973999},{features:[[8,2,2,7,-1],[9,2,1,7,2]],threshold:.000300180894555524,right_val:.5538809895515442,left_val:.355877012014389},{features:[[7,4,12,1,-1],[11,4,4,1,3]],threshold:.0011757409665733576,right_val:.5382617712020874,left_val:.425653487443924},{features:[[3,4,9,1,-1],[6,4,3,1,3]],threshold:4423526843311265e-20,right_val:.5589926838874817,left_val:.3682908117771149},{features:[[15,10,1,4,-1],[15,12,1,2,2]],threshold:-29936920327600092e-21,right_val:.4020367860794067,left_val:.5452470183372498},{features:[[4,10,6,4,-1],[7,10,3,4,2]],threshold:.003007319988682866,right_val:.3317843973636627,left_val:.5239058136940002},{features:[[15,9,1,6,-1],[15,12,1,3,2]],threshold:-.0105138896033168,right_val:.5307983756065369,left_val:.4320689141750336},{features:[[7,17,6,3,-1],[7,18,6,1,3]],threshold:.008347682654857635,right_val:.6453298926353455,left_val:.4504637122154236},{features:[[14,3,2,16,-1],[15,3,1,8,2],[14,11,1,8,2]],threshold:-.0031492270063608885,right_val:.5370525121688843,left_val:.4313425123691559},{features:[[4,9,1,6,-1],[4,12,1,3,2]],threshold:-1443564997316571e-20,right_val:.381797194480896,left_val:.5326603055000305},{features:[[12,1,5,2,-1],[12,2,5,1,2]],threshold:-.00042855090578086674,right_val:.5382009744644165,left_val:.430516391992569},{features:[[6,18,4,2,-1],[6,18,2,1,2],[8,19,2,1,2]],threshold:.00015062429883982986,right_val:.5544965267181396,left_val:.4235970973968506},{features:[[2,4,16,10,-1],[10,4,8,5,2],[2,9,8,5,2]],threshold:.0715598315000534,right_val:.2678802907466888,left_val:.5303059816360474},{features:[[6,5,1,10,-1],[6,10,1,5,2]],threshold:.0008409518050029874,right_val:.5205433964729309,left_val:.3557108938694},{features:[[4,8,15,2,-1],[9,8,5,2,3]],threshold:.0629865005612373,right_val:.2861376106739044,left_val:.5225362777709961},{features:[[1,8,15,2,-1],[6,8,5,2,3]],threshold:-.0033798629883676767,right_val:.5201697945594788,left_val:.3624185919761658},{features:[[9,5,3,6,-1],[9,7,3,2,3]],threshold:-.00011810739670181647,right_val:.3959893882274628,left_val:.547447681427002},{features:[[5,7,8,2,-1],[9,7,4,2,2]],threshold:-.0005450560129247606,right_val:.5215715765953064,left_val:.3740422129631043},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.0018454910023137927,right_val:.4584448933601379,left_val:.5893052220344543},{features:[[1,0,16,3,-1],[1,1,16,1,3]],threshold:-.0004383237101137638,right_val:.5385351181030273,left_val:.4084582030773163},{features:[[11,2,7,2,-1],[11,3,7,1,2]],threshold:-.002400083001703024,right_val:.5293580293655396,left_val:.377745509147644},{features:[[5,1,10,18,-1],[5,7,10,6,3]],threshold:-.0987957417964935,right_val:.5070089101791382,left_val:.2963612079620361},{features:[[17,4,3,2,-1],[18,4,1,2,3]],threshold:.0031798239797353745,right_val:.6726443767547607,left_val:.4877632856369019},{features:[[8,13,1,3,-1],[8,14,1,1,3]],threshold:.00032406419632025063,right_val:.5561109781265259,left_val:.4366911053657532},{features:[[3,14,14,6,-1],[3,16,14,2,3]],threshold:-.0325472503900528,right_val:.5308616161346436,left_val:.31281578540802},{features:[[0,2,3,4,-1],[1,2,1,4,3]],threshold:-.007756113074719906,right_val:.4639872014522553,left_val:.6560224890708923},{features:[[12,1,5,2,-1],[12,2,5,1,2]],threshold:.0160272493958473,right_val:.3141897916793823,left_val:.5172680020332336},{features:[[3,1,5,2,-1],[3,2,5,1,2]],threshold:710023505234858e-20,right_val:.5336294770240784,left_val:.4084446132183075},{features:[[10,13,2,3,-1],[10,14,2,1,3]],threshold:.007342280820012093,right_val:.660346508026123,left_val:.4966922104358673},{features:[[8,13,2,3,-1],[8,14,2,1,3]],threshold:-.0016970280557870865,right_val:.4500182867050171,left_val:.5908237099647522},{features:[[14,12,2,3,-1],[14,13,2,1,3]],threshold:.0024118260480463505,right_val:.3599720895290375,left_val:.5315160751342773},{features:[[7,2,2,3,-1],[7,3,2,1,3]],threshold:-.005530093796551228,right_val:.4996814131736755,left_val:.2334040999412537},{features:[[5,6,10,4,-1],[10,6,5,2,2],[5,8,5,2,2]],threshold:-.0026478730142116547,right_val:.4684734046459198,left_val:.5880935788154602},{features:[[9,13,1,6,-1],[9,16,1,3,2]],threshold:.0112956296652555,right_val:.1884590983390808,left_val:.4983777105808258},{features:[[10,12,2,2,-1],[11,12,1,1,2],[10,13,1,1,2]],threshold:-.000669528788421303,right_val:.4799019992351532,left_val:.5872138142585754},{features:[[4,12,2,3,-1],[4,13,2,1,3]],threshold:.0014410680159926414,right_val:.350101113319397,left_val:.5131189227104187},{features:[[14,4,6,6,-1],[14,6,6,2,3]],threshold:.0024637870956212282,right_val:.4117639064788818,left_val:.5339372158050537},{features:[[8,17,2,3,-1],[8,18,2,1,3]],threshold:.0003311451873742044,right_val:.5398246049880981,left_val:.4313383102416992},{features:[[16,4,4,6,-1],[16,6,4,2,3]],threshold:-.0335572697222233,right_val:.5179154872894287,left_val:.26753368973732},{features:[[0,4,4,6,-1],[0,6,4,2,3]],threshold:.0185394193977118,right_val:.2317177057266235,left_val:.4973869919776917},{features:[[14,6,2,3,-1],[14,6,1,3,2]],threshold:-.00029698139405809343,right_val:.4643664062023163,left_val:.552970826625824},{features:[[4,9,8,1,-1],[8,9,4,1,2]],threshold:-.0004557725915219635,right_val:.4469191133975983,left_val:.5629584193229675},{features:[[8,12,4,3,-1],[8,13,4,1,3]],threshold:-.0101589802652597,right_val:.4925918877124786,left_val:.6706212759017944},{features:[[5,12,10,6,-1],[5,14,10,2,3]],threshold:-22413829356082715e-21,right_val:.3912901878356934,left_val:.5239421725273132},{features:[[11,12,1,2,-1],[11,13,1,1,2]],threshold:7203496352303773e-20,right_val:.5501788854598999,left_val:.4799438118934631},{features:[[8,15,4,2,-1],[8,16,4,1,2]],threshold:-.006926720961928368,right_val:.4698084890842438,left_val:.6930009722709656},{features:[[6,9,8,8,-1],[10,9,4,4,2],[6,13,4,4,2]],threshold:-.007699783891439438,right_val:.5480883121490479,left_val:.409962385892868},{features:[[7,12,4,6,-1],[7,12,2,3,2],[9,15,2,3,2]],threshold:-.007313054986298084,right_val:.5057886242866516,left_val:.3283475935459137},{features:[[10,11,3,1,-1],[11,11,1,1,3]],threshold:.0019650589674711227,right_val:.6398249864578247,left_val:.4978047013282776},{features:[[9,7,2,10,-1],[9,7,1,5,2],[10,12,1,5,2]],threshold:.007164760027080774,right_val:.6222137212753296,left_val:.4661160111427307},{features:[[8,0,6,6,-1],[10,0,2,6,3]],threshold:-.0240786392241716,right_val:.5222162008285522,left_val:.2334644943475723},{features:[[3,11,2,6,-1],[3,13,2,2,3]],threshold:-.0210279691964388,right_val:.4938226044178009,left_val:.1183653995394707},{features:[[16,12,1,2,-1],[16,13,1,1,2]],threshold:.00036017020465806127,right_val:.4116711020469666,left_val:.5325019955635071},{features:[[1,14,6,6,-1],[1,14,3,3,2],[4,17,3,3,2]],threshold:-.0172197297215462,right_val:.4664269089698792,left_val:.6278762221336365},{features:[[13,1,3,6,-1],[14,1,1,6,3]],threshold:-.007867214269936085,right_val:.5249736905097961,left_val:.3403415083885193},{features:[[8,8,2,2,-1],[8,9,2,1,2]],threshold:-.000447773898486048,right_val:.5086259245872498,left_val:.3610411882400513},{features:[[9,9,3,3,-1],[10,9,1,3,3]],threshold:.005548601038753986,right_val:.6203498244285583,left_val:.4884265959262848},{features:[[8,7,3,3,-1],[8,8,3,1,3]],threshold:-.00694611482322216,right_val:.5011097192764282,left_val:.262593001127243},{features:[[14,0,2,3,-1],[14,0,1,3,2]],threshold:.00013569870498031378,right_val:.5628312230110168,left_val:.4340794980525971},{features:[[1,0,18,9,-1],[7,0,6,9,3]],threshold:-.0458802506327629,right_val:.4696274995803833,left_val:.6507998704910278},{features:[[11,5,4,15,-1],[11,5,2,15,2]],threshold:-.0215825606137514,right_val:.5287616848945618,left_val:.3826502859592438},{features:[[5,5,4,15,-1],[7,5,2,15,2]],threshold:-.0202095396816731,right_val:.5074477195739746,left_val:.3233368098735809},{features:[[14,0,2,3,-1],[14,0,1,3,2]],threshold:.005849671084433794,right_val:.4489670991897583,left_val:.5177603960037231},{features:[[4,0,2,3,-1],[5,0,1,3,2]],threshold:-5747637987951748e-20,right_val:.5246363878250122,left_val:.4020850956439972},{features:[[11,12,2,2,-1],[12,12,1,1,2],[11,13,1,1,2]],threshold:-.001151310047134757,right_val:.490515410900116,left_val:.6315072178840637},{features:[[7,12,2,2,-1],[7,12,1,1,2],[8,13,1,1,2]],threshold:.0019862831104546785,right_val:.6497151255607605,left_val:.4702459871768951},{features:[[12,0,3,4,-1],[13,0,1,4,3]],threshold:-.005271951202303171,right_val:.5227652788162231,left_val:.3650383949279785},{features:[[4,11,3,3,-1],[4,12,3,1,3]],threshold:.0012662699446082115,right_val:.387761801481247,left_val:.5166100859642029},{features:[[12,7,4,2,-1],[12,8,4,1,2]],threshold:-.006291944067925215,right_val:.5023847818374634,left_val:.737589418888092},{features:[[8,10,3,2,-1],[9,10,1,2,3]],threshold:.000673601112794131,right_val:.5495585799217224,left_val:.4423226118087769},{features:[[9,9,3,2,-1],[10,9,1,2,3]],threshold:-.0010523450328037143,right_val:.4859583079814911,left_val:.5976396203041077},{features:[[8,9,3,2,-1],[9,9,1,2,3]],threshold:-.00044216238893568516,right_val:.4398930966854096,left_val:.5955939292907715},{features:[[12,0,3,4,-1],[13,0,1,4,3]],threshold:.0011747940443456173,right_val:.4605058133602142,left_val:.5349888205528259},{features:[[5,0,3,4,-1],[6,0,1,4,3]],threshold:.005245743785053492,right_val:.2941577136516571,left_val:.5049191117286682},{features:[[4,14,12,4,-1],[10,14,6,2,2],[4,16,6,2,2]],threshold:-.0245397202670574,right_val:.5218586921691895,left_val:.2550177872180939},{features:[[8,13,2,3,-1],[8,14,2,1,3]],threshold:.0007379304151982069,right_val:.5490816235542297,left_val:.4424861073493958},{features:[[10,10,3,8,-1],[10,14,3,4,2]],threshold:.0014233799884095788,right_val:.4081355929374695,left_val:.5319514274597168},{features:[[8,10,4,8,-1],[8,10,2,4,2],[10,14,2,4,2]],threshold:-.0024149110540747643,right_val:.5238950252532959,left_val:.4087659120559692},{features:[[10,8,3,1,-1],[11,8,1,1,3]],threshold:-.0012165299849584699,right_val:.4908052980899811,left_val:.567457914352417},{features:[[9,12,1,6,-1],[9,15,1,3,2]],threshold:-.0012438809499144554,right_val:.5256118178367615,left_val:.4129425883293152},{features:[[10,8,3,1,-1],[11,8,1,1,3]],threshold:.006194273941218853,right_val:.7313653230667114,left_val:.5060194134712219},{features:[[7,8,3,1,-1],[8,8,1,1,3]],threshold:-.0016607169527560472,right_val:.4596369862556458,left_val:.5979632139205933},{features:[[5,2,15,14,-1],[5,9,15,7,2]],threshold:-.0273162592202425,right_val:.5308842062950134,left_val:.4174365103244782},{features:[[2,1,2,10,-1],[2,1,1,5,2],[3,6,1,5,2]],threshold:-.00158455700147897,right_val:.4519486129283905,left_val:.56158047914505},{features:[[14,14,2,3,-1],[14,15,2,1,3]],threshold:-.0015514739789068699,right_val:.5360785126686096,left_val:.4076187014579773},{features:[[2,7,3,3,-1],[3,7,1,3,3]],threshold:.0003844655875582248,right_val:.5430442094802856,left_val:.4347293972969055},{features:[[17,4,3,3,-1],[17,5,3,1,3]],threshold:-.0146722598001361,right_val:.5146093964576721,left_val:.1659304946660996},{features:[[0,4,3,3,-1],[0,5,3,1,3]],threshold:.008160888217389584,right_val:.1884745955467224,left_val:.4961819052696228},{features:[[13,5,6,2,-1],[16,5,3,1,2],[13,6,3,1,2]],threshold:.0011121659772470593,right_val:.6093816161155701,left_val:.4868263900279999},{features:[[4,19,12,1,-1],[8,19,4,1,3]],threshold:-.007260377053171396,right_val:.4690375924110413,left_val:.6284325122833252},{features:[[12,12,2,4,-1],[12,14,2,2,2]],threshold:-.00024046430189628154,right_val:.4046044051647186,left_val:.5575000047683716},{features:[[3,15,1,3,-1],[3,16,1,1,3]],threshold:-.00023348190006799996,right_val:.5252848267555237,left_val:.4115762114524841},{features:[[11,16,6,4,-1],[11,16,3,4,2]],threshold:.005573648028075695,right_val:.5690100789070129,left_val:.4730072915554047},{features:[[2,10,3,10,-1],[3,10,1,10,3]],threshold:.0306237693876028,right_val:.1740095019340515,left_val:.4971886873245239},{features:[[12,8,2,4,-1],[12,8,1,4,2]],threshold:.0009207479888573289,right_val:.4354872107505798,left_val:.5372117757797241},{features:[[6,8,2,4,-1],[7,8,1,4,2]],threshold:-4355073906481266e-20,right_val:.4347316920757294,left_val:.5366883873939514},{features:[[10,14,2,3,-1],[10,14,1,3,2]],threshold:-.006645271088927984,right_val:.516053318977356,left_val:.3435518145561218},{features:[[5,1,10,3,-1],[10,1,5,3,2]],threshold:.0432219989597797,right_val:.7293652892112732,left_val:.4766792058944702},{features:[[10,7,3,2,-1],[11,7,1,2,3]],threshold:.0022331769578158855,right_val:.5633171200752258,left_val:.5029315948486328},{features:[[5,6,9,2,-1],[8,6,3,2,3]],threshold:.0031829739455133677,right_val:.5192136764526367,left_val:.4016092121601105},{features:[[9,8,2,2,-1],[9,9,2,1,2]],threshold:-.00018027749320026487,right_val:.5417919754981995,left_val:.4088315963745117},{features:[[2,11,16,6,-1],[2,11,8,3,2],[10,14,8,3,2]],threshold:-.0052934689447283745,right_val:.5243561863899231,left_val:.407567709684372},{features:[[12,7,2,2,-1],[13,7,1,1,2],[12,8,1,1,2]],threshold:.0012750959722325206,right_val:.6387010812759399,left_val:.4913282990455627},{features:[[9,5,2,3,-1],[9,6,2,1,3]],threshold:.004338532220572233,right_val:.2947346866130829,left_val:.5031672120094299},{features:[[9,7,3,2,-1],[10,7,1,2,3]],threshold:.00852507445961237,right_val:.6308869123458862,left_val:.4949789047241211},{features:[[5,1,8,12,-1],[5,7,8,6,2]],threshold:-.0009426635224372149,right_val:.4285649955272675,left_val:.5328366756439209},{features:[[13,5,2,2,-1],[13,6,2,1,2]],threshold:.0013609660090878606,right_val:.5941501259803772,left_val:.4991525113582611},{features:[[5,5,2,2,-1],[5,6,2,1,2]],threshold:.0004478250921238214,right_val:.5854480862617493,left_val:.4573504030704498},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:.001336005050688982,right_val:.584905207157135,left_val:.4604358971118927},{features:[[4,14,2,3,-1],[4,15,2,1,3]],threshold:-.0006096754805184901,right_val:.522942304611206,left_val:.3969388902187347},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:-.002365678083151579,right_val:.4898357093334198,left_val:.5808320045471191},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.001073434017598629,right_val:.5470039248466492,left_val:.435121089220047},{features:[[9,14,2,6,-1],[10,14,1,3,2],[9,17,1,3,2]],threshold:.0021923359017819166,right_val:.3842903971672058,left_val:.535506010055542},{features:[[8,14,3,2,-1],[9,14,1,2,3]],threshold:.005496861878782511,right_val:.2827191948890686,left_val:.5018138885498047},{features:[[9,5,6,6,-1],[11,5,2,6,3]],threshold:-.0753688216209412,right_val:.5148826837539673,left_val:.1225076019763947},{features:[[5,5,6,6,-1],[7,5,2,6,3]],threshold:.0251344703137875,right_val:.702544629573822,left_val:.4731766879558563},{features:[[13,13,1,2,-1],[13,14,1,1,2]],threshold:-2935859993158374e-20,right_val:.465608686208725,left_val:.5430532097816467},{features:[[0,2,10,2,-1],[0,3,10,1,2]],threshold:-.0005835591000504792,right_val:.5190119743347168,left_val:.4031040072441101},{features:[[13,13,1,2,-1],[13,14,1,1,2]],threshold:-.0026639450807124376,right_val:.5161771178245544,left_val:.4308126866817474},{features:[[5,7,2,2,-1],[5,7,1,1,2],[6,8,1,1,2]],threshold:-.0013804089976474643,right_val:.4695515930652618,left_val:.621982991695404},{features:[[13,5,2,7,-1],[13,5,1,7,2]],threshold:.0012313219485804439,right_val:.4425831139087677,left_val:.5379363894462585},{features:[[6,13,1,2,-1],[6,14,1,1,2]],threshold:-14644179827882908e-21,right_val:.4222503006458283,left_val:.5281640291213989},{features:[[11,0,3,7,-1],[12,0,1,7,3]],threshold:-.0128188095986843,right_val:.5179932713508606,left_val:.2582092881202698},{features:[[0,3,2,16,-1],[0,3,1,8,2],[1,11,1,8,2]],threshold:.0228521898388863,right_val:.7609264254570007,left_val:.4778693020343781},{features:[[11,0,3,7,-1],[12,0,1,7,3]],threshold:.0008230597013607621,right_val:.4671724140644074,left_val:.5340992212295532},{features:[[6,0,3,7,-1],[7,0,1,7,3]],threshold:.0127701200544834,right_val:.1472366005182266,left_val:.4965761005878449},{features:[[11,16,8,4,-1],[11,16,4,4,2]],threshold:-.0500515103340149,right_val:.5016592144966125,left_val:.641499400138855},{features:[[1,16,8,4,-1],[5,16,4,4,2]],threshold:.0157752707600594,right_val:.5685362219810486,left_val:.4522320032119751},{features:[[13,5,2,7,-1],[13,5,1,7,2]],threshold:-.0185016207396984,right_val:.5137959122657776,left_val:.2764748930931091},{features:[[5,5,2,7,-1],[6,5,1,7,2]],threshold:.0024626250378787518,right_val:.3795408010482788,left_val:.5141941905021667},{features:[[18,6,2,14,-1],[18,13,2,7,2]],threshold:.0629161670804024,right_val:.658043384552002,left_val:.5060648918151855},{features:[[6,10,3,4,-1],[6,12,3,2,2]],threshold:-21648500478477217e-21,right_val:.401988685131073,left_val:.5195388197898865},{features:[[14,7,1,2,-1],[14,8,1,1,2]],threshold:.0021180990152060986,right_val:.5954458713531494,left_val:.4962365031242371},{features:[[0,1,18,6,-1],[0,1,9,3,2],[9,4,9,3,2]],threshold:-.0166348908096552,right_val:.517544686794281,left_val:.3757933080196381},{features:[[14,7,1,2,-1],[14,8,1,1,2]],threshold:-.002889947034418583,right_val:.5057178735733032,left_val:.6624013781547546},{features:[[0,6,2,14,-1],[0,13,2,7,2]],threshold:.076783262193203,right_val:.8047714829444885,left_val:.4795796871185303},{features:[[17,0,3,12,-1],[18,0,1,12,3]],threshold:.003917067777365446,right_val:.5719941854476929,left_val:.4937882125377655},{features:[[0,6,18,3,-1],[0,7,18,1,3]],threshold:-.0726706013083458,right_val:.4943903982639313,left_val:.0538945607841015},{features:[[6,0,14,16,-1],[6,8,14,8,2]],threshold:.5403950214385986,right_val:.1143338978290558,left_val:.5129774212837219},{features:[[0,0,3,12,-1],[1,0,1,12,3]],threshold:.0029510019812732935,right_val:.5698574185371399,left_val:.4528343975543976},{features:[[13,0,3,7,-1],[14,0,1,7,3]],threshold:.0034508369863033295,right_val:.4218730926513672,left_val:.5357726812362671},{features:[[5,7,1,2,-1],[5,8,1,1,2]],threshold:-.0004207793972454965,right_val:.4637925922870636,left_val:.5916172862052917},{features:[[14,4,6,6,-1],[14,6,6,2,3]],threshold:.0033051050268113613,right_val:.438204288482666,left_val:.5273385047912598},{features:[[5,7,7,2,-1],[5,8,7,1,2]],threshold:.0004773506079800427,right_val:.5181884765625,left_val:.4046528041362763},{features:[[8,6,6,9,-1],[8,9,6,3,3]],threshold:-.0259285103529692,right_val:.5089386105537415,left_val:.7452235817909241},{features:[[5,4,6,1,-1],[7,4,2,1,3]],threshold:-.002972979098558426,right_val:.5058795213699341,left_val:.3295435905456543},{features:[[13,0,6,4,-1],[16,0,3,2,2],[13,2,3,2,2]],threshold:.005850832909345627,right_val:.5793024897575378,left_val:.4857144057750702},{features:[[1,2,18,12,-1],[1,6,18,4,3]],threshold:-.0459675192832947,right_val:.5380653142929077,left_val:.4312731027603149},{features:[[3,2,17,12,-1],[3,6,17,4,3]],threshold:.1558596044778824,right_val:.1684713959693909,left_val:.5196170210838318},{features:[[5,14,7,3,-1],[5,15,7,1,3]],threshold:.0151648297905922,right_val:.6735026836395264,left_val:.4735757112503052},{features:[[10,14,1,3,-1],[10,15,1,1,3]],threshold:-.0010604249546304345,right_val:.4775702953338623,left_val:.5822926759719849},{features:[[3,14,3,3,-1],[3,15,3,1,3]],threshold:.006647629197686911,right_val:.231953501701355,left_val:.4999198913574219},{features:[[14,4,6,6,-1],[14,6,6,2,3]],threshold:-.0122311301529408,right_val:.5262982249259949,left_val:.4750893115997315},{features:[[0,4,6,6,-1],[0,6,6,2,3]],threshold:.005652888212352991,right_val:.3561818897724152,left_val:.5069767832756042},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:.0012977829901501536,right_val:.5619062781333923,left_val:.4875693917274475},{features:[[4,5,4,3,-1],[4,6,4,1,3]],threshold:.0107815898954868,right_val:.6782308220863342,left_val:.4750770032405853},{features:[[18,0,2,6,-1],[18,2,2,2,3]],threshold:.002865477930754423,right_val:.4290736019611359,left_val:.5305461883544922},{features:[[8,1,4,9,-1],[10,1,2,9,2]],threshold:.0028663428965955973,right_val:.5539351105690002,left_val:.4518479108810425},{features:[[6,6,8,2,-1],[6,6,4,2,2]],threshold:-.005198332015424967,right_val:.5434188842773438,left_val:.4149119853973389},{features:[[6,5,4,2,-1],[6,5,2,1,2],[8,6,2,1,2]],threshold:.005373999010771513,right_val:.6507657170295715,left_val:.471789687871933},{features:[[10,5,2,3,-1],[10,6,2,1,3]],threshold:-.0146415298804641,right_val:.5161777138710022,left_val:.2172164022922516},{features:[[9,5,1,3,-1],[9,6,1,1,3]],threshold:-15042580344015732e-21,right_val:.4298836886882782,left_val:.533738374710083},{features:[[9,10,2,2,-1],[9,11,2,1,2]],threshold:-.0001187566012958996,right_val:.5582447052001953,left_val:.4604594111442566},{features:[[0,8,4,3,-1],[0,9,4,1,3]],threshold:.0169955305755138,right_val:.0738800764083862,left_val:.4945895075798035},{features:[[6,0,8,6,-1],[6,3,8,3,2]],threshold:-.0350959412753582,right_val:.4977591037750244,left_val:.70055091381073},{features:[[1,0,6,4,-1],[1,0,3,2,2],[4,2,3,2,2]],threshold:.0024217350874096155,right_val:.5477694272994995,left_val:.4466265141963959},{features:[[13,0,3,7,-1],[14,0,1,7,3]],threshold:-.0009634033776819706,right_val:.5313338041305542,left_val:.4714098870754242},{features:[[9,16,2,2,-1],[9,17,2,1,2]],threshold:.00016391130338888615,right_val:.5342242121696472,left_val:.4331546127796173},{features:[[11,4,6,10,-1],[11,9,6,5,2]],threshold:-.0211414601653814,right_val:.5204498767852783,left_val:.2644700109958649},{features:[[0,10,19,2,-1],[0,11,19,1,2]],threshold:.0008777520270086825,right_val:.4152742922306061,left_val:.5208349823951721},{features:[[9,5,8,9,-1],[9,8,8,3,3]],threshold:-.0279439203441143,right_val:.5018811821937561,left_val:.6344125270843506},{features:[[4,0,3,7,-1],[5,0,1,7,3]],threshold:.006729737855494022,right_val:.3500863909721375,left_val:.5050438046455383},{features:[[8,6,4,12,-1],[10,6,2,6,2],[8,12,2,6,2]],threshold:.0232810396701097,right_val:.6968677043914795,left_val:.4966318011283875},{features:[[0,2,6,4,-1],[0,4,6,2,2]],threshold:-.0116449799388647,right_val:.5049629807472229,left_val:.3300260007381439},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:.0157643090933561,right_val:.7321153879165649,left_val:.4991598129272461},{features:[[8,0,3,7,-1],[9,0,1,7,3]],threshold:-.001361147966235876,right_val:.5160670876502991,left_val:.3911735117435455},{features:[[9,5,3,4,-1],[10,5,1,4,3]],threshold:-.0008152233785949647,right_val:.49497190117836,left_val:.5628911256790161},{features:[[8,5,3,4,-1],[9,5,1,4,3]],threshold:-.0006006627227179706,right_val:.4550595879554749,left_val:.585359513759613},{features:[[7,6,6,1,-1],[9,6,2,1,3]],threshold:.0004971551825292408,right_val:.5443599224090576,left_val:.4271470010280609},{features:[[7,14,4,4,-1],[7,14,2,2,2],[9,16,2,2,2]],threshold:.0023475370835512877,right_val:.3887656927108765,left_val:.5143110752105713},{features:[[13,14,4,6,-1],[15,14,2,3,2],[13,17,2,3,2]],threshold:-.008926156908273697,right_val:.497172087430954,left_val:.6044502258300781},{features:[[7,8,1,8,-1],[7,12,1,4,2]],threshold:-.013919910416007,right_val:.5000367760658264,left_val:.2583160996437073},{features:[[16,0,2,8,-1],[17,0,1,4,2],[16,4,1,4,2]],threshold:.0010209949687123299,right_val:.5560358166694641,left_val:.4857374131679535},{features:[[2,0,2,8,-1],[2,0,1,4,2],[3,4,1,4,2]],threshold:-.0027441629208624363,right_val:.464577704668045,left_val:.5936884880065918},{features:[[6,1,14,3,-1],[6,2,14,1,3]],threshold:-.0162001308053732,right_val:.5193495154380798,left_val:.3163014948368073},{features:[[7,9,3,10,-1],[7,14,3,5,2]],threshold:.004333198070526123,right_val:.3458878993988037,left_val:.5061224102973938},{features:[[9,14,2,2,-1],[9,15,2,1,2]],threshold:.0005849793087691069,right_val:.5870177745819092,left_val:.4779017865657806},{features:[[7,7,6,8,-1],[7,11,6,4,2]],threshold:-.0022466450463980436,right_val:.5374773144721985,left_val:.4297851026058197},{features:[[9,7,3,6,-1],[9,10,3,3,2]],threshold:.0023146099410951138,right_val:.4640969932079315,left_val:.5438671708106995},{features:[[7,13,3,3,-1],[7,14,3,1,3]],threshold:.008767912164330482,right_val:.6771789789199829,left_val:.472689300775528},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.00022448020172305405,right_val:.5428048968315125,left_val:.4229173064231873},{features:[[0,1,18,2,-1],[6,1,6,2,3]],threshold:-.007433602120727301,right_val:.4683673977851868,left_val:.6098880767822266},{features:[[7,1,6,14,-1],[7,8,6,7,2]],threshold:-.0023189240600913763,right_val:.4424242079257965,left_val:.5689436793327332},{features:[[1,9,18,1,-1],[7,9,6,1,3]],threshold:-.0021042178850620985,right_val:.5187087059020996,left_val:.3762221038341522},{features:[[9,7,2,2,-1],[9,7,1,2,2]],threshold:.000460348412161693,right_val:.5771207213401794,left_val:.4699405133724213},{features:[[9,3,2,9,-1],[10,3,1,9,2]],threshold:.0010547629790380597,right_val:.5601701736450195,left_val:.4465216994285584},{features:[[18,14,2,3,-1],[18,15,2,1,3]],threshold:.0008714881842024624,right_val:.3914709091186523,left_val:.544980525970459},{features:[[7,11,3,1,-1],[8,11,1,1,3]],threshold:.00033364820410497487,right_val:.5645738840103149,left_val:.4564009010791779},{features:[[10,8,3,4,-1],[11,8,1,4,3]],threshold:-.0014853250468149781,right_val:.4692778885364533,left_val:.5747377872467041},{features:[[7,14,3,6,-1],[8,14,1,6,3]],threshold:.0030251620337367058,right_val:.3762814104557037,left_val:.5166196823120117},{features:[[10,8,3,4,-1],[11,8,1,4,3]],threshold:.005028074141591787,right_val:.6151527166366577,left_val:.5002111792564392},{features:[[7,8,3,4,-1],[8,8,1,4,3]],threshold:-.0005816451157443225,right_val:.4390751123428345,left_val:.5394598245620728},{features:[[7,9,6,9,-1],[7,12,6,3,3]],threshold:.0451415292918682,right_val:.206303596496582,left_val:.5188326835632324},{features:[[0,14,2,3,-1],[0,15,2,1,3]],threshold:-.001079562003724277,right_val:.5137907266616821,left_val:.3904685080051422},{features:[[11,12,1,2,-1],[11,13,1,1,2]],threshold:.00015995999274309725,right_val:.5427504181861877,left_val:.4895322918891907},{features:[[4,3,8,3,-1],[8,3,4,3,2]],threshold:-.0193592701107264,right_val:.4773507118225098,left_val:.6975228786468506},{features:[[0,4,20,6,-1],[0,4,10,6,2]],threshold:.207255095243454,right_val:.3034991919994354,left_val:.5233635902404785},{features:[[9,14,1,3,-1],[9,15,1,1,3]],threshold:-.00041953290929086506,right_val:.4460186064243317,left_val:.5419396758079529},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.0022582069505006075,right_val:.6027408838272095,left_val:.4815764129161835},{features:[[0,15,14,4,-1],[0,17,14,2,2]],threshold:-.0067811207845807076,right_val:.5183305740356445,left_val:.3980278968811035},{features:[[1,14,18,6,-1],[1,17,18,3,2]],threshold:.0111543098464608,right_val:.4188759922981262,left_val:.543123185634613},{features:[[0,0,10,6,-1],[0,0,5,3,2],[5,3,5,3,2]],threshold:.0431624315679073,right_val:.6522961258888245,left_val:.4738228023052216}],threshold:105.76110076904297}],size:[20,20],tilted:!1};var n=e.data.imageData,o=e.data.w,l=e.data.h,h=e.data.videoWidth,f=e.data.params,c=new r.matrix_t(o,l,r.U8_t|r.C1_t),d=new r.matrix_t(o,l,r.U8_t|r.C1_t),v=new Int32Array((o+1)*(l+1)),_=new Int32Array((o+1)*(l+1)),m=new Int32Array((o+1)*(l+1)),y=new Int32Array((o+1)*(l+1)),x=r.haar.frontalface;r.imgproc.grayscale(n.data,o,l,c),f.equalizeHistogram&&r.imgproc.equalize_histogram(c,c),r.imgproc.compute_integral_image(c,v,_,x.tilted?m:null),f.useCanny&&(r.imgproc.canny(c,d,10,50),r.imgproc.compute_integral_image(d,y,null,null)),r.haar.edgesDensity=f.edgesDensity;for(var w=r.haar.detect_multi_scale(v,_,m,f.useCanny?y:null,c.cols,c.rows,x,f.scaleFactor,f.minScale),i=(w=r.haar.group_rectangles(w,f.min_neighbors)).length-1;i>=0;i--)w[i].confidence<f.confidenceThreshold&&w.splice(i,1);var M=w.length;if(0==M)self.postMessage({faces:[]});else{var E=w[0];for(i=1;i<M;i++)(w[i].neighbors>E.neighbors||w[i].neighbors==E.neighbors&&w[i].confidence>E.confidence)&&(E=w[i]);var S=h/c.cols;E.x=E.x*S|0,E.y=E.y*S|0,E.width=E.width*S|0,E.height=E.height*S|0,self.postMessage({faces:[E]})}},faceDetection=function(e,t){var r,n,o,l,element;void 0===t&&(t={}),void 0===t.workSize&&(t.workSize=200),void 0===t.minScale&&(t.minScale=2),void 0===t.scaleFactor&&(t.scaleFactor=1.15),void 0===t.useCanny&&(t.useCanny=!1),void 0===t.edgesDensity&&(t.edgesDensity=.13),void 0===t.equalizeHistogram&&(t.equalizeHistogram=!1),void 0===t.min_neighbors&&(t.min_neighbors=2),void 0===t.confidenceThreshold&&(t.confidenceThreshold=106.1),void 0===t.useWebWorkers&&(t.useWebWorkers=!0),window.Worker||(t.useWebWorkers=!1);var h,f,c,d=e,v=mosse.mosseFilter,_=mosse.filters.left_eye_filter,m=mosse.filters.right_eye_filter,y=mosse.filters.nose_filter,x=[0,0],w=[0,0],M=[0,0];d.hints&&v&&_&&m&&y?((h=new v).load(_),(f=new v).load(m),(c=new v).load(y)):console.log("MOSSE filters not found, using rough approximation for initialization.");var E=d.shapeModel.meanShape,S=d.patchModel.numPatches;o=0,r=n=1e6;for(var i=0;i<S;i++)E[i][0]<r&&(r=E[i][0]),E[i][1]<n&&(n=E[i][1]),E[i][1]>o&&(o=E[i][1]);l=o-n;var T=new jsfeat_face(t);this.init=function(video){element=video,T.init(element)};var A=function(e){var t,o,E,S,T=e.x,A=e.y,R=e.width,C=e.height;if(d.hints&&v&&_&&m&&y){var L=4.5*R/10,P=6*R/10,O=c.track(element,Math.round(T+R/2-L/2),Math.round(A+C*(5/8)-L/2),L,L,!1),k=f.track(element,Math.round(T+3*R/4-P/2),Math.round(A+.4*C-P/2),P,P,!1),I=h.track(element,Math.round(T+R/4-P/2),Math.round(A+.4*C-P/2),P,P,!1);x[0]=Math.round(T+3*R/4-P/2)+k[0],x[1]=Math.round(A+.4*C-P/2)+k[1],w[0]=Math.round(T+R/4-P/2)+I[0],w[1]=Math.round(A+.4*C-P/2)+I[1],M[0]=Math.round(T+R/2-L/2)+O[0],M[1]=Math.round(A+C*(5/8)-L/2)+O[1];var N=d.hints.leftEye,D=d.hints.rightEye,B=d.hints.nose,F=function(template,e){for(var t=[],r=[],i=0;i<template.length;i++)t[i]=[template[i][0],template[i][1]];for(i=0;i<e.length;i++)r[i]=[e[i][0],e[i][1]];e=r,template=t;var n=[0,0];for(i=0;i<template.length;i++)n[0]+=template[i][0],n[1]+=template[i][1];n[0]/=template.length,n[1]/=template.length;var o=[0,0];for(i=0;i<e.length;i++)o[0]+=e[i][0],o[1]+=e[i][1];o[0]/=e.length,o[1]/=e.length;var l=n[0]-o[0],h=n[1]-o[1];for(i=0;i<e.length;i++)e[i][0]-=o[0],e[i][1]-=o[1];for(i=0;i<template.length;i++)template[i][0]-=n[0],template[i][1]-=n[1];var f=0;for(i=0;i<e.length;i++)f+=e[i][0]*e[i][0],f+=e[i][1]*e[i][1];f=Math.sqrt(f/e.length);var c=0;for(i=0;i<template.length;i++)c+=template[i][0]*template[i][0],c+=template[i][1]*template[i][1];var d=(c=Math.sqrt(c/template.length))/f;for(i=0;i<e.length;i++)e[i][0]*=d,e[i][1]*=d;var v=0,_=0;for(i=0;i<e.length;i++)v+=e[i][0]*template[i][1]-e[i][1]*template[i][0],_+=e[i][0]*template[i][0]+e[i][1]*template[i][1];var m=Math.atan(v/_);return l+=o[0]-d*Math.cos(-m)*o[0]-d*o[1]*Math.sin(-m),h+=o[1]+d*Math.sin(-m)*o[0]-d*o[1]*Math.cos(-m),[l,h,d,m]}([w,x,M],[N,D,B]);t=F[0],o=F[1],E=F[2],S=F[3]}else S=0,t=T-r*(E=R/l)+.1*R,o=A-n*E+.25*C;return[E,S,t,o]};this.getInitialPosition=function(e){return new Promise((function(t,r){(function(e){return new Promise((function(t,r){t(e?{x:e[0],y:e[1],width:e[2],height:e[3]}:T.findFace())}))})(e).then(A).then(t).catch(r)}))}},jsfeat_face=function(e){var t,r,n,video,o,l,h,f,c,d,v,_,m,y,x=e,w=x.workSize,M=x.useWebWorkers,E=document.createElement("canvas"),S=E.getContext("2d");M&&(Worker.createURL=function(e){var t="function"==typeof e?e.toString():e,r=new Blob(["'use strict';\nself.onmessage ="+t],{type:"text/javascript"});return window.URL.createObjectURL(r)},Worker.create=function(e){return new Worker(Worker.createURL(e))},y=Worker.create(findFaceWorker)),this.init=function(element){t=(video=element).width,r=video.height,n=Math.min(w/t,w/r),o=t*n|0,l=r*n|0,E.height=l,E.width=o,M||(h=new jsfeat_1.matrix_t(o,l,jsfeat_1.U8_t|jsfeat_1.C1_t),f=new jsfeat_1.matrix_t(o,l,jsfeat_1.U8_t|jsfeat_1.C1_t),c=new Int32Array((o+1)*(l+1)),d=new Int32Array((o+1)*(l+1)),v=new Int32Array((o+1)*(l+1)),_=new Int32Array((o+1)*(l+1)),m=jsfeat_1.haar.frontalface)},this.findFace=function(){S.drawImage(video,0,0,E.width,E.height);var e=S.getImageData(0,0,E.width,E.height);return new Promise((function(r,n){if(M)y.addEventListener("message",function(e){e.data.faces.length>0?r(e.data.faces[0]):n()}.bind(this),!1),y.postMessage({w:E.width,h:E.height,videoWidth:t,imageData:e,params:x});else{jsfeat_1.imgproc.grayscale(e.data,E.width,E.height,h),x.equalizeHistogram&&jsfeat_1.imgproc.equalize_histogram(h,h),jsfeat_1.imgproc.compute_integral_image(h,c,d,m.tilted?v:null),x.useCanny&&(jsfeat_1.imgproc.canny(h,f,10,50),jsfeat_1.imgproc.compute_integral_image(f,_,null,null)),jsfeat_1.haar.edgesDensity=x.edgesDensity;for(var o=jsfeat_1.haar.detect_multi_scale(c,d,v,x.useCanny?_:null,h.cols,h.rows,m,x.scaleFactor,x.minScale),i=(o=jsfeat_1.haar.group_rectangles(o,x.min_neighbors)).length-1;i>=0;i--)o[i].confidence<x.confidenceThreshold&&o.splice(i,1);var l=o.length;if(0==l)n();else{var w=o[0];for(i=1;i<l;i++)(o[i].neighbors>w.neighbors||o[i].neighbors==w.neighbors&&o[i].confidence>w.confidence)&&(w=o[i]);var S=t/h.cols;w.x=w.x*S|0,w.y=w.y*S|0,w.width=w.width*S|0,w.height=w.height*S|0,r(w)}}}))}};function FFT$1(){var e,t,r=0,n=null,o=null;function l(e,t,l){for(var h,f,c,d,v,_,m,y,x,w=r>>2,M=0;M<r;M++)M<(d=n[M])&&(v=e[M],e[M]=e[d],e[d]=v,v=t[M],t[M]=t[d],t[d]=v);for(var E=1;E<r;E<<=1){f=0,h=r/(E<<1);for(var S=0;S<E;S++){_=o[f+w],m=l*o[f];for(var i=S;i<r;i+=E<<1)y=_*e[c=i+E]+m*t[c],x=_*t[c]-m*e[c],e[c]=e[i]-y,e[i]+=y,t[c]=t[i]-x,t[i]+=x;f+=h}}}this.init=function(l){if(0===l||0!=(l&l-1))throw new Error("init: radix-2 required");r=l,function(){n="undefined"!=typeof Uint8Array?new Uint8Array(r):new Array(r);"undefined"!=typeof Float64Array?(o=new Float64Array(1.25*r),e=new Float64Array(r),t=new Float64Array(r)):(o=new Array(1.25*r),e=new Array(r),t=new Array(r))}(),function(){var i=0,e=0,t=0;n[0]=0;for(;++i<r;){for(t=r>>1;t<=e;)e-=t,t>>=1;e+=t,n[i]=e}}(),function(){var e=r>>1,t=r>>2,n=r>>3,l=e+t,h=Math.sin(Math.PI/r),f=2*h*h,c=Math.sqrt(f*(2-f)),d=o[t]=1,s=o[0]=0;h=2*f;for(var i=1;i<n;i++)f+=h*(d-=f),c-=h*(s+=c),o[i]=s,o[t-i]=d;0!==n&&(o[n]=Math.sqrt(.5));for(var v=0;v<t;v++)o[e-v]=o[v];for(var _=0;_<l;_++)o[_+e]=-o[_]}()},this.fft1d=function(e,t){l(e,t,1)},this.ifft1d=function(e,t){var n=1/r;l(e,t,-1);for(var i=0;i<r;i++)e[i]*=n,t[i]*=n},this.fft2d=function(n,o){for(var i=0,l=0;l<r;l++){i=l*r;for(var h=0;h<r;h++)e[h]=n[h+i],t[h]=o[h+i];this.fft1d(e,t);for(var f=0;f<r;f++)n[f+i]=e[f],o[f+i]=t[f]}for(var c=0;c<r;c++){for(var d=0;d<r;d++)i=c+d*r,e[d]=n[i],t[d]=o[i];this.fft1d(e,t);for(var v=0;v<r;v++)n[i=c+v*r]=e[v],o[i]=t[v]}},this.ifft2d=function(n,o){for(var i=0,l=0;l<r;l++){i=l*r;for(var h=0;h<r;h++)e[h]=n[h+i],t[h]=o[h+i];this.ifft1d(e,t);for(var f=0;f<r;f++)n[f+i]=e[f],o[f+i]=t[f]}for(var c=0;c<r;c++){for(var d=0;d<r;d++)i=c+d*r,e[d]=n[i],t[d]=o[i];this.ifft1d(e,t);for(var v=0;v<r;v++)n[i=c+v*r]=e[v],o[i]=t[v]}},this.real_ifft2d=function(n,o){for(var l,i=0,h=0;h<r;h++){i=h*r;for(var f=0;f<r;f++)e[f]=n[f+i],t[f]=o[f+i];this.ifft1d(e,t);for(var c=0;c<r;c++)n[c+i]=e[c],o[c+i]=t[c]}for(var d=r/2,v=0,_=0;_<r;_+=2){i=_,l=_+1,e[0]=n[0+i],t[0]=n[0+l],e[r/2]=n[d*r+i],t[r/2]=n[d*r+l];for(c=1;c<d;c++)v=c*r,e[c]=n[v+i]-o[v+l],e[r-c]=n[v+i]+o[v+l],t[c]=o[v+i]+n[v+l],t[r-c]=n[v+l]-o[v+i];this.ifft1d(e,t);for(var m=0;m<r;m++)l=_+1+m*r,n[i=_+m*r]=e[m],n[l]=t[m]}},this.real_fft2d=function(n,o){for(var i=0,l=0,h=0;h<r;h+=2){i=h*r,l=(h+1)*r;for(var f=0;f<r;f++)e[f]=n[f+i],t[f]=n[f+l];this.fft1d(e,t),n[0+i]=e[0],n[0+l]=t[0],o[0+i]=0,o[0+l]=0,n[r/2+i]=e[r/2],n[r/2+l]=t[r/2],o[r/2+i]=0,o[r/2+l]=0;for(var c=1;c<r/2;c++)n[c+i]=.5*(e[c]+e[r-c]),o[c+i]=.5*(t[c]-t[r-c]),n[c+l]=.5*(t[c]+t[r-c]),o[c+l]=-.5*(e[c]-e[r-c]),n[r-c+i]=n[c+i],o[r-c+i]=-o[c+i],n[r-c+l]=n[c+l],o[r-c+l]=-o[c+l]}for(var d=0;d<r;d++){for(var v=0;v<r;v++)i=d+v*r,e[v]=n[i],t[v]=o[i];this.fft1d(e,t);for(var _=0;_<r;_++)n[i=d+_*r]=e[_],o[i]=t[_]}}}jsfeat_1.haar.frontalface={complexClassifiers:[{simpleClassifiers:[{features:[[3,7,14,4,-1],[3,9,14,2,2]],threshold:.004014195874333382,right_val:.8378106951713562,left_val:.0337941907346249},{features:[[1,2,18,4,-1],[7,2,6,4,3]],threshold:.0151513395830989,right_val:.7488812208175659,left_val:.1514132022857666},{features:[[1,7,15,9,-1],[1,10,15,3,3]],threshold:.004210993181914091,right_val:.6374819874763489,left_val:.0900492817163467}],threshold:.822689414024353},{simpleClassifiers:[{features:[[5,6,2,6,-1],[5,9,2,3,2]],threshold:.0016227109590545297,right_val:.7110946178436279,left_val:.0693085864186287},{features:[[7,5,6,3,-1],[9,5,2,3,3]],threshold:.002290664939209819,right_val:.6668692231178284,left_val:.1795803010463715},{features:[[4,0,12,9,-1],[4,3,12,3,3]],threshold:.005002570804208517,right_val:.6554006934165955,left_val:.1693672984838486},{features:[[6,9,10,8,-1],[6,13,10,4,2]],threshold:.007965989410877228,right_val:.0914145186543465,left_val:.5866332054138184},{features:[[3,6,14,8,-1],[3,10,14,4,2]],threshold:-.003522701095789671,right_val:.6031895875930786,left_val:.1413166970014572},{features:[[14,1,6,10,-1],[14,1,3,10,2]],threshold:.0366676896810532,right_val:.7920318245887756,left_val:.3675672113895416},{features:[[7,8,5,12,-1],[7,12,5,4,3]],threshold:.009336147457361221,right_val:.2088509947061539,left_val:.6161385774612427},{features:[[1,1,18,3,-1],[7,1,6,3,3]],threshold:.008696131408214569,right_val:.6360273957252502,left_val:.2836230993270874},{features:[[1,8,17,2,-1],[1,9,17,1,2]],threshold:.0011488880263641477,right_val:.5800700783729553,left_val:.2223580926656723},{features:[[16,6,4,2,-1],[16,7,4,1,2]],threshold:-.002148468978703022,right_val:.5787054896354675,left_val:.2406464070081711},{features:[[5,17,2,2,-1],[5,18,2,1,2]],threshold:.002121906029060483,right_val:.136223703622818,left_val:.5559654831886292},{features:[[14,2,6,12,-1],[14,2,3,12,2]],threshold:-.0939491465687752,right_val:.4717740118503571,left_val:.8502737283706665},{features:[[4,0,4,12,-1],[4,0,2,6,2],[6,6,2,6,2]],threshold:.0013777789426967502,right_val:.2834529876708984,left_val:.5993673801422119},{features:[[2,11,18,8,-1],[8,11,6,8,3]],threshold:.0730631574988365,right_val:.7060034275054932,left_val:.4341886043548584},{features:[[5,7,10,2,-1],[5,8,10,1,2]],threshold:.00036767389974556863,right_val:.6051574945449829,left_val:.3027887940406799},{features:[[15,11,5,3,-1],[15,12,5,1,3]],threshold:-.0060479710809886456,right_val:.5675256848335266,left_val:.17984339594841}],threshold:6.956608772277832},{simpleClassifiers:[{features:[[5,3,10,9,-1],[5,6,10,3,3]],threshold:-.0165106896311045,right_val:.1424857974052429,left_val:.6644225120544434},{features:[[9,4,2,14,-1],[9,11,2,7,2]],threshold:.002705249935388565,right_val:.1288477033376694,left_val:.6325352191925049},{features:[[3,5,4,12,-1],[3,9,4,4,3]],threshold:.002806986914947629,right_val:.6193193197250366,left_val:.1240288019180298},{features:[[4,5,12,5,-1],[8,5,4,5,3]],threshold:-.0015402400167658925,right_val:.5670015811920166,left_val:.1432143002748489},{features:[[5,6,10,8,-1],[5,10,10,4,2]],threshold:-.0005638627917505801,right_val:.5905207991600037,left_val:.1657433062791824},{features:[[8,0,6,9,-1],[8,3,6,3,3]],threshold:.0019253729842603207,right_val:.5738824009895325,left_val:.2695507109165192},{features:[[9,12,1,8,-1],[9,16,1,4,2]],threshold:-.005021484103053808,right_val:.5782774090766907,left_val:.1893538981676102},{features:[[0,7,20,6,-1],[0,9,20,2,3]],threshold:.0026365420781075954,right_val:.5695425868034363,left_val:.2309329062700272},{features:[[7,0,6,17,-1],[9,0,2,17,3]],threshold:-.0015127769438549876,right_val:.5956642031669617,left_val:.2759602069854736},{features:[[9,0,6,4,-1],[11,0,2,4,3]],threshold:-.0101574398577213,right_val:.5522047281265259,left_val:.1732538044452667},{features:[[5,1,6,4,-1],[7,1,2,4,3]],threshold:-.011953660286963,right_val:.5559014081954956,left_val:.1339409947395325},{features:[[12,1,6,16,-1],[14,1,2,16,3]],threshold:.004885949194431305,right_val:.6188849210739136,left_val:.3628703951835632},{features:[[0,5,18,8,-1],[0,5,9,4,2],[9,9,9,4,2]],threshold:-.0801329165697098,right_val:.5475944876670837,left_val:.0912110507488251},{features:[[8,15,10,4,-1],[13,15,5,2,2],[8,17,5,2,2]],threshold:.0010643280111253262,right_val:.5711399912834167,left_val:.3715142905712128},{features:[[3,1,4,8,-1],[3,1,2,4,2],[5,5,2,4,2]],threshold:-.0013419450260698795,right_val:.331809788942337,left_val:.5953313708305359},{features:[[3,6,14,10,-1],[10,6,7,5,2],[3,11,7,5,2]],threshold:-.0546011403203011,right_val:.5602846145629883,left_val:.1844065934419632},{features:[[2,1,6,16,-1],[4,1,2,16,3]],threshold:.0029071690514683723,right_val:.6131715178489685,left_val:.3594244122505188},{features:[[0,18,20,2,-1],[0,19,20,1,2]],threshold:.0007471871795132756,right_val:.3459562957286835,left_val:.5994353294372559},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.004301380831748247,right_val:.6990845203399658,left_val:.4172652065753937},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.004501757211983204,right_val:.7801457047462463,left_val:.4509715139865875},{features:[[0,12,9,6,-1],[0,14,9,2,3]],threshold:.0241385009139776,right_val:.1319826990365982,left_val:.5438212752342224}],threshold:9.498542785644531},{simpleClassifiers:[{features:[[5,7,3,4,-1],[5,9,3,2,2]],threshold:.001921223010867834,right_val:.6199870705604553,left_val:.1415266990661621},{features:[[9,3,2,16,-1],[9,11,2,8,2]],threshold:-.00012748669541906565,right_val:.1884928941726685,left_val:.6191074252128601},{features:[[3,6,13,8,-1],[3,10,13,4,2]],threshold:.0005140993162058294,right_val:.5857927799224854,left_val:.1487396955490112},{features:[[12,3,8,2,-1],[12,3,4,2,2]],threshold:.004187860991805792,right_val:.6359239816665649,left_val:.2746909856796265},{features:[[8,8,4,12,-1],[8,12,4,4,3]],threshold:.005101571790874004,right_val:.2175628989934921,left_val:.5870851278305054},{features:[[11,3,8,6,-1],[15,3,4,3,2],[11,6,4,3,2]],threshold:-.002144844038411975,right_val:.2979590892791748,left_val:.5880944728851318},{features:[[7,1,6,19,-1],[9,1,2,19,3]],threshold:-.0028977119363844395,right_val:.5876647233963013,left_val:.2373327016830444},{features:[[9,0,6,4,-1],[11,0,2,4,3]],threshold:-.0216106791049242,right_val:.5194202065467834,left_val:.1220654994249344},{features:[[3,1,9,3,-1],[6,1,3,3,3]],threshold:-.004629931878298521,right_val:.5817409157752991,left_val:.263123095035553},{features:[[8,15,10,4,-1],[13,15,5,2,2],[8,17,5,2,2]],threshold:.000593937118537724,right_val:.5698544979095459,left_val:.363862007856369},{features:[[0,3,6,10,-1],[3,3,3,10,2]],threshold:.0538786612451077,right_val:.7559366226196289,left_val:.4303531050682068},{features:[[3,4,15,15,-1],[3,9,15,5,3]],threshold:.0018887349870055914,right_val:.561342716217041,left_val:.2122603058815002},{features:[[6,5,8,6,-1],[6,7,8,2,3]],threshold:-.0023635339457541704,right_val:.2642767131328583,left_val:.563184916973114},{features:[[4,4,12,10,-1],[10,4,6,5,2],[4,9,6,5,2]],threshold:.0240177996456623,right_val:.2751705944538117,left_val:.5797107815742493},{features:[[6,4,4,4,-1],[8,4,2,4,2]],threshold:.00020543030404951423,right_val:.575256884098053,left_val:.2705242037773132},{features:[[15,11,1,2,-1],[15,12,1,1,2]],threshold:.0008479019743390381,right_val:.2334876954555512,left_val:.5435624718666077},{features:[[3,11,2,2,-1],[3,12,2,1,2]],threshold:.0014091329649090767,right_val:.2063155025243759,left_val:.5319424867630005},{features:[[16,11,1,3,-1],[16,12,1,1,3]],threshold:.0014642629539594054,right_val:.3068861067295075,left_val:.5418980717658997},{features:[[3,15,6,4,-1],[3,15,3,2,2],[6,17,3,2,2]],threshold:.0016352549428120255,right_val:.6112868189811707,left_val:.3695372939109802},{features:[[6,7,8,2,-1],[6,8,8,1,2]],threshold:.0008317275205627084,right_val:.6025236248970032,left_val:.3565036952495575},{features:[[3,11,1,3,-1],[3,12,1,1,3]],threshold:-.0020998890977352858,right_val:.5362827181816101,left_val:.1913982033729553},{features:[[6,0,12,2,-1],[6,1,12,1,2]],threshold:-.0007421398186124861,right_val:.552931010723114,left_val:.3835555016994476},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.0032655049581080675,right_val:.7101895809173584,left_val:.4312896132469177},{features:[[7,15,6,2,-1],[7,16,6,1,2]],threshold:.0008913499186746776,right_val:.6391963958740234,left_val:.3984830975532532},{features:[[0,5,4,6,-1],[0,7,4,2,3]],threshold:-.0152841797098517,right_val:.5433713793754578,left_val:.2366732954978943},{features:[[4,12,12,2,-1],[8,12,4,2,3]],threshold:.004838141147047281,right_val:.3239189088344574,left_val:.5817500948905945},{features:[[6,3,1,9,-1],[6,6,1,3,3]],threshold:-.0009109317907132208,right_val:.2911868989467621,left_val:.5540593862533569},{features:[[10,17,3,2,-1],[11,17,1,2,3]],threshold:-.006127506028860807,right_val:.5196629166603088,left_val:.1775255054235458},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.00044576259097084403,right_val:.5533593893051147,left_val:.3024170100688934},{features:[[7,6,6,4,-1],[9,6,2,4,3]],threshold:.0226465407758951,right_val:.6975377202033997,left_val:.4414930939674377},{features:[[7,17,3,2,-1],[8,17,1,2,3]],threshold:-.0018804960418492556,right_val:.5497952103614807,left_val:.2791394889354706},{features:[[10,17,3,3,-1],[11,17,1,3,3]],threshold:.007088910788297653,right_val:.2385547012090683,left_val:.5263199210166931},{features:[[8,12,3,2,-1],[8,13,3,1,2]],threshold:.0017318050377070904,right_val:.6983600854873657,left_val:.4319379031658173},{features:[[9,3,6,2,-1],[11,3,2,2,3]],threshold:-.006848270073533058,right_val:.5390920042991638,left_val:.3082042932510376},{features:[[3,11,14,4,-1],[3,13,14,2,2]],threshold:-15062530110299122e-21,right_val:.3120366036891937,left_val:.552192211151123},{features:[[1,10,18,4,-1],[10,10,9,2,2],[1,12,9,2,2]],threshold:.0294755697250366,right_val:.1770603060722351,left_val:.5401322841644287},{features:[[0,10,3,3,-1],[0,11,3,1,3]],threshold:.008138732984662056,right_val:.121101900935173,left_val:.5178617835044861},{features:[[9,1,6,6,-1],[11,1,2,6,3]],threshold:.0209429506212473,right_val:.3311221897602081,left_val:.5290294289588928},{features:[[8,7,3,6,-1],[9,7,1,6,3]],threshold:-.009566552937030792,right_val:.4451968967914581,left_val:.7471994161605835}],threshold:18.4129695892334},{simpleClassifiers:[{features:[[1,0,18,9,-1],[1,3,18,3,3]],threshold:-.00028206960996612906,right_val:.6076732277870178,left_val:.2064086049795151},{features:[[12,10,2,6,-1],[12,13,2,3,2]],threshold:.00167906004935503,right_val:.1255383938550949,left_val:.5851997137069702},{features:[[0,5,19,8,-1],[0,9,19,4,2]],threshold:.0006982791237533092,right_val:.5728961229324341,left_val:.094018429517746},{features:[[7,0,6,9,-1],[9,0,2,9,3]],threshold:.0007895901217125356,right_val:.5694308876991272,left_val:.1781987994909287},{features:[[5,3,6,1,-1],[7,3,2,1,3]],threshold:-.002856049919500947,right_val:.5788664817810059,left_val:.1638399064540863},{features:[[11,3,6,1,-1],[13,3,2,1,3]],threshold:-.0038122469559311867,right_val:.5508564710617065,left_val:.2085440009832382},{features:[[5,10,4,6,-1],[5,13,4,3,2]],threshold:.0015896620461717248,right_val:.1857215017080307,left_val:.5702760815620422},{features:[[11,3,6,1,-1],[13,3,2,1,3]],threshold:.0100783398374915,right_val:.2189770042896271,left_val:.5116943120956421},{features:[[4,4,12,6,-1],[4,6,12,2,3]],threshold:-.0635263025760651,right_val:.4043813049793243,left_val:.7131379842758179},{features:[[15,12,2,6,-1],[15,14,2,2,3]],threshold:-.009103149175643921,right_val:.54639732837677,left_val:.2567181885242462},{features:[[9,3,2,2,-1],[10,3,1,2,2]],threshold:-.002403500024229288,right_val:.559097409248352,left_val:.1700665950775147},{features:[[9,3,3,1,-1],[10,3,1,1,3]],threshold:.001522636041045189,right_val:.2619054019451141,left_val:.5410556793212891},{features:[[1,1,4,14,-1],[3,1,2,14,2]],threshold:.0179974399507046,right_val:.6535220742225647,left_val:.3732436895370483},{features:[[9,0,4,4,-1],[11,0,2,2,2],[9,2,2,2,2]],threshold:-.00645381910726428,right_val:.5537446141242981,left_val:.2626481950283051},{features:[[7,5,1,14,-1],[7,12,1,7,2]],threshold:-.0118807600811124,right_val:.5544745922088623,left_val:.2003753930330277},{features:[[19,0,1,4,-1],[19,2,1,2,2]],threshold:.0012713660253211856,right_val:.303197592496872,left_val:.5591902732849121},{features:[[5,5,6,4,-1],[8,5,3,4,2]],threshold:.0011376109905540943,right_val:.5646508932113647,left_val:.2730407118797302},{features:[[9,18,3,2,-1],[10,18,1,2,3]],threshold:-.00426519988104701,right_val:.5461820960044861,left_val:.1405909061431885},{features:[[8,18,3,2,-1],[9,18,1,2,3]],threshold:-.0029602861031889915,right_val:.5459290146827698,left_val:.1795035004615784},{features:[[4,5,12,6,-1],[4,7,12,2,3]],threshold:-.008844822645187378,right_val:.280921995639801,left_val:.5736783146858215},{features:[[3,12,2,6,-1],[3,14,2,2,3]],threshold:-.006643068976700306,right_val:.5503826141357422,left_val:.2370675951242447},{features:[[10,8,2,12,-1],[10,12,2,4,3]],threshold:.003999780863523483,right_val:.3304282128810883,left_val:.5608199834823608},{features:[[7,18,3,2,-1],[8,18,1,2,3]],threshold:-.004122172016650438,right_val:.5378993153572083,left_val:.1640105992555618},{features:[[9,0,6,2,-1],[11,0,2,2,3]],threshold:.0156249096617103,right_val:.2288603931665421,left_val:.5227649211883545},{features:[[5,11,9,3,-1],[5,12,9,1,3]],threshold:-.0103564197197557,right_val:.4252927899360657,left_val:.7016193866729736},{features:[[9,0,6,2,-1],[11,0,2,2,3]],threshold:-.008796080946922302,right_val:.5355830192565918,left_val:.2767347097396851},{features:[[1,1,18,5,-1],[7,1,6,5,3]],threshold:.1622693985700607,right_val:.744257926940918,left_val:.434224009513855},{features:[[8,0,4,4,-1],[10,0,2,2,2],[8,2,2,2,2]],threshold:.0045542530715465546,right_val:.2582125067710877,left_val:.5726485848426819},{features:[[3,12,1,3,-1],[3,13,1,1,3]],threshold:-.002130920998752117,right_val:.5361018776893616,left_val:.2106848061084747},{features:[[8,14,5,3,-1],[8,15,5,1,3]],threshold:-.0132084200158715,right_val:.4552468061447144,left_val:.7593790888786316},{features:[[5,4,10,12,-1],[5,4,5,6,2],[10,10,5,6,2]],threshold:-.0659966766834259,right_val:.5344039797782898,left_val:.125247597694397},{features:[[9,6,9,12,-1],[9,10,9,4,3]],threshold:.007914265617728233,right_val:.5601043105125427,left_val:.3315384089946747},{features:[[2,2,12,14,-1],[2,2,6,7,2],[8,9,6,7,2]],threshold:.0208942797034979,right_val:.2768838107585907,left_val:.5506049990653992}],threshold:15.324139595031738},{simpleClassifiers:[{features:[[4,7,12,2,-1],[8,7,4,2,3]],threshold:.0011961159761995077,right_val:.6156241297721863,left_val:.1762690991163254},{features:[[7,4,6,4,-1],[7,6,6,2,2]],threshold:-.0018679830245673656,right_val:.1832399964332581,left_val:.6118106842041016},{features:[[4,5,11,8,-1],[4,9,11,4,2]],threshold:-.00019579799845814705,right_val:.5723816156387329,left_val:.0990442633628845},{features:[[3,10,16,4,-1],[3,12,16,2,2]],threshold:-.0008025565766729414,right_val:.2377282977104187,left_val:.5579879879951477},{features:[[0,0,16,2,-1],[0,1,16,1,2]],threshold:-.0024510810617357492,right_val:.5858935117721558,left_val:.2231457978487015},{features:[[7,5,6,2,-1],[9,5,2,2,3]],threshold:.0005036185029894114,right_val:.5794103741645813,left_val:.2653993964195252},{features:[[3,2,6,10,-1],[3,2,3,5,2],[6,7,3,5,2]],threshold:.0040293349884450436,right_val:.2484865039587021,left_val:.5803827047348022},{features:[[10,5,8,15,-1],[10,10,8,5,3]],threshold:-.0144517095759511,right_val:.5484204888343811,left_val:.1830351948738098},{features:[[3,14,8,6,-1],[3,14,4,3,2],[7,17,4,3,2]],threshold:.0020380979403853416,right_val:.6051092743873596,left_val:.3363558948040009},{features:[[14,2,2,2,-1],[14,3,2,1,2]],threshold:-.0016155190533027053,right_val:.5441246032714844,left_val:.2286642044782639},{features:[[1,10,7,6,-1],[1,13,7,3,2]],threshold:.0033458340913057327,right_val:.2392338067293167,left_val:.5625913143157959},{features:[[15,4,4,3,-1],[15,4,2,3,2]],threshold:.0016379579901695251,right_val:.5964621901512146,left_val:.3906993865966797},{features:[[2,9,14,6,-1],[2,9,7,3,2],[9,12,7,3,2]],threshold:.0302512105554342,right_val:.1575746983289719,left_val:.524848222732544},{features:[[5,7,10,4,-1],[5,9,10,2,2]],threshold:.037251990288496,right_val:.6748418807983398,left_val:.4194310903549194},{features:[[6,9,8,8,-1],[6,9,4,4,2],[10,13,4,4,2]],threshold:-.0251097902655602,right_val:.5473451018333435,left_val:.1882549971342087},{features:[[14,1,3,2,-1],[14,2,3,1,2]],threshold:-.005309905856847763,right_val:.5227110981941223,left_val:.133997306227684},{features:[[1,4,4,2,-1],[3,4,2,2,2]],threshold:.0012086479691788554,right_val:.6109635829925537,left_val:.3762088119983673},{features:[[11,10,2,8,-1],[11,14,2,4,2]],threshold:-.0219076797366142,right_val:.5404006838798523,left_val:.266314297914505},{features:[[0,0,5,3,-1],[0,1,5,1,3]],threshold:.0054116579703986645,right_val:.2232273072004318,left_val:.5363578796386719},{features:[[2,5,18,8,-1],[11,5,9,4,2],[2,9,9,4,2]],threshold:.069946326315403,right_val:.2453698068857193,left_val:.5358232855796814},{features:[[6,6,1,6,-1],[6,9,1,3,2]],threshold:.00034520021290518343,right_val:.5376930236816406,left_val:.2409671992063522},{features:[[19,1,1,3,-1],[19,2,1,1,3]],threshold:.0012627709656953812,right_val:.3155693113803864,left_val:.5425856709480286},{features:[[7,6,6,6,-1],[9,6,2,6,3]],threshold:.0227195098996162,right_val:.6597865223884583,left_val:.4158405959606171},{features:[[19,1,1,3,-1],[19,2,1,1,3]],threshold:-.001811100053600967,right_val:.5505244731903076,left_val:.2811253070831299},{features:[[3,13,2,3,-1],[3,14,2,1,3]],threshold:.0033469670452177525,right_val:.1891465038061142,left_val:.526002824306488},{features:[[8,4,8,12,-1],[12,4,4,6,2],[8,10,4,6,2]],threshold:.00040791751234792173,right_val:.3344210088253021,left_val:.5673509240150452},{features:[[5,2,6,3,-1],[7,2,2,3,3]],threshold:.0127347996458411,right_val:.2395612001419067,left_val:.5343592166900635},{features:[[6,1,9,10,-1],[6,6,9,5,2]],threshold:-.007311972789466381,right_val:.4022207856178284,left_val:.6010890007019043},{features:[[0,4,6,12,-1],[2,4,2,12,3]],threshold:-.0569487512111664,right_val:.4543190896511078,left_val:.8199151158332825},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:-.005011659115552902,right_val:.5357710719108582,left_val:.2200281023979187},{features:[[7,14,5,3,-1],[7,15,5,1,3]],threshold:.006033436860889196,right_val:.7181751132011414,left_val:.4413081109523773},{features:[[15,13,3,3,-1],[15,14,3,1,3]],threshold:.0039437441155314445,right_val:.2791733145713806,left_val:.547886073589325},{features:[[6,14,8,3,-1],[6,15,8,1,3]],threshold:-.0036591119132936,right_val:.3989723920822144,left_val:.635786771774292},{features:[[15,13,3,3,-1],[15,14,3,1,3]],threshold:-.0038456181064248085,right_val:.5300664901733398,left_val:.3493686020374298},{features:[[2,13,3,3,-1],[2,14,3,1,3]],threshold:-.007192626129835844,right_val:.5229672789573669,left_val:.1119614988565445},{features:[[4,7,12,12,-1],[10,7,6,6,2],[4,13,6,6,2]],threshold:-.0527989417314529,right_val:.54534512758255,left_val:.2387102991342545},{features:[[9,7,2,6,-1],[10,7,1,6,2]],threshold:-.007953766733407974,right_val:.4439376890659332,left_val:.7586917877197266},{features:[[8,9,5,2,-1],[8,10,5,1,2]],threshold:-.0027344180271029472,right_val:.5489321947097778,left_val:.2565476894378662},{features:[[8,6,3,4,-1],[9,6,1,4,3]],threshold:-.0018507939530536532,right_val:.4252474904060364,left_val:.6734347939491272},{features:[[9,6,2,8,-1],[9,10,2,4,2]],threshold:.0159189198166132,right_val:.2292661964893341,left_val:.548835277557373},{features:[[7,7,3,6,-1],[8,7,1,6,3]],threshold:-.0012687679845839739,right_val:.4022389948368073,left_val:.6104331016540527},{features:[[11,3,3,3,-1],[12,3,1,3,3]],threshold:.006288391072303057,right_val:.1536193042993546,left_val:.5310853123664856},{features:[[5,4,6,1,-1],[7,4,2,1,3]],threshold:-.0062259892001748085,right_val:.524160623550415,left_val:.1729111969470978},{features:[[5,6,10,3,-1],[5,7,10,1,3]],threshold:-.0121325999498367,right_val:.4325182139873505,left_val:.659775972366333}],threshold:21.010639190673828},{simpleClassifiers:[{features:[[7,3,6,9,-1],[7,6,6,3,3]],threshold:-.0039184908382594585,right_val:.1469330936670303,left_val:.6103435158729553},{features:[[6,7,9,1,-1],[9,7,3,1,3]],threshold:.0015971299726516008,right_val:.5896466970443726,left_val:.2632363140583038},{features:[[2,8,16,8,-1],[2,12,16,4,2]],threshold:.0177801102399826,right_val:.1760361939668655,left_val:.587287425994873},{features:[[14,6,2,6,-1],[14,9,2,3,2]],threshold:.0006533476989716291,right_val:.5596066117286682,left_val:.1567801982164383},{features:[[1,5,6,15,-1],[1,10,6,5,3]],threshold:-.00028353091329336166,right_val:.5732036232948303,left_val:.1913153976202011},{features:[[10,0,6,9,-1],[10,3,6,3,3]],threshold:.0016104689566418529,right_val:.5623080730438232,left_val:.2914913892745972},{features:[[6,6,7,14,-1],[6,13,7,7,2]],threshold:-.0977506190538406,right_val:.5648233294487,left_val:.194347694516182},{features:[[13,7,3,6,-1],[13,9,3,2,3]],threshold:.0005518235848285258,right_val:.5504639744758606,left_val:.3134616911411285},{features:[[1,8,15,4,-1],[6,8,5,4,3]],threshold:-.0128582203760743,right_val:.5760142803192139,left_val:.253648191690445},{features:[[11,2,3,10,-1],[11,7,3,5,2]],threshold:.004153023939579725,right_val:.36597740650177,left_val:.5767722129821777},{features:[[3,7,4,6,-1],[3,9,4,2,3]],threshold:.0017092459602281451,right_val:.5918939113616943,left_val:.2843191027641296},{features:[[13,3,6,10,-1],[15,3,2,10,3]],threshold:.007521735969930887,right_val:.6183109283447266,left_val:.4052427113056183},{features:[[5,7,8,10,-1],[5,7,4,5,2],[9,12,4,5,2]],threshold:.0022479810286313295,right_val:.3135401010513306,left_val:.578375518321991},{features:[[4,4,12,12,-1],[10,4,6,6,2],[4,10,6,6,2]],threshold:.0520062111318111,right_val:.1916636973619461,left_val:.5541312098503113},{features:[[1,4,6,9,-1],[3,4,2,9,3]],threshold:.0120855299755931,right_val:.6644591093063354,left_val:.4032655954360962},{features:[[11,3,2,5,-1],[11,3,1,5,2]],threshold:14687820112158079e-21,right_val:.5709382891654968,left_val:.3535977900028229},{features:[[7,3,2,5,-1],[8,3,1,5,2]],threshold:7139518857002258e-21,right_val:.5610269904136658,left_val:.3037444949150085},{features:[[10,14,2,3,-1],[10,15,2,1,3]],threshold:-.0046001640148460865,right_val:.4580326080322266,left_val:.7181087136268616},{features:[[5,12,6,2,-1],[8,12,3,2,2]],threshold:.0020058949012309313,right_val:.2953684031963348,left_val:.5621951818466187},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.004505027085542679,right_val:.7619017958641052,left_val:.4615387916564941},{features:[[4,11,12,6,-1],[4,14,12,3,2]],threshold:.0117468303069472,right_val:.1772529035806656,left_val:.5343837141990662},{features:[[11,11,5,9,-1],[11,14,5,3,3]],threshold:-.0583163388073444,right_val:.5340772271156311,left_val:.1686245948076248},{features:[[6,15,3,2,-1],[6,16,3,1,2]],threshold:.00023629379575140774,right_val:.6026803851127625,left_val:.3792056143283844},{features:[[11,0,3,5,-1],[12,0,1,5,3]],threshold:-.007815618067979813,right_val:.5324323773384094,left_val:.151286706328392},{features:[[5,5,6,7,-1],[8,5,3,7,2]],threshold:-.0108761601150036,right_val:.5319945216178894,left_val:.2081822007894516},{features:[[13,0,1,9,-1],[13,3,1,3,3]],threshold:-.0027745519764721394,right_val:.5210328102111816,left_val:.4098246991634369},{features:[[3,2,4,8,-1],[3,2,2,4,2],[5,6,2,4,2]],threshold:-.0007827638182789087,right_val:.3478842079639435,left_val:.5693274140357971},{features:[[13,12,4,6,-1],[13,14,4,2,3]],threshold:.0138704096898437,right_val:.2257698029279709,left_val:.5326750874519348},{features:[[3,12,4,6,-1],[3,14,4,2,3]],threshold:-.0236749108880758,right_val:.5200707912445068,left_val:.1551305055618286},{features:[[13,11,3,4,-1],[13,13,3,2,2]],threshold:-14879409718560055e-21,right_val:.3820176124572754,left_val:.5500566959381104},{features:[[4,4,4,3,-1],[4,5,4,1,3]],threshold:.00361906411126256,right_val:.6639748215675354,left_val:.4238683879375458},{features:[[7,5,11,8,-1],[7,9,11,4,2]],threshold:-.0198171101510525,right_val:.5382357835769653,left_val:.2150038033723831},{features:[[7,8,3,4,-1],[8,8,1,4,3]],threshold:-.0038154039066284895,right_val:.4215297102928162,left_val:.6675711274147034},{features:[[9,1,6,1,-1],[11,1,2,1,3]],threshold:-.0049775829538702965,right_val:.5386328101158142,left_val:.2267289012670517},{features:[[5,5,3,3,-1],[5,6,3,1,3]],threshold:.002244102070108056,right_val:.6855735778808594,left_val:.4308691024780273},{features:[[0,9,20,6,-1],[10,9,10,3,2],[0,12,10,3,2]],threshold:.0122824599966407,right_val:.3467479050159454,left_val:.5836614966392517},{features:[[8,6,3,5,-1],[9,6,1,5,3]],threshold:-.002854869933798909,right_val:.4311453998088837,left_val:.7016944885253906},{features:[[11,0,1,3,-1],[11,1,1,1,3]],threshold:-.0037875669077038765,right_val:.5224946141242981,left_val:.2895345091819763},{features:[[4,2,4,2,-1],[4,3,4,1,2]],threshold:-.0012201230274513364,right_val:.5481644868850708,left_val:.2975570857524872},{features:[[12,6,4,3,-1],[12,7,4,1,3]],threshold:.010160599835217,right_val:.8182697892189026,left_val:.4888817965984345},{features:[[5,0,6,4,-1],[7,0,2,4,3]],threshold:-.0161745697259903,right_val:.5239992737770081,left_val:.1481492966413498},{features:[[9,7,3,8,-1],[10,7,1,8,3]],threshold:.0192924607545137,right_val:.7378190755844116,left_val:.4786309897899628},{features:[[9,7,2,2,-1],[10,7,1,2,2]],threshold:-.003247953951358795,right_val:.4470643997192383,left_val:.7374222874641418},{features:[[6,7,14,4,-1],[13,7,7,2,2],[6,9,7,2,2]],threshold:-.009380348026752472,right_val:.5537996292114258,left_val:.3489154875278473},{features:[[0,5,3,6,-1],[0,7,3,2,3]],threshold:-.0126061299815774,right_val:.5315443277359009,left_val:.2379686981439591},{features:[[13,11,3,4,-1],[13,13,3,2,2]],threshold:-.0256219301372766,right_val:.5138769745826721,left_val:.1964688003063202},{features:[[4,11,3,4,-1],[4,13,3,2,2]],threshold:-7574149640277028e-20,right_val:.3365853130817413,left_val:.5590522885322571},{features:[[5,9,12,8,-1],[11,9,6,4,2],[5,13,6,4,2]],threshold:-.0892108827829361,right_val:.516263484954834,left_val:.0634046569466591},{features:[[9,12,1,3,-1],[9,13,1,1,3]],threshold:-.002767048077657819,right_val:.4490706026554108,left_val:.732346773147583},{features:[[10,15,2,4,-1],[10,17,2,2,2]],threshold:.0002715257869567722,right_val:.5985518097877502,left_val:.411483496427536}],threshold:23.918790817260742},{simpleClassifiers:[{features:[[7,7,6,1,-1],[9,7,2,1,3]],threshold:.001478621968999505,right_val:.6643316745758057,left_val:.266354501247406},{features:[[12,3,6,6,-1],[15,3,3,3,2],[12,6,3,3,2]],threshold:-.001874165958724916,right_val:.2518512904644013,left_val:.6143848896026611},{features:[[0,4,10,6,-1],[0,6,10,2,3]],threshold:-.001715100952424109,right_val:.2397463023662567,left_val:.5766341090202332},{features:[[8,3,8,14,-1],[12,3,4,7,2],[8,10,4,7,2]],threshold:-.0018939269939437509,right_val:.2529144883155823,left_val:.5682045817375183},{features:[[4,4,7,15,-1],[4,9,7,5,3]],threshold:-.005300605203956366,right_val:.5556079745292664,left_val:.1640675961971283},{features:[[12,2,6,8,-1],[15,2,3,4,2],[12,6,3,4,2]],threshold:-.0466625317931175,right_val:.4762830138206482,left_val:.6123154163360596},{features:[[2,2,6,8,-1],[2,2,3,4,2],[5,6,3,4,2]],threshold:-.000794313324149698,right_val:.2839404046535492,left_val:.5707858800888062},{features:[[2,13,18,7,-1],[8,13,6,7,3]],threshold:.0148916700854898,right_val:.6006367206573486,left_val:.4089672863483429},{features:[[4,3,8,14,-1],[4,3,4,7,2],[8,10,4,7,2]],threshold:-.0012046529445797205,right_val:.2705289125442505,left_val:.5712450742721558},{features:[[18,1,2,6,-1],[18,3,2,2,3]],threshold:.006061938125640154,right_val:.3262225985527039,left_val:.526250422000885},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.0025286648888140917,right_val:.4199256896972656,left_val:.6853830814361572},{features:[[18,1,2,6,-1],[18,3,2,2,3]],threshold:-.005901021882891655,right_val:.5434812903404236,left_val:.3266282081604004},{features:[[0,1,2,6,-1],[0,3,2,2,3]],threshold:.005670276004821062,right_val:.2319003939628601,left_val:.5468410849571228},{features:[[1,5,18,6,-1],[1,7,18,2,3]],threshold:-.003030410036444664,right_val:.2708238065242767,left_val:.557066798210144},{features:[[0,2,6,7,-1],[3,2,3,7,2]],threshold:.002980364952236414,right_val:.5890625715255737,left_val:.3700568974018097},{features:[[7,3,6,14,-1],[7,10,6,7,2]],threshold:-.0758405104279518,right_val:.5419948101043701,left_val:.2140070050954819},{features:[[3,7,13,10,-1],[3,12,13,5,2]],threshold:.0192625392228365,right_val:.2726590037345886,left_val:.5526772141456604},{features:[[11,15,2,2,-1],[11,16,2,1,2]],threshold:.00018888259364757687,right_val:.6017209887504578,left_val:.3958011865615845},{features:[[2,11,16,4,-1],[2,11,8,2,2],[10,13,8,2,2]],threshold:.0293695498257875,right_val:.1435758024454117,left_val:.5241373777389526},{features:[[13,7,6,4,-1],[16,7,3,2,2],[13,9,3,2,2]],threshold:.0010417619487270713,right_val:.5929983258247375,left_val:.3385409116744995},{features:[[6,10,3,9,-1],[6,13,3,3,3]],threshold:.0026125640142709017,right_val:.3021597862243652,left_val:.5485377907752991},{features:[[14,6,1,6,-1],[14,9,1,3,2]],threshold:.0009697746718302369,right_val:.553203284740448,left_val:.3375276029109955},{features:[[5,10,4,1,-1],[7,10,2,1,2]],threshold:.0005951265920884907,right_val:.3359399139881134,left_val:.563174307346344},{features:[[3,8,15,5,-1],[8,8,5,5,3]],threshold:-.1015655994415283,right_val:.5230425000190735,left_val:.0637350380420685},{features:[[1,6,5,4,-1],[1,8,5,2,2]],threshold:.0361566990613937,right_val:.1029528975486755,left_val:.5136963129043579},{features:[[3,1,17,6,-1],[3,3,17,2,3]],threshold:.003462414024397731,right_val:.5558289289474487,left_val:.3879320025444031},{features:[[6,7,8,2,-1],[10,7,4,2,2]],threshold:.0195549800992012,right_val:.1875859946012497,left_val:.5250086784362793},{features:[[9,7,3,2,-1],[10,7,1,2,3]],threshold:-.0023121440317481756,right_val:.4679641127586365,left_val:.667202889919281},{features:[[8,7,3,2,-1],[9,7,1,2,3]],threshold:-.001860528951510787,right_val:.4334670901298523,left_val:.7163379192352295},{features:[[8,9,4,2,-1],[8,10,4,1,2]],threshold:-.0009402636205777526,right_val:.5650203227996826,left_val:.302136093378067},{features:[[8,8,4,3,-1],[8,9,4,1,3]],threshold:-.005241833161562681,right_val:.5250256061553955,left_val:.1820009052753449},{features:[[9,5,6,4,-1],[9,5,3,4,2]],threshold:.00011729019752237946,right_val:.544597327709198,left_val:.3389188051223755},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.0011878840159624815,right_val:.6253563165664673,left_val:.4085349142551422},{features:[[4,7,12,6,-1],[10,7,6,3,2],[4,10,6,3,2]],threshold:-.0108813596889377,right_val:.5700082778930664,left_val:.3378399014472961},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.0017354859737679362,right_val:.6523038744926453,left_val:.4204635918140411},{features:[[9,7,3,3,-1],[9,8,3,1,3]],threshold:-.00651190523058176,right_val:.5428143739700317,left_val:.2595216035842896},{features:[[7,4,3,8,-1],[8,4,1,8,3]],threshold:-.0012136430013924837,right_val:.3977893888950348,left_val:.6165143847465515},{features:[[10,0,3,6,-1],[11,0,1,6,3]],threshold:-.010354240424931,right_val:.5219504833221436,left_val:.1628028005361557},{features:[[6,3,4,8,-1],[8,3,2,8,2]],threshold:.0005585883045569062,right_val:.5503574013710022,left_val:.3199650943279266},{features:[[14,3,6,13,-1],[14,3,3,13,2]],threshold:.0152996499091387,right_val:.6122388243675232,left_val:.4103994071483612},{features:[[8,13,3,6,-1],[8,16,3,3,2]],threshold:-.021588210016489,right_val:.519738495349884,left_val:.103491298854351},{features:[[14,3,6,13,-1],[14,3,3,13,2]],threshold:-.1283462941646576,right_val:.4893102943897247,left_val:.8493865132331848},{features:[[0,7,10,4,-1],[0,7,5,2,2],[5,9,5,2,2]],threshold:-.0022927189711481333,right_val:.5471575260162354,left_val:.3130157887935638},{features:[[14,3,6,13,-1],[14,3,3,13,2]],threshold:.0799151062965393,right_val:.6073989272117615,left_val:.4856320917606354},{features:[[0,3,6,13,-1],[3,3,3,13,2]],threshold:-.0794410929083824,right_val:.462453305721283,left_val:.8394674062728882},{features:[[9,1,4,1,-1],[9,1,2,1,2]],threshold:-.00528000108897686,right_val:.5306698083877563,left_val:.1881695985794067},{features:[[8,0,2,1,-1],[9,0,1,1,2]],threshold:.0010463109938427806,right_val:.2583065927028656,left_val:.5271229147911072},{features:[[10,16,4,4,-1],[12,16,2,2,2],[10,18,2,2,2]],threshold:.00026317298761568964,right_val:.5735440850257874,left_val:.4235304892063141},{features:[[9,6,2,3,-1],[10,6,1,3,2]],threshold:-.0036173160187900066,right_val:.4495444893836975,left_val:.6934396028518677},{features:[[4,5,12,2,-1],[8,5,4,2,3]],threshold:.0114218797534704,right_val:.4138193130493164,left_val:.590092122554779},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:-.0019963278900831938,right_val:.4327239990234375,left_val:.6466382741928101}],threshold:24.52787971496582},{simpleClassifiers:[{features:[[6,4,8,6,-1],[6,6,8,2,3]],threshold:-.00996912457048893,right_val:.2482212036848068,left_val:.6142324209213257},{features:[[9,5,2,12,-1],[9,11,2,6,2]],threshold:.0007307305932044983,right_val:.2321965992450714,left_val:.5704951882362366},{features:[[4,6,6,8,-1],[4,10,6,4,2]],threshold:.0006404530140571296,right_val:.5814933180809021,left_val:.2112251967191696},{features:[[12,2,8,5,-1],[12,2,4,5,2]],threshold:.004542401991784573,right_val:.586631178855896,left_val:.2950482070446014},{features:[[0,8,18,3,-1],[0,9,18,1,3]],threshold:9247744310414419e-20,right_val:.5791326761245728,left_val:.2990990877151489},{features:[[8,12,4,8,-1],[8,16,4,4,2]],threshold:-.008660314604640007,right_val:.5635542273521423,left_val:.2813029885292053},{features:[[0,2,8,5,-1],[4,2,4,5,2]],threshold:.008051581680774689,right_val:.6054757237434387,left_val:.3535369038581848},{features:[[13,11,3,4,-1],[13,13,3,2,2]],threshold:.00043835240649059415,right_val:.2731510996818543,left_val:.5596532225608826},{features:[[5,11,6,1,-1],[7,11,2,1,3]],threshold:-981689736363478e-19,right_val:.3638561069965363,left_val:.5978031754493713},{features:[[11,3,3,1,-1],[12,3,1,1,3]],threshold:-.0011298790341243148,right_val:.5432729125022888,left_val:.2755252122879028},{features:[[7,13,5,3,-1],[7,14,5,1,3]],threshold:.006435615010559559,right_val:.7069833278656006,left_val:.4305641949176788},{features:[[11,11,7,6,-1],[11,14,7,3,2]],threshold:-.0568293295800686,right_val:.5294997096061707,left_val:.2495242953300476},{features:[[2,11,7,6,-1],[2,14,7,3,2]],threshold:.004066816996783018,right_val:.2497723996639252,left_val:.5478553175926208},{features:[[12,14,2,6,-1],[12,16,2,2,3]],threshold:481647984997835e-19,right_val:.5706356167793274,left_val:.3938601016998291},{features:[[8,14,3,3,-1],[8,15,3,1,3]],threshold:.00617950176820159,right_val:.7394766807556152,left_val:.440760612487793},{features:[[11,0,3,5,-1],[12,0,1,5,3]],threshold:.006498575210571289,right_val:.2479152977466583,left_val:.5445243120193481},{features:[[6,1,4,9,-1],[8,1,2,9,2]],threshold:-.0010211090557277203,right_val:.5338971018791199,left_val:.2544766962528229},{features:[[10,3,6,1,-1],[12,3,2,1,3]],threshold:-.005424752831459045,right_val:.5324069261550903,left_val:.2718858122825623},{features:[[8,8,3,4,-1],[8,10,3,2,2]],threshold:-.0010559899965301156,right_val:.553450882434845,left_val:.3178288042545319},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0006646580877713859,right_val:.6558194160461426,left_val:.4284219145774841},{features:[[5,18,4,2,-1],[5,19,4,1,2]],threshold:-.00027524109464138746,right_val:.3810262978076935,left_val:.5902860760688782},{features:[[2,1,18,6,-1],[2,3,18,2,3]],threshold:.004229320213198662,right_val:.5709385871887207,left_val:.381648987531662},{features:[[6,0,3,2,-1],[7,0,1,2,3]],threshold:-.0032868210691958666,right_val:.5259544253349304,left_val:.1747743934392929},{features:[[13,8,6,2,-1],[16,8,3,1,2],[13,9,3,1,2]],threshold:.0001561187964398414,right_val:.5725612044334412,left_val:.3601722121238709},{features:[[6,10,3,6,-1],[6,13,3,3,2]],threshold:-7362138148891972e-21,right_val:.3044497072696686,left_val:.540185809135437},{features:[[0,13,20,4,-1],[10,13,10,2,2],[0,15,10,2,2]],threshold:-.014767250046134,right_val:.5573434829711914,left_val:.3220770061016083},{features:[[7,7,6,5,-1],[9,7,2,5,3]],threshold:.0244895908981562,right_val:.6518812775611877,left_val:.4301528036594391},{features:[[11,0,2,2,-1],[11,1,2,1,2]],threshold:-.000376520911231637,right_val:.5598236918449402,left_val:.356458306312561},{features:[[1,8,6,2,-1],[1,8,3,1,2],[4,9,3,1,2]],threshold:736576885174145e-20,right_val:.556189775466919,left_val:.3490782976150513},{features:[[0,2,20,2,-1],[10,2,10,1,2],[0,3,10,1,2]],threshold:-.0150999398902059,right_val:.5335299968719482,left_val:.1776272058486939},{features:[[7,14,5,3,-1],[7,15,5,1,3]],threshold:-.0038316650316119194,right_val:.4221394062042236,left_val:.6149687767028809},{features:[[7,13,6,6,-1],[10,13,3,3,2],[7,16,3,3,2]],threshold:.0169254001230001,right_val:.2166585028171539,left_val:.5413014888763428},{features:[[9,12,2,3,-1],[9,13,2,1,3]],threshold:-.003047785023227334,right_val:.4354617893695831,left_val:.6449490785598755},{features:[[16,11,1,6,-1],[16,13,1,2,3]],threshold:.003214058931916952,right_val:.3523217141628265,left_val:.5400155186653137},{features:[[3,11,1,6,-1],[3,13,1,2,3]],threshold:-.004002320114523172,right_val:.5338417291641235,left_val:.2774524092674255},{features:[[4,4,14,12,-1],[11,4,7,6,2],[4,10,7,6,2]],threshold:.0074182129465043545,right_val:.3702817857265472,left_val:.567673921585083},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:-.008876458741724491,right_val:.4583688974380493,left_val:.7749221920967102},{features:[[12,3,3,3,-1],[13,3,1,3,3]],threshold:.002731173997744918,right_val:.3996661007404327,left_val:.5338721871376038},{features:[[6,6,8,3,-1],[6,7,8,1,3]],threshold:-.0025082379579544067,right_val:.377749890089035,left_val:.5611963272094727},{features:[[12,3,3,3,-1],[13,3,1,3,3]],threshold:-.008054107427597046,right_val:.5179182887077332,left_val:.291522890329361},{features:[[3,1,4,10,-1],[3,1,2,5,2],[5,6,2,5,2]],threshold:-.0009793881326913834,right_val:.3700192868709564,left_val:.5536432862281799},{features:[[5,7,10,2,-1],[5,7,5,2,2]],threshold:-.005874590948224068,right_val:.5679376125335693,left_val:.3754391074180603},{features:[[8,7,3,3,-1],[9,7,1,3,3]],threshold:-.00449367193505168,right_val:.4480949938297272,left_val:.7019699215888977},{features:[[15,12,2,3,-1],[15,13,2,1,3]],threshold:-.00543892290443182,right_val:.5313386917114258,left_val:.2310364991426468},{features:[[7,8,3,4,-1],[8,8,1,4,3]],threshold:-.0007509464048780501,right_val:.4129343032836914,left_val:.5864868760108948},{features:[[13,4,1,12,-1],[13,10,1,6,2]],threshold:14528800420521293e-21,right_val:.5619621276855469,left_val:.3732407093048096},{features:[[4,5,12,12,-1],[4,5,6,6,2],[10,11,6,6,2]],threshold:.0407580696046352,right_val:.2720521986484528,left_val:.5312091112136841},{features:[[7,14,7,3,-1],[7,15,7,1,3]],threshold:.006650593131780624,right_val:.6693493723869324,left_val:.4710015952587128},{features:[[3,12,2,3,-1],[3,13,2,1,3]],threshold:.0045759351924061775,right_val:.1637275964021683,left_val:.5167819261550903},{features:[[3,2,14,2,-1],[10,2,7,1,2],[3,3,7,1,2]],threshold:.0065269311890006065,right_val:.2938531935214996,left_val:.5397608876228333},{features:[[0,1,3,10,-1],[1,1,1,10,3]],threshold:-.0136603796854615,right_val:.453220009803772,left_val:.7086488008499146},{features:[[9,0,6,5,-1],[11,0,2,5,3]],threshold:.0273588690906763,right_val:.3589231967926025,left_val:.5206481218338013},{features:[[5,7,6,2,-1],[8,7,3,2,2]],threshold:.0006219755159690976,right_val:.5441123247146606,left_val:.3507075905799866},{features:[[7,1,6,10,-1],[7,6,6,5,2]],threshold:-.0033077080734074116,right_val:.402489185333252,left_val:.5859522819519043},{features:[[1,1,18,3,-1],[7,1,6,3,3]],threshold:-.0106311095878482,right_val:.4422602951526642,left_val:.6743267178535461},{features:[[16,3,3,6,-1],[16,5,3,2,3]],threshold:.0194416493177414,right_val:.1797904968261719,left_val:.5282716155052185}],threshold:27.153350830078125},{simpleClassifiers:[{features:[[6,3,7,6,-1],[6,6,7,3,2]],threshold:-.005505216773599386,right_val:.2626559138298035,left_val:.5914731025695801},{features:[[4,7,12,2,-1],[8,7,4,2,3]],threshold:.001956227933987975,right_val:.5741627216339111,left_val:.2312581986188889},{features:[[0,4,17,10,-1],[0,9,17,5,2]],threshold:-.008892478421330452,right_val:.5626654028892517,left_val:.1656530052423477},{features:[[3,4,15,16,-1],[3,12,15,8,2]],threshold:.0836383774876595,right_val:.1957294940948486,left_val:.5423449873924255},{features:[[7,15,6,4,-1],[7,17,6,2,2]],threshold:.0012282270472496748,right_val:.5992503762245178,left_val:.3417904078960419},{features:[[15,2,4,9,-1],[15,2,2,9,2]],threshold:.0057629169896245,right_val:.6079903841018677,left_val:.3719581961631775},{features:[[2,3,3,2,-1],[2,4,3,1,2]],threshold:-.0016417410224676132,right_val:.5576915740966797,left_val:.2577486038208008},{features:[[13,6,7,9,-1],[13,9,7,3,3]],threshold:.0034113149158656597,right_val:.5514171719551086,left_val:.2950749099254608},{features:[[8,11,4,3,-1],[8,12,4,1,3]],threshold:-.0110693201422691,right_val:.4477078914642334,left_val:.7569358944892883},{features:[[0,2,20,6,-1],[10,2,10,3,2],[0,5,10,3,2]],threshold:.0348659716546535,right_val:.2669621109962463,left_val:.5583708882331848},{features:[[3,2,6,10,-1],[3,2,3,5,2],[6,7,3,5,2]],threshold:.0006570109981112182,right_val:.2988890111446381,left_val:.5627313256263733},{features:[[13,10,3,4,-1],[13,12,3,2,2]],threshold:-.0243391301482916,right_val:.5108863115310669,left_val:.2771185040473938},{features:[[4,10,3,4,-1],[4,12,3,2,2]],threshold:.0005943520227447152,right_val:.3120341897010803,left_val:.5580651760101318},{features:[[7,5,6,3,-1],[9,5,2,3,3]],threshold:.0022971509024500847,right_val:.5679075717926025,left_val:.3330250084400177},{features:[[7,6,6,8,-1],[7,10,6,4,2]],threshold:-.0037801829166710377,right_val:.5344808101654053,left_val:.2990534901618958},{features:[[0,11,20,6,-1],[0,14,20,3,2]],threshold:-.13420669734478,right_val:.5392568111419678,left_val:.1463858932256699},{features:[[4,13,4,6,-1],[4,13,2,3,2],[6,16,2,3,2]],threshold:.0007522454834543169,right_val:.5692734718322754,left_val:.3746953904628754},{features:[[6,0,8,12,-1],[10,0,4,6,2],[6,6,4,6,2]],threshold:-.040545541793108,right_val:.5484297871589661,left_val:.2754747867584229},{features:[[2,0,15,2,-1],[2,1,15,1,2]],threshold:.0012572970008477569,right_val:.5756075978279114,left_val:.3744584023952484},{features:[[9,12,2,3,-1],[9,13,2,1,3]],threshold:-.007424994837492704,right_val:.4728231132030487,left_val:.7513859272003174},{features:[[3,12,1,2,-1],[3,13,1,1,2]],threshold:.0005090812919661403,right_val:.2932321131229401,left_val:.540489673614502},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.001280845026485622,right_val:.4273349046707153,left_val:.6169779896736145},{features:[[7,3,3,1,-1],[8,3,1,1,3]],threshold:-.0018348860321566463,right_val:.5206472277641296,left_val:.2048496007919312},{features:[[17,7,3,6,-1],[17,9,3,2,3]],threshold:.0274848695844412,right_val:.1675522029399872,left_val:.5252984762191772},{features:[[7,2,3,2,-1],[8,2,1,2,3]],threshold:.0022372419480234385,right_val:.2777658104896545,left_val:.5267782807350159},{features:[[11,4,5,3,-1],[11,5,5,1,3]],threshold:-.008863529190421104,right_val:.4812048971652985,left_val:.69545578956604},{features:[[4,4,5,3,-1],[4,5,5,1,3]],threshold:.004175397101789713,right_val:.6349195837974548,left_val:.4291887879371643},{features:[[19,3,1,2,-1],[19,4,1,1,2]],threshold:-.0017098189564421773,right_val:.5361248850822449,left_val:.2930536866188049},{features:[[5,5,4,3,-1],[5,6,4,1,3]],threshold:.006532854866236448,right_val:.7409694194793701,left_val:.4495325088500977},{features:[[17,7,3,6,-1],[17,9,3,2,3]],threshold:-.009537290781736374,right_val:.5416501760482788,left_val:.3149119913578033},{features:[[0,7,3,6,-1],[0,9,3,2,3]],threshold:.0253109894692898,right_val:.1311707943677902,left_val:.5121892094612122},{features:[[14,2,6,9,-1],[14,5,6,3,3]],threshold:.0364609695971012,right_val:.2591339945793152,left_val:.5175911784172058},{features:[[0,4,5,6,-1],[0,6,5,2,3]],threshold:.0208543296903372,right_val:.1582316011190414,left_val:.5137140154838562},{features:[[10,5,6,2,-1],[12,5,2,2,3]],threshold:-.0008720774785615504,right_val:.439897894859314,left_val:.5574309825897217},{features:[[4,5,6,2,-1],[6,5,2,2,3]],threshold:-15227000403683633e-21,right_val:.3708069920539856,left_val:.5548940896987915},{features:[[8,1,4,6,-1],[8,3,4,2,3]],threshold:-.0008431650931015611,right_val:.5554211139678955,left_val:.3387419879436493},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.0036037859972566366,right_val:.3411171138286591,left_val:.5358061790466309},{features:[[6,6,8,3,-1],[6,7,8,1,3]],threshold:-.006805789191275835,right_val:.4345862865447998,left_val:.6125202775001526},{features:[[0,1,5,9,-1],[0,4,5,3,3]],threshold:-.0470216609537601,right_val:.519373893737793,left_val:.2358165979385376},{features:[[16,0,4,15,-1],[16,0,2,15,2]],threshold:-.0369541086256504,right_val:.4760943949222565,left_val:.7323111295700073},{features:[[1,10,3,2,-1],[1,11,3,1,2]],threshold:.0010439479956403375,right_val:.3411330878734589,left_val:.5419455170631409},{features:[[14,4,1,10,-1],[14,9,1,5,2]],threshold:-.00021050689974799752,right_val:.5554947257041931,left_val:.2821694016456604},{features:[[0,1,4,12,-1],[2,1,2,12,2]],threshold:-.0808315873146057,right_val:.4697434902191162,left_val:.9129930138587952},{features:[[11,11,4,2,-1],[11,11,2,2,2]],threshold:-.0003657905908767134,right_val:.3978292942047119,left_val:.6022670269012451},{features:[[5,11,4,2,-1],[7,11,2,2,2]],threshold:-.00012545920617412776,right_val:.384553998708725,left_val:.5613213181495667},{features:[[3,8,15,5,-1],[8,8,5,5,3]],threshold:-.0687864869832993,right_val:.5300496816635132,left_val:.2261611968278885},{features:[[0,0,6,10,-1],[3,0,3,10,2]],threshold:.0124157899990678,right_val:.5828812122344971,left_val:.4075691998004913},{features:[[11,4,3,2,-1],[12,4,1,2,3]],threshold:-.004717481788247824,right_val:.5267757773399353,left_val:.2827253937721252},{features:[[8,12,3,8,-1],[8,16,3,4,2]],threshold:.0381368584930897,right_val:.1023615971207619,left_val:.5074741244316101},{features:[[8,14,5,3,-1],[8,15,5,1,3]],threshold:-.0028168049175292253,right_val:.4359692931175232,left_val:.6169006824493408},{features:[[7,14,4,3,-1],[7,15,4,1,3]],threshold:.008130360394716263,right_val:.76060950756073,left_val:.4524433016777039},{features:[[11,4,3,2,-1],[12,4,1,2,3]],threshold:.006005601957440376,right_val:.185971200466156,left_val:.5240408778190613},{features:[[3,15,14,4,-1],[3,15,7,2,2],[10,17,7,2,2]],threshold:.0191393196582794,right_val:.2332071959972382,left_val:.5209379196166992},{features:[[2,2,16,4,-1],[10,2,8,2,2],[2,4,8,2,2]],threshold:.0164457596838474,right_val:.3264234960079193,left_val:.5450702905654907},{features:[[0,8,6,12,-1],[3,8,3,12,2]],threshold:-.0373568907380104,right_val:.4533241987228394,left_val:.6999046802520752},{features:[[5,7,10,2,-1],[5,7,5,2,2]],threshold:-.0197279006242752,right_val:.54128098487854,left_val:.2653664946556091},{features:[[9,7,2,5,-1],[10,7,1,5,2]],threshold:.0066972579807043076,right_val:.7138652205467224,left_val:.4480566084384918},{features:[[13,7,6,4,-1],[16,7,3,2,2],[13,9,3,2,2]],threshold:.0007445752853527665,right_val:.5471320152282715,left_val:.4231350123882294},{features:[[0,13,8,2,-1],[0,14,8,1,2]],threshold:.0011790640419349074,right_val:.3130455017089844,left_val:.5341702103614807},{features:[[13,7,6,4,-1],[16,7,3,2,2],[13,9,3,2,2]],threshold:.0349806100130081,right_val:.343053013086319,left_val:.5118659734725952},{features:[[1,7,6,4,-1],[1,7,3,2,2],[4,9,3,2,2]],threshold:.0005685979267582297,right_val:.5468639731407166,left_val:.3532187044620514},{features:[[12,6,1,12,-1],[12,12,1,6,2]],threshold:-.0113406497985125,right_val:.5348700881004333,left_val:.2842353880405426},{features:[[9,5,2,6,-1],[10,5,1,6,2]],threshold:-.00662281084805727,right_val:.4492664933204651,left_val:.6883640289306641},{features:[[14,12,2,3,-1],[14,13,2,1,3]],threshold:-.008016033098101616,right_val:.5224308967590332,left_val:.1709893941879273},{features:[[4,12,2,3,-1],[4,13,2,1,3]],threshold:.0014206819469109178,right_val:.299338310956955,left_val:.5290846228599548},{features:[[8,12,4,3,-1],[8,13,4,1,3]],threshold:-.002780171111226082,right_val:.4460499882698059,left_val:.6498854160308838},{features:[[5,2,2,4,-1],[5,2,1,2,2],[6,4,1,2,2]],threshold:-.0014747589593753219,right_val:.5388113260269165,left_val:.3260438144207001},{features:[[5,5,11,3,-1],[5,6,11,1,3]],threshold:-.0238303393125534,right_val:.4801219999790192,left_val:.7528941035270691},{features:[[7,6,4,12,-1],[7,12,4,6,2]],threshold:.00693697901442647,right_val:.3261427879333496,left_val:.5335165858268738},{features:[[12,13,8,5,-1],[12,13,4,5,2]],threshold:.008280625566840172,right_val:.5737829804420471,left_val:.458039402961731},{features:[[7,6,1,12,-1],[7,12,1,6,2]],threshold:-.0104395002126694,right_val:.5233827829360962,left_val:.2592320144176483}],threshold:34.55411148071289},{simpleClassifiers:[{features:[[1,2,6,3,-1],[4,2,3,3,2]],threshold:.0072006587870419025,right_val:.6849808096885681,left_val:.325888603925705},{features:[[9,5,6,10,-1],[12,5,3,5,2],[9,10,3,5,2]],threshold:-.002859358908608556,right_val:.2537829875946045,left_val:.5838881134986877},{features:[[5,5,8,12,-1],[5,5,4,6,2],[9,11,4,6,2]],threshold:.0006858052802272141,right_val:.2812424004077911,left_val:.5708081722259521},{features:[[0,7,20,6,-1],[0,9,20,2,3]],threshold:.007958019152283669,right_val:.5544260740280151,left_val:.2501051127910614},{features:[[4,2,2,2,-1],[4,3,2,1,2]],threshold:-.0012124150525778532,right_val:.5433350205421448,left_val:.2385368049144745},{features:[[4,18,12,2,-1],[8,18,4,2,3]],threshold:.00794261321425438,right_val:.6220757961273193,left_val:.3955070972442627},{features:[[7,4,4,16,-1],[7,12,4,8,2]],threshold:.0024630590341985226,right_val:.2992357909679413,left_val:.5639708042144775},{features:[[7,6,7,8,-1],[7,10,7,4,2]],threshold:-.006039659958332777,right_val:.541167676448822,left_val:.218651294708252},{features:[[6,3,3,1,-1],[7,3,1,1,3]],threshold:-.0012988339876756072,right_val:.5364584922790527,left_val:.23507060110569},{features:[[11,15,2,4,-1],[11,17,2,2,2]],threshold:.00022299369447864592,right_val:.572960615158081,left_val:.380411297082901},{features:[[3,5,4,8,-1],[3,9,4,4,2]],threshold:.0014654280385002494,right_val:.5258268713951111,left_val:.2510167956352234},{features:[[7,1,6,12,-1],[7,7,6,6,2]],threshold:-.0008121004211716354,right_val:.3851158916950226,left_val:.5992823839187622},{features:[[4,6,6,2,-1],[6,6,2,2,3]],threshold:-.0013836020370945334,right_val:.3636586964130402,left_val:.5681396126747131},{features:[[16,4,4,6,-1],[16,6,4,2,3]],threshold:-.0279364492744207,right_val:.5377560257911682,left_val:.1491317003965378},{features:[[3,3,5,2,-1],[3,4,5,1,2]],threshold:-.0004691955109592527,right_val:.5572484731674194,left_val:.3692429959774017},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.004982965998351574,right_val:.4532504081726074,left_val:.6758509278297424},{features:[[2,16,4,2,-1],[2,17,4,1,2]],threshold:.001881530974060297,right_val:.2932539880275726,left_val:.5368022918701172},{features:[[7,13,6,6,-1],[10,13,3,3,2],[7,16,3,3,2]],threshold:-.0190675500780344,right_val:.5330067276954651,left_val:.1649377048015595},{features:[[7,0,3,4,-1],[8,0,1,4,3]],threshold:-.0046906559728085995,right_val:.5119361877441406,left_val:.1963925957679749},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:.005977713968604803,right_val:.7008398175239563,left_val:.467117190361023},{features:[[0,4,4,6,-1],[0,6,4,2,3]],threshold:-.0333031304180622,right_val:.5104162096977234,left_val:.1155416965484619},{features:[[5,6,12,3,-1],[9,6,4,3,3]],threshold:.0907441079616547,right_val:.1306173056364059,left_val:.5149660110473633},{features:[[7,6,6,14,-1],[9,6,2,14,3]],threshold:.0009355589863844216,right_val:.543985903263092,left_val:.3605481088161469},{features:[[9,7,3,3,-1],[10,7,1,3,3]],threshold:.0149016501381993,right_val:.7687569856643677,left_val:.4886212050914764},{features:[[6,12,2,4,-1],[6,14,2,2,2]],threshold:.0006159411859698594,right_val:.3240939080715179,left_val:.5356813073158264},{features:[[10,12,7,6,-1],[10,14,7,2,3]],threshold:-.0506709888577461,right_val:.5230404138565063,left_val:.1848621964454651},{features:[[1,0,15,2,-1],[1,1,15,1,2]],threshold:.0006866574985906482,right_val:.5517945885658264,left_val:.3840579986572266},{features:[[14,0,6,6,-1],[14,0,3,6,2]],threshold:.008371243253350258,right_val:.6131753921508789,left_val:.4288564026355743},{features:[[5,3,3,1,-1],[6,3,1,1,3]],threshold:-.0012953069526702166,right_val:.528073787689209,left_val:.2913674116134644},{features:[[14,0,6,6,-1],[14,0,3,6,2]],threshold:-.0419416800141335,right_val:.4856030941009522,left_val:.7554799914360046},{features:[[0,3,20,10,-1],[0,8,20,5,2]],threshold:-.0235293805599213,right_val:.5256081223487854,left_val:.2838279902935028},{features:[[14,0,6,6,-1],[14,0,3,6,2]],threshold:.0408574491739273,right_val:.6277297139167786,left_val:.4870935082435608},{features:[[0,0,6,6,-1],[3,0,3,6,2]],threshold:-.0254068691283464,right_val:.4575029015541077,left_val:.7099707722663879},{features:[[19,15,1,2,-1],[19,16,1,1,2]],threshold:-.00041415440500713885,right_val:.5469412207603455,left_val:.4030886888504028},{features:[[0,2,4,8,-1],[2,2,2,8,2]],threshold:.0218241196125746,right_val:.6768701076507568,left_val:.4502024054527283},{features:[[2,1,18,4,-1],[11,1,9,2,2],[2,3,9,2,2]],threshold:.0141140399500728,right_val:.3791700005531311,left_val:.5442860722541809},{features:[[8,12,1,2,-1],[8,13,1,1,2]],threshold:6721459067193791e-20,right_val:.5873476266860962,left_val:.4200463891029358},{features:[[5,2,10,6,-1],[10,2,5,3,2],[5,5,5,3,2]],threshold:-.00794176384806633,right_val:.5585265755653381,left_val:.3792561888694763},{features:[[9,7,2,4,-1],[10,7,1,4,2]],threshold:-.00721444096416235,right_val:.4603548943996429,left_val:.7253103852272034},{features:[[9,7,3,3,-1],[10,7,1,3,3]],threshold:.002581733977422118,right_val:.5900238752365112,left_val:.4693301916122437},{features:[[4,5,12,8,-1],[8,5,4,8,3]],threshold:.1340931951999664,right_val:.1808844953775406,left_val:.5149213075637817},{features:[[15,15,4,3,-1],[15,16,4,1,3]],threshold:.0022962710354477167,right_val:.3717867136001587,left_val:.5399743914604187},{features:[[8,18,3,1,-1],[9,18,1,1,3]],threshold:-.002157584996894002,right_val:.5148863792419434,left_val:.2408495992422104},{features:[[9,13,4,3,-1],[9,14,4,1,3]],threshold:-.004919618833810091,right_val:.4738740026950836,left_val:.6573588252067566},{features:[[7,13,4,3,-1],[7,14,4,1,3]],threshold:.0016267469618469477,right_val:.6303114295005798,left_val:.4192821979522705},{features:[[19,15,1,2,-1],[19,16,1,1,2]],threshold:.00033413388882763684,right_val:.3702101111412048,left_val:.5540298223495483},{features:[[0,15,8,4,-1],[0,17,8,2,2]],threshold:-.0266980808228254,right_val:.5101410746574402,left_val:.1710917949676514},{features:[[9,3,6,4,-1],[11,3,2,4,3]],threshold:-.0305618792772293,right_val:.5168793797492981,left_val:.1904218047857285},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.002851154888048768,right_val:.6313853859901428,left_val:.4447506964206696},{features:[[3,14,14,6,-1],[3,16,14,2,3]],threshold:-.0362114794552326,right_val:.5377349257469177,left_val:.2490727007389069},{features:[[6,3,6,6,-1],[6,6,6,3,2]],threshold:-.002411518944427371,right_val:.3664236962795258,left_val:.5381243228912354},{features:[[5,11,10,6,-1],[5,14,10,3,2]],threshold:-.0007725320174358785,right_val:.3541550040245056,left_val:.5530232191085815},{features:[[3,10,3,4,-1],[4,10,1,4,3]],threshold:.0002948172914329916,right_val:.5667243003845215,left_val:.4132699072360992},{features:[[13,9,2,2,-1],[13,9,1,2,2]],threshold:-.006233456078916788,right_val:.5198668837547302,left_val:.0987872332334518},{features:[[5,3,6,4,-1],[7,3,2,4,3]],threshold:-.0262747295200825,right_val:.5028107166290283,left_val:.0911274924874306},{features:[[9,7,3,3,-1],[10,7,1,3,3]],threshold:.005321226082742214,right_val:.6222720742225647,left_val:.4726648926734924},{features:[[2,12,2,3,-1],[2,13,2,1,3]],threshold:-.004112905822694302,right_val:.5137804746627808,left_val:.2157457023859024},{features:[[9,8,3,12,-1],[9,12,3,4,3]],threshold:.0032457809429615736,right_val:.3721776902675629,left_val:.5410770773887634},{features:[[3,14,4,6,-1],[3,14,2,3,2],[5,17,2,3,2]],threshold:-.0163597092032433,right_val:.4685291945934296,left_val:.7787874937057495},{features:[[16,15,2,2,-1],[16,16,2,1,2]],threshold:.00032166109303943813,right_val:.4240373969078064,left_val:.5478987097740173},{features:[[2,15,2,2,-1],[2,16,2,1,2]],threshold:.000644524407107383,right_val:.3501324951648712,left_val:.5330560803413391},{features:[[8,12,4,3,-1],[8,13,4,1,3]],threshold:-.0078909732401371,right_val:.4726569056510925,left_val:.6923521161079407},{features:[[0,7,20,1,-1],[10,7,10,1,2]],threshold:.048336211591959,right_val:.0757492035627365,left_val:.50559002161026},{features:[[7,6,8,3,-1],[7,6,4,3,2]],threshold:-.000751781277358532,right_val:.5538573861122131,left_val:.3783741891384125},{features:[[5,7,8,2,-1],[9,7,4,2,2]],threshold:-.002495391061529517,right_val:.5359612107276917,left_val:.3081651031970978},{features:[[9,7,3,5,-1],[10,7,1,5,3]],threshold:-.0022385010961443186,right_val:.4649342894554138,left_val:.663395881652832},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:-.0017988430336117744,right_val:.4347187876701355,left_val:.6596844792366028},{features:[[11,1,3,5,-1],[12,1,1,5,3]],threshold:.008786091580986977,right_val:.2315579950809479,left_val:.523183286190033},{features:[[6,2,3,6,-1],[7,2,1,6,3]],threshold:.003671538084745407,right_val:.2977376878261566,left_val:.520425021648407},{features:[[14,14,6,5,-1],[14,14,3,5,2]],threshold:-.0353364497423172,right_val:.4861505031585693,left_val:.7238878011703491},{features:[[9,8,2,2,-1],[9,9,2,1,2]],threshold:-.0006918924045749009,right_val:.5229824781417847,left_val:.3105022013187408},{features:[[10,7,1,3,-1],[10,8,1,1,3]],threshold:-.003394610946998,right_val:.5210173726081848,left_val:.3138968050479889},{features:[[6,6,2,2,-1],[6,6,1,1,2],[7,7,1,1,2]],threshold:.0009856928372755647,right_val:.6585097908973694,left_val:.4536580145359039},{features:[[2,11,18,4,-1],[11,11,9,2,2],[2,13,9,2,2]],threshold:-.0501631014049053,right_val:.5198916792869568,left_val:.1804454028606415},{features:[[6,6,2,2,-1],[6,6,1,1,2],[7,7,1,1,2]],threshold:-.0022367259953171015,right_val:.4651359021663666,left_val:.7255702018737793},{features:[[0,15,20,2,-1],[0,16,20,1,2]],threshold:.0007432628772221506,right_val:.5898545980453491,left_val:.4412921071052551},{features:[[4,14,2,3,-1],[4,15,2,1,3]],threshold:-.0009348518215119839,right_val:.5366017818450928,left_val:.3500052988529205},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.0174979399889708,right_val:.8315284848213196,left_val:.4912194907665253},{features:[[8,7,2,3,-1],[8,8,2,1,3]],threshold:-.0015200000489130616,right_val:.537056028842926,left_val:.3570275902748108},{features:[[9,10,2,3,-1],[9,11,2,1,3]],threshold:.0007800394087098539,right_val:.5967335104942322,left_val:.4353772103786469}],threshold:39.1072883605957},{simpleClassifiers:[{features:[[5,4,10,4,-1],[5,6,10,2,2]],threshold:-.00999455526471138,right_val:.3054533004760742,left_val:.6162583231925964},{features:[[9,7,6,4,-1],[12,7,3,2,2],[9,9,3,2,2]],threshold:-.001108522992581129,right_val:.3155578076839447,left_val:.5818294882774353},{features:[[4,7,3,6,-1],[4,9,3,2,3]],threshold:.001036438043229282,right_val:.5692911744117737,left_val:.2552052140235901},{features:[[11,15,4,4,-1],[13,15,2,2,2],[11,17,2,2,2]],threshold:.000682113110087812,right_val:.5934931039810181,left_val:.3685089945793152},{features:[[7,8,4,2,-1],[7,9,4,1,2]],threshold:-.0006805734010413289,right_val:.5474792122840881,left_val:.2332392036914825},{features:[[13,1,4,3,-1],[13,1,2,3,2]],threshold:.0002606878988444805,right_val:.5667545795440674,left_val:.325745701789856},{features:[[5,15,4,4,-1],[5,15,2,2,2],[7,17,2,2,2]],threshold:.0005160737200640142,right_val:.5845472812652588,left_val:.3744716942310333},{features:[[9,5,4,7,-1],[9,5,2,7,2]],threshold:.0008500752155669034,right_val:.5522807240486145,left_val:.3420371115207672},{features:[[5,6,8,3,-1],[9,6,4,3,2]],threshold:-.0018607829697430134,right_val:.5375424027442932,left_val:.2804419994354248},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.001503397012129426,right_val:.5498952269554138,left_val:.2579050958156586},{features:[[7,15,5,3,-1],[7,16,5,1,3]],threshold:.0023478909861296415,right_val:.6313710808753967,left_val:.4175156056880951},{features:[[11,10,4,3,-1],[11,10,2,3,2]],threshold:-.00028880240279249847,right_val:.4052666127681732,left_val:.5865169763565063},{features:[[6,9,8,10,-1],[6,14,8,5,2]],threshold:.008940547704696655,right_val:.231865406036377,left_val:.5211141109466553},{features:[[10,11,6,2,-1],[10,11,3,2,2]],threshold:-.0193277392536402,right_val:.5241525769233704,left_val:.2753432989120483},{features:[[4,11,6,2,-1],[7,11,3,2,2]],threshold:-.0002020206011366099,right_val:.3677195906639099,left_val:.5722978711128235},{features:[[11,3,8,1,-1],[11,3,4,1,2]],threshold:.002117906929925084,right_val:.5542430877685547,left_val:.4466108083724976},{features:[[6,3,3,2,-1],[7,3,1,2,3]],threshold:-.0017743760254234076,right_val:.5300959944725037,left_val:.2813253104686737},{features:[[14,5,6,5,-1],[14,5,3,5,2]],threshold:.004223445896059275,right_val:.5795428156852722,left_val:.439970999956131},{features:[[7,5,2,12,-1],[7,11,2,6,2]],threshold:-.0143752200528979,right_val:.5292059183120728,left_val:.2981117963790894},{features:[[8,11,4,3,-1],[8,12,4,1,3]],threshold:-.0153491804376245,right_val:.4748171865940094,left_val:.7705215215682983},{features:[[4,1,2,3,-1],[5,1,1,3,2]],threshold:15152279956964776e-21,right_val:.5576897263526917,left_val:.3718844056129456},{features:[[18,3,2,6,-1],[18,5,2,2,3]],threshold:-.009129391983151436,right_val:.5286766886711121,left_val:.3615196049213409},{features:[[0,3,2,6,-1],[0,5,2,2,3]],threshold:.0022512159775942564,right_val:.3486298024654388,left_val:.5364704728126526},{features:[[9,12,2,3,-1],[9,13,2,1,3]],threshold:-.0049696918576955795,right_val:.4676836133003235,left_val:.6927651762962341},{features:[[7,13,4,3,-1],[7,14,4,1,3]],threshold:-.0128290103748441,right_val:.4660735130310059,left_val:.7712153792381287},{features:[[18,0,2,6,-1],[18,2,2,2,3]],threshold:-.009366006590425968,right_val:.5351287722587585,left_val:.3374983966350555},{features:[[0,0,2,6,-1],[0,2,2,2,3]],threshold:.0032452319283038378,right_val:.3289610147476196,left_val:.5325189828872681},{features:[[8,14,6,3,-1],[8,15,6,1,3]],threshold:-.0117235602810979,right_val:.4754300117492676,left_val:.6837652921676636},{features:[[7,4,2,4,-1],[8,4,1,4,2]],threshold:2925794069597032e-20,right_val:.5360502004623413,left_val:.357208788394928},{features:[[8,5,4,6,-1],[8,7,4,2,3]],threshold:-22244219508138485e-21,right_val:.3552064001560211,left_val:.5541427135467529},{features:[[6,4,2,2,-1],[7,4,1,2,2]],threshold:.005088150966912508,right_val:.1256462037563324,left_val:.5070844292640686},{features:[[3,14,14,4,-1],[10,14,7,2,2],[3,16,7,2,2]],threshold:.0274296794086695,right_val:.1625818014144898,left_val:.5269560217857361},{features:[[6,15,6,2,-1],[6,15,3,1,2],[9,16,3,1,2]],threshold:-.00641428679227829,right_val:.4584197103977203,left_val:.7145588994026184},{features:[[14,15,6,2,-1],[14,16,6,1,2]],threshold:.003347995923832059,right_val:.3494696915149689,left_val:.5398612022399902},{features:[[2,12,12,8,-1],[2,16,12,4,2]],threshold:-.0826354920864105,right_val:.5160226225852966,left_val:.2439192980527878},{features:[[7,7,7,2,-1],[7,8,7,1,2]],threshold:.0010261740535497665,right_val:.5767908096313477,left_val:.3886891901493073},{features:[[0,2,18,2,-1],[0,3,18,1,2]],threshold:-.0016307090409100056,right_val:.5347700715065002,left_val:.3389458060264587},{features:[[9,6,2,5,-1],[9,6,1,5,2]],threshold:.0024546680506318808,right_val:.638724684715271,left_val:.4601413905620575},{features:[[7,5,3,8,-1],[8,5,1,8,3]],threshold:-.0009947651997208595,right_val:.4120396077632904,left_val:.5769879221916199},{features:[[9,6,3,4,-1],[10,6,1,4,3]],threshold:.0154091902077198,right_val:.7089822292327881,left_val:.4878709018230438},{features:[[4,13,3,2,-1],[4,14,3,1,2]],threshold:.001178440055809915,right_val:.2895244956016541,left_val:.5263553261756897},{features:[[9,4,6,3,-1],[11,4,2,3,3]],threshold:-.0277019198983908,right_val:.5219606757164001,left_val:.149882897734642},{features:[[5,4,6,3,-1],[7,4,2,3,3]],threshold:-.0295053999871016,right_val:.4999816119670868,left_val:.024893319234252},{features:[[14,11,5,2,-1],[14,12,5,1,2]],threshold:.0004515943001024425,right_val:.4029662907123566,left_val:.5464622974395752},{features:[[1,2,6,9,-1],[3,2,2,9,3]],threshold:.007177263963967562,right_val:.5866296887397766,left_val:.4271056950092316},{features:[[14,6,6,13,-1],[14,6,3,13,2]],threshold:-.0741820484399796,right_val:.4919027984142304,left_val:.6874179244041443},{features:[[3,6,14,8,-1],[3,6,7,4,2],[10,10,7,4,2]],threshold:-.0172541607171297,right_val:.534873902797699,left_val:.3370676040649414},{features:[[16,0,4,11,-1],[16,0,2,11,2]],threshold:.0148515598848462,right_val:.6129904985427856,left_val:.4626792967319489},{features:[[3,4,12,12,-1],[3,4,6,6,2],[9,10,6,6,2]],threshold:.0100020002573729,right_val:.3423453867435455,left_val:.5346122980117798},{features:[[11,4,5,3,-1],[11,5,5,1,3]],threshold:.0020138120744377375,right_val:.5824304223060608,left_val:.4643830060958862},{features:[[4,11,4,2,-1],[4,12,4,1,2]],threshold:.0015135470312088728,right_val:.2856149971485138,left_val:.5196396112442017},{features:[[10,7,2,2,-1],[10,7,1,2,2]],threshold:.003138143103569746,right_val:.5958529710769653,left_val:.4838162958621979},{features:[[8,7,2,2,-1],[9,7,1,2,2]],threshold:-.005145044066011906,right_val:.4741412103176117,left_val:.8920302987098694},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:-.004473670851439238,right_val:.5337278842926025,left_val:.2033942937850952},{features:[[5,6,3,3,-1],[5,7,3,1,3]],threshold:.001962847076356411,right_val:.6725863218307495,left_val:.457163393497467},{features:[[10,0,3,3,-1],[11,0,1,3,3]],threshold:.005426045041531324,right_val:.2845670878887177,left_val:.5271108150482178},{features:[[5,6,6,2,-1],[5,6,3,1,2],[8,7,3,1,2]],threshold:.0004961146041750908,right_val:.5718597769737244,left_val:.4138312935829163},{features:[[12,16,4,3,-1],[12,17,4,1,3]],threshold:.009372878819704056,right_val:.2804847061634064,left_val:.5225151181221008},{features:[[3,12,3,2,-1],[3,13,3,1,2]],threshold:.0006050089723430574,right_val:.3314523994922638,left_val:.523676872253418},{features:[[9,12,3,2,-1],[9,13,3,1,2]],threshold:.0005679255118593574,right_val:.6276971101760864,left_val:.4531059861183167},{features:[[1,11,16,4,-1],[1,11,8,2,2],[9,13,8,2,2]],threshold:.0246443394571543,right_val:.2017143964767456,left_val:.5130851864814758},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:-.0102904504165053,right_val:.4876641035079956,left_val:.7786595225334167},{features:[[4,4,5,3,-1],[4,5,5,1,3]],threshold:.002062941901385784,right_val:.5881264209747314,left_val:.4288598895072937},{features:[[12,16,4,3,-1],[12,17,4,1,3]],threshold:-.005051948130130768,right_val:.5286008715629578,left_val:.3523977994918823},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:-.0057692620903253555,right_val:.4588094055652618,left_val:.6841086149215698},{features:[[9,0,2,2,-1],[9,1,2,1,2]],threshold:-.0004578994121402502,right_val:.5485978126525879,left_val:.356552004814148},{features:[[8,9,4,2,-1],[8,10,4,1,2]],threshold:-.0007591883768327534,right_val:.5254197120666504,left_val:.336879312992096},{features:[[8,8,4,3,-1],[8,9,4,1,3]],threshold:-.001773725962266326,right_val:.5454015135765076,left_val:.3422161042690277},{features:[[0,13,6,3,-1],[2,13,2,3,3]],threshold:-.008561046794056892,right_val:.4485856890678406,left_val:.6533612012863159},{features:[[16,14,3,2,-1],[16,15,3,1,2]],threshold:.0017277270089834929,right_val:.3925352990627289,left_val:.5307580232620239},{features:[[1,18,18,2,-1],[7,18,6,2,3]],threshold:-.0281996093690395,right_val:.4588584005832672,left_val:.685745894908905},{features:[[16,14,3,2,-1],[16,15,3,1,2]],threshold:-.001778110978193581,right_val:.5369856953620911,left_val:.4037851095199585},{features:[[1,14,3,2,-1],[1,15,3,1,2]],threshold:.00033177141449414194,right_val:.3705750107765198,left_val:.539979875087738},{features:[[7,14,6,3,-1],[7,15,6,1,3]],threshold:.0026385399978607893,right_val:.6452730894088745,left_val:.4665437042713165},{features:[[5,14,8,3,-1],[5,15,8,1,3]],threshold:-.0021183069329708815,right_val:.4064677059650421,left_val:.5914781093597412},{features:[[10,6,4,14,-1],[10,6,2,14,2]],threshold:-.0147732896730304,right_val:.5294762849807739,left_val:.3642038106918335},{features:[[6,6,4,14,-1],[8,6,2,14,2]],threshold:-.0168154407292604,right_val:.5144972801208496,left_val:.2664231956005096},{features:[[13,5,2,3,-1],[13,6,2,1,3]],threshold:-.006337014026939869,right_val:.4852097928524017,left_val:.6779531240463257},{features:[[7,16,6,1,-1],[9,16,2,1,3]],threshold:-44560048991115764e-21,right_val:.4153054058551788,left_val:.5613964796066284},{features:[[9,12,3,3,-1],[9,13,3,1,3]],threshold:-.0010240620467811823,right_val:.4566304087638855,left_val:.5964478254318237},{features:[[7,0,3,3,-1],[8,0,1,3,3]],threshold:-.00231616897508502,right_val:.5188159942626953,left_val:.2976115047931671},{features:[[4,0,16,18,-1],[4,9,16,9,2]],threshold:.5321757197380066,right_val:.220263198018074,left_val:.5187839269638062},{features:[[1,1,16,14,-1],[1,8,16,7,2]],threshold:-.1664305031299591,right_val:.5060343146324158,left_val:.1866022944450378},{features:[[3,9,15,4,-1],[8,9,5,4,3]],threshold:.112535297870636,right_val:.1185022965073586,left_val:.5212125182151794},{features:[[6,12,7,3,-1],[6,13,7,1,3]],threshold:.009304686449468136,right_val:.6826149225234985,left_val:.4589937031269074},{features:[[14,15,2,3,-1],[14,16,2,1,3]],threshold:-.004625509958714247,right_val:.5225008726119995,left_val:.3079940974712372},{features:[[2,3,16,14,-1],[2,3,8,7,2],[10,10,8,7,2]],threshold:-.1111646965146065,right_val:.5080801844596863,left_val:.2101044058799744},{features:[[16,2,4,18,-1],[18,2,2,9,2],[16,11,2,9,2]],threshold:-.0108884396031499,right_val:.4790464043617249,left_val:.5765355229377747},{features:[[4,15,2,3,-1],[4,16,2,1,3]],threshold:.005856430158019066,right_val:.1563598960638046,left_val:.5065100193023682},{features:[[16,2,4,18,-1],[18,2,2,9,2],[16,11,2,9,2]],threshold:.0548543892800808,right_val:.7230510711669922,left_val:.49669149518013},{features:[[1,1,8,3,-1],[1,2,8,1,3]],threshold:-.0111973397433758,right_val:.5098798274993896,left_val:.2194979041814804},{features:[[8,11,4,3,-1],[8,12,4,1,3]],threshold:.004406907130032778,right_val:.6770902872085571,left_val:.4778401851654053},{features:[[5,11,5,9,-1],[5,14,5,3,3]],threshold:-.0636652931571007,right_val:.5081024169921875,left_val:.1936362981796265},{features:[[16,0,4,11,-1],[16,0,2,11,2]],threshold:-.009808149188756943,right_val:.4810341000556946,left_val:.599906325340271},{features:[[7,0,6,1,-1],[9,0,2,1,3]],threshold:-.0021717099007219076,right_val:.5235472917556763,left_val:.3338333964347839},{features:[[16,3,3,7,-1],[17,3,1,7,3]],threshold:-.0133155202493072,right_val:.4919213056564331,left_val:.6617069840431213},{features:[[1,3,3,7,-1],[2,3,1,7,3]],threshold:.002544207964092493,right_val:.6082184910774231,left_val:.4488744139671326},{features:[[7,8,6,12,-1],[7,12,6,4,3]],threshold:.0120378397405148,right_val:.3292432129383087,left_val:.540939211845398},{features:[[0,0,4,11,-1],[2,0,2,11,2]],threshold:-.0207010507583618,right_val:.4594995975494385,left_val:.6819120049476624},{features:[[14,0,6,20,-1],[14,0,3,20,2]],threshold:.0276082791388035,right_val:.5767282843589783,left_val:.4630792140960693},{features:[[0,3,1,2,-1],[0,4,1,1,2]],threshold:.0012370620388537645,right_val:.2635016143321991,left_val:.5165379047393799},{features:[[5,5,10,8,-1],[10,5,5,4,2],[5,9,5,4,2]],threshold:-.037669338285923,right_val:.5278980135917664,left_val:.2536393105983734},{features:[[4,7,12,4,-1],[4,7,6,2,2],[10,9,6,2,2]],threshold:-.0018057259730994701,right_val:.5517500042915344,left_val:.3985156118869782}],threshold:50.61048126220703},{simpleClassifiers:[{features:[[2,1,6,4,-1],[5,1,3,4,2]],threshold:.004429902881383896,right_val:.633522629737854,left_val:.2891018092632294},{features:[[9,7,6,4,-1],[12,7,3,2,2],[9,9,3,2,2]],threshold:-.0023813319858163595,right_val:.3477487862110138,left_val:.621178925037384},{features:[[5,6,2,6,-1],[5,9,2,3,2]],threshold:.0022915711160749197,right_val:.5582118034362793,left_val:.2254412025213242},{features:[[9,16,6,4,-1],[12,16,3,2,2],[9,18,3,2,2]],threshold:.0009945794008672237,right_val:.5930070877075195,left_val:.3711710870265961},{features:[[9,4,2,12,-1],[9,10,2,6,2]],threshold:.0007716466789133847,right_val:.334799587726593,left_val:.565172016620636},{features:[[7,1,6,18,-1],[9,1,2,18,3]],threshold:-.001138641033321619,right_val:.5508630871772766,left_val:.3069126009941101},{features:[[4,12,12,2,-1],[8,12,4,2,3]],threshold:-.0001640303962631151,right_val:.3699047863483429,left_val:.576282799243927},{features:[[8,8,6,2,-1],[8,9,6,1,2]],threshold:29793529392918572e-21,right_val:.5437911152839661,left_val:.2644244134426117},{features:[[8,0,3,6,-1],[9,0,1,6,3]],threshold:.008577490225434303,right_val:.1795724928379059,left_val:.5051138997077942},{features:[[11,18,3,2,-1],[11,19,3,1,2]],threshold:-.0002603268949314952,right_val:.4446826875209808,left_val:.5826969146728516},{features:[[1,1,17,4,-1],[1,3,17,2,2]],threshold:-.006140463054180145,right_val:.5346971750259399,left_val:.3113852143287659},{features:[[11,8,4,12,-1],[11,8,2,12,2]],threshold:-.0230869501829147,right_val:.533119797706604,left_val:.32779461145401},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.0142436502501369,right_val:.4588063061237335,left_val:.7381709814071655},{features:[[12,3,2,17,-1],[12,3,1,17,2]],threshold:.0194871295243502,right_val:.2274471968412399,left_val:.5256630778312683},{features:[[4,7,6,1,-1],[6,7,2,1,3]],threshold:-.0009668110869824886,right_val:.3815006911754608,left_val:.5511230826377869},{features:[[18,3,2,3,-1],[18,4,2,1,3]],threshold:.003147470997646451,right_val:.2543726861476898,left_val:.5425636768341064},{features:[[8,4,3,4,-1],[8,6,3,2,2]],threshold:-.00018026070029009134,right_val:.3406304121017456,left_val:.5380191802978516},{features:[[4,5,12,10,-1],[4,10,12,5,2]],threshold:-.006026626098901033,right_val:.54205721616745,left_val:.3035801947116852},{features:[[5,18,4,2,-1],[7,18,2,2,2]],threshold:.00044462960795499384,right_val:.5660110116004944,left_val:.3990997076034546},{features:[[17,2,3,6,-1],[17,4,3,2,3]],threshold:.002260976005345583,right_val:.3940688073635101,left_val:.5562806725502014},{features:[[7,7,6,6,-1],[9,7,2,6,3]],threshold:.0511330589652061,right_val:.7118561863899231,left_val:.4609653949737549},{features:[[17,2,3,6,-1],[17,4,3,2,3]],threshold:-.0177863091230392,right_val:.5322144031524658,left_val:.2316166013479233},{features:[[8,0,3,4,-1],[9,0,1,4,3]],threshold:-.004967962857335806,right_val:.5122029185295105,left_val:.233077198266983},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.002066768938675523,right_val:.6455488204956055,left_val:.4657444059848785},{features:[[0,12,6,3,-1],[0,13,6,1,3]],threshold:.007441376801580191,right_val:.236163392663002,left_val:.5154392123222351},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.003627727972343564,right_val:.4476661086082459,left_val:.6219773292541504},{features:[[3,12,2,3,-1],[3,13,2,1,3]],threshold:-.005353075917810202,right_val:.5102208256721497,left_val:.1837355047464371},{features:[[5,6,12,7,-1],[9,6,4,7,3]],threshold:.1453091949224472,right_val:.1535930931568146,left_val:.5145987272262573},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.0024394490756094456,right_val:.3624661862850189,left_val:.5343660116195679},{features:[[14,6,1,3,-1],[14,7,1,1,3]],threshold:-.003128339070826769,right_val:.4845592081546783,left_val:.6215007901191711},{features:[[2,0,3,14,-1],[3,0,1,14,3]],threshold:.0017940260004252195,right_val:.5824198126792908,left_val:.4299261868000031},{features:[[12,14,5,6,-1],[12,16,5,2,3]],threshold:.0362538211047649,right_val:.1439467966556549,left_val:.5260334014892578},{features:[[4,14,5,6,-1],[4,16,5,2,3]],threshold:-.005174672231078148,right_val:.5287045240402222,left_val:.350653886795044},{features:[[11,10,2,2,-1],[12,10,1,1,2],[11,11,1,1,2]],threshold:.0006538329762406647,right_val:.6122040152549744,left_val:.4809640944004059},{features:[[5,0,3,14,-1],[6,0,1,14,3]],threshold:-.0264802295714617,right_val:.5045586228370667,left_val:.1139362007379532},{features:[[10,15,2,3,-1],[10,16,2,1,3]],threshold:-.0030440660193562508,right_val:.4794734120368958,left_val:.6352095007896423},{features:[[0,2,2,3,-1],[0,3,2,1,3]],threshold:.0036993520334362984,right_val:.2498510926961899,left_val:.5131118297576904},{features:[[5,11,12,6,-1],[5,14,12,3,2]],threshold:-.0003676293126773089,right_val:.3709532022476196,left_val:.54213947057724},{features:[[6,11,3,9,-1],[6,14,3,3,3]],threshold:-.041382260620594,right_val:.5081691741943359,left_val:.1894959956407547},{features:[[11,10,2,2,-1],[12,10,1,1,2],[11,11,1,1,2]],threshold:-.0010532729793339968,right_val:.4783608913421631,left_val:.645436704158783},{features:[[5,6,1,3,-1],[5,7,1,1,3]],threshold:-.0021648600231856108,right_val:.449982613325119,left_val:.6215031147003174},{features:[[4,9,13,3,-1],[4,10,13,1,3]],threshold:-.0005674774874933064,right_val:.5419334769248962,left_val:.3712610900402069},{features:[[1,7,15,6,-1],[6,7,5,6,3]],threshold:.173758402466774,right_val:.1215742006897926,left_val:.5023643970489502},{features:[[4,5,12,6,-1],[8,5,4,6,3]],threshold:-.0029049699660390615,right_val:.5381883978843689,left_val:.3240267932415009},{features:[[8,10,4,3,-1],[8,11,4,1,3]],threshold:.0012299539521336555,right_val:.5703486204147339,left_val:.4165507853031158},{features:[[15,14,1,3,-1],[15,15,1,1,3]],threshold:-.0005432923790067434,right_val:.554754912853241,left_val:.3854042887687683},{features:[[1,11,5,3,-1],[1,12,5,1,3]],threshold:-.008329725824296474,right_val:.5097082853317261,left_val:.2204494029283524},{features:[[7,1,7,12,-1],[7,7,7,6,2]],threshold:-.00010417630255687982,right_val:.4303036034107208,left_val:.560706615447998},{features:[[0,1,6,10,-1],[0,1,3,5,2],[3,6,3,5,2]],threshold:.0312047004699707,right_val:.6982004046440125,left_val:.4621657133102417},{features:[[16,1,4,3,-1],[16,2,4,1,3]],threshold:.007894350215792656,right_val:.226906806230545,left_val:.5269594192504883},{features:[[5,5,2,3,-1],[5,6,2,1,3]],threshold:-.004364531021565199,right_val:.4537956118583679,left_val:.6359223127365112},{features:[[12,2,3,5,-1],[13,2,1,5,3]],threshold:.007679305970668793,right_val:.274048388004303,left_val:.5274767875671387},{features:[[0,3,4,6,-1],[0,5,4,2,3]],threshold:-.0254311393946409,right_val:.5071732997894287,left_val:.2038519978523254},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0008200060110539198,right_val:.6119868159294128,left_val:.4587455093860626},{features:[[8,18,3,1,-1],[9,18,1,1,3]],threshold:.002928460016846657,right_val:.2028204947710037,left_val:.5071274042129517},{features:[[11,10,2,2,-1],[12,10,1,1,2],[11,11,1,1,2]],threshold:4525647091213614e-20,right_val:.5430821776390076,left_val:.4812104105949402},{features:[[7,10,2,2,-1],[7,10,1,1,2],[8,11,1,1,2]],threshold:.0013158309739083052,right_val:.6779323220252991,left_val:.4625813961029053},{features:[[11,11,4,4,-1],[11,13,4,2,2]],threshold:.0015870389761403203,right_val:.3431465029716492,left_val:.5386291742324829},{features:[[8,12,3,8,-1],[9,12,1,8,3]],threshold:-.0215396601706743,right_val:.5003222823143005,left_val:.025942500680685},{features:[[13,0,6,3,-1],[13,1,6,1,3]],threshold:.014334480278194,right_val:.1590632945299149,left_val:.5202844738960266},{features:[[8,8,3,4,-1],[9,8,1,4,3]],threshold:-.008388138376176357,right_val:.4648044109344482,left_val:.728248119354248},{features:[[5,7,10,10,-1],[10,7,5,5,2],[5,12,5,5,2]],threshold:.00919068418443203,right_val:.3923191130161285,left_val:.556235671043396},{features:[[3,18,8,2,-1],[3,18,4,1,2],[7,19,4,1,2]],threshold:-.005845305975526571,right_val:.4629127979278565,left_val:.6803392767906189},{features:[[10,2,6,8,-1],[12,2,2,8,3]],threshold:-.0547077991068363,right_val:.5206125974655151,left_val:.2561671137809753},{features:[[4,2,6,8,-1],[6,2,2,8,3]],threshold:.009114277549088001,right_val:.3053877055644989,left_val:.518962025642395},{features:[[11,0,3,7,-1],[12,0,1,7,3]],threshold:-.0155750000849366,right_val:.5169094800949097,left_val:.1295074969530106},{features:[[7,11,2,1,-1],[8,11,1,1,2]],threshold:-.0001205060034408234,right_val:.4230825006961823,left_val:.5735098123550415},{features:[[15,14,1,3,-1],[15,15,1,1,3]],threshold:.0012273970060050488,right_val:.4079791903495789,left_val:.5289878249168396},{features:[[7,15,2,2,-1],[7,15,1,1,2],[8,16,1,1,2]],threshold:-.0012186600361019373,right_val:.4574409127235413,left_val:.6575639843940735},{features:[[15,14,1,3,-1],[15,15,1,1,3]],threshold:-.0033256649039685726,right_val:.5195019841194153,left_val:.3628047108650208},{features:[[6,0,3,7,-1],[7,0,1,7,3]],threshold:-.0132883097976446,right_val:.504348874092102,left_val:.1284265965223312},{features:[[18,1,2,7,-1],[18,1,1,7,2]],threshold:-.0033839771058410406,right_val:.475750595331192,left_val:.6292240023612976},{features:[[2,0,8,20,-1],[2,10,8,10,2]],threshold:-.2195422053337097,right_val:.5065013766288757,left_val:.148773193359375},{features:[[3,0,15,6,-1],[3,2,15,2,3]],threshold:.004911170806735754,right_val:.5665838718414307,left_val:.425610214471817},{features:[[4,3,12,2,-1],[4,4,12,1,2]],threshold:-.00018744950648397207,right_val:.5586857199668884,left_val:.4004144072532654},{features:[[16,0,4,5,-1],[16,0,2,5,2]],threshold:-.00521786417812109,right_val:.4812706112861633,left_val:.6009116172790527},{features:[[7,0,3,4,-1],[8,0,1,4,3]],threshold:-.0011111519997939467,right_val:.5287089943885803,left_val:.3514933884143829},{features:[[16,0,4,5,-1],[16,0,2,5,2]],threshold:.004403640050441027,right_val:.5924085974693298,left_val:.4642275869846344},{features:[[1,7,6,13,-1],[3,7,2,13,3]],threshold:.1229949966073036,right_val:.0691524818539619,left_val:.5025529265403748},{features:[[16,0,4,5,-1],[16,0,2,5,2]],threshold:-.0123135102912784,right_val:.4934012889862061,left_val:.5884591937065125},{features:[[0,0,4,5,-1],[2,0,2,5,2]],threshold:.004147103987634182,right_val:.589347779750824,left_val:.4372239112854004},{features:[[14,12,3,6,-1],[14,14,3,2,3]],threshold:-.003550264984369278,right_val:.5396270155906677,left_val:.4327551126480103},{features:[[3,12,3,6,-1],[3,14,3,2,3]],threshold:-.0192242693156004,right_val:.5068330764770508,left_val:.1913134008646011},{features:[[16,1,4,3,-1],[16,2,4,1,3]],threshold:.0014395059552043676,right_val:.424353301525116,left_val:.5308178067207336},{features:[[8,7,2,10,-1],[8,7,1,5,2],[9,12,1,5,2]],threshold:-.00677519990131259,right_val:.4540086090564728,left_val:.6365395784378052},{features:[[11,11,4,4,-1],[11,13,4,2,2]],threshold:.007011963054537773,right_val:.302619993686676,left_val:.5189834237098694},{features:[[0,1,4,3,-1],[0,2,4,1,3]],threshold:.005401465110480785,right_val:.2557682991027832,left_val:.5105062127113342},{features:[[13,4,1,3,-1],[13,5,1,1,3]],threshold:.0009027498890645802,right_val:.5861827731132507,left_val:.4696914851665497},{features:[[7,15,3,5,-1],[8,15,1,5,3]],threshold:.0114744501188397,right_val:.152717798948288,left_val:.5053645968437195},{features:[[9,7,3,5,-1],[10,7,1,5,3]],threshold:-.006702343001961708,right_val:.4890604019165039,left_val:.6508980989456177},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:-.0020462959073483944,right_val:.4514600038528442,left_val:.6241816878318787},{features:[[10,6,4,14,-1],[10,6,2,14,2]],threshold:-.009995156899094582,right_val:.5400953888893127,left_val:.3432781100273132},{features:[[0,5,5,6,-1],[0,7,5,2,3]],threshold:-.0357007086277008,right_val:.5074077844619751,left_val:.1878059059381485},{features:[[9,5,6,4,-1],[9,5,3,4,2]],threshold:.0004558456130325794,right_val:.5402569770812988,left_val:.3805277049541473},{features:[[0,0,18,10,-1],[6,0,6,10,3]],threshold:-.0542606003582478,right_val:.4595097005367279,left_val:.6843714714050293},{features:[[10,6,4,14,-1],[10,6,2,14,2]],threshold:.0060600461438298225,right_val:.450052797794342,left_val:.5502905249595642},{features:[[6,6,4,14,-1],[8,6,2,14,2]],threshold:-.006479183211922646,right_val:.5310757160186768,left_val:.3368858098983765},{features:[[13,4,1,3,-1],[13,5,1,1,3]],threshold:-.0014939469983801246,right_val:.4756175875663757,left_val:.6487640142440796},{features:[[5,1,2,3,-1],[6,1,1,3,2]],threshold:14610530342906713e-21,right_val:.5451064109802246,left_val:.403457909822464},{features:[[18,1,2,18,-1],[19,1,1,9,2],[18,10,1,9,2]],threshold:-.00723219383507967,right_val:.4824739992618561,left_val:.6386873722076416},{features:[[2,1,4,3,-1],[2,2,4,1,3]],threshold:-.004064581822603941,right_val:.5157335996627808,left_val:.2986421883106232},{features:[[18,1,2,18,-1],[19,1,1,9,2],[18,10,1,9,2]],threshold:.0304630808532238,right_val:.7159956097602844,left_val:.5022199749946594},{features:[[1,14,4,6,-1],[1,14,2,3,2],[3,17,2,3,2]],threshold:-.008054491132497787,right_val:.4619275033473969,left_val:.6492452025413513},{features:[[10,11,7,6,-1],[10,13,7,2,3]],threshold:.0395051389932632,right_val:.2450613975524902,left_val:.5150570869445801},{features:[[0,10,6,10,-1],[0,10,3,5,2],[3,15,3,5,2]],threshold:.008453020825982094,right_val:.6394037008285522,left_val:.4573669135570526},{features:[[11,0,3,4,-1],[12,0,1,4,3]],threshold:-.0011688120430335402,right_val:.548366129398346,left_val:.3865512013435364},{features:[[5,10,5,6,-1],[5,13,5,3,2]],threshold:.002807067008689046,right_val:.2701480090618134,left_val:.5128579139709473},{features:[[14,6,1,8,-1],[14,10,1,4,2]],threshold:.000473652093205601,right_val:.5387461185455322,left_val:.4051581919193268},{features:[[1,7,18,6,-1],[1,7,9,3,2],[10,10,9,3,2]],threshold:.0117410803213716,right_val:.3719413876533508,left_val:.5295950174331665},{features:[[9,7,2,2,-1],[9,7,1,2,2]],threshold:.0031833238899707794,right_val:.6895126104354858,left_val:.4789406955242157},{features:[[5,9,4,5,-1],[7,9,2,5,2]],threshold:.0007024150108918548,right_val:.3918080925941467,left_val:.5384489297866821}],threshold:54.62007141113281},{simpleClassifiers:[{features:[[7,6,6,3,-1],[9,6,2,3,3]],threshold:.0170599296689034,right_val:.7142534852027893,left_val:.3948527872562408},{features:[[1,0,18,4,-1],[7,0,6,4,3]],threshold:.0218408405780792,right_val:.6090016961097717,left_val:.3370316028594971},{features:[[7,15,2,4,-1],[7,17,2,2,2]],threshold:.00024520049919374287,right_val:.5987902283668518,left_val:.3500576019287109},{features:[[1,0,19,9,-1],[1,3,19,3,3]],threshold:.008327260613441467,right_val:.5697240829467773,left_val:.3267528116703033},{features:[[3,7,3,6,-1],[3,9,3,2,3]],threshold:.0005714829894714057,right_val:.5531656742095947,left_val:.3044599890708923},{features:[[13,7,4,4,-1],[15,7,2,2,2],[13,9,2,2,2]],threshold:.0006737398798577487,right_val:.567263126373291,left_val:.3650012016296387},{features:[[3,7,4,4,-1],[3,7,2,2,2],[5,9,2,2,2]],threshold:3468159047770314e-20,right_val:.5388727188110352,left_val:.3313541114330292},{features:[[9,6,10,8,-1],[9,10,10,4,2]],threshold:-.005856339819729328,right_val:.5498778820037842,left_val:.2697942852973938},{features:[[3,8,14,12,-1],[3,14,14,6,2]],threshold:.00851022731512785,right_val:.2762879133224487,left_val:.5269358158111572},{features:[[6,5,10,12,-1],[11,5,5,6,2],[6,11,5,6,2]],threshold:-.0698172077536583,right_val:.5259246826171875,left_val:.2909603118896484},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.0008611367084085941,right_val:.4073697924613953,left_val:.5892577171325684},{features:[[9,5,6,5,-1],[9,5,3,5,2]],threshold:.0009714924963191152,right_val:.5415862202644348,left_val:.3523564040660858},{features:[[9,4,2,4,-1],[9,6,2,2,2]],threshold:-1472749045206001e-20,right_val:.3503156006336212,left_val:.5423017740249634},{features:[[9,5,6,5,-1],[9,5,3,5,2]],threshold:.0484202913939953,right_val:.3411195874214172,left_val:.51939457654953},{features:[[5,5,6,5,-1],[8,5,3,5,2]],threshold:.0013257140526548028,right_val:.5335376262664795,left_val:.315776914358139},{features:[[11,2,6,1,-1],[13,2,2,1,3]],threshold:1492214960308047e-20,right_val:.5536553859710693,left_val:.4451299905776978},{features:[[3,2,6,1,-1],[5,2,2,1,3]],threshold:-.002717339899390936,right_val:.5248088836669922,left_val:.3031741976737976},{features:[[13,5,2,3,-1],[13,6,2,1,3]],threshold:.0029219500720500946,right_val:.6606041789054871,left_val:.4781453013420105},{features:[[0,10,1,4,-1],[0,12,1,2,2]],threshold:-.0019804988987743855,right_val:.5287625193595886,left_val:.3186308145523071},{features:[[13,5,2,3,-1],[13,6,2,1,3]],threshold:-.004001210909336805,right_val:.4749928116798401,left_val:.6413596868515015},{features:[[8,18,3,2,-1],[9,18,1,2,3]],threshold:-.004349199123680592,right_val:.5098996758460999,left_val:.1507498025894165},{features:[[6,15,9,2,-1],[6,16,9,1,2]],threshold:.0013490889687091112,right_val:.5881167054176331,left_val:.4316158890724182},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.0185970701277256,right_val:.9089794158935547,left_val:.4735553860664368},{features:[[18,4,2,4,-1],[18,6,2,2,2]],threshold:-.001856237999163568,right_val:.5577837228775024,left_val:.3553189039230347},{features:[[5,5,2,3,-1],[5,6,2,1,3]],threshold:.002294043079018593,right_val:.6580877900123596,left_val:.4500094950199127},{features:[[15,16,3,2,-1],[15,17,3,1,2]],threshold:.00029982850537635386,right_val:.3975878953933716,left_val:.5629242062568665},{features:[[0,0,3,9,-1],[0,3,3,3,3]],threshold:.0035455459728837013,right_val:.3605485856533051,left_val:.5381547212600708},{features:[[9,7,3,3,-1],[9,8,3,1,3]],threshold:.009610472247004509,right_val:.1796745955944061,left_val:.5255997180938721},{features:[[8,7,3,3,-1],[8,8,3,1,3]],threshold:-.0062783220782876015,right_val:.5114030241966248,left_val:.227285698056221},{features:[[9,5,2,6,-1],[9,5,1,6,2]],threshold:.0034598479978740215,right_val:.6608219146728516,left_val:.4626308083534241},{features:[[8,6,3,4,-1],[9,6,1,4,3]],threshold:-.0013112019514665008,right_val:.4436857998371124,left_val:.6317539811134338},{features:[[7,6,8,12,-1],[11,6,4,6,2],[7,12,4,6,2]],threshold:.002687617903575301,right_val:.4054022133350372,left_val:.5421109795570374},{features:[[5,6,8,12,-1],[5,6,4,6,2],[9,12,4,6,2]],threshold:.003911816980689764,right_val:.3273454904556274,left_val:.5358477830886841},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:-.014206450432539,right_val:.4975781142711639,left_val:.7793576717376709},{features:[[2,16,3,2,-1],[2,17,3,1,2]],threshold:.0007170552853494883,right_val:.3560903966426849,left_val:.5297319889068604},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:.001663501956500113,right_val:.5816481709480286,left_val:.467809408903122},{features:[[2,12,6,6,-1],[2,14,6,2,3]],threshold:.0033686188980937004,right_val:.3446420133113861,left_val:.5276734232902527},{features:[[7,13,6,3,-1],[7,14,6,1,3]],threshold:.0127995302900672,right_val:.7472159266471863,left_val:.4834679961204529},{features:[[6,14,6,3,-1],[6,15,6,1,3]],threshold:.0033901201095432043,right_val:.6401721239089966,left_val:.4511859118938446},{features:[[14,15,5,3,-1],[14,16,5,1,3]],threshold:.004707077983766794,right_val:.355522096157074,left_val:.533565878868103},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.0014819339849054813,right_val:.5772724151611328,left_val:.4250707030296326},{features:[[14,15,5,3,-1],[14,16,5,1,3]],threshold:-.0069995759986341,right_val:.5292900204658508,left_val:.3003320097923279},{features:[[5,3,6,2,-1],[7,3,2,2,3]],threshold:.0159390103071928,right_val:.1675581932067871,left_val:.5067319273948669},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:.007637734990566969,right_val:.7085601091384888,left_val:.4795069992542267},{features:[[1,15,5,3,-1],[1,16,5,1,3]],threshold:.006733404006808996,right_val:.2162470072507858,left_val:.5133113265037537},{features:[[8,13,4,6,-1],[10,13,2,3,2],[8,16,2,3,2]],threshold:-.012858809903264,right_val:.525137186050415,left_val:.1938841938972473},{features:[[7,8,3,3,-1],[8,8,1,3,3]],threshold:-.0006227080011740327,right_val:.419786810874939,left_val:.5686538219451904},{features:[[12,0,5,4,-1],[12,2,5,2,2]],threshold:-.0005265168147161603,right_val:.5429695844650269,left_val:.4224168956279755},{features:[[0,2,20,2,-1],[0,2,10,1,2],[10,3,10,1,2]],threshold:.0110750999301672,right_val:.2514517903327942,left_val:.5113775134086609},{features:[[1,0,18,4,-1],[7,0,6,4,3]],threshold:-.0367282517254353,right_val:.4849618971347809,left_val:.7194662094116211},{features:[[4,3,6,1,-1],[6,3,2,1,3]],threshold:-.00028207109426148236,right_val:.539444625377655,left_val:.3840261995792389},{features:[[4,18,13,2,-1],[4,19,13,1,2]],threshold:-.0027489690110087395,right_val:.4569182097911835,left_val:.593708872795105},{features:[[2,10,3,6,-1],[2,12,3,2,3]],threshold:.0100475195795298,right_val:.2802298069000244,left_val:.5138576030731201},{features:[[14,12,6,8,-1],[17,12,3,4,2],[14,16,3,4,2]],threshold:-.008149784058332443,right_val:.4636121094226837,left_val:.6090037226676941},{features:[[4,13,10,6,-1],[4,13,5,3,2],[9,16,5,3,2]],threshold:-.006883388850837946,right_val:.5254660248756409,left_val:.3458611071109772},{features:[[14,12,1,2,-1],[14,13,1,1,2]],threshold:-140393603942357e-19,right_val:.4082083106040955,left_val:.5693104267120361},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.001549841952510178,right_val:.5806517004966736,left_val:.4350537061691284},{features:[[14,12,2,2,-1],[14,13,2,1,2]],threshold:-.006784149911254644,right_val:.5182775259017944,left_val:.1468873023986816},{features:[[4,12,2,2,-1],[4,13,2,1,2]],threshold:.00021705629478674382,right_val:.345617413520813,left_val:.5293524265289307},{features:[[8,12,9,2,-1],[8,13,9,1,2]],threshold:.00031198898795992136,right_val:.5942413806915283,left_val:.4652450978755951},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.005450753029435873,right_val:.7024846076965332,left_val:.4653508961200714},{features:[[11,10,3,6,-1],[11,13,3,3,2]],threshold:-.00025818689027801156,right_val:.3768967092037201,left_val:.5497295260429382},{features:[[5,6,9,12,-1],[5,12,9,6,2]],threshold:-.0174425393342972,right_val:.5457497835159302,left_val:.3919087946414948},{features:[[11,10,3,6,-1],[11,13,3,3,2]],threshold:-.045343529433012,right_val:.5154908895492554,left_val:.1631357073783875},{features:[[6,10,3,6,-1],[6,13,3,3,2]],threshold:.0019190689781680703,right_val:.2791895866394043,left_val:.514589786529541},{features:[[5,4,11,3,-1],[5,5,11,1,3]],threshold:-.006017786916345358,right_val:.4756332933902741,left_val:.6517636179924011},{features:[[7,1,5,10,-1],[7,6,5,5,2]],threshold:-.004072073847055435,right_val:.4092685878276825,left_val:.5514652729034424},{features:[[2,8,18,2,-1],[2,9,18,1,2]],threshold:.00039855059003457427,right_val:.5285550951957703,left_val:.316524088382721},{features:[[7,17,5,3,-1],[7,18,5,1,3]],threshold:-.0065418570302426815,right_val:.4652808904647827,left_val:.6853377819061279},{features:[[5,9,12,1,-1],[9,9,4,1,3]],threshold:.003484508953988552,right_val:.4502759873867035,left_val:.5484588146209717},{features:[[0,14,6,6,-1],[0,14,3,3,2],[3,17,3,3,2]],threshold:-.0136967804282904,right_val:.4572555124759674,left_val:.6395779848098755},{features:[[5,9,12,1,-1],[9,9,4,1,3]],threshold:-.017347140237689,right_val:.5181614756584167,left_val:.2751072943210602},{features:[[3,9,12,1,-1],[7,9,4,1,3]],threshold:-.004088542889803648,right_val:.5194984078407288,left_val:.3325636088848114},{features:[[14,10,6,7,-1],[14,10,3,7,2]],threshold:-.009468790143728256,right_val:.485181987285614,left_val:.5942280888557434},{features:[[1,0,16,2,-1],[1,1,16,1,2]],threshold:.0017084840219467878,right_val:.5519806146621704,left_val:.4167110919952393},{features:[[10,9,10,9,-1],[10,12,10,3,3]],threshold:.009480909444391727,right_val:.4208514988422394,left_val:.5433894991874695},{features:[[0,1,10,2,-1],[5,1,5,2,2]],threshold:-.004738965071737766,right_val:.4560655057430267,left_val:.6407189965248108},{features:[[17,3,2,3,-1],[17,4,2,1,3]],threshold:.006576105020940304,right_val:.2258227020502091,left_val:.5214555263519287},{features:[[1,3,2,3,-1],[1,4,2,1,3]],threshold:-.0021690549328923225,right_val:.5156704783439636,left_val:.3151527941226959},{features:[[9,7,3,6,-1],[10,7,1,6,3]],threshold:.014660170301795,right_val:.668994128704071,left_val:.4870837032794952},{features:[[6,5,4,3,-1],[8,5,2,3,2]],threshold:.00017231999663636088,right_val:.5251078009605408,left_val:.3569748997688294},{features:[[7,5,6,6,-1],[9,5,2,6,3]],threshold:-.0218037609010935,right_val:.496632993221283,left_val:.8825920820236206},{features:[[3,4,12,12,-1],[3,4,6,6,2],[9,10,6,6,2]],threshold:-.0947361066937447,right_val:.5061113834381104,left_val:.1446162015199661},{features:[[9,2,6,15,-1],[11,2,2,15,3]],threshold:.0055825551971793175,right_val:.4238066077232361,left_val:.5396478772163391},{features:[[2,2,6,17,-1],[4,2,2,17,3]],threshold:.001951709040440619,right_val:.5497786998748779,left_val:.4170410931110382},{features:[[14,10,6,7,-1],[14,10,3,7,2]],threshold:.0121499001979828,right_val:.5664274096488953,left_val:.4698367118835449},{features:[[0,10,6,7,-1],[3,10,3,7,2]],threshold:-.007516962010413408,right_val:.4463135898113251,left_val:.6267772912979126},{features:[[9,2,6,15,-1],[11,2,2,15,3]],threshold:-.0716679096221924,right_val:.5221003293991089,left_val:.3097011148929596},{features:[[5,2,6,15,-1],[7,2,2,15,3]],threshold:-.0882924199104309,right_val:.5006365180015564,left_val:.0811238884925842},{features:[[17,9,3,6,-1],[17,11,3,2,3]],threshold:.0310630798339844,right_val:.1282255947589874,left_val:.5155503749847412},{features:[[6,7,6,6,-1],[8,7,2,6,3]],threshold:.0466218404471874,right_val:.736396074295044,left_val:.4699777960777283},{features:[[1,10,18,6,-1],[10,10,9,3,2],[1,13,9,3,2]],threshold:-.0121894897893071,right_val:.5518996715545654,left_val:.3920530080795288},{features:[[0,9,10,9,-1],[0,12,10,3,3]],threshold:.0130161102861166,right_val:.3685136139392853,left_val:.5260658264160156},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:-.003495289944112301,right_val:.4716280996799469,left_val:.6339294910430908},{features:[[5,12,3,4,-1],[5,14,3,2,2]],threshold:-4401503974804655e-20,right_val:.3776184916496277,left_val:.5333027243614197},{features:[[3,3,16,12,-1],[3,9,16,6,2]],threshold:-.1096649020910263,right_val:.5198346972465515,left_val:.1765342056751251},{features:[[1,1,12,12,-1],[1,1,6,6,2],[7,7,6,6,2]],threshold:-.0009027955820783973,right_val:.3838908076286316,left_val:.5324159860610962},{features:[[10,4,2,4,-1],[11,4,1,2,2],[10,6,1,2,2]],threshold:.0007112664170563221,right_val:.5755224227905273,left_val:.4647929966449738},{features:[[0,9,10,2,-1],[0,9,5,1,2],[5,10,5,1,2]],threshold:-.003125027986243367,right_val:.5166770815849304,left_val:.323670893907547},{features:[[9,11,3,3,-1],[9,12,3,1,3]],threshold:.002414467977359891,right_val:.6459717750549316,left_val:.4787439107894898},{features:[[3,12,9,2,-1],[3,13,9,1,2]],threshold:.00044391240226104856,right_val:.6010255813598633,left_val:.4409308135509491},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.0002261118934256956,right_val:.5493255853652954,left_val:.4038113951683044}],threshold:50.16973114013672},{simpleClassifiers:[{features:[[3,4,13,6,-1],[3,6,13,2,3]],threshold:-.0469012893736362,right_val:.3743801116943359,left_val:.660017192363739},{features:[[9,7,6,4,-1],[12,7,3,2,2],[9,9,3,2,2]],threshold:-.001456834957934916,right_val:.3437797129154205,left_val:.578399121761322},{features:[[1,0,6,8,-1],[4,0,3,8,2]],threshold:.005559836979955435,right_val:.5908216238021851,left_val:.3622266948223114},{features:[[9,5,2,12,-1],[9,11,2,6,2]],threshold:.0007317048730328679,right_val:.2873558104038239,left_val:.550041913986206},{features:[[4,4,3,10,-1],[4,9,3,5,2]],threshold:.001331800944171846,right_val:.5431019067764282,left_val:.267316997051239},{features:[[6,17,8,3,-1],[6,18,8,1,3]],threshold:.00024347059661522508,right_val:.574138879776001,left_val:.3855027854442596},{features:[[0,5,10,6,-1],[0,7,10,2,3]],threshold:-.0030512469820678234,right_val:.3462845087051392,left_val:.5503209829330444},{features:[[13,2,3,2,-1],[13,3,3,1,2]],threshold:-.0006865719915367663,right_val:.5429509282112122,left_val:.3291221857070923},{features:[[7,5,4,5,-1],[9,5,2,5,2]],threshold:.001466820016503334,right_val:.5351811051368713,left_val:.3588382005691528},{features:[[12,14,3,6,-1],[12,16,3,2,3]],threshold:.0003202187072020024,right_val:.5700234174728394,left_val:.429684191942215},{features:[[1,11,8,2,-1],[1,12,8,1,2]],threshold:.0007412218837998807,right_val:.3366870880126953,left_val:.5282164812088013},{features:[[7,13,6,3,-1],[7,14,6,1,3]],threshold:.0038330298848450184,right_val:.6257336139678955,left_val:.4559567868709564},{features:[[0,5,3,6,-1],[0,7,3,2,3]],threshold:-.0154564399272203,right_val:.512945294380188,left_val:.2350116968154907},{features:[[13,2,3,2,-1],[13,3,3,1,2]],threshold:.002679677912965417,right_val:.4155062139034271,left_val:.5329415202140808},{features:[[4,14,4,6,-1],[4,14,2,3,2],[6,17,2,3,2]],threshold:.0028296569362282753,right_val:.5804538130760193,left_val:.4273087978363037},{features:[[13,2,3,2,-1],[13,3,3,1,2]],threshold:-.0039444249123334885,right_val:.5202686190605164,left_val:.2912611961364746},{features:[[8,2,4,12,-1],[8,6,4,4,3]],threshold:.002717955969274044,right_val:.3585677146911621,left_val:.5307688117027283},{features:[[14,0,6,8,-1],[17,0,3,4,2],[14,4,3,4,2]],threshold:.005907762795686722,right_val:.5941585898399353,left_val:.470377504825592},{features:[[7,17,3,2,-1],[8,17,1,2,3]],threshold:-.004224034957587719,right_val:.5088796019554138,left_val:.2141567021608353},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0040725888684391975,right_val:.6841061115264893,left_val:.4766413867473602},{features:[[6,0,8,12,-1],[6,0,4,6,2],[10,6,4,6,2]],threshold:.0101495301350951,right_val:.3748497068881989,left_val:.5360798835754395},{features:[[14,0,2,10,-1],[15,0,1,5,2],[14,5,1,5,2]],threshold:-.00018864999583456665,right_val:.3853805065155029,left_val:.5720130205154419},{features:[[5,3,8,6,-1],[5,3,4,3,2],[9,6,4,3,2]],threshold:-.0048864358104765415,right_val:.5340958833694458,left_val:.3693122863769531},{features:[[14,0,6,10,-1],[17,0,3,5,2],[14,5,3,5,2]],threshold:.0261584799736738,right_val:.6059989929199219,left_val:.4962374866008759},{features:[[9,14,1,2,-1],[9,15,1,1,2]],threshold:.0004856075975112617,right_val:.6012468934059143,left_val:.4438945949077606},{features:[[15,10,4,3,-1],[15,11,4,1,3]],threshold:.0112687097862363,right_val:.1840388029813767,left_val:.5244250297546387},{features:[[8,14,2,3,-1],[8,15,2,1,3]],threshold:-.0028114619199186563,right_val:.4409897029399872,left_val:.6060283780097961},{features:[[3,13,14,4,-1],[10,13,7,2,2],[3,15,7,2,2]],threshold:-.005611272994428873,right_val:.5589237213134766,left_val:.3891170918941498},{features:[[1,10,4,3,-1],[1,11,4,1,3]],threshold:.008568009361624718,right_val:.2062619030475617,left_val:.5069345831871033},{features:[[9,11,6,1,-1],[11,11,2,1,3]],threshold:-.00038172779022715986,right_val:.41926109790802,left_val:.5882201790809631},{features:[[5,11,6,1,-1],[7,11,2,1,3]],threshold:-.00017680290329735726,right_val:.400336891412735,left_val:.5533605813980103},{features:[[3,5,16,15,-1],[3,10,16,5,3]],threshold:.006511253770440817,right_val:.5444191098213196,left_val:.3310146927833557},{features:[[6,12,4,2,-1],[8,12,2,2,2]],threshold:-6594868318643421e-20,right_val:.3944905996322632,left_val:.5433831810951233},{features:[[4,4,12,10,-1],[10,4,6,5,2],[4,9,6,5,2]],threshold:.006993905175477266,right_val:.4192714095115662,left_val:.5600358247756958},{features:[[8,6,3,4,-1],[9,6,1,4,3]],threshold:-.0046744439750909805,right_val:.4604960978031158,left_val:.6685466766357422},{features:[[8,12,4,8,-1],[10,12,2,4,2],[8,16,2,4,2]],threshold:.0115898502990603,right_val:.2926830053329468,left_val:.5357121229171753},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.013007840141654,right_val:.730746328830719,left_val:.4679817855358124},{features:[[12,2,3,2,-1],[13,2,1,2,3]],threshold:-.0011008579749614,right_val:.5415065288543701,left_val:.3937501013278961},{features:[[8,15,3,2,-1],[8,16,3,1,2]],threshold:.0006047264905646443,right_val:.5604041218757629,left_val:.4242376089096069},{features:[[6,0,9,14,-1],[9,0,3,14,3]],threshold:-.0144948400557041,right_val:.5293182730674744,left_val:.3631210029125214},{features:[[9,6,2,3,-1],[10,6,1,3,2]],threshold:-.005305694881826639,right_val:.4621821045875549,left_val:.686045229434967},{features:[[10,8,2,3,-1],[10,9,2,1,3]],threshold:-.00081829127157107,right_val:.542043924331665,left_val:.3944096863269806},{features:[[0,9,4,6,-1],[0,11,4,2,3]],threshold:-.0190775208175182,right_val:.5037891864776611,left_val:.1962621957063675},{features:[[6,0,8,2,-1],[6,1,8,1,2]],threshold:.00035549470339901745,right_val:.5613973140716553,left_val:.4086259007453919},{features:[[6,14,7,3,-1],[6,15,7,1,3]],threshold:.0019679730758070946,right_val:.5926123261451721,left_val:.448912113904953},{features:[[8,10,8,9,-1],[8,13,8,3,3]],threshold:.006918914150446653,right_val:.3728385865688324,left_val:.5335925817489624},{features:[[5,2,3,2,-1],[6,2,1,2,3]],threshold:.002987277926877141,right_val:.2975643873214722,left_val:.5111321210861206},{features:[[14,1,6,8,-1],[17,1,3,4,2],[14,5,3,4,2]],threshold:-.006226461846381426,right_val:.4824537932872772,left_val:.5541489720344543},{features:[[0,1,6,8,-1],[0,1,3,4,2],[3,5,3,4,2]],threshold:.013353300280869,right_val:.6414797902107239,left_val:.4586423933506012},{features:[[1,2,18,6,-1],[10,2,9,3,2],[1,5,9,3,2]],threshold:.0335052385926247,right_val:.3429994881153107,left_val:.5392425060272217},{features:[[9,3,2,1,-1],[10,3,1,1,2]],threshold:-.0025294460356235504,right_val:.5013315081596375,left_val:.1703713983297348},{features:[[13,2,4,6,-1],[15,2,2,3,2],[13,5,2,3,2]],threshold:-.001280162949115038,right_val:.4697405099868774,left_val:.5305461883544922},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.007068738806992769,right_val:.643650472164154,left_val:.4615545868873596},{features:[[13,5,1,3,-1],[13,6,1,1,3]],threshold:.0009688049904070795,right_val:.6043894290924072,left_val:.4833599030971527},{features:[[2,16,5,3,-1],[2,17,5,1,3]],threshold:.003964765928685665,right_val:.323181688785553,left_val:.5187637209892273},{features:[[13,2,4,6,-1],[15,2,2,3,2],[13,5,2,3,2]],threshold:-.022057730704546,right_val:.520098090171814,left_val:.4079256951808929},{features:[[3,2,4,6,-1],[3,2,2,3,2],[5,5,2,3,2]],threshold:-.0006690631271339953,right_val:.3815600872039795,left_val:.533160924911499},{features:[[13,5,1,2,-1],[13,6,1,1,2]],threshold:-.0006700932863168418,right_val:.4688901901245117,left_val:.5655422210693359},{features:[[5,5,2,2,-1],[5,6,2,1,2]],threshold:.000742845528293401,right_val:.6287400126457214,left_val:.4534381031990051},{features:[[13,9,2,2,-1],[13,9,1,2,2]],threshold:.0022227810695767403,right_val:.3303655982017517,left_val:.5350633263587952},{features:[[5,9,2,2,-1],[6,9,1,2,2]],threshold:-.005413052160292864,right_val:.500543475151062,left_val:.1113687008619309},{features:[[13,17,3,2,-1],[13,18,3,1,2]],threshold:-14520040167553816e-21,right_val:.4325133860111237,left_val:.5628737807273865},{features:[[6,16,4,4,-1],[6,16,2,2,2],[8,18,2,2,2]],threshold:.00023369169502984732,right_val:.5447791218757629,left_val:.4165835082530975},{features:[[9,16,2,3,-1],[9,17,2,1,3]],threshold:.004289454780519009,right_val:.6778649091720581,left_val:.4860391020774841},{features:[[0,13,9,6,-1],[0,15,9,2,3]],threshold:.0059103150852024555,right_val:.3612113893032074,left_val:.52623051404953},{features:[[9,14,2,6,-1],[9,17,2,3,2]],threshold:.0129005396738648,right_val:.32502880692482,left_val:.5319377183914185},{features:[[9,15,2,3,-1],[9,16,2,1,3]],threshold:.004698297940194607,right_val:.6665925979614258,left_val:.461824506521225},{features:[[1,10,18,6,-1],[1,12,18,2,3]],threshold:.0104398597031832,right_val:.3883604109287262,left_val:.550567090511322},{features:[[8,11,4,2,-1],[8,12,4,1,2]],threshold:.0030443191062659025,right_val:.7301844954490662,left_val:.4697853028774262},{features:[[7,9,6,2,-1],[7,10,6,1,2]],threshold:-.0006159375188872218,right_val:.5464984178543091,left_val:.3830839097499847},{features:[[8,8,2,3,-1],[8,9,2,1,3]],threshold:-.0034247159492224455,right_val:.5089530944824219,left_val:.256630003452301},{features:[[17,5,3,4,-1],[18,5,1,4,3]],threshold:-.009353856556117535,right_val:.49407958984375,left_val:.6469966173171997},{features:[[1,19,18,1,-1],[7,19,6,1,3]],threshold:.0523389987647533,right_val:.787877082824707,left_val:.4745982885360718},{features:[[9,0,3,2,-1],[10,0,1,2,3]],threshold:.0035765620414167643,right_val:.2748498022556305,left_val:.5306664705276489},{features:[[1,8,1,6,-1],[1,10,1,2,3]],threshold:.0007155531784519553,right_val:.4041908979415894,left_val:.541312575340271},{features:[[12,17,8,3,-1],[12,17,4,3,2]],threshold:-.0105166798457503,right_val:.4815283119678497,left_val:.6158512234687805},{features:[[0,5,3,4,-1],[1,5,1,4,3]],threshold:.007734792772680521,right_val:.7028980851173401,left_val:.4695805907249451},{features:[[9,7,2,3,-1],[9,8,2,1,3]],threshold:-.004322677850723267,right_val:.5304684042930603,left_val:.2849566042423248},{features:[[7,11,2,2,-1],[7,11,1,1,2],[8,12,1,1,2]],threshold:-.0025534399319440126,right_val:.4688892066478729,left_val:.7056984901428223},{features:[[11,3,2,5,-1],[11,3,1,5,2]],threshold:.00010268510231981054,right_val:.5573464035987854,left_val:.3902932107448578},{features:[[7,3,2,5,-1],[8,3,1,5,2]],threshold:7139518857002258e-21,right_val:.526398777961731,left_val:.368423193693161},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:-.0016711989883333445,right_val:.5387271046638489,left_val:.3849175870418549},{features:[[5,6,2,3,-1],[5,7,2,1,3]],threshold:.004926044959574938,right_val:.7447251081466675,left_val:.4729771912097931},{features:[[4,19,15,1,-1],[9,19,5,1,3]],threshold:.0043908702209591866,right_val:.5591921806335449,left_val:.4809181094169617},{features:[[1,19,15,1,-1],[6,19,5,1,3]],threshold:-.0177936293184757,right_val:.4676927030086517,left_val:.6903678178787231},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:.002046966925263405,right_val:.3308162093162537,left_val:.5370690226554871},{features:[[5,0,4,15,-1],[7,0,2,15,2]],threshold:.0298914890736341,right_val:.3309059143066406,left_val:.5139865279197693},{features:[[9,6,2,5,-1],[9,6,1,5,2]],threshold:.0015494900289922953,right_val:.6078342795372009,left_val:.466023713350296},{features:[[9,5,2,7,-1],[10,5,1,7,2]],threshold:.001495696953497827,right_val:.5863919854164124,left_val:.4404835999011993},{features:[[16,11,3,3,-1],[16,12,3,1,3]],threshold:.0009588592802174389,right_val:.4208523035049439,left_val:.5435971021652222},{features:[[1,11,3,3,-1],[1,12,3,1,3]],threshold:.0004964370164088905,right_val:.4000622034072876,left_val:.5370578169822693},{features:[[6,6,8,3,-1],[6,7,8,1,3]],threshold:-.00272808107547462,right_val:.4259642958641052,left_val:.5659412741661072},{features:[[0,15,6,2,-1],[0,16,6,1,2]],threshold:.0023026480339467525,right_val:.3350869119167328,left_val:.5161657929420471},{features:[[1,0,18,6,-1],[7,0,6,6,3]],threshold:.2515163123607636,right_val:.714730978012085,left_val:.4869661927223206},{features:[[6,0,3,4,-1],[7,0,1,4,3]],threshold:-.004632802214473486,right_val:.5083789825439453,left_val:.27274489402771},{features:[[14,10,4,10,-1],[16,10,2,5,2],[14,15,2,5,2]],threshold:-.0404344908893108,right_val:.5021767020225525,left_val:.6851438879966736},{features:[[3,2,3,2,-1],[4,2,1,2,3]],threshold:14972220014897175e-21,right_val:.5522555112838745,left_val:.428446501493454},{features:[[11,2,2,2,-1],[11,3,2,1,2]],threshold:-.00024050309730228037,right_val:.5390074849128723,left_val:.4226118922233582},{features:[[2,10,4,10,-1],[2,10,2,5,2],[4,15,2,5,2]],threshold:.0236578397452831,right_val:.7504366040229797,left_val:.4744631946086884},{features:[[0,13,20,6,-1],[10,13,10,3,2],[0,16,10,3,2]],threshold:-.00814491044729948,right_val:.5538362860679626,left_val:.424505889415741},{features:[[0,5,2,15,-1],[1,5,1,15,2]],threshold:-.003699213033542037,right_val:.4529713094234467,left_val:.5952357053756714},{features:[[1,7,18,4,-1],[10,7,9,2,2],[1,9,9,2,2]],threshold:-.0067718601785600185,right_val:.5473399758338928,left_val:.4137794077396393},{features:[[0,0,2,17,-1],[1,0,1,17,2]],threshold:.004266953095793724,right_val:.5797994136810303,left_val:.4484114944934845},{features:[[2,6,16,6,-1],[10,6,8,3,2],[2,9,8,3,2]],threshold:.0017791989957913756,right_val:.4432444870471954,left_val:.5624858736991882},{features:[[8,14,1,3,-1],[8,15,1,1,3]],threshold:.0016774770338088274,right_val:.63642418384552,left_val:.4637751877307892},{features:[[8,15,4,2,-1],[8,16,4,1,2]],threshold:.0011732629500329494,right_val:.5914415717124939,left_val:.4544503092765808},{features:[[5,2,8,2,-1],[5,2,4,1,2],[9,3,4,1,2]],threshold:.000869981711730361,right_val:.3885917961597443,left_val:.5334752798080444},{features:[[6,11,8,6,-1],[6,14,8,3,2]],threshold:.0007637834060005844,right_val:.374494194984436,left_val:.5398585200309753},{features:[[9,13,2,2,-1],[9,14,2,1,2]],threshold:.00015684569370932877,right_val:.5614616274833679,left_val:.4317873120307922},{features:[[18,4,2,6,-1],[18,6,2,2,3]],threshold:-.0215113703161478,right_val:.5185542702674866,left_val:.1785925030708313},{features:[[9,12,2,2,-1],[9,13,2,1,2]],threshold:.00013081369979772717,right_val:.5682849884033203,left_val:.4342499077320099},{features:[[18,4,2,6,-1],[18,6,2,2,3]],threshold:.021992040798068,right_val:.2379394024610519,left_val:.5161716938018799},{features:[[9,13,1,3,-1],[9,14,1,1,3]],threshold:-.0008013650076463819,right_val:.4466426968574524,left_val:.598676323890686},{features:[[18,4,2,6,-1],[18,6,2,2,3]],threshold:-.008273609913885593,right_val:.5251057147979736,left_val:.410821795463562},{features:[[0,4,2,6,-1],[0,6,2,2,3]],threshold:.0036831789184361696,right_val:.339751809835434,left_val:.5173814296722412},{features:[[9,12,3,3,-1],[9,13,3,1,3]],threshold:-.007952568121254444,right_val:.4845924079418182,left_val:.6888983249664307},{features:[[3,13,2,3,-1],[3,14,2,1,3]],threshold:.0015382299898192286,right_val:.3454113900661469,left_val:.5178567171096802},{features:[[13,13,4,3,-1],[13,14,4,1,3]],threshold:-.0140435304492712,right_val:.518866777420044,left_val:.1678421050310135},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.0014315890148282051,right_val:.5655773878097534,left_val:.436825692653656},{features:[[5,2,10,6,-1],[5,4,10,2,3]],threshold:-.0340142287313938,right_val:.4959217011928558,left_val:.7802296280860901},{features:[[3,13,4,3,-1],[3,14,4,1,3]],threshold:-.0120272999629378,right_val:.503223180770874,left_val:.1585101038217545},{features:[[3,7,15,5,-1],[8,7,5,5,3]],threshold:.1331661939620972,right_val:.2755128145217896,left_val:.5163304805755615},{features:[[3,7,12,2,-1],[7,7,4,2,3]],threshold:-.0015221949433907866,right_val:.5214552283287048,left_val:.372831791639328},{features:[[10,3,3,9,-1],[11,3,1,9,3]],threshold:-.000939292716793716,right_val:.4511165022850037,left_val:.5838379263877869},{features:[[8,6,4,6,-1],[10,6,2,6,2]],threshold:.0277197398245335,right_val:.7331544756889343,left_val:.4728286862373352},{features:[[9,7,4,3,-1],[9,8,4,1,3]],threshold:.003103015013039112,right_val:.4101563096046448,left_val:.5302202105522156},{features:[[0,9,4,9,-1],[2,9,2,9,2]],threshold:.0778612196445465,right_val:.127296194434166,left_val:.4998334050178528},{features:[[9,13,3,5,-1],[10,13,1,5,3]],threshold:-.0158549398183823,right_val:.5165656208992004,left_val:.0508333593606949},{features:[[7,7,6,3,-1],[9,7,2,3,3]],threshold:-.00497253006324172,right_val:.4684231877326965,left_val:.6798133850097656},{features:[[9,7,3,5,-1],[10,7,1,5,3]],threshold:-.0009767650626599789,right_val:.4788931906223297,left_val:.6010771989822388},{features:[[5,7,8,2,-1],[9,7,4,2,2]],threshold:-.0024647710379213095,right_val:.5220503807067871,left_val:.3393397927284241},{features:[[5,9,12,2,-1],[9,9,4,2,3]],threshold:-.006793770007789135,right_val:.5239663124084473,left_val:.4365136921405792},{features:[[5,6,10,3,-1],[10,6,5,3,2]],threshold:.0326080210506916,right_val:.2425214946269989,left_val:.505272388458252},{features:[[10,12,3,1,-1],[11,12,1,1,3]],threshold:-.0005851442110724747,right_val:.4758574068546295,left_val:.5733973979949951},{features:[[0,1,11,15,-1],[0,6,11,5,3]],threshold:-.0296326000243425,right_val:.5263597965240479,left_val:.3892289102077484}],threshold:66.66912078857422},{simpleClassifiers:[{features:[[1,0,18,6,-1],[7,0,6,6,3]],threshold:.0465508513152599,right_val:.6240522861480713,left_val:.3276950120925903},{features:[[7,7,6,1,-1],[9,7,2,1,3]],threshold:.007953712716698647,right_val:.6942939162254333,left_val:.4256485104560852},{features:[[5,16,6,4,-1],[5,16,3,2,2],[8,18,3,2,2]],threshold:.0006822156137786806,right_val:.59007328748703,left_val:.3711487054824829},{features:[[6,5,9,8,-1],[6,9,9,4,2]],threshold:-.00019348249770700932,right_val:.53005450963974,left_val:.2041133940219879},{features:[[5,10,2,6,-1],[5,13,2,3,2]],threshold:-.0002671050897333771,right_val:.3103179037570953,left_val:.5416126251220703},{features:[[7,6,8,10,-1],[11,6,4,5,2],[7,11,4,5,2]],threshold:.0027818060480058193,right_val:.3467069864273071,left_val:.5277832746505737},{features:[[5,6,8,10,-1],[5,6,4,5,2],[9,11,4,5,2]],threshold:-.000467790785478428,right_val:.3294492065906525,left_val:.5308231115341187},{features:[[9,5,2,2,-1],[9,6,2,1,2]],threshold:-30335160772665404e-21,right_val:.3852097094058991,left_val:.577387273311615},{features:[[5,12,8,2,-1],[5,13,8,1,2]],threshold:.0007803800981491804,right_val:.6150057911872864,left_val:.4317438900470734},{features:[[10,2,8,2,-1],[10,3,8,1,2]],threshold:-.004255385138094425,right_val:.5324292778968811,left_val:.2933903932571411},{features:[[4,0,2,10,-1],[4,0,1,5,2],[5,5,1,5,2]],threshold:-.0002473561035003513,right_val:.3843030035495758,left_val:.5468844771385193},{features:[[9,10,2,2,-1],[9,11,2,1,2]],threshold:-.00014724259381182492,right_val:.5755587220191956,left_val:.4281542897224426},{features:[[2,8,15,3,-1],[2,9,15,1,3]],threshold:.0011864770203828812,right_val:.5471466183662415,left_val:.374730110168457},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.0023936580400913954,right_val:.6111528873443604,left_val:.4537783861160278},{features:[[7,2,3,2,-1],[8,2,1,2,3]],threshold:-.0015390539774671197,right_val:.518953800201416,left_val:.2971341907978058},{features:[[7,13,6,3,-1],[7,14,6,1,3]],threshold:-.007196879014372826,right_val:.4726476967334747,left_val:.6699066758155823},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.0004149978922214359,right_val:.5260317921638489,left_val:.3384954035282135},{features:[[17,2,3,6,-1],[17,4,3,2,3]],threshold:.004435983020812273,right_val:.3920140862464905,left_val:.539912223815918},{features:[[1,5,3,4,-1],[2,5,1,4,3]],threshold:.0026606200262904167,right_val:.6119617819786072,left_val:.4482578039169312},{features:[[14,8,4,6,-1],[14,10,4,2,3]],threshold:-.0015287200221791863,right_val:.5340266227722168,left_val:.3711237907409668},{features:[[1,4,3,8,-1],[2,4,1,8,3]],threshold:-.0047397250309586525,right_val:.4455145001411438,left_val:.603108823299408},{features:[[8,13,4,6,-1],[8,16,4,3,2]],threshold:-.0148291299119592,right_val:.5341861844062805,left_val:.2838754057884216},{features:[[3,14,2,2,-1],[3,15,2,1,2]],threshold:.0009227555710822344,right_val:.3361653983592987,left_val:.5209547281265259},{features:[[14,8,4,6,-1],[14,10,4,2,3]],threshold:.0835298076272011,right_val:.0811644494533539,left_val:.5119969844818115},{features:[[2,8,4,6,-1],[2,10,4,2,3]],threshold:-.0007563314866274595,right_val:.5189831256866455,left_val:.331712007522583},{features:[[10,14,1,6,-1],[10,17,1,3,2]],threshold:.009840385988354683,right_val:.233495905995369,left_val:.524759829044342},{features:[[7,5,3,6,-1],[8,5,1,6,3]],threshold:-.0015953830443322659,right_val:.4295622110366821,left_val:.5750094056129456},{features:[[11,2,2,6,-1],[12,2,1,3,2],[11,5,1,3,2]],threshold:34766020689858124e-21,right_val:.5564029216766357,left_val:.4342445135116577},{features:[[6,6,6,5,-1],[8,6,2,5,3]],threshold:.0298629105091095,right_val:.6579188108444214,left_val:.4579147100448608},{features:[[17,1,3,6,-1],[17,3,3,2,3]],threshold:.0113255903124809,right_val:.3673888146877289,left_val:.5274311900138855},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:-.008782864548265934,right_val:.4642167091369629,left_val:.7100368738174438},{features:[[9,18,3,2,-1],[10,18,1,2,3]],threshold:.004363995976746082,right_val:.2705877125263214,left_val:.5279216170310974},{features:[[8,18,3,2,-1],[9,18,1,2,3]],threshold:.004180472809821367,right_val:.2449083030223846,left_val:.5072525143623352},{features:[[12,3,5,2,-1],[12,4,5,1,2]],threshold:-.0004566851130221039,right_val:.5548691153526306,left_val:.4283105134963989},{features:[[7,1,5,12,-1],[7,7,5,6,2]],threshold:-.0037140368949621916,right_val:.4103653132915497,left_val:.5519387722015381},{features:[[1,0,18,4,-1],[7,0,6,4,3]],threshold:-.025304289534688,right_val:.48698890209198,left_val:.6867002248764038},{features:[[4,2,2,2,-1],[4,3,2,1,2]],threshold:-.0003445408074185252,right_val:.528769314289093,left_val:.3728874027729034},{features:[[11,14,4,2,-1],[13,14,2,1,2],[11,15,2,1,2]],threshold:-.0008393523166887462,right_val:.4616062045097351,left_val:.6060152053833008},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.0172800496220589,right_val:.1819823980331421,left_val:.5049635767936707},{features:[[9,7,2,3,-1],[9,8,2,1,3]],threshold:-.006359507795423269,right_val:.5232778787612915,left_val:.1631239950656891},{features:[[5,5,1,3,-1],[5,6,1,1,3]],threshold:.0010298109846189618,right_val:.6176549196243286,left_val:.446327805519104},{features:[[10,10,6,1,-1],[10,10,3,1,2]],threshold:.0010117109632119536,right_val:.4300698935985565,left_val:.5473384857177734},{features:[[4,10,6,1,-1],[7,10,3,1,2]],threshold:-.010308800265193,right_val:.5000867247581482,left_val:.1166985034942627},{features:[[9,17,3,3,-1],[9,18,3,1,3]],threshold:.005468201823532581,right_val:.6719213724136353,left_val:.4769287109375},{features:[[4,14,1,3,-1],[4,15,1,1,3]],threshold:-.0009169646073132753,right_val:.5178164839744568,left_val:.3471089899539948},{features:[[12,5,3,3,-1],[12,6,3,1,3]],threshold:.002392282010987401,right_val:.6216310858726501,left_val:.4785236120223999},{features:[[4,5,12,3,-1],[4,6,12,1,3]],threshold:-.007557381875813007,right_val:.4410085082054138,left_val:.5814796090126038},{features:[[9,8,2,3,-1],[9,9,2,1,3]],threshold:-.0007702403236180544,right_val:.546572208404541,left_val:.387800008058548},{features:[[4,9,3,3,-1],[5,9,1,3,3]],threshold:-.00871259905397892,right_val:.4995836019515991,left_val:.1660051047801971},{features:[[6,0,9,17,-1],[9,0,3,17,3]],threshold:-.0103063201531768,right_val:.5274233818054199,left_val:.4093391001224518},{features:[[9,12,1,3,-1],[9,13,1,1,3]],threshold:-.002094097901135683,right_val:.4572280049324036,left_val:.6206194758415222},{features:[[9,5,2,15,-1],[9,10,2,5,3]],threshold:.006809905171394348,right_val:.4155600070953369,left_val:.5567759275436401},{features:[[8,14,2,3,-1],[8,15,2,1,3]],threshold:-.0010746059706434608,right_val:.4353024959564209,left_val:.5638927817344666},{features:[[10,14,1,3,-1],[10,15,1,1,3]],threshold:.0021550289820879698,right_val:.6749758124351501,left_val:.4826265871524811},{features:[[7,1,6,5,-1],[9,1,2,5,3]],threshold:.0317423194646835,right_val:.188324898481369,left_val:.5048379898071289},{features:[[0,0,20,2,-1],[0,0,10,2,2]],threshold:-.0783827230334282,right_val:.5260158181190491,left_val:.2369548976421356},{features:[[2,13,5,3,-1],[2,14,5,1,3]],threshold:.005741511937230825,right_val:.2776469886302948,left_val:.5048828721046448},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.0029014600440859795,right_val:.4693317115306854,left_val:.6238604784011841},{features:[[2,5,9,15,-1],[2,10,9,5,3]],threshold:-.0026427931152284145,right_val:.5169777274131775,left_val:.3314141929149628},{features:[[5,0,12,10,-1],[11,0,6,5,2],[5,5,6,5,2]],threshold:-.1094966009259224,right_val:.5183441042900085,left_val:.2380045056343079},{features:[[5,1,2,3,-1],[6,1,1,3,2]],threshold:7407591328956187e-20,right_val:.5362150073051453,left_val:.406963586807251},{features:[[10,7,6,1,-1],[12,7,2,1,3]],threshold:-.0005059380200691521,right_val:.437459409236908,left_val:.5506706237792969},{features:[[3,1,2,10,-1],[3,1,1,5,2],[4,6,1,5,2]],threshold:-.0008213177789002657,right_val:.4209375977516174,left_val:.5525709986686707},{features:[[13,7,2,1,-1],[13,7,1,1,2]],threshold:-60276539443293586e-21,right_val:.4748266041278839,left_val:.5455474853515625},{features:[[4,13,4,6,-1],[4,15,4,2,3]],threshold:.006806514225900173,right_val:.3424577116966248,left_val:.5157995820045471},{features:[[13,7,2,1,-1],[13,7,1,1,2]],threshold:.0017202789895236492,right_val:.6331263780593872,left_val:.5013207793235779},{features:[[5,7,2,1,-1],[6,7,1,1,2]],threshold:-.0001301692973356694,right_val:.4226869940757752,left_val:.5539718270301819},{features:[[2,12,18,4,-1],[11,12,9,2,2],[2,14,9,2,2]],threshold:-.004801638890057802,right_val:.5430780053138733,left_val:.4425095021724701},{features:[[5,7,2,2,-1],[5,7,1,1,2],[6,8,1,1,2]],threshold:-.002539931097999215,right_val:.4697605073451996,left_val:.7145782113075256},{features:[[16,3,4,2,-1],[16,4,4,1,2]],threshold:-.0014278929447755218,right_val:.539960503578186,left_val:.4070445001125336},{features:[[0,2,2,18,-1],[0,2,1,9,2],[1,11,1,9,2]],threshold:-.0251425504684448,right_val:.4747352004051209,left_val:.7884690761566162},{features:[[1,2,18,4,-1],[10,2,9,2,2],[1,4,9,2,2]],threshold:-.0038899609353393316,right_val:.5577110052108765,left_val:.4296191930770874},{features:[[9,14,1,3,-1],[9,15,1,1,3]],threshold:.004394745919853449,right_val:.702394425868988,left_val:.4693162143230438},{features:[[2,12,18,4,-1],[11,12,9,2,2],[2,14,9,2,2]],threshold:.0246784202754498,right_val:.3812510073184967,left_val:.5242322087287903},{features:[[0,12,18,4,-1],[0,12,9,2,2],[9,14,9,2,2]],threshold:.0380476787686348,right_val:.1687828004360199,left_val:.5011739730834961},{features:[[11,4,5,3,-1],[11,5,5,1,3]],threshold:.007942486554384232,right_val:.6369568109512329,left_val:.4828582108020783},{features:[[6,4,7,3,-1],[6,5,7,1,3]],threshold:-.0015110049862414598,right_val:.4487667977809906,left_val:.5906485915184021},{features:[[13,17,3,3,-1],[13,18,3,1,3]],threshold:.0064201741479337215,right_val:.2990570068359375,left_val:.5241097807884216},{features:[[8,1,3,4,-1],[9,1,1,4,3]],threshold:-.0029802159406244755,right_val:.5078489780426025,left_val:.3041465878486633},{features:[[11,4,2,4,-1],[11,4,1,4,2]],threshold:-.0007458007894456387,right_val:.5256826281547546,left_val:.4128139019012451},{features:[[0,17,9,3,-1],[3,17,3,3,3]],threshold:-.0104709500446916,right_val:.4494296014308929,left_val:.5808395147323608},{features:[[11,0,2,8,-1],[12,0,1,4,2],[11,4,1,4,2]],threshold:.009336920455098152,right_val:.265894889831543,left_val:.524655282497406},{features:[[0,8,6,12,-1],[0,8,3,6,2],[3,14,3,6,2]],threshold:.0279369000345469,right_val:.7087256908416748,left_val:.4674955010414124},{features:[[10,7,4,12,-1],[10,13,4,6,2]],threshold:.007427767850458622,right_val:.3758518099784851,left_val:.5409486889839172},{features:[[5,3,8,14,-1],[5,10,8,7,2]],threshold:-.0235845092684031,right_val:.5238550901412964,left_val:.3758639991283417},{features:[[14,10,6,1,-1],[14,10,3,1,2]],threshold:.0011452640173956752,right_val:.5804247260093689,left_val:.4329578876495361},{features:[[0,4,10,4,-1],[0,6,10,2,2]],threshold:-.0004346866044215858,right_val:.3873069882392883,left_val:.5280618071556091},{features:[[10,0,5,8,-1],[10,4,5,4,2]],threshold:.0106485402211547,right_val:.5681251883506775,left_val:.4902113080024719},{features:[[8,1,4,8,-1],[8,1,2,4,2],[10,5,2,4,2]],threshold:-.0003941805043723434,right_val:.4318251013755798,left_val:.5570880174636841},{features:[[9,11,6,1,-1],[11,11,2,1,3]],threshold:-.00013270479394122958,right_val:.4343554973602295,left_val:.5658439993858337},{features:[[8,9,3,4,-1],[9,9,1,4,3]],threshold:-.002012551063671708,right_val:.4537523984909058,left_val:.6056739091873169},{features:[[18,4,2,6,-1],[18,6,2,2,3]],threshold:.0024854319635778666,right_val:.4138010144233704,left_val:.5390477180480957},{features:[[8,8,3,4,-1],[9,8,1,4,3]],threshold:.0018237880431115627,right_val:.5717188715934753,left_val:.4354828894138336},{features:[[7,1,13,3,-1],[7,2,13,1,3]],threshold:-.0166566595435143,right_val:.521612286567688,left_val:.3010913133621216},{features:[[7,13,6,1,-1],[9,13,2,1,3]],threshold:.0008034955826587975,right_val:.3818396925926209,left_val:.5300151109695435},{features:[[12,11,3,6,-1],[12,13,3,2,3]],threshold:.003417037893086672,right_val:.4241400063037872,left_val:.5328028798103333},{features:[[5,11,6,1,-1],[7,11,2,1,3]],threshold:-.00036222729249857366,right_val:.418697714805603,left_val:.5491728186607361},{features:[[1,4,18,10,-1],[10,4,9,5,2],[1,9,9,5,2]],threshold:-.1163002029061317,right_val:.522645115852356,left_val:.1440722048282623},{features:[[8,6,4,9,-1],[8,9,4,3,3]],threshold:-.0146950101479888,right_val:.4715717136859894,left_val:.7747725248336792},{features:[[8,6,4,3,-1],[8,7,4,1,3]],threshold:.0021972130052745342,right_val:.3315644860267639,left_val:.5355433821678162},{features:[[8,7,3,3,-1],[9,7,1,3,3]],threshold:-.00046965209185145795,right_val:.4458136856555939,left_val:.5767235159873962},{features:[[14,15,4,3,-1],[14,16,4,1,3]],threshold:.006514499895274639,right_val:.3647888898849487,left_val:.5215674042701721},{features:[[5,10,3,10,-1],[6,10,1,10,3]],threshold:.0213000606745481,right_val:.1567950993776321,left_val:.4994204938411713},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:.0031881409231573343,right_val:.6287270188331604,left_val:.4742200076580048},{features:[[0,8,1,6,-1],[0,10,1,2,3]],threshold:.0009001977741718292,right_val:.394375205039978,left_val:.5347954034805298},{features:[[10,15,1,3,-1],[10,16,1,1,3]],threshold:-.005177227780222893,right_val:.5013138055801392,left_val:.6727191805839539},{features:[[2,15,4,3,-1],[2,16,4,1,3]],threshold:-.004376464989036322,right_val:.5128793120384216,left_val:.3106675148010254},{features:[[18,3,2,8,-1],[19,3,1,4,2],[18,7,1,4,2]],threshold:.002629996044561267,right_val:.5755215883255005,left_val:.488631010055542},{features:[[0,3,2,8,-1],[0,3,1,4,2],[1,7,1,4,2]],threshold:-.002045868895947933,right_val:.4558076858520508,left_val:.6025794148445129},{features:[[3,7,14,10,-1],[10,7,7,5,2],[3,12,7,5,2]],threshold:.0694827064871788,right_val:.2185259014368057,left_val:.5240747928619385},{features:[[0,7,19,3,-1],[0,8,19,1,3]],threshold:.0240489393472672,right_val:.2090622037649155,left_val:.501186728477478},{features:[[12,6,3,3,-1],[12,7,3,1,3]],threshold:.003109534038230777,right_val:.7108548283576965,left_val:.4866712093353272},{features:[[0,6,1,3,-1],[0,7,1,1,3]],threshold:-.00125032605137676,right_val:.5156195163726807,left_val:.3407891094684601},{features:[[12,6,3,3,-1],[12,7,3,1,3]],threshold:-.0010281190043315291,right_val:.443943202495575,left_val:.557557225227356},{features:[[5,6,3,3,-1],[5,7,3,1,3]],threshold:-.008889362215995789,right_val:.4620442092418671,left_val:.6402000784873962},{features:[[8,2,4,2,-1],[8,3,4,1,2]],threshold:-.0006109480164013803,right_val:.5448899865150452,left_val:.3766441941261292},{features:[[6,3,4,12,-1],[8,3,2,12,2]],threshold:-.005768635775893927,right_val:.5133677124977112,left_val:.3318648934364319},{features:[[13,6,2,3,-1],[13,7,2,1,3]],threshold:.0018506490159779787,right_val:.6406934857368469,left_val:.4903570115566254},{features:[[0,10,20,4,-1],[0,12,20,2,2]],threshold:-.0997994691133499,right_val:.5015562176704407,left_val:.1536051034927368},{features:[[2,0,17,14,-1],[2,7,17,7,2]],threshold:-.3512834906578064,right_val:.5174378752708435,left_val:.0588231310248375},{features:[[0,0,6,10,-1],[0,0,3,5,2],[3,5,3,5,2]],threshold:-.0452445708215237,right_val:.4677872955799103,left_val:.6961488723754883},{features:[[14,6,6,4,-1],[14,6,3,4,2]],threshold:.0714815780520439,right_val:.1038092970848084,left_val:.5167986154556274},{features:[[0,6,6,4,-1],[3,6,3,4,2]],threshold:.0021895780228078365,right_val:.5532060861587524,left_val:.4273078143596649},{features:[[13,2,7,2,-1],[13,3,7,1,2]],threshold:-.0005924265133216977,right_val:.5276389122009277,left_val:.46389439702034},{features:[[0,2,7,2,-1],[0,3,7,1,2]],threshold:.0016788389766588807,right_val:.3932034969329834,left_val:.530164897441864},{features:[[6,11,14,2,-1],[13,11,7,1,2],[6,12,7,1,2]],threshold:-.0022163488902151585,right_val:.4757033884525299,left_val:.5630694031715393},{features:[[8,5,2,2,-1],[8,5,1,1,2],[9,6,1,1,2]],threshold:.00011568699846975505,right_val:.5535702705383301,left_val:.4307535886764526},{features:[[13,9,2,3,-1],[13,9,1,3,2]],threshold:-.007201728876680136,right_val:.5193064212799072,left_val:.144488200545311},{features:[[1,1,3,12,-1],[2,1,1,12,3]],threshold:.0008908127201721072,right_val:.5593621134757996,left_val:.4384432137012482},{features:[[17,4,1,3,-1],[17,5,1,1,3]],threshold:.00019605009583756328,right_val:.4705956876277924,left_val:.5340415835380554},{features:[[2,4,1,3,-1],[2,5,1,1,3]],threshold:.0005202214233577251,right_val:.3810079097747803,left_val:.5213856101036072},{features:[[14,5,1,3,-1],[14,6,1,1,3]],threshold:.0009458857239224017,right_val:.6130738854408264,left_val:.4769414961338043},{features:[[7,16,2,3,-1],[7,17,2,1,3]],threshold:916984718060121e-19,right_val:.5429363250732422,left_val:.4245009124279022},{features:[[8,13,4,6,-1],[10,13,2,3,2],[8,16,2,3,2]],threshold:.002183320000767708,right_val:.419107586145401,left_val:.5457730889320374},{features:[[5,5,1,3,-1],[5,6,1,1,3]],threshold:-.0008603967144154012,right_val:.4471659958362579,left_val:.5764588713645935},{features:[[16,0,4,20,-1],[16,0,2,20,2]],threshold:-.0132362395524979,right_val:.4695009887218475,left_val:.6372823119163513},{features:[[5,1,2,6,-1],[5,1,1,3,2],[6,4,1,3,2]],threshold:.0004337670106906444,right_val:.394582986831665,left_val:.5317873954772949}],threshold:67.69892120361328},{simpleClassifiers:[{features:[[5,4,10,4,-1],[5,6,10,2,2]],threshold:-.024847149848938,right_val:.3873311877250671,left_val:.6555516719818115},{features:[[15,2,4,12,-1],[15,2,2,12,2]],threshold:.006134861148893833,right_val:.5973997712135315,left_val:.374807208776474},{features:[[7,6,4,12,-1],[7,12,4,6,2]],threshold:.006449849810451269,right_val:.2548811137676239,left_val:.542549192905426},{features:[[14,5,1,8,-1],[14,9,1,4,2]],threshold:.0006349121103994548,right_val:.5387253761291504,left_val:.2462442070245743},{features:[[1,4,14,10,-1],[1,4,7,5,2],[8,9,7,5,2]],threshold:.0014023890253156424,right_val:.3528657853603363,left_val:.5594322085380554},{features:[[11,6,6,14,-1],[14,6,3,7,2],[11,13,3,7,2]],threshold:.0003004400059580803,right_val:.576593816280365,left_val:.3958503901958466},{features:[[3,6,6,14,-1],[3,6,3,7,2],[6,13,3,7,2]],threshold:.00010042409849120304,right_val:.5534998178482056,left_val:.3698996901512146},{features:[[4,9,15,2,-1],[9,9,5,2,3]],threshold:-.005084149073809385,right_val:.5547800064086914,left_val:.3711090981960297},{features:[[7,14,6,3,-1],[7,15,6,1,3]],threshold:-.0195372607558966,right_val:.4579297006130219,left_val:.7492755055427551},{features:[[6,3,14,4,-1],[13,3,7,2,2],[6,5,7,2,2]],threshold:-7453274065483129e-21,right_val:.390406996011734,left_val:.5649787187576294},{features:[[1,9,15,2,-1],[6,9,5,2,3]],threshold:-.0036079459823668003,right_val:.5267801284790039,left_val:.3381088078022003},{features:[[6,11,8,9,-1],[6,14,8,3,3]],threshold:.002069750102236867,right_val:.3714388906955719,left_val:.5519291162490845},{features:[[7,4,3,8,-1],[8,4,1,8,3]],threshold:-.0004646384040825069,right_val:.4113566875457764,left_val:.5608214735984802},{features:[[14,6,2,6,-1],[14,9,2,3,2]],threshold:.0007549045258201659,right_val:.532935619354248,left_val:.3559206128120422},{features:[[5,7,6,4,-1],[5,7,3,2,2],[8,9,3,2,2]],threshold:-.0009832223877310753,right_val:.3763205111026764,left_val:.5414795875549316},{features:[[1,1,18,19,-1],[7,1,6,19,3]],threshold:-.0199406407773495,right_val:.4705299139022827,left_val:.634790301322937},{features:[[1,2,6,5,-1],[4,2,3,5,2]],threshold:.0037680300883948803,right_val:.5563716292381287,left_val:.3913489878177643},{features:[[12,17,6,2,-1],[12,18,6,1,2]],threshold:-.009452850557863712,right_val:.5215116739273071,left_val:.2554892897605896},{features:[[2,17,6,2,-1],[2,18,6,1,2]],threshold:.002956084907054901,right_val:.3063920140266419,left_val:.5174679160118103},{features:[[17,3,3,6,-1],[17,5,3,2,3]],threshold:.009107873775064945,right_val:.2885963022708893,left_val:.5388448238372803},{features:[[8,17,3,3,-1],[8,18,3,1,3]],threshold:.0018219229532405734,right_val:.58521968126297,left_val:.4336043000221252},{features:[[10,13,2,6,-1],[10,16,2,3,2]],threshold:.0146887395530939,right_val:.2870005965232849,left_val:.5287361741065979},{features:[[7,13,6,3,-1],[7,14,6,1,3]],threshold:-.0143879903480411,right_val:.4647370874881744,left_val:.701944887638092},{features:[[17,3,3,6,-1],[17,5,3,2,3]],threshold:-.0189866498112679,right_val:.5247011780738831,left_val:.2986552119255066},{features:[[8,13,2,3,-1],[8,14,2,1,3]],threshold:.0011527639580890536,right_val:.593166172504425,left_val:.4323473870754242},{features:[[9,3,6,2,-1],[11,3,2,2,3]],threshold:.0109336702153087,right_val:.3130319118499756,left_val:.5286864042282104},{features:[[0,3,3,6,-1],[0,5,3,2,3]],threshold:-.0149327302351594,right_val:.508407711982727,left_val:.2658419013023377},{features:[[8,5,4,6,-1],[8,7,4,2,3]],threshold:-.0002997053961735219,right_val:.374072402715683,left_val:.5463526844978333},{features:[[5,5,3,2,-1],[5,6,3,1,2]],threshold:.004167762119323015,right_val:.7435721755027771,left_val:.4703496992588043},{features:[[10,1,3,4,-1],[11,1,1,4,3]],threshold:-.00639053201302886,right_val:.5280538201332092,left_val:.2069258987903595},{features:[[1,2,5,9,-1],[1,5,5,3,3]],threshold:.004502960946410894,right_val:.348354309797287,left_val:.518264889717102},{features:[[13,6,2,3,-1],[13,7,2,1,3]],threshold:-.009204036556184292,right_val:.4932360053062439,left_val:.680377721786499},{features:[[0,6,14,3,-1],[7,6,7,3,2]],threshold:.0813272595405579,right_val:.2253051996231079,left_val:.5058398842811584},{features:[[2,11,18,8,-1],[2,15,18,4,2]],threshold:-.150792807340622,right_val:.5264679789543152,left_val:.2963424921035767},{features:[[5,6,2,3,-1],[5,7,2,1,3]],threshold:.0033179009333252907,right_val:.7072932124137878,left_val:.4655495882034302},{features:[[10,6,4,2,-1],[12,6,2,1,2],[10,7,2,1,2]],threshold:.0007740280125290155,right_val:.5668237805366516,left_val:.4780347943305969},{features:[[6,6,4,2,-1],[6,6,2,1,2],[8,7,2,1,2]],threshold:.0006819954141974449,right_val:.5722156763076782,left_val:.4286996126174927},{features:[[10,1,3,4,-1],[11,1,1,4,3]],threshold:.0053671570494771,right_val:.3114621937274933,left_val:.5299307107925415},{features:[[7,1,2,7,-1],[8,1,1,7,2]],threshold:9701866656541824e-20,right_val:.5269461870193481,left_val:.3674638867378235},{features:[[4,2,15,14,-1],[4,9,15,7,2]],threshold:-.1253408938646317,right_val:.5245791077613831,left_val:.2351492047309876},{features:[[8,7,3,2,-1],[9,7,1,2,3]],threshold:-.005251626949757338,right_val:.4693767130374908,left_val:.7115936875343323},{features:[[2,3,18,4,-1],[11,3,9,2,2],[2,5,9,2,2]],threshold:-.007834210991859436,right_val:.5409085750579834,left_val:.4462651014328003},{features:[[9,7,2,2,-1],[10,7,1,2,2]],threshold:-.001131006982177496,right_val:.4417662024497986,left_val:.5945618748664856},{features:[[13,9,2,3,-1],[13,9,1,3,2]],threshold:.0017601120052859187,right_val:.3973453044891357,left_val:.5353249907493591},{features:[[5,2,6,2,-1],[7,2,2,2,3]],threshold:-.00081581249833107,right_val:.5264726877212524,left_val:.3760268092155457},{features:[[9,5,2,7,-1],[9,5,1,7,2]],threshold:-.003868758911266923,right_val:.4749819934368134,left_val:.6309912800788879},{features:[[5,9,2,3,-1],[6,9,1,3,2]],threshold:.0015207129763439298,right_val:.3361223936080933,left_val:.5230181813240051},{features:[[6,0,14,18,-1],[6,9,14,9,2]],threshold:.545867383480072,right_val:.1172635033726692,left_val:.5167139768600464},{features:[[2,16,6,3,-1],[2,17,6,1,3]],threshold:.0156501904129982,right_val:.1393294930458069,left_val:.4979439079761505},{features:[[9,7,3,6,-1],[10,7,1,6,3]],threshold:-.0117318602278829,right_val:.4921196103096008,left_val:.7129650712013245},{features:[[7,8,4,3,-1],[7,9,4,1,3]],threshold:-.006176512222737074,right_val:.5049701929092407,left_val:.2288102954626083},{features:[[7,12,6,3,-1],[7,13,6,1,3]],threshold:.0022457661107182503,right_val:.6048725843429565,left_val:.4632433950901032},{features:[[9,12,2,3,-1],[9,13,2,1,3]],threshold:-.005191586911678314,right_val:.4602192938327789,left_val:.6467421054840088},{features:[[7,12,6,2,-1],[9,12,2,2,3]],threshold:-.0238278806209564,right_val:.5226079225540161,left_val:.1482000946998596},{features:[[5,11,4,6,-1],[5,14,4,3,2]],threshold:.0010284580057486892,right_val:.3375957012176514,left_val:.5135489106178284},{features:[[11,12,7,2,-1],[11,13,7,1,2]],threshold:-.0100788502022624,right_val:.5303567051887512,left_val:.2740561068058014},{features:[[6,10,8,6,-1],[6,10,4,3,2],[10,13,4,3,2]],threshold:.002616893034428358,right_val:.3972454071044922,left_val:.533267080783844},{features:[[11,10,3,4,-1],[11,12,3,2,2]],threshold:.000543853675480932,right_val:.4063411951065064,left_val:.5365604162216187},{features:[[9,16,2,3,-1],[9,17,2,1,3]],threshold:.005351051222532988,right_val:.6889045834541321,left_val:.4653759002685547},{features:[[13,3,1,9,-1],[13,6,1,3,3]],threshold:-.0015274790348485112,right_val:.3624723851680756,left_val:.5449501276016235},{features:[[1,13,14,6,-1],[1,15,14,2,3]],threshold:-.0806244164705276,right_val:.5000287294387817,left_val:.1656087040901184},{features:[[13,6,1,6,-1],[13,9,1,3,2]],threshold:.0221920292824507,right_val:.2002808004617691,left_val:.5132731199264526},{features:[[0,4,3,8,-1],[1,4,1,8,3]],threshold:.007310063112527132,right_val:.6366536021232605,left_val:.4617947936058044},{features:[[18,0,2,18,-1],[18,0,1,18,2]],threshold:-.006406307220458984,right_val:.4867860972881317,left_val:.5916250944137573},{features:[[2,3,6,2,-1],[2,4,6,1,2]],threshold:-.0007641504053026438,right_val:.5315797924995422,left_val:.388840913772583},{features:[[9,0,8,6,-1],[9,2,8,2,3]],threshold:.0007673448999412358,right_val:.5605279803276062,left_val:.4159064888954163},{features:[[6,6,1,6,-1],[6,9,1,3,2]],threshold:.0006147450185380876,right_val:.5120148062705994,left_val:.3089022040367127},{features:[[14,8,6,3,-1],[14,9,6,1,3]],threshold:-.005010527092963457,right_val:.5207306146621704,left_val:.3972199857234955},{features:[[0,0,2,18,-1],[1,0,1,18,2]],threshold:-.008690913207828999,right_val:.4608575999736786,left_val:.6257408261299133},{features:[[1,18,18,2,-1],[10,18,9,1,2],[1,19,9,1,2]],threshold:-.016391459852457,right_val:.5242266058921814,left_val:.2085209935903549},{features:[[3,15,2,2,-1],[3,16,2,1,2]],threshold:.00040973909199237823,right_val:.3780320882797241,left_val:.5222427248954773},{features:[[8,14,5,3,-1],[8,15,5,1,3]],threshold:-.002524228999391198,right_val:.4611890017986298,left_val:.5803927183151245},{features:[[8,14,2,3,-1],[8,15,2,1,3]],threshold:.0005094531225040555,right_val:.5846015810966492,left_val:.4401271939277649},{features:[[12,3,3,3,-1],[13,3,1,3,3]],threshold:.001965641975402832,right_val:.4184590876102448,left_val:.5322325229644775},{features:[[7,5,6,2,-1],[9,5,2,2,3]],threshold:.0005629889783449471,right_val:.5234565734863281,left_val:.3741844892501831},{features:[[15,5,5,2,-1],[15,6,5,1,2]],threshold:-.0006794679793529212,right_val:.5356478095054626,left_val:.4631041884422302},{features:[[0,5,5,2,-1],[0,6,5,1,2]],threshold:.007285634987056255,right_val:.2377564013004303,left_val:.5044670104980469},{features:[[17,14,1,6,-1],[17,17,1,3,2]],threshold:-.0174594894051552,right_val:.5050435066223145,left_val:.7289121150970459},{features:[[2,9,9,3,-1],[5,9,3,3,3]],threshold:-.0254217498004436,right_val:.4678100049495697,left_val:.6667134761810303},{features:[[12,3,3,3,-1],[13,3,1,3,3]],threshold:-.0015647639520466328,right_val:.532362699508667,left_val:.4391759037971497},{features:[[0,0,4,18,-1],[2,0,2,18,2]],threshold:.0114443600177765,right_val:.5680012106895447,left_val:.4346440136432648},{features:[[17,6,1,3,-1],[17,7,1,1,3]],threshold:-.0006735255010426044,right_val:.5296812057495117,left_val:.44771409034729},{features:[[2,14,1,6,-1],[2,17,1,3,2]],threshold:.009319420903921127,right_val:.7462607026100159,left_val:.4740200042724609},{features:[[19,8,1,2,-1],[19,9,1,1,2]],threshold:.00013328490604180843,right_val:.475213497877121,left_val:.536506175994873},{features:[[5,3,3,3,-1],[6,3,1,3,3]],threshold:-.007881579920649529,right_val:.5015255212783813,left_val:.1752219051122665},{features:[[9,16,2,3,-1],[9,17,2,1,3]],threshold:-.005798568017780781,right_val:.4896200895309448,left_val:.7271236777305603},{features:[[2,6,1,3,-1],[2,7,1,1,3]],threshold:-.0003892249951604754,right_val:.5344941020011902,left_val:.4003908932209015},{features:[[12,4,8,2,-1],[16,4,4,1,2],[12,5,4,1,2]],threshold:-.0019288610201328993,right_val:.4803955852985382,left_val:.5605612993240356},{features:[[0,4,8,2,-1],[0,4,4,1,2],[4,5,4,1,2]],threshold:.008421415463089943,right_val:.7623608708381653,left_val:.4753246903419495},{features:[[2,16,18,4,-1],[2,18,18,2,2]],threshold:.008165587671101093,right_val:.419164389371872,left_val:.5393261909484863},{features:[[7,15,2,4,-1],[7,17,2,2,2]],threshold:.00048280550981871784,right_val:.5399821996688843,left_val:.4240800142288208},{features:[[4,0,14,3,-1],[4,1,14,1,3]],threshold:-.002718663075938821,right_val:.5424923896789551,left_val:.4244599938392639},{features:[[0,0,4,20,-1],[2,0,2,20,2]],threshold:-.0125072300434113,right_val:.4550411105155945,left_val:.5895841717720032},{features:[[12,4,4,8,-1],[14,4,2,4,2],[12,8,2,4,2]],threshold:-.0242865197360516,right_val:.518917977809906,left_val:.2647134959697723},{features:[[6,7,2,2,-1],[6,7,1,1,2],[7,8,1,1,2]],threshold:-.0029676330741494894,right_val:.4749749898910523,left_val:.734768271446228},{features:[[10,6,2,3,-1],[10,7,2,1,3]],threshold:-.0125289997085929,right_val:.5177599787712097,left_val:.2756049931049347},{features:[[8,7,3,2,-1],[8,8,3,1,2]],threshold:-.0010104000102728605,right_val:.5144724249839783,left_val:.3510560989379883},{features:[[8,2,6,12,-1],[8,8,6,6,2]],threshold:-.0021348530426621437,right_val:.466731995344162,left_val:.5637925863265991},{features:[[4,0,11,12,-1],[4,4,11,4,3]],threshold:.0195642597973347,right_val:.6137639880180359,left_val:.4614573121070862},{features:[[14,9,6,11,-1],[16,9,2,11,3]],threshold:-.0971463471651077,right_val:.5193555951118469,left_val:.2998378872871399},{features:[[0,14,4,3,-1],[0,15,4,1,3]],threshold:.00450145686045289,right_val:.3045755922794342,left_val:.5077884793281555},{features:[[9,10,2,3,-1],[9,11,2,1,3]],threshold:.006370697170495987,right_val:.6887500882148743,left_val:.486101895570755},{features:[[5,11,3,2,-1],[5,12,3,1,2]],threshold:-.009072152897715569,right_val:.5017563104629517,left_val:.1673395931720734},{features:[[9,15,3,3,-1],[10,15,1,3,3]],threshold:-.005353720858693123,right_val:.524263322353363,left_val:.2692756950855255},{features:[[8,8,3,4,-1],[9,8,1,4,3]],threshold:-.0109328404068947,right_val:.4736028909683228,left_val:.7183864116668701},{features:[[9,15,3,3,-1],[10,15,1,3,3]],threshold:.008235607296228409,right_val:.2389862984418869,left_val:.5223966836929321},{features:[[7,7,3,2,-1],[8,7,1,2,3]],threshold:-.0010038160253316164,right_val:.4433943033218384,left_val:.5719355940818787},{features:[[2,10,16,4,-1],[10,10,8,2,2],[2,12,8,2,2]],threshold:.004085912834852934,right_val:.4148836135864258,left_val:.5472841858863831},{features:[[2,3,4,17,-1],[4,3,2,17,2]],threshold:.1548541933298111,right_val:.0610615983605385,left_val:.4973812103271484},{features:[[15,13,2,7,-1],[15,13,1,7,2]],threshold:.00020897459762636572,right_val:.542388916015625,left_val:.4709174036979675},{features:[[2,2,6,1,-1],[5,2,3,1,2]],threshold:.0003331699117552489,right_val:.5300992131233215,left_val:.4089626967906952},{features:[[5,2,12,4,-1],[9,2,4,4,3]],threshold:-.0108134001493454,right_val:.4957334101200104,left_val:.6104369759559631},{features:[[6,0,8,12,-1],[6,0,4,6,2],[10,6,4,6,2]],threshold:.0456560105085373,right_val:.2866660058498383,left_val:.5069689154624939},{features:[[13,7,2,2,-1],[14,7,1,1,2],[13,8,1,1,2]],threshold:.0012569549726322293,right_val:.631817102432251,left_val:.484691709280014},{features:[[0,12,20,6,-1],[0,14,20,2,3]],threshold:-.120150700211525,right_val:.4980959892272949,left_val:.0605261400341988},{features:[[14,7,2,3,-1],[14,7,1,3,2]],threshold:-.00010533799650147557,right_val:.4708042144775391,left_val:.5363109707832336},{features:[[0,8,9,12,-1],[3,8,3,12,3]],threshold:-.2070319056510925,right_val:.497909814119339,left_val:.059660330414772},{features:[[3,0,16,2,-1],[3,0,8,2,2]],threshold:.00012909180077258497,right_val:.5377997756004333,left_val:.4712977111339569},{features:[[6,15,3,3,-1],[6,16,3,1,3]],threshold:.000388185289921239,right_val:.5534191131591797,left_val:.4363538026809692},{features:[[8,15,6,3,-1],[8,16,6,1,3]],threshold:-.0029243610333651304,right_val:.4825215935707092,left_val:.5811185836791992},{features:[[0,10,1,6,-1],[0,12,1,2,3]],threshold:.0008388233254663646,right_val:.403813898563385,left_val:.5311700105667114},{features:[[10,9,4,3,-1],[10,10,4,1,3]],threshold:-.0019061550265178084,right_val:.526001513004303,left_val:.3770701885223389},{features:[[9,15,2,3,-1],[9,16,2,1,3]],threshold:.00895143486559391,right_val:.7682183980941772,left_val:.4766167998313904},{features:[[5,7,10,1,-1],[5,7,5,1,2]],threshold:.0130834598094225,right_val:.3062222003936768,left_val:.5264462828636169},{features:[[4,0,12,19,-1],[10,0,6,19,2]],threshold:-.2115933001041412,right_val:.4695810079574585,left_val:.6737198233604431},{features:[[0,6,20,6,-1],[10,6,10,3,2],[0,9,10,3,2]],threshold:.0031493250280618668,right_val:.4386953115463257,left_val:.5644835233688354},{features:[[3,6,2,2,-1],[3,6,1,1,2],[4,7,1,1,2]],threshold:.00039754100725986063,right_val:.5895630121231079,left_val:.4526061117649078},{features:[[15,6,2,2,-1],[16,6,1,1,2],[15,7,1,1,2]],threshold:-.0013814480043947697,right_val:.4942413866519928,left_val:.6070582270622253},{features:[[3,6,2,2,-1],[3,6,1,1,2],[4,7,1,1,2]],threshold:-.0005812218878418207,right_val:.4508252143859863,left_val:.5998213291168213},{features:[[14,4,1,12,-1],[14,10,1,6,2]],threshold:-.002390532987192273,right_val:.5223848223686218,left_val:.420558899641037},{features:[[2,5,16,10,-1],[2,5,8,5,2],[10,10,8,5,2]],threshold:.0272689294070005,right_val:.3563301861286163,left_val:.5206447243690491},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:-.0037658358924090862,right_val:.5218814015388489,left_val:.3144704103469849},{features:[[1,4,2,2,-1],[1,5,2,1,2]],threshold:-.0014903489500284195,right_val:.5124437212944031,left_val:.338019609451294},{features:[[5,0,15,5,-1],[10,0,5,5,3]],threshold:-.0174282304942608,right_val:.4919725954532623,left_val:.5829960703849792},{features:[[0,0,15,5,-1],[5,0,5,5,3]],threshold:-.0152780301868916,right_val:.4617887139320374,left_val:.6163144707679749},{features:[[11,2,2,17,-1],[11,2,1,17,2]],threshold:.0319956094026566,right_val:.171276405453682,left_val:.5166357159614563},{features:[[7,2,2,17,-1],[8,2,1,17,2]],threshold:-.003825671039521694,right_val:.5131387710571289,left_val:.3408012092113495},{features:[[15,11,2,9,-1],[15,11,1,9,2]],threshold:-.00851864367723465,right_val:.4997941851615906,left_val:.6105518937110901},{features:[[3,11,2,9,-1],[4,11,1,9,2]],threshold:.0009064162150025368,right_val:.5582311153411865,left_val:.4327270984649658},{features:[[5,16,14,4,-1],[5,16,7,4,2]],threshold:.0103448498994112,right_val:.5452420115470886,left_val:.4855653047561646}],threshold:69.22987365722656},{simpleClassifiers:[{features:[[1,4,18,1,-1],[7,4,6,1,3]],threshold:.007898182608187199,right_val:.5946462154388428,left_val:.333252489566803},{features:[[13,7,6,4,-1],[16,7,3,2,2],[13,9,3,2,2]],threshold:.0016170160379260778,right_val:.5577868819236755,left_val:.3490641117095947},{features:[[9,8,2,12,-1],[9,12,2,4,3]],threshold:-.0005544974119402468,right_val:.3291530013084412,left_val:.5542566180229187},{features:[[12,1,6,6,-1],[12,3,6,2,3]],threshold:.001542898011393845,right_val:.5545979142189026,left_val:.3612579107284546},{features:[[5,2,6,6,-1],[5,2,3,3,2],[8,5,3,3,2]],threshold:-.0010329450014978647,right_val:.5576140284538269,left_val:.3530139029026032},{features:[[9,16,6,4,-1],[12,16,3,2,2],[9,18,3,2,2]],threshold:.0007769815856590867,right_val:.5645321011543274,left_val:.3916778862476349},{features:[[1,2,18,3,-1],[7,2,6,3,3]],threshold:.143203005194664,right_val:.7023633122444153,left_val:.4667482078075409},{features:[[7,4,9,10,-1],[7,9,9,5,2]],threshold:-.007386649027466774,right_val:.5289257764816284,left_val:.3073684871196747},{features:[[5,9,4,4,-1],[7,9,2,4,2]],threshold:-.0006293674232438207,right_val:.4037049114704132,left_val:.562211811542511},{features:[[11,10,3,6,-1],[11,13,3,3,2]],threshold:.0007889352855272591,right_val:.3557874858379364,left_val:.5267661213874817},{features:[[7,11,5,3,-1],[7,12,5,1,3]],threshold:-.0122280502691865,right_val:.4625549912452698,left_val:.6668320894241333},{features:[[7,11,6,6,-1],[10,11,3,3,2],[7,14,3,3,2]],threshold:.0035420239437371492,right_val:.3869673013687134,left_val:.5521438121795654},{features:[[0,0,10,9,-1],[0,3,10,3,3]],threshold:-.0010585320414975286,right_val:.5320926904678345,left_val:.3628678023815155},{features:[[13,14,1,6,-1],[13,16,1,2,3]],threshold:14935660146875307e-21,right_val:.5363323092460632,left_val:.4632444977760315},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.005253770854324102,right_val:.3265708982944489,left_val:.5132231712341309},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.008233802393078804,right_val:.4774140119552612,left_val:.6693689823150635},{features:[[6,14,1,6,-1],[6,16,1,2,3]],threshold:2186681012972258e-20,right_val:.5457931160926819,left_val:.405386209487915},{features:[[9,15,2,3,-1],[9,16,2,1,3]],threshold:-.0038150229956954718,right_val:.4793178141117096,left_val:.645499587059021},{features:[[6,4,3,3,-1],[7,4,1,3,3]],threshold:.0011105879675596952,right_val:.3529678881168366,left_val:.5270407199859619},{features:[[9,0,11,3,-1],[9,1,11,1,3]],threshold:-.005770768970251083,right_val:.5352957844734192,left_val:.3803547024726868},{features:[[0,6,20,3,-1],[0,7,20,1,3]],threshold:-.003015833906829357,right_val:.3887133002281189,left_val:.533940315246582},{features:[[10,1,1,2,-1],[10,2,1,1,2]],threshold:-.0008545368909835815,right_val:.5273603796958923,left_val:.3564616143703461},{features:[[9,6,2,6,-1],[10,6,1,6,2]],threshold:.0110505102202296,right_val:.6849737763404846,left_val:.4671907126903534},{features:[[5,8,12,1,-1],[9,8,4,1,3]],threshold:.0426058396697044,right_val:.0702200904488564,left_val:.51514732837677},{features:[[3,8,12,1,-1],[7,8,4,1,3]],threshold:-.0030781750101596117,right_val:.5152602195739746,left_val:.3041661083698273},{features:[[9,7,3,5,-1],[10,7,1,5,3]],threshold:-.005481572821736336,right_val:.4897229969501495,left_val:.6430295705795288},{features:[[3,9,6,2,-1],[6,9,3,2,2]],threshold:.003188186092302203,right_val:.3826209902763367,left_val:.5307493209838867},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:.00035947180003859103,right_val:.5421904921531677,left_val:.4650047123432159},{features:[[7,0,6,1,-1],[9,0,2,1,3]],threshold:-.004070503171533346,right_val:.5079116225242615,left_val:.2849679887294769},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:-.0145941702648997,right_val:.5128461718559265,left_val:.2971645891666412},{features:[[7,10,2,1,-1],[8,10,1,1,2]],threshold:-.00011947689927183092,right_val:.4343082010746002,left_val:.563109815120697},{features:[[6,4,9,13,-1],[9,4,3,13,3]],threshold:-.0006934464909136295,right_val:.5359959006309509,left_val:.4403578042984009},{features:[[6,8,4,2,-1],[6,9,4,1,2]],threshold:14834799912932795e-21,right_val:.5164697766304016,left_val:.3421008884906769},{features:[[16,2,4,6,-1],[16,2,2,6,2]],threshold:.009029698558151722,right_val:.6114075183868408,left_val:.4639343023300171},{features:[[0,17,6,3,-1],[0,18,6,1,3]],threshold:-.008064081892371178,right_val:.5075494050979614,left_val:.2820158898830414},{features:[[10,10,3,10,-1],[10,15,3,5,2]],threshold:.0260621197521687,right_val:.2688778042793274,left_val:.5208905935287476},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:.0173146594315767,right_val:.6738539934158325,left_val:.4663713872432709},{features:[[10,4,4,3,-1],[10,4,2,3,2]],threshold:.0226666405797005,right_val:.2212723940610886,left_val:.5209349989891052},{features:[[8,4,3,8,-1],[9,4,1,8,3]],threshold:-.002196592977270484,right_val:.4538190066814423,left_val:.6063101291656494},{features:[[6,6,9,13,-1],[9,6,3,13,3]],threshold:-.009528247639536858,right_val:.5247430801391602,left_val:.4635204970836639},{features:[[6,0,8,12,-1],[6,0,4,6,2],[10,6,4,6,2]],threshold:.00809436198323965,right_val:.3913882076740265,left_val:.5289440155029297},{features:[[14,2,6,8,-1],[16,2,2,8,3]],threshold:-.0728773325681686,right_val:.4990234971046448,left_val:.7752001881599426},{features:[[6,0,3,6,-1],[7,0,1,6,3]],threshold:-.006900952197611332,right_val:.5048090219497681,left_val:.2428039014339447},{features:[[14,2,6,8,-1],[16,2,2,8,3]],threshold:-.0113082397729158,right_val:.4842376112937927,left_val:.5734364986419678},{features:[[0,5,6,6,-1],[0,8,6,3,2]],threshold:.0596132017672062,right_val:.2524977028369904,left_val:.5029836297035217},{features:[[9,12,6,2,-1],[12,12,3,1,2],[9,13,3,1,2]],threshold:-.0028624620754271746,right_val:.4898459911346436,left_val:.6073045134544373},{features:[[8,17,3,2,-1],[9,17,1,2,3]],threshold:.00447814492508769,right_val:.2220316976308823,left_val:.5015289187431335},{features:[[11,6,2,2,-1],[12,6,1,1,2],[11,7,1,1,2]],threshold:-.001751324045471847,right_val:.4933868944644928,left_val:.6614428758621216},{features:[[1,9,18,2,-1],[7,9,6,2,3]],threshold:.0401634201407433,right_val:.3741044998168945,left_val:.5180878043174744},{features:[[11,6,2,2,-1],[12,6,1,1,2],[11,7,1,1,2]],threshold:.0003476894926279783,right_val:.5818032026290894,left_val:.4720416963100433},{features:[[3,4,12,8,-1],[7,4,4,8,3]],threshold:.00265516503714025,right_val:.5221335887908936,left_val:.3805010914802551},{features:[[13,11,5,3,-1],[13,12,5,1,3]],threshold:-.008770627900958061,right_val:.5231295228004456,left_val:.294416606426239},{features:[[9,10,2,3,-1],[9,11,2,1,3]],threshold:-.005512209143489599,right_val:.4722816944122315,left_val:.7346177101135254},{features:[[14,7,2,3,-1],[14,7,1,3,2]],threshold:.0006867204210720956,right_val:.424241304397583,left_val:.5452876091003418},{features:[[5,4,1,3,-1],[5,5,1,1,3]],threshold:.0005601966986432672,right_val:.5601285099983215,left_val:.439886212348938},{features:[[13,4,2,3,-1],[13,5,2,1,3]],threshold:.0024143769405782223,right_val:.6136621832847595,left_val:.4741686880588532},{features:[[5,4,2,3,-1],[5,5,2,1,3]],threshold:-.0015680900542065501,right_val:.4516409933567047,left_val:.604455292224884},{features:[[9,8,2,3,-1],[9,9,2,1,3]],threshold:-.0036827491130679846,right_val:.5294982194900513,left_val:.2452459037303925},{features:[[8,9,2,2,-1],[8,10,2,1,2]],threshold:-.000294091907562688,right_val:.5251451134681702,left_val:.3732838034629822},{features:[[15,14,1,4,-1],[15,16,1,2,2]],threshold:.00042847759323194623,right_val:.4065535068511963,left_val:.5498809814453125},{features:[[3,12,2,2,-1],[3,13,2,1,2]],threshold:-.004881707020103931,right_val:.4999957084655762,left_val:.2139908969402313},{features:[[12,15,2,2,-1],[13,15,1,1,2],[12,16,1,1,2]],threshold:.00027272020815871656,right_val:.581342875957489,left_val:.465028703212738},{features:[[9,13,2,2,-1],[9,14,2,1,2]],threshold:.00020947199664078653,right_val:.5572792887687683,left_val:.4387486875057221},{features:[[4,11,14,9,-1],[4,14,14,3,3]],threshold:.0485011897981167,right_val:.3212889134883881,left_val:.5244972705841064},{features:[[7,13,4,3,-1],[7,14,4,1,3]],threshold:-.004516641143709421,right_val:.4545882046222687,left_val:.605681300163269},{features:[[15,14,1,4,-1],[15,16,1,2,2]],threshold:-.0122916800901294,right_val:.5152214169502258,left_val:.2040929049253464},{features:[[4,14,1,4,-1],[4,16,1,2,2]],threshold:.0004854967992287129,right_val:.3739503026008606,left_val:.5237604975700378},{features:[[14,0,6,13,-1],[16,0,2,13,3]],threshold:.0305560491979122,right_val:.5938246250152588,left_val:.4960533976554871},{features:[[4,1,2,12,-1],[4,1,1,6,2],[5,7,1,6,2]],threshold:-.00015105320198927075,right_val:.4145204126834869,left_val:.5351303815841675},{features:[[11,14,6,6,-1],[14,14,3,3,2],[11,17,3,3,2]],threshold:.0024937440175563097,right_val:.5514941215515137,left_val:.4693366885185242},{features:[[3,14,6,6,-1],[3,14,3,3,2],[6,17,3,3,2]],threshold:-.012382130138576,right_val:.4681667983531952,left_val:.6791396737098694},{features:[[14,17,3,2,-1],[14,18,3,1,2]],threshold:-.005133346188813448,right_val:.5229160189628601,left_val:.3608739078044891},{features:[[3,17,3,2,-1],[3,18,3,1,2]],threshold:.0005191927775740623,right_val:.3633613884449005,left_val:.5300073027610779},{features:[[14,0,6,13,-1],[16,0,2,13,3]],threshold:.1506042033433914,right_val:.2211782038211823,left_val:.515731692314148},{features:[[0,0,6,13,-1],[2,0,2,13,3]],threshold:.007714414969086647,right_val:.5776609182357788,left_val:.4410496950149536},{features:[[10,10,7,6,-1],[10,12,7,2,3]],threshold:.009444352239370346,right_val:.375665009021759,left_val:.5401855111122131},{features:[[6,15,2,2,-1],[6,15,1,1,2],[7,16,1,1,2]],threshold:.00025006249779835343,right_val:.5607374906539917,left_val:.4368270933628082},{features:[[6,11,8,6,-1],[10,11,4,3,2],[6,14,4,3,2]],threshold:-.003307715058326721,right_val:.551823079586029,left_val:.4244799017906189},{features:[[7,6,2,2,-1],[7,6,1,1,2],[8,7,1,1,2]],threshold:.0007404891075566411,right_val:.5900576710700989,left_val:.4496962130069733},{features:[[2,2,16,6,-1],[10,2,8,3,2],[2,5,8,3,2]],threshold:.0440920516848564,right_val:.3156355023384094,left_val:.5293493270874023},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.0033639909233897924,right_val:.5848662257194519,left_val:.4483296871185303},{features:[[11,7,3,10,-1],[11,12,3,5,2]],threshold:-.003976007923483849,right_val:.5483639240264893,left_val:.4559507071971893},{features:[[6,7,3,10,-1],[6,12,3,5,2]],threshold:.0027716930489987135,right_val:.3792484104633331,left_val:.534178614616394},{features:[[10,7,3,2,-1],[11,7,1,2,3]],threshold:-.00024123019829858094,right_val:.4576973021030426,left_val:.5667188763618469},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0004942566738463938,right_val:.5628787279129028,left_val:.4421244859695435},{features:[[10,1,1,3,-1],[10,2,1,1,3]],threshold:-.0003887646889779717,right_val:.5391063094139099,left_val:.4288370907306671},{features:[[1,2,4,18,-1],[1,2,2,9,2],[3,11,2,9,2]],threshold:-.0500488989055157,right_val:.4703742861747742,left_val:.6899513006210327},{features:[[12,4,4,12,-1],[12,10,4,6,2]],threshold:-.0366354808211327,right_val:.5191826224327087,left_val:.2217779010534287},{features:[[0,0,1,6,-1],[0,2,1,2,3]],threshold:.0024273579474538565,right_val:.3497397899627686,left_val:.5136224031448364},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:.001955803018063307,right_val:.640838086605072,left_val:.4826192855834961},{features:[[8,7,4,3,-1],[8,8,4,1,3]],threshold:-.0017494610510766506,right_val:.5272685289382935,left_val:.3922835886478424},{features:[[10,7,3,2,-1],[11,7,1,2,3]],threshold:.0139550799503922,right_val:.8416504859924316,left_val:.507820188999176},{features:[[7,7,3,2,-1],[8,7,1,2,3]],threshold:-.00021896739781368524,right_val:.4314234852790833,left_val:.5520489811897278},{features:[[9,4,6,1,-1],[11,4,2,1,3]],threshold:-.0015131309628486633,right_val:.5382571220397949,left_val:.3934605121612549},{features:[[8,7,2,3,-1],[9,7,1,3,2]],threshold:-.004362280014902353,right_val:.4736475944519043,left_val:.7370628714561462},{features:[[12,7,8,6,-1],[16,7,4,3,2],[12,10,4,3,2]],threshold:.0651605874300003,right_val:.328159511089325,left_val:.5159279704093933},{features:[[0,7,8,6,-1],[0,7,4,3,2],[4,10,4,3,2]],threshold:-.0023567399475723505,right_val:.5172886252403259,left_val:.3672826886177063},{features:[[18,2,2,10,-1],[19,2,1,5,2],[18,7,1,5,2]],threshold:.0151466596871614,right_val:.6687604188919067,left_val:.5031493902206421},{features:[[0,2,6,4,-1],[3,2,3,4,2]],threshold:-.0228509604930878,right_val:.4709596931934357,left_val:.676751971244812},{features:[[9,4,6,1,-1],[11,4,2,1,3]],threshold:.004886765033006668,right_val:.4059878885746002,left_val:.5257998108863831},{features:[[7,15,2,2,-1],[7,15,1,1,2],[8,16,1,1,2]],threshold:.0017619599821045995,right_val:.6688278913497925,left_val:.4696272909641266},{features:[[11,13,1,6,-1],[11,16,1,3,2]],threshold:-.0012942519970238209,right_val:.5344281792640686,left_val:.4320712983608246},{features:[[8,13,1,6,-1],[8,16,1,3,2]],threshold:.0109299495816231,right_val:.1637486070394516,left_val:.4997706115245819},{features:[[14,3,2,1,-1],[14,3,1,1,2]],threshold:2995848990394734e-20,right_val:.5633224248886108,left_val:.4282417893409729},{features:[[8,15,2,3,-1],[8,16,2,1,3]],threshold:-.0065884361974895,right_val:.4700526893138886,left_val:.677212119102478},{features:[[12,15,7,4,-1],[12,17,7,2,2]],threshold:.0032527779694646597,right_val:.4536148905754089,left_val:.531339704990387},{features:[[4,14,12,3,-1],[4,15,12,1,3]],threshold:-.00404357397928834,right_val:.4413388967514038,left_val:.5660061836242676},{features:[[10,3,3,2,-1],[11,3,1,2,3]],threshold:-.0012523540062829852,right_val:.5356451869010925,left_val:.3731913864612579},{features:[[4,12,2,2,-1],[4,13,2,1,2]],threshold:.00019246719602961093,right_val:.3738811016082764,left_val:.5189986228942871},{features:[[10,11,4,6,-1],[10,14,4,3,2]],threshold:-.038589671254158,right_val:.51888108253479,left_val:.2956373989582062},{features:[[7,13,2,2,-1],[7,13,1,1,2],[8,14,1,1,2]],threshold:.0001548987056594342,right_val:.5509533286094666,left_val:.4347135126590729},{features:[[4,11,14,4,-1],[11,11,7,2,2],[4,13,7,2,2]],threshold:-.0337638482451439,right_val:.5195475816726685,left_val:.3230330049991608},{features:[[1,18,18,2,-1],[7,18,6,2,3]],threshold:-.008265706710517406,right_val:.4552114009857178,left_val:.5975489020347595},{features:[[11,18,2,2,-1],[12,18,1,1,2],[11,19,1,1,2]],threshold:14481440302915871e-21,right_val:.5497426986694336,left_val:.4745678007602692},{features:[[7,18,2,2,-1],[7,18,1,1,2],[8,19,1,1,2]],threshold:14951299817766994e-21,right_val:.5480644106864929,left_val:.4324473142623901},{features:[[12,18,8,2,-1],[12,19,8,1,2]],threshold:-.018741799518466,right_val:.517853319644928,left_val:.1580052971839905},{features:[[7,14,6,2,-1],[7,15,6,1,2]],threshold:.0017572239739820361,right_val:.5773764252662659,left_val:.4517636895179749},{features:[[8,12,4,8,-1],[10,12,2,4,2],[8,16,2,4,2]],threshold:-.0031391119118779898,right_val:.5460842251777649,left_val:.4149647951126099},{features:[[4,9,3,3,-1],[4,10,3,1,3]],threshold:6665677938144654e-20,right_val:.5293084979057312,left_val:.4039090871810913},{features:[[7,10,6,2,-1],[9,10,2,2,3]],threshold:.006774342153221369,right_val:.612195611000061,left_val:.4767651855945587},{features:[[5,0,4,15,-1],[7,0,2,15,2]],threshold:-.0073868161998689175,right_val:.5187280774116516,left_val:.3586258888244629},{features:[[8,6,12,14,-1],[12,6,4,14,3]],threshold:.0140409301966429,right_val:.5576155781745911,left_val:.4712139964103699},{features:[[5,16,3,3,-1],[5,17,3,1,3]],threshold:-.005525832995772362,right_val:.5039281249046326,left_val:.2661027014255524},{features:[[8,1,12,19,-1],[12,1,4,19,3]],threshold:.3868423998355866,right_val:.2525899112224579,left_val:.5144339799880981},{features:[[3,0,3,2,-1],[3,1,3,1,2]],threshold:.0001145924034062773,right_val:.5423371195793152,left_val:.4284994900226593},{features:[[10,12,4,5,-1],[10,12,2,5,2]],threshold:-.0184675697237253,right_val:.5213062167167664,left_val:.3885835111141205},{features:[[6,12,4,5,-1],[8,12,2,5,2]],threshold:-.0004590701137203723,right_val:.4235909879207611,left_val:.541256308555603},{features:[[11,11,2,2,-1],[12,11,1,1,2],[11,12,1,1,2]],threshold:.0012527540093287826,right_val:.6624091267585754,left_val:.4899305105209351},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.001491060946136713,right_val:.4040051996707916,left_val:.5286778211593628},{features:[[11,11,2,2,-1],[12,11,1,1,2],[11,12,1,1,2]],threshold:-.0007543556275777519,right_val:.4795120060443878,left_val:.6032990217208862},{features:[[7,6,4,10,-1],[7,11,4,5,2]],threshold:-.0069478838704526424,right_val:.5373504161834717,left_val:.408440113067627},{features:[[11,11,2,2,-1],[12,11,1,1,2],[11,12,1,1,2]],threshold:.0002809292054735124,right_val:.5759382247924805,left_val:.4846062958240509},{features:[[2,13,5,2,-1],[2,14,5,1,2]],threshold:.0009607371757738292,right_val:.3554979860782623,left_val:.5164741277694702},{features:[[11,11,2,2,-1],[12,11,1,1,2],[11,12,1,1,2]],threshold:-.0002688392996788025,right_val:.4731765985488892,left_val:.5677582025527954},{features:[[7,11,2,2,-1],[7,11,1,1,2],[8,12,1,1,2]],threshold:.0021599370520561934,right_val:.7070567011833191,left_val:.4731487035751343},{features:[[14,13,3,3,-1],[14,14,3,1,3]],threshold:.005623530130833387,right_val:.2781791985034943,left_val:.5240243077278137},{features:[[3,13,3,3,-1],[3,14,3,1,3]],threshold:-.005024399142712355,right_val:.5062304139137268,left_val:.2837013900279999},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:-.009761163964867592,right_val:.4934569001197815,left_val:.7400717735290527},{features:[[8,7,3,3,-1],[8,8,3,1,3]],threshold:.004151510074734688,right_val:.3407008051872253,left_val:.5119131207466125},{features:[[13,5,3,3,-1],[13,6,3,1,3]],threshold:.006246508099138737,right_val:.6579058766365051,left_val:.4923788011074066},{features:[[0,9,5,3,-1],[0,10,5,1,3]],threshold:-.007059747818857431,right_val:.503284215927124,left_val:.2434711009263992},{features:[[13,5,3,3,-1],[13,6,3,1,3]],threshold:-.0020587709732353687,right_val:.469508707523346,left_val:.590031087398529},{features:[[9,12,2,8,-1],[9,12,1,4,2],[10,16,1,4,2]],threshold:-.0024146060459315777,right_val:.5189201831817627,left_val:.3647317886352539},{features:[[11,7,2,2,-1],[12,7,1,1,2],[11,8,1,1,2]],threshold:-.0014817609917372465,right_val:.4940128028392792,left_val:.6034948229789734},{features:[[0,16,6,4,-1],[3,16,3,4,2]],threshold:-.0063016400672495365,right_val:.4560427963733673,left_val:.5818989872932434},{features:[[10,6,2,3,-1],[10,7,2,1,3]],threshold:.00347634288482368,right_val:.3483993113040924,left_val:.5217475891113281},{features:[[9,5,2,6,-1],[9,7,2,2,3]],threshold:-.0222508702427149,right_val:.5032082796096802,left_val:.2360700070858002},{features:[[12,15,8,4,-1],[12,15,4,4,2]],threshold:-.030612550675869,right_val:.4914919137954712,left_val:.6499186754226685},{features:[[0,14,8,6,-1],[4,14,4,6,2]],threshold:.013057479634881,right_val:.5683764219284058,left_val:.4413323104381561},{features:[[9,0,3,2,-1],[10,0,1,2,3]],threshold:-.0006009574281051755,right_val:.5333483219146729,left_val:.4359731078147888},{features:[[4,15,4,2,-1],[6,15,2,2,2]],threshold:-.0004151425091549754,right_val:.4326060116291046,left_val:.550406277179718},{features:[[12,7,3,13,-1],[13,7,1,13,3]],threshold:-.013776290230453,right_val:.5201548933982849,left_val:.4064112901687622},{features:[[5,7,3,13,-1],[6,7,1,13,3]],threshold:-.0322965085506439,right_val:.4977194964885712,left_val:.0473519712686539},{features:[[9,6,3,9,-1],[9,9,3,3,3]],threshold:.0535569787025452,right_val:.666693925857544,left_val:.4881733059883118},{features:[[4,4,7,12,-1],[4,10,7,6,2]],threshold:.008188954554498196,right_val:.4240820109844208,left_val:.5400037169456482},{features:[[12,12,2,2,-1],[13,12,1,1,2],[12,13,1,1,2]],threshold:.00021055320394225419,right_val:.5563852787017822,left_val:.4802047908306122},{features:[[6,12,2,2,-1],[6,12,1,1,2],[7,13,1,1,2]],threshold:-.00243827304802835,right_val:.4773685038089752,left_val:.7387793064117432},{features:[[8,9,4,2,-1],[10,9,2,1,2],[8,10,2,1,2]],threshold:.003283557016402483,right_val:.3171291947364807,left_val:.5288546085357666},{features:[[3,6,2,2,-1],[3,6,1,1,2],[4,7,1,1,2]],threshold:.00237295706756413,right_val:.7060170769691467,left_val:.4750812947750092},{features:[[16,6,3,2,-1],[16,7,3,1,2]],threshold:-.0014541699783876538,right_val:.533073902130127,left_val:.3811730146408081}],threshold:79.24907684326172},{simpleClassifiers:[{features:[[0,7,19,4,-1],[0,9,19,2,2]],threshold:.0557552389800549,right_val:.6806036829948425,left_val:.4019156992435455},{features:[[10,2,10,1,-1],[10,2,5,1,2]],threshold:.002473024884238839,right_val:.5965719819068909,left_val:.3351148962974548},{features:[[9,4,2,12,-1],[9,10,2,6,2]],threshold:-.00035031698644161224,right_val:.3482286930084229,left_val:.5557708144187927},{features:[[12,18,4,1,-1],[12,18,2,1,2]],threshold:.0005416763015091419,right_val:.5693380832672119,left_val:.426085889339447},{features:[[1,7,6,4,-1],[1,7,3,2,2],[4,9,3,2,2]],threshold:.0007719367858953774,right_val:.5433688759803772,left_val:.3494240045547485},{features:[[12,0,6,13,-1],[14,0,2,13,3]],threshold:-.0015999219613149762,right_val:.5484359264373779,left_val:.4028499126434326},{features:[[2,0,6,13,-1],[4,0,2,13,3]],threshold:-.00011832080053864047,right_val:.5425465106964111,left_val:.3806901872158051},{features:[[10,5,8,8,-1],[10,9,8,4,2]],threshold:.0003290903114248067,right_val:.5429521799087524,left_val:.262010008096695},{features:[[8,3,2,5,-1],[9,3,1,5,2]],threshold:.0002951810893137008,right_val:.5399264097213745,left_val:.379976898431778},{features:[[8,4,9,1,-1],[11,4,3,1,3]],threshold:9046671038959175e-20,right_val:.5440226197242737,left_val:.4433645009994507},{features:[[3,4,9,1,-1],[6,4,3,1,3]],threshold:15007190086180344e-21,right_val:.5409119725227356,left_val:.3719654977321625},{features:[[1,0,18,10,-1],[7,0,6,10,3]],threshold:.1393561065196991,right_val:.4479042887687683,left_val:.552539587020874},{features:[[7,17,5,3,-1],[7,18,5,1,3]],threshold:.0016461990308016539,right_val:.5772169828414917,left_val:.4264501035213471},{features:[[7,11,6,1,-1],[9,11,2,1,3]],threshold:.0004998443182557821,right_val:.5685871243476868,left_val:.4359526038169861},{features:[[2,2,3,2,-1],[2,3,3,1,2]],threshold:-.001097128028050065,right_val:.5205408930778503,left_val:.3390136957168579},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0006691989256069064,right_val:.598065972328186,left_val:.4557456076145172},{features:[[6,10,3,6,-1],[6,13,3,3,2]],threshold:.0008647104259580374,right_val:.2944033145904541,left_val:.5134841203689575},{features:[[11,4,2,4,-1],[11,4,1,4,2]],threshold:-.0002718259929679334,right_val:.5377181172370911,left_val:.3906578123569489},{features:[[7,4,2,4,-1],[8,4,1,4,2]],threshold:3024949910468422e-20,right_val:.5225688815116882,left_val:.3679609894752502},{features:[[9,6,2,4,-1],[9,6,1,4,2]],threshold:-.008522589690983295,right_val:.4892365038394928,left_val:.7293102145195007},{features:[[6,13,8,3,-1],[6,14,8,1,3]],threshold:.0016705560265108943,right_val:.5696138143539429,left_val:.43453249335289},{features:[[9,15,3,4,-1],[10,15,1,4,3]],threshold:-.0071433838456869125,right_val:.5225623846054077,left_val:.2591280043125153},{features:[[9,2,2,17,-1],[10,2,1,17,2]],threshold:-.0163193698972464,right_val:.4651575982570648,left_val:.6922279000282288},{features:[[7,0,6,1,-1],[9,0,2,1,3]],threshold:.004803426098078489,right_val:.3286302983760834,left_val:.5352262854576111},{features:[[8,15,3,4,-1],[9,15,1,4,3]],threshold:-.0075421929359436035,right_val:.5034546256065369,left_val:.2040544003248215},{features:[[7,13,7,3,-1],[7,14,7,1,3]],threshold:-.0143631100654602,right_val:.4889059066772461,left_val:.6804888844490051},{features:[[8,16,3,3,-1],[9,16,1,3,3]],threshold:.0008906358852982521,right_val:.3895480930805206,left_val:.5310695767402649},{features:[[6,2,8,10,-1],[6,7,8,5,2]],threshold:-.004406019113957882,right_val:.4372426867485046,left_val:.5741562843322754},{features:[[2,5,8,8,-1],[2,9,8,4,2]],threshold:-.0001886254030978307,right_val:.5098205208778381,left_val:.2831785976886749},{features:[[14,16,2,2,-1],[14,17,2,1,2]],threshold:-.0037979281041771173,right_val:.5246580243110657,left_val:.3372507989406586},{features:[[4,16,2,2,-1],[4,17,2,1,2]],threshold:.00014627049677073956,right_val:.391171008348465,left_val:.5306674242019653},{features:[[10,11,4,6,-1],[10,14,4,3,2]],threshold:-49164638767251745e-21,right_val:.3942720890045166,left_val:.5462496280670166},{features:[[6,11,4,6,-1],[6,14,4,3,2]],threshold:-.0335825011134148,right_val:.5048211812973022,left_val:.2157824039459229},{features:[[10,14,1,3,-1],[10,15,1,1,3]],threshold:-.0035339309833943844,right_val:.4872696995735169,left_val:.6465312242507935},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.005014411173760891,right_val:.6248074769973755,left_val:.4617668092250824},{features:[[10,0,4,6,-1],[12,0,2,3,2],[10,3,2,3,2]],threshold:.0188173707574606,right_val:.2000052034854889,left_val:.5220689177513123},{features:[[0,3,20,2,-1],[0,4,20,1,2]],threshold:-.001343433978036046,right_val:.53016197681427,left_val:.4014537930488586},{features:[[12,0,8,2,-1],[16,0,4,1,2],[12,1,4,1,2]],threshold:.001755796023644507,right_val:.5653169751167297,left_val:.4794039130210877},{features:[[2,12,10,8,-1],[2,16,10,4,2]],threshold:-.0956374630331993,right_val:.5006706714630127,left_val:.2034195065498352},{features:[[17,7,2,10,-1],[18,7,1,5,2],[17,12,1,5,2]],threshold:-.0222412291914225,right_val:.5046340227127075,left_val:.7672473192214966},{features:[[1,7,2,10,-1],[1,7,1,5,2],[2,12,1,5,2]],threshold:-.0155758196488023,right_val:.4755851030349731,left_val:.7490342259407043},{features:[[15,10,3,6,-1],[15,12,3,2,3]],threshold:.005359911825507879,right_val:.4004670977592468,left_val:.5365303754806519},{features:[[4,4,6,2,-1],[6,4,2,2,3]],threshold:-.0217634998261929,right_val:.4964174926280975,left_val:.0740154981613159},{features:[[0,5,20,6,-1],[0,7,20,2,3]],threshold:-.165615901350975,right_val:.5218086242675781,left_val:.2859103083610535},{features:[[0,0,8,2,-1],[0,0,4,1,2],[4,1,4,1,2]],threshold:.0001646132004680112,right_val:.5380793213844299,left_val:.4191615879535675},{features:[[1,0,18,4,-1],[7,0,6,4,3]],threshold:-.008907750248908997,right_val:.4877404868602753,left_val:.6273192763328552},{features:[[1,13,6,2,-1],[1,14,6,1,2]],threshold:.0008634644909761846,right_val:.3671025931835175,left_val:.5159940719604492},{features:[[10,8,3,4,-1],[11,8,1,4,3]],threshold:-.0013751760125160217,right_val:.4579083919525147,left_val:.5884376764297485},{features:[[6,1,6,1,-1],[8,1,2,1,3]],threshold:-.0014081239933148026,right_val:.5139945149421692,left_val:.3560509979724884},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.003934288863092661,right_val:.466427206993103,left_val:.5994288921356201},{features:[[1,6,18,2,-1],[10,6,9,2,2]],threshold:-.0319669283926487,right_val:.5144183039665222,left_val:.3345462083816528},{features:[[15,11,1,2,-1],[15,12,1,1,2]],threshold:-15089280168467667e-21,right_val:.441405713558197,left_val:.5582656264305115},{features:[[6,5,1,2,-1],[6,6,1,1,2]],threshold:.0005199447041377425,right_val:.6168993711471558,left_val:.4623680114746094},{features:[[13,4,1,3,-1],[13,5,1,1,3]],threshold:-.0034220460802316666,right_val:.4974805116653442,left_val:.6557074785232544},{features:[[2,15,1,2,-1],[2,16,1,1,2]],threshold:.00017723299970384687,right_val:.3901908099651337,left_val:.5269501805305481},{features:[[12,4,4,3,-1],[12,5,4,1,3]],threshold:.0015716759953647852,right_val:.5790457725524902,left_val:.4633373022079468},{features:[[0,0,7,3,-1],[0,1,7,1,3]],threshold:-.00890413299202919,right_val:.5053591132164001,left_val:.2689608037471771},{features:[[9,12,6,2,-1],[9,12,3,2,2]],threshold:.00040677518700249493,right_val:.4329898953437805,left_val:.5456603169441223},{features:[[5,4,2,3,-1],[5,5,2,1,3]],threshold:.0067604780197143555,right_val:.6689761877059937,left_val:.4648993909358978},{features:[[18,4,2,3,-1],[18,5,2,1,3]],threshold:.0029100088868290186,right_val:.3377839922904968,left_val:.5309703946113586},{features:[[3,0,8,6,-1],[3,2,8,2,3]],threshold:.0013885459629818797,right_val:.5349133014678955,left_val:.4074738919734955},{features:[[0,2,20,6,-1],[10,2,10,3,2],[0,5,10,3,2]],threshold:-.0767642632126808,right_val:.522824227809906,left_val:.1992176026105881},{features:[[4,7,2,4,-1],[5,7,1,4,2]],threshold:-.00022688310127705336,right_val:.4253072142601013,left_val:.5438501834869385},{features:[[3,10,15,2,-1],[8,10,5,2,3]],threshold:-.006309415213763714,right_val:.5378909707069397,left_val:.4259178936481476},{features:[[3,0,12,11,-1],[9,0,6,11,2]],threshold:-.1100727990269661,right_val:.4721749126911163,left_val:.6904156804084778},{features:[[13,0,2,6,-1],[13,0,1,6,2]],threshold:.0002861965913325548,right_val:.5548306107521057,left_val:.4524914920330048},{features:[[0,19,2,1,-1],[1,19,1,1,2]],threshold:2942532955785282e-20,right_val:.4236463904380798,left_val:.5370373725891113},{features:[[16,10,4,10,-1],[18,10,2,5,2],[16,15,2,5,2]],threshold:-.0248865708708763,right_val:.4969303905963898,left_val:.6423557996749878},{features:[[4,8,10,3,-1],[4,9,10,1,3]],threshold:.0331488512456417,right_val:.1613811999559403,left_val:.4988475143909454},{features:[[14,12,3,3,-1],[14,13,3,1,3]],threshold:.0007849169196560979,right_val:.4223009049892426,left_val:.541602611541748},{features:[[0,10,4,10,-1],[0,10,2,5,2],[2,15,2,5,2]],threshold:.004708718974143267,right_val:.6027557849884033,left_val:.4576328992843628},{features:[[18,3,2,6,-1],[18,5,2,2,3]],threshold:.0024144479539245367,right_val:.4422498941421509,left_val:.530897319316864},{features:[[6,6,1,3,-1],[6,7,1,1,3]],threshold:.0019523180089890957,right_val:.666332483291626,left_val:.4705634117126465},{features:[[7,7,7,2,-1],[7,8,7,1,2]],threshold:.0013031980488449335,right_val:.5526962280273438,left_val:.4406126141548157},{features:[[0,3,2,6,-1],[0,5,2,2,3]],threshold:.004473549779504538,right_val:.3301498889923096,left_val:.5129023790359497},{features:[[11,1,3,1,-1],[12,1,1,1,3]],threshold:-.002665286883711815,right_val:.5175036191940308,left_val:.3135471045970917},{features:[[5,0,2,6,-1],[6,0,1,6,2]],threshold:.0001366677024634555,right_val:.530687689781189,left_val:.4119370877742767},{features:[[1,1,18,14,-1],[7,1,6,14,3]],threshold:-.0171264503151178,right_val:.4836578965187073,left_val:.6177806258201599},{features:[[4,6,8,3,-1],[8,6,4,3,2]],threshold:-.0002660143072716892,right_val:.5169736742973328,left_val:.3654330968856812},{features:[[9,12,6,2,-1],[9,12,3,2,2]],threshold:-.022932380437851,right_val:.5163992047309875,left_val:.349091500043869},{features:[[5,12,6,2,-1],[8,12,3,2,2]],threshold:.0023316550068557262,right_val:.3709389865398407,left_val:.5166299939155579},{features:[[10,7,3,5,-1],[11,7,1,5,3]],threshold:.016925660893321,right_val:.8053988218307495,left_val:.501473605632782},{features:[[7,7,3,5,-1],[8,7,1,5,3]],threshold:-.008985882624983788,right_val:.465702086687088,left_val:.6470788717269897},{features:[[13,0,3,10,-1],[14,0,1,10,3]],threshold:-.0118746999651194,right_val:.5258755087852478,left_val:.3246378898620606},{features:[[4,11,3,2,-1],[4,12,3,1,2]],threshold:.00019350569345988333,right_val:.3839643895626068,left_val:.5191941857337952},{features:[[17,3,3,6,-1],[18,3,1,6,3]],threshold:.005871349014341831,right_val:.6187043190002441,left_val:.4918133914470673},{features:[[1,8,18,10,-1],[1,13,18,5,2]],threshold:-.2483879029750824,right_val:.4988150000572205,left_val:.1836802959442139},{features:[[13,0,3,10,-1],[14,0,1,10,3]],threshold:.0122560001909733,right_val:.3632029891014099,left_val:.5227053761482239},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.0008399017970077693,right_val:.5774148106575012,left_val:.4490250051021576},{features:[[16,3,3,7,-1],[17,3,1,7,3]],threshold:.002540736924856901,right_val:.5858299136161804,left_val:.4804787039756775},{features:[[4,0,3,10,-1],[5,0,1,10,3]],threshold:-.0148224299773574,right_val:.5023537278175354,left_val:.2521049976348877},{features:[[16,3,3,7,-1],[17,3,1,7,3]],threshold:-.005797395948320627,right_val:.4853715002536774,left_val:.5996695756912231},{features:[[0,9,1,2,-1],[0,10,1,1,2]],threshold:.000726621481589973,right_val:.3671779930591583,left_val:.5153716802597046},{features:[[18,1,2,10,-1],[18,1,1,10,2]],threshold:-.0172325801104307,right_val:.4994656145572662,left_val:.6621719002723694},{features:[[0,1,2,10,-1],[1,1,1,10,2]],threshold:.007862408645451069,right_val:.6256101727485657,left_val:.4633395075798035},{features:[[10,16,3,4,-1],[11,16,1,4,3]],threshold:-.004734362009912729,right_val:.5281885266304016,left_val:.3615573048591614},{features:[[2,8,3,3,-1],[3,8,1,3,3]],threshold:.0008304847870022058,right_val:.5550957918167114,left_val:.4442889094352722},{features:[[11,0,2,6,-1],[12,0,1,3,2],[11,3,1,3,2]],threshold:.00766021991148591,right_val:.2613354921340942,left_val:.5162935256958008},{features:[[7,0,2,6,-1],[7,0,1,3,2],[8,3,1,3,2]],threshold:-.004104837775230408,right_val:.5019031763076782,left_val:.2789632081985474},{features:[[16,3,3,7,-1],[17,3,1,7,3]],threshold:.004851257894188166,right_val:.5661668181419373,left_val:.4968984127044678},{features:[[1,3,3,7,-1],[2,3,1,7,3]],threshold:.0009989645332098007,right_val:.5551813244819641,left_val:.4445607960224152},{features:[[14,1,6,16,-1],[16,1,2,16,3]],threshold:-.2702363133430481,right_val:.515131413936615,left_val:.0293882098048925},{features:[[0,1,6,16,-1],[2,1,2,16,3]],threshold:-.0130906803533435,right_val:.4447459876537323,left_val:.5699399709701538},{features:[[2,0,16,8,-1],[10,0,8,4,2],[2,4,8,4,2]],threshold:-.009434279054403305,right_val:.5487895011901855,left_val:.4305466115474701},{features:[[6,8,5,3,-1],[6,9,5,1,3]],threshold:-.0015482039889320731,right_val:.512808084487915,left_val:.3680317103862763},{features:[[9,7,3,3,-1],[10,7,1,3,3]],threshold:.005374613218009472,right_val:.6101555824279785,left_val:.4838916957378388},{features:[[8,8,4,3,-1],[8,9,4,1,3]],threshold:.0015786769799888134,right_val:.4118548035621643,left_val:.5325223207473755},{features:[[9,6,2,4,-1],[9,6,1,4,2]],threshold:.003685605013743043,right_val:.6252303123474121,left_val:.4810948073863983},{features:[[0,7,15,1,-1],[5,7,5,1,3]],threshold:.009388701990246773,right_val:.3629410862922669,left_val:.520022988319397},{features:[[8,2,7,9,-1],[8,5,7,3,3]],threshold:.0127926301211119,right_val:.673801600933075,left_val:.4961709976196289},{features:[[1,7,16,4,-1],[1,7,8,2,2],[9,9,8,2,2]],threshold:-.003366104094311595,right_val:.5283598899841309,left_val:.4060279130935669},{features:[[6,12,8,2,-1],[6,13,8,1,2]],threshold:.00039771420415490866,right_val:.5900775194168091,left_val:.4674113988876343},{features:[[8,11,3,3,-1],[8,12,3,1,3]],threshold:.0014868030557408929,right_val:.6082053780555725,left_val:.4519116878509522},{features:[[4,5,14,10,-1],[11,5,7,5,2],[4,10,7,5,2]],threshold:-.0886867493391037,right_val:.5180991888046265,left_val:.2807899117469788},{features:[[4,12,3,2,-1],[4,13,3,1,2]],threshold:-7429611287079751e-20,right_val:.408762514591217,left_val:.5295584201812744},{features:[[9,11,6,1,-1],[11,11,2,1,3]],threshold:-14932939848222304e-21,right_val:.4538542926311493,left_val:.5461400151252747},{features:[[4,9,7,6,-1],[4,11,7,2,3]],threshold:.005916223861277103,right_val:.4192134141921997,left_val:.5329161286354065},{features:[[7,10,6,3,-1],[7,11,6,1,3]],threshold:.001114164013415575,right_val:.5706217288970947,left_val:.4512017965316773},{features:[[9,11,2,2,-1],[9,12,2,1,2]],threshold:8924936264520511e-20,right_val:.5897638201713562,left_val:.4577805995941162},{features:[[0,5,20,6,-1],[0,7,20,2,3]],threshold:.0025319510605186224,right_val:.3357639014720917,left_val:.5299603939056396},{features:[[6,4,6,1,-1],[8,4,2,1,3]],threshold:.0124262003228068,right_val:.1346601992845535,left_val:.4959059059619904},{features:[[9,11,6,1,-1],[11,11,2,1,3]],threshold:.0283357501029968,right_val:.0006104363710619509,left_val:.5117079019546509},{features:[[5,11,6,1,-1],[7,11,2,1,3]],threshold:.006616588216274977,right_val:.7011628150939941,left_val:.4736349880695343},{features:[[10,16,3,4,-1],[11,16,1,4,3]],threshold:.008046876639127731,right_val:.3282819986343384,left_val:.5216417908668518},{features:[[8,7,3,3,-1],[9,7,1,3,3]],threshold:-.001119398046284914,right_val:.4563739001750946,left_val:.5809860825538635},{features:[[2,12,16,8,-1],[2,16,16,4,2]],threshold:.0132775902748108,right_val:.4103901088237763,left_val:.5398362278938293},{features:[[0,15,15,2,-1],[0,16,15,1,2]],threshold:.0004879473999608308,right_val:.5410590767860413,left_val:.424928605556488},{features:[[15,4,5,6,-1],[15,6,5,2,3]],threshold:.0112431701272726,right_val:.3438215851783752,left_val:.526996374130249},{features:[[9,5,2,4,-1],[10,5,1,4,2]],threshold:-.0008989666821435094,right_val:.4456613063812256,left_val:.5633075833320618},{features:[[8,10,9,6,-1],[8,12,9,2,3]],threshold:.006667715962976217,right_val:.4362679123878479,left_val:.5312889218330383},{features:[[2,19,15,1,-1],[7,19,5,1,3]],threshold:.0289472993463278,right_val:.657579779624939,left_val:.4701794981956482},{features:[[10,16,3,4,-1],[11,16,1,4,3]],threshold:-.0234000496566296,right_val:.5137398838996887,left_val:0},{features:[[0,15,20,4,-1],[0,17,20,2,2]],threshold:-.0891170501708984,right_val:.4942430853843689,left_val:.0237452797591686},{features:[[10,16,3,4,-1],[11,16,1,4,3]],threshold:-.0140546001493931,right_val:.511751115322113,left_val:.3127323091030121},{features:[[7,16,3,4,-1],[8,16,1,4,3]],threshold:.008123939856886864,right_val:.2520025968551636,left_val:.50090491771698},{features:[[9,16,3,3,-1],[9,17,3,1,3]],threshold:-.004996465053409338,right_val:.4927811920642853,left_val:.6387143731117249},{features:[[8,11,4,6,-1],[8,14,4,3,2]],threshold:.0031253970228135586,right_val:.3680452108383179,left_val:.5136849880218506},{features:[[9,6,2,12,-1],[9,10,2,4,3]],threshold:.006766964215785265,right_val:.4363631904125214,left_val:.5509843826293945},{features:[[8,17,4,3,-1],[8,18,4,1,3]],threshold:-.002371144015341997,right_val:.4586946964263916,left_val:.6162335276603699},{features:[[9,18,8,2,-1],[13,18,4,1,2],[9,19,4,1,2]],threshold:-.005352279171347618,right_val:.4920490980148315,left_val:.6185457706451416},{features:[[1,18,8,2,-1],[1,19,8,1,2]],threshold:-.0159688591957092,right_val:.4983252882957459,left_val:.1382617950439453},{features:[[13,5,6,15,-1],[15,5,2,15,3]],threshold:.004767606034874916,right_val:.5490046143531799,left_val:.4688057899475098},{features:[[9,8,2,2,-1],[9,9,2,1,2]],threshold:-.002471469109877944,right_val:.5003952980041504,left_val:.2368514984846115},{features:[[9,5,2,3,-1],[9,5,1,3,2]],threshold:-.0007103378884494305,right_val:.4721533060073853,left_val:.5856394171714783},{features:[[1,5,6,15,-1],[3,5,2,15,3]],threshold:-.1411755979061127,right_val:.4961591064929962,left_val:.0869000628590584},{features:[[4,1,14,8,-1],[11,1,7,4,2],[4,5,7,4,2]],threshold:.1065180972218514,right_val:.1741005033254623,left_val:.5138837099075317},{features:[[2,4,4,16,-1],[2,4,2,8,2],[4,12,2,8,2]],threshold:-.0527447499334812,right_val:.4772881865501404,left_val:.7353636026382446},{features:[[12,4,3,12,-1],[12,10,3,6,2]],threshold:-.00474317604675889,right_val:.5292701721191406,left_val:.3884406089782715},{features:[[4,5,10,12,-1],[4,5,5,6,2],[9,11,5,6,2]],threshold:.0009967676596716046,right_val:.4003424048423767,left_val:.5223492980003357},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.00802841316908598,right_val:.7212964296340942,left_val:.4959106147289276},{features:[[5,4,2,3,-1],[5,5,2,1,3]],threshold:.0008602585876360536,right_val:.55384761095047,left_val:.4444884061813355},{features:[[12,2,4,10,-1],[14,2,2,5,2],[12,7,2,5,2]],threshold:.0009319150121882558,right_val:.4163244068622589,left_val:.539837121963501},{features:[[6,4,7,3,-1],[6,5,7,1,3]],threshold:-.002508206060156226,right_val:.456250011920929,left_val:.5854265093803406},{features:[[2,0,18,2,-1],[11,0,9,1,2],[2,1,9,1,2]],threshold:-.0021378761157393456,right_val:.5280259251594543,left_val:.4608069062232971},{features:[[0,0,18,2,-1],[0,0,9,1,2],[9,1,9,1,2]],threshold:-.002154604997485876,right_val:.5255997180938721,left_val:.3791126906871796},{features:[[13,13,4,6,-1],[15,13,2,3,2],[13,16,2,3,2]],threshold:-.007621400989592075,right_val:.4952073991298676,left_val:.5998609066009521},{features:[[3,13,4,6,-1],[3,13,2,3,2],[5,16,2,3,2]],threshold:.002205536002293229,right_val:.5588530898094177,left_val:.4484206140041351},{features:[[10,12,2,6,-1],[10,15,2,3,2]],threshold:.0012586950324475765,right_val:.4423840939998627,left_val:.5450747013092041},{features:[[5,9,10,10,-1],[5,9,5,5,2],[10,14,5,5,2]],threshold:-.005092672072350979,right_val:.5263035893440247,left_val:.4118275046348572},{features:[[11,4,4,2,-1],[13,4,2,1,2],[11,5,2,1,2]],threshold:-.0025095739401876926,right_val:.4998494982719421,left_val:.5787907838821411},{features:[[7,12,6,8,-1],[10,12,3,8,2]],threshold:-.0773275569081306,right_val:.481112003326416,left_val:.8397865891456604},{features:[[12,2,4,10,-1],[14,2,2,5,2],[12,7,2,5,2]],threshold:-.041485819965601,right_val:.5176993012428284,left_val:.240861102938652},{features:[[8,11,2,1,-1],[9,11,1,1,2]],threshold:.00010355669655837119,right_val:.5417054295539856,left_val:.4355360865592957},{features:[[10,5,1,12,-1],[10,9,1,4,3]],threshold:.0013255809899419546,right_val:.4894095063209534,left_val:.5453971028327942},{features:[[0,11,6,9,-1],[3,11,3,9,2]],threshold:-.00805987324565649,right_val:.4577918946743012,left_val:.5771024227142334},{features:[[12,2,4,10,-1],[14,2,2,5,2],[12,7,2,5,2]],threshold:.019058620557189,right_val:.3400475084781647,left_val:.5169867873191833},{features:[[4,2,4,10,-1],[4,2,2,5,2],[6,7,2,5,2]],threshold:-.0350578911602497,right_val:.5000503063201904,left_val:.2203243970870972},{features:[[11,4,4,2,-1],[13,4,2,1,2],[11,5,2,1,2]],threshold:.005729605909436941,right_val:.6597570776939392,left_val:.5043408274650574},{features:[[0,14,6,3,-1],[0,15,6,1,3]],threshold:-.0116483299061656,right_val:.4996652901172638,left_val:.2186284959316254},{features:[[11,4,4,2,-1],[13,4,2,1,2],[11,5,2,1,2]],threshold:.0014544479781761765,right_val:.5503727793693542,left_val:.5007681846618652},{features:[[6,1,3,2,-1],[7,1,1,2,3]],threshold:-.00025030909455381334,right_val:.524167001247406,left_val:.4129841029644013},{features:[[11,4,4,2,-1],[13,4,2,1,2],[11,5,2,1,2]],threshold:-.000829072727356106,right_val:.4974496066570282,left_val:.541286826133728},{features:[[5,4,4,2,-1],[5,4,2,1,2],[7,5,2,1,2]],threshold:.0010862209601327777,right_val:.5879228711128235,left_val:.460552990436554},{features:[[13,0,2,12,-1],[14,0,1,6,2],[13,6,1,6,2]],threshold:.0002000050008064136,right_val:.4705209136009216,left_val:.5278854966163635},{features:[[6,0,3,10,-1],[7,0,1,10,3]],threshold:.0029212920926511288,right_val:.375553697347641,left_val:.5129609704017639},{features:[[3,0,17,8,-1],[3,4,17,4,2]],threshold:.0253874007612467,right_val:.5790768265724182,left_val:.4822691977024078},{features:[[0,4,20,4,-1],[0,6,20,2,2]],threshold:-.00319684692658484,right_val:.3962840139865875,left_val:.5248395204544067}],threshold:87.69602966308594},{simpleClassifiers:[{features:[[0,3,8,2,-1],[4,3,4,2,2]],threshold:.005803173873573542,right_val:.596198320388794,left_val:.3498983979225159},{features:[[8,11,4,3,-1],[8,12,4,1,3]],threshold:-.009000306949019432,right_val:.4478552043437958,left_val:.6816636919975281},{features:[[5,7,6,4,-1],[5,7,3,2,2],[8,9,3,2,2]],threshold:-.00115496595390141,right_val:.3578251004219055,left_val:.5585706233978271},{features:[[8,3,4,9,-1],[8,6,4,3,3]],threshold:-.0011069850297644734,right_val:.3050428032875061,left_val:.5365036129951477},{features:[[8,15,1,4,-1],[8,17,1,2,2]],threshold:.00010308309720130637,right_val:.5344635844230652,left_val:.363909512758255},{features:[[4,5,12,7,-1],[8,5,4,7,3]],threshold:-.005098483990877867,right_val:.5504264831542969,left_val:.2859157025814056},{features:[[4,2,4,10,-1],[4,2,2,5,2],[6,7,2,5,2]],threshold:.0008257220033556223,right_val:.3476041853427887,left_val:.5236523747444153},{features:[[3,0,17,2,-1],[3,1,17,1,2]],threshold:.009978332556784153,right_val:.621964693069458,left_val:.4750322103500366},{features:[[2,2,16,15,-1],[2,7,16,5,3]],threshold:-.0374025292694569,right_val:.527806282043457,left_val:.334337592124939},{features:[[15,2,5,2,-1],[15,3,5,1,2]],threshold:.0048548257909715176,right_val:.3700444102287293,left_val:.5192180871963501},{features:[[9,3,2,2,-1],[10,3,1,2,2]],threshold:-.001866447040811181,right_val:.5091944932937622,left_val:.2929843962192535},{features:[[4,5,16,15,-1],[4,10,16,5,3]],threshold:.0168888904154301,right_val:.5431225895881653,left_val:.3686845898628235},{features:[[7,13,5,6,-1],[7,16,5,3,2]],threshold:-.005837262142449617,right_val:.5221335887908936,left_val:.3632183969020844},{features:[[10,7,3,2,-1],[11,7,1,2,3]],threshold:-.00147137395106256,right_val:.4700650870800018,left_val:.5870683789253235},{features:[[8,3,3,1,-1],[9,3,1,1,3]],threshold:-.0011522950371727347,right_val:.5140954256057739,left_val:.3195894956588745},{features:[[9,16,3,3,-1],[9,17,3,1,3]],threshold:-.004256030078977346,right_val:.4814921021461487,left_val:.6301859021186829},{features:[[0,2,5,2,-1],[0,3,5,1,2]],threshold:-.006737829186022282,right_val:.5025808215141296,left_val:.1977048069238663},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:.0113826701417565,right_val:.6867045760154724,left_val:.495413213968277},{features:[[1,7,12,1,-1],[5,7,4,1,3]],threshold:.005179470870643854,right_val:.3350647985935211,left_val:.5164427757263184},{features:[[7,5,6,14,-1],[7,12,6,7,2]],threshold:-.1174378991127014,right_val:.5234413743019104,left_val:.2315246015787125},{features:[[0,0,8,10,-1],[0,0,4,5,2],[4,5,4,5,2]],threshold:.0287034492939711,right_val:.6722521185874939,left_val:.4664297103881836},{features:[[9,1,3,2,-1],[10,1,1,2,3]],threshold:.004823103081434965,right_val:.2723532915115356,left_val:.5220875144004822},{features:[[8,1,3,2,-1],[9,1,1,2,3]],threshold:.0026798530016094446,right_val:.2906948924064636,left_val:.5079277157783508},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:.008050408214330673,right_val:.6395021080970764,left_val:.4885950982570648},{features:[[7,4,6,16,-1],[7,12,6,8,2]],threshold:.004805495962500572,right_val:.365666389465332,left_val:.5197256803512573},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:-.0022420159075409174,right_val:.4763701856136322,left_val:.6153467893600464},{features:[[2,3,2,6,-1],[2,5,2,2,3]],threshold:-.0137577103450894,right_val:.5030903220176697,left_val:.2637344896793366},{features:[[14,2,6,9,-1],[14,5,6,3,3]],threshold:-.1033829972147942,right_val:.5182461142539978,left_val:.2287521958351135},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:-.009443208575248718,right_val:.4694949090480804,left_val:.6953303813934326},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:.0008027118165045977,right_val:.4268783926963806,left_val:.5450655221939087},{features:[[5,5,2,3,-1],[5,6,2,1,3]],threshold:-.004194566980004311,right_val:.4571642875671387,left_val:.6091387867927551},{features:[[13,11,3,6,-1],[13,13,3,2,3]],threshold:.0109422104433179,right_val:.3284547030925751,left_val:.5241063237190247},{features:[[3,14,2,6,-1],[3,17,2,3,2]],threshold:-.0005784106906503439,right_val:.4179368913173676,left_val:.5387929081916809},{features:[[14,3,6,2,-1],[14,4,6,1,2]],threshold:-.002088862005621195,right_val:.5301715731620789,left_val:.4292691051959992},{features:[[0,8,16,2,-1],[0,9,16,1,2]],threshold:.0032383969519287348,right_val:.5220744013786316,left_val:.379234790802002},{features:[[14,3,6,2,-1],[14,4,6,1,2]],threshold:.004907502792775631,right_val:.4126757979393005,left_val:.5237283110618591},{features:[[0,0,5,6,-1],[0,2,5,2,3]],threshold:-.0322779417037964,right_val:.4994502067565918,left_val:.1947655975818634},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:-.008971123024821281,right_val:.4929032027721405,left_val:.6011285185813904},{features:[[4,11,3,6,-1],[4,13,3,2,3]],threshold:.0153210898861289,right_val:.2039822041988373,left_val:.5009753704071045},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:.002085556974634528,right_val:.5721694827079773,left_val:.4862189888954163},{features:[[9,5,1,3,-1],[9,6,1,1,3]],threshold:.005061502102762461,right_val:.1801805943250656,left_val:.5000218749046326},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:-.0037174751050770283,right_val:.4897592961788178,left_val:.5530117154121399},{features:[[6,6,8,12,-1],[6,12,8,6,2]],threshold:-.0121705001220107,right_val:.5383723974227905,left_val:.4178605973720551},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:.004624839872121811,right_val:.5761327147483826,left_val:.4997169971466065},{features:[[5,12,9,2,-1],[8,12,3,2,3]],threshold:-.0002104042941937223,right_val:.4097681045532227,left_val:.5331807136535645},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:-.0146417804062366,right_val:.5051776170730591,left_val:.5755925178527832},{features:[[4,5,4,3,-1],[4,6,4,1,3]],threshold:.00331994891166687,right_val:.6031805872917175,left_val:.4576976895332336},{features:[[6,6,9,2,-1],[9,6,3,2,3]],threshold:.003723687957972288,right_val:.541588306427002,left_val:.4380396902561188},{features:[[4,11,1,3,-1],[4,12,1,1,3]],threshold:.0008295116131193936,right_val:.3702219128608704,left_val:.5163031816482544},{features:[[14,12,6,6,-1],[14,12,3,6,2]],threshold:-.0114084901288152,right_val:.4862565100193024,left_val:.6072946786880493},{features:[[7,0,3,7,-1],[8,0,1,7,3]],threshold:-.004532012157142162,right_val:.5088962912559509,left_val:.3292475938796997},{features:[[9,8,3,3,-1],[10,8,1,3,3]],threshold:.00512760179117322,right_val:.6122708916664124,left_val:.4829767942428589},{features:[[8,8,3,3,-1],[9,8,1,3,3]],threshold:.00985831581056118,right_val:.6556177139282227,left_val:.4660679996013641},{features:[[5,10,11,3,-1],[5,11,11,1,3]],threshold:.036985918879509,right_val:.1690472066402435,left_val:.5204849243164062},{features:[[5,7,10,1,-1],[10,7,5,1,2]],threshold:.004649116192013025,right_val:.3725225031375885,left_val:.5167322158813477},{features:[[9,7,3,2,-1],[10,7,1,2,3]],threshold:-.004266470205038786,right_val:.4987342953681946,left_val:.6406493186950684},{features:[[8,7,3,2,-1],[9,7,1,2,3]],threshold:-.0004795659042429179,right_val:.4464873969554901,left_val:.5897293090820312},{features:[[11,9,4,2,-1],[11,9,2,2,2]],threshold:.0036827160511165857,right_val:.347266286611557,left_val:.5441560745239258},{features:[[5,9,4,2,-1],[7,9,2,2,2]],threshold:-.0100598800927401,right_val:.500482976436615,left_val:.2143162935972214},{features:[[14,10,2,4,-1],[14,12,2,2,2]],threshold:-.0003036184061784297,right_val:.4590323865413666,left_val:.538642406463623},{features:[[7,7,3,2,-1],[8,7,1,2,3]],threshold:-.0014545479789376259,right_val:.4497095048427582,left_val:.5751184225082397},{features:[[14,17,6,3,-1],[14,18,6,1,3]],threshold:.0016515209572389722,right_val:.4238520860671997,left_val:.5421937704086304},{features:[[4,5,12,12,-1],[4,5,6,6,2],[10,11,6,6,2]],threshold:-.007846863940358162,right_val:.5258157253265381,left_val:.4077920913696289},{features:[[6,9,8,8,-1],[10,9,4,4,2],[6,13,4,4,2]],threshold:-.005125985015183687,right_val:.5479453206062317,left_val:.422927588224411},{features:[[0,4,15,4,-1],[5,4,5,4,3]],threshold:-.0368909612298012,right_val:.4674678146839142,left_val:.6596375703811646},{features:[[13,2,4,1,-1],[13,2,2,1,2]],threshold:.0002403563994448632,right_val:.5573202967643738,left_val:.4251135885715485},{features:[[4,12,2,2,-1],[4,13,2,1,2]],threshold:-15150169929256663e-21,right_val:.4074114859104157,left_val:.5259246826171875},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.0022108471021056175,right_val:.5886352062225342,left_val:.4671722948551178},{features:[[9,13,2,3,-1],[9,14,2,1,3]],threshold:-.0011568620102480054,right_val:.4487161934375763,left_val:.5711066126823425},{features:[[13,11,2,3,-1],[13,12,2,1,3]],threshold:.004999629221856594,right_val:.2898327112197876,left_val:.5264198184013367},{features:[[7,12,4,4,-1],[7,12,2,2,2],[9,14,2,2,2]],threshold:-.0014656189596280456,right_val:.5197871923446655,left_val:.3891738057136536},{features:[[10,11,2,2,-1],[11,11,1,1,2],[10,12,1,1,2]],threshold:-.0011975039960816503,right_val:.4927955865859985,left_val:.5795872807502747},{features:[[8,17,3,2,-1],[9,17,1,2,3]],threshold:-.0044954330660402775,right_val:.5012555122375488,left_val:.2377603054046631},{features:[[10,11,2,2,-1],[11,11,1,1,2],[10,12,1,1,2]],threshold:.00014997160178609192,right_val:.5617607831954956,left_val:.4876626133918762},{features:[[0,17,6,3,-1],[0,18,6,1,3]],threshold:.002639150945469737,right_val:.3765509128570557,left_val:.516808807849884},{features:[[10,11,2,2,-1],[11,11,1,1,2],[10,12,1,1,2]],threshold:-.0002936813107226044,right_val:.4874630868434906,left_val:.5446649193763733},{features:[[8,11,2,2,-1],[8,11,1,1,2],[9,12,1,1,2]],threshold:.0014211760135367513,right_val:.669133186340332,left_val:.4687897861003876},{features:[[12,5,8,4,-1],[12,5,4,4,2]],threshold:.0794276371598244,right_val:.273294597864151,left_val:.5193443894386292},{features:[[0,5,8,4,-1],[4,5,4,4,2]],threshold:.0799375027418137,right_val:.1782083958387375,left_val:.4971731007099152},{features:[[13,2,4,1,-1],[13,2,2,1,2]],threshold:.0110892597585917,right_val:.3209475874900818,left_val:.5165994763374329},{features:[[3,2,4,1,-1],[5,2,2,1,2]],threshold:.00016560709627810866,right_val:.5307276248931885,left_val:.4058471918106079},{features:[[10,0,4,2,-1],[12,0,2,1,2],[10,1,2,1,2]],threshold:-.0053354292176663876,right_val:.5158129930496216,left_val:.3445056974887848},{features:[[7,12,3,1,-1],[8,12,1,1,3]],threshold:.0011287260567769408,right_val:.6075533032417297,left_val:.4594863057136536},{features:[[8,11,4,8,-1],[10,11,2,4,2],[8,15,2,4,2]],threshold:-.0219692196696997,right_val:.5228595733642578,left_val:.1680400967597961},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.00021775320055894554,right_val:.5215672850608826,left_val:.3861596882343292},{features:[[3,18,15,2,-1],[3,19,15,1,2]],threshold:.00020200149447191507,right_val:.4363039135932922,left_val:.5517979264259338},{features:[[2,6,2,12,-1],[2,6,1,6,2],[3,12,1,6,2]],threshold:-.0217331498861313,right_val:.4789851009845734,left_val:.7999460101127625},{features:[[9,8,2,3,-1],[9,9,2,1,3]],threshold:-.0008439993252977729,right_val:.5374773144721985,left_val:.4085975885391235},{features:[[7,10,3,2,-1],[8,10,1,2,3]],threshold:-.00043895249837078154,right_val:.4366143047809601,left_val:.5470405220985413},{features:[[11,11,3,1,-1],[12,11,1,1,3]],threshold:.0015092400135472417,right_val:.5842149257659912,left_val:.4988996982574463},{features:[[6,11,3,1,-1],[7,11,1,1,3]],threshold:-.003554783994331956,right_val:.4721005856990814,left_val:.6753690242767334},{features:[[9,2,4,2,-1],[11,2,2,1,2],[9,3,2,1,2]],threshold:.00048191400128416717,right_val:.4357109069824219,left_val:.541585385799408},{features:[[4,12,2,3,-1],[4,13,2,1,3]],threshold:-.00602643983438611,right_val:.499188095331192,left_val:.2258509993553162},{features:[[2,1,18,3,-1],[8,1,6,3,3]],threshold:-.0116681400686502,right_val:.4927498996257782,left_val:.625655472278595},{features:[[5,1,4,14,-1],[7,1,2,14,2]],threshold:-.0028718370012938976,right_val:.524580180644989,left_val:.3947784900665283},{features:[[8,16,12,3,-1],[8,16,6,3,2]],threshold:.0170511696487665,right_val:.5794224143028259,left_val:.4752511084079742},{features:[[1,17,18,3,-1],[7,17,6,3,3]],threshold:-.0133520802482963,right_val:.4544535875320435,left_val:.6041104793548584},{features:[[9,14,2,6,-1],[9,17,2,3,2]],threshold:-.0003930180100724101,right_val:.5544905066490173,left_val:.4258275926113129},{features:[[9,12,1,8,-1],[9,16,1,4,2]],threshold:.0030483349692076445,right_val:.3780272901058197,left_val:.5233420133590698},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:-.00435792887583375,right_val:.4838674068450928,left_val:.6371889114379883},{features:[[9,6,2,12,-1],[9,10,2,4,3]],threshold:.0056661018170416355,right_val:.4163666069507599,left_val:.5374705791473389},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:6067733920644969e-20,right_val:.5311625003814697,left_val:.4638795852661133},{features:[[0,1,4,8,-1],[2,1,2,8,2]],threshold:.0367381609976292,right_val:.6466524004936218,left_val:.4688656032085419},{features:[[9,1,6,2,-1],[12,1,3,1,2],[9,2,3,1,2]],threshold:.008652813732624054,right_val:.2188657969236374,left_val:.5204318761825562},{features:[[1,3,12,14,-1],[1,10,12,7,2]],threshold:-.1537135988473892,right_val:.4958840012550354,left_val:.1630371958017349},{features:[[8,12,4,2,-1],[10,12,2,1,2],[8,13,2,1,2]],threshold:-.00041560421232134104,right_val:.4696458876132965,left_val:.577445924282074},{features:[[1,9,10,2,-1],[1,9,5,1,2],[6,10,5,1,2]],threshold:-.0012640169588848948,right_val:.5217198133468628,left_val:.3977175951004028},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:-.003547334112226963,right_val:.480831503868103,left_val:.6046528220176697},{features:[[6,8,8,3,-1],[6,9,8,1,3]],threshold:3001906952704303e-20,right_val:.5228201150894165,left_val:.3996723890304565},{features:[[9,15,5,3,-1],[9,16,5,1,3]],threshold:.00131130195222795,right_val:.5765997767448425,left_val:.4712158143520355},{features:[[8,7,4,3,-1],[8,8,4,1,3]],threshold:-.0013374709524214268,right_val:.5253170132637024,left_val:.4109584987163544},{features:[[7,7,6,2,-1],[7,8,6,1,2]],threshold:.0208767093718052,right_val:.1757981926202774,left_val:.5202993750572205},{features:[[5,7,8,2,-1],[5,7,4,1,2],[9,8,4,1,2]],threshold:-.007549794856458902,right_val:.4694975018501282,left_val:.6566609740257263},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:.0241885501891375,right_val:.3370220959186554,left_val:.5128673911094666},{features:[[4,7,4,2,-1],[4,8,4,1,2]],threshold:-.002935882890596986,right_val:.4694541096687317,left_val:.658078670501709},{features:[[14,2,6,9,-1],[14,5,6,3,3]],threshold:.0575579293072224,right_val:.2775259912014008,left_val:.5146445035934448},{features:[[4,9,3,3,-1],[5,9,1,3,3]],threshold:-.0011343370424583554,right_val:.5192667245864868,left_val:.3836601972579956},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:.0168169997632504,right_val:.6177260875701904,left_val:.5085592865943909},{features:[[0,2,6,9,-1],[0,5,6,3,3]],threshold:.005053517874330282,right_val:.3684791922569275,left_val:.5138763189315796},{features:[[17,3,3,6,-1],[18,3,1,6,3]],threshold:-.004587471019476652,right_val:.4835202097892761,left_val:.5989655256271362},{features:[[0,3,3,6,-1],[1,3,1,6,3]],threshold:.001688246033154428,right_val:.5723056793212891,left_val:.4509486854076386},{features:[[17,14,1,2,-1],[17,15,1,1,2]],threshold:-.0016554000321775675,right_val:.5243319272994995,left_val:.3496770858764648},{features:[[4,9,4,3,-1],[6,9,2,3,2]],threshold:-.0193738006055355,right_val:.496871292591095,left_val:.1120536997914314},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:.0103744501248002,right_val:.4395213127136231,left_val:.5148196816444397},{features:[[5,9,3,3,-1],[5,10,3,1,3]],threshold:.00014973050565458834,right_val:.526988685131073,left_val:.4084999859333038},{features:[[9,5,6,8,-1],[12,5,3,4,2],[9,9,3,4,2]],threshold:-.042981930077076,right_val:.501850426197052,left_val:.6394104957580566},{features:[[5,5,6,8,-1],[5,5,3,4,2],[8,9,3,4,2]],threshold:.008306593634188175,right_val:.6698353290557861,left_val:.470755398273468},{features:[[16,1,4,6,-1],[16,4,4,3,2]],threshold:-.0041285790503025055,right_val:.5323647260665894,left_val:.4541369080543518},{features:[[1,0,6,20,-1],[3,0,2,20,3]],threshold:.0017399420030415058,right_val:.5439866185188293,left_val:.433396190404892},{features:[[12,11,3,2,-1],[13,11,1,2,3]],threshold:.00011739750334527344,right_val:.5543426275253296,left_val:.4579687118530273},{features:[[5,11,3,2,-1],[6,11,1,2,3]],threshold:.00018585780344437808,right_val:.5426754951477051,left_val:.4324643909931183},{features:[[9,4,6,1,-1],[11,4,2,1,3]],threshold:.005558769218623638,right_val:.3550611138343811,left_val:.525722086429596},{features:[[0,0,8,3,-1],[4,0,4,3,2]],threshold:-.007985156029462814,right_val:.4630635976791382,left_val:.6043018102645874},{features:[[15,0,2,5,-1],[15,0,1,5,2]],threshold:.0006059412262402475,right_val:.55331951379776,left_val:.4598254859447479},{features:[[4,1,3,2,-1],[5,1,1,2,3]],threshold:-.0002298304025316611,right_val:.5322461128234863,left_val:.4130752086639404},{features:[[7,0,6,15,-1],[9,0,2,15,3]],threshold:.0004374021082185209,right_val:.5409289002418518,left_val:.4043039977550507},{features:[[6,11,3,1,-1],[7,11,1,1,3]],threshold:.0002948202018160373,right_val:.5628852248191833,left_val:.4494963884353638},{features:[[12,0,3,4,-1],[13,0,1,4,3]],threshold:.0103126596659422,right_val:.2704316973686218,left_val:.5177510976791382},{features:[[5,4,6,1,-1],[7,4,2,1,3]],threshold:-.007724110968410969,right_val:.4980553984642029,left_val:.1988019049167633},{features:[[12,7,3,2,-1],[12,8,3,1,2]],threshold:-.004679720848798752,right_val:.5018296241760254,left_val:.6644750237464905},{features:[[0,1,4,6,-1],[0,4,4,3,2]],threshold:-.005075545981526375,right_val:.5185269117355347,left_val:.3898304998874664},{features:[[12,7,3,2,-1],[12,8,3,1,2]],threshold:.00224797404371202,right_val:.5660336017608643,left_val:.4801808893680573},{features:[[2,16,3,3,-1],[2,17,3,1,3]],threshold:.0008332700817845762,right_val:.3957188129425049,left_val:.5210919976234436},{features:[[13,8,6,10,-1],[16,8,3,5,2],[13,13,3,5,2]],threshold:-.0412793308496475,right_val:.5007054209709167,left_val:.6154541969299316},{features:[[0,9,5,2,-1],[0,10,5,1,2]],threshold:-.0005093018990010023,right_val:.5228403806686401,left_val:.3975942134857178},{features:[[12,11,2,2,-1],[13,11,1,1,2],[12,12,1,1,2]],threshold:.0012568780221045017,right_val:.5939183235168457,left_val:.4979138076305389},{features:[[3,15,3,3,-1],[3,16,3,1,3]],threshold:.008004849776625633,right_val:.1633366048336029,left_val:.4984497129917145},{features:[[12,7,3,2,-1],[12,8,3,1,2]],threshold:-.0011879300000146031,right_val:.4942624866962433,left_val:.5904964804649353},{features:[[5,7,3,2,-1],[5,8,3,1,2]],threshold:.0006194895249791443,right_val:.5328726172447205,left_val:.4199557900428772},{features:[[9,5,9,9,-1],[9,8,9,3,3]],threshold:.006682985927909613,right_val:.490588903427124,left_val:.5418602824211121},{features:[[5,0,3,7,-1],[6,0,1,7,3]],threshold:-.0037062340416014194,right_val:.5138000249862671,left_val:.3725939095020294},{features:[[5,2,12,5,-1],[9,2,4,5,3]],threshold:-.0397394113242626,right_val:.5050346851348877,left_val:.6478961110115051},{features:[[6,11,2,2,-1],[6,11,1,1,2],[7,12,1,1,2]],threshold:.0014085009461268783,right_val:.6377884149551392,left_val:.4682339131832123},{features:[[15,15,3,2,-1],[15,16,3,1,2]],threshold:.0003932268882635981,right_val:.415048211812973,left_val:.5458530187606812},{features:[[2,15,3,2,-1],[2,16,3,1,2]],threshold:-.0018979819724336267,right_val:.5149704217910767,left_val:.3690159916877747},{features:[[14,12,6,8,-1],[17,12,3,4,2],[14,16,3,4,2]],threshold:-.0139704402536154,right_val:.4811357855796814,left_val:.6050562858581543},{features:[[2,8,15,6,-1],[7,8,5,6,3]],threshold:-.1010081991553307,right_val:.4992361962795258,left_val:.2017080038785934},{features:[[2,2,18,17,-1],[8,2,6,17,3]],threshold:-.0173469204455614,right_val:.4899486005306244,left_val:.5713148713111877},{features:[[5,1,4,1,-1],[7,1,2,1,2]],threshold:.000156197595060803,right_val:.5392642021179199,left_val:.4215388894081116},{features:[[5,2,12,5,-1],[9,2,4,5,3]],threshold:.1343892961740494,right_val:.3767612874507904,left_val:.5136151909828186},{features:[[3,2,12,5,-1],[7,2,4,5,3]],threshold:-.0245822407305241,right_val:.4747906923294067,left_val:.7027357816696167},{features:[[4,9,12,4,-1],[10,9,6,2,2],[4,11,6,2,2]],threshold:-.0038553720805794,right_val:.5427716970443726,left_val:.4317409098148346},{features:[[5,15,6,2,-1],[5,15,3,1,2],[8,16,3,1,2]],threshold:-.002316524973139167,right_val:.4618647992610931,left_val:.594269871711731},{features:[[10,14,2,3,-1],[10,15,2,1,3]],threshold:-.004851812031120062,right_val:.4884895086288452,left_val:.6191568970680237},{features:[[0,13,20,2,-1],[0,13,10,1,2],[10,14,10,1,2]],threshold:.002469993894919753,right_val:.4017199873924255,left_val:.5256664752960205},{features:[[4,9,12,8,-1],[10,9,6,4,2],[4,13,6,4,2]],threshold:.0454969592392445,right_val:.2685773968696594,left_val:.5237867832183838},{features:[[8,13,3,6,-1],[8,16,3,3,2]],threshold:-.0203195996582508,right_val:.4979738891124725,left_val:.213044598698616},{features:[[10,12,2,2,-1],[10,13,2,1,2]],threshold:.0002699499891605228,right_val:.5543122291564941,left_val:.481404185295105},{features:[[9,12,2,2,-1],[9,12,1,1,2],[10,13,1,1,2]],threshold:-.0018232699949294329,right_val:.4709989130496979,left_val:.6482579708099365},{features:[[4,11,14,4,-1],[11,11,7,2,2],[4,13,7,2,2]],threshold:-.006301579065620899,right_val:.5306236147880554,left_val:.4581927955150604},{features:[[8,5,4,2,-1],[8,6,4,1,2]],threshold:-.0002413949987385422,right_val:.4051763117313385,left_val:.5232086777687073},{features:[[10,10,6,3,-1],[12,10,2,3,3]],threshold:-.001033036969602108,right_val:.4789193868637085,left_val:.5556201934814453},{features:[[2,14,1,2,-1],[2,15,1,1,2]],threshold:.0001804116036510095,right_val:.4011810123920441,left_val:.5229442715644836},{features:[[13,8,6,12,-1],[16,8,3,6,2],[13,14,3,6,2]],threshold:-.0614078603684902,right_val:.5010703206062317,left_val:.62986820936203},{features:[[1,8,6,12,-1],[1,8,3,6,2],[4,14,3,6,2]],threshold:-.0695439130067825,right_val:.4773184061050415,left_val:.7228280901908875},{features:[[10,0,6,10,-1],[12,0,2,10,3]],threshold:-.0705426633358002,right_val:.5182529091835022,left_val:.2269513010978699},{features:[[5,11,8,4,-1],[5,11,4,2,2],[9,13,4,2,2]],threshold:.0024423799477517605,right_val:.4098151028156281,left_val:.5237097144126892},{features:[[10,16,8,4,-1],[14,16,4,2,2],[10,18,4,2,2]],threshold:.0015494349645450711,right_val:.5468043088912964,left_val:.4773750901222229},{features:[[7,7,6,6,-1],[9,7,2,6,3]],threshold:-.0239142198115587,right_val:.4783824980258942,left_val:.7146975994110107},{features:[[10,2,4,10,-1],[10,2,2,10,2]],threshold:-.0124536901712418,right_val:.5241122841835022,left_val:.2635296881198883},{features:[[6,1,4,9,-1],[8,1,2,9,2]],threshold:-.00020760179904755205,right_val:.5113608837127686,left_val:.3623757064342499},{features:[[12,19,2,1,-1],[12,19,1,1,2]],threshold:29781080229440704e-21,right_val:.5432801842689514,left_val:.4705932140350342}],threshold:90.25334930419922},{simpleClassifiers:[{features:[[1,2,4,9,-1],[3,2,2,9,2]],threshold:.0117727499455214,right_val:.6421167254447937,left_val:.3860518932342529},{features:[[7,5,6,4,-1],[9,5,2,4,3]],threshold:.0270375702530146,right_val:.675403892993927,left_val:.4385654926300049},{features:[[9,4,2,4,-1],[9,6,2,2,2]],threshold:-3641950024757534e-20,right_val:.34233158826828,left_val:.5487101078033447},{features:[[14,5,2,8,-1],[14,9,2,4,2]],threshold:.001999540952965617,right_val:.5400317907333374,left_val:.3230532109737396},{features:[[7,6,5,12,-1],[7,12,5,6,2]],threshold:.0045278300531208515,right_val:.2935043871402741,left_val:.5091639757156372},{features:[[14,6,2,6,-1],[14,9,2,3,2]],threshold:.00047890920541249216,right_val:.5344064235687256,left_val:.4178153872489929},{features:[[4,6,2,6,-1],[4,9,2,3,2]],threshold:.0011720920447260141,right_val:.5132070779800415,left_val:.2899182140827179},{features:[[8,15,10,4,-1],[13,15,5,2,2],[8,17,5,2,2]],threshold:.0009530570241622627,right_val:.5560845136642456,left_val:.428012490272522},{features:[[6,18,2,2,-1],[7,18,1,2,2]],threshold:15099150004971307e-21,right_val:.5404760241508484,left_val:.4044871926307678},{features:[[11,3,6,2,-1],[11,4,6,1,2]],threshold:-.0006081790197640657,right_val:.5503466129302979,left_val:.4271768927574158},{features:[[2,0,16,6,-1],[2,2,16,2,3]],threshold:.003322452073916793,right_val:.5369734764099121,left_val:.3962723910808563},{features:[[11,3,6,2,-1],[11,4,6,1,2]],threshold:-.0011037490330636501,right_val:.5237749814987183,left_val:.4727177917957306},{features:[[4,11,10,3,-1],[4,12,10,1,3]],threshold:-.0014350269921123981,right_val:.4223509132862091,left_val:.5603008270263672},{features:[[11,3,6,2,-1],[11,4,6,1,2]],threshold:.0020767399109899998,right_val:.4732725918292999,left_val:.5225917100906372},{features:[[3,3,6,2,-1],[3,4,6,1,2]],threshold:-.00016412809782195836,right_val:.5432739853858948,left_val:.3999075889587402},{features:[[16,0,4,7,-1],[16,0,2,7,2]],threshold:.008830243721604347,right_val:.6027327179908752,left_val:.4678385853767395},{features:[[0,14,9,6,-1],[0,16,9,2,3]],threshold:-.0105520701035857,right_val:.5213974714279175,left_val:.3493967056274414},{features:[[9,16,3,3,-1],[9,17,3,1,3]],threshold:-.00227316003292799,right_val:.4749062955379486,left_val:.6185818910598755},{features:[[4,6,6,2,-1],[6,6,2,2,3]],threshold:-.0008478633244521916,right_val:.3843482136726379,left_val:.5285341143608093},{features:[[15,11,1,3,-1],[15,12,1,1,3]],threshold:.0012081359745934606,right_val:.3447335958480835,left_val:.536064088344574},{features:[[5,5,2,3,-1],[5,6,2,1,3]],threshold:.002651273040100932,right_val:.6193962097167969,left_val:.4558292031288147},{features:[[10,9,2,2,-1],[10,10,2,1,2]],threshold:-.0011012479662895203,right_val:.5327628254890442,left_val:.368023008108139},{features:[[3,1,4,3,-1],[5,1,2,3,2]],threshold:.0004956151824444532,right_val:.5274940729141235,left_val:.396059513092041},{features:[[16,0,4,7,-1],[16,0,2,7,2]],threshold:-.0439017713069916,right_val:.4992839097976685,left_val:.7020444869995117},{features:[[0,0,20,1,-1],[10,0,10,1,2]],threshold:.0346903502941132,right_val:.276660293340683,left_val:.5049164295196533},{features:[[15,11,1,3,-1],[15,12,1,1,3]],threshold:-.002744219033047557,right_val:.5274971127510071,left_val:.2672632932662964},{features:[[0,4,3,4,-1],[1,4,1,4,3]],threshold:.003331658896058798,right_val:.6001101732254028,left_val:.4579482972621918},{features:[[16,3,3,6,-1],[16,5,3,2,3]],threshold:-.0200445707887411,right_val:.523571789264679,left_val:.3171594142913818},{features:[[1,3,3,6,-1],[1,5,3,2,3]],threshold:.0013492030557245016,right_val:.4034324884414673,left_val:.5265362858772278},{features:[[6,2,12,6,-1],[12,2,6,3,2],[6,5,6,3,2]],threshold:.0029702018946409225,right_val:.4571984112262726,left_val:.5332456827163696},{features:[[8,10,4,3,-1],[8,11,4,1,3]],threshold:.006303998176008463,right_val:.6034635901451111,left_val:.4593310952186585},{features:[[4,2,14,6,-1],[11,2,7,3,2],[4,5,7,3,2]],threshold:-.0129365902394056,right_val:.5372971296310425,left_val:.4437963962554932},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:.004014872945845127,right_val:.6437833905220032,left_val:.4680323898792267},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:-.002640167949721217,right_val:.5314332842826843,left_val:.3709631860256195},{features:[[8,12,4,3,-1],[8,13,4,1,3]],threshold:.0139184398576617,right_val:.713080883026123,left_val:.4723555147647858},{features:[[15,11,1,3,-1],[15,12,1,1,3]],threshold:-.00045087869511917233,right_val:.5370404124259949,left_val:.4492394030094147},{features:[[7,13,5,2,-1],[7,14,5,1,2]],threshold:.00025384349282830954,right_val:.5514402985572815,left_val:.4406864047050476},{features:[[7,12,6,3,-1],[7,13,6,1,3]],threshold:.002271000063046813,right_val:.5967984199523926,left_val:.4682416915893555},{features:[[5,11,4,4,-1],[5,13,4,2,2]],threshold:.002412077970802784,right_val:.3018598854541779,left_val:.5079392194747925},{features:[[11,4,3,3,-1],[12,4,1,3,3]],threshold:-3602567085181363e-20,right_val:.4471096992492676,left_val:.560103714466095},{features:[[6,4,3,3,-1],[7,4,1,3,3]],threshold:-.0074905529618263245,right_val:.4989944100379944,left_val:.2207535058259964},{features:[[16,5,3,6,-1],[17,5,1,6,3]],threshold:-.017513120546937,right_val:.5017648935317993,left_val:.6531215906143188},{features:[[3,6,12,7,-1],[7,6,4,7,3]],threshold:.1428163051605225,right_val:.1482062041759491,left_val:.4967963099479675},{features:[[16,5,3,6,-1],[17,5,1,6,3]],threshold:.005534526892006397,right_val:.5954223871231079,left_val:.4898946881294251},{features:[[3,13,2,3,-1],[3,14,2,1,3]],threshold:-.0009632359142415226,right_val:.519607424736023,left_val:.3927116990089417},{features:[[16,5,3,6,-1],[17,5,1,6,3]],threshold:-.0020370010752230883,right_val:.4884858131408691,left_val:.5613325238227844},{features:[[1,5,3,6,-1],[2,5,1,6,3]],threshold:.0016614829655736685,right_val:.5578880906105042,left_val:.4472880065441132},{features:[[1,9,18,1,-1],[7,9,6,1,3]],threshold:-.0031188090797513723,right_val:.5397477746009827,left_val:.3840532898902893},{features:[[0,9,8,7,-1],[4,9,4,7,2]],threshold:-.006400061771273613,right_val:.4533218145370483,left_val:.5843983888626099},{features:[[12,11,8,2,-1],[12,12,8,1,2]],threshold:.0003131960111204535,right_val:.4234727919101715,left_val:.5439221858978271},{features:[[0,11,8,2,-1],[0,12,8,1,2]],threshold:-.0182220991700888,right_val:.4958404898643494,left_val:.1288464963436127},{features:[[9,13,2,3,-1],[9,14,2,1,3]],threshold:.008796924725174904,right_val:.7153480052947998,left_val:.49512979388237},{features:[[4,10,12,4,-1],[4,10,6,2,2],[10,12,6,2,2]],threshold:-.004239507019519806,right_val:.5194936990737915,left_val:.3946599960327148},{features:[[9,3,3,7,-1],[10,3,1,7,3]],threshold:.009708627127110958,right_val:.6064900159835815,left_val:.4897503852844238},{features:[[7,2,3,5,-1],[8,2,1,5,3]],threshold:-.003993417136371136,right_val:.5060828924179077,left_val:.3245440125465393},{features:[[9,12,4,6,-1],[11,12,2,3,2],[9,15,2,3,2]],threshold:-.0167850591242313,right_val:.5203778743743896,left_val:.1581953018903732},{features:[[8,7,3,6,-1],[9,7,1,6,3]],threshold:.018272090703249,right_val:.6626979112625122,left_val:.4680935144424439},{features:[[15,4,4,2,-1],[15,5,4,1,2]],threshold:.00568728381767869,right_val:.3512184917926788,left_val:.5211697816848755},{features:[[8,7,3,3,-1],[9,7,1,3,3]],threshold:-.0010739039862528443,right_val:.4529845118522644,left_val:.5768386125564575},{features:[[14,2,6,4,-1],[14,4,6,2,2]],threshold:-.00370938703417778,right_val:.5313581228256226,left_val:.4507763087749481},{features:[[7,16,6,1,-1],[9,16,2,1,3]],threshold:-.0002111070934915915,right_val:.4333376884460449,left_val:.5460820198059082},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:.0010670139454305172,right_val:.4078390896320343,left_val:.5371856093406677},{features:[[8,7,3,10,-1],[9,7,1,10,3]],threshold:.0035943021066486835,right_val:.5643836259841919,left_val:.4471287131309509},{features:[[11,10,2,6,-1],[11,12,2,2,3]],threshold:-.005177603103220463,right_val:.5280330181121826,left_val:.4499393105506897},{features:[[6,10,4,1,-1],[8,10,2,1,2]],threshold:-.00025414369883947074,right_val:.4407708048820496,left_val:.5516173243522644},{features:[[10,9,2,2,-1],[10,10,2,1,2]],threshold:.006352256052196026,right_val:.2465227991342545,left_val:.5194190144538879},{features:[[8,9,2,2,-1],[8,10,2,1,2]],threshold:-.00044205080484971404,right_val:.5139682292938232,left_val:.3830705881118774},{features:[[12,7,2,2,-1],[13,7,1,1,2],[12,8,1,1,2]],threshold:.0007448872784152627,right_val:.5974786877632141,left_val:.4891090989112854},{features:[[5,7,2,2,-1],[5,7,1,1,2],[6,8,1,1,2]],threshold:-.0035116379149258137,right_val:.4768764972686768,left_val:.7413681745529175},{features:[[13,0,3,14,-1],[14,0,1,14,3]],threshold:-.0125409103929996,right_val:.5252826809883118,left_val:.3648819029331207},{features:[[4,0,3,14,-1],[5,0,1,14,3]],threshold:.009493185207247734,right_val:.362958699464798,left_val:.5100492835044861},{features:[[13,4,3,14,-1],[14,4,1,14,3]],threshold:.0129611501470208,right_val:.4333561062812805,left_val:.5232442021369934},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.004720944911241531,right_val:.6331052780151367,left_val:.4648149013519287},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.0023119079414755106,right_val:.4531058073043823,left_val:.5930309891700745},{features:[[4,2,3,16,-1],[5,2,1,16,3]],threshold:-.002826229901984334,right_val:.5257101058959961,left_val:.3870477974414825},{features:[[7,2,8,10,-1],[7,7,8,5,2]],threshold:-.0014311339473351836,right_val:.4561854898929596,left_val:.552250325679779},{features:[[6,14,7,3,-1],[6,15,7,1,3]],threshold:.0019378310535103083,right_val:.5736966729164124,left_val:.4546220898628235},{features:[[9,2,10,12,-1],[14,2,5,6,2],[9,8,5,6,2]],threshold:.00026343559147790074,right_val:.4571875035762787,left_val:.5345739126205444},{features:[[6,7,8,2,-1],[6,8,8,1,2]],threshold:.0007825752254575491,right_val:.5220187902450562,left_val:.3967815935611725},{features:[[8,13,4,6,-1],[8,16,4,3,2]],threshold:-.0195504408329725,right_val:.5243508219718933,left_val:.282964289188385},{features:[[6,6,1,3,-1],[6,7,1,1,3]],threshold:.00043914958951063454,right_val:.589909017086029,left_val:.4590066969394684},{features:[[16,2,4,6,-1],[16,4,4,2,3]],threshold:.0214520003646612,right_val:.2855378985404968,left_val:.523141086101532},{features:[[6,6,4,2,-1],[6,6,2,1,2],[8,7,2,1,2]],threshold:.0005897358059883118,right_val:.550642192363739,left_val:.4397256970405579},{features:[[16,2,4,6,-1],[16,4,4,2,3]],threshold:-.0261576101183891,right_val:.5189175009727478,left_val:.3135079145431519},{features:[[0,2,4,6,-1],[0,4,4,2,3]],threshold:-.0139598604291677,right_val:.5040717720985413,left_val:.3213272988796234},{features:[[9,6,2,6,-1],[9,6,1,6,2]],threshold:-.006369901821017265,right_val:.4849506914615631,left_val:.6387544870376587},{features:[[3,4,6,10,-1],[3,9,6,5,2]],threshold:-.008561382070183754,right_val:.5032019019126892,left_val:.2759132087230682},{features:[[9,5,2,6,-1],[9,5,1,6,2]],threshold:.000966229010373354,right_val:.5834879279136658,left_val:.4685640931129456},{features:[[3,13,2,3,-1],[3,14,2,1,3]],threshold:.0007655026856809855,right_val:.389642208814621,left_val:.5175207257270813},{features:[[13,13,3,2,-1],[13,14,3,1,2]],threshold:-.008183334022760391,right_val:.5208122134208679,left_val:.2069136947393417},{features:[[2,16,10,4,-1],[2,16,5,2,2],[7,18,5,2,2]],threshold:-.009397693909704685,right_val:.4641222953796387,left_val:.6134091019630432},{features:[[5,6,10,6,-1],[10,6,5,3,2],[5,9,5,3,2]],threshold:.004802898038178682,right_val:.439521998167038,left_val:.5454108119010925},{features:[[7,14,1,3,-1],[7,15,1,1,3]],threshold:-.003568056970834732,right_val:.4681093990802765,left_val:.6344485282897949},{features:[[14,16,6,3,-1],[14,17,6,1,3]],threshold:.0040733120404183865,right_val:.4015620052814484,left_val:.5292683243751526},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.0012568129459396005,right_val:.5452824831008911,left_val:.4392988085746765},{features:[[7,4,10,3,-1],[7,5,10,1,3]],threshold:-.0029065010603517294,right_val:.4863379895687103,left_val:.5898832082748413},{features:[[0,4,5,4,-1],[0,6,5,2,2]],threshold:-.00244093406945467,right_val:.5247421860694885,left_val:.4069364964962006},{features:[[13,11,3,9,-1],[13,14,3,3,3]],threshold:.0248307008296251,right_val:.3682524859905243,left_val:.5182725787162781},{features:[[4,11,3,9,-1],[4,14,3,3,3]],threshold:-.0488540083169937,right_val:.496128112077713,left_val:.1307577937841415},{features:[[9,7,2,1,-1],[9,7,1,1,2]],threshold:-.001611037994734943,right_val:.4872662127017975,left_val:.6421005725860596},{features:[[5,0,6,17,-1],[7,0,2,17,3]],threshold:-.0970094799995422,right_val:.495098888874054,left_val:.0477693490684032},{features:[[10,3,6,3,-1],[10,3,3,3,2]],threshold:.0011209240183234215,right_val:.5354745984077454,left_val:.4616267085075378},{features:[[2,2,15,4,-1],[7,2,5,4,3]],threshold:-.001306409016251564,right_val:.4638805985450745,left_val:.626185417175293},{features:[[8,2,8,2,-1],[12,2,4,1,2],[8,3,4,1,2]],threshold:.00045771620352752507,right_val:.4646640121936798,left_val:.5384417772293091},{features:[[8,1,3,6,-1],[8,3,3,2,3]],threshold:-.0006314995116554201,right_val:.51302570104599,left_val:.3804047107696533},{features:[[9,17,2,2,-1],[9,18,2,1,2]],threshold:.0001450597046641633,right_val:.5664461851119995,left_val:.4554310142993927},{features:[[0,0,2,14,-1],[1,0,1,14,2]],threshold:-.0164745505899191,right_val:.4715859889984131,left_val:.6596958041191101},{features:[[12,0,7,3,-1],[12,1,7,1,3]],threshold:.0133695797994733,right_val:.3035964965820313,left_val:.519546627998352},{features:[[1,14,1,2,-1],[1,15,1,1,2]],threshold:.00010271780047332868,right_val:.4107066094875336,left_val:.522917628288269},{features:[[14,12,2,8,-1],[15,12,1,4,2],[14,16,1,4,2]],threshold:-.0055311559699475765,right_val:.4960907101631165,left_val:.6352887749671936},{features:[[1,0,7,3,-1],[1,1,7,1,3]],threshold:-.0026187049224972725,right_val:.5140984058380127,left_val:.3824546039104462},{features:[[14,12,2,8,-1],[15,12,1,4,2],[14,16,1,4,2]],threshold:.005083426833152771,right_val:.6220818758010864,left_val:.4950439929962158},{features:[[6,0,8,12,-1],[6,0,4,6,2],[10,6,4,6,2]],threshold:.0798181593418121,right_val:.1322475969791412,left_val:.4952335953712463},{features:[[6,1,8,9,-1],[6,4,8,3,3]],threshold:-.0992265865206718,right_val:.5008416771888733,left_val:.7542728781700134},{features:[[5,2,2,2,-1],[5,3,2,1,2]],threshold:-.0006517401780001819,right_val:.5130121111869812,left_val:.3699302971363068},{features:[[13,14,6,6,-1],[16,14,3,3,2],[13,17,3,3,2]],threshold:-.018996849656105,right_val:.4921202957630158,left_val:.6689178943634033},{features:[[0,17,20,2,-1],[0,17,10,1,2],[10,18,10,1,2]],threshold:.0173468999564648,right_val:.1859198063611984,left_val:.4983300864696503},{features:[[10,3,2,6,-1],[11,3,1,3,2],[10,6,1,3,2]],threshold:.0005508210160769522,right_val:.5522121787071228,left_val:.4574424028396606},{features:[[5,12,6,2,-1],[8,12,3,2,2]],threshold:.002005605027079582,right_val:.3856469988822937,left_val:.5131744742393494},{features:[[10,7,6,13,-1],[10,7,3,13,2]],threshold:-.007768819108605385,right_val:.5434309244155884,left_val:.4361700117588043},{features:[[5,15,10,5,-1],[10,15,5,5,2]],threshold:.0508782789111137,right_val:.6840639710426331,left_val:.4682720899581909},{features:[[10,4,4,10,-1],[10,4,2,10,2]],threshold:-.0022901780903339386,right_val:.5306099057197571,left_val:.4329245090484619},{features:[[5,7,2,1,-1],[6,7,1,1,2]],threshold:-.00015715380141045898,right_val:.4378164112567902,left_val:.5370057225227356},{features:[[10,3,6,7,-1],[10,3,3,7,2]],threshold:.1051924005150795,right_val:.0673614665865898,left_val:.5137274265289307},{features:[[4,3,6,7,-1],[7,3,3,7,2]],threshold:.002719891956076026,right_val:.5255665183067322,left_val:.4112060964107513},{features:[[1,7,18,5,-1],[7,7,6,5,3]],threshold:.0483377799391747,right_val:.4438967108726502,left_val:.5404623746871948},{features:[[3,17,4,3,-1],[5,17,2,3,2]],threshold:.0009570376132614911,right_val:.5399510860443115,left_val:.4355969130992889},{features:[[8,14,12,6,-1],[14,14,6,3,2],[8,17,6,3,2]],threshold:-.0253712590783834,right_val:.5031024813652039,left_val:.5995175242424011},{features:[[0,13,20,4,-1],[0,13,10,2,2],[10,15,10,2,2]],threshold:.0524579510092735,right_val:.1398351043462753,left_val:.4950287938117981},{features:[[4,5,14,2,-1],[11,5,7,1,2],[4,6,7,1,2]],threshold:-.0123656298965216,right_val:.496410608291626,left_val:.639729917049408},{features:[[1,2,10,12,-1],[1,2,5,6,2],[6,8,5,6,2]],threshold:-.1458971947431564,right_val:.494632214307785,left_val:.1001669988036156},{features:[[6,1,14,3,-1],[6,2,14,1,3]],threshold:-.0159086007624865,right_val:.5208340883255005,left_val:.3312329947948456},{features:[[8,16,2,3,-1],[8,17,2,1,3]],threshold:.00039486068999394774,right_val:.5426102876663208,left_val:.4406363964080811},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:-.0052454001270234585,right_val:.5189967155456543,left_val:.2799589931964874},{features:[[5,15,4,2,-1],[5,15,2,1,2],[7,16,2,1,2]],threshold:-.005042179953306913,right_val:.4752142131328583,left_val:.6987580060958862},{features:[[10,15,1,3,-1],[10,16,1,1,3]],threshold:.0029812189750373363,right_val:.6307479739189148,left_val:.4983288943767548},{features:[[8,16,4,4,-1],[8,16,2,2,2],[10,18,2,2,2]],threshold:-.007288430817425251,right_val:.5026869773864746,left_val:.298233300447464},{features:[[6,11,8,6,-1],[6,14,8,3,2]],threshold:.0015094350092113018,right_val:.3832970857620239,left_val:.5308442115783691},{features:[[2,13,5,2,-1],[2,14,5,1,2]],threshold:-.009334079921245575,right_val:.4969817101955414,left_val:.2037964016199112},{features:[[13,14,6,6,-1],[16,14,3,3,2],[13,17,3,3,2]],threshold:.0286671407520771,right_val:.6928027272224426,left_val:.5025696754455566},{features:[[1,9,18,4,-1],[7,9,6,4,3]],threshold:.1701968014240265,right_val:.1476442962884903,left_val:.4960052967071533},{features:[[13,14,6,6,-1],[16,14,3,3,2],[13,17,3,3,2]],threshold:-.003261447884142399,right_val:.4826056063175201,left_val:.5603063702583313},{features:[[0,2,1,6,-1],[0,4,1,2,3]],threshold:.0005576927796937525,right_val:.4129633009433746,left_val:.5205562114715576},{features:[[5,0,15,20,-1],[5,10,15,10,2]],threshold:.3625833988189697,right_val:.3768612146377564,left_val:.5221652984619141},{features:[[1,14,6,6,-1],[1,14,3,3,2],[4,17,3,3,2]],threshold:-.0116151301190257,right_val:.4637489914894104,left_val:.6022682785987854},{features:[[8,14,4,6,-1],[10,14,2,3,2],[8,17,2,3,2]],threshold:-.004079519771039486,right_val:.5337479114532471,left_val:.4070447087287903},{features:[[7,11,2,1,-1],[8,11,1,1,2]],threshold:.0005720430053770542,right_val:.5900393128395081,left_val:.4601835012435913},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:.000675433489959687,right_val:.4345428943634033,left_val:.5398252010345459},{features:[[8,17,3,2,-1],[9,17,1,2,3]],threshold:.0006329569732770324,right_val:.4051358997821808,left_val:.5201563239097595},{features:[[12,14,4,6,-1],[14,14,2,3,2],[12,17,2,3,2]],threshold:.00124353205319494,right_val:.5547441244125366,left_val:.4642387926578522},{features:[[4,14,4,6,-1],[4,14,2,3,2],[6,17,2,3,2]],threshold:-.004736385773867369,right_val:.4672552049160004,left_val:.6198567152023315},{features:[[13,14,2,6,-1],[14,14,1,3,2],[13,17,1,3,2]],threshold:-.006465846206992865,right_val:.5019000768661499,left_val:.6837332844734192},{features:[[5,14,2,6,-1],[5,14,1,3,2],[6,17,1,3,2]],threshold:.000350173213519156,right_val:.5363622903823853,left_val:.4344803094863892},{features:[[7,0,6,12,-1],[7,4,6,4,3]],threshold:.00015754920605104417,right_val:.5732020735740662,left_val:.4760079085826874},{features:[[0,7,12,2,-1],[4,7,4,2,3]],threshold:.009977436624467373,right_val:.3635039925575256,left_val:.5090985894203186},{features:[[10,3,3,13,-1],[11,3,1,13,3]],threshold:-.0004146452993154526,right_val:.4593802094459534,left_val:.5570064783096313},{features:[[7,3,3,13,-1],[8,3,1,13,3]],threshold:-.00035888899583369493,right_val:.4339134991168976,left_val:.5356845855712891},{features:[[10,8,6,3,-1],[10,9,6,1,3]],threshold:.0004046325047966093,right_val:.5436776876449585,left_val:.4439803063869476},{features:[[3,11,3,2,-1],[4,11,1,2,3]],threshold:-.0008218478760682046,right_val:.5176299214363098,left_val:.4042294919490814},{features:[[13,12,6,8,-1],[16,12,3,4,2],[13,16,3,4,2]],threshold:.005946741905063391,right_val:.5633779764175415,left_val:.4927651882171631},{features:[[7,6,6,5,-1],[9,6,2,5,3]],threshold:-.0217533893883228,right_val:.480084091424942,left_val:.8006293773651123},{features:[[17,11,2,7,-1],[17,11,1,7,2]],threshold:-.0145403798669577,right_val:.5182222723960876,left_val:.3946054875850678},{features:[[3,13,8,2,-1],[7,13,4,2,2]],threshold:-.0405107699334621,right_val:.4935792982578278,left_val:.0213249903172255},{features:[[6,9,8,3,-1],[6,10,8,1,3]],threshold:-.0005845826817676425,right_val:.5314025282859802,left_val:.4012795984745026},{features:[[4,3,4,3,-1],[4,4,4,1,3]],threshold:.005515180062502623,right_val:.5896260738372803,left_val:.4642418920993805},{features:[[11,3,4,3,-1],[11,4,4,1,3]],threshold:-.006062622182071209,right_val:.5016477704048157,left_val:.6502159237861633},{features:[[1,4,17,12,-1],[1,8,17,4,3]],threshold:.0945358425378799,right_val:.4126827120780945,left_val:.5264708995819092},{features:[[11,3,4,3,-1],[11,4,4,1,3]],threshold:.004731505177915096,right_val:.5892447829246521,left_val:.4879199862480164},{features:[[4,8,6,3,-1],[4,9,6,1,3]],threshold:-.0005257147131487727,right_val:.5189412832260132,left_val:.391728013753891},{features:[[12,3,5,3,-1],[12,4,5,1,3]],threshold:-.002546404954046011,right_val:.498570591211319,left_val:.5837599039077759},{features:[[1,11,2,7,-1],[2,11,1,7,2]],threshold:-.0260756891220808,right_val:.4955821931362152,left_val:.1261983960866928},{features:[[15,12,2,8,-1],[16,12,1,4,2],[15,16,1,4,2]],threshold:-.00547797093167901,right_val:.5010265707969666,left_val:.5722513794898987},{features:[[4,8,11,3,-1],[4,9,11,1,3]],threshold:.005133774131536484,right_val:.4226376116275787,left_val:.527326226234436},{features:[[9,13,6,2,-1],[12,13,3,1,2],[9,14,3,1,2]],threshold:.000479449809063226,right_val:.5819587111473083,left_val:.4450066983699799},{features:[[6,13,4,3,-1],[6,14,4,1,3]],threshold:-.0021114079281687737,right_val:.451171487569809,left_val:.5757653117179871},{features:[[9,12,3,3,-1],[10,12,1,3,3]],threshold:-.0131799904629588,right_val:.5160734057426453,left_val:.1884381026029587},{features:[[5,3,3,3,-1],[5,4,3,1,3]],threshold:-.004796809982508421,right_val:.4736118912696838,left_val:.6589789986610413},{features:[[9,4,2,3,-1],[9,5,2,1,3]],threshold:.0067483168095350266,right_val:.3356395065784454,left_val:.5259429812431335},{features:[[0,2,16,3,-1],[0,3,16,1,3]],threshold:.0014623369788751006,right_val:.4264092147350311,left_val:.5355271100997925},{features:[[15,12,2,8,-1],[16,12,1,4,2],[15,16,1,4,2]],threshold:.004764515906572342,right_val:.5786827802658081,left_val:.5034406781196594},{features:[[3,12,2,8,-1],[3,12,1,4,2],[4,16,1,4,2]],threshold:.0068066660314798355,right_val:.6677829027175903,left_val:.475660502910614},{features:[[14,13,3,6,-1],[14,15,3,2,3]],threshold:.0036608621012419462,right_val:.4311546981334686,left_val:.5369611978530884},{features:[[3,13,3,6,-1],[3,15,3,2,3]],threshold:.0214496403932571,right_val:.1888816058635712,left_val:.4968641996383667},{features:[[6,5,10,2,-1],[11,5,5,1,2],[6,6,5,1,2]],threshold:.004167890176177025,right_val:.5815368890762329,left_val:.4930733144283295},{features:[[2,14,14,6,-1],[2,17,14,3,2]],threshold:.008646756410598755,right_val:.4132595062255859,left_val:.5205205082893372},{features:[[10,14,1,3,-1],[10,15,1,1,3]],threshold:-.0003611407882999629,right_val:.4800927937030792,left_val:.5483555197715759},{features:[[4,16,2,2,-1],[4,16,1,1,2],[5,17,1,1,2]],threshold:.0010808729566633701,right_val:.6041421294212341,left_val:.4689902067184448},{features:[[10,6,2,3,-1],[10,7,2,1,3]],threshold:.005771995987743139,right_val:.3053277134895325,left_val:.5171142220497131},{features:[[0,17,20,2,-1],[0,17,10,1,2],[10,18,10,1,2]],threshold:.001572077046148479,right_val:.4178803861141205,left_val:.5219978094100952},{features:[[13,6,1,3,-1],[13,7,1,1,3]],threshold:-.0019307859474793077,right_val:.4812920093536377,left_val:.5860369801521301},{features:[[8,13,3,2,-1],[9,13,1,2,3]],threshold:-.007892627269029617,right_val:.497173398733139,left_val:.1749276965856552},{features:[[12,2,3,3,-1],[13,2,1,3,3]],threshold:-.002222467912361026,right_val:.521284818649292,left_val:.434258908033371},{features:[[3,18,2,2,-1],[3,18,1,1,2],[4,19,1,1,2]],threshold:.0019011989934369922,right_val:.689205527305603,left_val:.4765186905860901},{features:[[9,16,3,4,-1],[10,16,1,4,3]],threshold:.0027576119173318148,right_val:.4337486028671265,left_val:.5262191295623779},{features:[[6,6,1,3,-1],[6,7,1,1,3]],threshold:.005178744904696941,right_val:.7843729257583618,left_val:.4804069101810455},{features:[[13,1,5,2,-1],[13,2,5,1,2]],threshold:-.0009027334162965417,right_val:.5353423953056335,left_val:.412084698677063},{features:[[7,14,6,2,-1],[7,14,3,1,2],[10,15,3,1,2]],threshold:.005179795902222395,right_val:.6425960063934326,left_val:.4740372896194458},{features:[[11,3,3,4,-1],[12,3,1,4,3]],threshold:-.0101140001788735,right_val:.5175017714500427,left_val:.2468792051076889},{features:[[1,13,12,6,-1],[5,13,4,6,3]],threshold:-.0186170600354671,right_val:.4628978967666626,left_val:.5756294131278992},{features:[[14,11,5,2,-1],[14,12,5,1,2]],threshold:.0059225959703326225,right_val:.3214271068572998,left_val:.5169625878334045},{features:[[2,15,14,4,-1],[2,15,7,2,2],[9,17,7,2,2]],threshold:-.006294507998973131,right_val:.5141636729240417,left_val:.3872014880180359},{features:[[3,7,14,2,-1],[10,7,7,1,2],[3,8,7,1,2]],threshold:.0065353019163012505,right_val:.6310489773750305,left_val:.4853048920631409},{features:[[1,11,4,2,-1],[1,12,4,1,2]],threshold:.0010878399480134249,right_val:.3723258972167969,left_val:.5117315053939819},{features:[[14,0,6,14,-1],[16,0,2,14,3]],threshold:-.0225422400981188,right_val:.4887112975120544,left_val:.5692740082740784},{features:[[4,11,1,3,-1],[4,12,1,1,3]],threshold:-.003006566083058715,right_val:.5003992915153503,left_val:.2556012868881226},{features:[[14,0,6,14,-1],[16,0,2,14,3]],threshold:.007474127225577831,right_val:.5675926804542542,left_val:.4810872972011566},{features:[[1,10,3,7,-1],[2,10,1,7,3]],threshold:.0261623207479715,right_val:.1777237057685852,left_val:.4971194863319397},{features:[[8,12,9,2,-1],[8,13,9,1,2]],threshold:.0009435273823328316,right_val:.549125075340271,left_val:.4940010905265808},{features:[[0,6,20,1,-1],[10,6,10,1,2]],threshold:.0333632417023182,right_val:.2790724039077759,left_val:.5007612109184265},{features:[[8,4,4,4,-1],[8,4,2,4,2]],threshold:-.0151186501607299,right_val:.4973031878471375,left_val:.7059578895568848},{features:[[0,0,2,2,-1],[0,1,2,1,2]],threshold:.0009864894673228264,right_val:.3776761889457703,left_val:.5128620266914368}],threshold:104.74919891357422},{simpleClassifiers:[{features:[[5,3,10,9,-1],[5,6,10,3,3]],threshold:-.0951507985591888,right_val:.4017286896705627,left_val:.6470757126808167},{features:[[15,2,4,10,-1],[15,2,2,10,2]],threshold:.006270234007388353,right_val:.574644923210144,left_val:.399982213973999},{features:[[8,2,2,7,-1],[9,2,1,7,2]],threshold:.000300180894555524,right_val:.5538809895515442,left_val:.355877012014389},{features:[[7,4,12,1,-1],[11,4,4,1,3]],threshold:.0011757409665733576,right_val:.5382617712020874,left_val:.425653487443924},{features:[[3,4,9,1,-1],[6,4,3,1,3]],threshold:4423526843311265e-20,right_val:.5589926838874817,left_val:.3682908117771149},{features:[[15,10,1,4,-1],[15,12,1,2,2]],threshold:-29936920327600092e-21,right_val:.4020367860794067,left_val:.5452470183372498},{features:[[4,10,6,4,-1],[7,10,3,4,2]],threshold:.003007319988682866,right_val:.3317843973636627,left_val:.5239058136940002},{features:[[15,9,1,6,-1],[15,12,1,3,2]],threshold:-.0105138896033168,right_val:.5307983756065369,left_val:.4320689141750336},{features:[[7,17,6,3,-1],[7,18,6,1,3]],threshold:.008347682654857635,right_val:.6453298926353455,left_val:.4504637122154236},{features:[[14,3,2,16,-1],[15,3,1,8,2],[14,11,1,8,2]],threshold:-.0031492270063608885,right_val:.5370525121688843,left_val:.4313425123691559},{features:[[4,9,1,6,-1],[4,12,1,3,2]],threshold:-1443564997316571e-20,right_val:.381797194480896,left_val:.5326603055000305},{features:[[12,1,5,2,-1],[12,2,5,1,2]],threshold:-.00042855090578086674,right_val:.5382009744644165,left_val:.430516391992569},{features:[[6,18,4,2,-1],[6,18,2,1,2],[8,19,2,1,2]],threshold:.00015062429883982986,right_val:.5544965267181396,left_val:.4235970973968506},{features:[[2,4,16,10,-1],[10,4,8,5,2],[2,9,8,5,2]],threshold:.0715598315000534,right_val:.2678802907466888,left_val:.5303059816360474},{features:[[6,5,1,10,-1],[6,10,1,5,2]],threshold:.0008409518050029874,right_val:.5205433964729309,left_val:.3557108938694},{features:[[4,8,15,2,-1],[9,8,5,2,3]],threshold:.0629865005612373,right_val:.2861376106739044,left_val:.5225362777709961},{features:[[1,8,15,2,-1],[6,8,5,2,3]],threshold:-.0033798629883676767,right_val:.5201697945594788,left_val:.3624185919761658},{features:[[9,5,3,6,-1],[9,7,3,2,3]],threshold:-.00011810739670181647,right_val:.3959893882274628,left_val:.547447681427002},{features:[[5,7,8,2,-1],[9,7,4,2,2]],threshold:-.0005450560129247606,right_val:.5215715765953064,left_val:.3740422129631043},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.0018454910023137927,right_val:.4584448933601379,left_val:.5893052220344543},{features:[[1,0,16,3,-1],[1,1,16,1,3]],threshold:-.0004383237101137638,right_val:.5385351181030273,left_val:.4084582030773163},{features:[[11,2,7,2,-1],[11,3,7,1,2]],threshold:-.002400083001703024,right_val:.5293580293655396,left_val:.377745509147644},{features:[[5,1,10,18,-1],[5,7,10,6,3]],threshold:-.0987957417964935,right_val:.5070089101791382,left_val:.2963612079620361},{features:[[17,4,3,2,-1],[18,4,1,2,3]],threshold:.0031798239797353745,right_val:.6726443767547607,left_val:.4877632856369019},{features:[[8,13,1,3,-1],[8,14,1,1,3]],threshold:.00032406419632025063,right_val:.5561109781265259,left_val:.4366911053657532},{features:[[3,14,14,6,-1],[3,16,14,2,3]],threshold:-.0325472503900528,right_val:.5308616161346436,left_val:.31281578540802},{features:[[0,2,3,4,-1],[1,2,1,4,3]],threshold:-.007756113074719906,right_val:.4639872014522553,left_val:.6560224890708923},{features:[[12,1,5,2,-1],[12,2,5,1,2]],threshold:.0160272493958473,right_val:.3141897916793823,left_val:.5172680020332336},{features:[[3,1,5,2,-1],[3,2,5,1,2]],threshold:710023505234858e-20,right_val:.5336294770240784,left_val:.4084446132183075},{features:[[10,13,2,3,-1],[10,14,2,1,3]],threshold:.007342280820012093,right_val:.660346508026123,left_val:.4966922104358673},{features:[[8,13,2,3,-1],[8,14,2,1,3]],threshold:-.0016970280557870865,right_val:.4500182867050171,left_val:.5908237099647522},{features:[[14,12,2,3,-1],[14,13,2,1,3]],threshold:.0024118260480463505,right_val:.3599720895290375,left_val:.5315160751342773},{features:[[7,2,2,3,-1],[7,3,2,1,3]],threshold:-.005530093796551228,right_val:.4996814131736755,left_val:.2334040999412537},{features:[[5,6,10,4,-1],[10,6,5,2,2],[5,8,5,2,2]],threshold:-.0026478730142116547,right_val:.4684734046459198,left_val:.5880935788154602},{features:[[9,13,1,6,-1],[9,16,1,3,2]],threshold:.0112956296652555,right_val:.1884590983390808,left_val:.4983777105808258},{features:[[10,12,2,2,-1],[11,12,1,1,2],[10,13,1,1,2]],threshold:-.000669528788421303,right_val:.4799019992351532,left_val:.5872138142585754},{features:[[4,12,2,3,-1],[4,13,2,1,3]],threshold:.0014410680159926414,right_val:.350101113319397,left_val:.5131189227104187},{features:[[14,4,6,6,-1],[14,6,6,2,3]],threshold:.0024637870956212282,right_val:.4117639064788818,left_val:.5339372158050537},{features:[[8,17,2,3,-1],[8,18,2,1,3]],threshold:.0003311451873742044,right_val:.5398246049880981,left_val:.4313383102416992},{features:[[16,4,4,6,-1],[16,6,4,2,3]],threshold:-.0335572697222233,right_val:.5179154872894287,left_val:.26753368973732},{features:[[0,4,4,6,-1],[0,6,4,2,3]],threshold:.0185394193977118,right_val:.2317177057266235,left_val:.4973869919776917},{features:[[14,6,2,3,-1],[14,6,1,3,2]],threshold:-.00029698139405809343,right_val:.4643664062023163,left_val:.552970826625824},{features:[[4,9,8,1,-1],[8,9,4,1,2]],threshold:-.0004557725915219635,right_val:.4469191133975983,left_val:.5629584193229675},{features:[[8,12,4,3,-1],[8,13,4,1,3]],threshold:-.0101589802652597,right_val:.4925918877124786,left_val:.6706212759017944},{features:[[5,12,10,6,-1],[5,14,10,2,3]],threshold:-22413829356082715e-21,right_val:.3912901878356934,left_val:.5239421725273132},{features:[[11,12,1,2,-1],[11,13,1,1,2]],threshold:7203496352303773e-20,right_val:.5501788854598999,left_val:.4799438118934631},{features:[[8,15,4,2,-1],[8,16,4,1,2]],threshold:-.006926720961928368,right_val:.4698084890842438,left_val:.6930009722709656},{features:[[6,9,8,8,-1],[10,9,4,4,2],[6,13,4,4,2]],threshold:-.007699783891439438,right_val:.5480883121490479,left_val:.409962385892868},{features:[[7,12,4,6,-1],[7,12,2,3,2],[9,15,2,3,2]],threshold:-.007313054986298084,right_val:.5057886242866516,left_val:.3283475935459137},{features:[[10,11,3,1,-1],[11,11,1,1,3]],threshold:.0019650589674711227,right_val:.6398249864578247,left_val:.4978047013282776},{features:[[9,7,2,10,-1],[9,7,1,5,2],[10,12,1,5,2]],threshold:.007164760027080774,right_val:.6222137212753296,left_val:.4661160111427307},{features:[[8,0,6,6,-1],[10,0,2,6,3]],threshold:-.0240786392241716,right_val:.5222162008285522,left_val:.2334644943475723},{features:[[3,11,2,6,-1],[3,13,2,2,3]],threshold:-.0210279691964388,right_val:.4938226044178009,left_val:.1183653995394707},{features:[[16,12,1,2,-1],[16,13,1,1,2]],threshold:.00036017020465806127,right_val:.4116711020469666,left_val:.5325019955635071},{features:[[1,14,6,6,-1],[1,14,3,3,2],[4,17,3,3,2]],threshold:-.0172197297215462,right_val:.4664269089698792,left_val:.6278762221336365},{features:[[13,1,3,6,-1],[14,1,1,6,3]],threshold:-.007867214269936085,right_val:.5249736905097961,left_val:.3403415083885193},{features:[[8,8,2,2,-1],[8,9,2,1,2]],threshold:-.000447773898486048,right_val:.5086259245872498,left_val:.3610411882400513},{features:[[9,9,3,3,-1],[10,9,1,3,3]],threshold:.005548601038753986,right_val:.6203498244285583,left_val:.4884265959262848},{features:[[8,7,3,3,-1],[8,8,3,1,3]],threshold:-.00694611482322216,right_val:.5011097192764282,left_val:.262593001127243},{features:[[14,0,2,3,-1],[14,0,1,3,2]],threshold:.00013569870498031378,right_val:.5628312230110168,left_val:.4340794980525971},{features:[[1,0,18,9,-1],[7,0,6,9,3]],threshold:-.0458802506327629,right_val:.4696274995803833,left_val:.6507998704910278},{features:[[11,5,4,15,-1],[11,5,2,15,2]],threshold:-.0215825606137514,right_val:.5287616848945618,left_val:.3826502859592438},{features:[[5,5,4,15,-1],[7,5,2,15,2]],threshold:-.0202095396816731,right_val:.5074477195739746,left_val:.3233368098735809},{features:[[14,0,2,3,-1],[14,0,1,3,2]],threshold:.005849671084433794,right_val:.4489670991897583,left_val:.5177603960037231},{features:[[4,0,2,3,-1],[5,0,1,3,2]],threshold:-5747637987951748e-20,right_val:.5246363878250122,left_val:.4020850956439972},{features:[[11,12,2,2,-1],[12,12,1,1,2],[11,13,1,1,2]],threshold:-.001151310047134757,right_val:.490515410900116,left_val:.6315072178840637},{features:[[7,12,2,2,-1],[7,12,1,1,2],[8,13,1,1,2]],threshold:.0019862831104546785,right_val:.6497151255607605,left_val:.4702459871768951},{features:[[12,0,3,4,-1],[13,0,1,4,3]],threshold:-.005271951202303171,right_val:.5227652788162231,left_val:.3650383949279785},{features:[[4,11,3,3,-1],[4,12,3,1,3]],threshold:.0012662699446082115,right_val:.387761801481247,left_val:.5166100859642029},{features:[[12,7,4,2,-1],[12,8,4,1,2]],threshold:-.006291944067925215,right_val:.5023847818374634,left_val:.737589418888092},{features:[[8,10,3,2,-1],[9,10,1,2,3]],threshold:.000673601112794131,right_val:.5495585799217224,left_val:.4423226118087769},{features:[[9,9,3,2,-1],[10,9,1,2,3]],threshold:-.0010523450328037143,right_val:.4859583079814911,left_val:.5976396203041077},{features:[[8,9,3,2,-1],[9,9,1,2,3]],threshold:-.00044216238893568516,right_val:.4398930966854096,left_val:.5955939292907715},{features:[[12,0,3,4,-1],[13,0,1,4,3]],threshold:.0011747940443456173,right_val:.4605058133602142,left_val:.5349888205528259},{features:[[5,0,3,4,-1],[6,0,1,4,3]],threshold:.005245743785053492,right_val:.2941577136516571,left_val:.5049191117286682},{features:[[4,14,12,4,-1],[10,14,6,2,2],[4,16,6,2,2]],threshold:-.0245397202670574,right_val:.5218586921691895,left_val:.2550177872180939},{features:[[8,13,2,3,-1],[8,14,2,1,3]],threshold:.0007379304151982069,right_val:.5490816235542297,left_val:.4424861073493958},{features:[[10,10,3,8,-1],[10,14,3,4,2]],threshold:.0014233799884095788,right_val:.4081355929374695,left_val:.5319514274597168},{features:[[8,10,4,8,-1],[8,10,2,4,2],[10,14,2,4,2]],threshold:-.0024149110540747643,right_val:.5238950252532959,left_val:.4087659120559692},{features:[[10,8,3,1,-1],[11,8,1,1,3]],threshold:-.0012165299849584699,right_val:.4908052980899811,left_val:.567457914352417},{features:[[9,12,1,6,-1],[9,15,1,3,2]],threshold:-.0012438809499144554,right_val:.5256118178367615,left_val:.4129425883293152},{features:[[10,8,3,1,-1],[11,8,1,1,3]],threshold:.006194273941218853,right_val:.7313653230667114,left_val:.5060194134712219},{features:[[7,8,3,1,-1],[8,8,1,1,3]],threshold:-.0016607169527560472,right_val:.4596369862556458,left_val:.5979632139205933},{features:[[5,2,15,14,-1],[5,9,15,7,2]],threshold:-.0273162592202425,right_val:.5308842062950134,left_val:.4174365103244782},{features:[[2,1,2,10,-1],[2,1,1,5,2],[3,6,1,5,2]],threshold:-.00158455700147897,right_val:.4519486129283905,left_val:.56158047914505},{features:[[14,14,2,3,-1],[14,15,2,1,3]],threshold:-.0015514739789068699,right_val:.5360785126686096,left_val:.4076187014579773},{features:[[2,7,3,3,-1],[3,7,1,3,3]],threshold:.0003844655875582248,right_val:.5430442094802856,left_val:.4347293972969055},{features:[[17,4,3,3,-1],[17,5,3,1,3]],threshold:-.0146722598001361,right_val:.5146093964576721,left_val:.1659304946660996},{features:[[0,4,3,3,-1],[0,5,3,1,3]],threshold:.008160888217389584,right_val:.1884745955467224,left_val:.4961819052696228},{features:[[13,5,6,2,-1],[16,5,3,1,2],[13,6,3,1,2]],threshold:.0011121659772470593,right_val:.6093816161155701,left_val:.4868263900279999},{features:[[4,19,12,1,-1],[8,19,4,1,3]],threshold:-.007260377053171396,right_val:.4690375924110413,left_val:.6284325122833252},{features:[[12,12,2,4,-1],[12,14,2,2,2]],threshold:-.00024046430189628154,right_val:.4046044051647186,left_val:.5575000047683716},{features:[[3,15,1,3,-1],[3,16,1,1,3]],threshold:-.00023348190006799996,right_val:.5252848267555237,left_val:.4115762114524841},{features:[[11,16,6,4,-1],[11,16,3,4,2]],threshold:.005573648028075695,right_val:.5690100789070129,left_val:.4730072915554047},{features:[[2,10,3,10,-1],[3,10,1,10,3]],threshold:.0306237693876028,right_val:.1740095019340515,left_val:.4971886873245239},{features:[[12,8,2,4,-1],[12,8,1,4,2]],threshold:.0009207479888573289,right_val:.4354872107505798,left_val:.5372117757797241},{features:[[6,8,2,4,-1],[7,8,1,4,2]],threshold:-4355073906481266e-20,right_val:.4347316920757294,left_val:.5366883873939514},{features:[[10,14,2,3,-1],[10,14,1,3,2]],threshold:-.006645271088927984,right_val:.516053318977356,left_val:.3435518145561218},{features:[[5,1,10,3,-1],[10,1,5,3,2]],threshold:.0432219989597797,right_val:.7293652892112732,left_val:.4766792058944702},{features:[[10,7,3,2,-1],[11,7,1,2,3]],threshold:.0022331769578158855,right_val:.5633171200752258,left_val:.5029315948486328},{features:[[5,6,9,2,-1],[8,6,3,2,3]],threshold:.0031829739455133677,right_val:.5192136764526367,left_val:.4016092121601105},{features:[[9,8,2,2,-1],[9,9,2,1,2]],threshold:-.00018027749320026487,right_val:.5417919754981995,left_val:.4088315963745117},{features:[[2,11,16,6,-1],[2,11,8,3,2],[10,14,8,3,2]],threshold:-.0052934689447283745,right_val:.5243561863899231,left_val:.407567709684372},{features:[[12,7,2,2,-1],[13,7,1,1,2],[12,8,1,1,2]],threshold:.0012750959722325206,right_val:.6387010812759399,left_val:.4913282990455627},{features:[[9,5,2,3,-1],[9,6,2,1,3]],threshold:.004338532220572233,right_val:.2947346866130829,left_val:.5031672120094299},{features:[[9,7,3,2,-1],[10,7,1,2,3]],threshold:.00852507445961237,right_val:.6308869123458862,left_val:.4949789047241211},{features:[[5,1,8,12,-1],[5,7,8,6,2]],threshold:-.0009426635224372149,right_val:.4285649955272675,left_val:.5328366756439209},{features:[[13,5,2,2,-1],[13,6,2,1,2]],threshold:.0013609660090878606,right_val:.5941501259803772,left_val:.4991525113582611},{features:[[5,5,2,2,-1],[5,6,2,1,2]],threshold:.0004478250921238214,right_val:.5854480862617493,left_val:.4573504030704498},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:.001336005050688982,right_val:.584905207157135,left_val:.4604358971118927},{features:[[4,14,2,3,-1],[4,15,2,1,3]],threshold:-.0006096754805184901,right_val:.522942304611206,left_val:.3969388902187347},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:-.002365678083151579,right_val:.4898357093334198,left_val:.5808320045471191},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.001073434017598629,right_val:.5470039248466492,left_val:.435121089220047},{features:[[9,14,2,6,-1],[10,14,1,3,2],[9,17,1,3,2]],threshold:.0021923359017819166,right_val:.3842903971672058,left_val:.535506010055542},{features:[[8,14,3,2,-1],[9,14,1,2,3]],threshold:.005496861878782511,right_val:.2827191948890686,left_val:.5018138885498047},{features:[[9,5,6,6,-1],[11,5,2,6,3]],threshold:-.0753688216209412,right_val:.5148826837539673,left_val:.1225076019763947},{features:[[5,5,6,6,-1],[7,5,2,6,3]],threshold:.0251344703137875,right_val:.702544629573822,left_val:.4731766879558563},{features:[[13,13,1,2,-1],[13,14,1,1,2]],threshold:-2935859993158374e-20,right_val:.465608686208725,left_val:.5430532097816467},{features:[[0,2,10,2,-1],[0,3,10,1,2]],threshold:-.0005835591000504792,right_val:.5190119743347168,left_val:.4031040072441101},{features:[[13,13,1,2,-1],[13,14,1,1,2]],threshold:-.0026639450807124376,right_val:.5161771178245544,left_val:.4308126866817474},{features:[[5,7,2,2,-1],[5,7,1,1,2],[6,8,1,1,2]],threshold:-.0013804089976474643,right_val:.4695515930652618,left_val:.621982991695404},{features:[[13,5,2,7,-1],[13,5,1,7,2]],threshold:.0012313219485804439,right_val:.4425831139087677,left_val:.5379363894462585},{features:[[6,13,1,2,-1],[6,14,1,1,2]],threshold:-14644179827882908e-21,right_val:.4222503006458283,left_val:.5281640291213989},{features:[[11,0,3,7,-1],[12,0,1,7,3]],threshold:-.0128188095986843,right_val:.5179932713508606,left_val:.2582092881202698},{features:[[0,3,2,16,-1],[0,3,1,8,2],[1,11,1,8,2]],threshold:.0228521898388863,right_val:.7609264254570007,left_val:.4778693020343781},{features:[[11,0,3,7,-1],[12,0,1,7,3]],threshold:.0008230597013607621,right_val:.4671724140644074,left_val:.5340992212295532},{features:[[6,0,3,7,-1],[7,0,1,7,3]],threshold:.0127701200544834,right_val:.1472366005182266,left_val:.4965761005878449},{features:[[11,16,8,4,-1],[11,16,4,4,2]],threshold:-.0500515103340149,right_val:.5016592144966125,left_val:.641499400138855},{features:[[1,16,8,4,-1],[5,16,4,4,2]],threshold:.0157752707600594,right_val:.5685362219810486,left_val:.4522320032119751},{features:[[13,5,2,7,-1],[13,5,1,7,2]],threshold:-.0185016207396984,right_val:.5137959122657776,left_val:.2764748930931091},{features:[[5,5,2,7,-1],[6,5,1,7,2]],threshold:.0024626250378787518,right_val:.3795408010482788,left_val:.5141941905021667},{features:[[18,6,2,14,-1],[18,13,2,7,2]],threshold:.0629161670804024,right_val:.658043384552002,left_val:.5060648918151855},{features:[[6,10,3,4,-1],[6,12,3,2,2]],threshold:-21648500478477217e-21,right_val:.401988685131073,left_val:.5195388197898865},{features:[[14,7,1,2,-1],[14,8,1,1,2]],threshold:.0021180990152060986,right_val:.5954458713531494,left_val:.4962365031242371},{features:[[0,1,18,6,-1],[0,1,9,3,2],[9,4,9,3,2]],threshold:-.0166348908096552,right_val:.517544686794281,left_val:.3757933080196381},{features:[[14,7,1,2,-1],[14,8,1,1,2]],threshold:-.002889947034418583,right_val:.5057178735733032,left_val:.6624013781547546},{features:[[0,6,2,14,-1],[0,13,2,7,2]],threshold:.076783262193203,right_val:.8047714829444885,left_val:.4795796871185303},{features:[[17,0,3,12,-1],[18,0,1,12,3]],threshold:.003917067777365446,right_val:.5719941854476929,left_val:.4937882125377655},{features:[[0,6,18,3,-1],[0,7,18,1,3]],threshold:-.0726706013083458,right_val:.4943903982639313,left_val:.0538945607841015},{features:[[6,0,14,16,-1],[6,8,14,8,2]],threshold:.5403950214385986,right_val:.1143338978290558,left_val:.5129774212837219},{features:[[0,0,3,12,-1],[1,0,1,12,3]],threshold:.0029510019812732935,right_val:.5698574185371399,left_val:.4528343975543976},{features:[[13,0,3,7,-1],[14,0,1,7,3]],threshold:.0034508369863033295,right_val:.4218730926513672,left_val:.5357726812362671},{features:[[5,7,1,2,-1],[5,8,1,1,2]],threshold:-.0004207793972454965,right_val:.4637925922870636,left_val:.5916172862052917},{features:[[14,4,6,6,-1],[14,6,6,2,3]],threshold:.0033051050268113613,right_val:.438204288482666,left_val:.5273385047912598},{features:[[5,7,7,2,-1],[5,8,7,1,2]],threshold:.0004773506079800427,right_val:.5181884765625,left_val:.4046528041362763},{features:[[8,6,6,9,-1],[8,9,6,3,3]],threshold:-.0259285103529692,right_val:.5089386105537415,left_val:.7452235817909241},{features:[[5,4,6,1,-1],[7,4,2,1,3]],threshold:-.002972979098558426,right_val:.5058795213699341,left_val:.3295435905456543},{features:[[13,0,6,4,-1],[16,0,3,2,2],[13,2,3,2,2]],threshold:.005850832909345627,right_val:.5793024897575378,left_val:.4857144057750702},{features:[[1,2,18,12,-1],[1,6,18,4,3]],threshold:-.0459675192832947,right_val:.5380653142929077,left_val:.4312731027603149},{features:[[3,2,17,12,-1],[3,6,17,4,3]],threshold:.1558596044778824,right_val:.1684713959693909,left_val:.5196170210838318},{features:[[5,14,7,3,-1],[5,15,7,1,3]],threshold:.0151648297905922,right_val:.6735026836395264,left_val:.4735757112503052},{features:[[10,14,1,3,-1],[10,15,1,1,3]],threshold:-.0010604249546304345,right_val:.4775702953338623,left_val:.5822926759719849},{features:[[3,14,3,3,-1],[3,15,3,1,3]],threshold:.006647629197686911,right_val:.231953501701355,left_val:.4999198913574219},{features:[[14,4,6,6,-1],[14,6,6,2,3]],threshold:-.0122311301529408,right_val:.5262982249259949,left_val:.4750893115997315},{features:[[0,4,6,6,-1],[0,6,6,2,3]],threshold:.005652888212352991,right_val:.3561818897724152,left_val:.5069767832756042},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:.0012977829901501536,right_val:.5619062781333923,left_val:.4875693917274475},{features:[[4,5,4,3,-1],[4,6,4,1,3]],threshold:.0107815898954868,right_val:.6782308220863342,left_val:.4750770032405853},{features:[[18,0,2,6,-1],[18,2,2,2,3]],threshold:.002865477930754423,right_val:.4290736019611359,left_val:.5305461883544922},{features:[[8,1,4,9,-1],[10,1,2,9,2]],threshold:.0028663428965955973,right_val:.5539351105690002,left_val:.4518479108810425},{features:[[6,6,8,2,-1],[6,6,4,2,2]],threshold:-.005198332015424967,right_val:.5434188842773438,left_val:.4149119853973389},{features:[[6,5,4,2,-1],[6,5,2,1,2],[8,6,2,1,2]],threshold:.005373999010771513,right_val:.6507657170295715,left_val:.471789687871933},{features:[[10,5,2,3,-1],[10,6,2,1,3]],threshold:-.0146415298804641,right_val:.5161777138710022,left_val:.2172164022922516},{features:[[9,5,1,3,-1],[9,6,1,1,3]],threshold:-15042580344015732e-21,right_val:.4298836886882782,left_val:.533738374710083},{features:[[9,10,2,2,-1],[9,11,2,1,2]],threshold:-.0001187566012958996,right_val:.5582447052001953,left_val:.4604594111442566},{features:[[0,8,4,3,-1],[0,9,4,1,3]],threshold:.0169955305755138,right_val:.0738800764083862,left_val:.4945895075798035},{features:[[6,0,8,6,-1],[6,3,8,3,2]],threshold:-.0350959412753582,right_val:.4977591037750244,left_val:.70055091381073},{features:[[1,0,6,4,-1],[1,0,3,2,2],[4,2,3,2,2]],threshold:.0024217350874096155,right_val:.5477694272994995,left_val:.4466265141963959},{features:[[13,0,3,7,-1],[14,0,1,7,3]],threshold:-.0009634033776819706,right_val:.5313338041305542,left_val:.4714098870754242},{features:[[9,16,2,2,-1],[9,17,2,1,2]],threshold:.00016391130338888615,right_val:.5342242121696472,left_val:.4331546127796173},{features:[[11,4,6,10,-1],[11,9,6,5,2]],threshold:-.0211414601653814,right_val:.5204498767852783,left_val:.2644700109958649},{features:[[0,10,19,2,-1],[0,11,19,1,2]],threshold:.0008777520270086825,right_val:.4152742922306061,left_val:.5208349823951721},{features:[[9,5,8,9,-1],[9,8,8,3,3]],threshold:-.0279439203441143,right_val:.5018811821937561,left_val:.6344125270843506},{features:[[4,0,3,7,-1],[5,0,1,7,3]],threshold:.006729737855494022,right_val:.3500863909721375,left_val:.5050438046455383},{features:[[8,6,4,12,-1],[10,6,2,6,2],[8,12,2,6,2]],threshold:.0232810396701097,right_val:.6968677043914795,left_val:.4966318011283875},{features:[[0,2,6,4,-1],[0,4,6,2,2]],threshold:-.0116449799388647,right_val:.5049629807472229,left_val:.3300260007381439},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:.0157643090933561,right_val:.7321153879165649,left_val:.4991598129272461},{features:[[8,0,3,7,-1],[9,0,1,7,3]],threshold:-.001361147966235876,right_val:.5160670876502991,left_val:.3911735117435455},{features:[[9,5,3,4,-1],[10,5,1,4,3]],threshold:-.0008152233785949647,right_val:.49497190117836,left_val:.5628911256790161},{features:[[8,5,3,4,-1],[9,5,1,4,3]],threshold:-.0006006627227179706,right_val:.4550595879554749,left_val:.585359513759613},{features:[[7,6,6,1,-1],[9,6,2,1,3]],threshold:.0004971551825292408,right_val:.5443599224090576,left_val:.4271470010280609},{features:[[7,14,4,4,-1],[7,14,2,2,2],[9,16,2,2,2]],threshold:.0023475370835512877,right_val:.3887656927108765,left_val:.5143110752105713},{features:[[13,14,4,6,-1],[15,14,2,3,2],[13,17,2,3,2]],threshold:-.008926156908273697,right_val:.497172087430954,left_val:.6044502258300781},{features:[[7,8,1,8,-1],[7,12,1,4,2]],threshold:-.013919910416007,right_val:.5000367760658264,left_val:.2583160996437073},{features:[[16,0,2,8,-1],[17,0,1,4,2],[16,4,1,4,2]],threshold:.0010209949687123299,right_val:.5560358166694641,left_val:.4857374131679535},{features:[[2,0,2,8,-1],[2,0,1,4,2],[3,4,1,4,2]],threshold:-.0027441629208624363,right_val:.464577704668045,left_val:.5936884880065918},{features:[[6,1,14,3,-1],[6,2,14,1,3]],threshold:-.0162001308053732,right_val:.5193495154380798,left_val:.3163014948368073},{features:[[7,9,3,10,-1],[7,14,3,5,2]],threshold:.004333198070526123,right_val:.3458878993988037,left_val:.5061224102973938},{features:[[9,14,2,2,-1],[9,15,2,1,2]],threshold:.0005849793087691069,right_val:.5870177745819092,left_val:.4779017865657806},{features:[[7,7,6,8,-1],[7,11,6,4,2]],threshold:-.0022466450463980436,right_val:.5374773144721985,left_val:.4297851026058197},{features:[[9,7,3,6,-1],[9,10,3,3,2]],threshold:.0023146099410951138,right_val:.4640969932079315,left_val:.5438671708106995},{features:[[7,13,3,3,-1],[7,14,3,1,3]],threshold:.008767912164330482,right_val:.6771789789199829,left_val:.472689300775528},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.00022448020172305405,right_val:.5428048968315125,left_val:.4229173064231873},{features:[[0,1,18,2,-1],[6,1,6,2,3]],threshold:-.007433602120727301,right_val:.4683673977851868,left_val:.6098880767822266},{features:[[7,1,6,14,-1],[7,8,6,7,2]],threshold:-.0023189240600913763,right_val:.4424242079257965,left_val:.5689436793327332},{features:[[1,9,18,1,-1],[7,9,6,1,3]],threshold:-.0021042178850620985,right_val:.5187087059020996,left_val:.3762221038341522},{features:[[9,7,2,2,-1],[9,7,1,2,2]],threshold:.000460348412161693,right_val:.5771207213401794,left_val:.4699405133724213},{features:[[9,3,2,9,-1],[10,3,1,9,2]],threshold:.0010547629790380597,right_val:.5601701736450195,left_val:.4465216994285584},{features:[[18,14,2,3,-1],[18,15,2,1,3]],threshold:.0008714881842024624,right_val:.3914709091186523,left_val:.544980525970459},{features:[[7,11,3,1,-1],[8,11,1,1,3]],threshold:.00033364820410497487,right_val:.5645738840103149,left_val:.4564009010791779},{features:[[10,8,3,4,-1],[11,8,1,4,3]],threshold:-.0014853250468149781,right_val:.4692778885364533,left_val:.5747377872467041},{features:[[7,14,3,6,-1],[8,14,1,6,3]],threshold:.0030251620337367058,right_val:.3762814104557037,left_val:.5166196823120117},{features:[[10,8,3,4,-1],[11,8,1,4,3]],threshold:.005028074141591787,right_val:.6151527166366577,left_val:.5002111792564392},{features:[[7,8,3,4,-1],[8,8,1,4,3]],threshold:-.0005816451157443225,right_val:.4390751123428345,left_val:.5394598245620728},{features:[[7,9,6,9,-1],[7,12,6,3,3]],threshold:.0451415292918682,right_val:.206303596496582,left_val:.5188326835632324},{features:[[0,14,2,3,-1],[0,15,2,1,3]],threshold:-.001079562003724277,right_val:.5137907266616821,left_val:.3904685080051422},{features:[[11,12,1,2,-1],[11,13,1,1,2]],threshold:.00015995999274309725,right_val:.5427504181861877,left_val:.4895322918891907},{features:[[4,3,8,3,-1],[8,3,4,3,2]],threshold:-.0193592701107264,right_val:.4773507118225098,left_val:.6975228786468506},{features:[[0,4,20,6,-1],[0,4,10,6,2]],threshold:.207255095243454,right_val:.3034991919994354,left_val:.5233635902404785},{features:[[9,14,1,3,-1],[9,15,1,1,3]],threshold:-.00041953290929086506,right_val:.4460186064243317,left_val:.5419396758079529},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.0022582069505006075,right_val:.6027408838272095,left_val:.4815764129161835},{features:[[0,15,14,4,-1],[0,17,14,2,2]],threshold:-.0067811207845807076,right_val:.5183305740356445,left_val:.3980278968811035},{features:[[1,14,18,6,-1],[1,17,18,3,2]],threshold:.0111543098464608,right_val:.4188759922981262,left_val:.543123185634613},{features:[[0,0,10,6,-1],[0,0,5,3,2],[5,3,5,3,2]],threshold:.0431624315679073,right_val:.6522961258888245,left_val:.4738228023052216}],threshold:105.76110076904297}],size:[20,20],tilted:!1};var svmFilter=function(){var e,t,r,n,o,l,h,f,c,d,v;this.fft_inplace=function(t,r){void 0===r&&(r=d);for(var i=0;i<l;i++)r[i]=0;return e.real_fft2d(t,r),[t,r]},this.ifft=function(t,r){return e.real_ifft2d(t,r),t};var _=function(e,t){for(var r,n,o=0;o<l;o++)r=e[0][o]*t[0][o]-e[1][o]*t[1][o],n=e[0][o]*t[1][o]+e[1][o]*t[0][o],e[0][o]=r,e[1][o]=n};this.init=function(_,m,y,w,M){var E;o=x(w-1+M),l=o*o,(e=new FFT$1).init(o),t=Array(y);for(var S=(w-1)/2,i=0;i<y;i++){for(var T=new Float64Array(l),A=new Float64Array(l),R=0;R<w;R++)for(var C=0;C<w;C++)T[C+(C<S?o-S:-S)+(R+(R<S?o-S:-S))*o]=_[i][w-1-R+(w-1-C)*w];E=this.fft_inplace(T,A),t[i]=E}n=new Float64Array(y);for(i=0;i<y;i++)n[i]=m[i];r=Array(y),d=Array(y);for(i=0;i<y;i++)r[i]=new Float64Array(M*M),d[i]=new Float64Array(M*M);v=new Float64Array(l),c=y,h=w,f=M},this.getResponses=function(e){for(var l,d,x=h-1+f,i=0;i<c;i++){for(var M=0;M<o*o;M++)v[M]=0;e[i]=m(e[i]);for(M=0;M<x;M++)for(var E=0;E<x;E++)v[M+o*E]=e[i][E+x*M];l=this.fft_inplace(v),_(l,t[i]),l=this.ifft(l[0],l[1]),d=(h-1)/2;for(M=0;M<f;M++)for(E=0;E<f;E++)r[i][M+E*f]=l[d+E+(M+d)*o];for(M=0;M<f*f;M++)r[i][M]+=n[i];r[i]=y(r[i]),w(r[i])}return r};var m=function(e){for(var t,r=h-1+f,n=0,o=1e3,l=0;l<r;l++)for(var c=0;c<r;c++)(t=e[c+r*l])<o&&(o=t),t>n&&(n=t);var d=n-o;for(l=0;l<r;l++)for(c=0;c<r;c++)e[c+r*l]=(e[c+r*l]-o)/d;return e},y=function(e){for(var t=0;t<f;t++)for(var r=0;r<f;r++)e[t+r*f]=1/(1+Math.exp(-(e[t+r*f]-1)));return e},x=function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},w=function(e){for(var t=e.length,r=0,n=1,i=0;i<t;i++)r=e[i]>r?e[i]:r,n=e[i]<n?e[i]:n;var o=r-n;if(0==o);else for(i=0;i<t;i++)e[i]=(e[i]-n)/o}},webglUtils=createCommonjsModule((function(e,t){!function(){var t=!0;const r=function(e){if(t)throw window.console&&(window.console.error?window.console.error(e):window.console.log&&window.console.log(e)),e},n=function(){return window!==window.top},o=function(canvas,e){if(!window.WebGLRenderingContext)return null;var t=l(canvas,e);return t||null},l=function(canvas,e){for(var t=["webgl","experimental-webgl"],r=null,n=0;n<t.length;++n){try{r=canvas.getContext(t[n],e)}catch(e){}if(r)break}return r},h=function(canvas){return n()&&(n()&&(document.body.className="iframe"),canvas.width=canvas.clientWidth,canvas.height=canvas.clientHeight),o(canvas)},f=function(e,t,n,o){var l=o||r,h=e.createShader(n);return e.shaderSource(h,t),e.compileShader(h),e.getShaderParameter(h,e.COMPILE_STATUS)?h:(l("*** Error compiling shader '"+h+"':"+e.getShaderInfoLog(h)),e.deleteShader(h),null)},c=function(e,t,n,o){for(var l=e.createProgram(),i=0;i<t.length;++i)e.attachShader(l,t[i]);if(n)for(i=0;i<n.length;++i)e.bindAttribLocation(l,o?o[i]:i,n[i]);e.linkProgram(l);if(!e.getProgramParameter(l,e.LINK_STATUS)){const t=e.getProgramInfoLog(l);return r("Error in program linking:"+t),e.deleteProgram(l),null}return l},d=function(e,t,r,n){var o,l,h=document.getElementById(t);if(!h)throw new Error("*** Error: unknown script element"+t);if(o=h.text,!r)if("x-shader/x-vertex"===h.type)l=e.VERTEX_SHADER;else if("x-shader/x-fragment"===h.type)l=e.FRAGMENT_SHADER;else if(l!==e.VERTEX_SHADER&&l!==e.FRAGMENT_SHADER)throw new Error("*** Error: unknown shader type");return f(e,o,r||l,n)};e.exports={setupWebGL:o,createProgram:c,createShaderFromScript:d,getWebGLContext:h,loadShader:f}}()})),webglUtils_1=webglUtils.setupWebGL,webglUtils_2=webglUtils.createProgram,webglUtils_5=webglUtils.loadShader,webglFilter=function(){var e,canvas,t,r,n,o,l,h,f,c,d,v,_,m,y,x,w,M,E,S,T,A,R,C,L,P,O,k,I,N,D,B,F,U,j,V,z,G,H,W,X,Y,Z,J,K,Q,$,ee=!1,te=!1,re=["attribute vec2 a_texCoord;","attribute vec2 a_position;","","varying vec2 v_texCoord;","","void main() {","   // transform coordinates to regular coordinates","   gl_Position = vec4(a_position,0.0,1.0);"," ","   // pass the texCoord to the fragment shader","   v_texCoord = a_texCoord;","}"].join("\n"),ae=["attribute vec2 a_texCoord;","attribute vec2 a_position;","","varying vec2 v_texCoord;","","void main() {","   // transform coordinates to regular coordinates","   gl_Position = vec4(a_position,0.0,1.0);"," ","   // pass the texCoord to the fragment shader","   v_texCoord = a_texCoord;","}"].join("\n"),ie=["attribute vec2 a_texCoord_draw;","attribute vec2 a_position_draw;","attribute float a_patchChoice_draw;","","uniform vec2 u_resolutiondraw;","","varying vec2 v_texCoord;","varying float v_select;","","void main() {","   // convert the rectangle from pixels to 0.0 to 1.0","   vec2 zeroToOne = a_position_draw / u_resolutiondraw;","","   // convert from 0->1 to 0->2","   vec2 zeroToTwo = zeroToOne * 2.0;","","   // convert from 0->2 to -1->+1 (clipspace)","   vec2 clipSpace = zeroToTwo - 1.0;","   ","   // transform coordinates to regular coordinates","   gl_Position = vec4(clipSpace * vec2(1.0, 1.0), 0, 1);","","   // pass the texCoord to the fragment shader","   v_texCoord = a_texCoord_draw;","   ","   v_select = a_patchChoice_draw;","}"].join("\n"),ne=["precision mediump float;","","// our responses","uniform sampler2D u_responses;","","// the texCoords passed in from the vertex shader.","varying vec2 v_texCoord;","varying float v_select;","","const vec4 bit_shift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);","const vec4 bit_mask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);","","// packing code from here http://stackoverflow.com/questions/9882716/packing-float-into-vec4-how-does-this-code-work","void main() {","  vec4 colorSum = texture2D(u_responses, v_texCoord);","  float value = 0.0;","  if (v_select < 0.1) {","    value = colorSum[0];","  } else if (v_select > 0.9 && v_select < 1.1) {","    value = colorSum[1];","  } else if (v_select > 1.9 && v_select < 2.1) {","    value = colorSum[2];","  } else if (v_select > 2.9 && v_select < 3.1) {","    value = colorSum[3];","  } else {","    value = 1.0;","  }","  ","  vec4 res = fract(value * bit_shift);","  res -= res.xxyz * bit_mask;","  ","  //gl_FragColor = vec4(value, value, value, value);","  //gl_FragColor = vec4(1.0, value, 1.0, 1.0);","  gl_FragColor = res;","}"].join("\n");this.init=function(oe,le,he,ue,fe,ce,de){if(ce==de)if(ce%2!=0&&de%2!=0){F=le,t=ce,r=de,n=ue,o=fe,l=he,_=Math.floor(l/4)+Math.ceil(l%4/4),h=n,f=o*_,A=n-t+1,C=(R=o-t+1)*l,k=Math.floor(l/4)+Math.ceil(l%4/4),I=n,N=o*k,D=n*o,B=new Float32Array(D*k*4);var ve=[1/n,1/(o*_)];if($=["precision mediump float;","","const vec2 u_onePixelPatches = vec2("+(1/n).toFixed(10)+","+(1/(o*_)).toFixed(10)+");","const vec2 u_onePixelFilters = vec2("+(1/t).toFixed(10)+","+(1/(r*_)).toFixed(10)+");","const float u_halffilterwidth = "+((t-1)/2).toFixed(1)+";","const float u_halffilterheight = "+((r-1)/2).toFixed(1)+";","","// our patches","uniform sampler2D u_patches;","// our filters","uniform sampler2D u_filters;","","// the texCoords passed in from the vertex shader.","varying vec2 v_texCoord;","varying vec2 v_texCoordFilters; // this should give us correct filter","","void main() {","  vec4 colorSum = vec4(0.0, 0.0, 0.0, 0.0);","  vec4 maxn = vec4(0.0, 0.0, 0.0, 0.0);","  vec4 minn = vec4(256.0, 256.0, 256.0, 256.0);","  vec4 scale = vec4(0.0, 0.0, 0.0, 0.0);","  vec4 patchValue = vec4(0.0, 0.0, 0.0, 0.0);","  vec4 filterValue = vec4(0.0, 0.0, 0.0, 0.0);","  vec4 filterTemp = vec4(0.0, 0.0, 0.0, 0.0);","  for (int w = 0;w < "+t+";w++) {","    for (int h = 0;h < "+r+";h++) {","      patchValue = texture2D(u_patches, v_texCoord + u_onePixelPatches * vec2(float(w)-u_halffilterwidth, float(h)-u_halffilterheight));","      filterValue = texture2D(u_filters, v_texCoordFilters + u_onePixelFilters * vec2(float(w)-u_halffilterwidth, float(h)-u_halffilterheight));","      maxn = max(patchValue, maxn);","      minn = min(patchValue, minn);","      colorSum += patchValue*filterValue;","      filterTemp += filterValue;","    } ","  }","  scale = maxn-minn;","  colorSum = (colorSum-(minn*filterTemp))/scale;","  // logistic transformation","  colorSum = 1.0/(1.0 + exp(- (colorSum) ));","  gl_FragColor = colorSum;","}"].join("\n"),Q=["attribute vec2 a_texCoord;","attribute vec2 a_position;","","const vec2 u_resolution = vec2("+h.toFixed(1)+","+f.toFixed(1)+");","const float u_patchHeight = "+(1/_).toFixed(10)+";","const float u_filterHeight = "+(1/_).toFixed(10)+";","const vec2 u_midpoint = vec2(0.5 ,"+(1/(2*_)).toFixed(10)+");","","varying vec2 v_texCoord;","varying vec2 v_texCoordFilters;","","void main() {","   // convert the rectangle from pixels to 0.0 to 1.0","   vec2 zeroToOne = a_position / u_resolution;","","   // convert from 0->1 to 0->2","   vec2 zeroToTwo = zeroToOne * 2.0;","","   // convert from 0->2 to -1->+1 (clipspace)","   vec2 clipSpace = zeroToTwo - 1.0;","   ","   // transform coordinates to regular coordinates","   gl_Position = vec4(clipSpace * vec2(1.0, 1.0), 0, 1);"," ","   // pass the texCoord to the fragment shader","   v_texCoord = a_texCoord;","   ","   // set the filtertexture coordinate based on number filter to use","   v_texCoordFilters = u_midpoint + vec2(0.0, u_filterHeight * floor(a_texCoord[1]/u_patchHeight));","}"].join("\n"),"lbp"in oe&&(J=["precision mediump float;","","uniform vec2 u_onePixelPatches;","","// our patches","uniform sampler2D u_patches;","","// the texCoords passed in from the vertex shader.","varying vec2 v_texCoord;","","void main() {","  vec4 topLeft = texture2D(u_patches, v_texCoord + vec2(-"+ve[0].toFixed(5)+", -"+ve[1].toFixed(5)+"));","  vec4 topMid = texture2D(u_patches, v_texCoord + vec2(0.0, -"+ve[1].toFixed(5)+"));","  vec4 topRight = texture2D(u_patches, v_texCoord + vec2("+ve[0].toFixed(5)+", -"+ve[1].toFixed(5)+"));","  vec4 midLeft = texture2D(u_patches, v_texCoord + vec2(-"+ve[0].toFixed(5)+", 0.0));","  vec4 midMid = texture2D(u_patches, v_texCoord);","  vec4 midRight = texture2D(u_patches, v_texCoord + vec2("+ve[0].toFixed(5)+", 0.0));","  vec4 bottomLeft = texture2D(u_patches, v_texCoord + vec2(-"+ve[0].toFixed(5)+", "+ve[1].toFixed(5)+"));","  vec4 bottomMid = texture2D(u_patches, v_texCoord + vec2(0.0, "+ve[1].toFixed(5)+"));","  vec4 bottomRight = texture2D(u_patches, v_texCoord + vec2("+ve[0].toFixed(5)+", "+ve[1].toFixed(5)+"));","  vec4 lbp = step(midMid, midRight)*1.0 + step(midMid, topRight)*2.0 + step(midMid, topMid)*4.0;","  lbp = lbp + step(midMid, topLeft)*8.0 + step(midMid, midLeft)*16.0 + step(midMid, bottomLeft)*32.0;","  lbp = lbp + step(midMid, bottomMid)*64.0 + step(midMid, bottomRight)*128.0;","  gl_FragColor = lbp;","}"].join("\n")),"sobel"in oe&&(K=["precision mediump float;","","uniform vec2 u_onePixelPatches;","","// our patches","uniform sampler2D u_patches;","","// the texCoords passed in from the vertex shader.","varying vec2 v_texCoord;","","void main() {","  vec4 bottomLeft = texture2D(u_patches, v_texCoord + vec2(-"+ve[0].toFixed(5)+", "+ve[1].toFixed(5)+"));","  vec4 bottomRight = texture2D(u_patches, v_texCoord + vec2("+ve[0].toFixed(5)+", "+ve[1].toFixed(5)+"));","  vec4 topLeft = texture2D(u_patches, v_texCoord + vec2(-"+ve[0].toFixed(5)+", -"+ve[1].toFixed(5)+"));","  vec4 topRight = texture2D(u_patches, v_texCoord + vec2("+ve[0].toFixed(5)+", -"+ve[1].toFixed(5)+"));","  vec4 dx = (","    bottomLeft +","    (texture2D(u_patches, v_texCoord + vec2(-"+ve[0].toFixed(5)+", 0.0))*vec4(2.0,2.0,2.0,2.0)) +","    topLeft -","    bottomRight -","    (texture2D(u_patches, v_texCoord + vec2("+ve[0].toFixed(5)+", 0.0))*vec4(2.0,2.0,2.0,2.0)) -","    topRight)/4.0;","  vec4 dy = (","    bottomLeft +","    (texture2D(u_patches, v_texCoord + vec2(0.0, "+ve[1].toFixed(5)+"))*vec4(2.0,2.0,2.0,2.0)) +","    bottomRight -","    topLeft -","    (texture2D(u_patches, v_texCoord + vec2(0.0, -"+ve[1].toFixed(5)+"))*vec4(2.0,2.0,2.0,2.0)) -","    topRight)/4.0;","  vec4 gradient = sqrt((dx*dx) + (dy*dy));","  gl_FragColor = gradient;","}"].join("\n")),(canvas=document.createElement("canvas")).setAttribute("width",n-t+1+"px"),canvas.setAttribute("height",(o-r+1)*l+"px"),canvas.setAttribute("id","renderCanvas"),canvas.setAttribute("style","display:none;"),(e=webglUtils_1(canvas,{premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!1})).getExtension("OES_texture_float")){"raw"in oe&&(se(oe.raw,e.TEXTURE0),!0),"sobel"in oe&&(se(oe.sobel,e.TEXTURE4),te=!0),"lbp"in oe&&(se(oe.lbp,e.TEXTURE5),ee=!0);for(var pe=[],_e=(t-1)/2,i=0;i<_;i++)ye=i*o,pe=(pe=pe.concat([_e,ye+_e,n-_e,ye+_e,_e,ye+o-_e])).concat([_e,ye+o-_e,n-_e,ye+_e,n-_e,ye+o-_e]);pe=new Float32Array(pe);var ge,me=[];for(i=0;i<pe.length;i++)me[i]=i%2==0?pe[i]/h:pe[i]/f;if(me=new Float32Array(me),"lbp"in oe||"sobel"in oe){var ye,be=1-2/(o*_),xe=1-2/_+2/(o*_),we=[];for(i=0;i<_;i++)ye=i*(2/_),we=(we=we.concat([-1,be-ye,1,be-ye,-1,xe-ye])).concat([-1,xe-ye,1,be-ye,1,xe-ye]);we=new Float32Array(we),be=1-1/(o*_),xe=1-1/_+1/(o*_);var Me=[];for(i=0;i<_;i++)ye=i*(1/_),Me=(Me=Me.concat([0,be-ye,1,be-ye,0,xe-ye])).concat([0,xe-ye,1,be-ye,1,xe-ye]);Me=new Float32Array(Me)}L=new Float32Array(12*l);for(i=0;i<l;i++)ye=i*R,L[ge=12*i]=0,L[ge+1]=ye,L[ge+2]=A,L[ge+3]=ye,L[ge+4]=0,L[ge+5]=ye+R,L[ge+6]=0,L[ge+7]=ye+R,L[ge+8]=A,L[ge+9]=ye,L[ge+10]=A,L[ge+11]=ye+R;P=new Float32Array(12*l);var Ee,Se=(t-1)/2/n,Te=(t-1)/2/(o*k),Ae=o/(o*k);for(i=0;i<l;i++)ye=Math.floor(i/4)*Ae,P[ge=12*i]=Se,P[ge+1]=ye+Te,P[ge+2]=1-Se,P[ge+3]=ye+Te,P[ge+4]=Se,P[ge+5]=ye+Ae-Te,P[ge+6]=Se,P[ge+7]=ye+Ae-Te,P[ge+8]=1-Se,P[ge+9]=ye+Te,P[ge+10]=1-Se,P[ge+11]=ye+Ae-Te;O=new Float32Array(6*l);for(i=0;i<l;i++)Ee=i%4,O[ge=6*i]=Ee,O[ge+1]=Ee,O[ge+2]=Ee,O[ge+3]=Ee,O[ge+4]=Ee,O[ge+5]=Ee;if("sobel"in oe){var Re=webglUtils_5(e,ae,e.VERTEX_SHADER),Ce=webglUtils_5(e,K,e.FRAGMENT_SHADER);G=webglUtils_2(e,[Re,Ce]),e.useProgram(G),Y=e.getAttribLocation(G,"a_position"),Z=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,Z),e.bufferData(e.ARRAY_BUFFER,we,e.STATIC_DRAW),e.enableVertexAttribArray(Y),e.vertexAttribPointer(Y,2,e.FLOAT,!1,0,0),W=e.getAttribLocation(G,"a_texCoord"),X=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,X),e.bufferData(e.ARRAY_BUFFER,Me,e.STATIC_DRAW),e.enableVertexAttribArray(W),e.vertexAttribPointer(W,2,e.FLOAT,!1,0,0),e.uniform1i(e.getUniformLocation(G,"u_patches"),1)}if("lbp"in oe){var Le=webglUtils_5(e,re,e.VERTEX_SHADER),Pe=webglUtils_5(e,J,e.FRAGMENT_SHADER);U=webglUtils_2(e,[Le,Pe]),e.useProgram(U),V=e.getAttribLocation(U,"a_position"),z=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,z),e.bufferData(e.ARRAY_BUFFER,we,e.STATIC_DRAW),e.enableVertexAttribArray(V),e.vertexAttribPointer(V,2,e.FLOAT,!1,0,0),W=e.getAttribLocation(U,"a_texCoord"),j=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,j),e.bufferData(e.ARRAY_BUFFER,Me,e.STATIC_DRAW),e.enableVertexAttribArray(void 0),e.vertexAttribPointer(void 0,2,e.FLOAT,!1,0,0),e.uniform1i(e.getUniformLocation(U,"u_patches"),1)}var Oe=webglUtils_5(e,ie,e.VERTEX_SHADER),ke=webglUtils_5(e,ne,e.FRAGMENT_SHADER);d=webglUtils_2(e,[Oe,ke]),e.useProgram(d);var Ie=e.getUniformLocation(d,"u_resolutiondraw");e.uniform2f(Ie,A,C);var Ne=e.getUniformLocation(d,"u_responses");e.uniform1i(Ne,2);var De=webglUtils_5(e,Q,e.VERTEX_SHADER),Be=webglUtils_5(e,$,e.FRAGMENT_SHADER);c=webglUtils_2(e,[De,Be]),e.useProgram(c);var Fe=e.getAttribLocation(c,"a_position");if(T=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,T),e.bufferData(e.ARRAY_BUFFER,pe,e.STATIC_DRAW),e.enableVertexAttribArray(Fe),e.vertexAttribPointer(Fe,2,e.FLOAT,!1,0,0),S=e.getAttribLocation(c,"a_texCoord"),E=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,E),e.bufferData(e.ARRAY_BUFFER,me,e.STATIC_DRAW),e.enableVertexAttribArray(S),e.vertexAttribPointer(S,2,e.FLOAT,!1,0,0),"lbp"in oe||"sobel"in oe){e.activeTexture(e.TEXTURE3);var Ue=e.createTexture();e.bindTexture(e.TEXTURE_2D,Ue),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n,o*_,0,e.RGBA,e.FLOAT,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),H=e.createFramebuffer(),e.bindFramebuffer(e.FRAMEBUFFER,H),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,Ue,0)}e.activeTexture(e.TEXTURE2),M=e.createTexture(),e.bindTexture(e.TEXTURE_2D,M),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n,o*_,0,e.RGBA,e.FLOAT,null),v=e.createFramebuffer(),e.bindFramebuffer(e.FRAMEBUFFER,v),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,M,0),e.viewport(0,0,n,o*_),m=e.createTexture(),y=e.createBuffer(),w=e.createBuffer(),x=e.createBuffer()}else alert("Your graphics card does not support floating point textures! :(")}else alert("filters used in svm must be of odd dimensions!");else alert("filter width and height must be same size!")},this.getRawResponses=function(t){oe(t),e.useProgram(c),e.uniform1i(e.getUniformLocation(c,"u_patches"),1),e.uniform1i(e.getUniformLocation(c,"u_filters"),0);var r=e.getAttribLocation(c,"a_position");e.bindBuffer(e.ARRAY_BUFFER,T),e.enableVertexAttribArray(r),e.vertexAttribPointer(r,2,e.FLOAT,!1,0,0);var l=e.getAttribLocation(c,"a_texCoord");return e.bindBuffer(e.ARRAY_BUFFER,E),e.enableVertexAttribArray(l),e.vertexAttribPointer(l,2,e.FLOAT,!1,0,0),e.bindFramebuffer(e.FRAMEBUFFER,v),e.viewport(0,0,n,o*_),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER),e.drawArrays(e.TRIANGLES,0,6*k),le("raw")},this.getSobelResponses=function(t){if(te){oe(t),e.useProgram(G);var r=e.getAttribLocation(G,"a_position");e.bindBuffer(e.ARRAY_BUFFER,Z),e.enableVertexAttribArray(r),e.vertexAttribPointer(r,2,e.FLOAT,!1,0,0);var l=e.getAttribLocation(G,"a_texCoord");e.bindBuffer(e.ARRAY_BUFFER,X),e.enableVertexAttribArray(l),e.vertexAttribPointer(l,2,e.FLOAT,!1,0,0),e.bindFramebuffer(e.FRAMEBUFFER,H),e.viewport(0,0,n,o*_),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER),e.drawArrays(e.TRIANGLES,0,6*k),e.useProgram(c),e.uniform1i(e.getUniformLocation(c,"u_filters"),4),e.uniform1i(e.getUniformLocation(c,"u_patches"),3);var h=e.getAttribLocation(c,"a_position");e.bindBuffer(e.ARRAY_BUFFER,T),e.enableVertexAttribArray(h),e.vertexAttribPointer(h,2,e.FLOAT,!1,0,0);var f=e.getAttribLocation(c,"a_texCoord");return e.bindBuffer(e.ARRAY_BUFFER,E),e.enableVertexAttribArray(f),e.vertexAttribPointer(f,2,e.FLOAT,!1,0,0),e.bindFramebuffer(e.FRAMEBUFFER,v),e.viewport(0,0,n,o*_),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER),e.drawArrays(e.TRIANGLES,0,6*k),le("sobel")}},this.getLBPResponses=function(t){if(ee){oe(t),e.useProgram(U);var r=e.getAttribLocation(U,"a_position");e.bindBuffer(e.ARRAY_BUFFER,z),e.enableVertexAttribArray(r),e.vertexAttribPointer(r,2,e.FLOAT,!1,0,0);var l=e.getAttribLocation(U,"a_texCoord");e.bindBuffer(e.ARRAY_BUFFER,j),e.enableVertexAttribArray(l),e.vertexAttribPointer(l,2,e.FLOAT,!1,0,0),e.bindFramebuffer(e.FRAMEBUFFER,H),e.viewport(0,0,n,o*_),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER),e.drawArrays(e.TRIANGLES,0,6*k),e.useProgram(c),e.uniform1i(e.getUniformLocation(c,"u_filters"),5),e.uniform1i(e.getUniformLocation(c,"u_patches"),3);var h=e.getAttribLocation(c,"a_position");e.bindBuffer(e.ARRAY_BUFFER,T),e.enableVertexAttribArray(h),e.vertexAttribPointer(h,2,e.FLOAT,!1,0,0);var f=e.getAttribLocation(c,"a_texCoord");return e.bindBuffer(e.ARRAY_BUFFER,E),e.enableVertexAttribArray(f),e.vertexAttribPointer(f,2,e.FLOAT,!1,0,0),e.bindFramebuffer(e.FRAMEBUFFER,v),e.viewport(0,0,n,o*_),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER),e.drawArrays(e.TRIANGLES,0,6*k),le("lbp")}};var oe=function(t){for(var r=0,h=0,f=0,i=0;i<k;i++)for(var c=0;c<o;c++)for(var d=0;d<n;d++)h=4*i,B[r=4*(D*i+(f=c*n+d))]=h<l?t[h][f]:0,B[r+1]=h+1<l?t[h+1][f]:0,B[r+2]=h+2<l?t[h+2][f]:0,B[r+3]=h+3<l?t[h+3][f]:0;e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,m),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,I,N,0,e.RGBA,e.FLOAT,B),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST)},se=function(filter,n){for(var o=t*r,l=new Float32Array(o*_*4),i=0;i<_;i++)for(var h=0;h<r;h++)for(var f=0;f<t;f++)4*i<filter.length?l[4*(o*i+h*t+f)]=filter[4*i][h*t+f]:l[4*(o*i+h*t+f)]=0,4*i+1<filter.length?l[4*(o*i+h*t+f)+1]=filter[4*i+1][h*t+f]:l[4*(o*i+h*t+f)+1]=0,4*i+2<filter.length?l[4*(o*i+h*t+f)+2]=filter[4*i+2][h*t+f]:l[4*(o*i+h*t+f)+2]=0,4*i+3<filter.length?l[4*(o*i+h*t+f)+3]=filter[4*i+3][h*t+f]:l[4*(o*i+h*t+f)+3]=0;e.activeTexture(n);var c=e.createTexture();e.bindTexture(e.TEXTURE_2D,c),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,t,r*_,0,e.RGBA,e.FLOAT,l),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST)},le=function(t){e.useProgram(d),e.bindFramebuffer(e.FRAMEBUFFER,null),e.viewport(0,0,A,C),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER),e.bindBuffer(e.ARRAY_BUFFER,y),e.bufferData(e.ARRAY_BUFFER,L,e.STATIC_DRAW);var r=e.getAttribLocation(d,"a_position_draw");e.enableVertexAttribArray(r),e.vertexAttribPointer(r,2,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,w),e.bufferData(e.ARRAY_BUFFER,P,e.STATIC_DRAW);var n=e.getAttribLocation(d,"a_texCoord_draw");e.enableVertexAttribArray(n),e.vertexAttribPointer(n,2,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,x),e.bufferData(e.ARRAY_BUFFER,O,e.STATIC_DRAW);var o=e.getAttribLocation(d,"a_patchChoice_draw");e.enableVertexAttribArray(o),e.vertexAttribPointer(o,1,e.FLOAT,!1,0,0),e.drawArrays(e.TRIANGLES,0,6*l);var h=fe();h=ce(h),h=ue(h,l);for(var f=(h=he(h,F[t])).length,i=0;i<f;i++)h[i]=de(h[i]);return h},he=function(e,t){for(var r,i=0;i<e.length;i++){r=Math.exp(t[i]);for(var n=0;n<e[i].length;n++)e[i][n]=1/(1+(1-e[i][n])/(e[i][n]*r))}return e},ue=function(e,t){for(var r=[],n=e.length,o=n/t,l=[],i=0;i<n;i++)i%o==0&&(0!=i&&r.push(l),l=[]),l.push(e[i]);return r.push(l),r},fe=function(){var t=new Uint8Array(4*canvas.width*canvas.height);return e.readPixels(0,0,canvas.width,canvas.height,e.RGBA,e.UNSIGNED_BYTE,t),t},ce=function(e){for(var t=[],r=e.length,i=0;i<r;i+=4)t[i/4>>0]=e[i]/4294967296+e[i+1]/16777216+e[i+2]/65536+e[i+3]/256;return t},de=function(e){for(var t=e.length,r=0,n=1,i=0;i<t;i++)r=e[i]>r?e[i]:r,n=e[i]<n?e[i]:n;var o=r-n;if(0==o)e=e.map((function(){return 1}));else for(i=0;i<t;i++)e[i]=(e[i]-n)/o;return e}},mosseFilterResponses=function(){var e=[],t=[],r=0;this.init=function(t,n,o,l){for(var i=0;i<n;i++){var h={};h.width=o,h.height=l;for(var f=o*l,c=new Float64Array(f),d=new Float64Array(f),v=0;v<f;v++)c[v]=t[i][0][v],d[v]=t[i][1][v];h.real=c,h.imag=d,e[i]=new mosse.mosseFilter,e[i].load(h)}r=n},this.getResponses=function(o){for(var i=0;i<r;i++)t[i]=e[i].getResponse(o[i]),t[i]=n(t[i]);return t};var n=function(e){for(var t=e.length,r=0,n=1,i=0;i<t;i++)r=e[i]>r?e[i]:r,n=e[i]<n?e[i]:n;var o=r-n;if(0==o)console.log("a patchresponse was monotone, causing normalization to fail. Leaving it unchanged."),e=e.map((function(){return 1}));else for(i=0;i<t;i++)e[i]=(e[i]-n)/o;return e}},model_pca_20_svm=createCommonjsModule((function(e,t){var r;r={scoring:{size:[20,22],bias:-1.3970965781063711,coef:[-.019443206312618266,-.008462655136937398,-.0056439963412376806,-.0030632716896851417,.00505819387986131,.003867199969294663,.007378142189325282,.008408844556368901,.002107991667489747,.008802151798966045,.008463420285129255,.00913418810487556,.0021677708519095705,.005790582602295826,.01002704292430879,.010018015835686447,.011074574130386098,-.0006169578361774428,-.0060840083569450205,-.009448767880890366,-.012441209862965338,-.0038650406223106025,-.00031049888008515014,.003187872856386012,.007818302118092636,.010960251877128001,.012100913210202307,.012289318801648701,.012872315936395949,.0134197639066574,.012863004278393353,.012570470005854794,.0144288424245574,.01333943052400528,.013248442014867023,.012998181709015256,.008056198630310941,.0014670228332206666,-.011928206846124195,-.009790927665988413,-.019951337591485003,-.014601516863452837,-.013174779761633797,-.006051490369656748,-.0010407140556988824,.005465099755534548,.010448591237341475,.014061216421035866,.015918382919452134,.016360925963435087,.02175676516818845,.017301016139781272,.014195207612699818,.012452400847919372,.010454129710215853,.004088301926982683,-.0014194361456059026,-.003849859914217695,-.010769873280441659,-.011758097810167857,-.004692730262498565,-.002213411234938204,-.003980443406752217,-.012186682535867691,-.011886732829841436,-.008198434083715244,.0028353930104073055,.007082018952877583,.012238372017639833,.016348014515026394,.02098025121015047,.01731275318263429,.01186526524722499,.007237133559106634,.002878758237322798,-.007467321804467685,-.012293394385884527,-.014833951237083715,-.00838863948674114,-.001277206299448029,-.004323776226736641,-.0007999555489078964,-.009044693937783461,-.015715154398522533,-.01637435302016491,-.018048467332774626,-.012034275948581882,-.00724304399758809,.0005125240784108197,.01309194391257256,.01857040908507438,.013098815816852492,.0008591564011330168,-.0064555113363009954,-.014574145037132261,-.018221531408352937,-.01805986873321162,-.01666595999261013,-.016742981997331947,-.012862200876738698,-.03740877678221599,-.02683031532226969,-.03669286789535555,-.0347880739448974,-.0218850319679039,-.024484660949111742,-.028068870569776663,-.018631752402912666,.0003386250226657851,.01559117928255003,.021178968053305464,.015184030917486158,.002942909802540911,-.014374637994945122,-.025568052116952664,-.025717989966112242,-.023218559873459776,-.043064179414035626,-.04224466749057232,-.04056098939759206,-.029282249261991376,-.03709718041495928,-.05020937144504969,-.043175446636272506,-.038799263945784764,-.03791335031217714,-.024596940746816367,-.013391546719824746,.0026176056292311106,.0161600431397954,.021950494557360537,.018824694902420232,.006927363884398058,-.006709974776830696,-.018258612142465137,-.031150030943545643,-.030987027023796063,-.033628054995754796,-.04343705380087554,-.034534827602693656,-.0027688241949539527,-.004549275180497156,-.0029637241504820444,-.003406700423480626,-.005815867591608318,-.0050003474884839725,-.005218902767395339,-.003509430269612119,.004807586605047698,.015230282965296896,.017877023790346995,.015060123226282708,.006830114845501906,-.0007473542577977511,-.004712922425024908,-.002017247560106044,-.002873371575985725,-3216525956375969e-20,.005257631846099062,.0043528918718454875,.016945619656148794,.015930900625567117,.013751773645422991,.010130474427749569,.008048089829708472,.006653967439781698,.006832470034884443,.006957704411470728,.004039912948910134,.011715241103133139,.017439724961211336,.014273924944517397,.006148597549223434,.00645013298676054,.00641548242674101,.008797261748865885,.008537108473799983,.008728211283033556,.011782866421798245,.016746943082334282,.022118218282678175,.020835875059091086,.018311801034637344,.01589801188949137,.01783342296051293,.01556573659143182,.014048773907766661,.009241576620658817,.008151842723012729,.011230814598071655,.01256801671117759,.012111623945116202,.00983817412742883,.007361162802690301,.009554115733366411,.011727533965135649,.018125902932239795,.01946924820706354,.017398513191690286,.021144199041044975,.021132145666912093,.019499184169656004,.019592876054570843,.02028149781228069,.01745060509084696,.01415914728419608,.006229051144510064,.0038367364618697264,.007020631149365693,.009656116146710875,.011406409148288063,.007327377475605029,.0046725824974188255,.005253560299244529,.0001875842284737577,.008152362961246195,.012760089024104778,.021600004613459223,.02330330354276354,.023745752734397885,.018230549428489853,.02001338863792708,.0198421711017051,.018799688221643948,.010638029835974899,.00047497591850582786,-.007177935918128386,-.0013492660142831474,.0015382005340972228,.0026091901041104195,.0005404682454971559,-.0004966422184611876,-.0004620349686195485,-.005244022876608114,-.005215235448209645,-.010002649985436339,.0014386382744505852,.012845063185194877,.020827676960957435,.02373841052172394,.01571668571346539,.01638066669873605,.014902611437895159,.007373035779786103,.0019356373041797752,-.006199971232118993,-.009116541477138968,-.008810991502401562,-.014849548271736901,-.002088752298238026,.005214097048844173,.0010527273675475608,-.010321625138183299,-.016207678046552692,-.012439252596672909,-.013087206027715756,-.002796996928583211,.0023632017053047227,.011157492323637063,.018368837091378775,.009522424063657664,.010552085697652452,.006561107470035311,-.0015314856230301123,-.003249203820988987,-.003132985735142634,-.0009277374824954263,-.0020968871213430215,-.002752601764726735,.0009438837129042068,5916433694984531e-20,-.001725467988837404,-.0034420772687673035,-.004577360958590432,-.0025304599008137956,-.0003821556159806081,.0005707858453624459,.003132596619556824,.006023783141733366,.01158476991744758,.0016262584963572593,.0032288122743198387,.0012532877511827127,.0006274779428878639,.002376673070768022,.0028182202873619686,.0023771129569157626,-.0033402786707182365,-.004895422636916792,.0030746977489523515,.006264859067042066,.005023115930404464,.00044657525636142406,-.004827090498873711,-.004023720007629251,.002498818345759046,.005458039465951253,.007288031192023364,.0036009634090189563,.010569246292394684,-.0045836905885612515,.0005793643998226257,.00102991877614139,.0030014799750564766,.003667515928752245,.004471800582196911,.006892742110051421,.0039124352937196984,.007139428500837236,.010304447674314087,.012609007891982103,.008958913992549505,.008603791251174015,.005540849488829477,.004672179031230026,.0047921200350865495,.005881820100455876,.005604722572404298,.005411245001991173,.007326498514953648,-.0027341865318231302,-.002724700534666883,-.003490049841464953,-.007995715468728556,-.004076110506711122,-.002077804850112882,-.0028478822594267903,-.0039662744056797195,-.00261612035304613,.0009261126741127569,.001742688698674802,.0005518705877623288,-.001372339198004937,-.004599586886222826,-.004201475995629732,-.005472177851887195,-.002341678055566526,-.002544084181193918,-.007877754680715537,5340267621167532e-20,.004687346571394124,.0021887942815206605,.0013036188253628853,-.001369820467079858,-.015804998363084376,-.016267691007421516,-.018900936626522147,-.01765945032079295,-.011812605534381678,-.0034436129735933847,-.00234833217156215,-.005011146346425207,-.005092238624051651,-.015030789874247219,-.020198024497642013,-.021620507739756673,-.018586140603325793,-.018723839025246693,-.005572269849920948,.006448045830050279,.002682265163248593,.006001001756989062,.003998624466137994,.005081325942641908,-.005911407232368929,-.027745788024718613,-.029251292823436387,-.023066523347947315,-.017210413752997977,-.015963112589643183,-.021075188283476324,-.023666705491108494,-.020005598090990763,-.019062969033403668,-.01779211719234862,-.025322677372927888,-.0209712403520562,-.003436645553932082,.004335089683955427,.008455718362753438,-.006321337322179261,-.0012841346959162978,-.0012350140140767124,.004020967306281667,.009227486761414333,.0045264965008091395,.004131589813441068,.0007710844545262394,.001758081991837795,-.0011577021001876594,-.0036195352433658614,-.003731990866591472,-.001666179302724247,.0031110879435167255,.0014906582671670387,.004844301505441868,.005999082929420393,.008475097921929535,.005582716891229391,.0025145315352065756,-.004631923000619128,-.007618251428388232,-.0046593775053102,-.0031253513278243637,.007465336752811483,.010125926733440484,.009474705361680475,.003565757195444251,.005783369506083248,.003888133034710705,.0019960148005530504,.0015056031401225207,.0011132050024144288,.005487654792876848,.004736573364903342,.007210635062716214,.01007774641754751,.0038570243972044947,-.003118757327733293,8694979275512165e-20,-.02144138726654334,-.007210297606987767,-.007835905822355455,-.00594066743311885,-.00161002982250586,.005345006481645826,.007104949657808108,.01019687544512947,.005757787329337457,.007457080004758256,.006273105317508202,.00762420836735205,.006843693093305499,.007002142239943064,.008725084064059078,.00899957896818086,.0034314447644411355,-.001989159567628072,-.007896602411841893,-.010924672368545567]},path:{normal:[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],[15,16,17,18],[19,20,21,22],[23,63,24,64,25,65,26,66,23],[28,67,29,68,30,69,31,70,28],[34,35,36,42,37,43,38,39,40],[33,41,62],[44,45,46,47,48,49,50,51,52,53,54,55,44,56,57,58,50,59,60,61,44],27,32],vertices:[[0,1,23,0],[1,23,66,1],[1,2,66,1],[2,66,26,2],[2,26,35,2],[2,35,36,2],[2,36,3,2],[36,44,45,36],[3,4,44,3],[3,44,36,3],[4,44,55,4],[4,5,55,4],[5,55,54,5],[5,6,54,5],[6,53,54,6],[6,7,53,6],[7,8,53,7],[8,52,53,8],[8,9,52,8],[9,51,52,9],[9,10,51,9],[10,50,51,10],[10,11,50,10],[11,38,50,11],[11,12,38,11],[12,38,39,12],[12,31,39,12],[12,31,70,12],[12,13,70,12],[13,28,70,13],[13,14,28,13],[14,15,28,14],[15,28,67,15],[15,16,67,15],[16,67,29,16],[16,17,29,16],[17,68,29,17],[17,18,68,17],[18,68,30,18],[18,30,33,18],[30,40,69,30],[39,40,69,39],[39,31,69,39],[26,65,35,26],[34,35,65,34],[25,34,65,25],[22,25,33,22],[22,25,64,22],[21,22,64,21],[21,24,64,21],[20,21,24,20],[20,24,63,20],[19,20,63,19],[19,23,63,19],[19,23,0,19],[36,45,46,36],[36,42,46,36],[42,37,46,42],[37,46,47,37],[46,37,47,46],[37,47,48,37],[38,48,49,38],[37,43,48,37],[43,38,48,43],[38,49,50,38],[22,18,33,22],[40,41,30,40],[25,33,41,25],[33,41,30,33],[25,34,41,25],[41,40,62,41],[34,41,62,34],[34,35,62,34],[35,36,62,35],[36,42,62,36],[42,37,62,42],[37,43,62,37],[43,38,62,43],[38,39,62,38],[39,40,62,39],[44,45,61,44],[45,46,61,45],[46,47,61,46],[47,61,60,47],[47,59,60,47],[47,48,59,47],[48,49,59,48],[49,50,59,49],[50,51,58,50],[51,52,58,51],[52,57,58,52],[52,53,57,52],[53,54,57,53],[54,56,57,54],[54,55,56,54],[44,55,56,44],[23,63,27,23],[63,24,27,63],[24,64,27,24],[64,25,27,64],[25,65,27,25],[65,26,27,65],[26,66,27,26],[66,23,27,66],[28,67,32,28],[67,29,32,67],[29,68,32,29],[68,30,32,68],[30,69,32,30],[69,31,32,69],[31,70,32,31],[28,32,70,28]]},patchModel:{patchType:"SVM",bias:{raw:[-.964306520867,-1.03566919244,-.874989992149,-.916328634351,-.84503678968,-.844297101434,-.738523173234,-.808714131663,-.726541145855,-.843675312327,-.869822246614,-.917260263832,-.873711733476,-1.02671396751,-.98146088848,-.873014174242,-1.02044597636,-1.05803547484,-1.22124828051,-.881683950651,-1.03317042471,-1.05134750237,-1.24054665894,-1.16383797435,-1.06699587696,-1.23916761432,-1.18767751229,-1.12345203915,-1.13546600331,-1.08024044629,-1.24021266444,-1.16700091429,-1.11195019559,-.729540672833,-1.12391599663,-1.3005410545,-1.31472443469,-1.08705339489,-1.33623226644,-1.32469845456,-1.11491083141,-.762875763426,-1.12163285295,-1.09863140074,-1.29945157973,-1.27843894877,-1.00589316549,-.912330645934,-.962922353705,-1.25265133142,-1.29458347282,-1.15225762288,-1.00045652806,-.887710450269,-1.01416634829,-1.19650803217,-1.03872671577,-.86719070075,-1.008904644,-1.12379151191,-.950687461141,-1.12241433736,-.889224862634,-1.11762094609,-1.22489133968,-1.24702333407,-1.24517637612,-1.09819559472,-1.2104134101,-1.2217112657,-1.17731763127],sobel:[-.83934766225,-.62721260575,-.558840580329,-.699564404116,-.711116468654,-.800405507582,-.800598028802,-1.11367567263,-.800716892269,-.800194374505,-.719852733547,-.699662339749,-.583473094463,-.656586463686,-.82585939445,-.777588904797,-.772328358153,-.858083769483,-.819377339675,-.764279660704,-.799960100345,-.867018791717,-.823023270097,-.742640730114,-1.00863469391,-.717177931342,-.795282566734,-.882814402127,-.781504747967,-.996713581871,-.712255820555,-.811275119279,-.961002025204,-1.20550193802,-.862430611162,-.755762286162,-.788966054175,-.962730404866,-.785589168563,-.783168017095,-.891439881469,-1.08053052724,-.818953010952,-.823990582718,-.610975113014,-.706369334087,-.83607795072,-.86536700094,-.861887789379,-.706860677903,-.604669076545,-.638959509959,-.600205200156,-.601208908689,-.600265306283,-.666594192176,-.706937637112,-.806432197551,-.701267093778,-.697408794637,-.851407473703,-.696453841977,-1.00957402773,-.888081735997,-.883778307995,-.801014108655,-.802707601144,-.902478661063,-.867497240701,-.826525935114,-.828361611411],lbp:[-1.2775026474,-.801223028353,-.800091623644,-.800009851969,-.706840077597,-.771744181593,-.764756730848,-.668987349384,-.722732252285,-.669412768606,-.599571546235,-.799859783453,-.800085025062,-.800151690407,-.800453693963,-.770896454141,-.657297455691,-.599810309052,-.583090394926,-.952970571559,-.7654582373,-.799938792024,-.727414989246,-1.31723075305,-1.14076054405,-1.33781061842,-1.40029321489,-1.29006497698,-1.28367040173,-1.15693629435,-1.21680694398,-1.40041878805,-1.29047691479,-.928378863331,-.926795080454,-.921170431637,-.911039053934,-.843072087859,-.863356945439,-.975893430292,-.891645275689,-1.19772729821,-.994481526443,-.974741126221,-.796142704788,-.771301703397,-.911422811844,-.920856682866,-.865902542856,-.849751055127,-.806605497263,-1.05057278424,-1.21923288747,-1.3182935345,-1.30915908452,-.608079191461,-.939755202343,-1.10582615252,-1.02794612196,-.913831959238,-.874524304042,-.818753505759,-1.06509012802,-1.18557061801,-1.18891869024,-1.3461331468,-1.39693404573,-1.19088607628,-1.13830203374,-1.37361790282,-1.39128680085]},weights:{raw:[[-.00641929350098569,.029808749809618604,-.026783847528159686,-.022626445601288438,-.06769654478392964,-.3330801701058753,.028196651717386736,.18244853629138108,.015034328565348129,.06785273618154651,.06670760102804295,.04375774477293372,-.04943204693546423,.028764976579739795,-.023780221712776294,-.019043996534914023,-.1459760995456534,.07674812965123064,.10031267415956342,.022404267686006132,.03948930481064268,-.06917255594192799,.06445393061200727,-.03568078024136126,.029477578218046946,.013670321310075631,-.04008674643487946,-.16483725729324836,.060739714509717116,.1342127393151894,.02422269183439342,-.0231794397202719,-.023938362360883966,.0008056447282202492,-.020188203981491876,.035394353296754666,.0205064246422616,.02899344816440129,-.15875938903288647,.08638017630000529,.06961235394930866,-.005149628317893187,-.08621251663291626,-.11615256372599751,-.10171915312404266,.05044362294149464,-.010944856179506302,-.001993957790501183,-.08249632373737503,-.19805282268418445,.14503065839704138,.10472965706111854,-.05450410065575717,.058558989674775644,.02150968078817124,.01730546008925736,.05479743583896092,.08144986165856803,-.015926761159011912,-.0266458258524559,-.293957896046404,.26045433455042083,-.014750981039322313,.013565969503019568,-.05204369663142167,-.06850765601608066,.026714598423665525,.015030040573038209,-.0036695544345779346,.00383258647431671,-.029296334816602605,-.2168604461047042,.23218142341105868,-.00327038976446066,.0010937576464049442,.022865074396730092,-.0024710599676689565,.027138580199090406,-.01679885289520537,.05289654559111395,.006877363228005057,-.11534615443720748,-.20002833023471947,.26776687274414374,-.012990564848598472,.014507044952519324,-.028376794482919257,.00618216485194005,.0889219146062195,-.02926862382222637,.023549402065920405,.005011976866251447,-.10302390187256479,-.11265110616376864,.2362166399750627,-.023189771813893006,.0035722520614683423,-.03418213706662514,.05063039309457559,.010945258403000244,-.0026518946618147438,-.025155322122281942,.028530077090590744,-.13115618895267522,-.09325600139501289,.16420560614466395,-.010547265652414012,.03555013933252189,-.020259214475918323,.02246656772503501,.034170311222606,.11907609035635143,-.0015743444390024786,-.064020366156778,-.22057027736788293,-.07230997390748017,.3020467193547322,.023274069917025395,.063584377222265,.042978528220157006,.1184620505912367],[.1666751450718194,-.06105649607736628,.006921123396451054,.017084537322497012,-.2260817686595176,-.3734473319351409,.0799408682638239,.16478474110226196,.022649460741459224,.05289358066562716,.029321578215087005,-.06568683076912647,-.017175099236391184,.05342642508666981,.13196524692583625,-.03891597035567766,-.2214210563511815,.1701888918075543,.037968714516855254,.03243303857962143,.013114263754535838,-.004713976681790598,.01449378481921762,.016836144088159047,-.03538252197938949,.06459440929029997,-.1686419424136731,-.18183649747692435,.2201119970415321,.017097680726078424,.044439120834852616,-.06574464759714618,.1020917702829201,.012977428388828996,.01977596493630697,-.020715077614501087,.03753609961730282,.07318814378973455,-.2573933108232303,.17910460975300116,-.012201308491933793,-.012488637353357972,-.027937934041822002,.09083951985921551,.05606169228127485,-.02959213495132615,.08379737554962405,.02690901960800999,.02844725619429324,-.2672429524643786,.17601512398468455,.05747403764496381,-.02175445157089756,-.016094120395692652,.034960605520111765,-.06613609379939898,-.08682227581682511,.021267627399376515,.02491383906151458,.08335124804544296,-.2123391815448888,.14528347788592133,.05210322011013152,.00605269353127303,.004105795692207578,.07374252723173551,-.06315098228507052,.07170651328073925,.05027696784566078,.05947386035797521,.04109277684503734,-.23158549693983016,.03982435330236364,.03516809644185254,-.03932662577032886,-.04671341171222192,-.029438846368243326,.03037322262500354,.010642421674176408,.03544309823317393,-.06489736931049253,-.032863903246691833,-.15394029962311223,.011777952930909712,.17418487412288675,-.05475758571404693,.04792406601368864,.05434649000577907,-.0033548564463232317,.023589666170022047,-.024599944457705122,.06065500572988429,.13656620662733865,-.09366338113990888,-.04744440772227543,.06287271944447118,-.02272823079189625,-.02726612072929817,.1294937855467878,-.016064969466370635,-.029023009596784263,-.05570334330637803,-.0840107251201864,.06758267309536246,-.021201313484205356,-.12021659219227125,.09485936016857895,-.023785622470961085,-.031181057005649077,-.004546101199478264,-.0009687804195086802,.07543593802259964,.010017282477206416,.06897995798959812,.07714796080101254,.01605850787004124,-.19045442262141093,-.010877182945437318,.12221413195895285,-.0351155412356487,.06195748510363465],[.0011017024675275405,-.10082831174460544,8594795150784762e-20,-.004422049478273848,-.09673952628000249,-.13240523784777558,.13984373949584222,-.00313787541686765,.06839962137118966,.041644858137291046,.1246603542346705,.05746879604248942,.07361120898568357,-.010863604812754085,.004840634820014525,.01639620645886397,-.021671035744779854,.044733205419186794,.06792156583497788,-.01587229208239721,-.055943430884781355,.01970238776563854,.01861633041967882,-.005658956684688951,.03403751236246519,.03441147508211587,-.10871009154186473,-.08095953984145883,.0674276232825569,-.019879897471494754,-.01366520816807866,.035789793103949114,.06623139637196183,-.04591799977774408,-.00420191665726459,.021126802087625032,.040187642280355346,-.03666439487226949,-.030092902147062638,.008811740476730875,.0024160167750989087,-.03859253346469508,-.031144322454676222,.03504205275969649,-.018244427580942767,.0189160005658235,.0008242036653817869,.09247456507290092,.0732971691285424,-.024311595897201867,-.0027452015976400512,.06792073218745394,.0011865809331642052,-.02829414542225548,.04281208602061819,-.022452858987935732,.02261009594352785,-.028250777066103218,.04326259106400333,.0925323906952393,-.15324339008135635,.05021126046953936,.013929622339187875,-.0008978138468668517,-.06366120100595833,.004848552355720334,.0785800941235526,.02575794561866239,-.032352350433290294,.028485056134963452,.02362139569139944,-.2117470445371154,.10461485137190293,.047597936964786855,-.013272615927845698,-.060311993172769994,.02193128143972145,-.05466583518135374,.02458965449621621,-.05314264114611795,.04992839103128853,-.024452908798012384,-.13669941087219498,.013882012829174228,.1070905994912941,-.03027728857497334,.045488870557272854,.021158864845617006,.004550470470934022,.05214959922096879,-.03112491408752256,-.025892240716889583,.051505846702740755,-.15850714978032798,-.07743410057907743,.1444219758540272,.025520694414871425,-.013359740227537047,-.032691479720369884,-.05076075577061953,.006726712466217588,.053582968166709294,-.0660913290710981,.028319458261919814,-.023395468585636847,-.12189855936069849,.1264108145125255,.04107040225763695,-.038345327797452616,-.005103783589953988,.01115753611454251,-.025558001982792473,-.015803280214702852,-.014570255682172791,.058581784915518444,.048613151833675504,-.2965749163672431,-.06764565935277526,.13108882918808282,.05456992979648274,.06252397190390564],[-.025232963701757677,.022348786079614824,-.07225884031672042,-.18573054835716424,.06115371568490616,.16052559660045873,.03573522287613719,.03264581953820091,.04997287054493556,-.017744962590501873,.12327939069776968,-.0020676327098313324,.01746290767019347,.06278946307849151,-.11704698186369022,-.06525458717047697,.09452513318995885,.044950125896693824,-.028763679134251888,-.0075590072060936625,-.018042703509056443,-.042766926478698966,.006472665330244001,-.02449852894821654,.015095977860562756,.011479770091646538,-.22511989496614118,.1374997596027168,.0421743831469316,-.0009797392756477757,.005345865322224516,.006695870860846068,.05293878324449834,.02866288570467257,.008378826462652478,.00039142479042951484,.05893591963645446,-.20560278009245425,.07950278129895037,.10223896059315847,-.04113799190793238,.02733007338967257,-.010752121223537789,-.0022306851331074934,-.007924201477948527,-.008279495647935058,-.03208506233715542,.08612259920756052,-.12113263279497796,-.12790727680874353,.13902963426409898,.008853966604374208,-.035846424270882665,.004579108178465921,-.043586755702451435,-.02644030622989594,.012179387770686292,.07404187243630776,.01288390088442623,.0631378025037042,-.3001337956577562,.19884603307627666,.06381579707055893,.049734977180621504,-.059941845556548135,.06608231683752042,.018259553212376337,.017779633684347013,-.03063237250430595,-.05294008910372007,.12680914791412304,-.23860332882902754,-.07293743785631161,.12736775458078498,.0635659183412351,-.05117287506106216,.009779050114535295,-.004340704267483765,-.016155615544080057,-.009192392330326163,.050665742508667524,.006098472165673663,.017307742609543222,-.20367784360158347,.12046177714866035,.012913438963355811,-.009205184571941166,.03536275630143247,.030747952698754938,-.006848330425988862,.060769663776634064,-.024830671275067155,.03220482558814165,.08851298653495965,-.20132344254131007,.002548413815897023,.140122587765108,.01961859385120905,.030770253761956967,-.044844034190508676,.010829012004067717,-.01860457458041309,.004870118723122603,-.05383562252519328,.06565573244826663,-.08783449445825132,-.10019900548070505,.019098697970463,.032625675487211764,.013786208177970036,.01459298085632256,-.02245319975032244,.023627062323695644,.04456787584724979,.051820387537472895,.05896083203079447,.011808887606369993,-.24302913455395336,-.10331035325930389,.04312222197544385,.04478411411677549],[-.11131891807709643,-.14268474406555598,-.11319512819486531,.16616863430344642,.21669051126658584,.14580497808064175,.015659490036423723,.08129976577263026,-.024809345136602795,.04021044222676087,.1147788050575636,.018929993321792474,-.08089736615545767,-.05933670525564233,-.10482248256522532,.10573530196882865,.0631408717985007,.059506144939088096,-.10685781396759031,.03408209651191432,-.04492878624667285,-.023391401657096106,-.021033602025377948,.011729129297605986,-.12518841502550898,-.24524516894120252,.07503634089773896,.16915003534917084,-.01104335485702547,.01869801655833349,.008919381060601264,-.009574206883586497,.0749513760802387,.052515621176523086,.0007625567461485294,.14447253116659836,-.16116755572117158,-.2943535080561774,.21097730948472182,.1532239111676963,-.031396770107823796,-.07319949962206841,-.0005813891955292749,.03837364808790836,.07166124298300858,-.02522805699198942,.09435561905590027,-.005506626027510814,-.31676942832713584,-.17017797276453395,.20181171910078166,.03895103544935513,.020699071667054786,.007352495909389606,.01925107008541585,.02771336549368973,.022207504221021385,.017801567429584678,.1612676210022263,-.00979265416273932,-.39692367057618455,-.016344797834207933,.08433496504920006,.12332269298102864,.04685154450642956,.002636755382792469,-.01561848475266879,-.009436542015435909,-.02615768632490699,.09309181623129058,.015836673962272785,-.03610417595442539,-.2519463776351575,.06651888922706571,.08876872373304114,-.054177349140414666,.11363104423136496,-.07433609691566458,.026411919672457762,-.0069934713872144005,-.011837151565905812,.20495766925622727,.04065257446984291,-.1095170141673022,-.19525613842871348,-.026690291071139877,.025635090198280266,.0841424871807917,.08156051741344665,.03389958127434067,-.04177793659445489,-.009501675246059646,.014146738677450046,-.008345664039773965,.06615605391728069,-.13607639700339172,-.07520007682223616,-.0994873515069512,.097954762781141,-.06803133834165287,-.028816943621434,.06211656943949179,-.056509543958784436,-.01645775253059964,.07817870576774648,-.011547980097176877,.054587296091729326,-.01756300038547995,-.07269143851776608,-.03485607595050838,.05857371177073828,-.0602890204905569,-.012302959633281041,.05215547808996612,.07522769209224177,.05372691554672293,.0021832390619121317,-.002344923538649027,.06900194647824753,-.05514982572329348,-.1813815383750435],[-.23224131638764922,.07903469662446332,.2067918064109477,.17116975450055194,.06039325579902376,.07007210980485583,-.06190466024121998,.10747334033766655,.01433196398767149,-.03256186482121042,.09613665022049653,-.11702112011574746,-.1864804302468564,-.07263583233067163,.12519462388086205,.07088720261632298,-.03271329648281499,-.014132673438533166,.0038161968326955314,.06596606828134262,.02045739986512317,.05133413578390264,-.001116824372617925,-.08650385257532717,-.1785625235356172,-.024882107163551152,.17291742960211148,.07663613794861675,.09577626737118992,-.07664408368156322,-.054109190285893664,-.037610346895478264,.10646735039870757,.005106033165145046,.05630446848381131,-.02815452123015502,-.3172866921301339,-.058091370831929535,.11556013989779028,.06572349088657835,.030550971916660702,.04174710309339162,-.06958785825069148,.09246126396658998,.05229901039500466,-.010485795012401211,.011062345730906517,-.04525324732355647,-.23598087205664336,-.07089255746370644,.10680685304416297,.11990972610746585,-.020183291742381704,.0005727301827296999,.09656302661129444,.08439413274340078,.0061097222161349135,.052438465571679,.012127916344441741,-.0257064038739874,-.3742573188077962,-.1276874097835226,.057044219322174475,.11342314858398521,.08990901529141647,.08875860180043092,-.017367003795174522,.05857393693614622,.0024241782448618243,.08109965832409753,.07161451991128079,-.01563620268743912,-.21764039015095288,-.20280985898846876,-.10017064401745751,.07648124633085683,.07207247607484658,.07483195051351595,-.07166912711289458,.0033343139896645224,-.020106231127842517,.12484552374687989,.088741504624313,.01253935252290507,-.08037165138919668,-.20667576524399633,-.04282468905818822,-.041960654306219244,-.01131931097222521,.008735105318849586,-.00734658047955114,-.014035434722362766,.06098093434751581,.004495721964022023,.06013604234048665,.12862638541641686,-.04340711738426402,-.17199184431209702,-.12411968467220214,-.0678783666252617,-.01454311580267198,.01330421418710441,.0866161567100902,-.05086944418717247,.05903651637207552,-.03008247843263918,-.03915069183312177,-.013410175971461852,.08202413261695805,-.18429763963038856,.04381998829312517,.031005210064727645,.010111390046324928,-.0064173858317888854,.024542598321298154,.003326533057552636,.04021021589655824,.10549988851835322,.06646601329742752,.049201722388277136,-.0939321536148138],[-.12203267064152819,-.036980237066742305,.12682937376396922,.10063288694137082,.08215419826803332,.031376504219097656,.0761930646076317,.02964354031201931,.06719515773118173,.014606114158926237,.21693479369516466,-.09199099991065045,-.11495742760629782,-.05785437441465155,.02698330863563836,.05370374419050639,-.0273941556868533,.06205078188675167,-.014064800119151746,-.030464390345027792,.0502232298623065,.0695221694583664,-.04791508006637751,-.07631273807225611,-.10542836060878844,-.06996306274716022,.06388780976819086,.047703502973526726,.04962563211466377,7.937110578365436e-7,.06693802016800053,.0223312679300762,-.013204459193458515,-.051208345754393744,.017251686675046174,-.16855866147278023,-.08171836268720581,-.051493312235764005,.044258122147233556,.07986075057146982,.04025690490590825,.06116790096664046,-.04445412975620007,.07605855153730079,.02448453321308726,.0237388901616193,.022211385002816955,-.03909556756500325,-.26993986747191345,-.13809797457481326,.10638240754104332,.07416453466566666,.1361114507013107,.08862011177027157,.023942633928693842,.05945503505976131,.018810531601996444,.1333285511666898,.019080517712641562,.04095366870170747,-.19369280785037196,-.33096708018422843,-.3153716399945978,-.051011822183710684,.10153083596477822,.10646364340542763,.014630901225096263,-.0037911814153038514,-.031174186442994762,.12574438878630761,.08274660855089384,.13910378358879222,.015618015934354273,-.09701003161915218,-.25736850771835984,-.23890047875932624,-.3920141608141943,.014631649728319138,-.004957651679090035,.03224914217266181,.01990648283333149,.009003071269804548,.026111426002791746,.06289786783199448,.1463890162014621,.10175160175705127,-.008366542972654184,-.22694639696488025,.016644643336980125,.010640427487024477,-.033902595425888096,-.05887030600117281,.022391466116807472,.010861548153134476,.028661031141596176,-.00897323660083852,.05200412153695907,.030892998140363448,-.06629876851654298,-.045462972141964375,-.03653407501604951,.05825510998520326,-.09030077093272416,.08752918060369558,-.048367137056150394,-.02186992064128039,-.061934612997809474,.02284265461094593,.0870990153167514,-.038225524845750966,.042582590594014876,.04640395416303122,.0380440573383962,.013279662526628024,-.0244758709967295,.04264842707545879,.021205045270171127,.02354074407698388,-.007329919947495406,.00907767220495534,.07270438554369765],[.07613532294423606,.07592874232876966,.10248245044059716,.12142390869553117,.061858857352832766,.025464191080837695,.048676474818140573,.030285797856824295,.11128631305542007,.1945532737788299,.11002956054185524,.07460681426549293,.013898060531860643,-.012868505144617515,.03811974665790328,.007148462430406344,-.03738969490673246,.027891841345889026,-.004018077277820727,.05119166474350638,-.05141505993337936,-.06594790510444799,-.07721628063745908,.07879227456062733,-.014940451970767085,-.04242817117298531,-.02277362203587799,.009552105313378119,.0892249730187428,.0026288446459537393,.02779528927690774,-.011245376233293055,.00277897025591206,-.08464626341108711,.1085122984586782,.06478748838514646,.07177453301553025,.101565447736036,.13538683839366522,.022702180797543253,.08138250439122006,.10182220145207069,.1341459901576617,-.06725473581240397,-.25199554524555356,-.131377327178401,-.16365674311148973,-.018740825554245097,-.06288280746917164,-.022204060979254633,-.07230826470434813,-.06002150860570432,-.15902262422755242,-.2376226356188884,-.27876101597724223,-.040263587475045666,-.08015604055016233,-.054338910081926026,-.19775317420562621,-.28232046584273385,-.23353688528539848,-.2887146857983052,-.14101654202670044,-.1025403206842016,-.09107919131866912,-7602192051990307e-20,.08433377565121718,.02577687564589032,.027110928294315155,.12586947033203832,.1709457201826477,.12107947589739056,.23253719852668123,.02250844292994217,.10869072456768857,.1033561446413986,-.004469702938813581,-.01904362338576933,-.038539230833867344,.05962320530191288,-.02837250486063366,-.029359754569747713,.0008751651167976204,-.06591807220345962,-.06935624266520128,.023580387356890727,.021727207917053997,.0395706064528708,-.029876932333496215,.03870634021722194,.054322914583595866,-.04361035086891106,-.014678116576553712,-.03939690057342893,.028347288864635375,.13841137622066219,-.09066089747647116,.036895873473620874,-.03722916214694882,-.009894930351075984,-.0452390438366378,-.027744940547884053,.04194009544497118,.01055398542008456,-.12123151432640322,-.008749343949550598,-.022343273408815235,-.036722825249752025,-.07423504949617987,.13502817700337175,.046152107059304906,-.0008971308328727529,.05590475965294445,.07280055024298283,-.014134363015890009,.047445934632441455,.08585904743319968,.05507048598685206,.022278702781022022,.06417229339280382,-.07076569906072622],[.11799509004720471,.07821040962176024,.1281616951498617,-.020597034003169923,.014336534229225872,.11621450358247642,.08905643393668677,.05443846379640299,.040501447910613234,.07708874490871268,-.1658906017777812,.09832791591756529,-.02810333763323619,-.02658838870983915,.02405475335525964,.07281433646587437,-.012893740245567331,.08129422425099614,-.01963885112438346,-.05946135547166009,-.07071909172253173,-.1275944247901823,.02999311492449748,.001969744529841,.026356695570939392,.07745617703691782,-.006579905739970027,.034984205817837566,-.011141116727752032,.03720594351235931,-.07804833218835576,-.04293728091952059,-.127535289131475,.02845913050306173,-.02514121956008758,.03211084759065019,.04295176152957764,.11294381552310545,.02004775184404517,.05151590030912234,-.235725744910211,-.0723083822615434,-.019056219840507427,.003032114250306528,.09697112519659604,.07580971830316449,.1171582304881571,.10956914475118423,-.002478119754026231,-.06415838742812259,-.26848100360863303,-.05975449894120426,.061910526180559394,-.021664296531182625,.0861100259271432,.05323351302011188,.1717544124205841,.028047054519386466,-.08590298082104386,-.3361141075282763,-.2814411422220313,-.008033032578359078,.10513880861366756,-.016382627034826625,.06894681074416012,.03299796127286976,-.2575094211066173,-.14536580095096197,-.35542177348703685,-.31543540234741724,-.015389034147835323,.25815532917511536,.08960742973783267,.024873996600298487,.06881003961835548,.03489017570215826,.009440239145994206,-.3317042945602514,-.08402150713002367,.050999687890954576,.11407450625706317,.12380980581221895,.0615416857398525,.02453750806553323,-.05141269110053853,-.03796914500894999,-.08315921986961804,.06097402386871387,-.06968263999399987,.013136896914555662,.05433543614442471,.08637574960433275,.02576801827516423,-.03028474620608318,.004674564793187563,.014048250096520054,.0039043180440717223,-.013243528792716869,-.010234982174629259,-.03434871862675892,.08930669941750319,.023672596441143168,-.07406388091432402,-.03941626691223293,-.051467563793051355,.006651409176777756,-.00560210732348132,.037530284479276185,.022917723699947115,-.028514057580272867,.047001295013920974,.011663892903344658,.03157742912810527,.03674321708145567,.00016789538350847621,-.032412649376776737,.06117671525999013,-.014965782274795558,.027963582472569012,.04959601543222854,.01749369590499883],[.09511182747695554,-.06159820603503502,-.027848508902761582,.1628509117750848,.011485186070697095,.08822763141834358,.03347684156076733,.21311907036597436,.12562992528833603,.005658534272657195,-.1966929150915634,.12201627871631479,.0650038757477849,-.06463757847623203,.007601127043420197,-.014992832356838792,-.01371412582796748,.06518983519203567,.06050177288708594,-.007320488021864191,-.1583739057936029,-.11374672007199678,-.011219765388015224,-.037241451866588046,-.003534620740694161,.01418414744662963,-.018804529282363244,.0022002993190636394,.08630412389588042,.050730302973426275,-.19347784099407583,-.024336852899701306,-.022104084039211852,.11856239536141804,-.0040746848315117296,-.02163636804096198,.032834767679033816,.0800344731484097,.18177097586869298,.04019529190670533,-.2702679651504349,-.046764731646186594,.008852085437052834,-.009539810787766306,.07383822425025457,.0022341455913789526,.08094684201408663,.06491115331910723,.06885287564917604,.05292714860543306,-.410107120913947,-.0033883005740702465,-.07662046460696448,.02802671910476224,.076992030561193,.13499559219777985,.0010835539682531592,-.009452155890097347,.1189809113716918,-.10886395857171732,-.3183906210009257,-.07953657581636578,.08803540022726711,-.01994821470243107,.05503118151079713,.01735589174740365,.11548823748390151,.04731880261354447,.0035588736908875526,-.19090242902977161,-.16923224535916537,-.10343904409632039,.11611444215342794,.030139907826970232,.09203792773944927,-.0005281111654557753,-.0198996720404131,.11041139740159193,-.11354626622456132,-.13266289678027732,-.1682771948622956,-.03667619558596544,.07817736675850409,.06504914695853675,.06126589575010016,-.045421314698528795,.038673845042327876,.026641279640920345,-.10482185618696178,-.10700981328292422,-.06525874643904839,.10279723823243007,.025140628570866255,.07899525265930846,.05558624922961755,-.0282367233747758,-.0025877363105662674,.03312745537775298,-.028093023704546808,-.19114920828266518,-.0843724450404052,.03275218120073499,.04457342148390127,.07856958017781845,-.07616797315805927,-.011917584687660975,.03886281331675661,-.044585012472417355,-.041774790744191534,.06654393572162462,-.20856381862218065,.1683937797503331,.028096195344995425,.02974664466893967,-.028107306876337092,.040206628818593826,-.005022332794664606,.06168318096730564,.11123093181504413,.0025290457228258033,-.02120297614281566],[.09043563503585106,-.04229707907295113,.07943640034074831,.03842552427230031,.018479439174666504,.1518877271211962,.24325152032590197,.1180155679366982,-.0801567958141105,-.21178228375212024,-.1321898119943531,.01847519834858842,.09201844332333244,-.050722043815425485,-.06837456067208372,-.01537540593449041,.031479819423878536,.08735840730776676,-.06835423776229127,-.1466417272423975,-.00015826019866193447,.01568223599310714,.05170912892782582,.008747090174751185,-.08297559742427506,.06105929068549017,.055712846563533064,.11256404620171304,.12009580657518015,-.2412015915622755,-.014823455006292133,-.021320510868446968,-.006482678969039604,.011517249723710349,-.002937897815077306,-.03651189081303338,.040278214553535516,.0514440140450457,.17560605653482164,-.1655984657580802,-.17723807338794942,.06664090603454581,.02544398237775264,.01188465218452904,.0289513499031155,-.062269615752451546,.008151008187768163,.07413923996606689,.15951734948521942,-.023426085135995006,-.3978217497642247,-.10908536196954385,.198107190750192,-.03969354994135716,.07471723651890819,.06765746234109257,.0023721387419759488,.05010623382157028,.11669499140233328,.10445484529679147,-.18066291770941748,-.13732855962266888,.12305831238941373,.037248666546407946,.04039521027170892,-.013511371889906032,-.012463530395042041,-.011253154667815578,.05726371459440446,.06412373474273139,-.18290915356692017,-.2869372990564419,.16662290255364237,.052133698720201724,-.03451997264628831,-.0020692840094172008,.06741251393032432,.06937855150391262,.01734148416121529,.11249597819545545,-.12114447333731211,-.16394194327719122,.04261853427181071,.00824423904044877,.03221154330120412,.0013431370481797045,.05979357567988297,-.04185352167064698,.16141583247142297,.025290287768054538,-.09277195016263434,-.2215981176835778,-.017539993864623925,.04468468836207484,.07652630029505583,.056281907644482626,-.03832256952568285,-.024136451744282625,-.06372718452176626,.1019524390722753,-.11143716683774609,-.13769182869235727,.05085564633400147,.0118757042451966,.07578815217910018,-.07629006882364105,-.0814113136736546,.07294179897639616,.06876848468158583,-.033997564379039544,-.16790192551365551,-.13094257760158287,.030092743795544198,-.020741964391416696,.00030251423268644675,.0886427375796117,.052492146460725884,.08700777751717687,.024692689071073824,-.11263451468661019,.07566395763319325],[.10661930608242243,-.024041018022432886,.023732105856747315,.012547179712792927,.06620015268771856,.07288083873685963,.141959809755441,-.1884630302757157,-.10001494467301893,-.03039936470744807,.006508432539056433,.03539598055038491,-.016756476798346576,.0399634135437803,-.03292076128242971,-.005227900049309453,.1455513515779632,-.045218123785947764,-.15712918904629083,.019388410485656385,.06907342606271524,-.0298852890481313,-.013668142441217765,.03550729334105425,-.0339053532299763,-.06639806441685941,.06936725822695652,.09906846780184428,-.1617694660299022,-.04974368531705499,.04941732724894762,.11584329961758463,-.009976533533724782,-.005894615309377543,.024852267791530103,-.022953834411929233,.03536477637026525,.07091098453159729,.16506591436250806,-.20260600332750361,.004082260035043597,-.020994635237100143,-.01738045300747007,-.0681694778746119,-.016583306399167802,.01633535683844098,.017414685172079863,-.06550954477620465,.17533271724699692,-.07779762905043745,-.16426179882147435,.06799082437012988,.015164258343913037,.007850917795739223,.023952622885856464,-.022724061899056167,.006468972562307412,-.004686262441803951,.023956271557396727,.17796984486026562,-.14583559757339518,-.06427923090509419,.007285889169011656,.10176352460866914,-.05375838816707103,.031829796138471395,-.006931087788905416,.011744209650540821,-.022880287482633932,.06170435943557881,.07377432172162823,-.20953311948246117,.0228569133898398,.05472937737865659,-.019111901041743054,-.03021023886313212,.003031327469750489,.015874354673913807,-.006452292082758354,-.029379891777454897,.17844565039391092,-.07110452708435416,-.12962834428996683,.07450443681000475,.028226182768918535,.028593401178049288,-.01959147691077351,.02627469148789329,.04932937679184403,-.002525771203732069,.01518419078458555,.07937762244019535,-.19505648192438618,-.03458185384929216,.03928442530245542,-.06096185307071548,.03210462198422711,.001008720871932746,-.0029091919090189974,.001344468156507149,.005023713003350715,.10378546719878355,.022547607122337512,-.11488746863511244,-.022120532171003134,.04365532771842716,.006775696120825271,.025228229845891133,-.019273769704258592,.021906840282590274,.07611102221477332,.017667767612816868,-.01550884847076102,-.23798198014252242,-.10029292828221784,.06896242747818639,-.00958082155355134,.07180806987187889,.009692454495817494,.008957116977043107,-.008277462473503971],[.1471154036752462,.04870375978312018,.03828157145025493,.07333208261344225,.09260331466273668,-.0694062794405356,-.18039118017356837,.03046188792697367,-.07652780153927276,-.028459829410684742,.0039885048607745666,.09153106699799837,-.09704741860389973,-.021416261913473872,.022880799394652915,.11630110494121575,-.1109134904433731,.005260123748833667,-.0013446292981080382,.019772833215237998,-.01068052654249596,.08790171771830792,-.006232776333750578,-.022953022264458,-.011871195380737234,.005762706715319532,.09058996390258162,-.0325911561965106,-.028720174599054245,.018764947431906404,.03419839806504654,.09248312592865889,-.03903575783794387,.04606097164647015,-.031919717673297834,.0359756576146678,-.021429646453529204,.08731212903003346,-.10752464144662353,.00152080949832821,.010463878802001378,.01772082101834206,-.05437049272297912,-.04194883289533528,.025352619756942793,-.033214062148915535,-.021243138027047942,-.0008823990590214881,.12798500264531565,-.14587827997097436,.004915455687989331,.1154467113814605,.02439416473282259,.02683709160566132,-.007026041908772006,-.020081222854955234,.023704875110253917,.02295042461409627,-.05338528177481898,.0831341083498527,-.19190518676745988,.028255792687062964,.051622701485504116,.026882922200025916,.008377616973125737,-.005670991108533512,-.015187911842930016,-.052821700067161415,.00390644247145519,.005281151829406819,.10527786608533028,-.15535307659177727,.012627301510895916,.03327206086519928,-.016015509511655836,.04732339385165741,.02967603368046102,.06267237670914183,.020359709219910163,-.05632841301488273,.0620322629350282,.13944415500977614,-.1628837619018858,-.06273619582859068,.008907350651879399,-.0034474543722587785,-.01618817237363423,-.05835778037156301,-.038566049097796054,-.007742247801509866,-.04525485397522294,.13886799518652831,.08480154460363377,-.19493114682149953,.06796205402333232,-.03966925365228234,-.042999032230963616,.05692279356728236,.021310369562604587,.02365210042359392,.005385039849544027,-.03187215578986556,.12124236413591115,-.0967183304019613,-.09464086971309904,.0500533099786503,-.04109568378358891,.06766934251303211,-.013020222193800675,-.017936312558531065,.03088458798641326,.01794055692503145,.1231815166762023,.08261243140085138,-.19694230673329102,-.08458714194399125,-.003658775266082319,.04619076988589604,-.015214414660308498,-.037796750375678645,-.037660099586230414],[.028789729303638767,.024918790237205758,.04618374488536684,.11406524547975325,.12089401164677463,-.33167640134016596,-.3019921406198615,.07550502772956444,.015980848677207844,-.03024616910429527,.07077779981499352,.0217051545082647,-.014784416452853898,-.09279738694628449,.07338712132904485,.21513353226194643,-.13135516496728,-.041009990688083156,.0027232866435380892,.10443594986053156,.01923470231389363,.02666839309457343,.07745434217814501,.03770465398827287,.02834589176207839,-.009978163134861707,.1639247590037968,-.12998366709084602,-.16954434602341487,.044201694038575996,.022535303634435802,-.08057008558198017,.02832273196113292,.030852307058754604,-.05728126290696384,-.03064229252466788,.027439907981706396,.19418932496000404,-.21394127367168303,-.10822827097568048,.07877628685823149,-.05472648405401626,-.0018935512700742757,.02755405503595884,.12724208320232813,-.05340181008736572,.03257936953505483,-.005366876389614403,.14925943338428535,-.15555203727220704,.007001480168193544,.04759665424917628,.1576250635167004,-.0017752319114590492,-.07847953723896937,.0473805967808605,-.05401735337902787,-.01080960218579173,.031689669706736825,.23862777088364684,-.17967729863408127,-.0025414623844454364,-.004492274547398853,-.033450167802196534,.07325147963052886,-.0025312860424687696,.04727033427370148,-.018763729160332636,-.08570708165879015,.03745633447412122,.24243173611028618,-.2540866535861975,.04329414106499292,.04014814340000768,.013087435326473265,-.01985332459618848,-.02322582618398012,.03017700297747758,.030922203127136713,-.04095285821911897,-.005933061506276691,.059823934711038376,-.22840162828405616,.05383586489573299,.039215482051845246,-.019168216146914205,.036601452638986925,.007121698155200182,.005519491684324002,.017118320543367746,-.010329430802956993,.022891605120926584,.10730721508339976,-.08107168941575164,-.05273116873786587,.020938629685354523,.027472939746776587,.008732138872189002,-.0119734318888386,.029541130454324258,.02543753191678985,-.0032417425087455515,.09216900132169707,-.06348471226183452,-.08486420181923614,-.005545540001265031,.047829727088973206,-.03872852314389602,.02165612388923753,-.04840402618833343,.0811061440872816,-.050252564268459365,.06253850150864079,.050008949642628864,-.06683406976276449,-.22862797363149073,.13880779851328123,.0819568934706139,-.03653428459406832,-.0197239565455885,.07425296558847368],[.08097454476787322,.05652987009549951,.0325475746002,.10152684966806072,.0464353057497012,-.21467483931903908,-.20894615765238955,-.014892577371206056,.020894015871834565,-.0067217043883879,.03525206208069309,-.0060354856627079095,-.027461302429899262,.010095861403046108,.05459236563694944,.16828861382181534,-.17463234553413226,.021867928311703422,-.04139614121234397,.019379712333095322,.012675043495296218,-.02769514972624032,-.04124356774303546,.016051533116298963,-.00101868400485787,.1443779580581858,.07840763971617284,-.21215391984114734,-.05768089573932096,.12664817413140378,-.12395328524150205,.07177306687717147,.007574115007237647,-.05186632546637224,.03844472826365078,-.11281826148125848,-.013662478929553454,.21924860974778201,-.14332413200544142,-.054997300283757516,.0029602719156689994,.047502977291317666,-.028485684862829264,.020466736113513295,-.10612328436560343,.011155779036764471,.013002308851003064,.023295819752587626,.26377227907343925,-.2593114787690108,-.08109145681460468,-.0003967438491567221,.042663298620291695,-.002947897600341226,-.02670641642999412,-.08931025185163168,-.005043909355646095,-.005502048300267223,-.04536679903201592,.23013430030607201,-.09011555355216193,-.21358662268181244,.06901078184379858,.01987760740252234,.0044608961159714605,.029591032895087147,-.03501687061020328,-.016930134483468168,-.028665218589185693,-.01412651469531108,.2322333547477818,.02002227602869769,-.2510070762993298,.08930726728169826,-.007704470738758448,.033183418337549606,.009776425117414306,.034273315295213935,.020164835552348936,-.01004293041366619,.008413773164709273,.23502650629556968,-.024429730500986124,-.1683160553754982,.0005290142948826404,-.023487633169125,.096815945866332,-.03617787949756057,.002670053453748697,.0060485344731694285,-.03294986612777788,-.029843164527927693,.14655979582549006,.0353911847412616,-.20847127037801366,-.05789190603857196,-.01027014008034767,.07653773694218623,.08278152241511945,.11258631635960367,-.01659949953591877,-.0939475830037867,-.02515826814708777,.13710963679628882,.1328515249193337,-.22309506076529734,-.12553570046740603,.0251101088832225,-.03021547801359524,-.01174868668974658,.14400425060338853,.04316351632896839,.08594108251756169,.03518474139012809,.17622159819914116,.19444104428116626,-.23633459893577083,-.07738918159815503,.01463895746781499,.022800332745270047,.08354573665288247],[.12261253014406985,.16705127800103603,.19069455483447878,.06420078538135668,-.00016272403782892353,-.06594284936202306,-.007935106047411558,-.057893265858712836,-.05400622028081925,-.10458693453007292,-.0541799679401193,.06698967860824229,-.09921985327259494,.062446370884785274,.09094500180354774,.028277578410574628,-.04706939185341526,-.00715103160335491,-.050252538655332246,-.01470682832330765,.0954797205454355,-.11061849427089886,-.14255959604920565,.02685876773169789,-.1946544063779132,.18484819329409546,.17890314023634024,.15499366437705026,-.02824153524614157,.04479597904441586,-.05844408099644072,.013625007131520706,-.07969283436026622,-.11450496688056046,-.12377645767247314,-.06590643546844899,-.15742481688127266,.1298542504205754,.20266035853202718,.038497383031025165,-.025653639466894,.07572582376521164,-.022083431516520723,-.08548666750395979,.03208052290688007,-.1647946456821573,-.22037943812265476,-.2229737334363267,-.3806112513021312,.12775872709984104,.31739568607954666,-.01583423996906068,.055459428402900815,.011929160033288685,.02419312724618705,.0909706152760127,.16123203632279148,.008911780115480258,-.017294928512088706,-.3585408236670206,-.48144436153782677,.033786213483589664,.1209940431097762,-.022527387589338276,.049459009623695566,-.029490765269415273,.25612944261482823,.11469128278773146,.1280808496538225,.11403331019353928,.3050689704613208,-.19904848217033866,-.20053793259626246,.03964120520327791,-.04376670404571352,.033609985206833295,.00989966406617964,.11272141584817373,.18547440193507447,.1524434424661974,.06114521088463705,.11826241926353079,.12074606754768391,-.019667238146597897,-.00048386258516668057,-.12175688660479972,.036172066069231526,-.11868521523662726,-.1250203703417119,.03590491922718671,.017839906841583555,.060859449561677506,.09635166317000958,-.04921249262557434,-.04537260738200266,-.05589734571682231,-.0023764214791030455,-.03838286527828639,.006411603378155321,-.17558791205718122,.0023250224817987636,-.05172725980261646,-.057790529308374375,.013791061402471952,.13644846669520244,-.010155313334871414,-.017625717203356758,.07365290214345152,.0006932854524008755,-.050008478647772345,-.3192788812600195,-.18353351499079812,-.08553823582354872,-.07309629001232881,.0901901782107604,.10660823241153998,.09035141763949854,.132917195679079,-.01185735726791673,.052935295307996386,.043012618340511746],[.0636870265598327,-.02747449334477116,.04079252412326359,.03394429370263362,.06749399659832274,-.08420299053786681,-.024906649626728283,.00915836869445534,-.06882017046042568,.0031107283830948407,-.09710858504912417,.11878373624948577,.03710017079293685,-.0894027100464124,.021829275829537725,.05069263318004659,.012340313923680318,-.02368578576938657,-.026839662252448132,.034846261621930025,-.016166129228329065,-.02786495830089994,.12115538210609175,.0037368644565901332,.13531841970369599,.021592046315438054,.01817100573094571,.015072771881264005,.07040088369444276,.0022893852554199817,-.038531873505113653,.07341259725477861,-.029637114380846583,.14796659731395348,.12294211400056784,.06835532178907966,.1684693398714534,.09208858358733514,.124710416844108,.06941030055801004,.002828209679920146,.028941147392732833,-.08240586386178332,-.09934010666270433,-.0023105045076858566,-.044477583601388274,.0008809594027263945,-.08509910778848345,-.006458648569850088,-.04429511418026441,.10095939402980549,.1485911432241273,.14469873810179945,.07867563696833521,.04110277787821804,-.185748731574369,-.17064830498300138,-.17155221512879462,-.25171330168462724,-.27337273571997955,-.21265235556569007,-.17172557194975863,.02752712495534959,.05618012242699108,.12158172746105769,.0793384866287001,-.12195189294100098,-.13969446903752442,-.0265722227610123,-.0741704803065521,-.145127075010832,-.11500093509170173,-.18278877520622416,-.24714583432028586,-.1374776022980368,-.06839261036959236,.09867159287027971,-.1674030675690175,.07527407612466389,-.0044961465547186386,.13260037497576577,.3123405549781268,.15517911386484973,.06645992820391539,-.015467888667656748,-.030267329366836557,-.05625951840729994,-.03821591469125371,.06712871954308432,.12318688834042112,.18468566964642463,.0865250012197846,.09578353948499435,.1593076190452768,.07562987308980218,.11756704875720572,-.0760161520649867,-.011817169363246532,-.05195737709430641,.17488796559917713,.14148464642191833,.0869568383172606,.08105847566397013,.04695877234878462,.04918174254075236,.003410992382455305,.01558094374411114,.02651508429838243,-.06287888673146473,-.056347428448159036,-.09378127446608192,-.2396439753724413,-.13258713878159228,-.08436585933662782,-.12790680365138707,-.07008370693809016,-.04496190763532695,.04925129846530313,.07244661869675435,-.016196819754861112,.10029423625804029],[.022794829328282723,.03185540222137828,.02436717299490787,-.08829056624608388,.07232262276136471,-.06292516861381596,-.004086146110761454,-7972988029088246e-20,.01396609724411256,-.0251310357298712,.017075722683559433,.043144050114759525,-.07779117219058024,.048533511736318036,.007217025612539632,-.0354751368789569,.03569176722755009,-.005375235042171175,.04305370316223915,.03642594292131633,.026331797944731436,.018922402485978082,.0344245723793809,-.0433065305205069,-.02376931591851794,.0809939677232169,.0014022744912380036,.06800816187289091,.09510458708661795,.10798396936955548,.024411086728309606,.04370802516100046,.05651039482804686,.03801298940438935,-.016918964127942582,.1307634062004953,.11446285199173112,.2123910909324717,.28795590334995447,.0926874508077318,.09676400883214167,.07011596892193131,.04694467724843658,-.02810952172495436,.1864395624402158,.07787071989570529,.11792219460655051,-.03560826755933394,-.03664881215874992,-.13441333664206742,-.1209205303400708,-.1562438512284114,-.17025727483799705,-.12517931808717464,-.14934420137275992,.15932332483022202,.04839021776339017,-.10847969953324497,-.12255999835004713,-.19725754430522846,-.15715530383375914,-.21752678931536223,-.20062628687872636,-.09226733990822335,-.02057347231288091,-.07163667099809229,.06339759934382078,-.10020592169765151,-.1558036149028662,-.14943697528943115,-.11920849551682298,-.08120227653725197,-.11695355604037566,-.006728370826129856,-.04683793895431371,-.0077863170130979195,.019980965641957497,-.121667094665772,-.11522589823910821,-.05747177610963532,-.05222910064785673,-.04689107902121323,.06157405580787187,.11811240080682403,.17401725345189034,.1337150650275799,.1927256229810148,.13837697707498475,-.04368248952610823,-.035940773077983296,.011031099888345858,.06603510802719832,.16273538350576014,.1001587158991207,.15018677215060725,.05156079973064387,.05840588957394238,.020232732914280432,.08034215705932544,-.06688430472152501,.0430917720201435,.061075670741261745,.043764943962592874,.03137922924483363,-.005463533366559248,.039411450527978564,-.017169301013184327,-.027826140912018828,-.004714899656728756,.0361035243729722,.05466723031402954,.04623956359132372,-.04545606793086849,.04940225271078921,-.04766846057913162,-.014224514341087915,-.05950947149587994,-.13173838602104682,-.010384251552911242,-.08781221112410761,-.07760331144516386],[-.03235599468881076,.018326722847476676,.017295570021311088,-.027670634962396815,-.007680939104993054,-.04137668585653098,-.01506163061039549,-.04378113665897382,.03647714971239879,.044228566218286886,.18106239449231315,.042891343822209826,-.02085324572429434,-.024082163468429868,.041552139122004575,-.014678545508214125,-.04084197637584003,.01743202169508909,.0070216535002669556,.12929994168147696,.15511189221305455,.24789881463360725,.01524433890020907,-.016082932861742782,-.051589389728025764,-.09248737426657166,.04574401673887636,.05751681891908622,.16869815200400168,.2635471084233346,.13879401206280972,.1425191292736655,-.07845550913751209,.0045617718808213525,-.04996569794639541,.08036867162942538,.05014678092238277,.06747673498101589,.13151901964758053,.16708907133321474,.014140597465528995,-.09537822385677033,-.20288372470514504,-.39934020254115926,.01878272803339666,.055848444235998176,-.005273028114115508,.09488362821079908,.0926620841901206,.02634239108860291,-.08683895061096016,-.21345767462167456,-.282107822115785,-.14895903217754436,-.15887716612865338,.014524384805330928,.0641050616596199,.015209021241474052,.09483634647478044,.056562751972782294,-.16636322513631874,-.241320708765963,-.2596236883574559,-.1398205940714011,-.15531689505376495,.011694908155279474,.03201061104057169,-.037560894238744175,.06660778747741622,-.0076642057689953885,-.04070977708688811,-.04226030127644731,-.09001186030957144,.06926683868168232,.15114898488461287,.15845318802936526,.1565353536374282,.05796322755853696,-.03160324201159791,-.0055733045265627945,-.06334520571126113,.014274572871990451,.03168059960306968,.03982017671620115,.09341585936541662,.11919257043750534,.03989717150118903,.1715005214515096,.0032916843093048626,.004484666942523072,-.021098541490893137,.02580972076749155,-.13673281369087914,-12468117886521579e-21,.04530363098145215,-.0526550700395952,.020909495487494364,.08478967987071337,-.06333911092467263,.09137694505686653,.07252165751693404,-.07920992614819855,-.06729398745387948,-.04390991712744949,.029396455943145994,.023947405883684936,.0171670258216942,.030553476010320116,-.0586216899830546,-.00984268569256612,.20196311694537442,-.023668678155415387,-.014001946149787309,-.03728327654318217,-.023078128502029227,.015589706964187003,-.013168968136987605,-.031499036112030365,-.03978623603377021,.0545163256041528,-.04051296895686381],[-.11874501434881572,-.08229285106151511,-.0956081678686052,-.02057786834221975,-.05184628950761827,-.010859373167837721,-.022716678939708967,.12820642967693277,.20208152628630544,.10326830535107219,.19572108975580454,.018529266875907807,-.06234376403958489,.03617672535394453,.04106993308366061,.007976201268774658,-.10314299674810966,.006495517179795268,.12398900983956046,.024168115641601748,.030884610087337075,-.07499913799626025,-.04039994706996733,-.02634834152878826,-.0040063358136547406,-.0982142012530413,-.03343598299911335,.11941221649994889,.2555558860547529,.03896020421376146,-.07260447413235296,-.08030629503994723,-.10380646122757918,-.05732049324245034,.015515746045367804,.06255592200477092,-.07382948751156268,.09234710762260769,.19891060046749282,.1697336598168339,-.044617838703860296,-.17458925689074178,-.16855591416735904,-.12959176095156721,.0028653211948725388,.039281815318144675,.05181104086434815,.054229861553504496,.13870864137978747,.27288253125832607,-.3143878348089388,-.4393019728526426,-.1406383436455399,-.11423051269906785,.04779660456302437,-.06506150510615961,-.004260423637650848,.02946332359287078,.025104961380266577,.14743399932390186,-.34597564760602995,-.4201722978505261,.0350728315572825,.07959646999214702,.13322835735966732,.13339746737800906,-.0619576139450089,.06892042530749935,-.03853620657347431,.04721526298898002,-.1433449789679961,-.21161459673878405,.14176441081563174,.17098183292990443,.14174756095000518,.037859045933541086,.3108572822718966,-.02922935514410599,.015150100201128183,.034324197511492696,-.011781519634235918,-.07739711582860612,.0008248139395220372,.04253496183022143,.04985424198595359,.13020790077736055,.20732411001715473,.07004194288134588,-.03702686021725021,-.031791667690004716,-.06480616459090541,-.08258662171950007,-.07437530116242388,.01385894189294383,.15057409353019663,.13055028224014828,.023193912685637932,-.0793709118644385,-.07674722077519751,-.05651538715616186,.07066301035783962,-.08298069385057515,.03859091949287638,.03688503261834894,.10304253122200434,.02858154892479417,-.1138945464654084,-.023276097872029958,-.02020813146390732,-.14669512203229218,.02373056640770148,-.018262941034164024,.11113049123798203,.017809780077411436,.20203876814616534,.050784801616453046,.06146956758956332,-.007550751209127307,.00039041405665547757,-.1472153798567385,-.36919673052117485],[-.11817248565975272,.050807995924907354,.027086462019090568,-.05832408598310841,-.06975188697206569,-.021026807770255104,-.0010775384566174273,.07435038493842659,-.008399653634296178,.024897232303854835,.08743561284106252,-.01909898532346485,-.04609789190069946,-.03978145183433568,.008889473198062846,.007556922405348734,-.019310705820979837,.05536781248319076,.044255697213517686,.003269187287821218,-.010373408718694646,.07260112152530654,-.008100354989332079,-.024375359119167946,-.005175740470757712,-.007608303655937336,-.03860774568782323,.09247837502307099,.00029773934680776826,.041278394763053186,.08171588879027601,.024739987393328,.18485522219427483,-.0256447127811721,-.025676231567332224,-.06974714637606025,.054381153884765894,.049824898758326436,.13026732540299155,.17109724133509682,.059607917528576915,.0898551064946915,.09543727716276107,.1587642227085923,-.05913375761020232,.09097655659151871,.09510881397945067,.11556486887071599,.17970536904884052,.033055045328156785,-.035525492509829046,-.10877929753051407,-.05079396460228644,-.07639132244393337,-.05675798967236886,.1347731234822974,.12869357538617032,.13013531388087007,.006388712212117984,-.08972948672558663,-.31295031978607873,-.28325157301095855,-.22477218093756324,-.2145675780259611,-.13307930518541367,-.26981212419965894,.005016585566453173,-.08039808860717024,-.08521624861927016,-.18399362322745855,-.23965470437008415,-.12035412983362095,-.07698358306804472,-.018020432830199287,-.023775391914850265,-.10766179954942284,-.16700211823558328,.015040770227884616,.04251038144007874,-.1295843290841098,.029351080812140877,-.0197858882149356,.12163685368807528,.19449321821046042,.18157312421218158,.13917958348474402,.03625925982605473,-.05933035618988736,-.053816217365371406,-.05801219277539678,-.02499106046491168,-.0396560923543915,.16051410507047068,.14621181331244598,.0765292418848361,.2061768947045735,.08612988608968827,.23683312856300526,.17799588816524972,-.03156868591107587,-.011339033584039513,.007592900019644758,.036795050434868116,.033074275171315504,.02413735006868855,.025795926857207403,.01249666081014379,-.019552843326395453,.05284990813360595,.09051803542268566,-.012948046871117346,.07767191529914241,.03560950915943991,.07732824755456554,-.03709406667288549,-.004715107385355787,-.05921655824523059,-.13706040241569367,-.08499799651345004,-.2036404817250472,-.1023980466551825],[.0032466543865972697,-.005061914962075351,-.02181781055551349,.020873615011084853,-.023531149044787023,.03236851492334604,.023279668597308872,-.06907932017764035,.028858662573673435,-.02291220091069275,.03504956758463669,.021373318115011183,.0431771630216619,.031000576507821495,-.02272799250828532,-.04113033790693525,-.011956655086753407,-.0073657698466143146,.01951306245600455,.05648936597537918,-.0180069174946471,.023594044549755097,-.06097471095863413,.13275136748820646,-.02028861314235185,.0933234697534089,.183759358028883,.0933077625261312,.017002171822373846,.02900112839294272,-.032620309649792054,-.07714446633666172,-.026312985524931123,-.03637619977745446,.03001653999320339,.08106844871887645,.17134303640361637,.1454521161962567,.14411586594973091,.2508953402160685,.1895315775753576,.10961959096303461,.11868995411865033,.0976490741614215,.01753917806278653,-.1607658351969666,-.08944189051045412,-.1662700174191715,-.19945945515698124,-.12053950329957802,-.09997479716657263,-.0030787654511070864,.17592486845741467,.009404761123874367,.24137587097504254,-.10616945372175415,-.04129526390997809,-.18662857060598367,-.10128658810243146,-.15612237408478322,-.19263459821003462,-.26517496264532614,-.2107547873859761,-.15240183455933287,-.016383869315923158,.10147080642825733,.008766114310321066,.033117317571517424,.022841544673590577,-.12277060576748028,-.10456605790706747,-.04681087742708395,-.051309908127680354,-.12955150951531408,-.08588318728862879,-.21065306139257753,.06742355168622795,.07409025822200359,.08214740786947217,.09575687890732651,.12800788880163314,.19242466407747882,-.010488011809805561,.0024629531735309296,-.014172878937930886,-.06993883875353082,-.07193778845464721,-.07364200527100781,.03140427344801179,.1105219490341731,.08262921650452189,.0722242208307422,.08194142882250403,.14730626716129064,.1368836421937018,.09392788242913958,.026163487559181867,-.03421725273288698,-.09625367662647977,.052568923694275654,.058021118675766356,-.06948662344056641,.10387349833640262,.016885436566802817,.005752374710489408,-.03385762730057319,.09919971997827448,.002758758622581625,.02888308251792683,.007798772719153607,-.026129748383045506,-.10092939633783646,-.05972518155086229,-.16032203807483622,-.026295964226010465,-.08181702664666154,.019856334497422835,.011592637104098677,.03353573139538846,-.037190296797926556,.039208766263747495],[.1510565981517946,.0077705624895111625,.04042802168461637,-.0017942995443031018,-.041653694509876826,-.06859077437682252,.006298784217715708,.026863472745659034,-.032303950577093066,-.01903335591525457,.007997959526692383,.27835546979835657,.06863127471111802,.1003446445291738,.09687976547773058,-.0033597601637389563,.05432613468920053,-.05594167487163827,-.005418728541006751,-.007755238576383203,.004575943998333623,-.00017646288706738011,-.009475982818670042,.20486066918593301,.23125707799370063,.16313521549416574,.09853910567431817,-.00992570736879192,.05367234352995434,-.088888704815857,.023933003966042796,.012746466899076839,.013847645420023147,-.39203581787528585,-.21351183585569017,-.1791720163353998,.01068683181804335,.1669535291647476,.20160459511575174,.16448815854770155,.011414537180906403,-.026561248426133832,.00725645807883285,-.006350824391933685,-.1600711578168632,-.15188987832197204,-.22445870647203575,-.21974868512281032,-.14907696976575383,-.011673426129634679,.10655889056027106,.1667289488285415,.027289163008064776,-.008044546331004432,.07580932711770764,.02383788693419224,-.06031878412843887,-.15808704038753496,-.15079581692449417,-.21784799920378062,-.1841139188637343,-.034761650797478574,-.003078110011040372,.1443522382170338,.09819159401433701,.0188995113243184,.14330730009269013,.13334147887544215,.10003033854405316,-.011990871182064697,-.08118372537331713,-.09185322612857909,-.059061176343404506,-.03070241061676092,.009131792422277976,.030031451106893217,-.02916560965388293,.11124860010301604,.10478624646896353,.060405900026046816,.13088294144967497,.0944468233253217,.04688844062754824,-.09989417050319033,.00043866828312585926,-.07915901899077886,-.03095799592580474,.051180956797886826,.03653220034115198,-.026313715866520357,.0487715405583303,-.019626512408325483,.041811742473138486,.020274853199404738,-.03531125186149117,-.03570043534772557,.03777639113084559,-.015390360725990176,.10246466374888295,-.004494955166304659,.005158808183997554,.03834429330297548,.052952011747411765,-.02014141503088371,.03891118599786242,-.02580996905072971,-.054106671252965456,-.05908080867179331,-.019798138018163675,.05184924826995934,-.07376317515842332,-.03834091661300342,-.06687962421744942,-.018985614490330482,.04871042816996554,-.01980872890750089,.010561838400676829,-.02456274941936872,-.01514121795616151,-.04795833725693799,.21088916658617063],[-.1251912106765544,-.11688358418954034,-.05896115401747269,.04223537875473468,.027384636957009777,.0733784772929354,.19970246516712672,.18078323729328397,.17754089590649072,-.12635528181833747,.08320974959041295,.029824111195079443,-.0015424767491013895,-.016459376017527724,.07753356123704731,.00013267738458831377,.09375027916191704,-.04472699730074159,-.19635306229962388,-.22782377363617864,.1158824654511761,.2894446913107698,-.06877233841174803,.010802089827676834,-.007867632781378895,.07985107130712792,.21292640866678078,-.008978445378834802,-.06841787699813894,.022956354752557615,-.026211043907313703,.057828305945572214,-.07948302025407236,-.0161717155946158,.06268931522460307,-.021796237786981598,.12691374422028867,-.04752547764539633,-.04930128304103931,.0482064777494462,-.2171608705725426,.02813017983255572,.12406052692394327,-.0861311209500024,.07689460503666104,.03813505264063799,.011628762315091006,.07069849377635645,.008413533617812868,-.11267273154459259,-.3975484240537875,.07304069354916054,.16994373683501546,-.11001260539983146,-.24501206201543754,-.016540271332897986,.037588646441523585,.12220568704299391,.04683975277378849,-.19361692505980962,-.5034060728708488,-.4622460574539702,.3012728616783651,.3851257612605975,-.19298521871344812,-.5088287167621777,.0577662914811312,.0859156882107849,.0025825469644762365,-.15401989963515647,-.0810666445754652,.13998594331352224,.17360289429870265,-.008211331775624785,.03416443347671071,.033688177254881144,-.15383945741404872,-.0035717910256200143,.011347483637652627,-.017873166525061147,.03914679658772492,.1063684799467139,.07624763639976428,.13995849083497702,-.12176042704433512,-.06437548220810757,.022871601462242333,.20473954746266876,.014948129510764279,-.039363453803276216,.024752228243803808,.06253014347756412,.007827349934518012,.08753987689455507,-.03454293596457564,.0587464432839514,-.07512628597575663,.07659748512077515,.19454209279112086,.021682122234847927,-.07348869550130263,-.05808267910197129,.012328447567534092,.07603887813254051,-.03691347272445111,-.018862970847490845,-.07931652130403127,.01609398288094103,-.18419160468838913,.04922668323196122,-.06145731499091828,.0282830319555805,.10422016934925292,.018036735639772688,.06290511255874787,.07205279732777245,.01238787011781239,.09073002929031532,.1143934398810977,.10142758766032614,.19506458179923916],[-.03747154794061502,.07900305916888334,-.118094514839233,-.011575517807246187,-.04735483715894843,-.04381990508782336,-.02204068674980534,-.015582330906619458,-.060450140546324756,.005671070917878641,.08734219976791799,-.04748458685556487,.05557846862917353,.014640579783893624,.10885390788005234,.07256075044057561,.05363600621372138,-.017555923047039936,.04213350785318807,-.02906136252712694,-.12501847301134028,-.017196570903083498,-.01339795071661689,.011501218082141058,.02770235909099609,.02741155292168642,.029974564956617343,.07336426312558758,.010914273919724583,.07540989196611064,.13043893685947877,.023410994104295653,-.004825368563342529,.07497843221817937,.054355304633943134,.04204747510162269,-.0154640673353326,.022630801443203577,-.06388823754110312,-.04044630874727343,-.11272446316765139,-.07731188141641226,.01898064857748586,.07948412647314071,.042423015302388865,-.0006940351035240808,-.06922908845278616,.07743030379264013,.20473753110391857,.2871923796668266,.30503589992248753,.32550043922428146,.14073163480952872,-.015200746246803488,-.041860347134460144,.17135640555161447,.1527355824602927,.15944325028772327,-.04636067975835752,-.2227663558507864,-.343742026059417,-.3875625228553149,-.37352669157727963,-.17546418763106925,.02494184485831446,.03853348528230306,.12621571033694096,-.29897191326894157,-.47416602764115157,-.4053376998776362,-.044666674782561915,.12588265080168398,.1850321413968945,.07448172492372299,-.10021514102767744,-.3473176366872461,-.09928221388321762,-.2983750610269019,-.1866202358670671,.03565212625203349,.4013035269477947,.06080080045364062,-.020916204012535085,-.017432090909172804,.0064526884627329265,.314471233100664,.2781426659269365,-.042857339346656316,-.10711074543649843,.12304888506893627,.34204207221679617,.11781479381803128,-.09820750529246548,-.22534157766971744,-.173369554604215,.025185350745411,-.11167805937105306,.2142012132418766,-.04395005843596544,-.023906769270708315,-.06558463884581744,.0920406527523769,-.035310034547302485,-.13396895532331693,-.03899490443982933,-.12154265439434478,-.13006356630340574,-.17041731619250497,.11042010979150567,.09265124738716436,.13111238457685057,.058001891637747924,-.002652110312396515,.1572234782164298,.06607130870328556,.039488088992435756,.03927448274994905,.19071883885744992,.10773181848300134,-.02812558988695802,.05797883312162265],[.14781185661120058,-.039386331432373266,-.022921264342725164,.05388189603876585,.12598813182555718,.028202774466358597,.0346074867144123,-.04238131256263251,.03884963956920999,.03641008565585076,.16289756506012004,.08984523861558368,-.046052810070111194,-.08209578041456302,-.22396972511791116,-.11679212172424258,.10053680749504602,-.00823224882303256,-.01090733225309412,-.029537833982867273,.004945131369650824,.10219160122974023,.1866374510485118,.21337195182960642,.09692801730212781,.08222540149967027,-.042534134329079154,-.05225940644990682,-.02030912059550327,-.10672463441898887,-.08822130798732822,-.15579389025604545,.23092722621811365,-.079955537176635,-.13801119251604682,-.0569662885529685,-.28523441407005473,-.006823425984885539,.2637658797263801,.03525661052999585,-.0009694807897623753,-.13354739530762744,-.09529223469456388,.10809316225785848,-.22622473692942502,.1375096440563321,.3058868523607385,.47089738278075627,-.26225597341681434,-.2429165794956724,.22231836629884105,.09054374170971215,.0433012887700934,-.05519533311547409,.012450074560341884,-.483386622957673,-.41101568836876,.015182853563479719,.2686700361155807,-.18587591997040018,-.6574604765676167,-.3708028169924963,.26181673556057816,.20685619441423742,-.06291346653609113,-.0046315163613586535,-.3460271088384187,-.05787583147321959,-.0800736633904083,-.06073296828377071,-.06313172224047209,.33222972618047136,.1600402390728511,.08404710209986747,-.02976989350386039,.04542127487553971,.03450430416325412,.3753624233823881,.08893561816209909,.18255926007618903,.07993617252967636,.2352440711079648,.11129319261560268,.10974139035902221,-.04722071086520177,-.11616310797947724,-.06730980582471298,.03459913262322464,.23285705965606096,.1319034928296215,-.04174928439903445,-.18971912136060662,-.07031412451546298,-.04433981468312003,-.052799114165529494,-.12425748565008495,.04548785477452552,-.13703396222511421,.05917219535467702,-.05667902413997435,-.07418473669584665,-.09695247453613126,-.02183641852612041,-.06573120701236759,.021349416929545006,-.08341902593987408,.0525663677690868,-.0026602316535740966,.03873498024493624,.06817581722807808,.22646127086716095,.08289023239764355,.03539905465475633,.06732065297074195,.14239677197520148,.08513876908816612,.050369804354669645,.0010887532169456537,-.018280111009442837,-.01722592461817163,.08422037289529935],[.11800749409978381,.048641544731680905,-.10678911358350332,.005291117990921301,.23136181762806476,.17221088012028055,.17682279225882522,.20044631087373868,.05212243965219243,-.1402595079578749,.02243868573975058,-.01982804806120863,-.1373081753593374,.09257718698058398,.20995915555570394,-.16372378150074623,-.15700734079198975,-.1736927596916677,-.0580537721038506,-.0157237265316914,.01939859961370008,-.049310374137502805,-.11375225205060403,-.014247453019732223,.07073949494212364,-.0883277135102292,-.13682329114661984,-.07888847959680247,.053144758392313945,-.19437922851131084,-.0001706889902193115,.13424778030432938,.009332072526130886,-.18143139441084224,.12020647648261903,.2963908916390815,-.009097465083453715,.0398558854537292,-.08463057056034079,.03693155284069398,-.1478889489144798,.19686627422843606,.40663533420008574,-.1433628367370896,-.18437286091816663,-.0387524786508332,.29570661700880807,.05368898279511149,-.19564754353990196,-.3448638572850823,-.5012130700076909,-.40626297518108834,.13382493808540968,-.00028761919063780006,-.20091903070867112,.11021116432324056,-.18695906308384752,-.2395200513010894,-.18820014759183346,-.020408212645899093,-.10626227681963624,.10776229335456736,.19941878614236833,-.05827657288789745,.02752174113496536,.18134851852604528,.06869487900843496,.014109730230775254,.019795706580671063,-.06951944503242655,.08599870525279386,.2512168355426164,.24991886206451533,.20675478705920156,.09380246704308468,-.07150568358107444,.08395660862250853,.04266422246954499,-.04489797514980388,.0756332294513642,.18470969085810693,.09231209792140999,.1647712315503363,.0674074677084526,-.03539149215963413,-.1005117354806793,-.14948457456306743,-.0859115996358253,.11899616835413444,.02223203994893508,-.05960418036718538,-.08371413479598194,-.12267228192899818,-.07181755365520867,-.06136485403133418,-.03712235502712,-.024043277802218023,-.007718335058683745,-.027902500393156213,-.07022897684458969,.06728304821879091,-.022096929111434786,.030068653546629937,.016508794156056245,.007991022812565085,.053657963888500304,-.01697467785547141,.03788848360559102,-.10340431444912367,.0939470116916453,.17568681512805212,.05319327446333484,.08332828325168111,-.012241690018234677,.11152581385082602,8877751397590172e-20,-.005979464667969045,.07957622903533018,-.011219166299368227,.13062677267175682,.13093666750650848],[.14423093057173975,-.01008076678423761,.007377104459413508,.06526902731825053,.05584860582390246,.05236387975722907,-.022518577948855645,-.00998540544349874,.007488119357989409,-.007637027399657208,.09511536499739359,.007486862308122141,.015230162163870492,.04021789142515911,-.08536714963206432,-.17282741030837942,.011588285357803,-.05898200358863245,-.09121420159304248,-.05548553721852835,-.08505617995392528,-.012889357099271234,.08219150348451196,-.08821554146779652,-.17609926241410598,.020767875260274078,.2973162999706101,.3447305749860291,.35075038554356563,.1675765045908931,-.08431744533615992,-.08765032447768258,-.0293005697765467,.008219759797923734,-.14178517944724803,.2016378749777812,.30622658040655926,-.08983427255695514,-.3299115437753259,-.23770186950896088,.14059485558234217,.2293501884825727,-.06954897481239436,.13056609682447454,-.03149728621810852,.007927379146063895,.08481154415183993,-.2914627030183241,-.12913123455806388,.07096605105569494,-.08948667472649491,-.07685719628317632,-.03186671799932277,-.09490557138676806,-.07682123007601649,-.28837628451753605,.08779954200080047,.20019432782413554,-.17096915847133118,.015333878953658897,-.28908252284426406,-.02952668950598297,-.31385369627251253,.043040218080409316,.4557678194478584,-.1807055900807637,-.13846940283256665,.04262264840257386,.2723173783565324,-.1914801913205901,-.11016274974475865,-.1176991482916686,-.20542229438804735,-.34623488704400734,.23754568531606332,.2859997220700538,-.07796298777428269,.034879273993081605,-.026162450274433972,.12712327036253446,.14403182667963604,-.03414888705288188,-.08855082368809689,-.027745606072896507,.12772199691917124,.10001931959841266,-.18643104606782843,.041460676340255576,.05771435221180913,-.08388195420023732,-.08331277637087868,.02614741925611943,.057512048083849625,.09877685805254571,.20838336844764122,.08141626738643452,-.031359090867443505,.010864074615252003,.05416772437770708,.03633576655386271,-.03773405682796377,-.058460234722864275,-.050705505416570866,.07210000699293825,.0772373715279393,.03203418995256717,.08368828595046637,-.0187409316170321,-.06823692076172613,-.06725245236398913,.12643108826975322,.09241136185081472,-.03283218324214139,.1036074935038833,-.02064167472267718,.05039606128905021,.014052376131391174,-.02423136333623187,-.05009375566336979,.02935370249151292,.10979499165058046],[.06063756206193438,.01163357669854459,.114137229829593,.11754589579378544,.020855057347248462,.1097493044915731,-.04499029293678297,-.011032547892272426,-.053612766250269506,-.04475819760291194,-.10039035625686599,.1343544845920419,-.024159164234305225,-.08452442777970376,-.09196037551452901,.10788802496504861,.04599807823235408,.0552750050379892,.06435881986085769,.015789766512200487,.020929919215574633,.0408268323092314,.13163339908596128,.059409419123521795,-.026657113464773563,-.14316517070653423,-.105418542401858,.07323749589709133,.08243361011408763,.06259632374994317,-.003104446434026492,-.0858401391142894,-.05285515481307368,-.05803703807964217,.029721950798359945,.09266920936373313,-.14987389757269964,-.13353796595923728,.050257684298183,.014996004118443262,.11313878950895426,.052153057368792013,.010577754712894294,.013768087181216748,-.23145094612919812,-.06758686960983734,.14187556860642475,.21502139869877795,-.23699602207891432,-.28070386994651997,.02443305911955751,.017265628634335395,.017657686358856672,.026414327638663804,.08807797576864566,-.19378616438963833,-.33747330456037095,.10010384808690605,.3681340911471589,-.03425924318529136,-.5152900491931715,-.21455976987161104,-.029064252143607,.029684271548058694,.11428024956830421,.03599724323714473,-.3178054530585862,-.03893900280960352,.1708263110456912,-.01983209806788927,-.015434962482212933,.2106729777023667,-.062119854775684574,-.026936094188691473,-.05553110408369888,-.025879857930813016,-.05653702058897206,.0822515132533288,.13249378757784364,-.050895123398873254,-.023068884844874127,-.006580414354771538,-.029028619952673668,.16670678797071425,.03728723954927361,.032006611053345235,.02298554186851373,.0330979700612698,.25106958648152244,.05524767984135848,-.07842728617881933,-.06517953010256305,.001902992764642758,.015118472262848806,.03162932993377893,.0744705682056874,.032407934317240886,.033762676771467104,-.05510921371766836,.029518107237236926,-.00557251827090087,-.022571921481206444,.004978260357756517,-.03489286195148675,.03015227783836147,-.04631753619484458,.01721742444845621,-.09059543804766393,.010986708242086585,.01475361802999256,.11880942290428557,-.018853830715500133,.054570000910600755,.052880256948674695,.0833878827973407,.06829123863233161,.06359772129360039,.0518869232839437,.08308711624415947,.021602565983420394,-.059861424749677705],[.09080714473952173,.04477713049248769,-.006004236596012319,-.05036343325604714,-.038872008341752945,-.12117244583538275,.022973279126560026,-.0317124478295967,.03805414842795499,.004598740943125623,-.035659664256043694,-.035674765832077376,-.09299015020156876,-.03916261171227617,-.006904393089097821,.0138362499846926,.03066070836750659,.07054913875846983,.02941004691229679,-.012521892141359542,.051323314480405155,-.0037634551331882926,-.07001383105665589,.01086073225646847,.03272678318756453,.1374861322513778,.05818397355634958,.1375096932090067,.07872032070283921,.10378646515411444,-.02894911437094108,.06208158795328925,-.036944529962483555,.11289672176654392,.034425804553726264,.04491504898654261,-.05700718304868935,-.15438271229617534,-.08287102372873018,-.1298228276365384,-.04361166568800395,.06596435175319629,.036324136181226305,.06371398603755794,.02173517939440031,-.07825856376940868,-.03695665713662548,.1335536638973711,.2820127488291951,.3248715566879344,.3382707227204252,.1853812908283755,.07322333197701335,.019788327920499546,.13765137512483783,.07806827112667367,.08518024330180544,-.06912579487432846,-.09087857281110145,-.22904348013123638,-.33513853608255195,-.3410714482164571,-.3514787315094477,-.1429837248305727,.07534805803134563,.14776217747988318,-.0458557013057877,-.24152324430590322,-.21753420627734718,-.1309360208776029,.020511261336832037,.0976716577514131,.14601331736207362,-.12506767652167178,-.3725235767315107,-.4082390489365429,-.04590580754479254,-.1600759086755924,.07937818266133348,.3143974221346838,.19157945898080572,.02903065545276176,-.114833479865943,.0767261382297855,.3013511457136653,.27545746842581786,-.006862075032061946,-.3652247609294275,-.06701923494448854,.20620489038853418,.052499913955829466,-.1326523991171371,-.0789502460821889,-.206419805797655,-.24381499902372766,-.08679768063808978,.23653031161361043,.22019310254213031,-.036973082188424586,-.04916248284765505,.1462592159198925,.14505339243853665,-.22743035761938601,-.08206610455658943,-.12119372823467633,-.04318168254304364,-.09801604542519023,.029470016170797184,.1374726762360411,.006291702539247157,.16322306590540175,-.09136353558362603,.07328769661982434,.11422898762272718,.08521042286656524,.15331572095963925,-.07266053822766287,.20466593159451976,.026700931142256593,.03601107429783196,.07882770790371899],[.18112261990369827,.07330552477050538,.04073594357969182,-.030592173175515824,-.014723051663569992,-.009717724172896347,.12724950542153152,.03039707805193355,-.05888919817899542,-.026611166982695778,.06668104671222798,.06660808816758836,-.0719187452250616,-.008316532379624916,-.017286314033053696,.03860276428662211,.06708355106867812,-.07028210329075844,-.06969068677450957,-.025274574618584636,-.11014662057019094,.24938498020809974,.13937639935994262,-.05719784127987072,-.07333099431064974,-.1447911227660449,.052420027937541525,-.12934942016932524,.030685317385975658,.06161111711627355,-.10213214383142413,.2239301020176982,.11685706457732412,.16687464021324355,-.1111052075644686,-.17122260866286426,.05658186998329005,-.04893903568767982,.15917940910095132,.19178174933281159,-.34144279330828603,-.0002934693651933523,-.04690094735591402,-.19493783020620092,.0454123494907242,-.009503367612825525,-.02911712645509991,.04140979388731324,.23150478397061292,.05244868872817422,-.5672713598377552,.3002926921538524,.46090762088909437,.06831896235005604,-.37007579263516616,.042656412910046834,-.13943043649625064,.11478477562923234,.2674056989846191,-.10448691247946103,-.6682765409186954,-.28237532775707574,.17754279911041,.17370357234732237,-.172164890655841,-.47505336754415434,.05483627683056928,-.03016239745576678,.0684929075971628,.14670950434159008,.007173184059208887,.29965767091965445,.20250028242592366,-.1778433792734916,-.11561865754268655,-.1332395677790339,-.09722185347399298,-.028986446755459486,-.03580733604518049,-.10615355684023776,-.13901885393191493,.016240710560221847,.17310497729481505,.19618607123165227,.11531910216918494,.08586332648038018,.1662738713960034,.31073734902957373,.04635899062683328,-.006680554768541611,-.11949504899391879,.049149985727881776,-.11684899113755934,-.07762195316655388,-.15566484457471233,-.042823410792438815,-.07595852938904664,-.047231781924106236,.18266592599709178,.10710563631894213,-.03180444558515859,.06409971260243988,-.0833395715986823,.08860645005897541,-.049001943443667206,-.06079112950227804,-.01193856606819367,-.02896633660169206,-.020442949029082044,.030720122959175578,.060613751104797636,-.03989766326711776,.06370141812986851,.04736875093917328,.02939838110752288,.10605597723541271,.08701259983398457,.06714372555475887,-.01789226663164903,.06980756581123632,.20793552791413253],[-.03618525659164709,-.06842365139802556,.03394826901898129,.25798065842164275,.05575468840983275,.14928617791426527,.20629310863112724,.22367188663579815,-.04603354314311116,-.10954993360673064,.12202419922148086,.03368602518519828,-.11811717921720266,.12833540839950633,-.1289736286658285,-.05630428493998846,-.29473302723096206,-.0251960264590843,-.04980420634957777,.05295377195778636,-.06701949757192097,-.06822657644339594,-.047831454949617075,.026913257256672624,.08873411083890301,-.19263180519366901,-.011955075780035074,.08630641050648535,-.16802175795413904,-.0833792793293596,.08789596149715312,.12511813454172754,-.12767661265744493,-.21930070432606474,.4048499986447403,.2168179404643775,-.07267430101361208,-.08764912913266763,-.11089339548416925,.01529602176215343,-.11229804131529554,.29574346278635255,.08099137436155679,-.1694969856716752,-.09718111838701589,-.07648951845905894,.2409585525298908,-.24206344311267508,-.33278560146628966,-.40823989525531124,-.1698311866948436,-.11497220840475923,.28957955830284815,.028529279547082176,-.04802349179664002,.06300024473077781,-.03072187457794187,-.06696304681523214,-.01101372815939157,.07593151427854354,-.08086212076080368,-.16771239481709987,.10099670337031591,-.24229068894050565,-.3155489339818376,.03738906044904006,.15550442487747781,-.021450780534793025,.07802412591630939,.22670078648533437,.3000180336950578,.2480396752804122,.09553868166157423,-.03803456347604652,-.02863161982409773,.008302809789431043,.09655412538737305,-.09365578170734311,-.17003471525346986,-.046727860698759775,.05438730002622244,-.011590570354357996,.19038974433125128,.08009708874232974,.18123484236756301,.11932337787747498,.021024215763941437,.00924516718706997,.06740553047068025,.017941188287962664,-.040749800063489494,-.0824405264837239,-.11871195451512397,-.13318249702629348,-.05403632677909899,-.08100167732143712,-.02666368597188626,-.010406736043617935,.07620903935649641,.011611786985809086,-.005668402381206444,-.030538187745098727,.02057524731714261,.053927702112941525,.047348833795707576,-.03821865610616923,.03433663622575353,-.00018565997117961364,-.026356654841611753,.08069116291754706,.12906802891828614,.05459184679453908,.05656101126111417,.04819361188817354,-.03235204198972036,.015293367697285426,.016804531631558026,.13319266151582276,.003858408301107147,.11727652977520774,.10128996888306026],[.08703900182821628,-.08603086192239877,.02399938271861143,-.05500080253829832,-.04527545615333299,.02871882797765658,.023278548014906846,.007215412469654849,.07922698843858238,-.03263231259403387,.15267091964537238,.044269487995447235,.10051883763832034,-.11766420459825427,.06744641253041428,-.016434712072576442,.03005259848934051,.10105556654675149,-.10170349865733713,-.06647672300628357,.012013167877748929,.006246493542248601,-.05765997313132239,-.11952174430584045,-.014950531682345641,-.030954419784185765,.18711958320008767,.2158829444493494,.18760853314788856,.09582257029334881,-.0402218539555546,-.07324981058296466,.00427782188615114,.05578173796802546,.0821923573331367,-.012445928409250004,.1770510242908752,.1158017657021186,-.2410736481902913,-.08583678680040902,.1500735566893015,.2849842667051099,-.14535341708480665,.010094356111924016,.09591670670864094,-.29873458100190536,.1787464039020454,-.22302317330187477,-.1748799384747195,-.04371284561005248,-.11620374099610192,-.23806617911756578,.004300379571986694,.05421223197894738,-.11567683342313427,-.2933900664902095,.12100456390445283,.44189519506953484,-.15496760773507526,-.022722335616015554,-.21405336749991405,-.020547287844339426,-.27084401995117324,-.09504419903562081,.28060020656129225,-.27074453207286275,-.1368725199810682,.17055001589057026,.3385971361439663,-.27109736561922526,-.3558606466659258,-.2653473240178172,.08294313791592142,-.3584667824051136,.34730776588311096,.15494380599014224,-.10539865152649901,.09482805238671117,-.10941051423376011,.019908568726464734,.13261552724999176,-.04972481104338111,-.1069662016590855,-.2543870855366049,.17440858544741758,.106900230981372,-.07767114581696778,-.009371867736708964,.11752430326382256,.0257521198608271,.06802819580542684,.109859958346973,.19781198384741466,.20369617905172333,.17359025162546643,.16858127865343278,-.07158828773352177,-.02785843176203006,.02699518121637298,-.04796739911574098,-.1744826031817358,-.09643156876483198,-.07082085959804948,.12975749185900132,.10168587218941928,-.012905483555157513,-.007214488876249814,-.0763086595547202,-.07477688141721188,.049861846430829346,.13897204424792844,-.016419927285720337,.08786080203387957,-.03555942986073202,-.03426567268440027,-.04115834635724783,.11153373670141298,.021064007443562835,.06665374839578932,.03112257100450526,.21873333106656628],[.024271907098944792,.2115259074770901,.10968836638996259,.059160601041090916,-.04224950737739813,-.0874798377525959,-.010602704832708497,.08245487941116698,.12207559803506536,.17548011074082592,.04848664317003136,-.10566377044967423,.007271286441249761,.004826482494559969,-.03710832182179358,.03696918924262571,.05926595272339992,-.09112427948614352,.016031767906761155,-.026239172447726146,-.05902193542915756,-.0886727039049454,-.07726406615726103,.05627513322316084,-.05104738191599313,.02338781460654444,-.017324327411277735,.012251187743591036,.02566561133241816,-.020852848518282376,.006696834539652391,.07368626960106157,-.09990258345110824,-.12413190403188956,-.018048937015446576,-.018586297307219612,-.04479300570534413,.017307608148219817,.10244118561809155,.000327998002201714,.006467135179971887,-.1022459225049749,-.025294477732110757,-.03444156941877695,-.1278928232704679,-.022149310544806594,.014835263850125215,.12138287707221934,.03188295858123323,.032470116515611644,.009095652074956856,-.06347866160303998,.10606577340598457,-.0991694513237349,-.1638198945736264,-.14343340117378295,-.032182651726264416,-.05801804456528885,.02291614513355533,.04015014638434972,.1059135990465968,.1170336117688416,.051143184046495,.024664034757263892,.022331370571566023,-.14794372876832823,-.04622553224763706,-.05297556705197623,.01763335871577283,-.08308803979537915,.039154465132006294,.08355877555883494,.07437151644464061,-.010152289765342187,.0052220614930217485,-.09477730846615871,-.07107653498195644,-.019630080815721984,-.04040811670233907,-.04665257173207507,-.01262859087675526,.026326307291913,.057107467446696494,.09172417840424178,-.0027241597818778163,-.15413869342653225,.04417172095985869,-.037480373466733836,-.05858180541180702,-.10281951751655544,-.030064069517148434,-.030479321832951416,.09260783822417436,.04494467880990302,.04540409714496889,-.010356704162888877,.006004097299951078,-.0740531500924772,-.04177688565691491,-.0005014536555735596,-.03499091395166101,-.03612566084615568,-.04510043410920088,.02586124884961563,-.05321849606461524,.012117104458325631,.12779186353261135,-.16438404194145712,-.012740091450395306,.01918508147926716,.08477090641897354,.019614329268121566,-.03480721117425563,-.0017216001979017959,.15755321182059503,.005374991982287608,.03944387013558573,.14282549594886118,-.04793440470126041,-.10055944078648103,.08325739558742525],[-.12767186993116422,-.06241249849097049,-.09414071614574093,-.06479614654348836,-.01780983423676153,-.06909977220751642,-.023074608267024246,-.017483825565269805,-.0664528454354431,-.036871983239677726,.24167468985862534,-.043100584664250055,.08879797960904616,.07457891471218783,.041306113766767155,.04109954163943659,.054754800348057686,.0840866406961843,-.009724776925342373,-.049452947316442196,-.08113274209477493,.06480280977245492,.05833403551933676,.04885826397449831,.0030690275504097336,-.03772168814794402,.05419419343854186,.008135356718494746,.012381719155275236,-.008132915823203319,-.05345605868496609,-.0916530693946343,.06463035335955475,-.0018237773961607869,.07998316861203618,-.08516832162278348,.0788338200352338,-.03684140700570926,.14405274156018966,.015136780025423867,-.15091802612252794,-.03598558709040784,.07090091761370856,.0031644970002940084,.012721805049422611,.017055461026181423,.03574043553568611,.020664246268072436,.28800157393241543,-.04394647689774655,-.06990450386033469,-.028875975086598206,.013241447478979717,-.09393278013154133,.007354819070810997,.021222759365131662,.08867432010496162,.15572293451123756,.18553868377788824,.051415801134578276,-.3081375111639719,-.15349895484431902,.01561395969351688,.03325809279434146,.007274046671437939,.06854592169946613,.15637538018177105,.027911256742741787,.1847624277661041,.01747681129365855,-.3288251419976758,-.27338241826081056,-.08244213190925273,.04034605235864276,-.010354560475994028,.04833301714323619,.10853011009473441,.20222782945874304,.06016381619348406,-.016735356900245406,-.16834359646244612,-.29914164075483063,.034354440985680856,.045517620346114396,.02028784764878888,5420636718756616e-20,.055521485631890424,.07856131702031662,.16849991072472859,-.07018428877093495,-.07948858451510113,-.29650023726543373,.10263152418119534,.11173763966050175,.13931259707716614,.026570560269986006,.08165824214947512,.08182791954792654,.08309841695532953,.11143074354409321,-.13932942872613946,-.22917697770142686,-.06435192708336077,.16181167668638935,.2516725917047546,.04248064722329049,.08831818496302116,.10703227267716384,.09766745183982732,.24656917917661206,.0007754387716052205,-.20364545582535332,-.1289119075706024,.07437188613829426,.25015791541828036,-.0027411825679765148,-.09112970905373685,-.23136145870314523,-.30385031086279557,-.14845722077749013,-.10313261555912184],[.004730555686647375,-.025050870591785984,-.005842007282679279,.02307655688894711,-.0021831092635067884,.09320507166130654,.16891912625347902,.13474245274119315,-.019108929587973292,-.10105317234996111,.06261943633798375,.016839567168991848,.011719509323776495,-.00134875178646586,.03840722773166853,.05423056305140707,.20955349223966924,.05131056730763628,-.17892491374001546,-.15156726115951782,-.10802521892872952,.021081696304648248,.0505265958683242,.03702853564819125,.08408559663964328,.0971944530077457,.11629929727819752,.10291870790396596,-.16562571881514881,-.2921066043789103,-.05420291541114747,-.025850956821510424,.1369780722645214,-.07143272643021953,.10357501123134705,-.05826651239785307,.04189860720936701,.1230315434450864,-.1285936576462311,-.32801177977089907,-.028641152078696178,.13915118347077776,.07061244591556715,.1786319600769697,.03674048532849944,.08260422396030954,.0015218003492134188,.09369582535674857,-.11859178530895662,-.24264276329284795,-.17081519888982888,.3193726601204938,.10806272202525118,-.025075843766076897,.2890616633898619,.16912014921604904,-.005992530361836397,.11216887671301161,-.1176651180296165,-.05510479012461407,-.3507493830201991,.07552167121245068,.29101950812834954,.03292404572723242,.07392491000907583,.13285512889163054,.1103248869067967,.017465838707485977,-.008877070377960719,-.12337468108094925,-.026449945142423825,-.03257443380049248,-.17411766159108377,.27114933838313676,.1301898019063164,-.07233304955924891,-.22304228227998185,-.0049242594509487925,.062008119511538555,-.05484288082188994,-.07783669190067082,.0620964630329456,.21462918302865225,-.09288225705487943,-.2827276046512071,-.21340003804680172,-.1728612669484559,-.2332036825991265,.10997606955733633,-.0075161519634147494,-.11006988886634309,-.0034270246972780347,.0785910676375492,.1034985859689351,.2543107883765958,-.1592651072899461,-.2703360047929644,-.10635029202050295,.04893473787238945,-.021263028799828415,-.12238693572764943,.007005475481166264,-.04236502584618259,.06762340501699357,-.048466809027905976,.15102700530288016,.2213293088726995,.03973816092968011,-.08447965715835702,.05146220877494188,-7.755161048478287e-7,-.009743711957172663,-.011728655305820936,.09125484074111134,.030319653452282984,-.009868356036538815,-.004386704329111514,-.06374454349155942,.18971937116088505,.08390672246062883,.08162238154222203],[.353966373646464,.2234934652433919,.057983505942766994,-.17547583945845743,-.28193274673617186,-.03504651024167714,-.061419133419918656,.07306424533872763,.061645400882380796,.07730935757559629,.1738934451295475,.09258470374614886,-.19128325987736688,-.21873404610448355,-.15487049984698836,.14901919885041942,.20523341842652873,.08939779439350315,.029360736601431098,.18968274233971363,.06948137386920081,.22547823381719437,.09354627997783385,-.13281477240705325,-.1771612465057681,-.1334592215959362,.26005342174676893,.18501277795048918,.053589401248721524,-.047950155872760955,-.06845365886286399,.09067110082267779,.11835517359698741,.067373868734555,-.07958946496632971,.00040370973759143447,-.18012258798893063,.09018024865877883,.17515551139257118,.06670413647983608,-.32348954157841836,-.43601738248961186,-.1534376785143956,.078031085272144,.0026002087661166073,-.00683081689257263,.25009089531454276,.08659309491471537,-.2944999843548831,-.2805784904294457,-.21672085891086823,.0075953856677573595,-.05735734527500479,.0507856499257783,-.13227728339293254,.06381628014655549,-.024929518821545885,.10319690016698474,.2736185728743198,.10838211070562667,-.10088643508412568,-.3663610844763572,-.09977069874425773,.16157118049598923,.055579136554848696,-.12792118168652652,-.09778215315059746,.03895002926239646,-.011346882847028943,-.005784054092837325,.1616038060142092,.2273189551175043,.17202324199924374,.11473390762833699,-.02500974001443315,-.012532965249099831,-.1828653485672124,.005861998482054848,.08763706261945395,-.037284740577833916,-.02890657791152753,-.012640604713656682,.029752428424497962,.023715793388017523,.018978087051175017,-.06887159345950368,.06234408583728679,-.02972089599387552,-.027411765498387287,.09285676183975064,-.0170305764695348,-.04056883608692545,.028206942400903268,-.06699101433088019,.018045780660311594,.027421414987953724,.026028854880743246,-.012256884841293818,.07194600621797326,.13443066125142392,-.055826414183730286,.029494113298897784,.06766922491748559,-.09608377106190427,.02915667166871025,-.0005704450156028551,-.1012677530478366,-.02499949517149559,.11149857559031927,.0680801807269178,-.004536233801044023,-.02923546591451348,-.10839343595243112,-.03088096531015025,-.021535888254581387,.03491673509206554,-.05557277843848245,.14692935465907733,.05709297000138028,.07005377086717599,.09282952325090901],[.09030155279624164,-.03223350510005364,.0860114341421496,.05765604123897919,.08500173811685355,-.018556863703405688,.10987613215108859,.15413524848686627,.039385960963009475,.04734658874791156,.13260893050724268,.17209307394684362,.08797653562398965,.10797764580249691,.0630046346605018,-.025038437509689246,.0015666115477200454,.04229801081355139,-.010856979351061558,.03856503147764864,.09115043454113361,.07042935680799814,-.3396544044384905,-.2162661542877142,-.07979304930410006,.05248190409555156,.1173724758043013,.1235642779570921,.14985928358577055,.15132449797129932,-.02085384010086927,-.27884211234458556,-.36994374970749644,-.23348038589121675,-.35031284933769036,-.21235792854120503,-.009620330055204282,.168787422376413,.10884138052914208,.19509683780071668,-.022160352730551752,-.13795256421389535,-.3822999217754979,-.15708260361782242,.24650430788233268,.21040788017836443,.003888187609512664,-.15092402578388575,-.14972725998264072,-.2765782498853994,-.13642930996703762,-.20644056003736766,-.10322436864055039,.20311966005105042,.24971877621575894,.09878430703097159,.050021919690342045,.11216084960540927,.008212498111881836,-.15895814488393667,-.24966006782360367,-.22420253854921096,-.08186709645977171,.16097051245293995,.13084583517748466,.08977702362367761,.00955363650622601,-.045308319112909445,-.023384874480698578,.0572702815105712,.11323262469471058,.14403681369736615,.07651415697047916,.16610902479691686,.0012913967538901033,-.061224715322185846,.02333831592924522,.04630266176675936,.04650233773286035,.05308009267823177,-.022080323199307,-.016463338605887348,-.02458989511744046,.036155104538384816,.01685267226066283,.03835086922298872,-.0316232931305202,-.015008982063713011,-.002560016668288506,-.044171433583490446,.02013631082858025,.03892295204420082,.023164046669806176,.018929516041055958,.016294884187040823,-.026449976012229093,-.031755575007436365,.037952166059081735,.04783026936122837,.03908092702128371,.01265262678231073,.019181657421850795,.052408264758088366,.0677715824316517,.07108394325267388,-.03664644384012068,.13604484537303868,.010094694913875435,.020674151088393357,.050958350828004075,-.01728930686163349,-.021563726054119672,-.011484727923504814,-.07647678867464341,.002591246971674878,-.03505974264828875,.022443138066393878,-.022650773632337605,-.01342746115044742,-.08468406347695795,-.027860149727744976],[.22047100243692846,.13488498444135597,-.004531354429943388,-.027832268966114612,.003192790356583916,-.11096409714434197,-.14950903865889092,-.26496526299411616,-.004669726241513586,.18622994506205637,.4302664490904938,.083650446683214,.05711258633200342,.14220244940637913,.1016853991938502,.09773127609774497,.2161248251313766,.1544665764710919,-.13859854879935934,-.296593957844271,-.1749736404727628,.1981769863999281,.16783396706831674,.03535728114230485,-.028902513964357626,-.021290874734355772,.08722101311995752,.1695855748932285,.2927428283549552,-.06114659798081619,-.15119828846582967,-.14884448122495453,-.03918965843981135,.04540786676769229,-.07847145786098313,-.27300141965542785,-.386456981797718,-.05975952205649149,.17695994497522133,.15889943771092974,-.09004526718230733,-.0058036165937682405,-.029934384123982583,.053751431227512886,.037133238140849054,.04063469715995631,-.04801997048835674,-.2106977260916849,-.14410169096947742,-.1866709303028477,-.28265061246537715,-.00363691950510249,.2224073985185515,.03935330224080641,-.008678580780593678,-.1503774171375511,-.012859139058527952,.1563515063208134,.04229919735511681,-.2926762526373937,-.40523406706284226,.09651810449996288,.2315533468508727,.135427422332347,.01229163523628965,-.052368935922538475,-.13532074699031243,-.033103483521052836,.07332780226049335,.04465702260382873,.08615140353256832,.2738534610945499,.1626748458095355,.0615257386308546,-.019745008995468723,.10503228658291718,-.019420795585633283,-.10476767983876313,-.005174830751616261,-.06961208659767662,.013174971860819291,.0808472332726217,.06460137356274206,-.021748261542462316,-.009428880981830558,-.01628181963249114,-.03634446590498919,.03045941582072914,.056433611785583565,.11018103278275186,-.043666018041548925,-.004255561008099956,-.07312417510494831,.029156650518305273,-.0457823133053314,-.018177965266959403,-.026033702937208858,.06274239508732427,.057057268610088474,.11269084904432485,-.014280509829636322,.06609209338269165,-.026887244247685523,.015276292205476869,.007659209356699899,-.04890289344426344,-.10791896457597597,.09321014713625528,.028852996778161395,.032763059790276036,-.01149082145704293,.17616247675226981,.10570157158224326,.021852869595400226,-.0058603280864050755,.005249575575618989,.02060800110040724,.02646204855256118,-.0826182858214727,-.07935218525069834,-.012264971540938308],[.02446321233144179,-.027351907989107187,-.0232645712975229,.11579335581687163,.1254129410075328,.07165562039677403,.05907599632212859,-.02112538385802262,-.05219027448637403,-.0033401470291263557,-.00845371711306439,.08091240385900585,-.057403073303803696,-.1672123397226157,-.1580049626202198,.06375355403319963,.195605998224537,.07141394017031064,.11891901474904588,.03716110055836719,.07708690931238334,.03586257381477892,.13139726047159417,-.11150130163799671,-.040614316851042415,-.26027911447712615,-.1892555532237831,.06608252557511399,.13273683807010106,.03484859844309304,.019787968851060656,.014094611768949439,.062232334317776306,.14344093791872772,.04285605684136319,.10733309533450026,.009822385407151364,-.23833993172951007,-.21248877298655605,.08427358488784562,.008842342714184687,.03294820774049226,.07173397245537652,.006321699992033886,.19400277202336147,.014862104507331025,.10869294352091964,.19642768165098223,.010298200186124436,-.2922629400577431,-.08001915271679619,-.013688342983296166,.11310866378660053,.012927749370945735,.15630089388412413,.2579716446934899,.006868817642695951,.15135988266283087,.20516522088286016,.2237748670112354,-.3761870680703064,-.13386204003429708,-.02044096415441802,-.013775408344473918,.04057333580258529,.05518943736730181,-.12708652754184502,-.05820955144607966,-.008442005140080477,.1752271553524188,.03337012057051414,-.18112622842082776,.03421923310848149,-.11090094662237482,-.14629941730977009,-.006969888247914585,.09479625983069603,-.23704721824065272,-.15881064516551835,-.2284109786264935,-.054433255322752165,-.1747399426720595,.06764352517562967,.08591510219394204,.06346388421453882,-.02090061906722552,-.03839507219106326,.07198571261259104,-.05257094054098344,-.09266739122762524,-.13826762537196235,-.2490025436972389,.047882934688813134,.31223581965614494,.08826603319767183,-.06280990428624039,.034915131736476576,-.06970806334741436,-.001886525747319484,.09809542003362959,-.05581304445284347,-.060679329007625814,.05606187061664643,.17983405258220592,.07431375122226905,-.027044632224345715,-.00044358577837397273,-.067457849836666,-.04545314563040439,.04296890766427394,.0793811229032145,.058880837077551956,.16904284405336217,.010963007005239452,.04232145435063103,-.071452129585916,.043645640277912456,.07705838003488835,.08022355663312197,-.01756140110947707,-.04448196078210949],[.08454947106533715,.014073183835550993,-.1230740160197884,-.06106928366319017,.030869726497065195,-.09312115465442286,-.0251680854955023,.015403998680830158,-.05696565475512205,-.1083328369385506,-.16715071572866108,.12222148379971674,.013801001029832352,-.10225459810121829,.0023687253436320416,.08739415653391681,.04921800242896775,.029333823960360647,-.0008802610574126374,.11339493779706229,.07952956423592335,.06489349179476962,.07666930748413499,-.06308226484188081,.03702333889463327,-.059661049037454804,.016600380137564735,.09131425731989115,-.011485508114042087,-.09993245361952255,.0651595327623546,-.037572072667034676,.01446335550350343,.06762197858236785,.002545821510838972,.015802700036307044,-.10993602991728399,-.06941914935714077,.021295475983666365,.060596105301526815,.026423669980028666,.009900557896967158,.06538974328391674,.043327597311754604,.009551072791873144,-.07647475518702684,-.034130568923233656,-.07509892649043061,-.049786970498281125,-.004217944264050741,.20027598699372212,-.001573509922832908,.11546201651339859,-.0078019181260197,.047540267194441585,.0074073899524036285,-.003566145239787183,.05050567924482331,.07584713312149688,-.14425580282111874,-.24270846769727125,-.04607257822500753,.24352730974674286,.10854500954947886,.02131873964668131,.182084369062658,.0704651064976845,.030956011752212256,.021330978755012248,.016480979771810872,.008619823357056008,-.2974229047198671,-.41813209224239584,-.16138204950131452,.14572029672416026,.1694280555459074,.15422865108745415,.11272693480731671,.046495243397517025,-.023984750652771926,.12619529270753593,.029740806671949657,-.012887870344092549,-.11865448348338473,-.2593300591669442,-.10806327708697712,.041596362223892985,.1802209794471923,.10169601556475943,.018289098449946008,.13183884426091172,-.004465981018493832,.052209042897218866,.1723710149631174,.1489240004557414,-.11529855402495276,-.29240160552568695,-.13273718724417694,.14348887171904712,.12546368827384355,.1196988780241929,.0966060351971295,.08392920071045752,.24096145794638008,.1815913879707431,.21525720611281124,.09481713746061823,-.17303248008130043,-.1675082459920464,.05318863681832798,-.014842848833645155,-.1326281634090825,-.22760143827483528,-.2847413352046097,-.2674956904116588,-.11356293770181579,.12871811981161485,.2094039432720809,.03806786773053737,-.18388869167744798,-.09872177272560079],[-.2933214566389058,-.07667357016545112,-.030749933623699748,.12027682321697916,.12710910454233743,.05189666199799811,.13913969924673966,.11540205050551869,-.06812516368464866,-.009023820729079299,-.2910170972813963,-.061268943436541726,-.05450635008685455,.051033716593179984,.012541368369093815,-.006469324927334021,.017938091969742803,-.054229542502671674,.011335519373694994,-.025653575674649303,.04830030462684408,-.11406149945577017,-.024236484184631396,.09793951365593359,-.04313742435573863,-.07078625551451188,-.0684965936363334,.09685754375386202,-.06143218109610647,-.03806383239276817,.05707117474284797,-.035894598788348775,.015329272078617107,.05650425000529566,-.01033577367928705,.027053972547184557,-.034952760442069394,-.012868480551019405,.07634283343591436,.04732229831998288,-.0374625981610526,-.009397945142425035,-.014027283741116559,.06456217377265523,.05372171771661644,-.06759036201053721,.0139109516369285,-.016445194379612716,-.019461686721338484,.010439817092615947,.09941813341186459,-.09200305824622829,-.01811022986050546,-.06911649213921842,.0900852700931869,.054159665897273314,-.0018642885725487952,.004059758827055469,-.0859460118760888,.1086179140161275,.027099949435567414,.09914159471687442,.0006668208775746365,-.057660689819417535,.024056864968152455,.06822140018667797,.03672191197686131,-.001371709620556029,-.028205736414335034,-.04575999931494447,.053361593077059094,.05263111499428202,.009810392941796912,-.012203636403062709,-.16438519522356373,-.021001549026839584,.10556807205560682,.13827298919396377,-.007021314516612202,-.16276133871590864,-.18906392185671284,.05990413388935295,.10225970117457966,.07403976488270332,.004285185925191032,-.1845936659626026,-.06968379491636967,.14111364483842084,.12749376377877644,-.10699417534257408,-.058972794911818865,-.027184342145305414,.09229414727274587,.04273077259891042,.029013756855529385,.09155292463404226,-.07505670968340764,-.13842728606415003,.004980535912558804,.009737695191306493,-.17762638306662676,-.053055611222672334,.005121251385045832,-.03116006824631598,.018285642027540898,-.06298941054579099,.008767262260065106,.04540640740806459,-.15525094289000227,-.1042418032870643,-.3385946149081417,.0009293137713083342,.0715237990978847,.24813145448099272,.17764819914849853,.054741690878753094,.12448607192690106,.21578173215435317,.11743015273985927,.11810059765594877,-.27756282596086734],[.23860743861101838,.03722048139150523,.031909831457287416,-.14966246683358922,-.09854985223320224,-.09509134530775376,-.03080260476878982,-.04066312098825503,.017506583940867015,.028513850752452302,.0830596487648795,.0012190679580447311,-.03322879208763989,-.06314210534576002,.03554495240244422,-.02360819898883483,.022431271094160515,-.01882760371767553,.052735695833279514,.04158050289699862,.031033870999142746,-.020524724375181047,-.0743775543137551,-.05885156877786435,-.018416900291008273,-.020185360544406894,.056555515730563666,-.0026618188225642214,.052187819479918976,.12531509017121725,.019467695962588835,.09699328063194843,.05262931447147379,-.09566833700478698,-.10779966462682439,.04701333204652823,.1288079363853076,.1184985604004099,.0469385253190267,.011551507295904942,-.10251614984375894,.03481915394565334,.08999348560140583,.11883560873126586,-.026071450999984924,-.10858930623330341,-.02899296545303913,.12481231448842042,.240071552691944,.40869246369383216,.2610526030445546,.050071705679084866,-.009946724542624241,-.032287346107244264,-.03788110437515235,-.0425405367084845,.1804739272670992,.1072902350620442,.05624496816269857,-.45229392780009436,-.8393105202937271,-.32646697573387123,.14835849608015655,.1562873589444303,.14740464227965588,.04845550723214104,.08315696608407838,.09633095557582368,-.04253114222340426,.02499194757816174,-.13244791761311936,-.16920198721111196,-.4644054259116293,-.34744594651326566,-.04738004288146105,.01476231865355268,.05673622859242153,.03669477148484114,.013278997131524375,-.05424778359736634,-.01483859686236641,.16411279929712191,.2849931014187217,.3327015399151244,.0779326456118718,-.21057989235427169,-.1802826760596537,-.2879924712549247,.04902004026647146,-.03705750354431878,.005205481454092546,-.01712557992945455,-.00346994888954498,.11284391028265023,.050041748407580855,.039230018094625674,.08377861787041321,.0301096552457792,-.10733376231898197,.052780693840456264,.030825522124256793,.04821793526249081,-1217969571825489e-20,.037877834340168115,-.1130077331768389,.025972330279050104,-.040361720693582716,.06066255131600193,-.002917558867538264,.019233415533092907,-.023247268944077137,-.02426803365936525,-.04805095714874434,-.03910051253226012,.05572428616165724,.01959390543904424,.0019309926921863563,.05287495509962646,.11053404299243735,.059716361896183456,.06582938745587003],[.06703351499989466,.026572971026187026,.061902556598039754,-.05061268032779824,-.07124686056496743,-.061282119254154305,-.1324398852622981,-.07738291307031675,-.03298629915876127,.050994057269436274,.23205864835108797,-.01742647772753282,.016764191996464284,-.004526287312756019,.07267955193736919,.07214327666948436,-.025652321290280722,.011718912127102923,.015719207964445966,-.14235466059508073,-.012765609360204759,-.05581518967549461,.06222843069200659,.11098589289358554,.1277675820548782,.03905398744735568,-.010542995704417739,.05252155701041346,.04550010649059387,.004755199611933554,.040037242307058615,-.041869690382639844,-.07774364371048634,.03662275644957076,.026947327196116463,.00487126551883902,.011449791638995233,-.012157643728774703,.024207033059366057,.0832834587920158,.0798380024536907,.07361642149700239,-.0724124752971182,-.03988089295601278,.09027496435082809,-.005939762870456632,-.07968319294885341,-.055948766561327426,.16964650730513986,.4619422658594891,.274371381660658,.17637187708430974,.005575486968196396,-.04096932205649082,-.04839114608603749,.025694944612614096,.09998296774411645,.12605224667151532,.27677019407409076,-.09038245918831778,-.7236672936582023,-.665420163928323,-.09385060419247812,.12499856033014405,.09099751183736064,.01806746394072714,.02389578130798624,.11109874613217101,.03372618204276939,-.22604680738211497,-.5579844807375651,-.23540780599042138,-.09480450351325287,-.09120845911429162,.007777282093728341,.13248330185889684,.03986004692941836,-.25215810577191916,-.20250122934799764,-.17881248119439586,-.11431317224159114,.2967685677091049,.227171515318765,.2741046467956507,.04964877358081762,-.056866369619851614,-.06478477710546181,.03731336719388256,-.11706718911764522,-.05250186940095287,.047052857758273475,.024035553726984002,.13017390712450239,.05620612147178229,-.04023766931372118,.048845435975711976,-.010397341013248448,.005906105784847723,.038085874448897966,-.010126504089425892,-.011702353668809645,-.036778984080859556,.010230544538505373,.010568912857967669,-.005032312616026352,.002298236071386281,.017050551716730533,.016180147956727883,.04610299769637821,.010501996704126618,.09256731572088686,.07940094833931868,.10570431930113847,.10682942997287241,.05721856104500127,-.04967097657754896,.04269303935960564,-.03868401599168558,-.03950368263198317,-.020740434284436046,.014243631289787631],[.0628531917885396,.07071489693059246,.0043518201422265285,-.02666655406813033,.04452549232912813,.008860926522419946,-.05943194592026661,.12208756283717534,.10823813013338997,-.025642885151491657,.055452978682526785,-.030909671398170552,.004875453431961385,-.1108275207792192,-.028823536945349906,-.005046409915945169,-.002080191609223833,.06515373811494736,.004231808753945118,-.01650245863095516,.03936868171171452,.14469597694100828,.0361474181836422,-.025105477318655298,-.0029752642733928553,-.02723056752954177,-.02650028085601097,.05208373347532018,.1593909313365149,.02911085741998974,.005887954749810825,.07068365760062763,-.1050189134990479,-.012994883599022608,-.027730543376280184,-.038084041899524274,-.028850174915976398,.08889910768758223,.12716053788475778,.09387808681070002,.12445983906256813,-.06046361458863396,-.12925780819854998,.05885870825697016,.16394889767626275,.06625876498139954,.0403244530383884,-.035531467041199284,.07478276042279453,.027441833600079138,-.03454844586249447,-.1523754288892702,-.13604857549753155,.06514673541554891,-.007426474884044451,.0046040279752218305,.07835195010218919,.1297338379704709,.0956815791371677,.10648034656296729,-.471163369507132,-.7625405429183585,-.3582093555686478,-.013245699569145133,-.1330263189646133,-.10815491503392521,.012182904199392754,.014156573471716255,-.026231788982935246,-.04005988132301978,.013820645260828969,.24427073416124961,.3073995405209625,.05052759501270948,-.02309562329583871,.03293769077258174,.08587868851219474,.04110788258651937,-.0006755008402004326,.03830005820641175,-.054725024091938995,-.03259687179316071,.07823103165214763,.1687303908988761,.08515646972460937,-.07547738102066995,.07584584414979197,-.06561586880251555,.026372053076710963,-.012261443544603602,.018816373445303562,-.04602102643070516,.06367691185742902,.009164298437269125,.021381107032976132,.010298974711400581,.025836499120846023,-.003203403742612264,.09385994820963858,-.044506983815036136,-.00942753466249503,.014356944789664046,.0003773641960363172,-.047078136939779545,-.0009669706311834147,-.01014675428259769,.009951687280227148,-.0004165588952472349,-.035460419946042106,.013200958086152861,-.03459767773144218,-.04073574913457678,.051473603477795754,-.03068228734251964,.03380413458858601,.04377149062165768,.08986671687926767,.007630195440781043,.042985878682231804,.007334828402367863,.08949838726656334],[.1558856448193424,.01562994008350531,.07753118222162185,.035198943491464685,.09861500040811498,.06922036778641759,-.05101584537030045,.01353173349292082,-.16689427943715818,-.07793915572307779,.021709195750235555,.05142762271778331,-.06434889451670449,-.015227872851937468,.012758529221202047,-.012491873951225668,-.05254474415477606,-.06903989975126718,.05043125423098552,.03666359516598733,.10484513386583763,.0864155605488912,.050031783118376666,.05699360617899488,-.002548962981594405,-.0007907985441265586,.001499228924733878,-.1832893267901335,-.0010930528968453174,-.05199522065295656,.007617813274078844,.05013961775552819,.08366071886103055,-.028368100712067607,-.057670540943290494,-.024746519800128597,-.17552062616716269,-.053853554159497635,-.04949241504826227,.0280958047888709,.1665673976451451,.17516444743795742,.1107778641386053,.23647066109018683,-.019600601715928354,.0020068984825111352,-.10475575204030461,-.053073335318213274,.07898428406768707,.28336794782700825,.35165561151087343,.20795642216210236,-.00514228127184084,-.06619375962902396,-.04904726214441646,-.035658104876826635,-.05320185516400289,.0768025784616267,.29382065156517917,.27041543845259264,.32595175559668715,-.147970460039699,-.18679187035905376,-.049878575994829755,-.09967059890064993,-.04029577406911841,.02296184564424504,.11787385733947886,-.0725774376494295,.15220959346283963,-.11057067643262666,-.2750887317897437,-.22643642891650884,-.21711971918615147,-.0656735501900763,-.052040181244765185,-.09195969857115036,.052341425230670466,-.029014278335724536,-.02648664939513143,-.09917608123943031,-.11757437729038858,-.13254020998829666,-.07632698439949917,.07995522456749951,-.17744204932338672,.08037590540456921,-.07385621532757777,.08773958673979658,-.13914743753820652,.009984405808856886,-.058680483231997344,-.057028749498486214,-.07979372462974618,.0015768478264207159,-.004152634914412423,.03459730460531342,.008664587126902684,.05726941728243845,-.026265220900470704,.04809355192718936,.021793273125612952,-.11755126367641769,.0004993699577908323,-.09136988608727073,.17327200177522672,.03157285949795091,.022296920170734737,.002804071952933196,.1205545883355781,.22973360335482984,.053206330310550984,-.014610065818932663,.1166412205908703,.08275817531532122,-.08917179472851308,.0613094636224925,-.04112368177803037,.0013240930679478125,-.022404870056693074,.06651364833047835],[.10641476126921573,.09479186002008372,-.0315285745450013,-.0686627425673651,-.04558326470604901,-.044170709745188025,-.06237336850034459,-.04088203520378501,.03668066666622283,-.03189063917404211,-.088635427534217,.0724860558179567,.001791308761835142,.07161810650829248,-.1084084708991033,.05553720862803699,.02079069078849588,.05266823137740509,-.011257567794659987,-.0845031454727679,-.05535460216235832,.06947073679124802,-.028454654127522738,-.09220412520837246,-.05913864458612066,-.00886041918768854,.013755932301681914,.013007606849729902,.11916500018693715,-.005476677104839456,-.004638549694124777,.1060717732490861,.13190402522499708,.033044593081882234,-.0059853447957998185,-.06320300871293905,.042930422332914636,-.07752013732283718,.10193484761260346,-.1276802490146556,-.09156687259817076,-.057976474892979336,-.13595312824385677,-.048451573720558666,.011191570795142991,-.00688513805192606,-.09662145108891612,.08177243143586935,-.04900728572854625,.1976245378232617,.18536337530011557,.05445905362650444,-.08541554314837492,-.1103049477795886,.2678431056696512,-.04245325920849799,.07976003455399179,.15028246342565876,.27326896910753634,.2358435331414003,.02923823551667206,.14907460060498415,.31048708671669695,.40128067591951677,.38540963021580366,.27326818523111684,.15636736514996508,.14854725998180202,.13416742860268516,-.1553995297347727,-.21625457306714183,-.2818917855090248,-.25441318585728456,-.2439240989802351,-.045056214003550595,-.1358388455552396,-.360465262117296,.05410988196640397,-.27377967101430223,-.08756863130760863,-.027320638024760924,-.03926220394642365,.17562805271419396,.0038011471806441294,-.11815538049076468,-.14961832586766177,-.07103473733528481,-.11256171108967788,-.06734756701569736,.0433174953016065,-.1030173747997237,-.1512534418799959,-.04534821129294686,-.2275535515430907,.05019965344487859,-.029910369292175915,-.1088343982348304,-.0018044946393091232,-.1457567912675976,.009524471365601167,.017124703501667587,-.003512674529803056,-.058372842364167565,.0898400610688096,-.043367454110254694,.09673874674903568,.03700212707151404,.08699507184639746,.0198918856448589,.02114467720396908,-.09345703999410607,.0271127587491565,-.10194181462653785,.08387926250693878,.07507598385744273,.050127083431861647,.08865327972783277,.0205252376574786,.0861157887475191,-.005491408073156595,.14180153649129834],[-.023176335194873693,-.02454462131799809,-.03235787579333514,.06154831745087844,-.028031573107483762,-.11117017121562775,-.02855717336520522,.034625006110213255,-.07697264256777937,-.011745965892935112,-.009959765051347658,-.0542835516019904,.04796909671149692,-.058234554069283725,.03220334560199091,.03182887188613838,-.00859087753770603,-.018539673712725524,.0594933266712222,.03266716766061176,.011822214610879928,.011903166151583794,-.09130294980595315,.010420910286473448,.047573929466955864,-.010085595935941855,-.08213100141148173,-.035237661500281195,-.00953659972525775,-.002108262261587307,-.011204831036011803,-.10622317570891325,.008867306909228295,.08068204658678166,-.09053303518527786,.00920033185400368,.04757968064365228,-.00347364060163316,-.2609501387739116,-.1992357096012872,.12707903816980357,.07681711491674911,.008946773095926924,-.017430379757375963,.27183434461804845,.29540869945884163,.24001157736704778,.3283466672975648,.3045311934812409,.1573830891516765,.27144447211271683,.27186726673366013,.31737875140339933,.17968138137001657,.34963615466399944,.17947799656684207,-.19852203981785516,-.23131890333905614,-.30348558107287027,-.018142171891952316,.3280178945510914,.10087717573413153,-.2737313642446935,-.3440544835785095,-.10799042948918298,-.028605058848439946,-.19185111341784114,-.027745548740637616,-.010639473223188992,-.06235838944179839,-.22873300656916182,-.17306684979686754,-.10579424926972862,-.1259471270541468,.005213374464294457,-.033020737140507975,-.0719287337159639,-.0840423740133801,.03728925720093966,-.14901085254024224,-.05187797466416461,-.06244982997776256,-.14709231061360803,.018448830420891835,.00395213381123892,-.07925706662867615,-.06834198956830408,-.12331516121995928,-.09956349294129528,-.12282998155312592,-.0063813760831064326,.1523734333688188,.05622547857018989,-.004510692004970673,-.05758843640393062,.09840261205418808,.02709244060964458,-.005126527871872316,-.1788182638868932,.012716901548097112,.014254282884224326,.10921274021001333,.12698286341450832,-.04126909131947766,.08552049256409998,.04384704473182563,.024665056914998047,.12247197871922337,.1343982336574217,.05619986570933662,-.07048736575183942,.05011496173948175,-.0003055425117918717,-.002306678299941481,.054045599348802625,-.05888984896473381,.056481833161273906,-.07470125703659997,.05430658304758444,-.00244846915271469,-.12795957386439072],[-.008771942383881112,-.08790268555612359,-.0550523469305907,-.05389471931288859,-.021765025216602493,-.03249620127490992,-.05393652454524279,-.05960180358333237,.018682206945497708,-.02404185692664896,.18080120923175,.013387152203562694,-.019460024812665497,.08584050842604711,-.04295988833316678,.05613997974719091,-.007482261747828851,.07263795223017669,-.0457731161083395,-.007907437407252686,-.03961767159491197,.06200946857700187,.06967381700346785,-.0017890764951173505,-.017922949357011164,-.017328735082365487,.10429286568139526,-.07533656359298069,-.019897609787032887,.0664971323777355,-.041929713620319324,-.017542325191820356,-.04937505049725365,.04705546281032482,-.11658200494772165,-.050367703232498756,-.08774512274558624,.10296881777328262,.0010435280990956572,-.11190238889003506,-.058552489144718556,-.09360192242001669,-.058917359043089,.124279868888969,.2042198490820221,-.08692730923047455,-.15846153558915144,-.0442311502944039,.14028149426418587,.20301345397769968,.2099677015675084,.07836837351704316,.023616204532563738,.046474099815913654,-.1091873317264778,.34227918211166714,.40922200549215987,.32977893025607696,.35276397881502514,.17347731354344686,.04965405597947745,.046852605375659315,.18540273672730367,.2348705535220503,.07406602745660301,.09089532801383862,-.3563708193631316,-.1789009821684034,.06702378169407544,-.1450909663576207,-.2414525478367974,-.3135214310957382,-.2085394028841733,-.1694233082437144,-.05072999227745726,.07083911431869358,.11262033996513801,-.05565357077731857,-.18252807611047162,-.09511103368535778,-.20810789102436822,-.0852157922020671,-.0378083091325826,.20962708773356045,-.08751882809284073,-.008327094922276693,-.18306482243805655,.012319186741073546,-.16489228124607314,.07423361221491917,-.11013637802070915,.00018776862044833642,.0033474012470800438,.10043781830311685,-.2400961884572265,-.05521351245265479,-.09880639995530324,-.014981735119631731,-.1254106702918007,-.03586303805654162,.04621371745994664,-.11767772671757684,.07569695823851941,.25102280647850195,-.1506185088468181,.10273881268388778,-.14457410135153065,-.008431593022887443,.07382193598490527,.034203057734345316,.1299769597309955,.06494650143030745,.1003816513120292,-.04268279073187238,.034385732695719776,.1329989256859449,.08468051325324809,.16750112561515856,-.14488980909132015,.09722609048473656,-.17221966876845224],[-.032220950917092345,.008191729916867813,-.08028184906386833,-.08138138190483107,-.06384203481562005,-.015615271736948433,.10708665173062173,.0806513082282087,.05434529779137898,.027073639464279806,.16812503709317206,.1341526646829076,.0386310434951056,-.005550736776574361,.04233455589842684,-.028373758652471104,.003959858465034369,-.06359711746689202,.056587509472392425,-.027554813118545185,-.0017875113664636427,.004102569849982515,.09271899868558242,.008658513044341907,.10683629867740597,-.0741957582155177,-.06305739990406109,-.0215234426268935,.009234132026667993,-.1461035675941248,.014750802208444519,-.005216493259361257,.0032641614965498306,.09780683422134498,.12926590150531192,.06269754981180288,.2747542117642643,.09244606560871818,-.12768877877435683,-.14805761147879182,-.019825200460864806,-.008631459056792135,.01448064785908898,-.0089873586037066,.10470942538393144,-.11054476667297426,.007503550537864213,.060005840448526,.317102991916461,.323244401767086,.10720495398460449,-.058101525474285445,-.031760977729127976,-.1142935909746058,-.03155090370904701,.0017246932881514604,-.032140984544803027,-.01313116025549961,-.14824372987991144,-.10766487248252816,.10593875445284681,.4002122749634542,.19725349113949914,.08374752314487478,-.030750695721978777,-.028330043664018603,-.09987385017922976,-.2603924703966779,-.02597866375704655,-.07431355578907298,-.14253780748212694,-.27783688778439536,-.10552358523835495,-.011202718784634674,.12855854774382316,-.0003920736373502591,.0716967171985385,-.06071544811269014,.07955483422274615,-.04444953812945317,-.03623930280233029,-.05495011342047597,-.07587822560403587,-.13219044743679167,-.11463986228711373,-.014321816516995132,.05463305449331487,-.0021865578330653515,.04759921466679906,.07159056388055896,-.06180693135761069,-.09870327963970563,-.17720783806969967,-.05044458308894424,-.0881580915004552,.17305912499532888,-.18012041201202472,-.13789844469843426,.06965483931368788,.1066025347744837,.04299490598990669,.1324687310724105,.10691785253509371,.06392523123749476,.08494942418234978,-.14824978071410777,-.17981670747688494,.07988721651901637,.009987884496301742,.0916588094992,.003947580853707729,-.022988366514234783,-.025003961189405333,.022312743486262065,.03210612448956117,.006097804502443571,-.00910978092642118,.13841562948388741,.05721814889507093,.03424942423144969,.1416589548265959],[.07740308039110118,.002790278913536351,.08584865990894512,.08162158018334643,.044686861117663595,-.01072051215054455,.000766928295162006,.10466386076912294,-.015221602350874539,.0009621466382152971,.10250217221999841,.1010312655349861,-.028640249406738497,-.050144288137646154,.08802950942107401,-.03918429001904877,.02794217853450119,-.10921729182270348,-.0915511218863667,.038578400934963716,-.04708943707002815,.008224855691662966,-.01669805211816973,.14190580766416327,.023164625852484036,.07260330385813556,.11866577336553505,.014093258001003195,.004763860840952233,-.012686837885249339,-.036660213196534036,-.07741676763094042,.04926838576821911,-.044394153830466104,-.17871803212100118,.028784448095554194,-.0103622383273788,.15180646423700633,.21859707883104096,.11630023909217539,-.09258036855282813,-.019700955892187733,-.04586065984796202,.02999664377636277,.022719309002418732,.025101662257832447,-.08565056428112373,-.12410629154164783,-.18246293106608358,.0919660088126218,.08708100156944652,.10736116620783882,.028110496703318152,.11507649255715754,.038288111619517784,-.0748575383489467,.0003646230535695183,-.07572809524302741,-.2581164616498122,-.606915157176296,-.5773636654765935,-.1230196932349347,.10818482658632861,.016912673562240535,.13529133328209006,.09004414536044865,-.017373878996459924,.016143047062772586,.007470552573112604,.038153120918174875,.13808042440556922,.23128272372791026,.06221216678294059,-.0007810593524213635,-.008835248496889034,.01594835862972488,-.0005022452937268676,.1123236473438533,.01096161537525979,-.06396196854028567,.042697690474159465,.07569768323400101,.1879710839073851,-.03427071856083034,-.07601029239183162,.04071149796250454,.003927652671956227,-.008113852698322141,-.015998115624021494,-.06035618630647174,.025951586831793848,.042163344429453686,.08242572970835828,.14260227985381085,-.042848628451185186,-.06334146945950032,.009286345867861052,.0298638146904988,.006082389039917674,.059612446109644765,.03008202391345085,-.027239380162663276,-.007365870352607056,-.015225093891979673,.044419085486733505,-.00536911602886922,.022425434671702167,-.0082635729409229,-.04083689377986616,-.015422443671092656,.061348129149263644,-.052846129433506105,.0943655962480354,.014525718078802685,.0037072160051032756,.044122648659048434,.04579492559717612,-.030930673355086962,.017194230501010505,-.019462858484744144,.001243582445288452],[.08411366503492146,-.025621034960445016,-.023221811619521998,.05300805218847138,.1722413378552653,.012469440442448243,.07512154062252505,.04076344824912387,.09810078361457866,.041479003131258046,.126359775176814,.07029844401928054,-.05000724672049672,-.005484087070299931,.03040544684160737,-.0897546644621845,-.2154076640230436,.01723010217169227,-.1355698820582185,.09561822628692274,-.11059773025824354,.10124548152459008,-.07649806064651052,-.00028541240089785536,-.026245513796004843,-.019479552802034616,-.3977802512394253,-.06214359190225917,-.02434109216991953,-.012826724183031463,-.014661926972310418,-.11254901345954736,.16096037573300526,-.11227786126177444,-.06853253299267562,-.16356466589407062,-.19653804062868085,.031038393193058594,.13193348705643318,-.0834229630415911,-.04071568578732557,.013809808214387778,.03966584754536576,.009988774332939876,-.047952715523986306,.0006100311386056656,.10343067208630369,.24890751819447962,.3578226490040739,-.2093341264862744,-.03992638234909847,.19419655464006366,.03218836966881375,-.04050363309640448,-.00323484767842086,.17053386793770461,.35047600865548467,.24645797779268205,-.12388716569831495,.017230415937178875,-.20274807116351118,.13927324407566935,-.014868221439288953,-.11606370921716812,.0504068986996378,.052284706862743335,.2179885999524844,-.056957003125337274,-.20647158156376177,-.04577872257609619,-.174715212494163,.05273980569373052,.0991336755502916,.09436406062086941,-.06020237277551874,-.043715737000694935,.0563702907847852,-.008589032917977996,-.09605700522203697,.01976742575379628,.008912837788508238,-.043514983487809494,.07143401706926975,.03636602312918305,.013983885718858599,.07384754249140454,.0640699028180339,-.1243079073528052,-.07747339495112496,-.0030770402418191234,.01241157384951519,-.07723339546489952,.05221329816616044,.09848090118791958,-.044983495910957086,.009317544959183868,-.014435731895740433,-.01857466675654701,-.01664212446049934,-.20214085319841704,.0230001056663649,-.056257873953405604,-.01762107897153789,.019130131746270068,.020007586924534165,.03483339161645628,-.06663505896832214,.019122648234895845,.10427685298428223,.02651078540520231,.16286923233388592,.02793257220207912,.049606524388094764,.0500494914298579,.1019360210121309,-.025880325806131227,.05853446564641469,-.06118051935875887,.17253450900113493,-.13459923259367187,-.09040759731301262],[-.027550816137581063,.2055673522355854,.08213180283129054,-.04257032756369259,.01586831912703765,.009369833376479536,-.11462856052306328,.044711856850138204,-.15995802392503708,.11865990971326171,.0673921974401607,-.1386272184611748,-.24991581191756615,-.12741658368348494,-.04894224580807628,-.10908521327615617,-.015851721850914276,.030010677013469683,-.15749365231887502,-.053420943220933284,-.025662830013189836,-.01109292562794384,.058388641152087056,.08824456178100334,-.05372811700478099,-.068366341306591,.002650845805140495,.09781787269745365,.01689586977779997,.029099746903975626,.15597074244969705,-.017162667301283602,-.04785786758606349,-.06664135729164668,-.04104966548941642,-.02934190873579519,.18068461986324288,.23841021509849827,.10720477806483233,.0032504209495289177,-.16875590654789738,-.055651624441500805,.03786429305939924,.14496557145479333,.301650389285414,.21780633210507225,.2478067430020475,.2061143822397045,-.03050504538481298,-.22354863754123386,-.22057742020428542,.02616077723100449,-.014489792871384327,-.0013992789264812011,-.032142807111526076,.06985840449587952,.12952310052385177,.06213402466583354,-.09585019736978478,-.1500574228079729,-.04869042238772166,.027625676945502317,.08775153927655127,.05938206863631171,-.1554768555359688,-.008993040636737754,-.2169595372240255,-.20894528496184284,-.17492068880682238,-.10306183600146183,-.08325953472860717,.10865204818788957,.060744670090415315,.050196375528596446,.05934717394154612,.08055016301128984,.0960411834034681,-.1792150255632714,-.08635951576168496,-.1986163302647143,-.08530559536559432,.07340445346870429,-.0006091553528993349,.017864996966518068,.015229839479410548,-.028738700704038833,-.030631095956117516,.08354654237468648,-.015199467885082363,.007919656876690773,.10542259168905797,.04587959073812549,-.01617681752477279,-.0644040297730474,.05644952354136398,-.0011675857621973734,.001996187711647404,.06741670149782594,-.006887296475045754,.03485587005632951,.017610685547011118,-.06497452993906422,.07213511303965964,-.038534030205095104,-.014020364161441437,.0002936023904013124,.12282296947714948,-.08452607883924697,.07273352008210596,-.02619933777716406,.2622823203473173,.05646693764295346,.026818371415154252,.09399186859592003,.035828326553373244,.18170527988919383,-.015152288577127748,-.017615532167961634,-.003186157887469676,-.021179342150732736,-.1521371584686061],[-.1377452343640997,.038746368626390894,-.0007085704465362858,.049355010027965204,-.08827922532366628,.3384991916323753,-.06415478287260948,.013423151043787954,-.019629041697081684,-.07451448337699605,-.09035578126457038,.09694121671352816,-.11910664582618065,-.15100751467224666,-.013947233410068524,-.2874783493286283,-.37903665180179325,-.2028061966058827,-.1130350051672437,.025054091741846772,-.08101873700422167,.09255212771864864,.0008224646261129828,.24245844724477272,.12843614602564724,.13562020313059403,.08959454097829489,.23076896835282149,.17282137454049196,.15120139028220045,.2108003848913195,.13274188314172597,-.11296580760432726,-.23425804061193015,-.15388856567280207,.047550247591945885,.13675765224748537,.1497088750064109,-.014598687955070258,.02452413980077512,.15008479234563366,.021969575372334967,-.0172093144411839,-.1256658935629884,.05746214979358381,-.12422822668708502,.027717976800794235,.07647002845638551,.15084174315157894,.16363419431275902,.10314072255216514,.09860444551135499,-.07788908621899912,-.1661031133394909,-.01552372934979565,.033968447572520016,-.006428773323451792,-.07778412369454052,-.13138597183951684,-.1649253758470458,-.1370771806362736,-.24996598417430377,-.09938731567148065,-.04181627247096907,.06339279526203859,.08465679200332674,.07359611177518106,.009674275157159157,-.05618448490225525,-.09782611167515598,-.20167456268371736,-.035743089697776065,-.05385375421400665,-.09408860273308252,-.11120588730571836,-.03767166625239412,.031541190146133206,.09272555579809894,-.02405726855688603,.006010846171522255,.026069243416314662,.05295237846002254,-.000745387114251081,-.03941542133520414,.00012581754959352376,-.07480582090826393,.010523867284072515,.06240607752864875,.015813904262298846,-.06483823993809258,.031265967377395135,.027507834966997668,.00012699672107176554,.05079690966459828,.07896987791599193,.09831750590543942,.054192666869303546,-.013030640855035372,.04968331523000394,.08350897163216592,.011784477594072869,.0918716806710779,-.0066226790079174785,-.04795612370392129,-.017090317814363196,-.07874097948062875,-.04673070524082774,.01851394723831396,.07149989754335787,.06473669024793555,-.032650670337155206,.06136379490065435,-.039888121585693735,.06940981414444819,.07797729781948878,.06613371983371227,.05598211257429133,.072595488855595,-.05384452691395356,.09608563004350644,-.028805713693717965],[.044235218750753806,.03452490583678916,-.1304293688025541,-.03539195098364023,.017969397644679183,.03517803650463722,-.01078844355414521,-.0016502053765038854,.03915036425843466,.21472717137309544,-.0947995796191501,-.028715342944390494,.05486033756860608,-.03932379550394833,-.07194086090689658,-.11930894160210025,.007811767433128516,-.13496527011108017,-.22468220163734792,-.04196371662613939,-.1884031750999897,-.12848466572254685,.03276214663384305,-.002205615246800914,.10277613826454918,.0012177391079194258,.0777628448021851,.014832783378042141,.2549270879104647,-.14122761490223984,-.02812892511916594,-.09059342329139256,.07874630303010743,-.013334851815846885,-.01309841797683857,-.08599743156779172,.0011500587455686162,-.09629195757061756,.16218222843705965,-.026280879180661507,.4059162672347385,.2242570275495756,.08891480121909084,.08738093668566946,.04323574227105897,.10434670998406992,-.02968326553011473,-.096106796162175,-.16572721595924714,-.17366678905777666,-.030961339846240048,.05950555408116688,.049325908092511556,.12756582867533076,.23979790342729132,.12399889130520506,-.27711805486247987,.10320304516755278,.07136692347312475,.06613898533574539,-.017570740572059176,-.2184882103530213,-.09632573857873612,-.013236997628355902,.14099804783148318,.04865647605438084,.030847391971354002,.12062557790469333,.03194037828951044,.012663844222798573,.05303477801402277,.023358934432241123,.07360073866342859,-.10514949440993024,-.16524216303765682,-.2566907598845994,-.2689659488714767,.01856594608215354,.09358951276616725,.028127974684171123,.018696901200308494,-.015875163077901967,-.007937909761738419,.030609616137362825,-.015794143119850355,-.09523631283737082,-.02908738730552715,-.13651567962256067,-.07368305845021562,.05490162321896337,-.060990796740251554,.09317039578109665,-.002387120569026433,-.02619076519977723,-.04798880819540316,.01989179253677983,.05363228445470823,.02199641543685798,-.05848482961974336,-.008297166618256895,.08592298257318774,.007834953787222033,.007497274721557912,.033528171976771326,.034258795986853316,.040069268495681584,.01664217005217485,.033376554888908505,.009458989740060878,.05206455171706346,-.08492944446978946,-.09186129377429487,-.07233529310987354,.017511044864076567,.08382279108366908,.029829413251507158,.02267644856017263,.09282351274921564,.027104627928702215,.04993312794348181,.25204397185842226],[.04501707059571113,.0498642789949671,.08232096915601292,.11789478363532714,.11183772343297438,-.1253322045343096,.0730110893562333,.0770037215770574,-.03717900545496422,.11530429785134244,.05730001513322304,.0978487816702014,-.03060524384717013,-.006989918349842278,-.04381468916114001,-.041086107026221175,-.10156550268991253,-.03098425744620953,.06224227084282018,-.08565990211020953,-.031199205006548048,.09466362301479106,.1869636075210107,-.1661308799155149,-.009008549501699978,-.126066461725453,.06174431253445521,-.10058744884305808,-.3255438697933249,-.09397283393441772,-.08409967501745218,-.19412666055289363,-.0737528830414833,.09320666895036434,.053698626158480575,-.03050997649543366,.03549926506931229,-.08821841540993962,.14081935255976538,-.015418397657317465,-.14008063599426096,-.02141577110665445,.0730178872426362,-.1772662023908141,.04967098759114277,.034513230883957385,.10331367544756308,-.039224198145387315,.03200138764978423,-.3170993196754844,.3639474141807881,.15239466974253513,.12006928728376079,.012632970433185474,.13528479946899857,-.04326335129410329,-.04198638907336186,.06983905723759978,.001010584034370668,-.001177493293526035,-.011794825581052382,-.14348506855517926,.022137252763930207,-.039687582510860714,.2621815908699157,.19436953435957777,.11018262120789611,.02279144487223891,-.09737455097152174,-.016625841483821784,.159809384074366,.07956114879698994,-.07545184277034313,-.02802352727821577,-.12778377344107292,-.07060095297691774,.07585474550259086,-.06110411458322956,-.03425506534845529,.047000517227076224,.0859568504259988,.04282729750891924,.03582441766288798,-.006123191145355145,-.038509250299150546,.052491286674368046,-.012429025518286289,.02780241004668932,-.045633571810510726,.05732991916540041,-.074157742801149,.0012829945233095302,.04703190758387131,.024833428093670173,.037204577451850254,-.028766340858447596,.04836022604994912,-.0532700977375509,-.1225368009934108,.037120069768975875,-.08928400790752453,.06495529707871285,.07753906440902517,-.027111775203657915,.09566272146318118,-.024483731157729047,-.03621165014592378,-.09391579872500003,-.017320414345298095,-.10222122825099972,-.08839882935836986,.018021145195601808,.014346493014463765,-.0045931108148111605,-.04133099909611131,.03707125175822254,.03210908865075661,.1327316051894474,.0751095411672087,.02562779748474479,.14212920960470612],[.15729146952739428,-.052978575964526695,-.002625845437807875,.07899544804862188,.08204405612651289,-.13536453065722548,-.013649345776134983,-.013140590068438054,.01151285607422449,.05159617743029746,.0255502204738193,-.039487220487149505,-.03465828805821605,.07249054445839179,-.11567294550509376,.06786380161748312,.06865077339493647,.07398589069835013,-.16153712899081113,.040446464260465734,.07146643825094859,-.11469018047321458,.054050503923005255,-.04104301219121387,.14996547269454152,-.25422330965645823,.1969719351437533,.11290777964377821,-.020530641521012943,.12889998621276044,-.10368261923120013,.09609190196541599,.15324884079071813,.051489779311227196,.03355956220646843,-.20829917204727766,.022893590362530233,-.2624960431410919,.01920855427735553,.23588413973673644,.012602139087501865,.20972078789304485,.09256853638097748,.10590976891238137,.07421375809945621,.02827848613104754,-.034766214821145405,.025387015471766056,-.21114625235885243,-.18142723897056606,-.036903154611340375,.07454224421279146,-.0739427173333076,-.12923367863313379,-.10286993284460598,-.0020478562727464372,.0070327870476685345,.04165877026376459,-.030913879256598803,.20126029986072963,-.361494069722841,-.5918877032494142,-.34765190314312044,-.29917756970453346,-.04319546567921677,-.30777208287521557,-.05457087346476583,.03567745314425927,.03377903501088328,-.11152465910750621,.11790825287438664,.5074240277961515,.23855694673921737,.10488558912344918,.07481493616449232,-.010757602002390856,.09842217441789791,.06801151298652418,.04008106731763751,-.17815840391411603,.015218382958913604,-.04304478707274706,.06947878597880759,.2624834865643778,.1306172564649099,.15898046016824569,.09891308507712536,.16690881596534685,-.04545578838937801,-.051217783957418925,.08865176474629312,-.024238261127295962,-.12061118524458514,-.13932561033045077,-.0984478243981586,.08410412844353249,.03609504694316075,.06467717927085943,.019556502245895897,.05458483748926474,.011804485067672219,.04962752013073167,.03158019227826489,-.0421276060749001,-.03724684536620476,-.0009022803555269465,.05127558828330446,.017591411946701482,.020608297506701782,.12021482673005342,.03902195231667063,.021711754771879227,.04717219947996956,.11457521712485876,.06552926094190885,.057133065165575314,-.06414584331371753,-.07915357008973892,-.0842035889087247,-.13317811959911652,-.09719310872141479],[.016239054180390664,.003966272793749406,-.004554660848846634,.013554085633964541,.04287384927044155,-.15274614529097097,-.027274870950224753,.009662815968977459,.00030503272333276543,.03221825484285479,-.036021236700139334,-.042600552093793376,-.041216087356306746,.07022527918241118,.08825146379981735,-.11943869442811812,.01600941743312269,-.02589229623832287,.043718898111848606,.046349743840285895,-.045519881760365574,.05780246328619649,.03299849377053235,-.07478902796227593,.0856125736138434,-.08296703677200613,.12226353323600213,.05699564798388623,.22311371083336579,-.1289229263989481,.02871159759083955,-.08229481100611669,.07467088143614656,.024025896326078336,.07065603601313146,.052863436123422466,.13162507032318282,.08385001225280878,.019373316885252463,.06860118604540767,.1604542662376101,.14512299636928327,.09097198717670087,-.11720878638068641,-.10960101740165,-.2298993299842687,-.04037549365049509,-.20170065712267327,.2103219398545147,.02843676680847962,.06486878856813136,-.18348723541305237,-.17888322479271676,-.24993108343054868,-.1218218035048543,-.032694964791572315,-.0037869041619365135,-.2488566096487292,-.15602019937684342,-.42475936671170156,-.42360041816934524,-.3608016539425717,-.18904408350207366,-.05662803401652919,.0019947298303030075,.009984728877567475,.1075269031323472,.21965496214815466,.18511412087840118,.19939690136264532,.2370619476665271,.1585535076891107,.23755501089495354,.24026771887297607,.14806350471741694,.22743537801775957,.1250723276134384,-.12207706841814078,.04122540755875127,.12974091028573875,.1387734322212655,.09281907427262334,.0414569330167312,.1281097174245397,.08628227803965438,.04648215221462616,.03598526522115604,-.14999835453581617,-.0619947530635693,-.12774624354082473,-.05546853075465755,-.07205565632683267,-.031200201377666728,-.02169770596970337,-.02031960579447556,-.011808386343022212,-.10716560570031625,-.08234244918512784,-.019256109946120217,.06667881100363682,-.04153672357168933,-.04068751960092851,.04472457352709275,-.0683052168964735,.035585363893159354,.026945608802347733,-.011423097664885327,.061366414602964534,-.049741414287749496,.054484604133461456,.1424743669625888,.03770989015507005,.014814583813689983,-.12196638284522934,-.04085297097341757,-.004807269841994491,-.0938444533454384,-.11066938503473484,-.01308544267539942,.02000366128381234,.11572349318879958],[.02861973429703818,.054226325319119265,.01767875753214382,-.054622115279891297,.0006816615854381564,-.061011028044801754,.025449624542795035,.03924876355135573,-.017614050568012716,.08668906895517887,.129015781827036,-.059155840152992877,-.03365828707580499,-.11303253492598647,-.009440740328775697,.0383001060010507,-.024382057855670103,.13094817594507807,-.17637051833702583,-.04253643417939962,.024839476402364308,.025341112503526046,.0733792409158455,.1249039423629602,.0523345284024839,.01959442719741869,.014409551889643532,.06939173936687891,.10114636722821412,-.017834270494535995,-.005253874895870772,-.04944962911154373,-.018515125726140946,.02732694249374093,.09763594846358073,.13398387575020193,.028128579416720284,.10345916561982525,.14559912798485353,-.062225750838370064,-.04320538531304752,-.13615012492801842,.00945958022416611,.07764329328098614,-.01883839881610818,.040124806139584204,.04608276260496105,.11596384414343883,.041671199210061065,-.03525512383283549,-.24210069103686924,.1341304895480569,-.12174034267618312,-.002494033774044037,.019159096554587522,-.2859624847968232,-.06448621966076783,-.3159404613081046,-.3210369275565501,-.5270362132034808,-.523706814301239,-.2219710388945374,.07817795320959023,.03715277663413105,.0794293501758099,.05471087361571522,-.030973473678087608,-.1710933884130195,.09607172590451177,.02326460744017457,.18229765892428224,.5084153793392225,.3632713737575951,-.17442768533982334,-.07594077455705245,.08458269142045552,-.08264079354279294,.2407877830671493,.12327508787645428,30311214018877153e-21,.20734217619087927,.13348805342234585,.1420447853746671,-.01668300914372979,.0026274236589628186,-.05059978347067792,-.09350164253401919,.049346638059468484,.027169521962694204,.008806677564154888,.29974077633101837,-.017370887640425853,.06047261147506215,-.08327458013745889,-.04873436025865573,-.12258982430184573,.07453840474434334,.0016868192049145497,-.04667837568798733,.10225565600123501,.09641338261476909,-.08516767534491451,.011074699633376178,-.058526124313595766,-.03274311396661824,-.1722075038150731,.1062569945912887,.045122620395145224,.06315689942429545,-.023657194122683647,-.08618942142993294,-.09715567921688867,-.1177859601186664,-.0018160616946504698,-.01837453110222613,-.022154736774935388,.06907254318267533,.06184270109132414,.05741719116358045,.030372244451354793,.08978777546456254],[-.001637558807711853,-.01523399155873769,.033084196663500154,.010429688997138621,.02638730725610114,-.05549304953240504,-.08986798608277412,.03131836942976357,-.06021207204170201,.06034508162027746,.033637859079548624,.07490767444257655,.06734422144223931,.04540898533245702,-.016588163375265065,.11808910368697124,.10674593565355751,.014356560764954368,-.00029905420194112353,.03248992573614229,-.0796910048701078,.0021152438820417965,.12842998293419816,.027685506112132927,.051037174605280025,.009502773414105138,-.08857714395595993,.07241521761687471,.1875858733675072,-.046260082649078216,.03283445740031349,.00027333660832160045,-.005625872973384093,.05133522775792196,-.028997953896369527,.010803615722912593,.03927886287402181,.05993481823719196,-.036672818526105114,.0020455805172246433,.08420494892293047,.07872249743197642,.07292782932833436,.0029102454584164217,-.014711323072181468,.06197894952171591,-.005861364004429596,-.006509600464702996,.15462308680710604,.10998731441673203,.05511993976474949,.05724647785751881,.08467350723014512,.04541561483198189,-.027011213416260203,-.41690504010919505,-.2381619432525145,-.26802740977048395,-.4297396023947019,-.4712893669692756,-.4753811771185376,-.23332878411143415,-.02866052018803172,-.046785685844234697,-.01391066188194462,.06355734031900377,.20816618228755654,.1268039069069368,.19584967158175218,.24120710644978025,.34247879950952587,.22000223848712153,.03699358515317182,-.24940743884977212,-.12911855055552002,.006760778385861643,-.016380373357314598,.023975770224144183,.1728134079555655,.06774703585492528,.09934809469516141,.03539753804030679,-.03463166182179102,.1100865505604692,.005313191434559647,-.1852260149514699,-.015871161665418073,.008623043744521788,.03892375012569235,-.014894463369033356,-.015235500642311592,.0015905054090605206,-.02594208321337546,-.048032891124765054,.056968059211618904,-.005355047118697581,.0700413676970709,-.01990406337666332,.10013072647581948,-.030663141377206063,.01493648218721405,-.05337707766838567,-.04619114379822308,-.04973710460144862,-.03203494019210336,-.026289206287861282,-.00738021535276584,-.008577652107519318,-.067451013841573,.03696496979064143,.012119189183510626,-.01273226528095213,-.014067660545222016,.011208506370721377,-.003419775502049388,.12161984708872418,-.09096703322865128,.06206136765809177,-.023761385872915743,.11195006309284704,.10944483983918517],[-.0614292177676861,-.024854862147621323,.03753390059305069,.05305521847540143,-.029090391144677347,-.07660753258923039,-.056250478754706124,.03851333502343017,.009411112285780607,.02762775859881378,-.04048433394446757,.06257228413844763,.018534104488487108,.09995392307538145,-.011584012590548413,-.02705235445809122,-.005996134596044159,-.021253583302654644,-.03155182648452626,.1384156406272948,.004465498896228312,.07915857594998048,.09330712693847118,.021057360335951708,-.020072455903489106,.007834926199344353,.10646163879333373,.11394158834484362,.09562400708473465,-.0003797337300617959,-.01056664270801766,-.02122943319759627,.11951412079200276,.15658745914488753,.051156677361355526,-.06149908185714912,.08007784197043882,-.06031278155582331,.10862415451751303,.09083345714134636,.03774980229812818,.12669250756084155,.019289318800248804,.11166309161116607,-.1161166273753233,-.03827059678071661,-.013961859511050188,.05745637300788146,.035911303378527666,.1168536631662633,.020811499706270893,.04227481917429324,-.11786932199756393,-.20631689099465444,-.10339540502604118,-.03237104484552287,-.14327246772273436,-.25192334370553027,-.43351265016373064,-.322530105334642,-.39759972190268117,-.39288382422516366,-.39114382180517604,-.2466951151334749,-.08792059370029912,-.08861343277350736,-.15980594976718124,.187856441602355,.19150833663803338,.46363761289278804,.15919333829593552,.19352833505902622,.23198389189372812,.41944067807959584,.29116622643028034,.13265224163991357,-.04128087529606902,.024460830389148203,-.0586492458711208,-.0484310682254976,.07445852470398351,.03804830411581207,-.040110091881074464,.05986990292482574,.052511568070781466,-.009056215226947145,.023537459561038466,-.06819758275382648,-.05868207848921336,-.03143761270972536,.05728960562093009,.09631916110523682,-.010631903539778567,-.0724228306321863,.026755462358263725,.01866551389504969,-.03508272943464433,.0033658937666455023,-.025999751547288244,.05153059400512512,-.09587763934474401,-.07290350322473715,-.067948463067868,.00432611757225175,-.004011781154024653,-.005486415003636537,-.007040607698489056,-.023664491880765207,-.02134891455269128,-.05576494503770434,.07620346105654131,.057794773037288215,.004991409560975428,-.014553984524648442,-.029743957901801635,-.05716512536765295,-.0010086458792998715,-.03536175147104669,-.004753083205477092,-.011301320960084231,.11501077964365991],[.15173553770142628,-.014179130345110133,.016877350096463503,-.07720465698340188,.07810802077917843,-.13112570903713622,.002753461595534773,.051910634906651945,.02894784682477934,.05020881252165019,-.004579484116651808,-.1068451534743251,.011155331270464766,.06518611188126323,-.13027319256310377,-.08014430895919698,.10735864824242532,.04887972464555236,.015758793271349616,.12191464251681002,.09698466873189877,-.008083344199497508,.02070520927773202,-.0819378070896832,.004646536698726236,.05614793344286019,.16628267002053893,.04618252947477354,.07765799492206311,-.019960907459527263,-.09653834364365096,.07946604612246112,.25805196379884,.007762217116777187,.06951957517852637,.009523819637301936,.2615169383792941,.08678835064866287,-.03740226079816272,.06948574061480542,.07169472236220033,.13258033500501015,-.02145849038805818,.05604635052020862,-.00039374783734824614,.03222219258902316,.18458145122623904,-.0425397829560613,-.012963640462772971,.170102640969749,-.023561860478587326,.05115294828510181,-.1316626386662188,.02066528156095445,-.24022517587189773,.038647270662851535,-.025858147741203062,-.08145590938506822,-.11686693255496608,.04440129268023965,-.3573050560712243,-.6458048862282926,-.4058796460765634,-.3057125966673067,-.12682355113036897,-.3349793732242465,.015693363372025454,-.0787123262427005,-.043104245874849255,-.15482305108138567,-.23546372175602243,.11116967724198698,.4554474594999793,.18491255398354933,.29246815522355635,.196730228549847,.1971071562521477,.07329223993943043,.008241154297332805,-.1150654509172613,-.009769859408377483,-.10085941287032674,.0684199574716632,-.05433818455572499,.07743806985014343,.17116462221553444,.0012880410065990583,.13426211870566188,.11060346830231947,-.07324738364271675,.037258219358590916,-.012266626223890298,.07365939898386821,.04378341477475915,-.10714901521414893,.08665409577527164,-.0687630196871663,-.0587222961213732,.044547323244407605,-.05531794447013578,.033044549367641826,.057546028232389426,.001372219860547634,.024825635569633846,-.12204262640334872,-.10189632816975304,.054772548849134656,-.07957783281017018,-.03822925555621319,.03649472890803328,.13217334923490376,.057211373582709266,-.025832313366592516,-.05471628313966308,.013913569251103083,.1233331303710279,.0048703487927865205,.005174360919211619,.028390246160885126,-.021507757354650846,-.03467232955821534],[-.005638399019864418,-.034134669652071015,-.02298517127417314,-.06042490511676622,.054918574572591805,.0688808563980851,-.007013485383146376,-.00648857975984031,-.07499651415043673,-.002575895078660656,.023015025445107737,.008365293639519378,-.031176094638168075,.04257338372246873,-.0661088511417105,.029356311647627392,-.013291948615577448,.05636197405267865,.03421948261127945,-.012594934239664096,-.014011911140779154,-.06238097812075309,-.07113998097633528,.002419585241737937,-.035945491331999854,.0456380080016745,-.004718376331055318,.06674523587421312,.04530010627049259,-.04447867397014303,.08964050895430327,-.09649618199492596,-.027741072518757348,-.005716770675369451,.015013223612745458,-.024603266772382323,.0013274270991194131,-.035626865786564946,.017128923114182848,-.04597251722973113,.00700365315826125,-.04314749126071507,-.029564377599491043,-.02069536902039537,-.07978474654225476,.026833980742834287,-.0019308823001443487,.08325761674178708,.1073292905313316,.07487684328165595,.04849810672333138,.09169820062468502,.04818495710565103,.05209594899642121,.0076798336966644315,.1051949011075242,.022530132067634476,.12672233854609458,.059196502607268456,.07316560175671755,.11595348012337076,.0561543812261827,.12932878620836885,.08842436444709308,.03008655496417094,.06915562578899845,.12091856805585206,-.08993159870879548,-.01901478695671717,-.044734780540160696,.11875971731148252,.0019621703161090687,.09896262685457068,-.014935988916705181,-.05815665104963902,-.03028052756295238,.03900429075159827,-.08499089906358405,-.04601308312736738,-.014913760028022027,.021155606661541995,.06421560453257494,-.023980009754675097,.028088175416754846,-.015711319084152214,.05535467732664144,-.10471526203870407,-.0896827246271393,-.285340049872218,-.18318938265740103,-.08077353622648484,.00516649268446813,.057862500220190766,.06436392965987806,.08930527605764388,.033737553106247584,-.12462760155848271,-.15876787514393648,-.3559472010693181,.09512910727572213,-.14724808649647816,-.20315881235781566,-.0841426908653908,-.21320097373742838,-.18018782707193445,-.2119440854367126,-.10022760576175327,-.021533171965098907,-.03730908877302891,.12624286755807518,.22034948666962345,.18909901249809574,.15892762405783045,.012004127757768795,.05401853470010004,-.028528312561415387,.0032335748506411056,-.006627178039866982,.08469326627498211,.11628744535951219,.19103429211412726],[-.08632014587085493,-.04251610912847509,-.00877624577521903,.021241060023051747,.004785142683889937,-.035472062577375424,.0066937243438659755,-.00018713747041253226,.008276426093388398,.03873976801523668,-.06807775532448711,-.05024192857483541,.005362760135839445,-.04672304155801983,.0941592536360896,.0259868706565127,.028402847338834608,.12799263106977857,.052174185297818504,.03174223717567129,.043516542799932806,.10029999162817296,.009887971508390159,-.035094445123424634,-.007013648134597858,.06906108560461019,.09671072321105059,.08138116248657243,.057644504950450134,.011067196959459139,-.01838110668834969,-.08260170572994886,-.052683720386780014,-.019959970942575705,.019919134901318802,.07476413421487832,.003773354381044272,-.0014401279343240897,-.10890764410839328,-.05790156875359698,.06240285701799966,.10607261825733119,.09335586616638367,.16321573911501755,-.0443119052420356,-.006651931903878361,.024113039196997976,.06455344205631933,.1517128045863824,.3045776806070726,.08704170613240109,-.1300649085600688,-.11937696051908048,.026590394860137298,-.06187432805245787,.09997255193914875,.06382034869711367,.1176673091939654,.1041271101548924,-.06465138383635163,-.6483883244212054,-.5771868264045272,-.03625579288192479,.17483800093943763,-.08287899322519875,-.05289553791191878,.09345077929752676,.13222855504871267,-.003115895567640581,-.2050426388737532,-.5671309856064656,-.17042057724882412,.5127831574851569,.08057209143675742,-.06903481377819876,-.07649368600841486,-.008790831321444051,.06335917927728338,-.019296007009984323,-.2631077868691519,-.2643185488881028,.004389997491811792,.41748261831713607,.23966204304538938,-.07356228697618065,-.09550984819738148,-.23474683230766644,.02829833913410154,.06107471342323981,-.1617670664788456,-.002836662810929355,.09422220116207343,.1282749752649281,.1470689521208139,.07130221932440324,-.07473727988964095,-.2388522427596929,-.08502220429118704,-.07147003526069204,.00917906455872776,-.0009260579751391024,.08422396047774673,.07314989431319953,-.027624077571723846,-.10044220817006712,-.002887278419193756,.08486607958654896,.010310191760266263,-.0005486928083007075,.08421774232249293,.00540301472144504,.09530544860146802,.02141628298841297,.03209302388025993,.09515759978867049,-.0644210308822171,.02897465190310715,-.006988550471036609,.15811077547403324,.07738806251162884,.2228246896047446],[.07646808884176232,.09452548036967595,.013417457238376423,-.06541130247343482,.0022049098738461115,-.19542909991536384,-.01036325544715716,.0006824005641406505,-.025036329876752375,.10709994456938719,.1750934250468698,.14614357796041205,.05371808936012237,.03339878494049728,.05851426192031009,.10088626385947798,.123932599842568,.0003003679535087955,-.07250605302149415,-.05354946770191708,-.0689749450619817,.06814291076573938,-.0032046953892697905,-.023764344412627286,-.03305737261273434,-.04676939809650768,-.12086069080136047,.13198139059769748,.010909080970491494,.11805853563674065,.0005565448918684879,-.005804908679251972,.03599303672957467,-.008265716167325882,.06835085226718729,.030100108849902718,.11300169606234395,.04942335820173879,-.18768681794943032,-.08981622929146402,.12209444756370379,.0653983410219775,-.23087808851819352,.013400992883371765,-.09688703226527526,.09659335704424854,.08971453199525714,-.0038843040921827804,.12013144346588932,.3740423508496588,.21211466109416433,-.011527049200226763,-.04928358151693285,.018754604765659974,-.08264495139577743,.10817924171979713,-.058116213333392674,-.04976144143312866,.03846781052897595,-.27345429596810805,-.8464347571120541,-.2964510122739593,.08827559134332728,.11386954716890384,-.04324619613058804,.008036679746938918,-.10745428649421408,-.3104660594305501,-.04414792146240294,-.1780528735930817,.27176076889250983,.5237460398834308,-.3460333131926374,-.2555265202640044,.041698726893088206,.17631040231935152,.08900046345108938,-.03497190747260501,.015213546106438838,-.16155001168047278,-.004461612295541831,-.19608326491524342,.5239073730025521,.38353319497536614,-.18308498375136645,-.36865739333612096,-.05159976969809135,.18507587383644392,-.03905957968438431,-.11293732152378697,-.29448175156766543,-.24257847708785274,-.020336287901657812,.16460493865286885,.04202856070974578,-.03457877025452506,-.08062131133030623,.0023780590689402997,.09709014003611553,.2558741717766987,-.2528423785018282,.06161063026546784,.09606953110690702,-.0530490597234618,-.01615817882356896,-.05142755507875746,.15564444153816212,.18885757011599216,.008434900332647044,-.048989097338605264,.1771206856070406,.19164022835084701,.18133053179257821,.13611731878917838,.1652962851740026,-.029342409275796733,-.04278844315258058,-.05354612070195941,.04304847553991831,.00043498176350832696,.043391550136365135],[-.06739249619527954,.15603790499391812,.33005542485267503,.17019472884597617,-.009769894849549418,-.11247473585306066,-.0946396047616811,-.024494294275221998,-.003979234801726267,.10994471173246248,.034232693599063196,.17574157070401114,-.05830787394227463,-.08603561885055908,-.08937780302783849,.13060740524380768,.08334257877723908,.04558934315321972,-.02150019774465524,-.0396176985432692,-.04028289543604181,-.05490829999440229,-.02962070100561462,.033422070447237745,-.18107420807866342,.06262831004917643,-.15452481995687467,.1630239124577403,-.19245645289137592,.025898631717022558,.138019985248594,.04258082061725732,-.10231719535275768,-.04787866997999869,-.0846515395363138,-.10421201862848327,-.11475351378970063,-.07744751140730396,.1751315391960965,.31630961804401514,-.21234361067848667,-.13717780192340084,.0322563150273593,.16117460365654565,.12436610992083444,-.1960223209372981,-.10316972333420724,-.17989050580766375,-.030776595813913885,.36723472811894087,.2682282294834628,-.14255591471090923,-.3428439710747905,-.1686302689762979,.20717723978005761,-.0436102979406257,-.21591071858781744,-.35645281884894064,-.3591414517208855,-.356538210400283,-.22838433437597963,-.2541479444751975,-.027037660554611806,.10429938241738665,.07031310042281527,.19633410406749333,.011469003363448749,.056100652037588905,.20979311430234168,.31382740777390794,.3626609041849276,.15632710796745802,.04311821555373582,.15941891562233157,.1379981045600984,.08245654792292287,-.0973627067657066,.017535763817111305,.18875412500763653,.1322991804906124,.09315987867725894,.10015739152045183,.0417718281395823,-.1646122684692592,-.010269758847271757,-.016121723288740217,-.10277571356356704,-.09304291065640949,-.049186781888682446,.011398226094967184,-.0002700750754074388,.007439703510469686,-.200281126111086,-.11832761511884456,.015078283473006854,-.018452548998716053,-.03636517698179263,-.020537843773772754,.06746735860641695,.09898114873241157,-.005567440273129359,-.09202733157199142,-.011441078700565044,.04049342007394224,.0721069064339574,.047544507543730935,-.010627683042822508,.010378739620038546,-.03736112469411146,.04944072910180286,.23172672133978298,.0662240370661964,.053604258546808725,.07022403043169811,.00044743519172646407,-.024040752967206758,.01702740005498063,.08250217651753305,.04411754553266678,.09444575948019618,.026070122517550864],[-.014874410513740596,.006465269516725436,.18058268416301498,.10639801800645622,.1462435538011862,-.1854908571677263,-.11946585223026567,.13336875353850036,.1431606374421438,.2126832457834811,.074573037321912,-.02366332846738356,.0003016250518083352,.034923909748155624,.0004976437330811434,-.278607959140356,.019649427691563706,.2242872822116851,.10634587212193486,-.05574719156641576,-.1720320898158253,.14652429997383487,.08367806166302114,.08005999685354703,.1267699091356168,-.2096000474917565,-.11992969772303724,.07965105241880661,-7050015517075237e-20,-.13159968070216072,-.12185636491051369,-.12212386528350992,-.06347159979080245,.11591606931628659,-.0003121176220944738,-.1615853169207239,-.20509977937167723,-.015211020089078528,.33419363858602386,-.021197972311742794,.051573854058283256,-.08119082461245453,-.024248010908752227,.03195278614490318,.08988999412280829,-.05534767428796654,-.19026769408809097,-.20571271554392964,-.0034200030533805825,.4233706083448675,.2726093091939193,-.08499767431735698,-.2700903003356256,-.269846791820592,-.17357361480162312,.04962098882240612,-.0035750137874818316,.03659266345297582,.008635942409048396,-.27032750814312834,-.39994957932057346,-.17183609797060095,-.24083907079152436,-.20001978264666828,-.2526432903468412,.04388992532969703,-.06425983460410711,.07404393306025628,-.0141401497703907,.12916245281008937,.13074274654586848,.027929401203914232,.018943370061503276,.12690634935975603,.2876472565385513,.2888724236948665,.2999817956216291,-.03702797972780987,.049533958877091146,-.018197380038773844,.19754195456455448,-.004838219692821645,-.06700194220608034,.09532874300771776,-.0773285941177754,.09792160200102382,.11726746577896972,.05120619892319547,.014744273305796744,.07451554959247797,.07659473159347036,-.10212719204511148,-.01010359791820685,.05340526943316216,.02596768348900778,.04284255334511395,-.031649551549700956,-.10112182853935778,-.06200392753579289,.08099671084730073,-.09622742200248849,.0027222873646967627,.0032193461798180056,.028018068894715878,-.08039298406512714,-.06824368067567846,-.006576337726493846,-.10138976161964301,.0057770284685309745,-.001933310874106156,-.028478055121693616,.07814848124477439,.004671826940859908,.08652550552054145,.07514987579413773,.08091190400159867,.14299067937575605,.05825481165877586,.060032259045003374,.06930919820604647,.13733947078713762],[-.026403086547123783,-.020917609288306105,-.03510190404818561,-.014306912310371803,-.004297219536436386,-.058077881414638405,.03817856444432709,-.0028111815245872307,-.003894108451895112,.0018813296297546939,-.10078688565961993,.021583238308296865,.07351192637081023,.05452848256552978,.18987936161675673,.13986078152038808,.07294072514890901,.059256836874555796,.031090669459266307,-.015844740201760396,-.02361837940991314,-.06493720410953477,.07564298381185089,-.07946619582017297,-.02076901494464639,-.1040432783776685,-.03301296713352203,.07278846470181086,.10548105228938642,.001940545938049626,-.007042592457223856,-.028398618166747935,.04518643635595633,-.01918619986250676,.10714569627787791,.11822684975817753,.0385712171883888,-.027458148938472732,-.09826461163629269,.05639089468873522,.0401565173462511,.12886782282388654,-.031555895682836455,-.02313957239134061,.06912242744289229,.02510224988131035,.029789415685897214,-.07065287059550626,.01631478330110331,.2868868423095696,.1702619783984527,.012540634976734383,.07085086586162258,.0048605100782281585,.03319775346107286,-.09132869763063686,-.1509740873764873,-.024120509010246885,-.024570140846357655,-.4148094433546702,-.7768715321932411,-.27460992951941543,.13785951824037135,.13544781633672992,.13313817386432886,.08265280252024546,.0892378541549983,-.04408118699325547,-.07688310132127552,.12600419964023202,.4095936605238212,.08706928311680576,-.4662116815658208,-.43761485411451395,-.10812067804268631,.01768640051563608,.12729816882590003,-.06474744869465016,-.10763464536172436,-.08524826938436865,-.2315031932038772,.15315343856469926,.5561967810025037,.23774692046366147,-.1666896681928125,-.17715538120217467,-.16976838686613122,.025008504484853387,.06037757212092375,-.207132941454224,-.18646194822017553,-.08066176191384393,-.006108527904106376,.13478699831707003,.05663233125435585,.17462609841438137,.017491495363805537,-.015088475844073315,-.05179208029802235,.08667865349188252,-.04388543437840227,.048343192446375916,-.11502969777881612,.14059893815190727,-.06225829113308384,-.1133470132940385,-.06495391079798758,.027741435654062445,.11898150752091059,.030260843676813906,.1715435352553567,.05733311701306816,.16205339464116109,.0986088130067229,.07391231880159047,-.09081555366559062,-.010370607459546058,.09227572604484349,.11030039690306363,-.005880817865530123,.03315047782928856],[.265497784006023,-.001196563628947503,-.022916846645374064,.04242967231828259,-.13811673855846254,-.037430883372056925,-.04055976165522489,-.023933501028027243,.07925869079288599,-.03452188619865604,.1745046250935801,.041790623206738556,-.022740750277082458,-.0013539969792274592,-.10138864950556396,-.05330591399510319,.05890876091911343,.09337290317905102,.050140067951328054,.008453902706993435,.021166550278200705,.10388208219238029,.007634804692830455,.013138640062169096,-.07521733873467416,.015069141903176639,.24056352482102478,.06446432376128192,-.06152056570701016,-.08469410484337414,-.06805808373087846,-.010291588861849124,-.035798773818091045,-.04713757879339735,-.03026500105857148,.025114433975426814,.16953416528873916,-.0817543143366256,-.16483577488792853,-.0902156026048015,.19963523508019926,.18826320002737132,.0456147336838748,.1086113915966117,-.028328921848054453,-.1035162472195403,.07532162352055781,-.034012524380715156,-.05869582193122358,.44090992264428214,.08401925187495345,-.012849576849437369,-.04246094681649424,.13375661768225128,-.12950865617271876,.0026410719089161178,.044977821596146744,-.09031241110853559,.05573382619971841,.06006110600243948,-.7152771146839577,-.2823457778181207,.031272225391427405,.11880824524917351,-.004276759953008441,-.011347995604354372,.0023675469047975545,.0004348550966036674,.18958682252204556,-.08575981341015436,-.4525757422905344,.15961507301364802,.31736731659376055,-.06241231309053391,-.33746000415329924,-.24412114938634538,-.06141338958196621,.1307879363651085,.20848205264195724,-.20955124959973886,-.28812988786360966,.1444444314401861,.4681527258922822,.08513893261549756,-.22658732896395356,-.027717075192951288,-.16856281398342385,-.13753538355338668,.15059745895188464,.0007847737668332105,-.17890918828775537,-.06728879470102206,.11813620983475538,.1093966751655376,.10647641748777864,-.077849502674635,-.24214140318686445,-.15597210638677117,.01845193625122546,-.06530042705198695,.042693539088593954,.11063899895595043,.1345960282646932,.03073808878575153,-.014969922588453921,.03930721328436604,.041004905630175364,-.02833378555913796,.015742037834556716,.1142681683436582,.021003468182292317,.007722156555425588,-.0008480579679850803,.05639697053390247,-.11249629487295199,-.06403127972799066,.026888150461400945,.12621843363263308,.2506155533712283,.11067999815380504,.2625673114962656],[.07204136693885738,-.02294216842145158,.2065458637349623,.002151772315104397,-.14297221024604706,.0006065344407096968,-.058092024602730497,.13818306134022745,.17791598188652985,.1233364171367471,.004452851854572046,-.04605978546113265,-.07158630070162336,-.10073784448195211,-.07374001181908801,-.018045859949657725,-.11863305748309075,.17617564045249434,.1497784150689691,-.060747330352864684,-.002795567821259906,.16785791445724135,-.1069842654168507,.08299954323961768,.1290318983655246,.0472029159600786,-.030333770559695314,.09912149513807601,-.0517466008166365,-.20797950839871948,-.006052325355080657,-.24640179139614737,.0025429730685309904,.05667595309098608,.13754251807005335,-.07912609105408717,-.17638998336346334,.055182291054404795,.2999299991215481,-.12374985838286831,-.15473061907953733,-.015285688493998806,-.005413536155938592,-.08584047767716647,.22138328866134657,-.1312953691874637,-.331468720330966,-.21124338516694569,.24711637651267865,.4637243206427061,.002706170884996334,-.24160873975021052,-.10141666077006732,-.18322786018052334,.11158412852904591,.16760494025045042,.029994319879768874,.02568209912242493,-.11958702177240098,-.33142254026746104,-.15444906222705926,-.16381735574030895,-.18306921419313,-.40205221035750643,-.26593698021713486,-.15682020509672343,-.0002611999532893261,-.028755553239042705,.27424611760615036,.21592566014741185,.2548708412154177,.09766726443852504,.2003429726573298,.19878852497931995,.3068586161555329,.1724661104441013,.018739306158119473,-.031064357609991294,.02636646794424298,-.1877675901403973,-.1548117904943781,-.03742920818066736,-.11875155323060346,.1072645136817657,.17942453854019957,.11733499751282206,.005277889557191551,.239715757430863,.007970067197280564,-.05150273918961891,.05532003743668318,-.04000791210638338,-.09270810707710164,-.03147116641129902,-.09875931193346452,-.0929302236954023,.05551794898235975,-.037796492017755555,-.006342559497925185,.024882508886736474,.03498315663644572,.07193149606026825,-.03159247501458931,-.08635043298071296,-.00900169516689478,.07145747296891478,-.06072161509294199,-.14319100457707667,-.04832107159680491,.08148534066502974,-.028272073748030507,.06368387177606752,.005547975403340871,.11811279082577647,.1406537167258409,.0040600159105901035,-.01371930228275231,.1272415599265802,.0996273526994874,.13231658613798591,.13873127011038072],[-.027795762801489036,.19015374353251102,.09786449937030461,.1260265818055256,-.03326907462898673,-.08950071549954294,.04755987206442841,.07374106017939597,.10899124384412755,.010865871673477301,-.057265695902511626,.17802866217244057,-.06386667438683014,.018021373487705536,.025918690785187992,.05257574438698637,-.02127434335573966,-.13048583355248472,.029635938133951767,.02172060868160656,.07492647379441873,.05982963712461653,-.07690117928929213,-.026484578757325183,-.15053176420715175,-.13725487193154184,.08783323609942534,.06602307477877348,-.09194730471659307,-.2149017706218482,-.02002200413959808,.061471356479686365,.041399022424228,.03151238583282206,-.015300106252072884,.02606847025532051,-.033971179507359804,-.056571591160507355,.18971099504863476,.08899534885782014,-.15964206297954237,-.1658659652422706,-.11188281516561152,.12234793752765391,-.05230788663927277,-.3784533866593174,-.09661391326206117,-.06904822287997459,.06616884325249589,.4501083804430483,.11905472109942555,-.08909289493361428,-.12904510069418687,-.03652636132387262,.05482157876641917,.024810152389095064,-.2974723222653995,-.29999245801199964,-.3052508677798769,.020996924029338435,-.24088524064845188,-.24200960208227415,-.08979063621228703,.040398429108714586,.02526034075506383,.02738946668147809,.27071204540517796,.36231522138833033,.17799155604913797,.14461290644587801,.03918838067034987,-.12174172594558236,.06237969867131351,.053786808004118926,.07756536337785302,.08914298237579163,-.08291349820194119,.04793594103860757,.03222752136962408,.1350352800448287,.01205967148514378,-.004540301049576534,.04815794062847277,.08165162134080209,.0420055425519394,.0009471989558243119,.013451602816859323,.04615829282097319,-.08677011014133904,-.019510393108648688,-.011154645591627543,.027566377877780268,.06172844763368893,.01211458002765884,-.023208391928071358,-.03160731272004374,.05964254050869681,-.03676588913311459,-.01592889621276914,.006408090161429653,-.08189925434449696,-.029769584611185507,-.08882088193245963,-.028070658348809674,-.02369186063763514,-.019599361049671284,.05743812858231336,-.03819567161611324,-.011284460479520503,.039955132103732395,.0994475360757134,.06854955752169739,.07304758551276755,.062482862870410376,.026345779828657455,.05133517242772345,.05507457313109733,.05467724826002196,.0249056938059083,.045383956637533654,.03290849847519013]],sobel:[[.021622445358756535,-.0390444160061629,-.037053874418492755,-.07022176288405753,-.1427717878903811,.010719228314107376,.23521416713985532,.042585931839459745,-.06683861743458991,-.03578595224955572,-.04059161986118337,-.04764960919347714,.015365501205621496,-.008941291103032187,-.01809360705194145,-.041156433480069976,.05919352610154368,.03497012407302869,.008553519349948524,-.012132573309561322,.0371186042198053,.0111042284552757,.013666753799685936,.05711592790632492,-.039502379569608656,.0017172576948862456,-.10081077815789569,.037477947956047315,.16094952648226463,-.0671743911548443,-.03419754633951289,.043780102673210156,-.028950198305796655,-.07533857364442487,-.037953071524472706,.015621349282515417,-.006293662956530381,-.11863605824421611,.04918319370719824,.17069808619279628,-.019042518561221543,-.04243830041050764,-.017632482496080508,-.07573152098334562,.009532427173592498,.032929665395846554,-.014258152251170213,-.009896702557296536,-.08072755471094212,.0769505477203023,.1301045387299078,-.11441193151685329,.020647144228869374,.00749014842997215,.02952445728451479,-.012759212791825812,-.009358056202397089,-.005836205655333548,.06410438831050584,-.16470494179736736,.09441790187367777,.13506762949639728,-.044141557668112785,-.052786309985618965,-.01084112869678737,-.006663012542954316,-.023002077304622413,.028816328444530765,.04166077615413055,-.03202795718132918,-.061564972379557034,.13252072121529024,.13006898279253504,-.12914934815826734,.0036201984235415957,.03610542205997497,-.012106081202489141,.004058192101201268,-.061907628638589444,.007600367784796228,.03671952219823914,-.1410576836731265,.20291678804533386,.06038866116811876,-.09658956095157467,.05458913933858801,-.10018987380801381,.04112291504887511,-.036635205055412415,.11599660938438668,-.07295900961980108,.00583809207032291,-.08045918512870237,.15241049645522284,.06425812812905529,-.09976023757909988,-.03850852240843291,.0044401907717541295,-.027741747177757195,-.03436923493861925,-.015116464251280038,.0058884423068488005,.046096447137350165,-.05757678749304351,.10122734774744221,.07473544575211773,-.08287021420448253,.016464177481322798,-.03580810970765566,-.03475071464244962,-.003747381569910571,-.026826464835886445,.0056597480426354915,-.06776975169819949,.0568032112071548,.2204344679083607,.017122291321192216,-.14459243689689222,-.07900148882372424,-.044799531513801144,-.09998183610900521],[-.03942173319674756,-.057937375185619755,.07472938315329024,-.04804478632173838,-.03718790427316931,.052702736653325186,.2614265568109154,-.06194891259233615,-.10675064435044604,.03181210215084286,-.05138458731313046,-.006001020166593533,-.000758963231271774,-.005034712330520122,-.04106468549039451,-.017208529601601026,-.00959059876381125,.1312641811720012,-.05145780525032916,-824568465870798e-19,-.06300141610663909,.00662330181235226,.004505103028334206,-.00832061971740649,.03491261870366369,.012366610223709981,-.059276577400723146,.05228846208155291,.15469918793188286,-.05159177086372573,-.04577876556723351,-.007896035294524772,-.018756915070729453,-.09497130156345444,.06552949060396415,-.02915852966712413,.04686948866825649,-.07002482417194189,.06273064008554734,.12065622163679911,-.06865756120992836,-.019058676809837402,.007433748881822612,-.06712318925947033,.02052950643564122,.01304440247401717,.003508766683547923,-.012030134512047277,-.09718324129496053,.02850191391272701,.15192055414504166,-.07064017538379264,-.07574867617411588,.031913417912056846,-.03198191683603016,-.0230492148272136,-.030048256280766128,-.003272100719358767,.06000911662855034,-.10610745181060459,.07159991097201013,.029747261693937183,-.05575743675365958,.010540784627845606,-.03857943910359096,-.013055960468351072,-.046603955087347805,.04582465684306406,-.011912196563431354,-.011526854332901983,-.09532744148529379,.05183976113236992,.06949193683229409,-.07878846639780829,-.022076046119921762,.055685206611929355,-.02869018935857525,-.010750075363214893,-.03415858882057192,-.038029784044701004,.057878914546968016,-.13134480414052568,.0856079923756359,.12614414610906796,-.04482730622503464,-.049757164378562924,-.024712106659159953,-.07150714875938241,-.024192130054643594,.01362951330665179,.04843395308108374,.02435938666073026,-.005115510677492163,-.1051390039795366,.14444393915678838,-.008854843167052682,-.06877201694896912,.04154889078317525,-.03416715215551938,-.02158218803411909,.030182799067988354,-.004001462906150586,-.008366208163518175,.026868483822945988,-.022177672343113145,.08331376244831487,.010010211142558997,-.030072184867643174,.03784348921872213,-.0703839029107394,-.08354862092459728,-.03639193566116092,-.01661593760376544,.062407519296053184,-.09160202412195503,-.006843043428917624,.09508596316493824,.048338691169388215,-.027514079584110885,-.1310899111751886,-.09668378141294953],[.02652155293290502,-.04575770696844337,-.006541188406767798,-.0850611791651533,.14722881834024182,.047880871068860825,-.019733975062189213,-.051041982772424166,-.06667461611485706,-.018868367139866095,-.041407892531913994,-.1135165849534281,.06494420088328412,.02647152281327755,-.0009023323279171679,.012634138439591477,.016736706302279282,.006622967558128835,-.027195497182580936,-.013683547901060635,-.05313406694033209,-.03712665111485396,-.02263257568938737,-.0018942229311252846,.03346211015366675,-.1182492365861096,.020164248753763356,.11022756484626357,-.03439933132264335,-.004049118679745123,.01554080038394597,-.01876268414416564,.031382890856517,-.03490611065951857,.008409065294535818,-.04433470712905613,-.018500134350316173,-.03677441221924304,.11924665863029466,-.06655695631623004,-.0157217782738675,.008804996944793225,-.07306105742656663,.024309817051911063,-.0022227005091241224,-.027084812593866206,.11300564532044208,-.0896577241954244,-.06933069492567155,.1522788162456262,-.1181410719140571,.04152270594429727,-.055858865503919525,.03589699264499422,-.02283997385633508,-.06235905686569805,.017954041686744696,-.002351693056876304,.024292471256874525,-.020140941604535046,.1661637815621748,-.06054747904050768,-.09599363187714963,-.03517153185773671,.00017003372512303105,-.05448690490066162,.005104687483287511,-.024970809646617714,-.026948648737005924,.13211777318770576,-.015912595374394843,.14876817147359678,.0796408202313956,-.11230282633524796,-.009244179138250534,.05881906813164031,-.077920153621443,-.09048227175758561,.11102826856966876,.04262609405288573,-.002195518726305995,-.03612226711997726,.04714670601583837,.18615910807929142,-.06326936864527846,-.06350591196288817,-.029534950411274838,-.02998682138584287,-.01600285092423518,-.030794045583080902,.007041927810126417,-.03044439031995083,-.12718798875016957,.041134467878119835,.20405185525846614,-.02981115718000413,-.08705268526814279,-.016364346582207326,-.037891810417653854,-.026401963421238878,-.01377908482257758,-.013032137299750876,-.0535382795543113,-.05677960797001068,-.07937722305377937,.1823700488331369,.04187996112061794,-.046827200345602865,-.01941969694818884,-.03279614251473426,-.1704434512500123,-.05402585591400131,-.01264725681794126,-.06730558838276793,-.10224311399966124,-.3497190298002362,.21798581432121136,.3312151668296328,-.020319476107282762,-.12056665218545416,-.11656639490906624],[-.034745756067027414,.011922066572062268,-.09844929180493724,.18031082717496805,.17476539334005353,-.04651834678078855,-.10946016872645539,-.07572746991726476,-.004279528158131065,-.017696596899397482,-.0939835628640418,-.010800135732187889,-.004556932318507428,-.0313793616124137,-.11850675752648224,.2367012443070334,-.014785597277977354,-.06330233126223941,.0225368275762782,-.025071938686129294,-.0027915071853978554,-.020334914936012752,-.0260080270892961,.010703003018176116,-.04302986734354733,-.04719551951341225,.12321706281055818,.07178600528297852,-.06528227400456835,-.0676382212399581,-.030061503019037598,.0027284619191995756,-.03074601987445027,.034300317469793756,-.01548496672283399,.0006179721819279116,-.12212293111148122,.05002280333117751,.14679567560544277,-.0844548887536185,-.010415558440521971,.017746373390555303,-.037888913263606695,-.004245286137776923,-.07444532374647941,-.011522402982276407,.006531765327581377,-.09306768567122295,.0002576849794380092,.23352117567061204,-.004983968115974451,-.07096139483486509,-.040406385819728594,.0038935193964216783,-.06308769534344781,.002854920112929586,-.011365105715306072,-.005187184085771797,-.011323145685494362,-.15258276867230808,.10052717621074529,.12368458705231265,-.07784739054660597,-.05947141825026764,.028026328084379253,.048885641757861406,-.019665152356733828,-.017240548423916428,-.041027265162514856,.0011509894918183342,-.08224193528889252,.07860486788553207,.16228781290785055,-.01052370034412145,-.030965934865738454,-.04150395922722867,-.03971893854081693,-.038748556042536665,.05147042014917219,.030039107409380247,-.05146929592994629,-.06031302048942426,-.08141793665406812,.17732474397593703,.025219765376655087,-.012727987606368688,-.06452329607912104,-.013167312882832634,-.013895314055951707,-.04937557221951774,.014179550428987366,.0006231274166943537,.007284514890717856,-.10894474372759466,.027784507036578657,.19201834106729118,-.08503636154991112,.023988581116611958,-.02282810457170993,-.014372052338263167,-.026342474575395736,-.005546792145770824,-.019470544310970943,-.033931503651495665,-.009153654429471615,-.03673949260822036,.10446088448224827,.02096972633566819,.02477619301857615,-.07882973010453503,-.05324513285593391,-.01043331061186759,-.010210640679316214,-.0513080253985015,.037884008160365974,-.09932414289546485,-.12671107025252934,.08382856754313096,.12485291624334745,-.019875141138885395,.021159178415280137],[-.07381342857851532,.0455540146431333,.21317974541835555,.05448580409181898,-.10981511144389543,-.10268425646919861,-.04650116351920065,-.055663971820637946,-.020862778212020025,-.0016239951963715644,-.002629558452717437,.009997409413537085,-.1034433191717149,-.008081438535099912,.20536698014540328,.06126371127783943,-.059836319781441494,-.03879029447603735,-.053677695944028214,.01992364774611377,.0006753675996654038,-.03572620746404241,-.03544101559998049,-.024733560212268406,-.15079839806148979,.10615849316820197,.18684548267040532,-.06407028093214549,-.06708715087119563,-.0055311193006368775,-.08609293439519577,.061425846472940575,-.0352191555938125,-.039575091828705944,.049801600957609174,-.033980895382327146,-.11533858246663227,.18080146842113642,.12760232482142872,-.08327397929149902,.004050625643949118,-.009980892873738614,-.06775913770201022,.0026835543791823638,-.00803433817430127,.023532332559458254,.04311746952929076,-.14058656961156304,-.0016268330065314137,.1558532497649482,.06962658020587428,-.1243686355938375,-.02647962384653368,.02038319920383414,-.028768935662109356,-.006285770213208797,-.028321313745657696,-.01168709222463879,-.029152829240080027,-.09492216145725302,.05287227428314446,.11087851911197262,.05425160893742777,-.053296632141531824,-.02755855040578903,-.03854510047924891,.011349127429016066,-.026961940685359908,-.005884952735511401,.00206567265274352,-.06205567284106403,.02710712046861733,.07672022654060172,.009554614295410758,.06212095818042384,-.03262997618859226,-.02150746774468064,-.05278408473616569,.003042324765367102,-.00803157070172712,-.06392451109412368,-.00021021475214931008,-.10024981203982601,.1015512962019214,.06415755572356177,-.06991649277121507,.08210312205359811,-.04650333410340245,-.004884800731244601,-.02758565365129036,-.0140809555182348,.019042840231226918,-.033131129031483485,-.00891359281431682,-.054256262048008735,.11973166937117143,-.01826858015786499,-.023883645532026994,.04923183201129361,-.014577787660792423,.04612778717043076,-.0751102026691928,.04662688612671707,-.04174713495693605,-.03251487077000792,-.05433873340003095,.017222361404870275,.11676824759018707,-.026438027156220366,-.032102992542435496,-.055241109787953276,.05623591331540999,.009962320928060292,-.03247355703691324,-.019767314495135732,-.029422259501493818,-.05097365566473705,-.08644257971970679,.012598629009327726,.06612221542730885,.01211368001348305],[.0004667357969735525,.0005484962618241966,-.00013618713228205742,-.0001325308516655052,-.0008015746157093179,-2691133605066146e-20,-.0006576428843258145,-3657968399891406e-20,-5466011820027881e-20,.0001460463513297764,-.0001696182636010491,-.00015906228894248253,.00011235296245967744,.0005051823397537377,.00015356454550761702,-.0003132396323740176,-.000443009848644497,.0005320046122783456,23644509619358614e-21,-8483171427942043e-20,-.00027200405736615936,.00022416316434788062,-7119462531548662e-20,-.0001921201138109542,.0005739617778319649,.00035815207686277155,.00031159259445471095,-4693731115592045e-20,-.000655063269267907,-.00011995580027392686,-4234800514009546e-20,.00010587326804443578,-7932255000570351e-20,-23721764802441496e-21,-.0001704014757213674,-.0005759316542972587,.0006522217712101383,.0002665414702900902,.00035667127123066925,-7769177785828997e-20,-38172905741614115e-21,.00010049476721076365,-.00012168481580056376,-40491064147097386e-21,-4815954797536162e-20,-.00023287151964227542,-50225019821443275e-21,-.0008018262289789277,.0010438945255279268,619697064224538e-19,.00028901935081157955,.00010579037778190963,-.0002724803030345158,-.00018248333714674828,-9789360941573534e-20,5612226678763241e-20,-24109435187230215e-21,-8256402305014017e-20,12275769358770228e-21,-.0011837300475309662,.0010387599962857208,-.0003010645692578806,-8294294955041304e-20,.00046305034318953886,-34941522492179e-18,.0002604782638884796,800633144412387e-19,-.00023204308256855825,.00028043251942060473,-.00017992926522449743,.00024111256847714896,-.000777073687135317,.0008725867023055139,-.00047310681975866464,-4890356661830034e-20,.0003016510539483913,.0001523693782892032,-.0003214720006770571,.000145004901686719,-.00014868675403801115,-8406917150712012e-20,-11488930694997235e-21,-7310353847784362e-20,-.00027257580575307944,.0010045581248467467,-.0006063389015931106,-.00030283901680250476,.00023946215844236965,40874050688199964e-21,.0002066877668432881,4626416595003647e-20,.0002212022580360476,-.00025433190468929917,-6962082684627835e-20,-.00011541458342628763,-.00025522292698570287,.000908077213322929,-.0001479625967791515,-.00027356753032273425,-.00019226090250733943,.00015027389750788632,-.0001041059494256247,-.00012272487478783012,.0003376683677376868,-.00040885269632123106,14064712871159069e-21,-60893502923708986e-21,-1227014387847336e-20,.0004636730771513907,.00018271794499197247,-33562064556917105e-21,-.0001861452801387312,.0002474759769718931,-.0002203964126913302,-.0002655235806198683,-48267361401083814e-21,-.00013654454453562725,-.00016522236506379823,-9985241041834958e-20,-7308470539467734e-20,7649675181982088e-20],[.0001419249300921993,-10849997241092063e-21,.0001677566369007906,-.00011605018962013852,6675611545678417e-20,-.00015562939648154986,6416442818616905e-20,-.0001614403193715211,-11567201873632915e-21,-29389666004610293e-21,-.00018545690110512159,-.0001419296577092402,.00015688900011993565,-.000229871704751812,.0005060189485679434,1147904121199389e-20,-3535800418509594e-20,5415137837850442e-20,.0001162675133458968,3718585855791434e-20,5955359052348119e-20,31314783550819014e-21,12057174878739307e-21,-9669598794523337e-20,.0001044847847413502,-.000155071439923736,.00022022799757739214,8386688043080653e-20,-.00012962060856349517,-67578262074236e-18,-13555990987554334e-21,-3573770488207728e-20,-4580879555246553e-20,-6354878206941278e-21,-.00015612384897251141,7008522349730151e-20,.00029763597940726805,-.00010577343553129503,.00012730480076296458,12399248204064683e-21,18645837807265697e-21,.00024212785489370614,-.00015872860498579444,8370724121332246e-20,-.0003259753596085574,.00041133058083372975,-8868765658752442e-20,-.0004929644470749728,.00020605423444788884,9356117414315718e-20,.00024762885023246056,.00036524470776032325,-.00023688791970755824,.0003317223665558061,12629398500677014e-21,.00024080466741264323,-.0004006372668640644,-5956312920551987e-20,.00028033907001259045,-.00028345593539583214,.0001339187071822609,304935126049094e-20,-.00034838001372515526,.0005974623821075192,-9984648697297649e-20,.00041453928701537524,-.00023073595005270592,.0003420850861519109,-.00016580817990245744,3976576445351848e-20,-.00027830373100982964,.00012537929853667987,14736238159517717e-21,.0002756723723416135,-.0004888438970630446,8721286611335088e-21,-20493341142208132e-21,.00020499966401848688,-.00032257655852790945,.00032032979815644486,-.00024321547888298814,29086686149870644e-21,-.00028867101368240666,308253988305085e-19,-3679758949304973e-20,.0002922835678795463,.0005289131903343444,-.0002405873549854512,-.0002989896758484323,.00023190078400971148,-.0002429945590425725,.00012631644056069861,6836571335519515e-20,.00010549540200119334,-7322581853928811e-20,-.0001018216734522126,-7634194521848048e-20,-.00040021222480832175,.000518688311283471,.0004528227836673032,-.00025642054830855854,-5331243306501074e-20,-.00015071920454498566,.00026346273973178874,1572313523398594e-20,-.00010611552565827076,.00010030771494402846,-.00022901452791959653,.0002951541391374296,-.000378103168520591,-.00048426748955096577,.00022179377366644826,-6552153219173927e-20,.00033674118948758686,-.00046179298814816305,.0001050701224512944,-8138607593656533e-20,-8540917054615516e-20,-889958796901763e-19,-7585331122395705e-20,26564465721370945e-21],[-.010683117891894434,-.02620351731802986,-.03534863123446273,-.008903947669758876,-.07826483213345957,.014533495211292522,-.03973549743914442,.0028868136525013826,.008256343228267193,-.03687632798624772,.0019617637025766575,.05292419388952615,.03547852648387356,.021452215773512737,-.012058498396393419,.032415748027272206,.008148731343012645,-.008287843059112744,-.011301795333024143,.045191867790093425,.0443272347840628,.019363765884505585,.11356516329476325,-.03297909837716518,.07569751640913967,.019096851467574182,.008341756670470307,-.006060831718435461,-.024521250232898754,-.0062563950604268,-.01942454996601342,.042617826976536294,.11771045618920394,.14806853397919761,.07242131632098367,.05825312332492652,.036446775225891515,.06185042985131853,.049704669459738865,.05543056149812341,.07026667566078945,.10791776313079825,.05311703744365072,.12942596556811628,-.037520978380153586,.09370958660148157,.06757677036036652,.06872498144163033,.07612678330985373,.12311586010135872,.08341133633610057,.03938707776246564,.056425147284172514,.014237983090907416,.05663383500458416,-.007586313673593262,-.08304140447131836,-.03312998363135067,-.02763623864202023,-.047768510607462976,-.0632962042530323,-.0625787861890991,-.046277350408935075,-.0014999128228245229,.03590831793842944,-.15153224136771898,-.06746002500304579,.05297916353806439,-.025619303894120496,.037941615130038006,.0649108950810626,.02230202042681128,.05527075190732955,.09270549756162146,.018963378238524085,-.05397308646482572,.008330149548244339,-.021218159929265457,-.030570605486973344,-.0021454021899788445,-.026875831051993617,-.049042673990263554,.005126075452093991,-.0069454575735653475,-.05554130502902047,-.024578161869174033,.015168445899802574,-.06800332043927534,-.0004811209803101679,-.056520449187868235,.049669608030607104,.01631627846344143,-.03408574477458805,.06306672693556993,-.008003322830341992,.03338583748912691,-.04457596702970919,-.023441355247158995,-.04450920952691433,-.037161871027802405,.0073190175238074615,-.07315762665564123,-.011373417119033976,.07203060276007722,-.01801567006958655,-.00013858608242610544,.02837432120799207,-.02556727198730242,-.013903313076025374,.052807958873996745,-.03831841666326997,-.022987196513577734,.0062781886098834845,.029733530440722515,-.09023650482004696,.0094683723177513,-.06760687073712972,-.012207168455778569,.003949880911342205,.0017680506907682904,-.1320506501819677],[-.0004896583334386695,-9613383588834984e-20,9502440927711825e-20,-9483128665062346e-21,-.00027318400850575436,-12859674043262659e-21,-.00018753431578469315,.0002535982748430171,.00013593197045175948,.00010671640250792952,.0002520834422912871,.00030575486026798715,-18677323289251202e-21,-.0001359879426809929,-1.859672404264101e-7,.00018716058456554746,-29456499708931105e-21,1740372235658344e-20,.00029170983943693773,-16893395160838542e-21,.0002914265737280833,9820001306080905e-21,-.00012201675367805309,-.0001821511041478624,5872783585957053e-21,-23871151498152526e-21,-.00016916476120136525,-7717554238115265e-20,.0005388762586042359,-759543277033814e-19,.00047546289643572714,-.00048532553637742337,.0002524348829850197,-5288970316780217e-20,.00026631391925304587,-5706901207734594e-21,948050040261092e-20,.00012583697976619596,.00045284900761148605,-3792132542147775e-20,.00010519128394604477,-.00021574981428573378,.0001305879900506124,-.0005551202035402965,.0001429939062747021,-1537039116969452e-21,8065370761985158e-20,.0004067755777601087,.00038999196381222373,3687737451229384e-20,-26107472160714212e-21,-8558362711672332e-20,-.00015583615391241354,-.00011965945062380329,-36535280401381234e-21,.0005409408483182249,.00037630623255849316,.0005226965893515845,.0001311189140969643,-.0004006033211368873,-.0002699354254764169,-43072617173671446e-21,-4658295413017405e-20,.0001170409315355593,-.00025561950600206523,-9798859756077194e-21,.00028045364993524793,-.0001608395418377477,-.00025723583975659214,-.00046505036856739346,.0004039314021320739,.00034091132239879793,-.00019370884391506013,-.00012426188246242656,.00014610355538470163,4887463226376648e-20,-.00016902502798560315,-.00037191521627369384,-.00021579609440836728,.0003996153018098192,.0007981264512366137,6535068239886532e-20,-.0006637329476850487,14201540184693995e-21,-30668778868838537e-21,-.00013015400162084967,11834065800214733e-22,-6045268667183301e-20,.0004600310403380242,.0002964915299992765,-9742215850019886e-20,-.0005461539479859404,-.0005455504543375317,.00030505150102402845,-.000122823071145077,3104235413028261e-20,.0001268834643597741,-11535964674028176e-21,-.000176869063298763,.00011095223633189599,-.0005922445599075704,.00021684456404430508,-.00045799378668898855,.0005799531522856713,-.00013936531291453697,-.00021220643616092633,-5413656980053638e-20,3660890747885295e-20,45939329531563544e-21,.00021478664432446337,-.0003269975562177341,.0001268963426280592,-.0003423046849268599,.0003476774203064331,-.0006754907234843358,-41513304792857586e-21,.00018063222856385536,-.0001881377600047654,28973339703669554e-22,13507237580291653e-21,-.00041261401631562805],[-.0001343678115740335,.00012210804930180494,-824144225993334e-19,-5730186380512037e-20,-.0003073948625443232,-22492441595647894e-21,-.00017176271831247786,-771017116939221e-19,4710757033194596e-20,.00017636492999561354,.00032836342762108256,4108769956619879e-20,49949350228714606e-21,-.00011875800957268645,-.00023943950047199125,6100576503324101e-20,-5478607070270522e-20,-.00036631651977345886,.00016730329224556167,.00025493108839291095,22226604097883018e-21,-4460834588607826e-20,4891726226349813e-20,41964097110273185e-21,-6131431820233235e-20,.00022686166653692816,-8924793820791477e-20,-.00019302109650852495,.00023804561802531765,556913355820865e-19,.00016699837552209412,.00017965604481385428,-.00038349627139956134,3191863916031032e-20,-.0002191428537772662,.00033657077159139626,-.00015380926340578804,-.0001264037732578785,7844359819078606e-20,-25921418374194594e-21,.00038527701539335657,-14538798784193008e-21,-.0004928838914605993,.0001028736165327223,-6438312383352796e-20,.00023810111270487072,-.0003138610278263735,.0001400826247810147,-5891302942668403e-20,.00032747301458163625,.00039023015135071504,-7447541605180158e-20,-.00041729123414768754,-5226020210982729e-21,.00012735624759406539,3662905984705249e-20,6562876120307787e-20,.00021839305017589544,-.00011813071478151277,.0002169814330799935,9628751475676545e-20,-.00026080214823867576,-.00039654273422187053,.0001167125140248762,-4016262676008464e-20,-9660908197616641e-20,.00019201207703931078,3589467907609556e-20,-.0001321581580999917,-2203113921459693e-20,-9310837541985639e-20,.0002539171933422669,-40757163905339486e-22,-.00012808461454903692,-.00015139230658256335,.00022616830885492656,-.00010182951161811366,-2148301565258609e-20,.00028356599204855393,-.00028490640829138825,-4289175013874602e-20,.0004145591668924045,-.0001260379310736165,-.00039707365188554333,760334794278339e-19,.00029653613924018885,-.00021374066277618509,2327117911399279e-21,9516417231490021e-20,-.000680147729170702,.00037026320560729076,.00019251368934372626,.00013551091552941458,-.00031120640022949675,9684992877975057e-20,-.00011268464289018038,-.00023013062013480662,.00015401847444745237,6420534280956319e-20,-.0003497429765618107,.0006485339651306349,-44729954720712506e-21,.00021224544758897262,-.00034308486716421273,-37733988311935626e-21,-3886834937037731e-20,864986593905187e-19,.00014456882901125664,-.00014732698311536454,-2761325023053346e-20,.0002635436170520672,-9631500919806552e-20,-8032375598398395e-20,-.00018998607556105357,-5912725043037692e-20,.00014091011956727205,-.000129965375526217,-5035229587568163e-21,-.00015231914400671252,.00023099545000895144,-.00021587551857769893],[-.011113779995796793,-.03264498365428932,.03239332397703781,-.053019160588067986,-.05228963164641236,-.14090905182270536,-.10662971417607917,.0767432911258378,.19183514586283293,.09051278080603262,-.09834501649578946,-.011356541223655056,.036592642227365337,-.05386114520342726,.02133640185891116,-.047044247520027484,-.07954300486607012,.06913481526096213,.16070569312483246,.003845693903315633,-.08669557060029598,-.030081196583984296,.02266518207617302,-.023072771394334196,-.018331023996742943,.0011057635434971857,-.10917005303651976,-.046906120609124184,.10879721410619564,.17214824601663198,-.16345419009446593,.04738712977608745,-.05013066351126129,-.029615346796994284,-.03838162551818361,.0016626820450895159,-.03477979881909356,-.07094315047427265,.07790962934702458,.2301997612697828,-.14284459018595042,-.0333055990505881,-.012579026667957113,.008416322955214002,-.03299358057460782,-.048339483281004764,-.01952530866179105,-.06984453532422541,.014727444216795713,.14996686179447366,.07803165303386042,-.15724129008645732,-.0040330836908469385,.020646425620089916,-.010654017089976087,-.06865623112225558,.02429760117440692,-.00248772472321912,-.030227587432549025,.09022701473345793,.080842697753929,-.08665487622028453,.012959715152821044,.018917133744079905,-.04562303577648189,-.03273939111155515,-.036378708143565655,-.052934938098819245,.007262840131973619,.025315816651209383,.06535498883148017,.050830135881118316,-.051373434850408066,.012062843823364068,-.05392149517917579,.004169526857924672,-.00822648311683467,-.011220404620470506,-.007584883382162197,.05900004822275351,-.0399206568488865,.11125743952652592,-.02151903494012392,-.057332486848285534,.005525995387836064,-.004210488740013946,.009154376366908981,-.0295339965731944,-.004661891680095134,.08682679220521433,-.08790568197773525,.06004909473502472,.08223957443365432,-.06795099725920267,-.05283650885563538,-.08178791847111451,.043805514127629036,-.03591864415070863,.03094303412250326,.04887370765404538,-.07841929294906942,.036039114074194384,.15301950458013516,-.0020635318713273093,-.06214429501471075,-.004218297412045746,.01834272293845469,-.006300758423097505,-.011523161046205615,-.04725822724231044,-.028717665984571757,.07880162607227713,.0692019757290932,-.08005962691627755,-.14106514638245227,-.025481816722181624,-.02050899754304229,-.01550940323134436,-.009470541064192074,.014878235172793254,-.0034914923955158606],[-.04971843100034001,-.03575889242398292,-.02224283272765947,-.03562318295011419,-.06894626983188856,-.14441155948249546,.23465172605260556,.15846679355786267,-.0659719826581496,-.018535961144545934,-.024797174426993557,-.007636807485574512,.006622761255119671,-.017526536442783753,-.010789194077319021,-.04028603232029023,-.005696164031687334,.1397321836105699,-.04284104175594611,-.030912602586234482,-.05061285701670149,-.014451167351557435,-.033321133339262024,-.05328285157863482,.008495658270799577,-.03339861810668631,-.10205034437720886,.030196139746642148,.2111090058125159,-.08571158678594976,-.03076667731951701,.006500592107532695,-.03210762330314061,.010380556950672306,.03767059594921794,-.0562060877406645,-.03260370052730352,-.1561008405998785,.15115473184883424,.08746800240785815,-.07971426742988837,.018202271840872142,-.004510543134351204,.026832614720378654,-.043425866989209555,-.02606652386909608,-.02528972705916014,-.04209686959874565,-.07092572120010054,.2353047649955322,.011520678728863858,-.09581658456091145,-.018725466710660395,-.03704855812065811,-.02682191249783396,-.01958185753544785,.04467674875991068,.02880963595396352,-.05826188687569988,.024776575417213054,.12549740842491305,-.03592912939341686,-.08711888567377409,-.0026901477265302994,.004623747514651455,-.01805029602659732,.01677903389914825,-.012651134169698123,-.08994468500400721,-.061952592133401846,.10990524701743055,.15037999590612067,-.09016358068481367,-.035133862878716476,.019258114736171422,-.02301007896962138,-.02628302255772117,-.06621484314682742,.0036081782275008047,-.019205792810695364,-.020171831093293915,.1989806157237472,-.02415868145760247,-.04808238946626517,-.027408223538038137,-.07552513961268857,.06445412216125246,-.05857538201324869,-.008636818611504817,-.008603557448920447,-.06007705027057858,.045971736951263456,.1261833313396889,.02241086029687553,-.11049746928652586,.006961916938878258,-.009411296340127936,.015502770454642434,-.04843838105449936,-.04682917755552031,-.00022238890926721058,.0014117579120073859,.08952534381204688,.0791414649635066,-.09246249793068118,-.01804897261050772,.0014867057354299527,.004759547594927055,-.0017287964469103294,-.027304885422683407,-.03211096685661927,-.017611444082195685,.07341586774044973,.11601887154016219,-.04434827491478467,-.0984071844483927,-.00881828136321402,-.042990020804917144,-.03940265377754293,.014836527788627827,-.05063500634395848],[-.06870061977666025,-.032923512495656206,-.02868483865794043,-.027346807901848392,-.012437513369475654,.04530776482700738,.1414696366919664,-.024737285685323483,.021872256378449306,-.029614351891534337,.0014704403181207623,.0006144922740007053,-.065002449904544,.03664380823329959,-.032209783114478335,-.013719980201209792,.00426188928669817,.043978918430192894,-.046107785040272825,-.020623098141049494,.09266822988184892,-.08522650911863006,-.047326937943777285,.05689568993385545,-.03886774424531114,-.0917328495389379,-.0024675929250557657,.05478810995731871,.09232475402368089,-.08397650829996617,-.022272456922531034,-.0152787501100025,-.037660821714487036,.007948005039252179,.035560068131964134,-.05192514292376262,.004863455499818217,-.05161245009194064,.06992677022937326,.019603910194766427,-.058129948226766356,.03412046818670464,-.02278922943675725,.005680354742385249,-.011190673015587217,-.04520953921646584,.042701687889130674,-.027745655178843524,-.08307583567399829,.1566134871969524,-.028533516906845684,-.06401890449044573,.007163733294636168,.010946513456513277,-.026171760394870333,-.039176510971348735,-.052625382319528485,-.03261061584915651,-.024151118786911202,-.029592259235384895,.1436711807651598,-.017566095578734467,-.05465952396135736,.05715543878269193,.029811006572219523,-.06133985657961934,.040778203393560836,.011699351049567291,-.008824374183937844,-.13867569479385672,.0070547616779323835,.13839794109305759,.03459564127055502,.011188421962504996,.04842384205952972,.010037686002641197,-.001849752028092358,-.03785572945780738,-.043325856166240725,.008041188746280075,-.13690073357640112,.15427462008814505,.05318588242155513,-.0628488005805444,.0989080080739189,.024336051774163703,.0012517787347508663,-.02085091104539423,-.01045887168510497,-.013997622908016392,-.06299508039917381,-.1271771187032044,.18117010896522742,.12557740084057686,-.13691773676225652,-.022943723539645338,-.023607554390057763,-.005930858697200191,-.029008536818149494,-.11052936897449649,.01676636486201016,-.0299062367975718,-.010995032071071418,.17825885072525774,.052695253789213546,-.1585687154017169,.018373413764860413,-.0626192972782274,.02519282178146548,-.0018928521098937135,-.06784052805659943,-.050794234172886574,-.10116936098857549,.13362153032125096,.3407549635188265,-.12171874249866213,-.21070461874955115,-.08335948599574525,-.07847568766745316,-.029251874573081954,-.22249275032005275],[-.06557132981627023,.05738770283308524,-.13424650578557906,-.09589658463641701,.24651372455616202,.14475023251856034,-.10963067096889349,.025484984396096345,-.0066750222960001646,.018031088995289345,-.07282721762829031,.03072620730408979,-.044556908489582235,-.015540996433387919,-.05684501901116374,.08563323248437722,.10033013618746886,-.03742948303225134,-.062461794161772756,-.03392685415786098,.014833446973797017,-.031363558199583357,-.023246290106997476,-.0327584721013548,.02961216484574446,-.09820928377189234,.0779439521252258,.09567131375265248,-.0832456125771979,.02090571766159638,.050810743632591124,-.0391322080110265,.038703668840843024,-.040633395391036504,.0006752785313583094,.013989351386346478,-.13054119279823606,.04516367083208646,.11112335558160061,-.06373552516471757,.03778245134663255,.017424010888546733,.06158322351593924,-.06367375205409963,-.08535776536497154,.03471529887784667,-.0030215396455599607,-.07451461098895126,.12038888042278573,.11914516519976012,-.06649815958028849,-.05748981868984826,.02124787410688792,-.04339580161445786,.05609240585926381,-.05090562582130901,.030755476067636615,-.01704186923067369,-.08637267081993893,.04370717517162562,.07172909488097384,-.04617200925522033,-.12569107869407672,.06277755106184849,-.05487776937287737,.009849298301623788,.042534935799133616,-.025427465203307967,.004850414083161267,-.03453433126307495,.05714138711583339,.07182413008592944,-.0788566890824005,.04618658938424866,.01402194350192731,-.005972411899040125,-.059074101001239145,-.05231144745761093,-.018659392189258467,.01679541713523589,-.04857610065474247,.005696565881307656,.17000984187958204,-.14025171691578273,-.014920288189935977,-.02450105995756531,.06767970387277354,-.05264157700657106,-.07708134460423079,.04250499017663266,-.035988224869212784,-.0484505957175579,.04767468325269961,.055032983271467065,-.06476109655440714,.02029272112323993,.0052680731730131965,-.008724092125284879,-.06060669340950089,-.06911080849629166,.024795838594949066,-.02709793851891864,-.001238691496232761,.015076588937461598,.05587409661404934,-.027944142757713664,.005228808655026744,-.04832118189051454,.0859618445014223,-.0020462600675238323,-.11993808096408821,-.04960087738705985,-.09297380182954165,-.03198034913961813,.15102131486065962,.08275513010266165,-.05812569461482564,.041661463970234,-.03704705799323233,.000876268336261118,-.08028339097351245],[-.0340486219621066,-.013918394846682072,-.06548772211399817,-.04731007365314881,.23782208982702535,.10576669895809315,-.16563976884791567,-.0108553004703765,-.0788364106559585,-.050020076625922213,-.08231163698432487,.004622159286883381,.027970146226042773,.005895316254228362,-.04040394188418152,.08525380530113646,.028249211911977573,-.05679902522817456,-.038359856825438986,.0645616517837107,-.004954534081803498,-.00268722370959314,.015597774984475364,-.018251513667145277,-.059710086387074215,-.05715073284894628,.13137766031471873,.05684248925104454,-.02347708934561005,-.04715337162739789,.0008577029751011787,.011008761901938887,.005612370393199692,-.055914997492275034,-.028097049059282828,.04862452952582646,-.09611678916961594,.13044452791174554,.1272054903208456,-.12259017298086688,-.02244577462454636,.0076033086689639515,-.007813929706646499,-.040902985091359895,-.000980222289772098,.010151778602803127,-.05530879288878149,-.09226196374306854,.07871023494618042,.14963503373654086,-.05960116711405472,-.07591037274393221,.0697560193883311,-.012391419754460144,.016171610667790957,-.01017022339581132,-.009940859762634521,.05786281891442392,-.05350019383391824,.0023150521701103197,.24267633702175795,-.1627124626737711,.0030389904814953246,-.0019134583602005394,-.03193473372056354,.03124072934772428,-.013447900401826515,.018762854504427245,-.02719410349707868,-.06383461172931906,-.019315034866382974,.1729629692465321,.004777956656449228,-.04672408796801385,.0006375017978076832,.012018498525607005,-.04990623142803467,.0631023423942359,-.05911314871008452,-.0019439172858828069,-.014409167351918703,-.015148208183996925,.158027298534601,-.009547054530539667,-.14207668185762945,.10783009215784571,-.0293163415939047,.0049958861272639266,-.027229716588043594,-.027547849025221866,.011938104583316997,-.054219992876510435,-.09213502026012844,.2366571402781235,.04381912695915194,-.041978283190380716,-.005602932677075387,-.027255334727821774,.009614504323891875,-.04154993190319173,-.03406843633019107,-.012401382536206651,-.041537969321840174,-.04931433365199229,.16482326808377185,.042083362292458376,-.1097240094748354,.06603360181201932,-.007724959812059354,.0029248566859087777,-.08085063161269566,-.057690051594666086,-.037836445771667115,-.09375000983186849,-.14353454214499062,.17090805592445343,.14406736607449203,-.019806817871862357,-.037179860963505104,-.013199402310805103,-.04737800672527124],[-.08935579558985787,-.04359861333466415,-.04068549086934767,-.05631480149874235,-.06431725727173337,-.03630570340246155,.0871245497432262,-.025232182382037796,.06076258307108177,-.0169324426881141,-.04097456182492439,.0011692733530746166,-.023469947694595206,.03936015166522691,-.004433224342906196,-.014202479654525112,-.0704636648773633,.013142057597150633,.0033619826211813905,-.010205721175565105,.039510232304449916,.02016745030270929,.05693801155584716,.03417449164261989,-.06266677460391629,.08390039705725347,-.0039050936206950077,-.12023709783757955,-.01912747727787286,.0681952032045624,.004239692936547787,-.0247270685186844,.013195391150686318,.10092335285374379,.08373297809847169,.09360148822269915,-.028064279101364227,.1530929534721796,.01908068436728888,-.13458558446941826,-.04181911859599221,.023907908538223728,-.0036807630455928317,.007893862945026961,.06400696833171123,-.027474745577589776,-.014962346779522961,.01943103904009246,-.10421624372835411,.18788293784249166,.0038646939965042704,-.021850967831761797,-.07162000950390228,-.00733041969522252,.023479102591966762,-.03299246606173216,.07477193086079781,.11997396053811867,.16652757445893027,-.04345092572887981,-.19633494915962973,-.015120380697294114,.015595534851796003,-.04143571068691104,.07582665057516966,-.006269813566701522,-.1352326255832109,-.13542793759250013,-.07939999295566169,.013399321738180064,.2984644348332156,.12612688550553225,-.08208469016768857,.034499018867023584,-.06088746066634903,.028443725041023785,-.03612203963838308,.005128423199872348,-.04605609290697394,-.18431251645987262,-.209810670926456,-.12018234374910172,.09562380971931125,.012101575052632325,-.022524769880679987,-.04528247702805672,-.012822428753938651,.043771209187441484,.08044224153659445,.05368502763886268,.04066169032092117,-.010274132182098798,-.10557211882546326,-.07359578243436811,.038444068551446525,-.01907471602474492,.012245888918847134,-.0015393549215302338,-.02103651726593944,.05518243063690028,.0440936452282807,.028389644682731155,.00974360403842902,-.041472720807566095,-.05537768479039205,-.01699110904627927,-.008161761925085331,.007601624939662949,-.0066456574053765025,.04056509686862016,.08175131568741872,.050780047897429154,.1155676026022933,.05548306767964138,-.057897491813207046,-.1105898575072263,-.07182868196645323,.06197051129025689,-.030281369882132307,.01930483148357584,.05429693375685699],[-.2437388912119279,-.07231352508050291,-.04197198417546903,-.14300397257914568,.0615225969575571,-.030205439566140864,-.020864680638780005,-.04764788631907614,-.004129658790494567,.04027736046562435,.005909209292041959,-.06142621575884755,-.04922762165324958,-.07000433401936937,-.0642727614873787,-.026633980149117817,-.06574138461396309,-.0510503164030645,.004341077279830428,-.01611617835404172,-.03151537271021844,.037031195841364675,-.1228147574490851,-.030325889054245894,-.04712194689963531,.006945477959475678,-.12020262635091686,.033919560718345204,-.03650146838528817,-.02324945518003005,-.11560461380300818,.03838719766063929,-.0026532986572997824,.06160145270189432,.10391565419224812,.10819008673388165,.06868520306990575,.11775867403705874,.017679110509122742,-.05890182129315433,-.020290611595912264,.0001469059966410502,-.12261361036045612,-.010208071253787782,.25551979619962417,.13824223662087887,.1446794738346442,.13522961725652033,.19144244169061975,.3152710823580756,.11571778386301039,.11681561560364913,.032566473003269106,-.05027812834573525,-.13473831638652176,.00889663273590241,-.06668638820919999,-.10871364490994836,-.1865898629656108,-.34157171141342124,-.3463849380814918,-.011264008251140406,.029142444614928986,.12461122431395127,.10800578593966685,-.022809897357387282,-.04743159485324953,-.01606581136196815,-.012088172884114928,.13024386066616567,.16585917678227963,.08223171490137017,-.1807342728182353,-.23905771961269479,-.0034760942387594,-.0025528511815767485,-.008070327040005876,.035854903717420804,.06088980398458432,.05280523963556441,-.003315996418949821,.12385169566242266,.1882404204902328,.2921006004212733,.11943421064782488,-.07449416534755314,-.03746173468446186,-.02373764880104703,.07259857298818612,-.0004548609529310965,.000742982347122334,-.0015928557141097338,-.17246645124725063,-.15444027225745488,-.13465384352760257,.032776686516006764,.07085980921638423,-.0004770524214243281,-.032343629149890175,-.03998615774381613,-.0747523883878472,-.06985171147299116,-.08281924695145423,.03277817716203964,-.004293778232758214,-.015012757926196954,.01819273756147026,-56098151787711825e-21,.019859569434228445,.03307416609427032,.01657215652083551,.09196410641313665,.07337691110550851,.09847828591365677,.036105178755291706,.05086952098687199,.010385433683375911,.04024210563212227,-.07013475089051985,.002804107584466531,-.10929235377523264],[-.07611894920251742,-.019269106767557935,-.03175453504599139,-.04645565349145586,-.040704384737309626,-.050843290857606804,-.021973706618717698,-.025543401663111642,-.07416056040918946,-.013170588459795768,-.11347265323402626,-.05722789305562933,-.029590820633760687,-.03424362577024041,.006190533489689523,-.009464455719964258,-.04462566755515039,-.10436846800575,-.02868624932261281,-.04109001764788102,-.04615186981661845,.009832594893937292,-.06769577838509153,-.02801270141413941,-.07139685716526316,-.07535307217786064,-.10565554313610695,-.07552279458087882,-.02628396178676297,-.03103543937362352,.04598188141517205,-.029752407317735798,.011392587697051898,-.1039429255200454,-.03476444142769863,-.03784605600000727,.00012123885743986484,.09127870654753747,.14577205157542866,.1104215855219802,.18869952301023718,.10738370259626208,.13268927139759373,.010378228400827957,-.05273440542676597,.07627991587110855,.13003488750036463,.24685954687761555,.21183725748584104,.24704340387352622,.22867523573571288,.03692105718898259,-.028737222239043028,-.07038461578867175,.0055155357845693,.11568430941686651,.10660133014829948,.19511953592195094,.04542248983932193,-.0757682816724795,-.18361820859428674,-.3180407296251035,-.19549450758187809,-.0779951641446663,-.031296132745874644,-.07732791740627362,.1287056402740756,.04148651653515334,-.13922180905243858,-.20395686432544152,-.1572834919140717,-.07216672289336687,.08656396312924423,.10757801321268952,.0818090030611119,.06672406040192093,.047445258557963374,.01763919853891298,-.1058218276867447,-.05675437854673249,.04822435235570756,.14306872525152498,.12358807932424302,.07172675453500708,-.018593224747300865,.06924719407023926,.002973789338171648,-.0012683824671753524,.005861656242400579,-.03995517877699061,.06986818094196388,.014017003861568525,-.04660091093892585,-.04706833338566816,-.04668186328123152,-.024440679090069646,-.037553368502167325,-.05913830213731215,.03926952632374346,-.03380315978502683,-.016677251343357832,-.036287370622927695,-.03365315850639354,-.08105461811920786,.02244873177796554,-.05186460570451614,-.002256458892453801,.00655005685680992,.019613695988714784,.03567461915717384,-.08813793560494294,-.0498610068690889,-.04652333525032509,.015602894296518968,.07030267878057928,.025611762172576102,.06845737037990568,.035739036571478075,.014800222944481767,.028993857532204525,.0267735236457695],[-.05878986641924969,-.03992289616881476,-.010605417103711993,-.01849945772971233,-.004865080190320413,-.060301330529616955,.000318344693392425,-.12557104846760686,-.08000427404698846,-.13698273850528309,-.22799077610365462,-.025563254532452423,.031596931721125744,.034180802606017344,-.05037968319057705,-.03690057459729384,-.020122798822353932,-.11425996362570746,-.08244994909616676,-.12939384502163268,-.015453432533256775,.1652599896996217,.00547338995617791,-.021933035683807854,-.058344539474112764,.02296171324966527,-.03743706837426452,-.1277856597415159,-.02889063933688247,-.002891920932796374,.2694864672144822,.1755823507659644,.347335943805435,-.0990056047654185,-.03282593950620348,-.06517444533813571,-.02845735040351216,-.06260237229850985,.03202239758295789,.15695159271707296,.3415429967359971,.20280139720653914,.12458150522764966,-.09337572372774013,-.0722390206835535,.009094716391750565,-.04438901528392604,-.052574599103869434,.029479831254029615,.269248596916258,.22826750438753873,-.0022877017320989818,-.1114646531276304,-.13529114203352183,-.15036111092012305,-.08584275531476493,-.024536907507225265,.00868908074973005,.02194420964235891,.16653403493301283,.08152009064661242,-.14404674546435942,-.1499010254142704,-.11121323411132536,.0010729953777799395,.09809523451113474,-.03422119724863869,.004017596168495318,-.018012784825030465,.07321010680580091,-.007227210625433467,-.015972640001127802,-.06100368766466495,.05483342618811111,.06757633914572526,.07412701786597606,-.04242393057967831,-.03733736388249516,.022891392960963857,-.0034269311956898834,.04377607969407446,-.005555019886568348,-.06068485209626889,-.045928233440519814,-.008883095175340736,-.07757461777213527,-.07306857388940499,-.007584522491668699,-.05870405744262968,.03242972778850402,.11139987187807623,-.061069384823273565,-.022957481391546936,-.08145666831072357,.013486103859614872,-.10699268871745335,.026815142447461103,-.046958076560392775,-.009564367718198612,-.007812626535492735,.021325652288010453,.027800587316513206,.05672864586254596,-.07588999178312969,.001849623431887229,.02293374039398799,.013435613550251885,-.0308796268041236,-.00494685886235564,.004099219900474169,-.009140816111173159,.10871928144408688,.020712482757044768,-.030869482809578623,-.0019257988508574048,-.011927083397448635,-.08140574063448228,.0639221123679519,-.010456133387573327,.03707660212821462,.08883535592177383],[-.03664125917408396,-.02231878233881525,.024522274312524583,.03344049176094059,.08832531880509731,-.07844722319120005,-.047208492835296774,-.04725941667067688,-.025215781435357056,-.015414996185524978,-.09211510123803548,.04402413126160831,-.009115398771310443,.004897427090914452,.030833576332085333,-.02076523692106788,-.020723615749795563,-.012243854655765614,-.04628981737770624,.01859320434467141,.005145334732878801,.034378456965152134,-.060076223671287794,.05746226251504405,-.02960475988971381,-.03298476106224857,.01979381546009243,-.09180187834560868,-.03956459119173994,.14253192152349636,-.01806439485632861,.012289491688936907,.04911968723662781,.05713145555326994,-.005396850998742632,-.02777303740430507,-.004555343723759847,-.016293864219002016,-.1018126126459068,.2150785308613384,-.03923357354407525,-.01388758790666203,.04550692138583132,.12176852006259906,-.004958536521353366,.012483286148479648,.00022150651974826852,-.004748949499599517,-.05635960141439626,.17519663761795012,-.055694439201051764,-.08219683971653795,.06453774107784033,.04748422973872729,-.0028928449210207825,-.015338697146168576,.002703261150090952,.006749796318342771,-.04024813366872231,.07896814108081664,-.10963403655958821,-.17062543905350416,.22859560603386642,.07851962872419016,.008033015227410876,-.01142427708908322,-.015145649505435649,-.02353286828418851,.009965961234181087,-.02674309919977451,-.04241465458951302,-.049675570929287774,.29646343280477494,.025690805425905093,-.04851122793262243,-.10023827450589579,-.166470124185738,.026747181544677607,.03491899287778923,-.012381071612453791,.03132896084018424,-.03808798675298581,.13554403224476577,-.038600519161136035,-.15955152669761682,-.18650119722295797,-.05706215548943987,-.012769517962987352,.014753730819575053,-.034539139458789864,.006058740052616929,-.009810871341003483,.06911727762284098,-.07124414623757076,-.13192760007023469,-.03181589684860323,.027197733872446832,.044915537687674,.13641539907523023,.05154134410927202,-.023022917497770818,-.007502464706218043,.007530182665296141,-.0593475280116412,-.04423494728466312,-.011581128699856197,.0014665467844986665,.04713569829665076,.015656423092764042,.06601295637665004,.05820047335404656,-.015586985696736753,.0052092264230974294,.014817241711833552,.018388023474896837,-.08667587709882278,-.06704406352277273,-.0035215449899233878,.06416137393114985,.06531849854882125,.06725914898915135],[.0045060454140400386,.0456551203749645,-.006483070071701782,-.003262843608432653,-.010410124902832244,-.03702402040624643,-.03696326647414959,-.09109390602842458,-.11864573227941409,-.0642897976877913,-.19247581164633484,-.001736762598627155,-.0097469459578441,.0016447907097145286,-.040872882087491146,-.014221224057596007,-.03584268905350064,.016146856355897986,-.03984313919471384,-.09313042056065576,-.002374653898420077,-.13830477342208627,.02842845222473841,-.01369746807949367,-.11156935100514298,-.00898642064539835,-.08075286469116237,.012804209858369449,-.06240645031613498,-.01072588083421415,-.0334198537759676,-.013381072105187686,-.1260137612796078,-.001165141498430465,-.09630279416083432,-.03396083363654561,-.07271627207480294,.035903231272948394,-.0503667761298118,.039465836216112535,.08959524095799345,.08032372276092553,.1569423059368658,.13046741922551686,-.10541702655016309,-.05508012611731074,-.008104344189879431,.049795401559017696,.0850501178976381,.33220650657354384,.25591351064686196,.17170416430885482,.11686339946258112,.11405546450621301,.22946835883838218,-.012135608835537007,.08366532451625484,.13743718640771305,.20760286167445086,.024810385626267768,-.2548528703799036,-.3763512092744435,-.27148633180868637,-.10307518032579147,-.07375802107706905,.006322005152026515,-.007161424119159696,.02439463953541414,-.030595356710155303,-.22377146981167628,-.21688041618965234,-.06060439724464941,.18640642704652977,.1411775414679666,.0717157086049539,.013663567087826838,-.059637629532230764,-.07913330438108314,.05150110041211838,-.10958403078776109,.0403576535282537,.24551987265937023,.19850031772812765,.13276295660894386,-.0033277520526472926,.09571728127089923,.006075481161998112,.07021403207490051,-.06029573735270763,.023305858534584164,.03624168330198945,.09478519668470878,-.051030541969498217,-.04858206078396703,-.13620414142167206,-.042785196097045466,-.055491249841953014,.0010026144494500872,.011273492179008152,-.007041741738462531,-.02690303608673969,.012495419954788797,-.004965267489168652,.014207910106334196,-.05831635659918213,.020100992201083454,-.055565658068763756,-.05825785057728911,-.12154724005307756,.036276619232864585,-.11927424459722163,.1109090327897103,-.08720458924414443,-.002912921205281794,-.02502839026013983,.012106502056846706,.06861388637866325,.0713742951200057,.09812526384527692,.1403732243896444,-.002956042341701392],[-.08666670845132765,-.06556451914539954,-.023817463535297907,-.020440748189549322,-.07196961406511598,.0002866895100226141,-.04872757269467967,-.025160320872547617,-.07150219876728449,.009494008240030879,-.07238658909465089,-.02515378885894442,.02345985022475472,-.05950332009913685,-.04561531120543299,-.0835197702842417,-.08554321902563844,.013730208280768347,-.02114898129517523,-.007316258817724797,-.037712812535064255,-.0747738009766015,.03462239265337725,-.02547365067836567,.030186212545732116,-.019963247487852623,-.04969209404043104,-.11327298065324004,-.0745192272171176,-.12603792583344542,-.03706399784431323,-.024954205133118107,-.08373596490537769,.02475017354637457,.05933028270181469,.06220474996892193,.17133136972067453,.1612164822474685,.16387294452638612,.05830811732360376,.025830807003138445,-.04347998217618816,-.0416364296879362,-.12914102690849677,-.04010936033682415,.020146168363946934,-.0014664956647692795,.0913420164679114,.11971706786628006,.23880056181382195,.3099751928891531,.2462192594400915,.1858678558103501,.12052801882874073,-.0034211287368824117,-.030529992172357766,-.03229057765056662,-.07619354278341188,-.1960657681886227,-.20015100244650072,-.19677279724795954,-.18308786989283266,-.0005571348010621688,.1374350415823574,.12949126333024466,.20559599476304927,.02351134428016869,.016946777735827437,.07362396828619763,.06564932347225631,.06269941357959752,-.05017906172626907,-.0922520621441229,-.22544582106641978,-.144988552828773,.01919825020697947,.08296161046033787,-.019486237898005958,.011992512029289193,.04132998105832346,.07636271244077264,.031761554053674354,.15907477211435514,.1033646508693545,.03986612649674784,.021911878458555786,-.15923424669690406,-.013828911493878555,.07621409773017977,-.018094163035829308,-.02278410845419094,-.07576679032280903,-.00479472472165271,-.12287034163039613,.03115869695322046,-.051655022084203854,.0961873164812637,.009567098414075013,-.0316236624247789,-.05256799777879337,-.0031420233178607662,.02330873392779794,-.0023387082999069553,-.009448798609391264,-.04582399432870362,-.005481024602380563,-.08125791057512843,-.053087043188049285,-.0010084105650565306,-.10300285383556548,.05010294929397674,.039084033656922076,.0007826041668727857,.06658472055870629,.019512702741612473,.07854049370674819,.012933307469298647,.061861312662757253,-.03774862123595534,-.044013957061032435,-.058653414400645094],[-.23765593793991233,-.10644252010202958,-.14205331737791968,-.033409658821102896,-.05174652574003901,-.04902914905506061,-.010142689387288009,-.045800121111205794,.034452092003027894,-.037462523290761315,-.0526175683528874,.10954838938856398,-.13610118046500422,-.009547151192997195,-.1270613223195173,-.09222879836177242,.02126365188275801,-.08002764243120157,-.0100550311904971,-.021203318677089,.016576191285134906,-.028370386427869553,.3329100308690229,.2809010603820785,.12847553299199477,.03379276394257304,-.023904470117744384,-.16851016358623308,-.0060729181420751625,-.023245122034615213,-.056640550891660243,-.012010707479483837,-.09877409447514467,-.06450432755021224,.10265691959773923,.2555423371971479,.24276990386303868,.21966976582871933,.1109109095262635,-.10183584175603527,-.08745964479530179,-.0029720828981545685,-.00012924753214214532,-.02507997701344871,-.08643506110440782,-.1808754771319409,-.1135226786257817,.03288961120236014,.15787019926944854,.23051337575410985,.14879854133516468,.032437611765298205,-.05705919651139533,-.06930807765797053,-.08235606459943465,.04228548674166778,.04341292393318395,-.07226482693958322,-.166891794497269,-.16026349114722624,.0284748747846941,.1813119848910822,.041852912264988044,.004930652716399964,-.0008324974963782924,-.04783199637200942,.0010252465231246899,.017497628114831826,.0740319720382964,.05406275931212354,-.004878867885803946,-.1017614042122941,.018693005132704797,.007621049297355767,.008593458603581535,.029130058487575196,-.07672234087840843,-.04443504101988021,-.0419041810848098,-.04218165703359543,-.027448364698935662,.043452694941417874,-.014281471541844684,-.11364364120314924,.02162434276722493,.059887867734099376,.048249692701759446,-.025917915651940925,.02805763343822287,-.035965266748084215,.010590677166796214,-.0612326934312252,-.057899063583557495,-.08844340564057801,.001260097739806506,.015191608284153623,.014315608183696132,.039038170262391945,-.01107037296450485,.004467558279334817,.005152500191803518,-.07685640846438324,.024632015663543207,-.04693364754890696,-.004311800945201054,-.041968903018102854,-.01569526374931584,.013525540172630385,.04879677361470204,.00035467155966114033,.07190119836996509,.016274926781300325,.07092347738292792,-.00882484521729196,.043457848227967125,-.01463905425635062,-.013191689698509215,-.03752432074947305,.024708931479837257,.05708661405727926,.005857613973619061],[-.024541961538258487,.03267163162338621,.11772757167816214,-.0341742331687588,-.0717426324714492,-.16174536289395333,.014164562611569745,.019531072825155295,-.054978468415161165,-.0038956868428951796,-.09019611379000925,.06481225188516541,-.0472339389168712,-.019133679594543138,-.08094811594870567,-.1101849445159255,.10726549986933923,.11986161329611322,-.1389804237872641,.02946980586009676,-.0699411974612361,.10165481762063706,.0042591037232074525,-.04934754729797832,-.08366141657178541,-.08765584371719554,.020522117345934385,.08019181740581913,-.15728279592142505,-.028885847231444647,.07354432109552318,.2070634438107788,.06614427870545567,-.06963188166133302,-.0553872708879464,-.009915896052403297,-.03971779391566155,.14583324737347106,-.022727060768185453,.01771337471880642,.2806207518407471,.07576339464353285,-.15759577923577814,.12669291481079187,-.0065957965533044935,-.023038500644189407,-.016203548822575214,.011443563605701524,.031044733818071997,.09939000939660528,-.05047331939795989,-.03075072393685019,-.15956288120485115,.01286776308068685,-.1670547469453125,-.04796383196176479,-.07740295582740828,.025311426471354537,.040894848866229114,.09010852492868432,-.3117498185712026,.059978928418208476,.17392049002395632,.06821512672796996,.22655017146929168,-.11277740982522262,.015117918949874534,-.06289972480687755,-.06994549012447958,-.04490974228702188,.14433444462851913,.2923293722639599,.1955873798585851,-.05785071425898121,-.014726496195370711,.08884076116031449,.26941150721674784,-.05403377101100326,.0111591965306495,.024544359195103477,-.005010275987762103,.12289773365466525,-.042268194241055185,-.04507245610456721,-.023985660885704002,-.01877664162645465,-.06487210844107691,.17923288498496057,.017718431179447353,.012676757235305675,-.08414191856302267,.0927046391653705,-.14741704405082073,-.07740529352468248,-.041954355353188345,-.018944672617029513,.060652295217796734,-.04456309707948054,-.04624883612665029,.033353665903115184,-.0018617038323594237,-.06767774687847654,-.023333614214616976,.0136221936446786,-.012602435194539463,.05614191590875041,-.019617155818133693,-.09341602139109267,.025935720217831887,-.2107611868683418,.040245343412419005,-.07718887132622963,.01421259796769439,-.11506917731449372,-.08020994495632774,-.12403747829586499,-.034792135391462455,-.051307124154093234,-.04447890407041982,-.0424021340836127,-.07481694410337217],[.011580340758841009,.07646341230178315,.0007980340485847198,.048838428314634974,.12248324878819095,.013743650358534375,.01886113812138237,.011586008838870166,.04538974603279466,.03169337659425382,.07498964911220182,-.009866261755352353,-.10340488386695112,-.07157216043448571,.004378747473831513,-.07778860136521136,-.019559075604586286,.012039914910358105,.0018614793888236656,.017976562122428465,-.04708343149187328,-.007136790096560307,-.1755555075346009,-.0800290909454322,-.03180022376907658,-.05759734706966019,-.0225914309402037,-.024015557136778228,.020306356095828103,.007064686590984591,-.04974550929527993,.010918207861832434,-.007975957405642796,-.057844329934535914,.0404150927566851,.05051297898637875,-.02867983030295244,-.08887808505812922,-.11596341833461316,-.14726999841028157,-.12186458373388864,-.013719238451893214,.003233782779039059,-.10004453617576921,-.01778352056711716,-.043426790290178846,.002516237987708639,.031180239925685315,.0925649386768777,.021358915086836516,.17681853360539368,.06626948027510339,-.056798463424251405,.020214558939605977,-.08873014020716714,-.01904345584185504,.1214938649443671,.03967073622873205,.12658659654781676,.25102106759056364,.313616299442317,.22183627286461596,.1359746158531317,.10115711474812561,-.24302403404704537,.00972961252553064,.18356713494692423,-.026126940847291485,.03441669500112385,-.004751712035568109,-.19721799705664833,-.3026191738381685,-.3148196023147316,-.1434027289225949,.09324731668986243,.26017905533217356,-.15231835953736883,-.11886377910271781,-7950240878037973e-20,.1499516734816025,-.07737337854954085,-.01599863660324637,.2521561754016366,.22726143797909176,.05176193697442563,-.07037576738487816,.03930414272863277,.046344087243253736,-.018432448385731964,.22509099226938978,.05991765954553817,.046242964966830113,.11839665900852914,-.19506738398455795,-.14025844275720523,.057466302603268626,.11019012358572904,-.013541932475265537,.047028476991846445,.024667584373991497,-.0058190883316349695,-.08733652527364544,.08909615487577643,.06500967167977309,-.04333820555710416,-.019092524599200814,.14832868404659605,.07802106964087593,.07072421293402839,-.03135841096502585,-.07295871402641475,-.1311266808316646,-.08626374008281915,-.07284124228253856,.07704292723293696,.07756289974428618,.10315256178304716,-.05345771200065474,-.04582744733899361,-.02900391837847402,-.22848349838247778],[-.06905121549035584,-.13695919912679141,-.005656327528274977,.017174473739632906,.05475099046543196,-.059932166353439724,-.015330830129175563,-.006819228446751612,.0012622017178931346,-.019229773264106312,-.05976102432266391,.07869285696972217,.1089393724650921,-.07568139444402566,-.20952756667787314,-.005312913294763244,.10044708684084892,-.11640309355112993,.02435615957399239,-.0012586164900474876,.05069107388375764,670843932146694e-19,.20191076124513427,-.04518113305913338,.10144127341109486,.11705452040763065,-.22632970742930147,.0184688808155756,-.0013541832015389887,-.12017877991510166,.016842236983854095,.052652180804933044,.08314551113070343,.057329748095278965,-.04037471277618378,-.11575057028044615,.11707621621679364,.06967278501868657,-.13863634203166464,-.07960798308224916,-.022216919274236187,.033593966744265236,-.11362588566413499,.10269722191626784,-.24155215048670942,.018756954826990843,.2795615740189987,.039218371860729156,.07358848034574486,-.0448889991570369,.13769429349072093,.0032477373467352548,.022428521170885826,-.03846564053828194,.031154883554520594,-.16441653723937766,.23625286909405968,-.08142843240593813,-.011107263657897232,-.06266640020700553,-.17075494746168615,.27269490990139,.031157268147637196,-.055470185891144386,-.006952885879328791,-.05343628199397289,.4253706841445903,.018283114946247542,.13283560236845615,-.015069149158958085,.10328347994406929,.44999154699931465,-.0011928954570129824,-.16086510891352077,-.12774404557332408,-.04209917936869759,-.0018649195557395998,.24605932528385696,.07429826498160587,697844776116844e-19,-.05213562694105044,-.08674501781876036,-.22499073514863255,-.04534478939567861,.0331080659138004,.032025942933416617,-.05369969730872638,.03362435602342259,-.12434062876294572,-.13435098170091592,-.10102320426887956,-.10333974326967209,-.07274410409852337,.03002607925519314,-.027686487813203597,.0035344601119742178,-.0595921808234547,.0313533871549327,-.031956460680317295,-.18985564540590008,-.0666739375710196,-.030281628842088536,.015287505098408646,.010680344185151468,.04431667406026578,-.009200214429480782,.044711089149172344,.032936423173475296,-.028902000094102702,-.019831895072516134,-.1083289835481895,.017001459487365853,-.016581037303639058,-.04745248079680795,.01964408724082841,-.043525154566764424,.02279365672743948,-.031968227415916144,-.1191326261973889,-.012951530456903462,-.07794590627618334],[-.004218043520333323,-.177849827056837,.10345176940428125,.14691821176034053,.032856437685713946,.06990618872851263,-.006394511069391708,.012858674522952751,-.031362305638645026,.04878846413475773,-.21008276813725216,-.14262226241092743,.2735068267070019,.13675983935772454,-.29666625074261765,.1307319827053882,.05287935422186301,.2081906011712086,.05469233552333722,-.0707121892774517,-.007230298162275778,-.037876207980575435,.01620529896428768,.032611323558465855,-.21236590603680106,.19488138090854343,-.05018368888799876,-.10106171926311576,-.19451804410928483,-.09757027333480761,.14803373393480754,-.11936458691698297,.09035709161416731,.005992345500458018,.025455653887793486,-.019228242751246096,.08419178533389118,-.1088352303605908,-.1970966632622524,-.08465377782965226,-.08688814478949355,.36808967859442904,.10964208390108912,-.06453781682173701,.015795651214486534,.0372255583573948,.043017883593270814,.11952788902899536,.10395017914010175,.04553068266111155,.05441345422005224,.24912633653507255,.002223137297252974,-.10580881478072197,.09008761390657143,.16662136065460986,-.15730886509144254,-.09124852539366271,-.053757621594197856,.022178794252692133,.27116243919778504,.3386687989043923,.14040194814605061,-.051936697245067276,.013903415563632955,-.06567603955564724,-.128255822012439,.19222801891437483,.06617668613631897,.07380389825587082,.14569502232430348,.07116003048056466,-.009545659600963374,-.10489910337220464,-.0814579207091837,-.07898537959076238,-.11641729288088618,.02271274135586502,-.04078357320429621,-.005662258943002986,.003683593255068004,-.06678030919384308,-.12713315993774849,-.1586600519695244,-.06332858622223766,-.05575975878394748,-.03745808657448742,-.02246068529533081,-.022028900024817097,-.011882201801517509,-.046972799168275,-.1470120455163894,-.037217728702544514,-.08283121886988569,-.0016295615745458014,-.021758715372862947,.059906725662667415,-.013176728966978149,.06451884578598786,-.04090749352173143,-.02724481426696284,-.014614954526350594,.11052684024818323,.027444907166189095,.022162414399074806,.0024547001841418916,-.01609068146442251,-.058966580405083346,.021584412865348603,.0327652511050653,-.1716263843502637,.03852569660342458,-.10090104298395008,-.08275548039706716,-.12651405684060268,-.031346851498544215,-.051126139081003386,-.08804630534441346,-.003187155224522592,-.02711013335703315,-.11431300136421083],[-.06692422713534293,.041699164002372696,-.10385522794561593,.055675362062145774,-.07426047046232623,-.09118996048071717,-.045789683018577006,-.05340854661614097,.00164106322835709,-.010001962022561817,.021791861105379333,-.0519512913238683,-.07020062246220365,.09727987658203881,-.15048632688284508,.12149505097298019,.015842805768137305,.01783019614395083,.028679225099310354,-.1309301585947812,-.003272424996237158,-.0763925607801052,.023827921599709007,-.10048639075186741,.05764773480097791,.14769797654526404,-.058573134153914214,.03656647088725989,-.03811300125261728,-.035949645768287825,.1321495021982136,-.11750728810678948,-.027309528175229383,-.15554238984918572,.18384157344434507,.10897982741577553,-.055054919090396615,.23295461106984391,.16692460259498326,.3435082179560621,-.06181893528790025,-.024811829586858465,.07996342931317071,-.18727278866453625,.07713408949306179,.20554995099374251,-.02510860245457273,-.016911421678591866,.027522221377421628,-.18467242934043285,-.12870450689623072,.2705100330044119,-.23570033354568337,.1600690210988466,.06077273125729859,-.040057046042739526,.0061976917126070254,-.21240599027215282,.22776373257918395,-.24459850621169732,-.11110091474536704,-.32900610024199545,-.0659572745932869,.38918437667082284,-.03706198899848393,-.013214304459370309,.11361559841851943,-.1311609141686415,.26148934106645616,.13109860511874102,-.02559270333763761,-.10769559173489475,-.029541835495651814,.21030527945911404,.20083517469185433,-.15455102744651888,.09848594172144295,.0537591442107843,.082713231452363,-.24255028029402606,.0257336570472612,.17680889892790308,.23330773415315006,.2775277637359232,.17725610536084593,-.16258826629493126,-.17144766528315306,.08364442451113455,.016994501600820736,-.07147739754052639,.07491202436334046,-.07565486524045649,.021346987911851578,.122851568542261,.03174117674501058,-.07971191921163676,-.010975662352579296,.020719019955012588,-.14947464235426425,-.05912634010598853,.025068359943792605,-.07695432573770543,.01069978220983156,-.03572638016686003,.010452571251196202,-.02080143368776719,-.10029057450694524,-.05347120776294563,-.048791402971955875,-.04340697149663218,-.10411181696202407,-.009611579536761644,-.04012233817738498,-.046812122680620266,-.06405811241708922,-.14541168506254615,-.07567973026400644,-.03246673865673291,.007979069550343144,-.07581427323024105,.02030348516686146],[-709566052794347e-20,-.09505143818296452,-.08788157558086013,.004706240869816247,-.09802726327071064,-.0027616522983207395,-.0972271272799842,-.0630007371062122,.1183446266588927,.054456621706851616,-.009941350269921295,-.0701391953356735,.058249435624697594,.03289065810180454,-.07790879665087327,.12060553802938856,.041916937919234294,-.12018601094319402,.024991064566815515,-.15610551053004948,.02744736184155717,.006169180646906348,.2227792373999314,.07777153698627623,.15813994477460777,-.017009298898611493,-.14311974342433334,.17959497330783272,.05152575484703006,-.11409305598330613,.008734804721459079,-.11631550153784051,.014926258001363192,.035969081785568666,-.05362584353691356,-.023997302411323432,.19964826933410396,.03609677601766327,-.0492108086280641,.12245938533273446,.06061126929931415,-.09579693275136134,-.06951938657502774,-.050249772835886296,-.005837542816139126,-.012563499903927425,-.14780320613165895,.031772227910289275,.1340288392048273,-.15156587379880926,.12631446141014752,-.00528899530076795,-.001966825944666885,.05403033642006514,-.06363140317086635,-.3491984282017457,.08631600223051457,.1498086851219177,-.01958777908962751,.12206293626181336,-.19933801771288356,-.04802912870685339,.05260106817645469,.038693350122585096,-.09300705047400432,-.02556334426459282,.177347641964092,.22163601611492076,.09468068745167789,.03798535351360027,.00888763906212247,.3324882968804432,.16504809583361016,-.007867568306585793,-.004089442342142393,-.07388229257667839,-.023509082885282934,.38130178103352774,-.019291678040942513,-.08684344856036832,-.040173020823503824,-.04644318688990192,-.10185859440346755,.16438891805551265,.0026682289367386675,.07674917445874799,-.06794769221690736,-.0010386668473387935,-.1071413883705663,-.03057659181029552,.032786203858462565,-.005551088212040679,.020069023492512786,-.017109613552384946,-.1436550284492504,-.01671177936251748,-.06988612362481263,.011359667056578288,.0048980919655428265,-.07113085832567206,-.0655454347719733,-.07979468812911322,-.06972764987510671,.057019363580092276,-.021992787171872023,.015178002477788638,-.00020471363886212166,-.02551443073604223,-.026882894230500245,-.04529785380524637,-.1583259300662112,-.03142874931209887,-.006288840890221775,-.005780758329521199,-.08771917581213398,-.014850613830471766,-.09857015749334436,-.1178588681684648,-.058161768326308934,.02549633093721411,-.027500922923648384],[.03338587212363374,.029449410773330013,.05037316576022653,.03375955332056181,.04397821217557251,.08318007698295568,.07168667676840466,.026805901274190462,-.04021294852733876,.07445576589969213,-.015556797943286706,-.005234974918222002,-.0192416975214125,.05581160077211536,-.0615556921400091,.022157119108767706,-.03749977104188705,-.09184201339517832,.0021346112094529357,-.07752844587058055,-.07033956942792571,-.02184378008695914,-.028323350880137224,.00011164923792164605,-.06304367896930116,.0312281473289511,-.02781451796188883,-.023586402460836806,.014274870264679794,-.009911294862428394,-.03942160773539444,-.03612469475518851,-.14334911700158648,-.030906231546069748,.02645680536402054,-.055731905472351545,-.09979102306515067,-.11300163966955051,-.09670230764839448,-.14134937562707614,-.0957620993423668,.012996731697811542,.061452509807262426,-.10845706522050219,-.0959545356508271,-.026481658468726504,-.09342212328404359,.025974710463679895,.048411867352889076,.13854747029920722,.008987793963835353,.1412865429641629,.018873766998065353,.006861932826833013,.06602899875587977,-.0695769909258018,-.13630992697783664,.05326103549591463,.17932579331025728,.20451416645740492,.2541788583442864,.4279401171911464,.08044763293045501,.06080781290645063,.05097923191228729,.06872455106216999,-.07958512546717691,.16947242780377064,.07175039956474313,-.17602834598556363,-.20609506703378996,-.2758518326523662,-.45996207117951626,.04197708539224045,.14013188266658397,-.10129069427591146,.04203209765353061,.0010700558006018247,.033269813089743,.04526128415979727,.18492968093047082,.11250515788380208,.07914601199788789,.27604374526273284,-.2933737982490173,-.03240496208140364,.24482947691686244,-.11730122219590641,-.0003930817307346082,-.08285521046720493,.14722185737303153,-.050887412106644436,-.11313790447392723,-.04597183780354573,-.129764526821759,.36520902694991747,-.09182199979949662,.08586439033749481,.07651271554227465,.1029210140799042,.0027325839402362467,.07058671033367886,.10533730048009346,.11195874976952475,-.07214784390727155,.04958613688607464,-.03105073259803546,.14407295372271284,-.08558760630063905,.08722880414707304,-.1719062867308017,-.11561123789185015,-.09287516888956364,.02930881212576048,.03997500953017151,.12185883649720056,.10737184929932188,-.039136971459624983,-.08075374206140308,-.05337735427482881,-.19749855557352708],[-.07885663149000183,.0286097540412072,.028065667582647003,-.02183404125227629,-.07173164422917319,.04194350302169928,.0034420782526643334,.09985241677210488,-.07205432251463359,-.14404103188347261,-.09945327244261506,.030831458745725907,.029895496253457346,.0015406398850859385,.05063743421782619,-.06153637148212447,.02259540959954133,.05829928062976937,-.21504560821843677,-.10742200693101064,.13531193618860787,.1292569094640518,-.0232289536460595,.081512184345085,.0005579866070073835,-.09802380260257147,-.06693386993184158,.030281268644703027,-.19700701283846223,-.07452246871817525,.29428494587030196,-.01935717600415609,.0978856486314639,.08681975155019979,-.04323149220650484,-.018463852192367017,.06274538327106084,.009297134801895708,-.24863827359607188,.010777357730302948,.2316312466976955,-.08532957550855783,-.1144533554642945,.08380128540268185,.07583092703097156,-.01403260334241798,.049484524164173316,-.021590806395398253,.01544196314913996,.08616243293609659,-.04410273331478405,.12334022048862069,.0731644245704271,.1088690387955715,-.15316811061648344,-.07873748966775482,-.01728488820739873,-.039703575150386236,-.05690551916158362,.18660214037769024,-.023526673216460528,.009711910543003716,-.11068696302980902,-.003332212012764034,.2217120146816864,-.14381135593764638,-.04415943147544279,.05689928131533024,-.0625355584793738,-.09671566572438636,-.042463185527764596,.33605398681131693,.1277199996921095,.02930603789213919,.05296083974268942,.018388136003953504,.5836401595356645,.07836978200602936,-.1477401885678089,.07931057524689336,-.13568107571099638,.03372612864581227,-.19371960002191677,-.04892333637773401,-.07904827509549606,-.09345765767848567,.008468799104924943,.02446655940112101,.02407280777600001,.045654023909503204,-.049520678628329894,.11131277121530644,-.08267195966951263,-.01281734719311349,-.05843634673292153,-.09002706589088959,-.06129154716836275,-.12266871096386792,-.100840795703969,-.03868596960954555,-.034857542952191456,-.0006953168471420038,-.05711976301891046,.06589460663735189,.07684392713262432,-.009922191175709,.03838253342573381,-.0018487126462470374,-.03501906580527725,-.16441171510027652,-.08279114832431804,-.0660471349418349,-.08193261888661948,-.010547381209761031,-.05103836972697648,-.025578508207813648,.00959733436024926,.004953323058302567,-.06106280301756026,.033453744496612564,-.12571424039710155],[-.07943913690230883,-.09707485383450068,.06901363906242049,-.07450576106533434,.07501158747888118,.15666344682780237,-.08119350539206813,.09211868301161705,.1689488283829152,-.06430071189323708,-.10649892578590311,-.20661689203008798,.1403179918871823,-.13859623598009607,.15068161397003726,.0818655854637374,-.014124777365337841,.15933582287539705,-.05612295620026611,-.14961952361740766,.26418260048580505,.00014354663354841646,-.007354717737453671,.0793066834987079,.02092894146022027,-.10994253368145199,-.1737068099917021,-.02379067594900478,-.08691844514295496,-.004334967378948219,-.08595495488157225,-.029420848660444726,-.009050005850250002,.04153099950743196,-.06942356753438923,.24688351427911395,.20546023916088876,-.17598878843872648,-.24389316703559294,-.1901543977003906,.22071277516100238,.07721059904573113,.014424585107587845,.0067033339564058075,.1455775666622114,-.10028307012545846,-.04626376631068428,.17807074556144536,.2320736518816967,.06891900955018974,.13997442592318893,.08843295944139111,-.06619014796452205,.03995493032409315,.04442911147469998,-.08101096747844388,.06841095526480746,-.04805923478806473,-.005252312475646934,.19319439038918368,.22920446006103862,.08610106347614639,.031256459311461635,-.01776966858509721,-.08151486180422801,.05257244191659842,.006514680965800178,-.17665071040880326,-.019856913059721516,.08110204963368318,.043277973324065216,.1177242078686942,.11137298745761917,-.0007326154220056724,.09197829061899734,.0823894233129203,.03402252591269925,-.05309760977925895,.099288071298098,-.10854924126379789,-.17742490622599222,-.1788673671646884,-.14114600439166541,-.0640047728968173,-.0530848482065642,-.001659672063313692,-.07067687176460664,-.09880353864027858,-.055944765770140174,-.005275164418993845,.03200778095516948,.057629819382953605,-.019709560268588652,-.057823914219534894,-.06825696475667284,.027890820691469885,-.07665623931170103,-.02363197722992646,.01970554278030521,.06278002322832307,.00430808120124361,-.006853929899442522,-.06958545243479107,.05669894602505417,.04217344775125749,-.02598409561655364,-.03309760410899597,.009592182310081215,.041800833565904215,-.050819206523713883,-.10689758970874308,-.01584792905503407,-.060764599912676534,-.006217521991337155,-.08534731020245273,-.09747486944116751,-.059282139115269104,-.035577269192877056,-.07501416104561663,-.06053607928652331,-.11817678424233188],[-.02490608975726987,-.0020839929168818827,.03600621465641745,.0403881994066299,.004636782809577224,-.050097408580542964,-.019438803749024975,-.09939845419489737,-.039682250621000295,-.0028157838678664303,.003598249335640377,-.05409942588674063,.09875156736614263,-.13208302404353375,-.18035374659388975,-.004373211123337235,.052329318134350926,-.04335824692063206,.17086900465322874,-.08778890580987994,-.04498040557659065,-.03163490494923718,.07037693042008056,-.22835180537374491,-.05322868536812466,.20061806426747758,-.010253623864425198,.01591621537957571,.11152189577260957,-.12242970393701272,.20444421875737073,-.11370776685859571,-.07991394664261305,-.15288251066153316,.013009551196509275,.24933943719410992,-.15783799994383102,.14723844916068518,.12653772742745573,.08784453193760376,.15842166298167773,.048090301745894584,.3080112755740838,-.11761230465763839,-.09838866239110361,.21453595775800124,-.1423387911053251,-.005787503443497183,.14715035050010203,.03704725946747452,-.05084128184560635,.14408577985508386,-.2038513895714491,.12419113537768206,.16468328842666694,.012860540177512661,-.06025999185508847,.07514960246286088,.3270713887817316,-.40030305735760485,-.2693599411499121,-.27607955331013073,-.11367870913437449,.18759384386653338,-.1163031684096954,.011359887068835964,.09104201353611753,-.023930250513817877,.02714561670275309,.2686781075276697,-.04094404306984706,-.05118534644263647,-.0625551565727482,.1472213528555063,.17279204270125498,-.045587324746883026,.040778081769105995,.07730745420184884,-.04591786188539398,-.14679289792741518,.05885719281090503,.30472542738820174,.2683300390974695,.20924065894919816,.2122502057005108,-.22492319213360987,-.1053571313533698,.10129898309130989,-.05869965855648472,-.056962291919962646,-.05378456732345653,-.06419935629090436,-.023276261041638765,.1463492641852929,.1729800539768475,-.17279567370535234,-.028270599211786665,.05436900311469026,-.10106883014481371,-.14024347735480464,.018313526646667293,-.03798367362983118,-.06530166405225782,-.012949891765581065,-.0946041074239276,-.11534207274853202,.007667464400692849,.06632153982923492,-.050400969350873806,.007421954822023637,.02886957081162436,-.015979869180987795,.004754709812372182,-.02324202738303754,-.10363187962188126,-.08083238636814595,-.0383137546384923,-.08683960034898046,-.019540426477005362,.031333439883288614,-.15193982135608425],[.26630462964519636,.030128294989303788,-.11791438037260804,-.11737308015815517,-.06286110001712555,-.09676604610759919,-.08219931617239096,-.08602044544779823,-.0752465020528408,-.029806813487391677,.24281116497344327,.06704216540136453,-.007344555268005606,.019073705951446834,.02402774328620054,-.02203686579841367,-.041360734184431945,-.021551677954214206,-.020934734000922058,.0016783573161842508,.044653551257398255,.047330499149608574,.07032091853943666,.0049339384317501345,.06828435825594341,.0027795836778768818,-.0466896472535712,-.05577779733601799,-.053408170439317705,-.00010746082973150939,.05364712425175393,.014169718568750114,.02905438269701309,.023031619273586216,.0006672708130855,-.0005146298427244692,.005649120437861247,-.0020259322895197036,-.016498390040156383,-.02244294078666332,-.03502916496002524,.06384615482620433,.0446871850960326,.05866824674961167,-.04515714757144492,.06041887311954984,.04036881154133638,.09923249950644725,.048066185349036866,-.0463249530349005,-.000808878736984619,.11409453701686445,-.00033137478785196135,.03735595742910118,-.00796740767397426,-.049741034524289095,.13611114777264577,.023766455706096472,.05349768798834608,.015733350480013578,-.0638249332597969,.03333056808886371,.027844489959796326,.08169189984293256,.09714592419415595,-.06482817498523231,.01437395739678209,-.04733110712152277,.04419699990791139,.10629752929835162,.07354268917674926,-.04442637013096748,.049683512301096674,.06836545628600792,.08152300976829795,-.015087145755708103,-.001963811552551528,.039051783324939186,-.017850512607641256,.02370779603383788,.06201068601506067,.07378376682337442,-.09184480384092411,.010696782251581938,.08603651471846394,.09459620799914793,-.07405492786688277,.02791585737749322,-.03764201473979117,-.040193374604089255,.0024468858328299675,.1274974581652491,.009340435148458864,-.04037527607286821,-.09011460912780393,.10326418667261725,.02917729347842522,-.007704623160573315,-.030226724173417804,-.02693842944612336,.03299558344045618,.03765528081620828,.06038405550633466,-.011607343174437262,-.08845866375604955,-.008962113021522874,.04133521207951915,.025264577237378585,.032067053817915525,.02383046613771511,-.07934593163277476,-.11617934147005861,.035620949281212844,.10013927849222683,-.04880947594334495,-.11446551821055255,-.09581301797367174,.016305663265873432,.11707531676597775,-.06319976004011861,-.16222515899222084],[.056794304038679966,.10167830608861393,-.016503737435740885,.004676434791165973,-.015979430307930184,-.047920295093506274,-.055022283646318906,-.10379295727074533,-.04971786226231269,.10568238875466442,-.031174132439086774,.08370460395000427,-.09136813320075263,.05726930258403117,.018684874349729957,-.032113253507965796,-.001736967749467095,-.0720797561165174,-.09935581393877263,-.024667483850197125,.08617572294614978,.04004015564413592,-.15099062261616583,-.0006787230318979556,-.015247157304283773,-.05252356534475065,.04255130736990405,-.14444354746621113,-.006548704692133499,-.07184261018986163,-.012850025711011279,.014122793694046731,-.0033943022739370415,-.039640354001140646,-.0031247601407242975,-.04585791859357094,.0019020572673282693,-.12415842588927675,.07389632414409256,-.04501551975006842,-.042377317003355355,-.01887609579498299,.06619955327224475,-.03822941020165674,-.081067787682231,-.03945825059342991,-.02157368864848786,-.08753783022136527,.03336603607606486,.1364118549990795,-.0632052012606045,-.0012659096018193816,.0057982623571657815,-.01152673538233475,-.007925731132165229,-.1412609714094465,-.03496489640042434,-.05417735615198177,.09866273585454319,.3174433337913785,.03945230475818361,-.12302035212752997,.09030770219610496,-.018426534125878427,.00760699176695355,-.0637860179259612,-.13634861844502966,.021706398551087892,.08848919736411925,.24006998601480642,-.03857437629126144,-.20903973825035016,-.028547940107015453,.0885427264994885,-.021390725008154893,.044285016775694894,-.026993312698921287,-.06446598380331271,.12944644855572515,.1908924405658075,-.030480082660302492,-.11056842407420524,-.03093608697570601,.11334521747158818,-.03512914824806446,-.0860177650137933,-.0072168706451755035,-.10752750376129108,.04312283194476934,.16933458944871088,.04045539432256913,-.23664539634671644,.11812030967359738,.07593996965085485,-.10351739032237361,-.03030058989819629,.08687845689896989,.020132080229428105,-.023337176463668542,.1929319867081439,.022201478223351577,-.09910113527342805,.15510108808703874,.06372792445269923,-.2536830626984794,-.11398510745687342,-.06071410028837733,.014445183346757966,-.07806077611983483,.019868445241697584,.008179845346074192,-.058441780232701836,-.12524948970895577,-.042729684478892374,-.10578506496128201,.0827616996595974,.2261084299196532,.1947210740917512,.1377097045002212,.25212791464266937,.07349814208536735],[-.0913812414018817,-.05807962032884409,-.07653050462847574,-.0199353534219689,-.11698549667840648,-.04962140173828169,-.0771326216570162,.15067146207913978,-.050781047593468576,-.02068608682311579,-.07749948573069973,-.09675856739156244,.007757156089556787,-.009597940621244975,-.09956585908433706,.005160048200887023,-.052061725176615475,.21007930845912845,.06515115768429228,-.07131801809693715,.018812215208894742,-.0008644213540234952,-.046564358647237104,.013463679946637018,-.04976028918104694,-.07512005231588614,-.01620573060652171,.20370769256587995,.21631569735613507,-.216398981017269,-.010174498767059056,-.08074439548196942,.0006576254028179337,-.10941455592056311,.005191951424415878,-.06152725313918852,-.01884736889232981,.21787195260154674,.22243219444192475,-.1557520054725607,-.10816017929215728,.005188190760194403,.03178551363990694,-.11820319244612582,-.09195548183466382,-.06588600256520286,.04574145836470744,.1622906548481503,.18370330017469805,-.08132400811582229,-.09689944492584578,.11220947396556524,-.12652409273694068,-.05695408368513595,.003719836141433931,-.04059853236821579,.03930021853282334,.11791439151540004,.0326000042015889,-.021776978247445074,-.04052905478698086,.01854198366161787,-.08573279147037881,-.004251519029603433,.03108816563584514,.1094691647659708,-.030520300750865037,.024588867262970132,.031028281179074996,-.026058776582265818,-.03473986428220393,.04201593006676825,-.15813943081690485,.0988112751465362,.17664760200291613,.12060292796297431,.28365889513274267,-.00988193914791291,.020720424432064774,.04137304199129589,-.021038365304358167,-.09520266405881016,.14910980302517288,-.025721833368892062,-.12819902853565343,-.023631492175036073,-.031597247870627954,.10824280634239519,-.09117342522287061,.0635674456333351,.02172819298538886,-.10568636568278675,-.03165356681046462,-.008747241857215787,.14635866247530055,.137170585551738,.04090240321757112,-.017771123105949502,.038560203534045476,.03924527363234595,.05681529146256253,-.11183679663036641,.0648176591144581,-.0814319418691829,-.03407437639196588,-.11203464618304287,.15240885057308393,.1353372484972077,.06863368720362897,-.03663300646086139,-.0466929203646385,-.033281368663026875,.0071094850495891995,-.024376962431089298,-.08646414280048685,-.04846188250080284,-.08587237831676,-.17119204490022732,-.1254806517577571,-.10025652608610795,-.06772415071796854],[-.11048795383128253,.17729666058333263,.16552135430896192,.034404289623548884,-.0895887248460928,-.009895690839867577,-.092669573892881,-.06203414994882403,-.1302799060080277,-.02774126581005951,-.033782876400120204,.06848564219607128,.07598957414475493,-.03657137794305152,-.027073113771866435,.05135860594109221,-.12486678803139802,-.11937553330158295,.0002767000813357068,.03924294011480317,-.06534165858855753,-.03259120989293393,.009487399520951526,.07722880227650034,-.11978965646742909,.06517562209880016,-.004533068211414557,-.0932109574682729,.20829565218067517,.03440769551031344,.20900868773517667,.18059530210220634,.08054644989894323,.011691715187434483,-.1036261996342592,.08944033936134933,-.18290277626865079,-.17449211585023297,.20463646978781697,.16205227161355945,.1248389858520476,-.03392094388558964,.005053869622726779,.011335298516995454,-.001853830495579134,-.13334091118720467,.1324427244468483,.131632260424145,-.09594957419751209,-.1490575136117396,-.1371680896219323,.07800686073521007,.22398467991789892,.06007709135914392,.08045908915697139,-.044226547302833194,-.02641690246856537,-.02104723651581712,-.022107985555041423,.27081392806687543,.20243579723370436,.052508427611470655,-.08168694542402519,-.02800043752181265,-.06900441348845979,-.019947203774680143,-.06510852357159547,.08730486889571296,-.07707712069010778,-.18137313212262005,-.11403701580048946,.1344871234635103,.23244603542157677,.05512462348619507,-.06646374787611556,-.0914518320725403,.01884922519180683,-.02465434024807353,-.024966200161235935,-.0914245752012077,.07252783149930173,-.06521605983078903,-.11921754880632893,-.1733789390994794,-.05721923895214434,.006742253462665288,.011248995976294755,.06804781118362863,.049614879488339,-.09727584689881193,.008235856768488136,-.015023386519351074,-.05393300053662252,.022181719818654445,-.07860305628683724,-.09699016052027243,.05334168617956066,.03859265838135287,.07327389299047157,-.0027339150021431086,.008723634927276416,-.056654841529851035,.008992940655092693,-.04799211106946037,-.07247038296559916,.013556901031652455,-.0027078537211853854,-.02080896174546669,-.023685877670394262,-.08288532087532409,-.024581734079028472,.011675698399989887,.010268763903630733,.0002772702590928197,-.10403456880151318,-.03132863032055746,-.04876264136951453,.013870483338988132,.009776937951070902,-.0016096606912818917,-.11084797308275902],[-.30333471569576326,-.09815445036057074,.0015410657868983949,.04592945878055083,-.06535599812167714,-.13987052383343457,-.08308856138252664,.08266906631470228,.06190477969807374,-.11069374343220081,-.28290200253357906,.22673155788863875,.1859441593552484,.07185440250312018,-.030528580748157334,.028577245402910886,.03106098503085323,-.04386161528425456,-.04410517667745482,.022159810237959286,.21654680444315066,.302783163041325,.01221380529451033,.08612658552109748,.18984475627300115,.17496536348485808,-.0848622819078765,-.0814565428085887,.01832638457011089,.13673417025774948,.27284413141414504,.09461233565929886,-.07613963041950092,.06293340618732787,-.09744395825120561,-.0684039807496924,.009665552475408398,.09504055208625063,.15936905785590366,.07299508406405472,.03125276372546791,-.16546942109824656,-.16677751455927864,.12669754079805604,.22204531073147377,.1873578562466022,-.03762165890090354,-.15711170707975403,-.17298791364700297,-.08255527320001282,-.14455053081729527,-.22415305552359763,.04254240281544681,.1038139770409886,.20625177708368309,-.1588088902658842,-.07565886555863988,-.021485883747037457,.10891607713839715,.0910928974734542,-.010416568160451598,.06954385232578379,.16542830711077747,.065217336152304,-.0148176716125085,-.2052152901185288,-.14264824540169307,.019756071252460615,.0058040644663103075,.03964333476919486,.15659048313489107,.22864706757459258,.1425465081375903,.05707318638844937,-.05315219130738143,-.03447729148590034,-.07759839544257986,-.0667257839779382,-.06423032552558904,-.08999109750185139,.02828983038805128,-.06612915519164726,-.11896201994465391,-.08255817032611182,.012810697942117068,-.024384133696020396,.015087500169279289,-.13601461458960581,-.07523698032881145,.03901412101119553,.02815424125400038,-.05501391625928448,-.008254101582952672,.002655866524947384,-.02112502002565013,-.023746573840204926,-.04268316477702107,-.059495722156300584,-.01904269481794754,-.12936213546879713,-.026222299825073875,-.025812691605142032,-.041703863747776904,-.0661914684158392,-.09750606364252096,-.05839607258356189,-.08996126773909852,-.0037007256822108175,.0011179813727885506,-.10090477889016067,.06414029876710457,.010238148607735212,.06440364812729471,.07668454711557673,.039151433631154905,-.025802896171529727,-.00019835521728821248,.07184148624238545,.1312516201443394,.0460566582461709,.0534991577638457],[-.1296572420770151,-.037580246387615174,-.0676100817448661,-.10396968869944452,-.05014668114304158,-.11661839201437256,-.0134094248817632,-.003812121401652345,.1455188948721716,.20960814138138711,-.11572556521584892,.03819977177625247,.053736720825050086,-.03378037681353664,-.013778088995604357,-.12296410846003263,-.190779199296427,.06362318419367503,.07271994862581554,-.18712323706253348,.13564826018751774,.10041735856871029,.0663871462462544,.07587510062160498,.10518317164208223,.14542272105614312,.12359189084318592,-.03375064243041405,-.1168093845370131,.04736317769791438,-.0781151584923715,-.006807254606538901,.022330740883073977,.04334500060367369,.00617725620989517,.10018581879835563,.12543189326433035,.29106180455164443,.15950577579932912,-.04101661472873144,-.24664638490921542,.10243965713284461,-.02224934097641969,-.03998099582023288,-.054513454865913025,.10149283919617619,.12490712516373728,.024443018843315022,-.1715648928173428,.009820925644263762,-.0994644826770697,.10892786493077161,.10795471728528551,-.03038255212780229,-.05209374289031926,.08108228681746447,-.09627405093063877,-.03626743641754988,.07518534571363009,.09680822000074882,.02028571579311067,.33290510761917347,.01733913364880374,-.16522028580434994,-.00408970623814911,-.051775053344798386,.0656704707195409,-.03277288539381715,-.08505880848807384,-.11929889732683205,.09245593621503218,.256554614565362,-.13119179078724852,-.09986832974978488,-.03323866904038695,-.014474294906370588,.022015269325752353,-.00687063436342121,.030438728104146773,.03821529450571252,-9867120331248647e-21,-.13106943853344732,-.11029667516487467,-.05651270541297225,-.03509147854934727,-.021024591609859103,-.037796865064866875,.0024114282376300894,.06687276048057275,.06279809114300125,.01586027365169357,-.06641798455889694,-.044395452917304,-.05673927805744089,-.07449061450417463,-.0017445397987308903,-.001856208967092543,-.031296834327762674,-.08037901085504706,-.03293270220964989,-.03946602721463426,.026868758362947193,.05272046911146789,.017821499479210093,-.0812792524309323,-.009824346280975775,-.035827346651628185,-.018665339965729243,-.030414846245718247,-.02539775011840935,-.12699585584653394,-.05127004606259838,-.05949279770541247,-.012977814302096748,-.04020116106812974,-.006300325503666278,-.05957231407273672,-.06087339785707998,.025500546592364254,.056765099592826794,.012716285965905683],[-.05334278564689118,.00524567552363564,-.04737475337063818,.09478107425150373,-.04097674041356622,-.09655255445740196,-.0748818025977348,-.04665790623657751,-.09133063248974037,-.040717971184299956,-.0930767550584704,.0037318258071586674,.001297992392240016,-.07297130643505188,.05769901611225838,.21677924213445596,.06269207737522899,-.04409019581272937,-.023130229334030562,-.021606172607987695,-.016753725645425696,-.08911491869580349,-.018011910259290234,-.048665499037987205,-.03888346831521437,-.1600836076867248,.12324454290748962,.16213596071632191,.08189099901085871,-.026691379256621572,-.0789390997229003,-.035177884757280425,-.0705591930836643,-.08144962945674292,.04125449531039412,-.008240928398008981,-.06410405058088145,-.19223363085057119,.19698561203334053,.07545770589039805,.10168065244977331,-.01140796836176737,-.027454319260572038,-.09690925377089334,-.02776255170402757,-.09943183534992105,-.06580477803864637,.00795764190114884,-.031079452139909713,-.02525499831188102,.13286239727231575,.10025133561412032,.06563726922854993,-.003144015511429633,-.04438351451718005,.05543647864685072,.05989104825077051,-.009852621741650755,-.15354872527543872,.1700617723129286,-.1844295002128809,.06801442722168898,.029876275367864972,.10799501360998554,.08561819985013334,-.10413623068849565,.2446474961421388,.10562029167251738,.15464122158870292,.11486770498168064,-.16275359615761803,-.10100376605498677,.09513892429359119,-.10761116645534677,.017873153892635395,.11423888867213229,-.0018411500448220972,.08687414783248225,.16367347677496105,.0447333862925188,-.09476162327303775,-.14397973597021768,.21757349732675985,-.03452929329507209,-.12834039570251105,.039442131452955824,.052146536402598725,-.0027754429203348772,.09248677146658194,-.10000875137392633,.0219682748340118,.0760962405146528,.26484488873456774,-.06877899802173247,-.13150962876054156,.0011599240934269256,-.06809291370428305,-.02760433387457486,.005512136066048813,-.07484891501437754,.031133754790612762,.10057960203336513,.16473981410325628,-.02165925360167365,-.08482488271056601,-.016801310205887945,.022993395502963216,.017167179382408942,-.05637411208975411,-.032324211286495264,-.01805390985547957,-.05002376514920981,-.14089885860421936,-.13965160319931622,-.11870197019087025,-.062036231181908014,-.04101797266105614,-.05086728667080216,-.05857306982066217,.021580959803428883,-.0426993658359731],[.019902842485734224,.15561506976085307,-.028017485754111875,-.17651276038235375,-.039197701387862535,-.060229014076549556,.0404138970808625,.003932466397300313,.035474887918964,.08618712771613933,.06621142347023612,-.011482759449640119,.02171132608879823,.011537755053333605,-.03184318371407818,-.08491361323535157,-.023265192234759174,-.11448125258912051,.0391810673233314,-.0569989021823593,-.0647768185163115,.06373369278233973,-.0430751726058327,.05638433416632907,.025730822225084077,-.10729102468091503,-.04311799185503203,-.053657854256318194,.01584487603201426,.013290760860429117,.010200015604431685,-.003179387871218768,-.11412253559205487,.030883839158126154,.02146226913689821,.03496986423752155,-.07945610423084608,-.08503173767812817,.11503343538242178,-.10993782268920241,-.08957280215792442,-.003943109423640893,-.04578774281544791,-.029069481413135097,-.029312843103912124,-.0022281839533548724,-.01546117417346161,.08016859253876335,-.09641746585159496,.06816954310974893,.14488842713652675,-.020620161448456426,-.12127975627620319,.0035402670006761464,-.10860121905429683,-.02575902507091015,-.015907799649678353,-.019318209958923922,.027711942877274104,-.010691765460204925,-.11261913121914686,.2291912754369751,.1954724062108288,.0625766137140257,-.03243750875696748,-.17049052524689434,-.05488775942175029,-.008660696452757896,-.032470312195105946,.05011793511142371,.03840976548866489,-.1518186844101738,-.17238837635837911,.17800490245662465,.15774737196971728,.11238684789419333,-.11549538053161687,-.1051441923254989,.029627428418807066,.010047460882148362,-.03595190922317814,.015687349765215325,.10710721567720438,-.04127605106438434,-.23137836087848457,.10813840323639234,.20398998249936215,-.014741356900987223,-.06268340861017435,-.049411487995288605,-.035967710177904844,.041871499068939354,-.07218490385989747,-.08386387261744571,.0987343200723431,.11031868253657633,-.22002867944446203,.12779602690138148,.1421870701595465,-.0011896001696623804,.07936653037109748,.043588532242198656,-.03542457471856049,-.05460945564146506,-.16492582250638183,-.17557350746334122,.15889132124334202,.004150330789596243,-.10134763057667201,.19023517186356353,.08465959220809688,.11510279765301401,.16224249442600286,.1776357621035125,.2213390802482224,.1459621852939618,.02887144459288063,-.10378678936442846,-.06720569157117245,-.088716399430537,-.04110164115872819],[.15920136420084935,.060406604769127695,.05812234660507303,.00477008922714715,.019787104327780913,.087203596056315,.03026419967803773,.017304599070370644,.08557542947361962,.02395859131400433,.12884963809652478,.06859990546641195,-.04556715459324529,.06496044003945911,-.05721799313593516,-.02544770539534373,.0909487087326179,-.07976949894975081,.036730991722000075,-.038480072535680726,.006076468777062756,.062315581478503454,.002067988991471037,.006557971995562371,-.00435179253736372,.009628999934129703,.029116266207693448,.01426370898438685,.02969045715243926,-.08162738342787826,.04685054235054226,.006214888501193401,.018397271891386333,-.012561848571951174,-.04055161952690402,.028504081990583418,-.011486869296661643,-.059191179697348155,.022429209245582032,.07803905527712499,-.015415531651337386,.019964992266425875,-.06650382954835445,-.0013193086595682316,-.1084201925564642,-.03697337790527494,-.0205342616873516,.04074753970092,.053337194618316,-.00116709964776604,-.009560152849719152,.016298910205605192,.007727762688989535,.00037443623014628974,-.19227631613374657,-.13238394826418348,-.030124775371821032,-.015887858135493947,.025013961658704745,.027518775349448854,.024198826147774258,-.047760885812468984,.12256242261650652,-.05585221308136415,.06502609391787252,-.1285269471537781,-.05905811081727891,-.03231403701227359,-.050141311125915716,.08014056175866828,.03577592263971894,-.052897492514335016,.0028741733491999197,.08262808723197822,-.021869185345972597,-.06985407467550889,-.06857598821622574,-.06458470181901094,-.00693137015502477,-.06383573926778226,.06518389497058724,.08557988777332176,-.08978337177854848,.02413243559151125,.1223664563301936,-.00810312413900488,-.10893007981107913,-.04104752003254414,-.04048557535756673,-.018772198351639475,.024153345138070187,.10036333221955367,.06874030640700345,-.10245398888523655,-.016349166098083526,.007038000943865266,.12265704999147381,-.043113460086378494,.013370230023298443,.01672913680151488,-.039288684774408056,.05772847642599509,.04101263878667613,-.049978733723102124,-.03234750606396412,-.08817543486159464,.0998699443600312,.06560033169605944,-.015359581783002035,-.028528989655607573,-.03719905146013661,.15244521122136684,.18336254107941996,.05428784703506424,-.04636903284687951,-.1119122723959507,-.11519151048090097,-.022731910011617007,.11225252067886338,.28560328365377685,-.06798525202044266],[.058958788260075945,-.021876278629613638,.03761247925721169,-.0990051595759641,-.1165516680699821,.021078862330256215,.01595744461688453,.05964768591654922,-.06550559157581091,-.08339527717943346,-.1821393326554508,.08430523075152437,-.025710617818550302,-.0014530727721881326,.062922294533444,.010828617512124508,.0775051244978469,-.0662083607637095,-.05500269560874616,-.06151063081938088,.06890034543684466,-.05553914485788056,-.020784660567228427,.08939823359974229,.1288331620004711,-.12816590368747446,-.0096792212613234,-.11505461495101575,.07319559699956205,.013390797267512064,.06315710679645309,-.11664356591893797,-.0876774999759579,.06406852741285998,.08955232915921069,-.012366311546488887,-.08484181420948479,-.3099283808536747,-.3159112467280153,-.19715224674545362,.020969019898039606,.14193745471028157,.061843173279961985,.07393616820121955,-.01304258854189852,-.07497702247252562,-.20603881883896738,-.07094554080953577,.28309265451797216,.5774219945941598,.312620236031755,-.08366161905609895,-.0039166593479060124,-.007008189710296639,.040088156481113336,-.04939498483360669,-.029191264319536905,-.0811635084847374,.19268793954258898,.21144872967342784,-.29773471400507556,.12406492440813296,.3660537274903351,.09308241356731457,-.024580539876515733,.10110689340406492,-.0629105392741612,-.0034612665515367895,.029116324782821203,.0020626436307547343,.10964075240294091,.06415892337926407,-.21854402897708003,-.1292523299127749,-.07967520029164828,-.01811196962139593,.03595782728121295,-.04672641769659795,-.060929938641963624,.01119071426640683,.02353396464233623,.07256841830271213,.232706372262673,.33170083850101384,-.057955687348093615,-.12545830581187295,-.03926715840526838,-.05615524448023813,-.046609200143938004,.06049884936647405,-.04301666208475387,.02484177970157162,-.09936788476360509,-.16431861879138088,-.15146165000437428,-.001754402651548869,.17032294123573102,.06486764820629992,.15233819334655943,-.032910847411962485,-.007173196496394883,-.008138084970463425,-.05072430724859362,.011173233429224511,-.06210169914245127,-.05230881701781969,.0005165485585672085,-.007519204343792031,.039091511248705406,.07146588912975532,.006335994296771542,-.09563012456008428,-.025392132057811982,-.10041647140235001,-.09792800568202219,-.027282327996318675,-.03811213125147381,.012061424608286169,-.03559658850654168,-.052821862323290544,-.11313037428451306],[-.15324006372195415,-.06196561240414205,-.020864586176693893,-.0004281080429524662,.0730549833543368,-.06134765102497534,-.03146636400788565,-.10327863822100901,.05755843576675308,.011198077448874383,.045234383554630685,-.06471122499211768,-.06701115581177043,-.0057205043684774096,-.0286430154316026,-.037131071599513364,.05374888955175996,-.0541993046517875,.021887370672747687,.016189862073254922,-.019016514253116644,.11379602147808761,-.11165312886440776,-.008749620005268827,-.014474316621162608,-.02625163443537415,-.002710236678190989,-.03099024873740052,-.04127464832894278,-.11453289829380965,.047907282053055035,.03842197851581872,.015082505447196207,.028769815253706164,.01684473164289961,.0947271889151216,.20593647137919804,-.15159924031985617,-.24555118979497925,-.27707522357288905,-.1804892128057499,-.01130767799913598,.1144132283511689,-.014636046617138777,.0791981257095576,.012007403858779957,.007242850158786611,-.18640141319376874,.16780516380957566,.5682630668550082,.34085510546495534,.15391020895285537,-.22202084848747994,-.09319368101756968,-.005005130632420085,.08016678637196774,-.001085626957433243,.033973275724025434,.29561270160331643,.3648275867235803,-.31466398989768735,.06249709857265316,.2196885379838747,-.026684311034055108,-.054686227873073694,-.15194326555534887,.05427824086088953,.07409840320590326,.0050038364543305,-.11139002424195973,-.29694277435857414,-.002808352419852035,.08592149265900917,.05428329480793352,.0411597530101447,-.040069399672292144,.020583515255041856,-.03296830649846775,-.12400399212637832,-.12690204319933657,-.0878643358019853,.25943260806255236,.2546890168440809,.11148837097156279,.016197234685087623,-.035512335618043525,.062529085678797,-.06187636659039267,.042653661514922,.1456886858554321,.100266511239698,.0491063741303856,-.1692085663504731,-.15021472143352776,-.03643779012508594,-.09417454497077024,.05214270146935694,-.02443775761673006,-.04390447075557277,.09732225336579545,.02596334006058436,.04495779540761817,.015315696105485712,.028566823650113198,-.09980451302541923,-.05657460363336682,-.0025488357793481964,-.06692433986350617,.010193965172470135,-.006176595295437015,-.10526334482403006,-.06459141811863767,-.008227384684336793,-.02893758909705861,-.0021874049091571094,.006402070643468996,-.08247369715383637,-.10584367018509927,-.016046741087392458,-.06509616833600146,-.07661098919312584],[-.0395114284194176,-.008017333397127138,-.016551615434322393,.0756169606326558,-.02972213260367114,-.025034558630525398,-.07217122008767299,-.09247418212417383,-.07521187088066139,-.04436043047893565,-.06934898438225123,-.022490503780794903,-.005714731692690812,.052051258112528066,-.05460771691636738,-.05837262123870284,-.06077735354605972,-.07733680979439969,-.045476724941883415,.03077258241421535,-.11620967239502454,.10797792795409909,-.027779187806584747,.042775504075928825,-.029085091874604285,.07066507082342799,-.10670180015368308,-.12972554862345784,-.06118474678273948,.022941312169178836,-.01197768577248755,.1648708418427861,-.04834140930336611,-.026936350074678175,-.04805636203319719,.03247376246004253,-.13513407425749813,-.11294851883996024,.028315126778450446,.10779312846779725,.13718980587277638,.09482846553325999,-.02966219352241401,.1321112375584729,-.11093428808802747,.02916687414928116,-.06579282428442002,-.08256500281821627,.024708088751542928,.2229367558385418,.2388187319246808,.08490311118438629,.04020849703235033,.0765455738357576,-.06123753763864033,.006328444152585322,-.051374467063856455,.06282708429581385,-.036988261540257486,.22358537142740625,.04843740261111502,-.2535321419507542,-.1926104577983085,-.01942234055203377,-.06284764377196571,-.0368534961734199,-.12964946819383125,.044458755188555237,-.12226738775926,-.07599864777666435,-.0662850361984892,.2852615582722664,.3916662609406049,.21583615293103556,-.0005967176380167055,.028281927318908495,.1415042056057566,.029357515776456754,-.007365256806601578,-.018181855688694376,.004505654970761774,-.11281100988725729,-.12216102487292639,-.045821897312377555,.027683086807535735,.044114075431245875,.012960273742704111,-.01033045914794202,.017525421607595383,-.026815178240449843,-.038433562205767026,-.02317646605739193,.018238150229464657,-.10609098396328405,-.007836527408866603,-.1692715238790774,.055230115768598605,-.03859912120101314,-.03008312241420639,.03349878615087269,.06454927378510011,-.054456334956194834,-.000561624340477046,-.12305574145274481,-.052312038879843335,-.006255987324141468,.06665880864100848,-.08366141006543384,-.0050756577353415835,-.05394576278351597,-.0002704114069893293,-.02919342508998127,.0602433231945494,-.018406883366667015,-.031509946993241944,-.02305392310291406,-.14523023321109388,-.08339822087046184,.008380140183402655,-.05452717749885746,.005180865935989931],[-.06584861959480079,-.0532610791207804,.03547393338792408,-.043773076764098175,-.042948902519114054,-.03583976327558023,-.03670964756282482,-.035889928945933514,.00843034240350148,.07095993548137726,-.03999093783602076,.0006291957612527682,.02301560832911255,-.01209375762579383,.023507991177519026,-.004385258375902524,-.017754505089411822,-.09839345133908661,-.02559852615356971,-.09325351786982229,-.06008459884003483,-.00677329546120123,.004732234321798239,.009885455292119864,-.007934314589489084,-.048435067329455274,-.011810163769240992,-.04446827749908428,.02916153717583106,-.05237348591276701,-.012794443685316442,-.07399977065503117,-.11228628800766731,.0005371885615329149,.054814439087026594,-.05861186179557899,.03170476444812075,-.007650152416065134,-.10568592093548473,-.19589466237166098,-.12315650606608049,-.011442858954517257,.11925985331634427,.0010363876176450598,-.099823252161576,-.010168708525203837,-.07718787943746307,-.0660046955144084,-.28363396719594336,-.09330046294742925,.03526227396896657,.1315555866231668,.09198066269231853,-.008116054125121211,.12425322308370529,-.04316031938519874,-.010050897456012592,-.025512330079287684,-.054800141064251164,.0200039868099144,.3167243634082388,.2782630901307965,.13789936294639166,.0488336696047498,-.033553110848946716,-.04310511729017502,-.04698670598703379,-.007936569897325663,.048609259060924025,.09187992284758031,.23510886392711264,.016599220831810764,-.12371629321306805,-.06323456296281568,-.08997041582264578,.010187402027455342,.0722312763892501,.013954273076743703,.06191724514263754,-.04380281732368861,.043710574812090564,.034237891220848124,-.14964785672058278,-.021062558513936316,-.0065214932642196285,.10036739854860938,.025703084368196946,-.023339141967235796,.03996056214623274,-.0620232565046033,.01983931991841379,.12567284760581157,-.12435675118258002,.05104231359059292,.05395714565825474,-.01694635229337549,.04332098462941552,.03818482834599253,.06706481039603254,-.09250774508547983,.13190717572685476,.07881879268456271,-.08728730729390641,.1368221956639014,.022366303998031124,-.0032543902188911095,.11492942524291971,-.07029322141387719,-.009766170189666268,.07912022044149272,-.13762756714606011,-.026907508147589007,-.12733408978979363,.08600916431669958,.011950067353004187,-.008931583380912033,-.049144400030709225,-.0446933264862705,.01772819118739517,.012376530468464944,-.08535521105761325],[-.15926058536081383,.08489658481255542,.010352869323630227,.024130584286049,-.009902524763821266,.016912897049950096,.07309247598639541,.0823695012331621,.004302238435681671,.08385543214443546,.032979428566029964,-.034178053263341474,-.02983859063202409,-.10512208483111922,-.008974556089922564,.03681355915406209,-.02070817955988763,-.010090767452007834,-.07287919801876053,-.0016777678298555698,-.07674331451272545,.03639911970925817,-.02229204539129641,-.07982096771590114,-.031169859791016094,-.023949824087409338,-.09000717940002298,.04946389516649899,-.01162443307990568,-.01219009445713038,-.038313237174491976,-.013830623631471112,-.0491682247170063,-.08738024755846124,.03625321685783492,-.13554744530431564,.023838368099940645,.050095096402370184,-.05327159587273026,-.085011920306738,.006167606412710434,.0016709301712408975,-.013992899617507056,-.06274287658445159,-.056305160151194564,-.08072705967225394,-.04239028060299212,-.1477669216452329,-.09702130958596067,-.0707340447035216,-.01552687001837725,-.2258827744334686,-.12300661118492401,-.11675473231723006,-.16926423521447898,-.11923817183461347,-.012360787613125972,-.0532425661020737,.030546117724330767,.11823686169287259,.1835792066113906,.16422671841790268,.13230129923057396,-.06662694905882213,.034498938620505855,.23002917423607563,-.10642345721363024,.0957207144145648,.18783595134907466,.1135920030571944,.025587855512019128,-.06743973075994303,-.04765764814588825,.10204615431399511,.3058964473801503,.1207425327574773,-.019907430927027056,.07905279205115111,.09149722809232859,.05353493588338261,-.0018597176390167877,-.03633230199269511,-.0677533805583534,-.038232412213873655,.00853338124463092,-.16436890766057954,-.04148143796817002,-.02449800446478983,.10683536971967762,.011812992251597404,-.1175917440126058,-.012836857177767773,.001045728278908989,.07214734756576442,.12614593084743808,-.05528169296868963,-.0069995168866165275,.06020094104930038,.019190774932036525,-.0006895939857644584,-.015094903464007381,.08256495616839067,.02935269669932245,.02052763134499494,-.03124630208458217,-.05933274918515974,.09675303608835002,.037229564658005795,.02552939083091145,.05686124733111168,-.02345084554174042,-.023607393595097947,.01954177012013153,.019437963266884198,.04454845971328382,.038280883907943236,.061662221134642245,-.0881552015250302,.07930408278804488,-.051664305162406034,.07775786173146697],[-.06170837072054834,.047170428243489285,.012296886297672109,.004808643011588981,.08927303726173832,.03230033333916793,.009921092241579652,.07731496066383318,.0072189861909926,-.005789590161049744,-.027110780745009062,-.13988755144130377,-.056492694825430186,.04374068348472923,-.001146343682998166,-.08711354876016822,-.049878803860526635,-.04460141329529405,.0370267591368818,-.019657603932586268,.0018226974562157855,-.1371821008360329,-.02365446978277948,.023928892232900345,-.06122045854429186,-.029673384135270382,.020848245415982687,.07833644761260682,-.04087552894668449,-.039873516281161016,-.05558396740446255,.08091231776784741,-.15785957027200945,-.10648703433887595,-.13229515155412883,-.04331017164951326,-.10793874347611057,-.08752730601633155,-.10889258052047679,-.09420017439695903,-.06830613525170248,-.04422556269513133,-.13934687419321917,-.1704639053008461,-.21416865484332515,.05518332839364329,.11437493872756643,.20663278657310677,-.10572022382588278,-.17195276126460635,-.07075394516471956,.056465453539173864,.1409941593083615,.1946078610379961,-.08266010138036431,.18247573517682947,.11507042684035029,-.012083622193608423,.07174209396316973,.19214713056103003,.19212718354463745,.17144674880884414,.1544838654242087,-.010181744325890758,-.0751062207627339,.17626659048347,.07292961106227598,-.08536252150394184,-.101891980495703,-.09391093364121281,.0033217473718428897,-.0056858529460113855,.010932950962091154,-.1295062582171746,-.04696074990943846,.0032455130187898154,-.009071778109973158,.006837084042853422,.05201533751109651,.01835745774621482,.012669751254791792,-.07441118751571182,-.0639739998867464,-.029665290241513848,.058058821799073575,-.018533488843353246,.010601655483648394,.08106712495222596,.020392890895924158,-.022919324383815623,.12127224411021978,.007100146218042218,.12312966006288995,.13042358466157222,.04687683112373964,.04270416929413779,.06807842388684252,.04605385479651503,-.00678360169209874,.04506514027632265,.03249542988682407,-.043798472997901496,.03950442276853199,-.050502036141981343,-.02941424277017704,-.07235605231228699,.01041464254613065,-.0375953575506948,-.024335687688017353,.025902421447803838,-.006311817127618385,.028123124281161538,.02743154969855563,.008821990965175233,.010829518047857936,.021827682953003358,.043520974366854995,.0035936083619636447,.056883805856356655,.04087709228201788,.01595663636965281],[-.008350746862047918,.06163937199165411,.06304264111952332,-.015296208138174606,.10245170405475104,.00399856785335391,.0776520242166163,.03002124455464285,-.02183599493843747,.05639660365532269,-.15006956293703871,.010032941582169524,.005016376321868882,-.018546011439547875,.015951124664690213,-.0011364559207565524,.011706775239053238,-.05860401544266863,.0015384317043948658,-.09247607401600234,-.061290397480221234,-.06437213513504575,-.03622734267699597,-.027815877384510204,-.024540854835821482,-.03665117868630987,.01780819541762635,-.13330602418496687,.09382543977629512,-.06364733953480488,-.05029341755903363,.04049780785943634,-.09330711840631761,-.051282463447807104,-.013632758698631245,.005177251054892366,.028088081363910312,-.06949363772703296,.02916951131051442,-.06571475121012882,-.009579966428208467,-.007563195294288092,-.04668939846943813,-.03603730882489646,-.16326411718263986,-.06809043583401264,-.09040215941701694,-.189584820342072,-.10038557840858034,-.08140974208274328,-.053687695693256356,-.16229791121556614,-.053231203082402576,-.07500210943583041,-.12647068989268548,.18340634478038664,.016324182102231133,-.095198942566775,.046462085929464936,.1380455870759975,.26953073102703096,.10023542270642752,.0530132013465859,.043485094470545015,-.01214558910123813,-.05664856700450746,.022122779976736926,.1492504777946008,.20113371911375733,.15087642306265311,.08158993972192415,-.09439974726211436,-.0019980179561955858,.10064758348146532,.14323151379670465,.13388503720638026,-.01334574239904679,-.027656328955928452,-.09883742284906553,-.015845908439641777,-.029293403577799304,-.12585250537276885,-.0765340538545077,-.025133636251120382,-.0783490751293564,-.02574433170418873,.03856432698310645,.08435214462345794,.03497180059356594,.021597995522587295,-.0096451137676173,-.024148476054881025,.03543901889081724,.09483888820433625,.013834291541066517,.04741612038963228,-.05276337737818716,.09928655794773157,-.042715908236761815,.06542372056116463,.012164923448017582,.048080933808946395,.046868409986020515,.043736365228833965,.03354743790039413,-.04638166163345046,.06276514242870704,.024133154758299614,-.09756871705363893,.13228826368262767,.043959645127688234,.0069923806816005706,.029834519712280835,-.02842119488910682,-.04275877728028401,.050490465625002964,.05063814327270262,.044201806819942,.01592836691970404,.05028381973002847,-.09457881127496151],[-.009300234014682413,.06642068786464962,-.05798826182978668,.030467914093403506,-.08894263286311416,-.014873330866996408,-.06903000288081293,-.05977259337654181,-.024750165724362155,.07698058518451763,-.1121917763907885,-.00026098838462658425,-.1064332436563662,.04696612592015199,-.10536876322983255,-.07342934948027295,-.01725860008224613,-.009754908309039705,.028937359707606723,.0583201452293885,-.10852363274246603,.00930340192160292,.003239488675901011,-.11758435763177846,-.03071652417368076,-.012968473875358794,-.07243267658598825,-.02951516712700545,-.030306917069408162,-.010562351852173165,.0005934753265023915,.04590183634434822,.009959243815588284,-.1472695806957643,.10665865350902941,-.05828873586184857,-.08133214090697385,-.10522554630509694,-.09270611819370647,-.08044877692547871,-.05472226200412563,.03500394529307579,.01823385065438496,-.06468218471334246,.08255229855835836,.043969243290146544,.10735340934065053,.1755119874560888,.028146227406542355,-.09303225304953966,-.08099188308628323,-.17304587761466295,-.08397564913817572,-.0821869944510589,.026086345132597978,-.024523009144156466,.06183716547163987,-.003153257941411511,.0138867394019625,.22791162384791516,.17839063189638452,.16802924166508618,-.02242358838747683,-.07047864822552609,.07563100014347351,-.13496798278125824,.06191444357903691,-.013965499326545715,-.04028717399616462,.004944231423449817,-.14234850191040116,.13422797072590037,.0044641492895416265,.17884346888192523,.033152160970333064,-.08418601459388463,.022681908276631663,.06950316754649397,-.10838151310589246,.025867188572352328,.06272635068791883,.051958392475047875,-.15684747676320326,.13621424644871002,-.07763575706962209,.027664309706770987,.0994262520879166,-.02406648271724445,.018369096774303477,.11490785777152708,.017998296859149974,-.02458427507431256,-.07297092825082435,.07092322827813306,-.08429449051860263,.14548924260173943,-.08148857829488734,-.04688306757082058,.06557102383832157,.08257811486473536,-.03674333501858794,.05490971339490931,-.024501097951853828,.19599838240616638,-.04741439714573305,.0027762441038286303,.03026805935619377,.14718296789670926,.04311186683321203,-.04524266215902584,-.05666670192620306,.011024035468495882,-.03746967817840401,.03453920016874658,-.09346994614785557,-.030232213433933387,.09252607527276398,.0033730560801506935,-.07495488768457344,-.05630955348568156,-.12734695058277604],[-.07400840629255256,.059418218830081374,-.16185533770248933,-.09511377575181565,-.054156530748324355,-.09524659355343601,-.027700374104369613,.1309596769464464,-.08289814773057447,.04323633024834905,-.0732657658446774,-.010406688952704322,-.17908099782642803,.11214349559047893,.011254398841125272,-.07213174644946746,.011242646811143842,-.12960939072644068,.01738837182774236,.05208185061396447,-.016141307058450453,-.0031876314325390964,.0604762980771201,.12062873361043944,-.11552428611131449,.053112984787895695,-.11175835774514202,-.08534494276082714,-.10341778301339327,-.07751212851826152,.022696330581442322,-.06116622795890771,-.02680129950339076,-.013512513628398493,.0728716489119607,.21355653955799342,-.06105176975794184,.23221322645596984,-.006049593164551087,-.11934471718699403,-.0487348966412308,-.0037696701788163915,.0015806523808981135,-.05901624282153879,.1691633875802479,-.10636213299345615,.013867670987275399,.13029048317364064,.17375284613983333,.3609697497347413,.07255734683387557,-.05062242706109578,-.061396795580056514,.01202817039979849,-.05973887884350142,-.15920195495822725,.07352556416907685,.01066435580390359,-.12349031715778719,-.20862800209268534,-.24386438086421988,.222695461575821,.04698208213520101,-.10969479870317536,.04679388042937237,-.06782844391656809,.1529621897287679,-.07419514198821806,.042910924531490646,-.0147654055974203,.37959648332332935,.41757874715387594,.021898097003166472,-.11237855306165129,-.04315320783073595,-.0018388342246165729,-.06544880277545752,-.010369032880327395,.043814853347705546,-.009064346657087552,.10571938625442225,-.044969836340908724,-.06001709893042255,-.12351913057017941,.07288836755809402,-.07301558300277278,.024488919824195432,-.04699486258065857,.006102580480916678,.03298894100401292,-.05586087652942285,.033548851659122456,-.10250477896692914,-.08536966088800849,-.09144709776442657,-.07175297330523189,.006001598145138044,.004878028870187248,.09177774204439978,-.06391124327661979,-.10839434894029129,.14049866674905956,-.16291269836434877,.04922746080966731,-.0539566557007129,-.025757221007218452,-.05949850932725881,.02902178421128332,.037106210375188055,-.04318224281511984,.004468562587269839,.03789091486086652,-.12462488658167202,-.015315868709315207,-.09942156409415501,-.05791207313008667,-.07046307506797155,-.06934945677768675,.03622490416908307,-.009666917459053025,.0072113489889556875],[.0005400037781949458,.019228224673755647,-.0041211476935454,.010351942594428495,.006064413551663622,.030583158266134808,.018242859270646162,-.01148471491658012,-.012453527735116602,-.013982904116162584,-.07349494525613852,.000610039089874911,-.03545692573186138,.009198148198758704,-.007930642240669111,-.031346516850493486,.056360544230430694,.02226925518256564,.02097553828852184,.02159266724595807,.02229244757161712,-.03637635466667719,-.004893428694286564,.018803611912471426,.021642092128736024,.02297935260531075,.05727899187240622,-.0628468829571148,.0080146423492344,.001741066749290629,.02331626054937483,-.001969245483005422,-.009766350913334498,.02655260293968668,.019311702846604575,-.04047894912896902,.04296345656975245,-.005557204714366611,.040028541338850074,.039092247288585756,-.014760769957556222,.03928708395050497,-.028685719461485404,-.013542811096967075,.04279694192402748,.009326485295681163,.0711045731208288,-.01285502554472399,.004812097490178826,-.019345118328359015,-.0068647366946253605,.06002650436955327,-.05171021704764937,-.008803783541314746,.008593656232294026,.011216837793947578,.00436599551284661,-.05236548521635015,.018585701567693985,-.043301048775860274,.017257179405366647,.033163069502218985,-.06337187087282822,.022236310454164437,-.010282665078434856,-.029097248102949336,-.07292855786427224,-.006526386582500402,.02170794880550138,-.012869723919694227,-.036092446130363755,.049588404031142494,.0037685978390409776,-.0354492999119638,-.0174997172625617,.0017064827547835885,.027702634451048022,.010552265815024279,-.015110098334354602,.010755306598934415,-.042384518316625354,.055155751834777625,-.04634167814163758,-.025334054233096058,-.03180439146719122,.007446831416419553,.014822972242049056,-.04150177712089112,.05565976059693688,-.015163449841913621,-.033479207943135934,-.03807430074830388,.018025384518394062,-.0421878061699516,-.06845863066515746,.03254289254551393,-.04300024705489787,-.01704186701570433,.031343919493743794,-.07998819951145825,.016715851151657413,.032905055715790735,.07075045847869674,-.02652191057953172,.009794889281753288,-.008359095601141911,-.022132176548511583,-.010266695795141155,.027387007127093858,-.01945661327421618,.04747122989735239,.006463945249493418,-.03682061138814995,-.014924071652059345,-.04838145119030405,-.03540145720228079,-.0011683979389548946,-.054012963892719104,.07919096250210245,-.04604060764604696,.010260604991224952],[-.0001569077120156144,-.00010972965005487043,868213356645213e-19,.0002895918293708104,.0001333682010118062,-.00020448462499146614,.0004636545850201651,-.0001952429751545387,.0003324840807350654,.0002625042692584595,-9902279260287639e-20,.00023043331960011237,.0003325021559779928,.00015431271343276792,-.00017517735947227692,.00017580915476165387,-27857926473168204e-21,.00010573427076637082,-.000165480397259693,-.00010017127208199195,-9313858279300785e-20,7629718954399456e-20,8422483860534222e-20,-9328679851063754e-20,-.00028719968349017605,.00021350040915488894,-.0003150556862943979,.0004518855251356285,-.0005495709535034074,.0005457914675567402,4292665511661936e-20,.0005230825423930205,-.0006859803831355815,.00018154537313607583,-.00019968317282380993,.00023651893221749917,8502048011076527e-21,.0004909646746514007,-.0004119603837152569,.00037236304958472577,-.00014792807116663712,-.00020787769585125376,-.0003163192179676949,.0003509716053853168,-.0005302482775174575,.0001920548407972275,-.00035924357541414903,-.00014479534658806692,-8220562624946387e-20,-.0002676219455012979,-.00032865721811569347,-.00013872646247882828,.00019337977765215147,-2893078271500732e-20,-.00021530682683792296,.0005007558342280394,12869664429884797e-21,.0002877888733890388,2151668885594371e-20,-.0003850355075187134,.0002692398906111934,.0002012045588500183,7126990807145711e-20,.00025510516920475984,-.0005497530710414731,7080130020775677e-20,-.000314434949907981,7272781453938892e-20,-6764731777177124e-20,-.000105969532620806,.0002042525509826365,-22660407178250186e-21,-.00046405924788414654,.00029312274831753277,-.0005791064920290384,.00046348258977586126,-.0001892141960505231,-6831069283591215e-20,-.00011583420771371644,.00024261083736967087,-.00013788873457702688,.0004658190984066779,-.00037781566966009483,.0008716245230738773,-.0006364250227483409,.0001914635008269036,-.00030213932128696913,.0001548061422106152,.000359478662719067,.00034064528670862265,-.00013396590679365383,.0006282001548930799,-.000262816864256582,.0006290045675361594,-.0008356505374108175,.0005550125162077091,-.0003922153146351179,30416452512397468e-21,-.0002189561194486725,-.000250508136889635,7579225944163992e-20,.00032480822488636235,-.00028410221135238486,5019706084559428e-20,-7604971099685331e-20,.0002972254682679469,-.0005977100300826113,4813754973029272e-20,-.0001438309620388073,.00046738458634185825,-.00043149354775268156,-22304724232195816e-21,-.0005350635724875007,-.00011828488032837592,-.00021777877913900512,-.00010840223620667971,-.0008066009231476462,.00028972319720168074,-.00013991311235211912,.000435976304913481,-.00043607463640516625],[.0007992911504804828,-30120444183670547e-21,-9.668328629364176e-7,.000864945159989125,.0005030529484980062,-34861905346544875e-21,.00042196435679157235,.0006568174335126256,.00012927605196788594,-.00026826496297133184,.0007048572872881756,-.0004505423245168838,.0006284185275765297,.00021810609410295723,-.00022766549944826936,-.0005743718719742955,.0001667039981521068,-.0004550487105457676,-.0005189640648836646,.00016278501839328552,.0007846798866815302,-.00020117424541528373,.0008133233405210466,-.000546613347067848,-46455199192108054e-21,.0003925110134400944,.000890454317246242,.0004480326332934603,.0006725243981668128,.0003432395336075006,2970582797436061e-20,-.00033407540980814887,.00020838216438882895,-.0014686441499898312,.0013210643314603837,.0003622979708427093,-.00042100922626168297,-.0010662328062863852,-.00047868856534150767,-.0011025209542825376,-.00011142308623937613,.0003605454081693979,.000805368483283761,-.0010504288820343197,.0012459778440163868,-.00128894177690737,-.00010349556762601422,-.0003259874452417391,.0008195978542099927,-.0003286953750876037,.0007842790431124916,-.0003102789124236477,-.00013199686164484803,-.0012037863711194877,.0005696662674320799,-.0015831212285748082,.0012383789939280389,-.00020329286471698974,.0005444151777521458,-.00047971421799346964,.0003639802447524265,30135996240618357e-22,.0003463026791720031,-.00016208082819759925,.0007653100934952896,-.0004374341893310929,.00035576070800035636,-.00024010306236346007,.00021524875497277648,-.0006550476921478102,.00036034608435831644,-.00028137429763217675,-.00014369965739139887,-.00019791219870676433,-.0005036156937956865,.0005614487217727865,-.0002316208715137033,-.0004190557849820635,-4582427172821965e-20,-75822332618488e-18,.0008003140757002376,.000558399734893824,2226587692822843e-20,.0008977254633047785,-985806312324422e-19,.0011729728289751398,-.000527695784392275,-.0005609613348941597,.00010460229482414998,.0004749779920359999,.0007370880620039648,-56914197126341215e-21,-.0003102421576837294,.0008752411241001248,-.00044804418685771147,.0004955562848460542,-.0007026457904857168,.0008545564187135354,.00012341905578699096,-.000935467102831657,.000378222510539916,-.000329023094410295,.0005664691467672459,.0002521641764011316,-.00037243077631574,.0006157672055980331,-.0004852753855330537,.00051397678370688,-.0007636882120910741,-.0002717643717346516,-.0003651782273257267,-.0012782404754204373,-.00037035199188238405,-.0012045089669873877,-.0005111585661751218,-.00047596944593941704,-.0007216126068211506,-.00037669329780016733,-.0007539851576227469,.0001343282945602117,-.0005905901473275219],[-.00025150140763611817,.0002000543548479755,.00019417083739569404,-5792301095815244e-20,.0005586382076858193,-.00029404960975239897,.0004641898804350125,.00016919725054860514,-.0001365681365060609,.00014340737825123363,-27245579659461233e-21,-.00017462744794458128,.0004320870347869557,-.00024872373436234194,.00033850066080495095,-.0004282450008767239,.0004527458938356002,-.00033817558566411835,-.00015836618254124374,.00037188063032157683,4001322304792815e-20,.0002963813147966963,-11757971572848584e-22,-.0001744667552400006,.0001268511029074151,-.0002576099870121168,.00047735971540077606,-.0001583414507774425,.00011916420387451162,.00015943376359087678,9365002254130717e-20,.00013240084078796482,25813088587590515e-21,7753877679932738e-21,-.00041105076291241384,.0004545220478361274,-4040458358791927e-20,-.00042518565093397536,29496406138524887e-21,.00022369184176485946,-.00022326384816004656,-5969684765263074e-20,9590019958132271e-20,-.00021800428194160856,-6628557645497676e-20,.0006383470103711519,-.00035775911240443345,-.00043585234193858034,.0005552031141922574,-.0004686784852901424,-.0003666824099504886,.00044104545236546815,-.00016743491057120887,-.00015286382598361098,-.00042267651180960325,.00017696200882469978,-.0008795455641963257,.0004146582259312644,.0003045032458691716,6846537634285204e-21,.00021324027853833406,5544423373813733e-20,-.0004553872771715659,.00036257374232944806,5812612913741011e-20,.0004870109844424884,-.0010394561974651842,.0011088516063339896,-.0004744671038700055,-.00021639705414199396,-.0003026456545315232,-.00031876669624713905,.000182567936551101,.00022085306808071166,-.0004570847865470322,-.00016764562120866666,-.00038680711837089563,.0002346549695738001,-.0008905859234485335,27029323083889965e-21,-.00019392260432311614,.0004315957078649057,.0001466476034520035,.00020276998330380014,-.00016623775962797588,3377296016834441e-20,-6900085899646776e-21,.0003173325151770612,.00013183707157224346,-.000262754515962364,.00030496779772497273,-.00022988038412455076,-.0003441066296248881,.0003397409639967002,-9437034630983875e-20,.00015929656150039573,.0002208318439938517,.00023298688340578377,.0002668471841276376,-.0004223616661706703,.0010171866741304654,-.0006656074902465917,.00023102910516509278,-5110533473639173e-20,-.0002524743916937494,.00027604436336503557,-.00017760551435710054,-.00010325189793795159,8821495793360275e-20,-.00022473324648105992,-9108273748473011e-20,-.00032298641944957397,.0004976843507103613,8618913329085944e-20,-.0002727878126327788,-.00012650947795273654,-.0005222727775637999,-5214077958895502e-20,-.00031611240635322224,.00017884485805307976,-.0003794131877055966],[-.17866885726802303,-.01004627890548361,-.04258967548780557,-.06593466407442874,.052273011858990394,.03312160535571991,.02795049686644964,.03459701777139025,.04065340185643863,-.006028884452193628,.012100171644170557,-.005823115292745859,-.07582851399159081,.114669445133851,.020113986866166972,.06830239973025178,.0536675149057223,-.0019151045898751218,.0032161515425703988,-.02286773204984241,-.036064260364357094,.0030444356366628143,.005026825113180613,-.016159035960289652,.01343428575788129,.046278393980945166,-.01986357651860629,.03308155415261836,-.011511204742527398,-.02336066267834247,.04803053127169171,.07216286312764807,-.03470696526283394,.015742792044845896,-.04365784041015932,.05298988616021803,-.0005778284434646286,.05368524140978516,.05640961604342286,.031927074543435394,.07620825227690615,.03508474849876196,.016016932367084777,.09782925262644122,-.010932961737962918,-.057604724295680525,-.046117493596561435,.1158683536837223,.016630360691506946,-.07238061224123352,-.02721078987250658,.10400189079503686,-.04986370811184261,.013157090965211962,.0687580755933804,-.08609338291433159,.10550940203644331,-.05192563629392106,-.08457695827736228,-.023868518013074047,.11534819907311766,-.029927793894114596,-.09880532106573656,.08174885118680475,-.1060908740185344,.03131709572154953,-.028082259348080146,.079441855776121,-.09321417457265918,-.06985811657883463,.1070256004886421,-.07154792343865429,.06446512920421217,-.09916465105825018,-.013469569177392421,.03435227148056593,-.10594412155782011,-.03578650235512626,-.011063899652176858,.01837774789897521,-.03925360751263275,-.1401687891122919,-.03721312667737868,.011543278654149135,.004656475419833515,-.0760812186959124,.02161652285659742,.005696374724535533,-.05422545641286053,.03997648210328526,-.014191880258275905,-.05603875416223365,-.08595546789835705,.022657092076657198,-.0022047701913627767,.002351972464999623,-.008640836044051557,-.06488063850524677,-.005552341996716701,.07959598156789904,-.01118968911944192,.019694004932030575,-.009080162837764867,.0030332790803103706,-.11172688994501827,-.037768645256787345,.14407928948205997,.00854179600675923,.051063118511239784,-.01380913347995522,-.01880415226931162,-.07472568370647939,.06221295634359636,-.031173033698703514,.023265775517157146,-.013229707925293089,-.0880873919352723,-.16850726894231444,.014989271963221966,-.04579025515430985,.03830156993922969],[-.12471960559298051,.016331688001818473,.010132274081235342,.0072416673905218165,-.059929049564220245,.014888737012368864,-.05241879684518604,.022430681494682764,-.04370183268160943,.021372011063678874,-.06655186710593347,-.07675155144909322,.03145408506904994,.0005069862036388229,.04820853702090235,-.04360636063972682,-.026401547797884867,.11494953428588206,-.0008448799329897217,.0417632292750263,.01662088156180045,.09574359592256741,.016932325856871336,-.031217493839729042,.021554336392332216,-.06122835182723427,.08169620652750695,-.05509950017990012,-.0953015830246275,-.03135197233503784,-.035124606327755464,-.028837124821496515,-.04788471540883535,.06070242512625609,.08068456476164618,-.03962789913976757,.06470980341954596,.013113165039676609,.16301141390375,.12824898952567468,.07463647681415406,-.01689728599051447,.010567173254586882,.0033568218888065868,-.0412160894144045,.08378062128267277,.102189508322764,-.048555074093876056,.09549314269554934,-.12104629625143107,-.1493368753465891,-.0389467848305356,.05367087918131229,.10886118501283593,.0623983957252945,-.06400486156580862,-.0011642109155079912,-.017989480311898197,.10376420696530403,-.021666202371688252,.20636172793169102,.06751567674647355,.022594628822994373,-.1087504952317593,-.1536783883022896,-.10156435275826153,-.056219286606131964,.004893557738526164,.0805088399913846,-.048986994532721484,-.05467357353544683,.03441724157108168,.13788724353627765,.17933790589816131,.2269420687448924,.1671473728685338,.2888790147793218,-.004550503908508637,.12853746432697205,-.14688209250590184,.039803550389166095,.001161697593967297,-.19133864743440931,-.11485627148408395,-.04055611652925376,-.07701433461570141,-.06491913606734276,-.17402303487112258,-.06945190797766371,-.17069839255636562,.09755338124630543,-.012417013824468703,.008779997988951951,.033808465522018064,-.04032395286090812,-.12350740477425591,-.07110377503699353,-.032842030960087386,-.02525651113024763,-.13557637802150552,.13026525943758985,-.09897866100762497,.016539720299720638,-.05539382900312294,-.01747784521356558,.08253314208431616,-.005269279253446573,.023714959705274333,-.025127637792893034,-.05449360375807459,-.00652514795320968,-.19551796620580655,.0005153308443185747,-.12469764291808262,-.010402114917957516,-.04085437197022542,-.05009127773951896,.006171429783149627,-.022234206683905616,.02500462259196987,.053771861975124485],[-.06953146063004409,-.02785516739677247,.018198128969876097,.015264256008671422,-.021354522403683483,-.060614589679217915,.007426020566030832,.04490934257839589,-.02229010045780016,-.04503811421576148,-.055530719421861996,.0902442269939355,-.003808075241290537,.0018190374684997207,-.023994658931284905,.022637227704013697,.034385575661622605,-.004132342662778982,-.015239537988315635,.059722981968446186,.003544656555215908,.10857055311904133,.01582758789789633,.008987865811832016,.021416627127059842,-.02600036471546474,-.07205361608785835,.0067502383554667415,-.043797404208141606,-.08622211669101225,.001246921678646755,.0139677771449414,-.01880006926090451,.09110646933785663,.07148285793357623,.0531413345214016,.00914808213505889,.003218881297825424,.10531967232382244,.013069231097604272,.11321624512420622,.024085428042357526,.10571237447906545,.0972494307993253,-.04035677339102225,-.052072201970584105,.009483848744708569,.023224654347251975,.048982273381055874,-.07704737716893406,-.016369059725570845,-.0483990050185562,-.017518918630372055,-.04872526407833252,-.09069556505420186,.14584898982636468,.020202497107516055,.052473273376908665,-.005921018255039059,.002281302741017288,.01143131488424251,.0986017144258021,.035390606662767,.11802445684529828,.014488333933066366,.14985625484032264,-.08336508118286931,.02604166398390495,.05753622347531037,.10289686959448127,.13376253308792016,.09859927901539622,.11296262694625853,.0668115199475845,-.03039233221979165,.037677148170599,-.08046540901337987,-.013433044614551137,-.0790502723823431,-.08692778549134847,-.13723308506024745,-.16180861780403702,-.1559436708245299,-.15633705073107523,-.15765816424278123,-.019054153693685204,-.06642804134677276,-.04031539430037858,-.15529720969926392,.12101901933989367,.007373943349677788,-.0390423130063269,.044864452505471414,-.03107425775017513,-.037869139729967256,.02693566917864209,-.025703296599595565,.030655452436583908,-.008329491639230698,.030463719734315588,-.016822379770469454,.010025642600714306,.023941947007600384,.0037369192163097253,-.006206138277264052,.040478298614511805,.015199733590990229,.035362093609806654,.03511391355505986,-.10029441782907185,-.10610472749034416,-.05209994244567258,-.0037985170316418085,.029290155294759784,.020763196785263893,.03757429726054337,.05056819389164744,.0025948365095440178,-.03403336490460493,-.031897318483976964,-.07255287776479732],[-.07415076132698015,-.0006698640194668509,-.03851515813421434,-.023181050413543618,-.032101285996002565,-.016813865511960804,-.043281469336209986,-.034096544273423686,.01015713603552236,.03002720104435845,-.13569617378270427,.05532035184255174,.04142268330483252,.05423769347171173,.07515835251781103,-.004561163523117667,.004933683544835622,-.02780420573125888,.037859313146976444,-.010636484133250523,.04303907463414708,-.031109281470661186,-.026842848775607248,-.03367029747858763,.005308192649811985,-.03971982646619191,-.011433401479806288,.0018726799542050226,-.030624975101159628,-.002938065158242298,-.009598931969133029,-.013587888941593039,-.009022840695484109,.013981082758308103,-.027132225331696645,-.0667222603414114,.02999630756200286,.10810874336228038,.07393253694528595,.09459689128832147,.02132698978555572,.005189532728890431,.0906255149562725,-.0014967572066416635,.09569159602867722,.07103280678529231,.09312149403009169,.08641023342246706,-.08291182791329474,-.06331718873820169,.05804082822532146,.0941232801306275,.04828946243389934,.0065600637976757845,-.017978915242308827,-.10529465762835961,-.09950537690388492,-.11641428549809074,-.16336914552196619,-.03066309873006054,.03732730251873738,.021715752289796372,-.0369844279935826,.10584212495392706,-.03890083728428326,.04238866204055994,.15761090374525039,.14948261048000774,.15123269083375968,.26082790242726567,.24549601207125132,.20845042919094864,.014092314529055919,-.08154430543701509,-.12046457900197742,.19946559288633667,-.12279301434870472,.04314746533657727,-.00393594331492679,.04194450773788314,-.14662824409559153,-.16841554816441323,-.21746364722425923,-.1459359862602846,.12453643290997443,-.018239200160202453,-.09647557951641697,.09674495834816152,-.16116049604787364,-.10959035389321688,-.18407080190584757,.028717350720618054,.017940145844063823,.06771260942640141,.07042689944917004,-.11002871292121127,.09308361930716741,.015479935983498054,-.15557089262678336,-.014144367587187956,.0325121377548612,.05556774883075101,-.017472918751953406,-.029533628631708192,-.03882773130669309,-.03021232345401817,.045497082764698535,-.15437986410128418,.13419753386333874,-.20134066892161695,.06224915561780282,.02428428678083827,-.03696519035720307,.004665449800701868,.019888261193014966,-.0834679804094206,-.016566558945081397,-.08316017593013263,.004519218414108621,-.15565975294086548,-.09184237743852727],[-.06648937254575553,-.047718799252733826,-.09410351655788475,-.013599740258147358,-.04553070517144151,-.08506153834585709,-.06309353250648561,-.05382077809893387,-.1222176787662156,.04751789291790755,-.10543817119017407,-.12135417994296471,.020628638474339593,.038231355833956926,-.04339236513181432,.004422474945044738,-.03808507779541288,-.07983017408586837,-.028985978187303432,-.06550574897768958,-.08840251902141742,.007568562641850877,.014599611957773671,-.002205201743726584,.018238800652908803,.06619949508942785,.014132567520511584,-.018584781288268692,.009727516773610915,-.013372741092406291,-.13951730470879722,-.09945443912852887,.002453680221218517,.02332571755292307,.05227317987494949,-.007843378956858688,-.019449100540297075,-.03793640930232544,.006026659571149097,.040309888608414196,.06132376182771021,.12961234902069763,-.05246356331115444,-.09231662522646916,.12501372859645493,-.02351102454092214,.06869985550821425,.08117843045299462,.08163633162079212,.13284552600960509,.11443480169918706,.03113735679365959,.03957361525706285,.06420669386790767,-.02658562344144533,-.069602244432453,-.006882701260322803,-.08664220320189941,-.12201442995127351,-.08760260145312744,-.0970812896359051,-.14353417247406297,-.03240409236874564,.016664803245589305,-.028877650787150662,.04666075652467404,.1676934927534405,.08185669802196274,.1329811871153378,.15796978913910928,.1542064762948671,.235079415664451,.10845077567152385,-.02663613626038222,.10225924257045012,.07481564010539572,-.06748434569715259,.014558971240431304,-.03179694396991569,-.060628238131727054,-.09157524027700095,-.02183696621719987,-.1828633961798013,.09450167322221116,.013464938214634688,.017062888577847678,.04728200179219444,.10222149429615252,.003262680854284855,.014576952315965966,.05370026657403589,.04846835624654347,.0033060862248684986,.10214575008785104,-.07724239403128261,.018934507344396237,.0009841345168209795,.04721181791202195,-.04252362691862514,-.059478892430034694,-.043645446723720886,.0072259828467460575,-.04536439790469501,.0015257865026378006,.03394202044018976,-.06286854398915662,-.011162136740504053,-.02618150392846805,.11832542908426394,-.11894486304453102,.0030266795551997794,-.019806603799353117,-.020184767444436195,-.0019914632003974475,-.02834856785282462,-.0519362080807298,-.114547660653914,.016934758716036884,-.037824591697152236,-.01375883701059563,-.14176618903476443],[-.12379363868138007,-.02279316359625219,-.05657201620013585,-.03920111999111422,-.014505658462787643,-.14164430469555672,-.0667725258352778,-.01689199875955201,.01839534170622534,-.06025737381415314,-.11708273412158036,-.16991897990888952,.02268184312792898,-.037431787558444535,.0278362850257034,-.10391555593395135,-.02489579210400666,-.10240649559419762,.027892065133358145,.03703024029062255,.02526907686570492,-.18054736103209962,-.13783839666730963,.03215416365047865,.10446321758795965,.04211631934401537,.0035951247503783063,.06534657732969931,.022452948281901614,-.001375477826345138,-.030524202281055096,.030663561315706717,-.09877455975225044,.2112460708578492,.03192256244424359,-.03470538917349143,.03662198851388872,-.010853119077650658,-.007389034533970693,.005678291025571713,.02956678266410269,.09643352067543778,.02915776715566533,.2985689206411888,-.07919582633844692,.0002570386604299063,.030975751575185936,-.07756102771115816,.10470636569751657,.1428460407644222,.09940178110316888,-.04083658577975097,-.11174053722087644,-.0673083114110804,-.18341503352838884,.13979526699252226,-.041934973700445265,-.09286647159600744,.019653227675469925,-.0903901487415567,-.20734375167567454,-.07287790447233498,.0027432574380281405,.0061245885209975925,.0945981262283641,.15505695773274958,.041295097014746554,.006098921880011085,.20246902024512597,.18772782665817625,.14967157503073222,.29059802382753935,.1882338796896202,.15999395370095998,.11915607104783087,.05601772378459351,-.02792887117414139,.05667642719401925,.01438157734700335,-.04359233535860563,-.10690022762213068,-.06224823853094813,-.17877352623373868,-.09228816984117275,-.18022508861455536,-.06139877342060056,.0666828177706692,.09579682657519611,-.07561033691668714,.03348431078761514,.009071001729659606,.0023841350072704715,.012849690649430291,.0037371676082230965,.05650773991275465,.07182082663799436,.0741867215293506,-.02790525813071086,-.08413548818267128,.10542017164154836,.028027285290237042,.06544500747562648,.06416164108658168,.03294077475246366,.005402065754669991,.03571524120997059,.007712003967908311,-.035145762312081205,.09573050302184019,.06829334144455895,-.1743073123711078,-.053416372888697425,-.0430730980903595,-.07504208424012832,-.0026001415644313353,-.026744723242628617,-.014014546902059697,-.037147009442388884,-.029554069220702237,-.052552735398048014,-.20455065610576798],[-.08033671891432478,.0315429073280028,-.08033328455238642,-.16579677604599055,-.012897402202476056,-.10178589629685617,-.01789079587139132,-.04793217410188362,-.06957271428915822,-.013085371055274415,-.06403048933442046,-.04738918650528029,-.048253300258942214,.010624097533814846,-.08830385359970645,-.024800418220789627,-.017016233501825004,-.0731122923145789,.01795798282892851,.020031779934763197,.026270539591568495,-.10026542176987073,-.055354197675606544,-.019202819676109054,-.17886561336922624,-.047929449603121586,-.01547661115883896,-.03658093134111133,-.0013977731542055873,-.024379638918464477,-.013239317850851168,-.016219240360668748,.03345591096152817,.03128153409780385,-.11781030984741167,.08675961993407609,.09683826020183105,.0075779597881384594,.04020793008597133,.03979664174325498,-.007964327106749873,.05767522648102494,.06597316905270549,.07636867790410523,-.09433822004769502,.02758181066279606,.1767303609051717,.00802817958817817,.07973353630133304,.1471114604522918,.06691827252092541,.05033400929997261,.001155762195899003,.013615235385982936,.003014912242312588,-.0015609840824338042,.13349258506848927,-.0805265237713217,.05030675773238505,-.1374407044204264,-.07379630519336368,-.03188040097533147,-.05786700321566071,-.06521749177065808,-.06679414818176112,-.08825063794815392,.009684457243462015,-.042763801342421685,.09463793468623016,-.06620162650963077,.1355507715437378,.15162691406173393,.11508260905995207,.0912659651060293,.14083962832741773,.12798665154188912,.2063621060271425,.028581014482874013,.14481738942061018,-.06449340862870821,.14635053020889283,-.03932501773954096,-.04927780972188391,-.08022828865695547,.016307833788669575,-.0646514288965923,-.0779270812226531,-.02957415818047504,-.024416232437453507,-.1330534799520876,.13699379135763934,-.022414216362762814,-.005868709852490793,.004999194370079764,.07054027770987265,-.0003799065544888118,-.011858514238347152,.09475069188854386,.03218866406000742,-.08487470279745359,.14236331721498632,-.03552454595773424,-.025841070343849228,-.0789528097144718,.048317846092031,-.08202671916385867,.04336429450841743,.002704584477566117,-.02792065407881463,-.0719509262043451,-.09967971570584394,-.1207171044051677,.027685856470463906,-.06539657712071668,.041932056613189474,-.06347044193335785,.015317705347783588,-.0889546180036192,-.0024258796088682186,-.055981681173908476,.02502279163090345],[-.16063469325056712,-.05067950894114695,-.017602698377438247,-.0024719881205989246,.02562693678639221,.006447455809475942,.04090523226766232,-.019412107970519368,.010907705003810574,-.05700007695501437,-.16989061568410888,-.047847975558597475,.04577096045089714,.03660513100503897,-.034700480386556126,-.03881416504376744,.059925472084798384,-.04504159209742578,.004479134427212532,.010085652451881422,.017232862062283152,-.014699311623237801,-.03115852988681901,.054785786247363535,-.04501867135535772,.027938316028020466,-.050947638456247675,-.05802757432125461,-.018142649252876362,-.07346728199269882,.02976135808388572,.020105401337809463,-.03083009871677686,.008938452935937466,.009491788342519472,.03125749363817319,-.07432462189929744,.0475022932284969,-.08720288166855467,.019497480457585127,.018801723895544558,-.020783146883739074,.03740722625319719,.01202907895240941,-.08564017449754333,-.01250123023712826,-.027083881602897025,.012926155302517221,-.020812027426987748,-.14055809283539628,-.11374506591076419,.017924843458942127,-.02851651614594349,.04585868851160263,-.1311782838895033,-.17389092870879497,.053714156567446165,.032300075701893374,.057520195145752226,.05904654140586256,-.11508635724303731,.04356577639305207,.05953659426272473,.07659913376420743,.014207229570090983,-.1199427514262921,.003483041457215938,.08308252095344841,.06867294978233036,.06634459181806078,.08401256751467098,.10863093494536288,.03602168813629669,.12380137951173706,.04323657632804835,.05939964366565413,.04244530947463224,.12789338744678247,.014244324437140979,.06713624665094575,.08669910549260079,.059557262090246026,.01809855186232609,.010713420148594992,-.0005957988401005254,.06134346008396229,-.0001398559588360257,.22412677713663717,.08801367584779327,-.058215067302030736,-.0012260538656294895,.042305970671931085,.05206734479785617,.07541467470573086,.07747117691561765,.04571138261393291,.017695427073964477,-.0030658636257887804,-.02962365327526081,.12896765936351437,.04218386696081909,-.039394998979108344,-.041007428922027155,-.13390483965174424,-.04249981868450559,-.05819462525466032,-.09519971864692886,-.049990903182070265,-.03535942882078717,.15859976300873996,-.11702120905543276,.022050407195940078,.04819282357221995,-.005656504731963163,.055321599542422356,.003977112651243536,.00887914724524403,.03097294566737252,.03613661485122133,.07763665745575973,-.11747304066916951],[.0032106468813388467,.0888851727208101,.10096080668798724,.022292605842750123,-.07152545324795105,.00574314306889687,.06538100129442326,.008264090951624635,-.05229792363355525,.05506324915670348,.04213595616555499,-.002733728335111471,.061070962060578285,-.10701158010008113,-.05582795617315865,-.06503269483246488,-.011795338702579206,-.16486859585693212,.021281059707202635,.011339055054131499,.015607579889776426,-.08575044928288486,.004308712238907317,-.0028333671241141632,-.07570465195497533,-.09502363453231939,-.024443325177031752,-.004874293172570161,.05373563149718516,-.046164464204305776,-.0933941298749114,-.0894919021353083,-.07009406612481467,-.03476491199500557,-.11036613659441624,-.041699289757935284,.04855541410532404,.03731659433016587,-.009125849568234395,-.02483773607684505,-.10811625353969287,-.011196019395676729,.062000571065406324,-.030908870870323263,-.20817374216641296,.02840804114908593,-.03422871356001763,.015547093956459614,.042037769469384534,.14900049504903043,-.07782808133751604,.3334366712423407,.362683474566741,.18381088902743745,.18801989730141397,-.02676010791724115,.001051001635363081,.04098821271669377,.14354810186479433,.14720129753717756,-.22198578529791352,.31511902115816237,-.09793363128417329,-.34108764393991897,-.17922303207403625,-.07503751616248808,-.060600402883750376,-.01919095040080467,.16686302854511445,-.012989494224628011,-.34656568745617206,.1466824188567722,-.05355752905245408,-.24973215975275748,.24117194525976043,.06744086845556567,.11113519003246129,-.17424338350633975,.12201079994643065,-.09274695092708538,-.06579081793244057,.3585559632229108,.2260824611739266,-.11160227633029404,.3057247528769656,-.10906402198659501,-.157141031858704,.06839556583237981,-.04092177107811989,.0013632455963754134,.10794141319894564,.11370966065944016,.05701046666820303,-.08263447320388241,.0463277770499568,.0563969354020957,.02021230107199888,-.029754364902733033,.05446689213094416,-.01420748508089218,.09398894647188305,.04457207384512044,-.07356623266476506,-.15318361570533576,-.06121218533961417,.02671053100083461,.03645536395889876,.1387979230893424,.23979908542525458,.11099690466514582,-.12734356041026987,-.07092110761905882,-.08403148804245866,-.05291120499450527,.008027027948386938,-.04833738261890975,-.04031508739306439,-.0891092654488945,-.10259547678103018,-.091800365225333,-.21140522933050648],[-.07054189829438295,.055085384725324385,.10152834971804957,.023622039667971106,.029955712367899665,-.026059948581330213,.11064289610687274,.02448902262906564,.021970470387027496,.020456590772125735,-.04111669361053552,-.024812216615053395,.009570381328390706,-.048146399939075685,-.0415428906870009,-.004548704608621744,-.022900698211748033,-.10095741160721779,-.03265220853381959,.03709112546748977,.014636490326762966,-.010920356400900416,-.02620802388201364,-.1421492222591433,-.1328932262467217,-.0332508284486821,.005475158414530362,.0918543916074954,.03601219590470964,-.0802670470963445,-.02961991599551142,.02687273746606801,.02497615529992274,-.10102174245681092,.10923707161980402,.07065506196696225,-.10935696983924399,-.32088041870161305,-.20436936980030787,.050938666453356984,.04630596161678227,-.05262469115928802,-.10829047665507778,.09088284694126186,.1917406651566634,.12934192659574403,.11859841393368513,.26210791199518413,.4376037251205329,-.07385994715913412,-.07658367956951675,.10680813952910222,-.08997439100075179,-.06155539629137219,-.0923508416585247,.024140264345503374,.029438378546550566,-.01563817377224519,-.149531624982499,-.10876112523177132,.19097881484789375,-.04989629255693268,-.16239346086432074,.04670990819198012,-.03345249467404621,.00463106172132965,.00642168837302657,-.12476862042997607,-.03131370997821171,.004210302086046537,-.025365848313462613,.06368428162444703,.13395358129694848,-.06557813559801265,.05746392908406647,.17256882128548656,-.11823900246670159,.060333559941145434,.0037599080210207157,-.03820046216335691,.06627600448818086,.2563406900545755,-.09393503103173206,.13649945906964844,.0034794918389711334,-.07276171981231429,.029458016256965223,-.015677874033259744,.19131561225163415,-.12071257308516789,-.04939723442900703,.0771758420509144,-.030486255311673066,.04978316949894561,-.05753275286302707,.14083206176111882,.17408755180270033,.009344634962950172,-.12819205088510488,.09792179760220199,.1484657616745283,.2171978344734984,.04431560174124034,.11561949899769568,.0792765520234058,-.12048788468641375,-.04967266400627008,-.032827416046744835,.00900155383757955,-.13278686515158378,-.20143225012684127,-.012865208501911994,-.05226303626701382,-.05920262987618654,-.11792756657567573,-.18198524247067943,-.0007483837776589841,-.13713941392620788,-.061325425375407194,.019950339910709103,-.06214736571349857],[.051024887449384534,-.01922395718204893,-.009174461854633904,-.022468174999506808,.021117503507854546,-.017503811543560385,-.22284744975320528,.022524903374325514,-.002424496075792471,-.09669110978372604,-.02536087003748085,.0734346080832236,.15108583605808631,.11522226443939282,.12970385672228196,-.07892908141229386,.0971984257244444,.21130504158510516,-.24960514180766633,-.011817596006589312,.06452775261913146,-.0853478690093349,.049274344563864814,-.061577460717206725,.06300063698633242,-.04302334930536886,.06905146361996362,-.09609209741271528,-.061694173137081795,.18034406030249844,-.1666445086341438,-.05109356223869132,.06917571184956009,-.11903894138190432,-.08578984916300497,-.20469477506639042,-.037005982899997764,.03479873154153816,.06328330768692338,.1478972715952706,-.06693283066180533,.1370086179892735,.007180549013978707,-.062055289428567216,.22475761134030817,-.07322221407641237,-.08035792293619494,-.11455643304613655,.20483233186130478,.10475578834704286,.10684387147188838,-.10691746278338331,.018058380084354078,.12868991682224998,-.071026767781369,.04412991359728386,.12003274537827949,.14236952685647059,.2190537724998522,.06972281443294898,-.08245383109483935,-.10618366730381419,.07981740169235607,.17121755891446927,.11078325008253855,-.15750058347569248,-.026069272820390225,.1750146727921084,.19358075940702646,.15583357970340797,.1314463732378697,.10802544440564531,-.01580916665744024,-.06610829927750542,-.14852678093276445,-.054744536677585956,-.06521712872590539,-.026931855854101287,.017929035819714334,-.025775341056924528,-.12464418113700747,-.13001928465651194,-.23174171618582257,-.06690040758341231,-.03709918303218513,-.030813190076789343,.11264856069224632,-.03527958243203841,-.06628848394994874,-.09488551131695906,-.13366242376792553,-.07720989271153213,-.09436897350941438,.05333587816027376,.04107406795843098,-.0447150092155036,.14382963030480442,-.05498812596125935,-.0022013354694158885,.021968655062323525,.0329439993755763,-.00677692035378656,.05570262724455168,.05111435516912972,-.007148749241351409,-.050493456857222105,.11605609625221396,-.10773904713211513,-.017706549245958297,-.029669410521942108,-.16640935186157127,-.04875160020425902,-.07476982145547481,-.06622722600955352,-.10651310165824517,-.0009259202999153306,-.004589917738051818,-.04181250460220687,-.029841850511205213,.04002980807041698,-.11834854906365051],[-.1416112996871003,-.061296967431052014,.008152802197050005,.09580526115002841,-.1214127956380826,-.15258322744582525,.1445927030579454,.10275339944853681,-.07691119884141498,.010478075151826548,-.064039029125021,-.08481304352806315,.025051235358785943,.08718079453348203,-.20873218012341008,.00402987842713752,.3908263188881774,-.018288190749202606,-.19371161443949322,.21355438299293414,.19218769418470427,.051337448826137444,-.09999922975422756,.06560446225038871,-.03319662795708754,.07785737584463275,.22272869520521954,-.09660168373600628,-.13244590058883512,.22634536048380136,-.02375972162136081,-.16636289752872985,.024375919555805453,.01118486694572602,.009020288519323162,.01738778004965464,-.04308044705175586,-.06475241767687137,-.1537332549380958,.1030300818297557,-.08629596402176289,-.18748306121414288,-.08318754746590966,-.03706603563440538,-.09136333793445853,.04305649858582673,-.007622316436817565,-.07230025752872918,.1894925008401041,.09158289855115606,.09320983446495831,.07843331855262725,-.08607143419763086,-.16935758248124871,.21392186250732342,-.07688049468387215,.1402483451766991,.18838915415855717,.1152888395062736,-.16631002548138826,-.13317013948622,-.01945242561990119,.013015089132922257,.28543941281728724,.2388198484611219,.2392913757225344,-.02547786873886692,.0117330467833913,-.03132957329691152,.026405820579143084,.17735025822121503,.1538678068616058,.02287846002087459,.1542302335146502,.10953014299545374,.19864560710489487,-.10957662520495322,.004096363221989148,-.0032426759955409418,-.06495977109603226,.0023590326963191174,-.08244372846458639,-.08719294144345449,.005623424808332746,-.02409368738540575,-.12474400395578267,-.14738765659502367,-.1384339616668971,-.09473659901959969,.04347567453548735,-.022122242308695854,-.05800862114062226,.0741040946979994,.02746811155866092,-.06814597348439966,-.0863811984694129,-.0727547775413536,.01615999106259601,-.0950641791933353,-.05594427267665092,.02497006087889182,-.09215561876351584,.02048570000419307,-.0495383796436729,.06212742736945331,.010981352953109556,.0281069884335561,-.023412794627361646,-.011846497332482567,-.04146028359695411,-.12375563021141642,-.007547760161504144,-.035060694212351605,-.05438205070951038,-.1278750006993222,-.06311331594403119,-.0786704970157521,-.005247233965600208,-.027462118424014734,-.04814512084639927,-.09709510446399748],[.03545597743673724,.0128099428975251,.018180045357868893,-.0038058205145671403,-.0473391428905785,.008615195889998109,-.046294359253758216,.016896391023979114,.07340276062823946,.05785371895283696,.04680123991164366,.017572755691014366,-.023834114056900314,-.02800510880140695,-.06170353602256768,.004149251834100753,-.09993449140405691,-.07415143924934381,-.09713415783444079,-.050639923311780105,-.05191574061349387,.04633997176765096,-.1012934597135337,-.010697452082017556,-.13071299055096386,.06522431405188234,.035157185372583166,.07844423662993796,.020870147580858485,-.0830089239809709,-.041877105840284014,-.03251360922176908,-.06593863979190927,-.08137176665262073,-.042073049920613614,.11944084377042556,-.1937336181189347,-.14790789457158546,-.09187052041979342,-.02184032185490263,.047335657392996534,.06039693830283108,-.07953507862322387,-.04669220242777411,.19614607438362058,.15002481494362754,.22469015540171652,.4336980233057709,.1762683606847948,.08500299107454862,.17628001447054742,-.08979810484234299,-.10576233006915464,-.00490481488295888,-.06459170950469487,-.07650366146768013,-.048692615426703015,-.1959757066288356,-.2756929869078443,.2625475120947292,-.05687436219884044,-.10875561753818253,.2705215482381407,.2063604487272373,-.0015736429213762324,-.17758806144586672,-.0015425548641356899,.05084244703010095,.09266811280723988,.030409316616439044,-.43178847946646337,.3670160540730404,-.05915552713614603,-.34464726238122173,.10848868139611262,.10612621366138617,-.04925116048880603,.1601444515038647,-.12372249481679706,-.15509121511818685,.10449868648330295,.1609037713099512,-.14487084764912184,.43188545598260436,.11981190997739517,-.13832753618194632,.011269255569863787,-.08101222726930843,.17513077192869736,-.046057084014966006,.03371088310478956,-.01526891657845986,.1826204514940089,-.10024918536752747,-.09702107848010232,.06611097262664944,.1577502390596653,.10256401881259318,-.06527800895654612,.019464702453137826,.188208579856381,.07608051722555227,.2071145488595253,-.009713325447248497,-.06760102277029938,-.045103764368489015,-.047137892479800776,-.043049664063698055,.02993233671744614,.005679077431092652,-.17630517422062925,-.03088436961453281,-.020628025119333808,-.10197146214534561,-.11425424743932233,-.020673918969270674,-.024767884264564922,-.07442495050694051,-.055048990658499254,-.037227045102696574,-.16215779511908984],[-.07004854198277595,.08530066759995442,.0028140785761861914,.010033301281905325,.08986762359259767,.0529128072797385,-.050135511453302736,-.02228583900517109,.04530241460992952,-.030119412353457265,.021823370321703377,-.006085642883348384,.02312572806344996,.014528954043079753,-.001568379465944304,-.02799562401482144,-.16607590496950553,.07873010375424233,.03699424295397007,-.01614183061388401,.06880105102941908,-.043417173628397525,.03898116984593247,-.06654045740379662,.003103912767383826,-.01300877439285942,-.0925951215880664,.12644069271642389,.040772818622368645,-.08544840678502637,-.13739227291848727,-.13311138084893973,-.11021206177568971,.0707625808043871,.08026074315831877,-.16877857679840644,-.05206002447695942,.13425360508864773,-.10535134533195308,-.3373757349842388,-.07080829111345337,.057003657841298426,.09227991837255382,-.011615223103444766,-.05091285023944582,-.16069489160844241,-.04884780321779832,.07138912918565635,-.04363920243088329,-.13394293080575723,.3051554427853363,.2378825509835351,.20977385697294298,.12056019868772624,.252825166497261,-.0023561720800214826,-.035137059913897026,.04960472579867997,-.10416358483192441,-.14206356834350237,.25291808177088004,-.038235474676427975,-.05322667789675871,-.16540845786613148,-.014617042590940904,.02880120515663584,-.10096787597225529,.10737683950894401,.12267043383933657,-.058069637469088484,.07352676227256455,.010539954637614604,-.05168825690470079,-.07282455206762647,.11389405098260616,-.09976301394153517,-.099681076524514,-.008315492485143607,.02878172341423068,-.016643684462931133,-.10306462657645374,.17421739601581576,-.012649043926851018,.2602579418293007,.13061127474097123,-.13680683615114592,-.05587822675260603,.0986701444365247,-.1397026142526857,.029744590816758114,.07390705654095783,.1684324925668621,.08906251617397061,-.08125408387015486,.008056241239143305,.1543330950158167,.06177496919834771,-.05038568057644794,.19950920633649696,-.09557933307478758,-.0788481139143054,.06665690153364066,-.07772986657418926,-.0596875925692331,-.0023500722459320737,-.004628203808677193,.07546071468405292,.11777073451853808,.24712980105754503,-.021968024854625706,-.09377391043437706,-.011643488223564324,-.05525333705073233,-.06744624445549519,-.09785971149418887,-.06774706138183413,-.11419175135531312,-.15447612433882574,-.05391384760070791,-.07208253018814058,-.10185711157346036],[-.014135164933848525,-.08351620053083936,.02506177369695615,.07597731383733511,-.1543708822276642,-.04240467277326615,-.03452427885496658,.1318746103998901,-.018956619417625505,-.0026675236384224726,.10305833569336915,.04032989332488479,-.10561491356176617,.017365472828129225,-.1593697493161278,.032279086189098444,.10529509601866645,.07502773684291111,-.11928350111773782,.10401492407708587,.14421269322823677,.007128635131672029,-.07999230142858263,.014274946401273955,-.038729777215095025,-.1369496012325143,.186445386861957,-.06511068772461528,-.1410148340207185,.22619054701312596,-.0019016328709244301,-.04933121168492856,.014047517480666363,-.03385219568968647,-.028526407496796823,.08622983044935185,.10755614463917934,-.04037824355494923,.0401683364611443,.254423683384837,-.3499242547867164,-.11829463044440175,-.11321507805468442,-.03604040215384159,.009141892405151082,.015127629290737882,.048542079162587376,-.11506255204173602,.08169630774673198,.17250695232340318,.15415826584650585,.10510570127990954,-.21704507894326638,-.14596864247047642,.1970892398119917,-.12398828975192644,.1006649481373078,.12172147584675422,.12480836369060534,-.05598789461769488,-.2182875907330571,.08053808104260994,.23046289660391583,.3188307130696074,.20521924642268785,.008184293940090487,-.05433468049224699,-.11191127753279448,-.005694662513528959,-.04305552710584918,-.040460404096243685,.10030692443116394,-.06003655304519767,.1452733061685307,.2579075437158094,.16199120552860652,.04930945198956036,.004073909578384924,.11099001371044198,-.02069114395125136,-.11143944147535105,-.08109487565146697,-.11638633381884322,-.03895624919097286,-.1298485818109307,-.2236539925226012,-.005858846799339226,-.03608666892894484,-.07714404221145209,-.04740737716788778,.02742854885666174,.09959705342375114,.040004259955310414,-.07300667320953605,-.01763581250990936,-.07207223200520288,-.003164568505454733,-.06556721401175034,-.10478061295325353,.009440525764280297,.025831878010087357,-.03882003987257043,.027511569211728273,.0367513377238121,.0405623227423257,-.003866548091157558,.012355677864371528,-.053858176855473526,-.0006595635459506807,-.0026597994151184197,-.11895782317212758,.02214340071685932,-.046808396987253115,-.0749102218744493,.018173403762517575,-.06641276881651718,-.03312873600388673,-.12808543381027454,.005088055874176094,-.08821524190039703,-.11219840847108876],[-.036364274597361676,.05608389184762077,-.05461452843012937,.12841266882397054,.03469491513025793,-.09926883893735927,.03521836057773046,.0017050223771709963,-.053720515111571325,-.10469756632201047,-.057793517872112406,-.00795045861665619,.07907900137487663,.17475876751746433,-.07374553605560771,.14078752799492825,.1794528978247699,-.028798495109090064,-.05341395361001689,.08864249759394749,.006758819460119546,-.13125029810181102,.03217045565830174,-.07593804991299713,-.045683415387781846,.098321469102132,-.11054865427299748,-.0852516840999124,.19879712870261834,.020722064313346493,.022471477480525272,.08237578817308527,-.1157579046569217,.0328426457385551,-.0834841949715926,-.07733155072037588,-.11177282516936979,.02498427327318196,-.030403360600728728,-.029024515371594548,-.10371511880806172,.01170137824392217,.009327774798813021,.002431192271711265,.1500675723201423,-.21394797471762256,-.11853920458017891,-.0019533526563885917,.18177937076706377,.054954598440171316,.1551092512502385,.030060622456317722,-.019865094069587117,.0708509919696671,-.0004859623728606624,.17946399285467196,.3063856996663314,.146942416449439,.10067729378037348,-.07308124369958816,-.08339445345331284,-.13131133309870838,.02608780563916567,.15390102230569283,.1496570405635262,-.12432072266765236,-.055197512874001355,.23539003120249477,.23071437717412627,.1781500643390805,.032433010859872255,.08525021523699895,.100993857605809,.07603880964904731,-.013731917856005003,.0186901648513353,-.032924756112736785,-.22858777194216445,-.12675914211780165,-.11187142301820072,-.12231050055181397,-.022442794199238097,.014664186213991334,-.04970852405255431,-.03197136015018911,-.03211971771044804,.044761469162405726,-.048496783217227474,-.03589974376074885,-.05985345480378995,-.046858773572646534,-.05426850895959756,-.025596949047592216,-.05982046484213491,-.029518961263161905,.003629743164617852,-.02050906475466513,-.0015230193399059302,-.09000268059633068,-.026575598812970537,-.010828662191731439,-.00958826298559367,-.008904725696501983,.0029521526762387035,.003804200299764901,.061865649665059336,.03368981709684108,-.06606612846773154,-.02437191906735954,-.034185476570230244,-.10893624295233989,.0071168280186506665,-.09401277488927702,-.018408076739696223,-.057181782869844225,-.026056248846387006,-.0888896053651359,-.10212222492182724,-.043049828055051656,-.08505074774988258,-.026051110695555976]],lbp:[[-.027900321369488244,-.006044199455398492,-.029117905545804415,-.012327610537342652,.06185447666208187,.09567131789532429,.045971729446465374,.01553067346468753,-.012023121825700329,-.04029316502294227,-.03322173306652716,-.0035958268721606613,-.01385740637219859,-.03450377517429722,.017543175352255434,.03680790299409022,.0847701638561991,.060825220456424196,-.00935843747826113,-.04819258479124828,-.006594678414882305,-.030168034388727068,-.007336172112964571,-.04981223035149489,-.028525647622325873,-.008985143677856357,.037542932347811336,.07584997109273485,.04046362717652212,-.0202219777393636,-.010643448968773972,-.02597332435700083,-.029295410910686326,-.04958557380007504,-.016454172237658507,-.01348227645475572,-.034207328190167335,.06916911709301511,.04341473868302394,.06651463175082448,-.028013646641570675,-.002808516849433361,.01284602628352663,-.020229423320994658,.026363734996447397,-.02400313852588018,-.07141862886147399,.019799399074940063,.04796180221159682,.09039578917374613,.054870436486652595,-.015562181031975555,-.0052396854064607895,-.01338270347368932,-.0017450580356042078,.0009739701663268041,-.034245488638524155,-.029304216678874513,-.015762970169531754,.01232351078031502,.11024357683264789,.0052690576096130134,-.008271066449519145,.029191444997078354,.010481969078390848,.004867535658230967,-.004357914887196321,-.025720306996157922,-.06530772196855876,.016283145128269706,.042681321861108915,.07498524732130186,.016473247914334525,.013771073119619424,.002409271209863519,.02402373658667337,.03311091154698853,-.05687492377498366,-.02779707998033664,-.033810769624174404,.015078596551516596,.04820954520557273,.11415003087810688,-.005045314880618407,-.02453712965304819,-.00468780761366161,.030698630375551105,.03616439372074893,-.01765972731560144,-.02758989133869354,-.023775739038709096,-.0031653848755319783,.04385389272570933,.09352219252385076,-.0015598570273860773,-.019099238204545323,.04150064282791227,-.0029952551344066894,.02004832980498979,-.025805960318499716,-.014023218349180466,-.05204508933789034,-.008967676159698228,.05968818401249389,.08279211495839547,.021692573098100312,-.012200151839688603,-.004015872271331863,.04825409050791357,.005056525905835652,-.02977959275157679,-.045801516188543855,-.02221712686320438,-.02680636546639706,.08055750324533141,.11124706386872835,.024835176089393517,.013030726244874311,.026214268291071548,.009254142110422293,.054743249486413466],[-8733405863695955e-20,3744511793518819e-20,-16718852112379556e-21,2644971743018601e-20,.000264462374124046,.00018012006397465953,.0001307947973358814,-8923372716270438e-20,8777826143574648e-20,-2862970558377073e-20,.00019466262098214414,401751329527876e-19,-24470034822768327e-21,-553029953063288e-19,-946423652840641e-19,.00013992126181657828,.00025974343567526995,.00010836805931595294,-28508338861643612e-21,2061224391589761e-21,-5454650161993693e-20,.00011548126318818193,-.0001788968780262537,10106236414454163e-22,-16477072134012073e-21,-5446247916799025e-20,4605661321252204e-20,.00020886964911843303,-5986031362176236e-21,3914661702177774e-20,-.00015653886989401913,-5089337183815379e-20,8382851271535735e-20,-3925996520955967e-20,2902291352309405e-21,-5565629934778556e-20,-39745247630351005e-21,8272782580313887e-20,.0002161522182193877,.00016964902161820464,-.00015046509771197286,-3921198670451664e-20,-4180425775067442e-20,9894267364120909e-20,-37700357389545795e-21,-2177725722603708e-20,-.00010841746095995551,-.00011250296826445516,-28088672225879026e-21,.00024500271057997097,.00011698005994424145,.00013699860971772872,-.00011632402760545536,3875862751891168e-20,-5038359769517133e-20,-56491249769561463e-21,4185884009918865e-20,.00010510216324040138,-9590859027243034e-20,-8266645789113854e-20,.00014673240802820162,.00017376564896403636,-6678574946682864e-20,7611797237477933e-20,-.00016836279120163201,.00012436785920524364,2572483873684861e-20,-6233739114039019e-20,-.00015376902099116518,-2748263618047534e-20,-28455141653132252e-21,.0001245843209365903,.00015628289279003135,-24736989716003788e-21,-2091205958625747e-20,4322119151170013e-20,-10154715937089193e-21,-9984940135583913e-20,.00014166961818393338,-9975850346157812e-20,-53681414486151866e-21,24697228767074902e-21,18249672491638027e-21,.00019364243897489978,-7270865905296443e-20,3833503229743254e-20,-1941096106845841e-20,-3211589312954611e-20,5194800902761157e-20,-3828665286790579e-20,9718914766922854e-20,-.00011816184055358711,-.0001608951052632472,.00011623698043458554,4914609018877997e-20,.00010181714739832155,-14287799392848771e-21,4329186978297046e-20,-19967142031866378e-21,-17367657007066883e-21,-1958295690860596e-20,-3283281790984749e-20,-53813630280598324e-21,-56207569526993666e-21,-53241932910777154e-21,.000246150675620279,9755325673970752e-20,2184380833295408e-20,30258380552987147e-21,-536994548692854e-19,-25230762735903084e-21,-58324496095124025e-21,-4704951979198578e-20,36195180921022346e-21,-29440640435682286e-21,-6951691214569111e-20,.0001245682381541666,-35053968305372846e-21,2198652730018625e-20,-15332062580714734e-21,-23047309958091743e-21],[-3608404341198324e-20,-19306572941766697e-21,6646962740002819e-20,-6962670685985856e-20,5371768560670769e-20,863369060391736e-19,8214216469496285e-20,-8171114091498795e-20,4020583642892067e-20,784794006856715e-19,-4903957279393974e-20,57453551592964724e-21,-.00010018086975340998,-26147792389851886e-21,7119822499740576e-20,256826894427754e-19,.00011929111371736115,27860714214499385e-21,32654486739197575e-22,-5557377778477035e-20,-2404083623067446e-20,-3701581477554526e-20,-.00013308586174926723,1923769352976841e-20,-2744584321235158e-20,-1199439585908063e-20,3503221513237692e-20,9488962331498894e-20,41828095702725956e-21,-3414743435345598e-20,3169205730994438e-20,-.00012748342849396022,-15840876485394284e-21,4707381531842206e-20,-5421937970362389e-20,-2705782355519326e-20,1957250209402156e-21,-4288536254476449e-21,5178424749251176e-20,9761401759530303e-20,26206437789333403e-21,-3840723379957417e-20,-4362072745626999e-20,6128293160232842e-20,-4148454691484116e-20,-18991776069687133e-21,-38766273328664363e-21,2484202617520498e-20,1943116733871264e-20,5702208359950611e-20,3694337177818918e-20,-22802079412020948e-21,5853333390840043e-20,-3813407529522361e-20,-.00010733273350739298,-21349054282106955e-21,20212901591327992e-21,-10308234675579855e-21,-.00013178259714422685,9279272103850794e-21,-6406096160121999e-21,.00010489353656312206,-3697248644238607e-20,19205959162101743e-21,-2511990116356623e-20,6667792694283825e-21,-531731014322967e-19,15595662104549764e-21,42063861440242226e-21,-.00011208840161249227,-804760850466775e-19,8680420622040122e-20,8634418119911509e-20,2871909928729363e-20,-5315547640919859e-20,-545706460408045e-19,27740013315707968e-21,31290284801600062e-22,18897139614309187e-22,-.0001217910193286112,6684001979999701e-20,-.00010633851278423791,3585974050224726e-20,.00015372154099424235,9348210886095994e-20,-5125286229408369e-20,-11146007599487084e-21,-1974434348965201e-20,-7876897525998811e-20,-7589343500492146e-20,1.324648660373383e-7,-.00019713417520837023,-1337483475241652e-20,-3224358743243727e-20,4596303620339401e-20,13630966931021948e-22,6109082431611079e-20,-3706394435481347e-20,53774349412737815e-21,28714809252497475e-21,4306878791979218e-21,-5939860073451411e-20,9406447132680748e-20,-.00012585758504905786,5046091931880468e-20,.00013218227218045244,9039100886970575e-20,-6429921493615598e-20,6142853695939934e-20,7.239739626676775e-7,-6366839054444684e-20,4875875996353772e-20,1370601692269463e-21,-9797285675387216e-20,2971466240122016e-20,-.0001706545086223566,5.612942066759996e-7,.00013050423194534838,395126482290141e-19,-3085847469895715e-20,-8077273509681307e-20],[-.00010041713705304361,-7500442798199884e-20,7757883670955843e-20,.00015060096637672937,.00010272729354795368,-13455811985058075e-22,-8513816673568278e-20,9527795830454114e-21,-5125057113741175e-20,21937041723950335e-22,-29906736665197275e-21,-17822507535654366e-21,15920560761634173e-21,-4.261982569468692e-7,7562151950798492e-20,.0001239109032662375,-3722711977173065e-20,-51851912943837175e-21,-803596655161512e-19,765565067066483e-20,-29340700929650354e-21,821553152150125e-19,-6.016349855747852e-7,-9023135480878573e-20,-.00014677611474230284,5845918636756403e-20,.00012920305793076987,6872786215014054e-20,-5083503031854536e-20,-49057975777679064e-21,14667265166828924e-21,2286695792285548e-21,-4079314741480466e-20,3183308135739065e-20,-4613990727000831e-20,-.00013108954174256143,-4501484916721865e-21,.00013512478717948309,826930538492766e-19,3721284922523528e-20,-.00021401767748336522,12160803497153136e-21,9.952609802427875e-7,-4075124924977393e-20,-5336328559522527e-20,13589464997432535e-21,-345759529827485e-19,-8622627695634676e-20,.00012833142734719472,.00017949919377930994,-765882636792354e-19,-5944682094518802e-21,-33933589792761384e-21,590313072185069e-19,-2015941600058864e-20,68480128461272105e-22,-3508045003294022e-20,-.00010776252403311049,-600921381866161e-19,-2159187449902837e-20,.0002085712636860533,.00013308075647107918,-.0001903889494856842,-4831173646739281e-20,-44977282909152566e-21,90492245632956e-19,-53993236004005844e-21,3127550397951338e-20,-32914668064622926e-22,-.0001300625110249795,-6266645850235139e-20,54666608924943544e-21,.00011702845908493319,10892085020900236e-21,-.0001916205540711466,17055725050175042e-21,2974210675293909e-20,15551139561116503e-21,-4502371600243263e-20,-6583516855715454e-21,-.00012255723604855578,-3920737276867474e-20,5771958770709948e-20,.00026173109381898325,.00011301129674169685,-5080215699575707e-20,-.0001243869391549888,-.00011512378434027151,-3374354581756056e-20,-3513223524136323e-20,-4634590006692987e-20,15030465562238389e-21,-7910833311019355e-20,-.00013976057205664083,.00019173792465106837,.0002331493622096184,-3268225732732245e-20,-2227669270683898e-20,-.0001315957648230781,-53703861605495715e-21,4665197153655133e-21,-2972979099864076e-21,-7426673074854666e-20,-5389279737498141e-20,-1316760153250926e-20,-7308982049164525e-20,.00020790545462955686,.00015786906649726715,-6960744974618783e-20,-7326178037883428e-20,-14507107393861574e-21,13219651490949808e-21,-6593083565341155e-20,8711061818104937e-20,-6526758037324852e-20,-9101278128805738e-20,-519613620658093e-19,.0001223100464897317,.00015993077204011844,5.661236479985454e-7,-6648288869066455e-20],[-.018520133751243464,.033336491324542555,.06081972052702993,.0403234188341325,-.049047834696932316,-.06347096044284493,-.04169138568148076,-.044039608866153525,.011258972442574882,-.025539787514069722,.04310353541979861,-.028504032717188526,.021790396749209295,.04481318360580548,.0723426773739236,-.005458099176353502,-.06882073452470694,-.027963615041034923,-.043243973359288305,-.007841875469478926,.024040296276847006,-.035356451324435254,-.0008604274289066407,.009646784441390738,.029019444355814925,.0670228673130171,.0570295199495771,-.04387390211614425,-.07566337240739801,-.04686804669941795,-.018264867445612423,-.0074626900784457925,-.021262044142767906,-.008244104627304624,.0029955900266555547,-.00897292208556475,.06110079190021996,.09963612574284308,.01246798784414134,-.10296028529728725,-.05237128920245662,-.027534950783727603,-.02944553940547851,-.01443811042623852,-.020597801030636742,-.006919272938826654,-.006835391157824029,.04688884353545417,.09541942261577638,.11952740651114951,-.07175987915284258,-.09754334934777459,-.038581839090091406,-.011359375549234043,.00964142181655377,-.019377865703622918,-.027301905307660128,-.018976931848243853,-.00978742203227878,.0524944655238334,.13673694152340612,.07952283938161182,-.12204275357398138,-.08665908796412561,-.05078845296122016,-.0095706052201628,-.03186742656352511,.006540302317521961,-.013821229136400558,-.02584184447720775,.039927962074705635,.07878385751956893,.1450947970513433,.015223051588865631,-.15795321280384766,-.07811502424267372,-.03558611880595702,-.007443419814041202,-.003139865749646073,-.0037907036206188023,-.017030151899642937,-.028687071734543906,.03323129261766285,.07811298264506993,.14321815919795058,-.019232041974005604,-.14758943164396549,-.07987934896985584,-.0083758813479438,-.001332845218467535,-.006955522360264185,-.013965719003215596,-.008451714274353456,-.03063597972542298,.06256465713920223,.09748393378111853,.09839310949156199,-.07576570448441355,-.1345049705963265,.01408859066995908,-.011155752837349455,-.013224455473029723,.016020761294862018,-.009200938406151202,-.026044280280468072,-.008994262269942425,.04051199985592628,.13765939646555747,.019532039084030235,-.113685740386246,-.014674643494660689,.010068963393355071,-.0027238337107524657,-.029503771627642287,.023985321668865342,-.030691543491141608,.0007527324046454065,.01650943903238357,.052598123173995245,.09380740707326368,-.01016129896564169],[.022420101691410947,-.012639778282766856,-.05496752491430325,-.09678359828499591,-.029278797210954027,-.027140150032464422,-.009086276427296383,-.01436525543604809,-.003687496591271795,.046401379667166204,.06944892468679216,.04643760574981822,.054029149328551414,-.014720520773996864,-.06291613085606523,-.09877570015592266,-.04567817860486598,-.010326416710093567,.0033233465331775174,-.003408377595803285,.01848914529385009,.061679618222812545,.030027128801833766,.05634758692836747,.02544036002266721,-.007935323661302764,-.09041002155588418,-.1291963326158919,-.03453677250699974,-.018948700084980397,-.0010618822071395313,.013098312160546995,.03236384831317149,.050549191984487554,.031990411924285006,.050348641795340286,.055949633963116994,-.021494030157359074,-.10945006672723176,-.09734195910364446,-.06973361211604338,.00046788820631171735,.008809643251631341,.02199434250102591,.0027410119068893707,.03937245459175063,.046870579313232824,.06560087237985632,.050120908492025634,-.01648319597891807,-.12612174723616837,-.11190212135650279,-.047331697359264666,-.01726103679627998,.012596718517964785,-.007534987691347805,.003800587779043199,.051789101650355995,.056092751053536116,.08408229549261982,.07714876790536954,.01105027135906226,-.12128857542605344,-.12084191927896829,-.053176729528096434,-.02708040311428029,-.007567852199102276,-.01607121542877013,-.019007628063393803,.030912220436668407,.06118279351109974,.067857694007842,.11648893540497803,.0512344485487121,-.06204776879033164,-.12295702506362237,-.11728242791483995,-.00044317389712395395,-.0022492229405423753,-.027298027461083098,-.0037412679982248703,.018339305301497556,.014062213845781296,.04277676110368374,.12121831309988876,.04392224162907524,-.06079051210766134,-.14710686167847625,.01682921191415422,.009774321084507043,-.02655745267922931,.01411019215769007,.0015911500130474376,.0048095535457472055,.029093722335047395,.02204063036696597,.11057315594923375,.028480643798939262,-.10628170570505348,-.03590828412810325,.0133539331015953,-.002633742567859254,.0037217642215676694,.01211758091302224,-.017185123404806685,.03753956093170496,.021332506924666678,.03707666923018141,.03494429733533575,.0038125076728691906,-.011494533354137266,-.0025310349463153192,.017794319144349827,-.0060675629645619775,.006180238569289925,.02308753972166691,-.00907376454764161,.03951653694732021,.034463079883642105,.03244860091570109,.03440298478617001],[.006833664799623482,-.018868811143753335,-.05913603583224984,-.028733110863327534,-.04829617939991479,-.013674449873764477,.021589567751534984,-.011045509577009407,-9258630983010165e-20,-.01960482191389674,-.04355428178094816,-.006765420902067568,-.02068305720368354,-.03070186802345203,-.028849057542991427,-.017812677518967715,-.04503183248327566,-.060820037371985124,-.010178321392366178,.015937284977666402,-.01698509349521011,-.040648498140976104,.06280897878456403,.033289631093537754,.008634099432145863,-.010322738843516595,-.05903252336323617,-.06391120751890109,-.04096234057148166,-.027001415147463827,-.03498983294880336,-.028182307754725123,-.04299820329555072,.06917007261987672,.043703797355855584,.05282910539234762,.047980736517133415,-.06274650882720548,-.07875819635466827,-.0751276708793455,-.0671438769251954,-.06672639917254525,-.041696339372405265,-.06075015207955728,.024187583912489444,.0686409384492342,.04159853360684597,.07890656921433366,.08397942165203948,-.003826384504148673,-.12006341244852366,-.11316397468328382,-.13578926241060613,-.09303774206309338,-.09433132526637494,.03937483983702499,.0018502894554712629,.000984038845573007,.04325107519511976,.10289600250798445,.10139457516638843,.09829631821399298,.0015172138792846615,-.09135330947280887,-.1440860031190805,-.17601217218477397,.002721697853233701,.0050459512202331094,.013052368344425278,-.02268381542321192,.0018963147223881672,.058561197832169565,.10081746684744355,.1284091469146558,.08188906646407153,.020432446864236044,-.04116799001043432,-.005502874712895622,-.006594260156849684,.014863290940840906,.0037309761431811826,-.0055733957673353585,-.009515414176632847,-.008563542363006937,.01325304930824055,.04873259122927679,.06968257130273349,.04672070338900198,.017479981197113373,.013140374943216824,.00573389677019673,-.012003741816435577,.023955505761992523,-.030000657870097674,.04756330464976506,.007725961017352905,.03323790246434746,.017011399778159172,.06153392137062173,.020212718731567866,.01730531135395401,.0022897792857957105,.0016835294612028012,.0010206390840901067,.01747502317182413,-.017949934386931946,.016500074421584708,-.011803197631711164,.007137586575514963,.02011099182013329,.006651065061760698,-.0353549624782888,.027934388454869896,.0035907122794057167,-.011547179475815586,.022730843153114938,.006345055638745614,.06398828539043275,.033769980297886006,.019839431713957675,.040068406254536615],[-.09183594794624823,-.0466043876758261,-.04167687453198425,-.033930262028828845,-.03517587565580586,-.008045362654548874,-.009021658985160448,-.02121447197147619,-.06292548586295785,-.05369020745787989,-.0618588076252395,-.06937986410985425,-.02060369128265696,-.03483097193988242,-.01988932284646744,-.011468099868646962,-.009484774253505406,-.025059650809968075,-.013132163916809988,-.03437383180845529,-.02938879979144582,-.0546787384022234,-.040920673499650034,-.07902649047779237,-.03130123722693372,-.00718723412900148,.003445843327260077,-.04206580964438329,-.021031719352458608,-.001277101170823379,-.005576040960812231,-.04990522219778968,-.06783574597887165,-.025379854810453996,-.06049669189310318,-.09568385034463026,-.06689754291617617,-.06521449364129495,-.042633834046964025,-.07740133422043802,-.06922515967705593,-.04659656740582098,-.04853220277612018,-.039853128982711955,.05879198798647087,.019029808637362255,-.024286125044301457,-.03253634836244591,-.054850631234694594,-.029159852423518498,-.017140255241788596,-.025126219632764957,-.02186622142452392,.028552819914696353,.03999190078200991,.09774584592893341,.07500340541645678,.07430547425958485,.046933143764967475,.09859668083056936,.06983018450778086,.07664797155219553,.05500541911083007,.032350115276010255,.09666596274036102,.010918853676894331,.022113519271821657,.0523225365915608,-.012178262012994243,-.010455542631323735,-.01888044146641481,.004719973212097298,.0026889619208184806,.01898501972382094,-.002328472551695579,.006228653959377713,.02991543479514363,.03554504200969132,.031166989162956585,.023817329421070923,-.027070265784234368,.012571032012612495,-.010191882170487051,.03802797654560244,.02158393678645775,.004170973015102178,.005575382535277115,.01728290035888932,.012313387276719573,.014888890182775907,.0026555936507575845,.004149131184151679,.008924752394914795,-.03519222344913451,.014939222809458778,.014096628107623346,.003899474407467603,.0038988514456372763,.017266521138772535,.03424435600609853,.049763931691756066,-.005218910309326261,.026330780935207528,.0018007141228710017,.0402018419673863,.008387995416966193,.008967125049808011,.021011865402405266,.005380946747830254,.011462851184232362,-.006613398874329282,.04584134978530288,.0475920900891177,-.01138244385540027,-.0007092748000230714,.0074075056026355335,.001984700907982452,-.030303270976541313,.01851775398647603,.02621673416832952,.034368064491053237],[-.02753103743267269,-.04099006670908386,-.02696562329553056,-.012312380363310317,-.03944768652546398,-.03666523046247578,-.03744739031566407,-.022587619011761463,-.0625821001747217,-.03342350871319178,-.007637317988414916,-.033315735899947165,-.003948341269635777,-.01627351051013091,-.012992687546803472,-.03437263696625451,-.03435111582313348,-.0510893061833293,-.04626801483244626,.033800057143038305,-.007358659571581477,.019133386626946858,-.05829785436340175,-.031082988073954963,.008377250974495693,-.03707132419860096,-.023704461959529924,-.039291684655309064,-.04826391044850603,-.012347480993205387,.035773003788554164,.03715665941723243,.026570153340676375,-.037942266517026105,-.024176653665932857,-.03130706147406964,-.054205313513014206,-.06768275375230659,-.053316198087527286,-.010338522140239293,.029942502875344803,.014711352823963025,.04980563760374265,.05237150204962154,-.10703071666798925,-.04501119930425149,-.09273134834521438,-.08509334969421603,-.06361011095044078,-.009523520649299257,.04274236525114643,.043444162762555597,.04603648581621214,.02877888643752123,.04790715055446394,-.12009138239136509,-.11012922541438776,-.07879836373267819,-.01873724788103188,.031173984486382707,.09507464957619034,.060365097674145295,.0192205547976207,.01388973862340221,-.007666683391016546,.01633660664697714,-.008940205583487165,-.009503128569333559,.06964533578156246,.10401039886252086,.052459790243731555,-.026938277073398003,.004284176371855913,-.010856375573225323,.01605273011301905,-.02894886868907141,.00023294115249347658,.10367861418152627,.050069068200320935,.03685333261379678,.006503829118936898,.00554763216473721,-.001084420000763836,-.0013256537401329926,-.0055543179731149875,.04532956341916991,.006535607422749515,.0006077852420976783,.0720387039555034,.028968613954759095,.01396712994861575,-.0072270944036459395,.007223170941502544,.008856422903267491,-.012818406202984009,.0018158551557052593,-.011048631845851281,.008195206301087388,.012550415026440526,.03069656579488156,.06797584711521609,-.02220979552793179,.01737394610788519,-.005838170895901457,-.01693308811992302,-.020606794484921063,-.003704387174378517,.0029398368329221804,.009607897483483577,.004161932105397739,.0516685017960679,.003998946113622753,.031118179883235883,.026294533996712728,.01753286865508474,.025533735463243126,.015158623449280213,-.007948093099936132,.0038964542185176585,-.0053933087386399264,.021361178289641174],[.012975868416211518,.019239320212785932,.015861069262982933,-.050083983501051685,-.014830404072943748,-.0424289245308103,-.0546374523172155,-.0878762149438238,-.026658677207938124,-.015590232984336386,.03689943449493213,.024659476737796934,.0020171111101438682,.01792183479538166,-.027324028879693207,-.013180029299528148,-.05575312970217452,-.04908486985614233,-.022370349979819272,-.004286198645007025,.04158855875057531,.026714819884015438,.033049974332900536,.008952144881169272,-.017401493840176877,.007542824301934162,-.05929647739931365,-.055868974136098246,-.05766043388721309,-.04284635119162802,.014163595597386905,.01612640939175765,.045832162409125146,-.03439907801328182,.02414139532328007,-.03480844516109875,-.04034265201985267,-.0712113540832054,-.06622081461788189,-.021197302763752403,.04015424602323608,.026897565966803642,.041075505774253465,.013102896697572107,-.05480234757474079,-.03615843428627315,-.0256495795872312,-.03170930021161294,-.07192249463955766,.0018536114632540868,.06135675209286226,-.0047182623867055755,.04074858701900924,.013385521369616127,.022021140563933967,-.07134501745680569,-.032751414465768555,-.061368302060063384,-.07748401723316255,.04023545911315542,.06810335862563427,.05265230480605027,.03710998185032392,-.006950220716361566,.0099627248261238,-.013836396194806236,-.1076545781769893,-.055495023231610416,-.03496995103010396,.01121193007638921,.0718124994253257,.07345257959210601,.01148280537459053,.0046876216072186,-.018292746840584097,.034170522532356445,-.010280828511826764,-.11953193347980212,-.027928919333068614,.0391831675566509,.0547844453121025,.0583643920865288,.010347645401137313,.02438343669115889,-.03722491457626667,.018329010676908897,-.02136233863485139,.016317900816211706,-.036988609665871267,.02534543374576112,.04992907977420978,.04624311416244649,-.004960518245054349,.0034919992815497097,-.04484656903233744,.008315169342987538,-.0013347971554703852,-.03179501043076588,.008411224541488016,.04299524896058729,.010370090496971934,.032726802355203644,.01761362144315562,-.017879863195363097,.01304441155731989,.003124595073743172,.01780561320147782,-.008391127850107934,.006798248666313525,-.013767337935693395,.05600843124586649,.046170998183484704,-.006763094409893727,-.011002116865157521,.021424043858876557,.024102164398572545,.034701661533462574,.021782351862351945,-.020308680817982358,-.016830911622128797,-.00899775054774562],[-.0005328872292873488,.01181232486259727,-.0097595448326459,-.032900195859997115,-.0400553091181672,-.08766411824986632,-.05468227136762457,-.012138385460291765,.008135289535704207,.05824964665941917,.030708308006623514,-.015344928171805335,-.017993990035881716,.004920391091459728,-.013878741210342176,-.030835237792518008,-.057101218092033765,-.032671359607370866,-.0037749689752403365,.0469752598884856,.027796476796038583,.009252309128265579,-.018920714229260328,-.017057777895009705,-.0026666003038471045,-.03211973189641702,-.04497372299943663,-.05538368996902822,-.009123266518274652,.042052749594025995,.005945540402227178,.05219989282131953,.01392172979504619,-.019417768980458633,-.004212080572451191,-.01605947649722595,-.019873270609575895,-.0632108563907854,-.06190209155478818,.010727975525090354,.04880108856817372,.03739279703849559,.007267363268597712,.012809806033498544,-.0034510716108627883,.016898125070602375,-.02258964010499252,-.062363076360741024,-.06095458595932454,.018029070106769074,.07160099269491219,.03903485527346992,.02091899590499463,.016561765175755305,-.02386696149634271,-.027629495788895585,-.029461697539283106,-.05511122466510598,-.0689533243854774,-.03177643247751053,.03810851559309378,.03261623684462288,-.005689124686065222,.009569063385281198,-.019286757729714242,.006244612168707565,-.028641062503210957,-.044571632732540445,-.05624718810414903,-.03574975310289123,.07336553909199203,.0676553327913772,.026480919164869672,-.022367434017255376,-.006912534712572561,.009889915693673396,-.013395387566733363,-.05983754383467262,-.05507139597108082,-.05723468266875836,.026937252303024146,.05677800350182122,.04551233137743267,.01048979528057183,-.021873444057054492,.00025673627436038904,-.009198435994732329,-.0032360325511277127,-.0984539463761526,-.05663439057337742,.040879143636173176,.05370778846834311,.021417408905106447,.03366002971067647,-.024266957419143365,-.03972053131311021,.025845458247811957,-.003673727574750832,-.0019562811556378054,-.09207564398085624,.007153773261709066,.04823548820375423,.031953649727852425,.003989147112834171,.013123842004803394,.011507174787329752,.004859902547353662,-.028069938515581847,-.01371471244881068,.00445041420022059,.011633142638130397,.016824865792836985,.04401041904923399,.043598608889422096,.010461702283433252,-.011713831073031492,.02335003228067359,.02582450844413056,-.040208662190134595,.02222162447392509,-.018983577713146488],[-.00012902298195700823,-6203914310290437e-21,3270188625541584e-20,-31071238546384605e-21,-780123899081081e-19,-12260737746391803e-22,-9342863494700947e-21,7583394283932829e-20,1883802543940164e-20,38241995713984844e-21,-58626520388890824e-21,12707156678677667e-21,-20943050504294153e-21,7261809523898682e-20,-.00010859928908422273,-2898545662871621e-20,-.00016736251968167692,5813389186073992e-20,.00011171839620466306,17754895131873172e-21,-9451887160561584e-20,21444236751338823e-21,4686530062475956e-20,-4638768128616827e-20,-895608969877365e-20,29042840169843376e-21,-819428493777051e-19,-6123646677875594e-20,-11152819677964776e-21,.00010188996994199562,-2219289260330104e-20,-2286896213429812e-20,-.00011509542457514149,-4975805732385097e-20,-19393139160640838e-21,-9473436244123584e-20,-3080227941041269e-20,-11207452486435205e-21,-8874927481172215e-20,.0001330064684000598,-3592527180081018e-20,.00013742103255615784,-.00011808493242440599,2241467472778591e-20,23854116688329374e-21,-4532237684537477e-20,3457318004287946e-20,-46142794075512694e-21,-7534899474759271e-20,813877472354528e-19,3379655202032095e-20,8444712037840307e-20,-9027489545843093e-21,700808572933545e-19,-6146002971858106e-20,-5396774592323077e-20,22718206186092202e-21,-.00015616234415340852,-5694850548253194e-20,-7411583686896261e-20,-6348787135312256e-20,7544618472959952e-20,44606522477112776e-21,-.00010450123996736185,9575220196807177e-20,-4457919795537724e-20,9041480675917729e-20,73014201662433e-19,-6609443264028042e-20,-.00017393323793045423,.00014375964009427644,.0001411308038314421,-14170194328547159e-22,9805969688744115e-21,6525306061404236e-20,-.00013047653881412095,34993317070665386e-21,-.00010216225080474789,-8421970014757811e-20,-9702506200079787e-21,-8518306964659054e-20,-18574643331822427e-21,3863750428530015e-20,7924976063334796e-20,-9677401340536795e-20,-6275449754510574e-20,.00014663167384857193,17006970539279118e-21,5515067301717358e-21,-5171150202431564e-20,-.00014948514404445907,4859077783214705e-20,3882034565911435e-20,43569583440402574e-21,11474225398808158e-21,7315650444834551e-20,-3817228096697489e-21,-6370758050999042e-20,7265951093617107e-20,-.00010594170361082414,-6334462175296759e-20,-54025363748051725e-21,8306140391016459e-20,.00010798285789356821,-18400164812460568e-21,-4980449602800738e-20,36572621350011714e-21,-4748162217272853e-20,17943415993419156e-21,47690435629216266e-21,-12465656421243882e-21,-.0001963530594405287,248024743702141e-20,.00015032297597119496,953196115957497e-19,24341784711353828e-21,8413530791243073e-21,-10237800380508144e-21,1763976802500629e-20,-49211961308678887e-21,-64779795722128e-19],[-21081829939189364e-21,-8362088116248235e-20,-7932390148413155e-20,-5636956366645684e-20,-25225019111016402e-21,6703834026125543e-20,18979428320805604e-21,-3638366764309063e-20,6353538152980426e-20,5820117801163101e-20,41579935042042955e-21,-8024625708595318e-20,-7702454308859512e-20,8015274585669932e-20,-.00014513612413195485,-25225497027576353e-21,.00016501583478403825,26271142708690046e-21,25316005334570513e-21,-6710314871762046e-20,-11803827654757997e-21,-372807048148985e-19,52411115100495795e-22,19188281117332165e-22,-4146106415075894e-20,24848310095391263e-21,-.00010693164000688581,2629464942982779e-20,.00024742918857803727,-13795393578770743e-21,5782187472772732e-20,-6354620165343336e-20,7918485955484174e-21,-29438053918515172e-21,-51191789614749364e-21,-5229702720297184e-20,-.00015826280154122114,4470993391159778e-20,.00010006580584785707,-15725171825552758e-21,.00011394254284542574,-12176783409917694e-21,-6200618380580725e-21,16735056790493242e-21,-323212180565087e-19,7045531076459556e-20,-11204046406237695e-21,-3775925249514204e-20,-9670731384767844e-20,852803283836217e-19,.00010626012688529703,-7905952313793047e-20,8752635172308131e-20,-60072534243107534e-21,290057435677212e-20,-2231589629678437e-20,-6257719900576181e-20,5183460169959201e-20,-7817887703419856e-20,28746546782532946e-21,9119700973142172e-20,-852854351947735e-19,15505315731474678e-21,-4311767428466929e-20,51101985086758703e-21,-25995519087103932e-21,9540315959162202e-21,54456486999133005e-21,-.00012492021323487425,-8446861626216855e-20,-9000869760849206e-20,4617292956130177e-20,7131283142743387e-20,-.00011470771088624421,-14346991649049484e-21,9745371306241332e-20,-4103792364993058e-20,46700567506506845e-21,-39864452388190625e-21,28496279151997124e-21,-9066823994197191e-20,-4474333361753689e-20,28884441623257457e-21,.00010540785842768621,3850540540015733e-20,-.0001569862310024095,7333505863876388e-21,4980302809686615e-20,4761492243998699e-20,21925161837212364e-21,-6862967496700987e-20,-.00015530778840890948,-3100212558819124e-20,63968237768941e-18,-3110652125908053e-20,919348370598315e-19,26946272223389578e-21,-5428276280328463e-20,4019534042066982e-20,-29248092071432023e-21,27237642583656692e-21,9818576660706167e-20,-4238942943930724e-20,437933802041688e-19,1648143860304152e-20,9624841075065588e-20,-3311887572221084e-20,676991250226841e-20,18952909147867698e-21,2937141984699513e-20,18803983863591715e-21,-.0001918611946931155,-5361492348410202e-20,-6462519662564503e-20,6210164219470058e-20,.00011142710960054477,2759753442293722e-20,-25794525775165963e-21,6410204084775217e-21,4368327011048268e-21,-6805603078857605e-21],[8728842187032126e-20,-.00016058377648589737,42400373088111865e-21,-54107084248774395e-21,30344295765780732e-21,882360890899353e-19,.00018665417186519012,-1061795279790577e-20,4885846037776739e-20,25608835436190377e-21,-.00010410765791478177,7933387506242617e-20,.00011912193130779857,-.00017617567516805917,-.00011561862531249794,-.00015414695744926516,.00014088130997128717,.00016468128155683326,.00011507720929629026,-.00015709778676884618,.00010763417094498772,-9118060462058597e-20,-5508653999588783e-20,5947422083681987e-21,-8629107368620162e-20,-.00012420251221447246,-.00010346788082849325,935995936971781e-19,.0002625472927860578,6422276557765906e-21,7257266193700323e-20,-4033497396762134e-20,6790572474528467e-20,-293776948290119e-19,-23486357610992304e-21,-8391032420942423e-20,-.00020864486749087939,-6775559021569597e-20,.0001515708034109664,.00017533733335889368,9533289604529704e-20,-7861973811299286e-20,-19995583621156693e-21,-3961877552998566e-20,-.00010062395102337484,-4900729568497309e-20,-3336005837242979e-20,-6022956312257328e-20,-.00015274074428942797,5806326265090991e-20,.00017946285495735103,-13678668845418327e-21,-7875724604470129e-20,2392826356772957e-21,-2383934382830591e-20,-9248265240540364e-20,2977020663417606e-20,-.00014104067824765015,-48579147311816374e-21,-.00017751495448386015,.00018735013824282797,.00010606389466041302,.00010933903734035946,4326901515144788e-21,-7174356635997919e-20,7032101453665685e-20,-893257874152939e-19,-3459205239020324e-20,-.00011018808045150374,-.00019880825872508473,5.201874976688142e-7,8541038789584583e-20,.0002000466893309139,-22823030905125513e-21,-6622604266612233e-20,-14683429230855091e-21,-9083007354734884e-20,-7053308710326537e-20,-4315510408097855e-21,-6661208988538347e-20,-.00012962736237221795,-842055627210533e-19,.000190155191316624,46517997794389906e-21,6502991919084787e-20,2524813370562021e-20,4950666894367065e-20,5403438876258235e-20,-8582074360451155e-20,-9144084922746638e-20,-.0001351188219344602,-6056408504869371e-20,21193874455255248e-21,.00015210079798582028,.00017075069883851484,-9084479071910746e-20,5430280204265364e-20,.00010180348435486356,-60323087261991346e-21,-9446302123957586e-20,-3224049544122138e-20,-.00012010188056445995,-.00012404303956506726,44630583568044946e-21,5250706105822123e-20,.00017356731784019808,-7695969697162913e-21,-28710064423776577e-22,-3492564386190812e-20,6244744275625373e-20,-.00017903527875390193,-20437146053053435e-21,-.00018575226473759824,-.00012521765442334218,-2421730944221934e-20,.00014051754345432033,-8.203517133124547e-7,8747580275354105e-20,2493462166015104e-20,6484582516230675e-20,-639344425781499e-19],[3539459461619765e-20,-6807572297566275e-20,-60927166479846084e-21,-.00015316315161422248,7348022235523916e-20,975638084422803e-19,-12450172577060936e-21,-1450056866179883e-20,-739706645667415e-19,-4034038674748499e-21,-38654627032383426e-21,14379221778954175e-21,34687131743454946e-22,-.0001584469264043209,-7293108115569113e-20,-.0001177513938244723,7404759221750663e-20,.00013239001684919123,4708171521483617e-21,8909822757253993e-20,-34630714238897964e-22,5042105589911361e-20,26442780926408394e-21,8658255948354454e-21,-37941259438345476e-21,-.0001398658685568422,4014544385513852e-20,-5475776104105906e-20,2303092327018974e-20,1535566924483478e-20,-7.691516928087783e-7,26449624305313613e-21,3403617751376875e-21,3916281041301678e-20,.00015363454768414775,33088056267130406e-21,-.00016826406184210219,-.0001495230192519459,35498105323300555e-21,488793394428505e-20,4926996229755176e-20,3206760857812907e-21,6.99860966898308e-7,-57017488941165685e-21,.00012398343835970382,28576108184866222e-21,4499695773151069e-20,-7658195626030276e-20,-.00017982376102392873,7791398798695504e-20,9182050843792311e-20,20136049025466763e-21,59720574201015814e-21,-9117137830576272e-21,224210594417934e-19,9299194513786441e-20,1550468055199622e-20,7248685161027196e-20,-8918020321007324e-20,-.00025973470234600185,30931649627910485e-21,9134164132330595e-20,2313149558239025e-20,12246773344729012e-21,423692775682466e-19,5325208096997047e-20,.00012342596764605002,8766507672586937e-20,12940257800994875e-21,-8493070452110655e-20,-.00012907568039395578,-12681617590354355e-22,.0001043685768841035,.00013644771823127788,16057523568244192e-21,-4431808882615629e-20,-740650807439236e-19,8941127855649489e-20,4045965655820327e-20,47207547890018575e-22,-12596513258189557e-21,-.00010567536025424262,-9499190341778763e-20,27651247338847385e-21,7609666823792105e-20,-19995057402716343e-22,677643671833511e-19,3525467233374269e-20,32643123012973674e-21,21440245180040507e-21,38887571817136646e-21,-.00012810855432182633,-.00019782945249277595,-776629514004229e-19,.00014426765708057399,-21274432415119282e-21,.00012320100907245446,10102538176598452e-21,-1605497818817081e-20,5771493331788169e-20,-56046568401510455e-21,-17521004885695524e-21,27609299548841948e-21,-.00021782421795693563,-.00010669318029415953,.00020791845527659558,.00011483573627234234,13285234615884045e-22,3805947785653305e-20,-12194043980374991e-21,38422458442419205e-21,.00012682223060628273,-445517234718279e-19,-3696272757425234e-20,-.00019867893992770206,-7996969862225525e-20,34788527334016846e-21,.00019429872846807102,-9225825125490361e-21,-2.181413375351715e-7,7666894785413048e-20],[-.04098936140702843,-.07259292653030401,-.020477833122960813,-.02577764470512875,.02239764804642516,.0030979965185144592,-.025475041444791693,.0014983432415610135,.013473198352794237,.015343737042018784,.013699123091301883,-.042585561573300484,-.04138694292044983,-.08863283586901946,-.05801849461561919,.015073506060712692,.003959174481256907,-.0024599044551481515,.01853234287806428,-.007252089677180176,.039351067096824496,-.010583759958094123,.03165900899445179,.004945997889558851,-.023228219899002735,-.09892235152941961,-.0837522798385647,-.03839268248055243,-.008434337000713082,.007672852300525959,.04878518659190467,.01710432507390263,.02075449961475878,.04911231578276837,.05763971849416781,.019838597096741267,-.002711097174265778,-.10015290955737972,-.1320216915887979,-.062977989737249,.02582360220580037,.01587980808283511,.023625409629796024,-.0046384308741842795,.02611406055078139,.09131915361659512,.15889496663514957,.07789102355143179,.09577507429885068,-.12439872197360356,-.1416053696046287,-.07550986156352214,-.02844030015622347,.021985439206375433,.015548610852228811,-.002388905870217735,.03488803395378694,.07107345826311753,.14647023139119036,.20034906031914418,.16005422621447674,-.08676011804338055,-.13617760143493793,-.015931290696152286,.005887974985659461,.008443989529487148,-.09581603348754476,-.06971296020482845,-.017803306714053436,.027850106601549955,.099568377990366,.185760283063699,.10917191640951349,-.06436537698162387,-.05321633140925054,-.029502881465266584,-.009862263178754077,-.10680613413351928,-.14825732796410135,-.113470811766606,-.06406135390230733,.0027156666630031856,.0918096329652617,.11261031536840553,.04378350181609904,-.0270698877015552,-.022521165339643115,-.010411461095651862,-.06242949060253991,-.07846292269580729,-.09912668450796194,-.0979319005853432,-.053658802519860244,.02002686052339145,.09746751189691709,.04526915563779382,3498289214537431e-20,.0009620569309527205,-.004204666656807007,.012970749419225602,-.01837649647943919,-.044256889054004316,-.0761504339983559,-.03979031194724934,-.03211080346166089,.060508684856887124,.0660252431275845,.04369638966356963,-.006241143438045035,.0065600929269337555,.07087669200430785,.055992154723297945,.017986548813861334,-.003824158105117728,.011310267599780391,-.010487970918616498,.020902380949651758,-.002544688736208306,.05900443040473491,-.013398145289176891,.003544342872007042],[.030346036175779943,.006072929172062355,-.039343234393949156,.015518327303993051,.026091031799842485,.05707488929867742,-.007681010104796868,-.008070924885863945,.016419173022353517,.0028420019312691766,-.013730810525757281,-.01952233856199849,-.016220877105556714,.014953867372257727,-.03402190869608687,-.013762279640316323,.024752967636295586,.039530055629976274,.004583286407384743,.00837650620964974,.036851407285838494,.055084117544986336,-.05697557854410243,-.029317707997872627,-.02559469724371854,-.0209462093989107,-.05804040682240884,-.013577428197324267,-.010020990828990349,-.0018451035217218088,.02002541977978445,-.007591748940904006,.01563101192714106,-.08266561936957596,-.08055144866454374,-.05044050942046925,-.07277700604354,-.06263641593018619,-.07128881460152567,-.04426927230393782,-.019290397771040843,-.0006364356599073417,.035648090161244705,.008066556690149287,-.06997303230616364,-.07240578702187785,-.06281316159223141,-.06085909934186933,-.10296927011026999,-.07472683729892657,-.07715100410356593,-.08963211742325006,-.06020756186961184,-.036005373570064905,.030580152351007542,.018237066287994937,.02174043579052555,.026790712318865414,.07839467900542839,.07977445389185939,.04884459695304787,-.011284404445060854,-.04289265591912322,-.06046929142112568,-.07771702221123683,-.04176847682913615,.11044800435479082,.08445303318981631,.05871665847568938,.11796990936830279,.15001483899962584,.1468226515192372,.13948544434843163,.07190053553504941,.02295158262339964,-.03757300941076615,-.06449726751612082,.10514145685057832,.014295615161356343,.04794627645478916,-.018432919080500723,-.004860316065150354,.039432239140444,.09092544302484268,.07527813236641887,.08117065522466874,.007383367216880286,.00032987076164094076,.02281444999829907,-.008682768064850164,-.04852118304640604,-.01910874794430977,-.06556074583054006,-.08018299151836861,.0032263375068990836,-.0009965854756597125,.05242413573800021,.022385739723059378,.03912049292203021,-.031163626046383244,-.06393958956771652,-.07911716509669843,-.07891704049597995,-.0588805208288222,-.10110781394222774,-.05114064572351204,.01488413557237507,-.014461306825219532,.03609161945428291,.03986593513944536,-.02862511720937755,.02387850967371026,-.02520581913037356,-.023467115929623323,-.07618759848175716,-.04023340673218248,-.05199566090362245,-.04046833647674131,-.026854374302776318,.02699990498988876,.0702555834549778],[-.002803003215468877,.04075890489006727,4176786332854565e-21,.02026013854644316,-.0059647140070275915,.05181012213641132,.02634646200863381,.012264698464511966,-.010147315743495306,-.03354793984589477,-.019732136738390867,-.002257760378232977,-.0162619803111506,-.01731409933017604,.014344127941805743,.03797040839495286,-.01383697548566333,.016742082124341348,-.03012320080717837,-.027735921784170836,-.002268324918850477,-.01917565837724932,-.01569341160239931,.013113857326043843,-.036320774018331614,-.06304319241359191,.004961448697348825,-.03680462956903752,-.037438386219278155,-.023603350699011483,-.0072298451341650145,-.05986851568610403,-.041755559167967415,-.03410396676411325,-.03769538328404935,-.019865628782664548,-.037320716015948836,-.02961465787379973,-.062378820692505714,-.07772622741030955,-.06433026092017383,-.06762742484498561,-.06691133639170264,-.051813667955715265,-.06404442793239708,-.040497690544443715,-.068570648963838,-.06478169154823443,-.07746520430507217,-.059300747266943024,-.04572912163676844,-.03397331700931669,-.014236662779295712,-.005140367998130205,-.015748032805591644,-.12090686617751288,-.11592358261333773,-.04603582196444924,-.026967258372596087,-.0013908674792289851,.07081445649809462,.06929190049980583,.07181659013788588,.07460517208313797,.09541452418967944,.10748657093841106,-.09599583700976712,-.004097579463900171,.04530638627677719,.0755543958699812,.11845891486270177,.08477604080057179,.08426398723503584,.10125452225992537,.07397738859348121,.080838313693574,.05421147663810812,.020058468071589643,.0718773969832042,.07361403959884011,.09026996491612302,.04795591471093459,.0431470975174203,-.0011985739101095343,-.013094268546257911,-.030256147604258272,-.009536691838955792,.016708576234233975,.06114245873571649,.08121745111260578,.010385841248297306,.03777759541528004,-.018148165795748364,-.025190339821193043,-.04777179689436069,-.06185527688971809,-.05365271254041373,-.051551732136435637,-.03437423223016557,.019703032705119687,.04021466487620792,.009446263618920375,-.022748100395121915,.006918036677643638,-.015913447714255638,-.02702812779628725,-.01432931266945543,-.027715089020423824,-.062068298599209024,-.06201486380850502,-.021183572775251798,-.039143122374945834,.022829943433131737,.003203890994971162,.00034299573515796187,-.012230615709466378,-.00321123286886877,-.025262706824797615,-.0022994727249915775,-.027050395247399217,-.03954942076316456],[.06522093747547308,.025071384298351367,.019912107113077518,.01931289301864427,.02245659932841622,.038123430189094545,.0055996572848110715,-.012446229774174283,-.020127115717722095,-.01960839712326881,-.05192039153735018,-.003802076622644604,.02754021132514629,-.0313942592920469,-.018499328737516675,-.028503473075545686,.010984204362234747,-.0021914954953508982,-.019643099824274573,-.042421207289507476,-.08150780546124696,-.07224388933146775,-.0017841827891482871,-.01089297304793769,-.009480015803344372,-.004107064135008169,-.031710787864217896,-.02531694336802308,-.04890459852333841,-.03909793761645401,-.06626651885000522,-.05717044208892212,-.12354156377380103,.0019260014740339094,.010454913576309843,-.047326416677592284,-.01495404872484582,-.014952122468299345,-.06039889069893172,-.05148188990929769,-.05699870752835452,-.05627894012903209,-.00825317615090031,-.00472800146630642,-.02488926751653961,-.04632461441132044,-.027070396350913073,-.03551136665508927,-.04156202778006492,-.0424110717471443,-.058674084084012826,.022288023763534795,.04256448256964385,.09151065178139976,.10752994926292046,-.02319027683008374,-.016616935256775666,-.083807089690502,-.0582594888081729,-.07074223249458611,.025573920295602542,.11913595016311473,.12549016018794748,.12135882291557651,.11708353956070845,.08642271793529142,-.000306674038066352,-.03844014599380597,-.04940532140895877,-.09297544388190015,-.03284956400921088,.10352519252428011,.1495830558840523,.08608357621580195,.03583095834071556,.024742932326467473,.036726117488561486,-.002442216116411461,.00040112728912663695,-.05251865968907733,-.044570270280448174,-.034618820381680696,.04981854990282133,.002454808154399357,.026915963481285166,.00043142435222983527,.012653778112578708,-.051855646667650884,.030046740129158762,.000616408216881123,-.031155023683595174,-.04432306874670301,.004537317614961289,-.0071958412445839864,.0063657993250404304,.018539257939901993,-.03033092031256785,-.03177366654254281,-.008822813246182906,-.015163459489751625,-.058175569457230444,-.00401833097698279,.018491731360507427,.002289811628686786,-.025630328318981953,-.03189676612438975,.020493167081276655,-.006086677203911053,.007919476679841025,-.020676688933417536,-.03162466098372743,-.02835372690119846,-.05878024973072718,.016740816129427953,.026376082128799203,.01589123674459242,.048440426175221846,-.003250090563076194,.0044459428797915534,-.0166556712813878,.009649552481872083],[.03871219417843989,.012490504356042306,.025251907017849726,-.0006342900379393557,.03592838646617745,.023762703799074122,.040774989926937774,-.02341481156439147,-.048639833740482294,-.050012993742178324,-.06442923154764985,.021779562035487404,.04986151946122798,-.018288852383901953,.03588998869912234,.020066404067603016,.04956314226250248,.007752233750127707,-.055571126615815716,-.06851083559618402,-.057716925501775554,-.0349005804130335,.021956366706459132,.035414544709005326,.026124404566658876,.0017094541674472288,.034316099935257596,-.027522376974677576,-.09928902136993129,-.0726994240994115,-.04003368220141704,-.0025525135698269523,-.002910098811699801,.02151519986852707,.040227070486607036,.03647640760109133,.031515192940717834,-.008661570449345884,-.13841198674869082,-.1145851936176304,.010450235100959555,-.0035535572148689162,.07125327688639957,.042723571343138186,.009341658700365442,-.012870114338850977,.03254557667078638,-.0156254021203472,-.1166589992557556,-.14109288836317121,.06734840271729552,.0760931813416596,.11561514970947856,.05022549520576293,.04212426995007988,.02144480828358869,-.008478265810372282,-.012099681800612577,-.03095626225613321,-.11121071517451651,.08286092692880892,.14790102050186232,.10500772996280258,.04674843638997146,.019903102032436296,.030520336087391395,.018229439697434548,-.010089005330986278,.001308077365090185,-.04636617623437089,.044459976275507344,.10593917475179987,.07951875578711416,.019359952078597017,-.005288773156741304,-.0722621162644943,-.06310662779112301,-.003266660446347769,.0318601656444429,.01864598039125592,-.012064807733087081,.08495823890756518,.04802342664859964,.005601477454409115,-.07119535495038484,-.07033323539772537,-.10990854275232402,-.1177120894307484,.019377435122344126,.02670672888875142,.07358386241576796,.0541532780227323,.025448394821031554,.0040382013610863465,-.05467886328326996,-.0899329958233211,-.07199641702193692,-.06277029849943339,-.06522587546471413,.03839617104707502,.016151719170832315,.027022919493260036,.08290421500236499,.047186912351547414,-.0007951610725080438,-.09589103202259053,-.04946194943734483,-.07230469437919085,-.011679870201172761,-.03019370550552411,.014156325508013962,.05085959729622467,.03918995516095654,.061498796624547394,.022736333947648714,.015951433136659473,.015999485485705945,-.043222982001008485,-.024248450132379966,.040111753431796314,.06052477324917584],[.00247687597552753,.023654123616632314,.006590479076578087,.029715029129248505,.016981592598277626,.035002323306005056,.015060065696298572,.002377540646737661,.015462766613147202,.008250822853533138,.04520421189152657,.02909906297104954,.03737107394676825,.04854671720538914,.03967454651675656,.025867829117725033,.014831551938788254,-.007582094087609806,-.020930287111501134,-.032499439495609725,-.0018020463301167342,.04393796707879063,.028725701880571525,.0010439011442610552,.04258810822266976,.017847587041736074,.002279834822021626,-.004587349161816804,-.008842237437494037,-.040477333059008636,-.08483317919906787,-.07525359276823704,-.043639965989430526,.04883111043556526,.031624229858512876,.012489522167499711,-.04444740416264285,-.02379386136756309,-.09439256686884244,-.07203235960877619,-.0647083446116518,-.0642167118343325,-.11171103897265756,-.09873003053553736,.03479092404599714,-.006269626535213395,-.037764001610176845,-.06603160021869137,-.08565484948794656,-.05646144630012521,-.06782619165430687,-.06058757075258735,-.06035941463931936,-.0751011736397387,-.11166068555690369,-.04968264301191692,-.03223836180949827,-.08648433157942526,-.05427449076243909,.010712582267959646,.05148433045951871,.0727373081995406,.0661740108703821,.04705250427849877,.01457256785498192,-.037236312562938446,-.0389263538948529,-.04589284087910635,.010370006985215077,.11284308997633244,.12481359471847972,.11597764568809359,.11519355137781671,.11439984797014933,.11282552440063413,.07265236792149134,.0696330416762262,.01208106094914059,-.012907318992784259,.0781969520967658,.0848424334686746,.025448732267674412,.03331830161640717,-.0032466624596392407,-.0007791600472203397,.019237134849348372,.04046772922000219,.08182504059766227,.03217300859253294,.007224645957833578,.035145895408776745,.032218364331414756,-.004156953045711051,-.032283733334807226,-.04806381353222544,-.03630798056499317,-.008879632854209354,-.05064778668384444,-.00020999998824228205,.029706187708307435,.03209911489628096,.007789994154167285,-.005991216818439102,-.037977889970615276,-.03294263269483791,-.07482792910608133,-.08659379822525845,-.07029461615119986,-.021597866813346515,-.034674752012622045,.03914951845018877,.016074895570088787,.007248605861354326,-.021666046904459044,-.015742207167039945,-.05712862549021637,-.06982585777437281,-.04304681823818908,-.00021744057288860825,.0031613995838588056,-.005483972769325985],[.007858409180958724,.010417579110589992,.0158263555713989,.027799757333554075,.03750430163420848,.021889790101079235,.038404904299075615,.03382366229288322,-.01511054590043489,.020273256963547384,.03294300250767965,-.001252367162650564,-.020725236647321815,-.012427007685905524,.015267851215295052,.015474020823992577,.021471502743067288,.031768288951377815,.012185070684608057,.0036406626398330366,-.0025327193617110944,.007885357440556288,-.042335704666714866,-.05668345383684903,-.026575160075451746,-.028598384095741225,-.04265775277516078,-.04142391517902475,-.036798184223634865,-.03826280791510171,.001902666130327288,.0093814405628216,.008471594548958614,-.04503818265497045,-.07579175364122971,-.05937521946842811,-.06183166531196126,-.043298853126234195,-.04380078136584589,-.05161784216678796,-.06561103766772261,-.047247281088380666,-.05796831398610836,-.009692699740570312,-.0009781358811463553,-.0011437786713959204,-.03286534603195844,-.03543397020422262,-.07232893380021267,-.04023608262418721,-.06694954641402831,-.08212638803345869,-.06280385347893304,-.08149158305684044,-.06753217902943902,.09455840560652598,.05016039148008439,.08567883686723025,.04632336862514813,.055992607831429286,.0489119532211901,.031194793059301035,-.002645350709232691,-.04034357688424243,-.0970325935155229,-.1003870758516373,.0739805809466271,.04468078911838225,.04952955172182877,.11289040045432666,.07705264098090751,.08763910565106886,.09066077003110973,.08397777948088223,.0640490072177986,.02432712562725322,-.042320375772835706,-.002138881880432028,.005953890630444381,.0021758658789993446,-.009358776674297811,.02428998075376837,.02607694341280449,.07877278332411712,.09198220273244762,.06436138552891969,.08198413068027004,.02864633165778327,-.04260462618725064,-.03965930144868732,-.023542389520778348,-.044811266972915445,-.03704741703987133,-.027700762351676803,.003355014276908888,-.013100169049559234,.05927068198924744,.0462821833376071,.08735480009026986,-.05379015249494169,-.05215554204399524,-.05679486910467426,-.021944281329168733,-.031143592336575283,-.0324088397693377,-.013571281557370071,-.031193974331133204,-.024377807778057786,.02914875701245999,.030672698641111273,-.022977914200020516,-.011077006000089942,-.005511238658071696,-.016195245042137235,-.010223061193558224,-.0017693869577628148,-.016982213231712635,.023120107237225143,-.004644894416102455,-.005181666051378653,-.022733320422779334],[-.009042111480020307,.017452648291795582,-.01783182421034299,-.0037291040947286724,.03906496999831048,.02317336140566292,.017934159994940135,.01309845554867919,.045167700869445056,.04219440502524552,.040022284994525766,-.1296495384639129,-.09869597929559121,-.05779170191526593,-.036039163287215216,-.028193969502811,-.00542516367252327,-.006951249012165914,.020700356583589666,-.02765883917552498,.015383455695099066,.029921130490476885,-.10604073203109947,-.13745243530604678,-.10216024104657673,-.08204456097798316,-.06254235926555962,-.00602663143483341,-.03485631054184798,-.019904486880246444,.00031967817856416725,-.03238967420670709,.02439765120257871,.10508921937209786,-.013046874416846273,-.07774395531312853,-.12222903080184096,-.11250348266352571,-.07449642419639521,-.05669735065660934,-.041103845003295766,-.036650131470619435,-.010932005853568957,-.016449841939567944,.1562234845656341,.09672664230741305,.05404169057430391,-.0030989655565997892,-.046208134463465035,-.06592349335322237,-.06557891740309915,-.05950706712768644,.00880627987998698,-.037442732388913005,-.017902872235218317,.0929562185397642,.14428628109803446,.1546096989661699,.1048812845736138,.07465009416124645,.031358758882895854,-.04452428857515188,-.028002592637281058,-.07428550653439359,-.017952472566438823,-.023442772221301825,.0006703656583408046,.0482564517826233,.06411237793532709,.12605612565913182,.11963258828536688,.10488112893887513,.03367932768563389,-.06098033908627067,-.04366390205424773,-.0236172411193771,.010588509810459399,-.042280794649115334,-.02090390603937928,.004245459603364268,-.00023866951219775334,.03685527074938692,.06422611650730096,.058946958099653515,-.001571395041331261,-.009570744787560717,-.013147541392034126,.01220983149141934,-.05139007557791643,-.05520567262249433,-.03365107683439328,-.030728487231012208,-.006939575932425689,-.011575545867157727,.007368596506356143,.0697471456037057,-.01352110025060841,.006596012723473543,-.01952537196860976,-.017643912421121496,-.03698320858742948,-.032526065041563926,-.05954232866304939,-.021432558932001102,-.03620802826342076,.0008277217823815042,.048327127751533125,.05795080737741723,.00157328627865716,.0068908384829364025,.04482168429267052,-.0029221677687706754,.001555929650738838,.015954469458610742,-.025599595653019336,.04782729598618077,.006228894973325669,.02126713164270998,.0570357351754727,.018964085848628326,-.042249457791622765],[.08256740827572094,.055832613072691675,.03765639009108503,-.025000895212346053,-.028412812812500174,-.05016161909385189,-.06410879812322645,-.08532277377194247,-.01353721252260974,.013708942774828675,.018599027844067556,.07534748503062028,.06255934305524692,-.03128511392926582,-.042802981085729774,-.03142942071154579,-.07382676341608124,-.02422165797383803,.007641260114981077,.024211901395114054,-.059471082878315346,-.030880411920166984,.06796700954618969,.04082287464016688,.010013710465744799,-.07623822041053195,-.06820001414613261,-.03367028790032036,.0026545839293711116,-.0464833643306049,-.013765405332683583,-.027634708597073385,-.06182622302046557,.031594341220290985,.021366233937152687,-.013394045470305607,-.09475775644966944,-.04911896674688537,-.04555247808044965,-9110634761277069e-20,.007938346419856593,.011254760704320157,-.006576707889103077,-.047661893009333725,.04444616608719597,-.0009320642125219408,-.009539060421327156,-.05073285896493765,-.08683128061656673,.03252627969419809,.09270170728992475,.009408379888223123,-.023484064976748834,.00929344497650073,.02279135558872019,.03900280647827911,-.008609839726177404,-.034767835308972636,-.031883916942249346,.06642867522546965,.15091207989976943,.13215693372891743,-.05920084309238203,-.13695949641012162,.048045367981310844,.09872137352439717,.01240735426146681,.015256770812382667,.052010168560839946,.10320819909661162,.04245915005083583,.08872439999155989,.068938951136573,.01700823743506874,-.08531752502889244,-.018126337068159522,.1151877033509508,-.02501683859550265,.019451431676204792,.022494547242750674,.05260028373892524,.03386730293679828,.032216970357249304,.059359611168712786,.014140731647494846,-.025091371779791677,-.026683396681205493,.04095832858134641,-.050855525747530585,.004932375448121732,-.0004981671256791605,.0165528823762962,-.005958023826024899,.045306611135122,.0578976399561205,.04272605270247874,-.0017969310686201884,-.014382085486339657,-.037002141588783934,.02511069814608676,-.00016281815464665172,.02451544657586113,.02125875868430828,.02440056095349824,.036876396850616146,.03942292609844728,.040371042135130944,-.0009256230177198815,-.005262877919380821,.00932704972850165,-.011241199658509435,.0019912846764176652,-.025004542955752537,-.005608583586459839,.014352464943112106,.050873140541023154,.10004246984101947,.06468124913941524,.04619569563666195,.06930063028653265,.02951032763533087],[.031888415387708945,.017285328668591005,.042744527705477556,.03122774045587115,.025513813891834124,.023253690464280233,.017244825416223117,.009114399338920935,.06125478783517867,.028607811797974354,-.017058017936675305,.03126025001137327,-.02279872758399017,-.027837704295921042,-.03193752291907209,-.007942659510187761,.002278187485560282,-.002979051839869534,.014262174386869931,-.011888449098713878,.10179674598415357,.017490236098508173,-.02165996876082555,-.029500462768637277,-.017844168428477268,-.006592543678926418,-.055317992740958985,-.009073270159867055,.00041946738785142434,-.05649264369093172,-.07320182771948931,-.04664521751707891,.06208186916430718,-.03133901253116169,-.0654095728502457,-.02625974376094732,-.028514182658014458,.010511476228221489,.02613935213955948,.03308089327842027,.010410015030915412,.008359399473395174,-.06664840960045965,-.061126901668253825,-.0606603817088827,-.029413222816308055,-.014383044755888905,-.0611128396493715,-.086766346192871,-.11103482776376336,-.09555898737155176,-.06964802327565453,-.04442774742720511,.025755829147256798,.006956014842130313,-.0815876044161628,-.10519239832835522,-.07133578641876726,.0005704173411741065,.01381305071587418,.02671011460828427,.04981220055097216,.09358191801031149,-.021925041934278508,-.05549766034276781,.006515013373986245,-.05455411923442439,.00830487062795153,.13185407364756932,.1221341345788353,.011707416843401106,-.02590715389907114,-.02481974770322092,.0540108737334904,.13634127194350476,.1239665593358083,-.009468415295336208,.08236026367919669,.12981624266421773,.03824468200113923,-.028862798409555725,-.012401760304334902,-.029028735431258695,.006099184288709073,-.004029723086668271,-.04688451714216009,-.0033330755921011992,.05532623880862575,.1303088292739335,.01446714058473307,-.05952675673155153,-.024457345180703714,-.0011606998001983324,.049886658808720834,-.021188637788723458,.005342293132243284,.019766544177656983,-.07505148675119032,.0555814059557561,.11043646644803568,.07196493868758001,-.09066329859838264,-.035117192369403236,.04806949037357433,.04113355205281519,.08349384113646205,.02911080012345353,.0312666151706631,-.03950797252389278,.02749066244564201,.09228405522757988,.06669838963281167,.004677073871221618,-.057627559498254564,.03584209191212352,.08267768517946922,.09733185489825846,.05068201651983458,-.010180548751966102,-.03310063083308393,.006005322792119457],[-.017680769530502086,.005057535982528047,.02521583578435982,-.005025833247320491,-.05703325304593862,-.052107314429079093,-.045596915669796345,-.00665024670919076,-.00408902585366247,-.003602657066238215,.05426453374924283,-.04105475453763187,-.0014472636395811613,.03459697460655711,.06083562097062121,.029247288961593898,-.07214035288481521,-.07967275019313143,.006394394745092916,-.0007507875839106309,-.002417122766177648,.00014142207761613443,-.07190065738260579,-.07130997769260232,-.07094676785308972,-.033682470049253795,.059045673260628345,.09858933856538961,-.001245384846723381,-.01886197406327271,.0703849625383901,-.0038593266123758303,-.035716458393740325,-.028903911986307623,.02216913541780052,-.005637983325335064,.015211997809574936,-.07780142651874718,-.029803914664715693,.0194618063722383,.0668760222428867,.0743470403902915,.075531131612437,-.0473549174409698,.03823130423494889,-.014507685304722101,-.08843527849921418,-.10062367804515003,.06734349922220056,.024924241317476573,-.09254619573503409,-.014997924286342293,.027950457247449642,.06606376845151182,.021890400355813813,.13086032772885903,.09032515848711939,-.05134374305948901,-.10634460607642149,.04157715486030453,.18956400875634438,.15361519295302384,-.11769518397502723,-.06393113140682108,.0537654171830164,.012820707173704704,.167023415641573,.09188345945149638,.04606406687246399,.025159894360370735,.0711251036155198,.03542303599910505,-.002838856695844709,-.06288134460513693,-.07852379046310881,.006048894202759295,.03132431227969934,.057799944092782066,.035258713861660206,-.015525519214079311,-.05149067842695848,-.07099843868427236,-.08833954892641027,-.06325839638208344,.0005815794495872273,-.016398858534322075,.06347204287248717,.05944812998567754,-.07202298014311552,-.020115104672309998,.019270115460302426,.04304460819968159,.00016106438180805288,.009691999561702698,.00685563839782885,.04938094646020125,-.004523537998711136,.0329779425641062,.0312528099407361,.056899719241569,.02826264920751151,.03515237551913688,.03546188426225892,.03985204747464501,.019659199103084442,.03395829906030764,-.019839700512063366,.05903682414285811,.009726012486880643,-.014938126441501644,.019066829899126298,.07068190922078597,.06710229359092283,.06901299259461469,.010044929257701042,-.006389311428403606,.005095615442864804,-.04581782964624811,.058780525393498484,.015058802906741012,.009386870299746053],[-.0592474186075294,.00214326915846505,.003053764423463598,.00585551031972327,-.08563021705558058,-.07175649349554311,-.04245030597116317,-.04268914713843119,-.011110262401512888,-.007940533921773962,.02707902272566813,-.027546655085047056,.039877525719018654,-.032474059766464794,-.046922091139332156,.03361772181552276,-.0342878025687481,-.043372117290399935,.0416139780456222,-.0430951183316134,-.010110834614272646,.022894839712910425,.07538660993415952,.009212959623099537,-.08827817592255309,.03739765963534586,-.002226306674960765,.009924507523420757,-.020030347390232447,.05681115019836551,.007392839820689723,-.0781863011094375,-.008146425982962759,.07920352761263033,-.04919398403505887,-.10782004673639323,-.04109395354819578,.03688301343713144,.03766947356805052,.013220385631969353,.05340788816283997,-.02673360675351314,-.12858397516523337,.02107535533459986,.12903555239275516,.017326720125844478,-.14567221562979574,-.08247212156657831,.05895693874970116,.11485586936136895,.1285955897812025,.09551855274274643,-.061066124259299644,-.0067976743155836045,.11055046294774236,.11155870568673898,.11891259668944891,.017851730403568578,.0006281699962116943,-.005602233426512779,.07762480622394381,.060406967434973535,.059516586297504614,.027001848941292254,-.04441219877188887,-.02565017828887654,.06836333345927718,.06302056436681892,.05944449745877395,.010334144455870962,.042110605756137134,.0154145426818727,.0023343740302978946,-.02706276577100951,-.053547005048963876,.02449922475139186,-.05226763051205905,.08885699312143107,.02355792938393257,-.013779427079024981,-.02357916164851793,-.06275519086456116,-.07823410171510638,-.04428664124215103,-.05597874471510085,.0321553391123421,.05440069299288364,.04822961003119705,.045141190902855795,.03870479897678619,.08591139091910995,.004357866690440651,.012844338732011615,.010882943225392516,.028932161983739102,.06484149431471856,.00831504971815256,.028736590709835023,.052023311678142746,.03341405244842211,-.0015520060820524428,.04260668744673382,.022301779226108837,.022174303630313905,-.01943573783712184,-.0005039577329179201,-.00521398221219091,.03017407278550048,-.004640982451910802,.04975585443539535,.004832172486069264,.0526257454470927,-.004346985676271432,.024475775577038505,-.001455068923858334,.0025587670842842497,.02335062238389126,.0007594542019464037,.06706131243941268,.06672006490669222,-.036179831263457696],[-.05711166871452407,-.031888560395926815,-.020364646131771198,.0031373605136144483,.013436737732060224,.005951255332585495,.008022136225053373,-.0033221874193103476,-.004827846253580151,-.026659247927967398,-.06278317555424762,-.0769672767706773,-.033637293299445814,.026369958665574775,.01389980731687723,.04192095366654633,.050480088450960914,.04006195238019991,.04456452813083517,.006994111774792464,.03093737186111541,-.006243629054118058,-.04632090876103635,.011237053256609078,.03625881873734127,.008296320294636228,-.1031515218693514,-.1297840088264633,-.10762360396379125,-.028238442365860296,.07777490841591576,.05764520084188644,.020682314424331508,.015698799166135785,.023614524698368555,-.041771874129604925,-.12746951561572256,-.03128255065893184,-.012702497649368927,-.03100282126672181,-.05323312562334649,-.11694882872058675,.01991533378727624,.030434079899803762,.034286620375398126,-.042572007349056584,-.08421562414356842,.06986128783468853,-.012204622606775559,-.01889140683417556,.019639551076716097,.0777245048625558,-.08036649451368691,-.015106150328832637,.03458846930117904,.11597907830248098,-.022649572331124024,-.10542134577114659,.0649091642415309,-.0032238315195849358,.10106249830020778,.028244619862228884,.13831334399041184,-.02940613006050865,-.1747975534137946,.10110596129570967,.10656117039170004,.007723586370306457,-.14344418956701926,.050109495007546564,.08671574569290358,.09308968550103064,.12450293694496621,.1288423000359782,-.0704197795640918,-.12323154963040814,.07075348661301689,.12050632408764064,.01023362279869472,-.09773323390366313,-.05933117448538212,.05878289588065397,.08532608320057898,.07677585523500229,.029787153121228482,-.018648323277872803,-.02104125062301928,-.0003430486081355544,.08429824151697698,.05683502064817744,.053326494938013475,-.03963866345914492,-.0050145752734991195,.013779029282405111,-.010485661499173113,-.007234560404816931,-.011950044363487594,-.002596863452470205,-.03948195531279117,.09282981387556488,.04294346095881349,-.007541521800072615,.01831664591755916,-.03913011009425575,-.041539280566723305,-.027051679902780887,-.042059150111380464,.051858253540492213,-.038626104291501345,.08962165947507582,.07138907399524949,.0864493116989368,.055650817209077025,.013638815876452798,.017995842737628248,-.01801617871484959,.06345870533067252,.053363636563368205,.07474224897420911,.07077924647780946,.03802131210007967],[.016782329804763754,.02218400925475634,-.017610151854017764,-.08378928689892737,-.061012255632239214,-.049436805730274716,-.016010628978889538,-.0012930764671227057,.018100227337522104,.04220318891077436,.09111510772543861,-.03097316375308616,-.003219528605249891,.001675986093178733,-.014121001324428797,-.048981904044656924,-.010745318377515141,-.09765232651778044,-.082418824248892,-.008667563405891476,.038492534598761105,.038421970823334595,-.023684080137090627,-.04257121143938264,.02767445118866517,-.004584611981808415,-.029036296488781282,-.014288492306115716,-.03649248395374892,-.07318841940678658,-.0584739383062427,.06115735662845738,.03751313259987714,-.044262690874014056,.037080163847070004,.00886596082820771,.0008027268783415559,-.029635044582425114,-.06189039461962856,.003898593565581407,-.05558893218122148,-.06482591035840052,-.04045436474773354,.07193640264162318,.0514679572406173,.016629850744416953,-.040009434139141736,-.01911582981785656,.09190492104908579,.06837146364091487,-.03538166889608524,-.031695935446360804,-.023950933267367816,-.0394003966580148,.03763781004513285,.1197050728253103,.08954209195117589,-.0483218637920278,-.10361580068468161,.03196026187380821,.2270831804718556,.0969928026121238,.02670984690200131,-.043788789977080037,-.030431230119196698,-.03619909170822681,.11281418451835055,.05835379763863459,-.06497527658584784,-.06578144640058851,-.00844820385193381,.09124152377195137,.12717594497795892,.07643536530804047,.05263655140428726,-.011143586147963506,-.03613783908570618,.06912457884644944,.013398711580413412,.029824240574494128,-.003761299877294923,.0021895992476564027,.0634119585567549,.05214012614545932,.05038609451252047,.035324986438009076,-.021229516140167864,-.04148108277996894,-.02340383743107953,.025148825203493166,-.007105428813655779,.029757691086840125,.008526491918542104,.049978808930559324,.04760848594702115,.007387529728713386,.023177640471752005,-.034372485157573206,-.02211841910582997,-.03255077177054265,-.009536063280811415,.02395181727198023,.009716700281809123,.03356178063598422,.04458951798473178,.040595502460242246,.03265377980093393,.005764866830982122,-.015195338017169461,-.04482684339688519,.07120843129770589,.04189326395203394,.048927297048636464,.07382784431726473,.06524454222081513,-.0017292511368722507,.058389555203693405,.04649227271464686,-.04444859218183471,.0032057986445928333,-.08349182407350575],[-.021979451476262124,.04174953651046617,.03631748281849932,.019303759385788856,.04333110565873803,.03953245104448282,-.03647609905532502,.012807077503951922,.02271357612772286,.026792414564902785,.017780821834078364,.021847416207194322,.03554278855147352,.022495282054875682,-.019211730168732774,.046687383535703716,.03207320019718867,-.02868683209550463,-.06812268823509858,.001294075100742806,-.0345641458352986,.050972273139714794,.01734451138777801,.03561326116943138,-.04769858976802946,-.03362333136575686,-.03252126067861601,-.0013900797467142137,-.038202063259482284,-.031763114785061,-.04696074911195749,-.049070236071480984,.017434726053958804,-.030703215315142654,-.05716230179174553,-.0037112416196131703,.006069636736906937,.038135057103153125,.011368938851434945,.04381188631406782,-.03421758839049199,-.05354120670482268,-.039937408320660416,-.06176962677527169,-.03524035091512567,.0016450283116066916,-.019800744266528034,-.07722000486464739,-.07550237849427585,-.08759204909688985,-.11012945508577086,-.06123250301560537,-.0382298927655147,-.0642652778275334,-.05261454482215244,-.023205841324039467,.011034902978061789,-.0009788013549310928,.015271729427483255,.010026868737236877,.05798534803553121,.07084072997149143,.01903940304422439,-.041761958313936615,-.15551177552373613,-.07628198734805558,.01704717652939459,.09301475442178672,.09358145811047996,.04340258066263397,.006646103834755933,-.028933285567003395,.07146887030373177,.09920319196425997,.16737897607114252,.06904365792934095,-.07749686881409408,.09957337833447535,.04857127897909015,-.0641451014524268,-.017708931611072284,-.03377335742082772,-.03677034174495371,.02112529728746601,-.03253144131642647,.016179841472347585,.0905777502291546,.10585324720051341,.10393909903192404,-.03914692869215848,-.03044788518844467,-.0058756393399591045,.004920095500769162,.06501453594029019,.02355974270510458,.008686195281332368,-.06630429664117311,-.0023589044880598853,.10485324285454203,.041243799776074036,-.0046939490366109116,-.05026550547323008,.079897314990576,.05181186062917782,.05936381965465605,.06303860230911956,-.009655375056475478,-.06924255657633648,-.04705175927555823,.07105790345020195,-.0344270352725327,.033352431404995275,-.038713428810432646,.04054111752342275,.06751369421091795,.08280595489296431,.10708141658638523,.01792805681214686,.0011601162267517867,-.04367357751154875,.12867110066084922],[-.051871694661995885,-.019280829936621956,-.05468260775816461,.0009447920461082629,-.013017072859738549,-.012890228722627788,-.03561689429472437,.00145145137959953,.04288321773410216,-.01052037984919773,.007557764016209687,-.022057597937526343,-.029115164929706994,.0012528790852251032,.02326933842173219,-.06747451424185189,-.039425127112679564,.04718264333405233,.018571000663569977,-.03145324857978511,-.004262754471068235,-.06539080821308715,-.06230958857335078,-.00018350956129405474,.03407593431333647,.020712134681679213,-.01581641293554665,.036106476966187746,-.0057176038296621896,-.007803458127565726,.022001767580951286,-.07506308951528975,-.05683326947967647,-.07848781116927157,.05331499430015378,.08979192045945919,.06557973516327162,-.02013808088107881,-.06935471925961723,-.012900359094848712,.06749429214896617,.005209168998674131,-.00504458173784908,-.03401334054431385,-.04922062437796544,.036992846717020605,.07352716442216241,.023626785644426024,-.12668833039918156,-.049929820048297914,.13709290290146586,-.04308335985604635,-.11283440510072536,-.022957546531399264,-.01638036356783324,-.061480443278703056,.08372278920304206,.026145798642064663,-.10930012120125338,.0934854174621553,.21229414611822872,.12152486504801896,-.008514307871436694,-.11195109821400444,.008756959128361129,.11393373946480671,-.058279470412456076,-.008042166232599512,-.003712796463390816,-.09061146139231427,-.02375044583242448,-.0033262359419465592,.051599394503568374,.11794682063279016,.05218760955456582,.051040480785423475,.13055799836266763,-.01221412005055704,.03643178936804285,.03667070372044032,-.007801213769850798,-.08063718231962559,-.09844174757709723,-.03508837974768049,-.032648567450681995,-.016984796908047974,-.02753645816699232,.06115870091554932,-.005166923162184538,.05434661214643194,.04574675243977309,.06473944675012012,.04955271127537388,.018862295590649777,.04898318715355623,.06254198557673991,.0072514834621828835,-.023346720324739785,-.07560192616940235,-.057354038392425574,-.01763069649387416,.02294588190926191,.0908731117154223,.004298484273507161,.028246302042173196,.008760700624817428,.07435181540431253,.03500492744240232,.031603063242742584,.0345240046509334,-.07659016038739996,-.017921124400819347,.006298857410999787,-.013815145103657209,.08061645493285907,.019781761084500894,.07564773522909524,.04318952518565638,.07414909690419025,.04770033275626058,.08084015618691076],[.026722003554860107,.011659299846958612,-.030401027328402285,-.07893351640938032,-.025083013651028968,-.051258138411005405,-.0637381335973991,-.0453609789056629,-.00724545401294531,-.0016165196721033143,-.08985506460065436,.009720785483362793,.03256663253009212,-.06354648779701046,.004058650541230897,-.011780242044409216,.04662208252817727,-.0061913239369574095,-.00040805875755831446,-.038285077303976116,-.045803388237714085,.00013567048096911616,.07184101163623027,-.0035184890415564662,-.054904449860221666,.02924191756204008,-.01689557308935365,-.018744528704994677,.07571692682817674,.019648278025953467,-.04388565465695437,-.018293295448074808,.029236899127084933,.0794807536527237,-.10678554242785285,-.13518893526708742,-.002161773644551196,.05783942256780753,.04685296385285121,.010613998677874176,.03943968413178789,-.09285753056846846,-.05413777579109947,.04101520787327624,.06345089058106948,.04746993713227171,-.11150623495169829,.024332828493630963,.10456565053537453,.11492526729638461,.06434912266603923,.02496020720753244,-.12312652337245503,-.0357276852240003,.05635784594804886,.035122396434681416,.040853396388258245,.004817123777440064,-.018877573782764997,.06383422339455941,.09959443330448116,.10457424633849259,-.005932386081802512,.051540993351738555,.043792467918237224,.06682182319421423,-.02298136662633478,.012623816899516915,-.0274341836235511,-.03732016627308282,-.04076059976772345,.005431111277504214,.07785661288634199,.06102583266836097,.06291439314075388,.03927894562874965,.05155143621189468,.06822820698213786,.05379324325679899,.03311629479996953,-.08723056668996514,-.06241328356257889,-.08217938733697006,-.04940845861667763,-.05135975985689112,.01704176534606279,.008305262989467432,.05797318188985636,.049273067989623984,.05054911568008644,.054189519887507934,.07635745928264115,-.02015976461491653,-.01496772437088123,-.008318755358141354,.032399494222174856,.029724547489281376,.08116750370631132,.001076680509177766,.003132081148303891,.03959912217748029,.03266510186245229,-.007612388952312757,.01439000505445691,-.024144476806805197,.015900895762450868,.03646344965447804,.005998318217993153,.00737710859384821,.06875758897911102,.0018450028156024381,.05898331702127498,.06102266049341076,.019189271609420328,.052228673471552065,.022903569800211365,.009354573933779468,-.022264194312743783,.028742917273488648,.031821039680558945,.031024768487282525],[-.024931914403123902,.006737110259103195,-.007391490442242972,.017496948430487498,.023422622609065046,-.009492885212203268,-.021940305477306223,.00025349416488679166,-.04163342727184216,-.04628033097131569,-.06778901544234435,-.024673968258041953,-.029907852335896074,-.006344921502507664,.03882830280660768,.06846252343470445,.02720529623013877,.034295058790694666,.020017420759176036,-.0441476446464151,-.05987200542226702,-.051482095492071264,.011124069340270715,.016763058258717323,.05088684044262448,.02549815480352427,-.0939546655207978,-.09239118927766134,-.03247903215362791,.034462594953754824,.05996947494254595,.025584824798319902,-.054353591667338476,-.02150223875281966,.05154650145299272,-.03400786667540163,-.10294183533637649,-.06821438494596432,-.03609112863531143,-.03586220966849209,-.06695036990267186,-.0788669358196743,.01348990123782938,-.009299162793653773,.05124225459459572,.0631551203245305,-.05757404601522353,.01889038869900163,-.042698436177047515,.006389719019489579,.035993788676757676,.10789490348622735,-.0681802362576189,-.07588192982481591,-.01974750467266321,.10735747383087241,-.03869822606166641,-.15857079396383206,.07771169887895407,.0027821735741544867,.033503358473603,.0445293284383837,.11469939192954226,.03762916616171235,-.11802211992760672,.08981613120089463,.1409489675223105,-.021944857285476876,-.1862848822075786,.05722715554404334,.17885030648332761,.12350597080986565,.03287297640709165,.13094265605576585,-.0790542766901317,-.0988742849736581,.07103695210415123,.024172138802402793,.044359819339575904,-.05101250569856564,-.03906592355322967,.10490932756038186,.12042204998724948,.16359720010359963,-.008314168547253115,-.029805224335517175,-.023079186944148275,.059849592266809526,-.03542421754230089,-.025330293256378603,-.03424283036642321,-.06344183955508415,-.04696419252051626,.0007181593259586345,.022784193984670673,.009108569033323938,.0175442564906213,.028537852311277645,.08090346700239713,.06228800968357412,.04818971516345996,.021557195959710354,-.022313472699576162,-.09120395902913733,-.048678117782736216,-.018880976433473903,.02319770864597645,.011883122070171566,.040745024174235034,.055217772192963144,.0752915524448943,.1295068596040488,.03406673322807277,.05526333239219492,.0009295634002260966,.0025829434849187483,-.012623470754591415,.04504546623409229,.035721398778730123,.07325121561096606,.09493979978832112],[-.05469399676188347,-.03614225770942098,.012139987915473143,-.015154402745934992,.006846330221683817,-.009313685152198724,-.048684400948289616,-.04943037204636254,-.04106497122299951,-.07725384967515565,-.05265970158042071,.02644006417674272,-.03582580388162346,.00018949187702807166,.020886062450068934,-.0006594946059192835,.022071058438621102,.004031370860700177,-.03533302223613667,-.028226767346863704,-.01809822098267436,-.02023438256140576,.015320984616764413,-.0014404272920333708,.011179661842263149,.011479905349418697,.05041504628814836,.011825597601556187,-.005886157338115677,-.010693467291456787,-.05271180377675751,-.03958729553624821,-.015153382931397254,.02177617767728962,.018485275683894062,.017270703576438604,.025545107202705496,.003552691996951074,-.007207719262824763,-.01692777758575857,.01010327735896166,-.011396759513419105,-.05413599520729581,-.008775918099563268,.045428799230223,.026078742599032825,.018401462157094414,-.010304766106153093,.03117527378397096,-.022964877769659248,.007348845920109134,-.033664533213207795,.00401734882876538,.000731056999637672,.0009292076776340613,.03845556465762351,.0510271844642047,.032163653730152494,.003091909476963195,-.01805086224294028,-.03758060003421246,-.04298340492307988,-.03297383649051419,.003435703965453424,-.0029191330430502482,.04910211456862451,.045968351963145374,.03753303456561088,.053551748804077495,.0025191362420830836,-.04750855266321341,-.07278889625912804,-.06442733522484985,-.0412205236670294,-.026780660598796205,.04589302900490849,.043426979158010505,.0633532294221866,.05767580515884707,.04031026644948954,.041067495849464855,-.05102937433263888,-.08122284800217158,-.10623271352478328,-.040384319505111455,.012698889514418027,.027850330309453372,.07342260372963759,.013872383376783981,.08683721986851066,.07823149819628432,.025402065662503196,-.008595930472269307,-.1009426660553958,-.07977089663491069,-.08930757500600739,.015197805521062258,.0612893395940822,.06594861064187786,.0410355464349752,.05955782690964693,.08000623286398297,.07488260702905102,-.014113346378857847,-.03242074765334265,-.11384852443855065,-.10291516846863054,-.012980508793377513,.05222040610333936,.12082717968395887,.10605397357987933,.08625518328137505,.08321354397182873,.048514817007833,.044243911058542376,-.04257863034380657,-.10029735035508303,-.10409726347948557,-.08630781046809344,.03336904973909116,.16060915775050888],[.12273861405978125,.04281450875204562,.01806196647866125,.005306238394237821,.035823523447581954,.010649293754868217,.016551078536122706,.01489993969426269,.06744415250585613,.0014205983259976962,.017061484842956845,.10625529836546962,.03566036041809528,.002751078412191129,-.012307530679996168,-.013785633291103078,-.05132782373436337,-.0860003854958359,.051802568141879196,.03904805873472704,.047853825999159286,-.02626574754203364,.03074125545333123,.039406757558914624,-.008219197052029309,.00994496907304343,-.011588775094071746,-.06986333186263376,-.07121940102174677,.026730481405145667,.06436126667704024,.04996247813016806,-.024025875808116548,.0638093233647707,-.014373658398046024,.023604867877091828,-.04285661691231339,-.0300141813336174,-.09889712170449008,-.04373899159435149,.03430942416671824,.07134773641895255,.03761434445919945,-.0008217042394506255,.020111151000193242,-.002331074922981506,-.01592823887394037,-.02423171369688913,-.1221269192682253,-.07741156910078753,.0032849717401806887,-.010022001408555678,.08436673394784786,.06828408021395,.02710960296854332,-.03452082243214557,.00597056223211298,-.05440545217067908,-.05878256408463395,-.10071244219183988,.006729761904628304,.05232588319480447,.021602083823943383,.033365772587175026,.060449981481694115,.028671597117484994,-.06927556388493583,-.046529106869698536,-.07103102260182936,-.06887154107359562,.04665381137079572,.13893639005159752,.0882067152203733,.009134009183213193,.03384801809444657,.04738123882592317,.043417512003515984,-.09968279313996906,-.07292935685356114,-.07642090913055272,.03078200877785969,.1419444858039401,.1054078132040758,.05034361323715683,.04262781628250187,.001986940817932714,.002912892694045377,.03341792768934017,-.10626474257229218,-.08979736495452365,-.012630641916284824,.10656465605540676,.0817874442411395,.015706150749096585,-.008147489496057633,.017962048380179174,-.007682075324779908,-.018533162764163613,-.025747232327919242,-.06863640651652167,-.016416507375672674,.05202743487028412,.08441518809008719,-.031665719212890506,-.0813849345909397,-.042068123788522205,.0005300177935280582,-.0340275512891538,-.03605849757866894,-.09412659960792563,-.02872384593042173,.036956160575588454,.11399236758087031,.04778429384887606,-.0846179742925371,-.1041988894674926,-.09693066326663204,-.038842231479212945,-.019078175570027882,-.04597010269833886,-.1043619020843051],[.0657579411091922,.07477789750899144,.018292785286432484,.02817302033881495,-.008948344943660355,-.05254558038679702,-.1087949901255694,-.039787230769942346,.0030209786294805308,.043861504558306494,.020559045374589795,.04470571436425777,.012784570202518724,.016258299543353186,-.0381269066583065,-.03749794320270999,-.1176914965804748,-.048822632662462465,.039098390799118754,.06705564932984903,.07550007148393775,.07614552682771833,-.04103203468659232,.015971731655258753,-.037660696603424096,-.03882889344260633,-.10585017234815822,-.04977232998168482,.0044956232113971175,.11402219053620558,.09097041075809398,.08280647818477407,.059837386632622405,-.013124940068416517,-.02905984071441372,-.008593185946861898,-.05564222566554638,-.08586524174843943,-.010731942001337424,.1291059421706544,.033630584320905196,.03496934530589975,.022613172456202865,.023083805067396955,-.026126622747118175,-.036555728898516215,-.03454946027988387,-.009697212267244612,-.03948526086895662,.044563725924654886,.10334272388553382,-.022990981360463417,-.06846171192441487,-.02665064017831875,-.04235340979767379,-.06314341272481047,-.03867047986008568,-.032190500890796184,.0024621208503444285,.033854260568938976,.10018347106209433,.03904977954159966,-.14322204153577417,-.06792156608979899,-.0831740585430357,-.08698554339873987,-.04999667685809363,-.0696421621408377,-.017580665091978198,.04566660098194077,.06447454232298583,.06638132353246268,.04975912032340299,-.16687707277418293,-.10148113813854155,-.04565185060144628,-.025088926732828348,-.046920284310850276,-.06309136328211268,.009245686588623986,.038333207077261205,.06157812554096906,.05622995001355239,.07737253433374919,.04318613112863495,-.03831331202585952,.011391766806405483,.02908571767432378,-.08735795377362537,-.04574539559564571,.035034140501439034,.038753107277930694,.01028453604755696,-.0177455095262024,.011578683352821917,.10678493475168932,.1292075972982187,.06210540437337586,.03161474224298588,-.03599156339869132,-.03580586208307926,.032429174955818194,.013349521240161158,-.00025561537496165965,-.007583653790460908,-.057809872184653305,-.02737962405414552,.07750444987804009,.13303768141468877,.07015160516243754,-.01870535480753501,-.015887137408581595,-.012405772738829302,-.036314766817913874,-.057460340751641914,-.034056167300506576,-.07157545200554731,-.06829951030826499,.0017292217190058162,.06083852156997098,.1505136438334828],[-.120254202400746,-.09616901718415632,-.017372420837296856,.11248443570944938,.14311280665471804,.08252801512798714,.040999748265665256,-.0022276752168216667,.010467790781802488,.023760234093264703,-.028258264318314828,-.08446917322920544,-.06310610366941509,.03455797950371857,.08054004022885886,.03092741485225429,-.05593172254919131,-.02359479370263956,-.02130792364289391,-.06310798271161458,-.07325346763411429,-.0583388409974394,-.04516561125159846,.02698523667013705,.0847024358332596,.0412808379810185,-.12024366873436408,-.10042897365913865,-.04976512360258615,-.02709528866297261,-.010458303155168436,-.08946214106286984,-.1289437118045591,-.010213525065954888,.05397954089416104,.06946877286954048,.12952759376479325,-.14182340494484172,-.14285062277610125,-.0528606979553762,.06396947679917783,.05393927019995231,-.022029152784641744,-.10818698528187731,.016491832436736686,.0386393185053574,.02402098933500152,.06559289742544211,.16112502640598336,.023615052509284043,.04335245013258387,.007697901891859968,.04311212102993753,.000719877562742291,-.045960857982681895,-.006912744259264064,-.007720488220110275,-.03189187184311454,-.01703696089280922,.03503732554839556,.16303059281511678,.17418427554606328,.05700124704157575,.022916289242805976,-.010513114683071652,-.05288620941847651,-.004312990845295235,-.0018884698638378054,-.044790060375371074,-.03232037451379753,-.048960971185410075,-.009405256462243008,.05225328638873236,.14016474879016858,.04065676611467136,.024408426423858556,.029985555367538438,-.0339732390428009,-.017546572766816648,-.037345271053038906,-.06137592893080722,-.03937344145819692,-.054467136784434225,.03787669322362747,.09858135152652249,.08915095169603543,.012958414651170758,.027624783264719604,-.005882801712167776,-.057086791129319164,.00032844804874246347,-.037840469280978235,-.033695751439804925,.025912743632823754,-.017024947537232993,.06774754790560647,.06452982934496422,.059856281606444586,-.0040794712071662576,-.0644920108179417,-.022926783895192725,-.06825694131223815,-.03878709110363016,.015688747762662825,55171662105987784e-21,.032388446527829046,.05350215246202396,.06262131056599893,.011267099083652837,-.03949045658114776,-.09431947563442254,-.047548409339035126,-.009154127828242004,-.04820143183530858,-.012240843418624294,.001254075929677509,.016595878790118618,.020434407588746067,.03670010902109627,-.002605549686391928,-.03918033435849864],[-.039044382493438445,-.01403183543909189,-.01717497943397446,-.04178154000278274,-.05937353609244046,-.00853443277067549,-.01630006917274754,-.0372949005672025,-.017549755907846534,-.07844796288252787,-.02004008529828297,-.05676869782942834,-.05996704021234596,-.049253129103857415,-.06947154100802728,-.0719026668505315,-.044718491551717546,-.03636510105928939,-.003441156329846132,-.04641103137376082,-.028589990691112652,-.08376849280851355,.09511618074241923,.06245224641903531,-.024833981241255007,-.0978585755597951,-.1127986872143521,-.08806785457243246,-.08883593725007502,-.0685451547778931,.0011510544062942052,.06827224992795805,.08089367361989853,.1353343839303309,.18057622473716234,.08939292101612739,-.03771266910646548,-.18004516845335108,-.16759680953524253,-.11135480418062912,-.046002363039963315,.06748803495826358,.16040808091097752,.16020908007929302,.03224274688353927,.07292654022565752,.1267341164708839,.07677496585231416,-.027586193949245066,-.06058505348398474,-.0659581038990508,.04618881719914493,.06405321366734254,.06654518437550146,.04695382149034999,.0044609113824994155,.009161834221931828,.04196031797497354,.09084851340325474,.0990188535089464,.09033375622499296,.06782563973870923,.012714203390510964,-.005208332247047302,.011531736842481339,.04691335152441583,-.002678931412419455,.028085116456833342,.027040588615283353,.015104267552866583,.05985280687552735,.03210141946334771,.025279126213945874,-.04549978299987813,-.00926545146344819,.032695973667332234,.005802306114184322,-.0018139112732011575,-.0029108731958343292,.010427305260203787,-9603247696692019e-20,.02128860745026588,.041079801640464084,.01635736301374753,-.03239627940962683,-.009646847303313416,-.015146538620363123,.013412806275636471,-.0013427741295518741,.038224090646334606,-.01337749153937268,.026455615442210673,.022399735833748824,.008320371809276087,.002198678924308431,-.014293946476503921,-.011197610424383816,-.02576460216500251,-.004440261456418362,.026453211631295465,-.01639227277354103,-.011847008501585585,-.030834902384847707,.009271130025040075,.007923165672710203,.015033519474474451,-.027785535484879158,-.03370942439196669,-.015542452577597912,.0004863505957318228,-.026694531555004813,-.012724799179976064,-.013286763364002738,-.04230632193151675,-.033424166864698804,.008729325548481352,-.030242759324034616,-.013050994461220922,-.03760398533593696,-.048537758115318075,-.06178421620230195],[-.06489561323139842,-.020224286971327814,.01590526440901255,.013551842188797097,.08222566405969617,.05259139940486349,.04225788747196117,.07064771573560033,-.0011991945255137408,-.03436664031206134,-.0723605555532815,-.05622360340450999,-.04625462902379899,-.030584855242000546,-.03499613386449457,-.043017778242875414,-.0741166184659999,-.058193036991492836,.09917490204744145,.08597915962376732,.0260790473140005,-.09033579595709361,-.10362582311773169,-.05683029227387211,-.03295522857034659,-.035953196903694445,-.0836695985016021,-.14307384019801234,-.17021343406030898,.056559505125885055,.1353903981543188,.11264594916548558,.011673755450064008,-.06580564917501655,-.015916968368204,.049371535828759125,.032602131500708426,-.023482372439204213,-.14884937691675146,-.14122378994790352,.038947574553526224,.09075477737772583,.11462434476555877,.04923296864969556,-.02068116271088981,.00591891665301571,.048035670932309434,.04875666889835771,.015029939401784822,-.00458228731729067,.044145082900123096,.050071852397185944,.009450975049327438,.02437866831683654,.052749214069398115,.006439013954362763,-.0002811989012708239,-.006454694040300538,.06724180485301293,.1464190668396421,.12089002549596747,.04552412319599981,-.0279038197772226,-.020728023595215268,.01197258968450408,.023139835261794185,.062288213971794335,.0030852567167743063,-.010563156113489056,.05474623114509661,.10798773024900726,.014816168604569607,-.06772912288071306,-.06942881995257864,-.039672679449664974,.007294484486903119,.03166580116924624,.07790346807147037,.03314357843621181,-.011090195620338333,.025953154918250638,.040728866157606014,.015524058836610692,-.021280018049330086,-.07460112434535052,-.032634705813619005,-.04076721430424921,.02906892748967471,.050403637093174664,.016601304925128416,.008256313251879244,.04007619904334764,.031009017378264954,.02125830223035903,-.002636450461610297,-.025393115408776517,-.04010043796874938,-.05110548671081025,-.06799337710361661,-.0004643255713012305,-.003987648316637903,.022729109377199703,.03955596435942922,.053830169668727355,-.0014414045704570968,.03726780218944692,-.022231980521954575,-.034050491080049324,-.07395165549402309,-.04355798360191523,.006327873479133189,-.0798842976776823,-.05179614099105008,-.012967977410458104,.01676967794141297,.03933948218335899,-.014906721458355397,-.02108264568598167,.0003744563633441408,-.0827232819772278,-.1030737258893234],[-.037002829518880356,-.051800501938286336,-.0608530045371766,-.00941504099452431,-.034328030870577425,.0033825861478738173,.012446709688320332,.028263939384084974,.05124125029402918,.02946721239068341,.09429607378175116,.01799633146224626,.07449490958421547,.018562434067668762,.0011775208660011255,-.03343642198912352,-.03584575868586926,-.02469974718432548,-.024948855129499292,-.02485643392073319,.022654621557346655,.013969959583284512,-.015621110631660393,.08434398198734791,.12526052771855398,.05840823182146438,.045127451768280695,-.0431642408693974,-.1023993834271598,-.09678107000960985,.005391639305122323,-.03384440231459526,-.012657848528438927,.0013785476814248063,.011572904307556139,.06840315435526513,.05298095991298454,.1266701829984114,.03504572572612572,-.0689602022298442,-.06007223145173397,-.0627205556932788,-.030009692601680373,-.009208935268622181,-.05334616924410386,-.05152183948165265,-.0196710242768371,-.05587360763057311,.04197887356304095,.1638861354064878,.00106361294464159,-.05391004051311221,-.06815359102208639,-.05529295073172845,-.03946217138840666,-.0957259375011219,-.09229091135904942,-.11338803995859958,-.13838339127374222,-.0357462740536892,.22606772554633187,.1281379577664759,-.0024481614307838503,-.03361116851957152,-.05183905928013263,-.084236132619829,-.02903224969906317,-.05889879465503125,-.11075161830580202,-.15312117095255712,-.02072478362064721,.16842588938808492,.12743855198340154,.08033192559741006,.021566448195444857,-.08235262002973757,-.0690179832500651,.04985737926707613,.040106054682231364,-.05533382077548356,-.04209621166425269,.06670870442526103,.04241981201260014,.06901166957622187,.07998367701871503,.034371804092794715,-.017332099818488572,-.08300941885464634,.042453939466233076,.051060642403565164,.07316878819733981,.10110928490296386,.015416346633545026,-.07412165176090033,.03750620537132491,.05637231638443497,.06980271245301944,.022830083664882234,-.08847619122475686,.056380990619929745,.11796759975891001,.0851595020681788,.005750678568051781,-.05215025241828278,.0007134118917190707,-.033052078906102914,.04246615456459355,.06615257067809975,.041058972780051016,-.07491213514221709,.05983265086360286,.0500362825184366,.07343910110660017,-.03505545168769433,-.04321396575721578,-.02843383525472158,-.04972287987174802,-.04246877526080026,.005821181336647704,.0033813738235871967,-.06457987851604302],[-.05204926560099437,-.05723788028923628,-.008390580400298928,.0062458102695772955,.03574661992690044,.07839946359958906,.07885215147600756,.06507937658407383,.05167443850164405,.05659949162584593,.1112401778738227,-.04945177019079997,-.03311327028822704,-.04470398589450323,-.0069392182793978074,-.02379457697725676,.010055161607694707,.05186192586124869,.032051221900923126,.003455103243123696,.06034250732565122,.071820561865178,-.011974167972497493,-.026068365839870898,-.020182681121343846,-.013949638537375686,-.050699316492772886,-.020355931447011116,.029014508674471667,.044992661189607805,.04170522023063189,.033987569666887124,.04209407154478602,-.03129262148575607,.02230132664279009,-.01743554965010255,.008640518922615942,-.03342911654326199,-.059143520853118206,.005585256580464881,.004150838713834478,.04946052885819559,.050859527708305804,.07993402373635779,.009595912870105656,.025688470585585318,.005560001931692558,.013382028934657897,-.05801380814888574,-.08949981847238914,-.07159208514989376,-.019107360505553072,-.008274485117911932,.03258501263496798,.0467012903088406,-.009606781001247233,-.020512636464317932,-.0038438246468142923,.014613700602723453,.06818628472451635,-.01830963397214188,-.11322752216975147,-.09640633091246717,-.052403236939622524,.027222341781097337,.03031775226862793,.01965700165907618,-.00966000423453436,-.018626726339795667,.008190809058583867,.12179883942046363,.1508103124239786,.07580663979213265,-.06276117094215328,-.10013344453499878,-.0682454837737192,-.022265844067301123,.0006558391459163034,-.015208724489903314,.018866572887032564,.005268488532491858,.06568402893132684,.10986728461260108,.14928723727825088,.0594347442891827,-.06018557163621725,-.08935459882000726,-.06621692696979133,-.023535680546190665,-.054962379947465514,-.05901330662719082,.01998960704862027,.005400320662715055,.03246277175846285,.04586664039469952,.10505871662329165,.05575551030694705,-.05988961634096395,-.09231581043391607,-.07161904594773644,-.07503119972223234,-.06225391144663185,-.04694709230045966,-.04811632104347953,-.036582441951753884,-.06110703633906731,.036504990974571036,.10110597080448579,.05117784511424983,-.044432074886152584,-.10159227266715132,-.0771585687479038,-.030393198761254205,-.050071313080747346,-.07459567617979161,-.0734585421005263,-.0783580627771585,-.030278657221277715,.08445387790494646,.12337283504154144,.06246916841256192],[.11115260218147537,.05156084299988399,-.01902732369284004,-.05373543891362918,-.007110107593170566,-.060331674975749636,-.01273389146899935,-.0839138995858443,-.006874281918481814,.03644953787571817,.057484281155208095,.1019949723289555,.08297654329738552,.01862379926670383,-.020037210469670844,-.05899168713382544,-.00430940921081718,-.06180113190773767,-.03213717152533137,-.019997943427430342,.02947771435838298,.09332163289552993,.07013604972397909,.05701993375827408,.05389997300421954,-.002638763453039261,-.00879447000911263,-.0448865167362323,-.03176715948743207,-.04217367206952945,-.032508457873831956,.03411523551142369,.09310599590723705,.018636796052156644,.046735806088687395,.02185817450129495,.027569212512874617,-.001974822818289687,-.020011467438642447,-.03826332723250643,-.04176070997146199,-.03081457693173932,.028817248098680567,.07178725501146116,-.009708063399979483,.040408045290464156,.04790294227271096,.049152309684650786,.016182293978584075,-.017238522908897977,-.04046859816317257,-.04570282053137038,-.01628160437135666,.0034546404119755736,.03480739077753514,-.018385622040759317,.01969433114929478,.06799866802700852,.06483129813863105,-.014464528171849848,.011124972290677312,-.0612303154617381,-.07662098811794275,-.023624167810504887,-.0028778143977437054,.03758925567499871,-.06926330403107468,.003135965696017262,.05737759509102358,.052691820606641286,.017399699182203937,-.018570302353960122,-.04621388920618046,-.06663271110793935,.004937253121457652,-.0038828611488524456,.025713646541403734,-.083379308461336,.005669139271292208,.11608252277008832,.07353316121959086,.03822657644961075,-.0771186501943501,-.05546319424175007,-.04304259780973764,-.019189005860534236,.017297615166657204,-.023170677964515524,-.09727131638277822,.026385141514079502,.08466881527957332,.0925048406292873,.016711157910872847,-.04436278262410276,-.0454511239473053,-.049550862988714514,.013625451869519002,.020561667154105095,-.030006622146731568,-.0639806474069757,.07587246772228866,.053120016709717416,.06592377490676236,.031465876517252786,-.012255926181853973,-.0313987899465122,-.01876926970569838,-.040221379151225214,-.0015619003771453512,-.006960438948961412,.06078341910204897,.07556870910322246,.05225568745879651,.07813955049428749,.03809501181427315,.05243456114965857,.048883832083824116,-.055025867820072974,-.045282107044195954,-.04101349777164463,.09904386685974172],[-.11203549175295996,-.03974163811224487,.011060178958798239,.06877152276086239,.09194702992686865,.06301346186484921,.05320845714394991,.020539339513306422,.038057193997243076,.038787465988623426,.028121764350374646,-.04491965003575355,-.028946060113256775,.0382499640499028,.0644486923167395,.07456688644847903,.05611798233910977,.05771208379857101,-.019732262989866904,.012262999619765316,.004034765188164621,.04311368950180577,.0036261933857882275,.04092871004332216,.05321964860596642,.046769367826384994,-.017166264963499114,.005489126872330413,-.020480699308758406,-.022929172836275616,-.019377222102737297,-.05039327467093438,-.028341154356359134,.0443687450803406,.03490629110767013,-.011071953214126184,-.06554414606891683,-.057326320735171105,-.09865404487925097,-.021150583208668992,-.03897105794825791,-.05195465279645114,-.06569705236973589,-.07666861846838118,.05753682622229832,.00590261315360243,-.04620387253927334,-.08261142012062225,-.08485219181649815,-.07914143032591006,-.0970041684358289,-.07606212552209854,-.06316389153647553,-.08332092946162584,-.057460537409920194,.02780118613240987,-.018767946276596975,-.029691882937965902,-.014540521259465585,.08390634737694766,.20739444418621977,.04670049384566572,-.06057173576227297,-.1303813417107452,-.1380526167498672,-.12358535758970328,.007471053958088045,-.022238309187360118,-.006783218212135688,.0005085683835639072,.12335224504872636,.15023440850791586,.2425587678439056,.13265122710423893,-.03634921595550453,-.09634226143484849,-.12379973942082877,-.005922294079732774,.009252871922863887,-.008641436640496804,.014911679170252864,-.006970962685308585,.0621921155758957,.048857235728622855,.0997362219025745,.10382748525934579,-.0017267232813016238,-.03337998864511238,-.041015759215952706,.028074948889879575,-.024175373112944334,.00037851506203986224,.02829008660122529,-.017177690879414606,.012211197073898714,.021090624041023867,.04880110436342628,.05889300676691906,.041186307677804096,-.05022803775793874,-.06358869101157405,-.01627885622405395,-.004755690985950509,.019166267525767756,-.004285985542694249,.07222129366422753,.027667668809319687,.007607234873196663,.046251642681222054,.04532751693659801,-.058087271467788915,-.0525686542532879,-.04476241350364093,-.02315551806532115,-.00017763235014638958,.05235999771198539,.017613369441475152,.02675424017353291,-.007159241026853261,.021450091526662492,.026061341438602878],[.07444303362221197,.02500970344944954,-.007238739688509119,-.034581203239581096,.007506922696264601,.05053220778206742,.09772895038203586,.10515405254550375,-.002088563116083089,-.06460650708474773,-.07190087700833939,.06270955516157596,.04810964818959447,-.0061288197958455914,-.048707571007934714,-.028878035144916103,.04928302961129614,.1030146407333215,.09188536866092206,.1083066909121139,-.006920186046306842,-.0710800467482154,-.03238540350174022,-.041456597157549895,-.03731828458452535,-.037271263481650524,-.04033581670492567,-.0305422084559889,.027846343886639854,.051125764403077464,.03945786312558099,.061533816212355034,-.008859713695695964,-.05800259437689445,-.03615103877043367,-.03985356005739935,-.048559742972093256,-.05876298366017621,-.0831018701176292,-.09187553006052346,-.0772668376513636,.0008620663628637198,.06456756049272938,.05176416503907634,-.08735727608117326,-.053385067235642,-.019429217609104946,-.02341541574438452,-.08563033699269586,-.126111383269721,-.08669161414437897,-.12449403321207964,-.05512595439100107,.030267444104458113,.0836024050777634,-.1258378190042574,-.09127814742360156,-.07353034604864678,-.08504552015304981,.011889706660064834,.13738456218349074,.1269175791837212,-.020511658061573332,-.0833315270062695,-.0456882908601092,.09472163178341901,-.1176819000585845,-.11560656474484407,-.060549525031994025,.08198488803341114,.1704420734813879,.11965727243025565,.1125448422909956,.07474105241393444,-.02573762291906274,-.03358721907248884,.03411352154081515,.051552692766032665,-.020222946025836006,.04569045105958281,.05607113335333701,.020997592772981258,.044561510792265,.02939148849213119,.02672527280652389,.013325176508616088,-.019772518292927338,.0027475572519997937,.12423204721233166,.04554971074538604,.01894738751080638,.005723987504926101,-.005869920830539471,.005036955065784027,.04372405490129991,.019509400602205587,-.0018887858002489578,-.009617738109261226,-.013199600334816992,.1014363612797737,.08518214265041664,-.013319980029247946,.002918907465938758,.010087593201327683,.009493285904375974,.017930356539244602,.03140663768500043,.011733720402003947,-.05090107026194785,-.01573578191125742,.029231279797781562,.048511610011102664,.013899380735429394,-.031157761675669398,-.04066208760310525,-.008301142375609458,.043045372058056516,-.01096803936953996,-.0012438578375955772,-.02262652033782551,-.11765611182461798],[-.03987348068518633,.00012184835774546317,.018432499523696314,-.06030489971984803,.014643208225874137,.012981315846513394,-.0070294048340999865,-.05562456698240353,-.011913096749220649,.008412497699637,.010420634562858239,.014232327032235419,.004683222693611322,.03281998263431921,.01320726418626594,-.02353380889127571,-.011404581263416494,-.04258217520341631,-.018915023456131434,-.049511208703627144,-.01836613958153846,-.005843344626253311,.02231630230741475,.021334764569425978,.0346662913884623,.060010301185060864,-.034246065227552185,-.04700549965012455,-.04792187180254644,-.04104883140323553,-.026713641204057077,-.03878999612701496,-.018331240491325174,.03797686786202398,.028813877664190697,.019770359402909235,.03728944535318747,-.0669629884115178,-.10295356437958489,-.09003533826746601,-.06041580278523514,-.030821512733484054,.02401335406847712,-.02361574077075567,.014617912689912915,.005197345658313313,-.005340876957806051,.019716826597634293,-.07876690419326429,-.029296548169388054,-.02328043082803078,-.014403388911157673,-.009226362874770445,-.03340903629912772,-.020726200729135634,-.035931925994181074,-.023010380673947554,-.039252395604041306,-.016760733401697973,.053608280303007586,.13329950551225564,.16489717632675976,.0902812683374847,.04522966550533915,.017404381514372763,.013597897839994186,-.047297713743641646,-.06762209432743164,-.02719563655941181,.06550639361374848,.02232560477300298,.046885888199241804,.043068894433185,.12018260070272857,.08430250848496149,.02067188016168707,.02018451176662973,-.07105089435926291,-.07954173909495858,-.016269072364149793,.03335471548526817,.02870602470630109,-.012011749840849373,-.015402866346903674,.031358471867631604,.104766674086863,.0025587486589462027,.02110857377048439,-.039307670372500075,-.09376755122840506,-.022120949123226506,.02365801675584322,.001624116197708074,.011496266326477288,-.03966683671453537,.010910001919740123,.0638158108270505,.06296474925617652,.011666021976556945,-.024049027553408542,-.0027908618863511994,-.053241603898009714,-.014763231808325047,-.009588040856415833,-.031086972870322235,-.030644620324520727,.010272461123314607,.03748199758443737,.060317495169656093,.024907320438576977,-.04559962354066016,-.020357685838190937,-.06210616698099473,.03698655605744725,-.03845306985689939,-.044856589426634154,-.03431065152416227,-.0117837233082248,.018762824804810944,.06165748915487904,.04080400995020607],[-.03096737664044258,-.034704706474157576,-.030029036584246833,-.07320913246644893,-.048949076143639865,-.03864066241044256,.05147476405244581,.07423685566323197,.11134675135754504,.07670405672405489,.047486303599635876,-.06845561373339852,-.03512851199649608,-.0025321681540545343,-.057133697514561765,-.05344060041967924,.01714865038536348,.052110170662047414,.058782183168318736,.04705696144603637,.0403223252560649,.007803002438069265,-.05608339456723066,-.04684682593449583,-.006557738579599515,.01547109497711198,.006661478090622973,.052620395249402485,.00019300929351519225,.07754706950878812,.05031378239481031,-.02456918809557169,.03466288694385679,-.00440299504585411,-.038893398080935566,.018694283839760885,.03542801836340945,.060685907655044814,.0587413540716437,.0014872430743369924,-.04575632584612705,-.04794464200830888,-.09281792081715598,-.021043716683786656,.007562208390103603,.00878028863524994,.024402794551533658,-.01824493391613341,.005681948678715126,-.122005902409504,-.11277710237979818,-.054719494073167244,-.09016688938377804,-.032774893151098286,-.07964048468698327,-.008143342580373303,.03641555473221397,-.02971924637905851,-.08343173036099473,-.09700971871393334,-.0783823363963309,-.0618524312337395,-.023645551992256014,-.040447890302015635,-.07855622620524906,-.03521895064035818,-.027448566314184852,-.002422165158715968,-.00865135823294761,-.0690559411874358,-.046263515682347614,-.02668358710641478,.008515128473477424,.01510527176030271,.031314100341752416,.03605607584214813,.025591220637012156,.005135383452748506,-.023005349498057173,.02104724020668694,-.014202301085685001,-.04360199270242936,.014083946209181006,.047988366041463205,.00407689495376469,.0400696156862377,.03136809244101747,.04140190793268148,.008354236628530194,.05352398489685497,.03834657618989342,-.007535488030160201,.03383654934661684,.03770195901377556,.023170719193185016,.000638745188949805,.022456779814042073,.05880400681490598,.033465949399417834,.011933873490689997,-.003120298876238995,.01606874667277748,.03762189304398071,-.010942651485316122,.04629938376653557,-.002763768259076385,42316925059140975e-22,-.0038944346280027366,.009657632377318735,-.01850966706940272,-.054006078059137416,.017238219091326883,.009159691015199018,.028996863874777658,.03395260188298865,.07075333983424409,.003780950647489843,.02719958720401633,.009141971904575387,.0271151884086808,.012709694003767591],[-.05922160665560868,-.0013807397121916331,.02761264595777964,.10526838045136652,.05616219064217892,.06338199684663096,.005281390721374816,.022701227707487698,.023071399548784132,.011640586008089752,.037100581562280036,-.09653730167124185,-.03797470422579462,.00038732579738916815,.05062505001626757,.06508672908567747,.0010273202640978113,.01030282761678826,.005032750022648261,.0509593427031422,.05316183247155901,.03088817116176755,-.02135902495678074,-.030126662636484423,.014336380788901357,.044081582390044685,.04514328491398001,.01394262266053127,-.0744795630241124,-.02119465049195851,.010166296540795764,.028011887127611046,-.022728767470732637,-.0337697506547496,.0042313533530659725,.022686514054856353,.04654204591333076,.11310013896650321,-.004505151104068197,.07238358893686615,.03789191997881325,.04463998545348823,.053304796345090825,.055297501218708925,-.025259737537897203,.023523250437604698,.029550788938781603,-.057103923688581644,-.03722805046402906,-.04033454711375974,-.06600239445486109,.051805877339979295,.09092132214492693,.01582333113937441,-.03866541214387774,.009290651557492625,-.028826426019922906,-.07498098908446209,-.05787442193814954,-.10795622255952429,-.046546338514420166,-.1118189944174967,-.1019241875217538,-.08570241416534531,-.09390586849193057,-.14398389568329137,-.05682858560544814,-.06626357512710776,-.07188323103088408,-.05541027253169447,-.00928225455038148,.0018363519548447033,-.006618338217431227,-.01182516248375036,-.09252025293113655,-.08826205934896571,.006952122206205752,-.025393087237703255,-.006394699129814933,-.043361744350810506,-.02217358952694239,.0077218815463931945,-.02533411774995424,-.008315264057263447,.03737058463828657,.012798906233440717,.01568549556443899,-.009659202034056957,-.005784888803287369,-.010756955350811635,.017757324648215944,.04452954766974304,.0041941047626251615,.05464518596179402,.03970959793814914,.033910773481424995,.0652717691003689,.034889848272914054,.09538710441349899,.012473593139358034,-.008993507577960132,.044380357060880754,.030765480187302234,.01888672423998297,.031787912403243176,.031673790743440955,.020196643029900062,-.0012983094411241694,.046204156701180166,.04361652893877668,.0522796751665047,.035528670172807794,.04875282742216639,-.010956478364744832,-.010948307255129602,.0023335073954288315,.0008261995970753819,-.028699221681917506,.014221929018802294,-.009806880683679096,-.03527276234282427],[.06294687244903106,.06451939487907767,.0328973595145653,-.0457118918796631,.020599391374711062,.0636551992364853,.014615769796257505,-.027440870743054617,.035616222562863675,.009403609382716852,.05650744619726519,.03127252900990134,-.011034554575282393,.038887056697409605,-.021343232536083438,-.016082974355130925,.03398009131937528,.05262640050415895,-.02529516749703499,-.02654872070640548,.030680991925506617,.027583071986928488,.08096671932533792,.035373199613146035,.03490025639293444,-.012798813313152833,.04319156099995615,.022703220357838422,.05026537385363263,.0003437400231437425,-.012567197236507482,.07342963378205924,.0065301063919971924,.017281768786973933,.04927600477908872,-.02725340162513791,-.008652057866240029,.047527074820523915,.1786194281868431,.0868090680216574,-.01935517824058866,-.04187030485372663,-.05530475360810071,.07829083723169422,-.12690621836570407,-.0962798905896546,-.0925411219328599,-.10216764911335079,-.04191334729172356,-.006156869539933545,-.02394181893475637,-.05181154571828913,-.12530688042526772,-.09786217959004864,-.10634083467860724,-.08874174563664096,-.06095883653512031,-.03199305637692427,-.036846220231738974,-.09227401034791582,-.11353320653734295,-.03614669556607285,.011596830638808633,-.013143670931630894,-.06391736056544586,-.11042459480083613,-.012415575911984202,-.0612866837920129,-.019683898333121175,-.02351836883559362,-.006652340016038455,-.014484754457127935,.018028020927321566,.008084275012827935,.03697237071656497,-.018618144071885362,-.10924354613828609,.030523206341700047,.01298880090453846,.04012014262037861,.061496119916373056,.04844996153098939,.01921366891131086,.021510068544701624,.07209312331150311,.0374101619172917,.04916012297501317,-.013141343062868835,.06064253700400801,.022194682981879085,.05129865380619493,.013217705879822975,.041765969490498975,.010615751276552232,-.010207688567782834,-.0005755982867169385,.07631424462253965,.017510356925100834,.060847396478783206,.03300347337813607,.04898473451202255,-.006482225209601922,-.0021063249759751858,.010622816122664164,.028538830399705187,.02861840870100916,-.023485260352655107,-.002827617418933684,.04410595418439364,.02257475962176672,-.025473428596684167,.026401062552437127,-.029859950686759645,-.03514814520727341,-.028004242193563095,-.010874515898578971,-.02520644976850539,-.03147261688793358,-.013822064554071298,-.01097289405425797,.0760923571868825],[.03690386612248002,.056002218089369685,-.010951719270400923,.040331097511643155,-.0037441455323561496,.04911212511418306,.007916966537418309,.11344386642727713,.0007563312264983052,-.03748257193135831,-.01873577218998579,.01174494526962254,.036505508708255696,.053399713960056966,.023086150106013142,.0044152509684453195,-.0036748654077677217,.04965698113538117,.0045969535450092955,.04039279416298312,-.029097892231179194,-.0748938652763218,.0016705057712694963,-.032135738557994634,.036750173986759005,.03202977495599156,-.025110352420147287,.0221106357762934,-.011118779729623884,.027123502587836187,.06109546207970022,-.024783808630182078,-.059955925032526225,.013711673076898898,.0365575333682475,.08411026188692816,.05595023129474677,-.020007452447925414,.020788588159875922,.049865734304206946,.03902192315122538,.08884566474640107,.012344115511745107,-.05538843672808838,-.0283890960033647,.025833332510384673,.10641983969927944,.05272291830145921,-.05478356057464559,-.10190284716601143,-.049794325260415453,-.006908561246873404,.018752575433158634,.00820978526312097,.013268033828822395,-.18180783799950825,-.1259586510866703,-.09458706276734465,-.027564647202767342,-.06433997097232488,-.09163078285949837,-.09227848834061905,-.07557002711963273,-.11647913534085745,.0033701825247711877,.029872248721253027,-.049119870012074435,-.1095049028754014,-.08298553382194322,-.020757266879069626,.032839871737627147,.027498688090949394,-.05126517784099288,-.02872690412919346,-.07436252040475247,-.07882837994500602,-.04821124597738093,.02417495141556668,.007447280767901082,-.007423249168852952,-.0007786618597691586,.056674802683761974,.022479560933966962,-.022053321065962445,-.025989291569709812,.0064102606195954315,-.020235352690214578,-.06483817157331549,.08153962706581591,.05055978719651685,.02764093148373714,.05666849133041683,.031151110583386293,.03987747631159184,.03244381912526212,.042982667461244774,-.0018215713348507297,.007063770010998928,-.00584297953517561,.06760376205929838,.03091253675538988,.028071888777783896,-.0010850231199715735,.015534670537972986,.04368719019400073,.01938400318015672,.03293968892788021,.05737048864426658,.007608329587750942,.004498692810154841,-.011421955766557471,-.02908127206914088,-.0036106413708782165,-.0032691409082095807,-.06355158619638394,-.022937264529547606,.009146701062682172,-.011390797309113472,.06818750604632794,.003884385505889279,.0714486250517464],[.09367005337881673,-.006018580372441212,.06497525344798,.05720481392857424,.03203935730331259,.017360690928795997,-.05431038836749526,-.07430401083115647,-.022133608826072,-.03441434222392329,.004416296324719113,.028938348016603214,.01658488166499885,.025525405954675534,.03589396196707194,.007674689565585258,-.0019368459518004297,.006670753595932805,-.1042360605814506,-.0005545484096969797,.0022380826663202374,-.02840948162941799,-.004017714090244609,-.013989051801159828,.02542809328073873,.06414836547218424,.07748576576667437,.03400735289340096,.04677126937473937,.05405600102557548,-.06829161572435846,-.01191564128605152,-.08236908091325304,-.034026953075964254,-.0939266964085038,-.02829902606827278,-.08318785606027235,.006867021340889956,.07996019523365458,.06377190265533947,.0008763423480259887,.020691801513151017,-.012739227946535911,-.018539467931270818,-.08215903388317325,-.03550926948648102,-.0903794995968909,-.07258235104829033,-.10221116757608581,-.10665056526245895,.0009025073342423806,.015334595491633053,.04622773006969833,.038103240152997334,-.006246122158059489,-.06724561414366495,-.05332552212209024,-.0029145163841420574,-.055345741892996264,-.05524613740870098,-.11556942735569369,-.12678748176917243,-.018650402834112373,.0201115675159311,.007237454432263194,.013539302016072579,.03910940758548388,.05164169890796305,.007896536595205877,.023870730531144614,-.017458058805458504,.018892420656760625,-.10504680212429973,-.08968000412836097,-.04272524613046922,.026724916448450958,.011635965581891422,.08488913381255783,.034194689506569786,.06585725545840555,.004242707893792936,-.012401464228490738,.042722865239520375,.03350923661538768,-.008645287457921886,-.0917697788048053,.020750157767451382,.01987667311893981,.010694698759597054,.04715645875848584,.044111484618501104,-.014434725200227233,.07137385570418422,.03475623227161978,.04057849325519469,-.00716628706542051,.025407664409730447,.0433394176317338,.010480242779609582,-.008730706368105114,-.013411411822995711,-.02039450903525014,.0060121542292144725,.024188238197290803,.04166819382248508,.041183226601004416,.10243115564821167,-.02940584456446451,.003109924528581767,.0030508999908164854,-.01738219553930828,.004826375063924693,-.026781565476663695,.011942148044968376,.002467828151880236,.04092900326552463,.08062259995716158,.029178579118654943,.04303871497674061,.005550173350657495,.00027909537625575576],[-.03339731139414968,.009641500771364497,-.018236744035314625,-.034138584815056695,-.00244389167533262,.0055087071850375355,-.00262680371191032,-.02824109883815166,.005215994203653013,-.021235364030436632,-.047073948370721506,-.026121704506604584,-.027138348751118566,-.04810743540836265,-.0402112798225784,-.030102378969085283,-.0032792712208641666,.05967861339205,.006758383300518157,.030667242997798105,.009543611534364461,-.01691908253325843,.003823309581384715,-.058995625065273824,-.030890606711754587,-.058149589871913064,-.0815351815818076,-.006357953877019928,-.017080813200946385,.04333747840689195,.06298359743661373,.0404013095948684,.007203402399887518,.011592685433827972,-.003302145650091806,-.0578167886071247,-.03781251270732555,-.12425681152290456,-.10985738895947982,-.0938128398806289,.06500129033876156,.03484356102898714,.05661600403485567,-.01492500765441565,-.02116473624418838,-.003216205277080053,-.012309755363306994,-.017827196918306518,.03555116186738867,-.07046756271563373,-.034864456303405046,-.017196442705869938,.02847927116818913,-.02280658118428358,.03213417823424855,.026469237488508546,.009589558238125101,.035119287178089,.13550727924378436,.13688661973317756,.1624799779614461,.015875158167285394,-.0208311518741172,-.0011812318416458828,-.019841048216886314,-.08808246489667347,.03045776887980317,.026063097480707995,.047026463061375465,.07056913665627884,.06291679280327833,.04979881242940511,.08548586022935979,.03514169693262574,-.02016744424568012,-.06168515964673668,-.09284755481441574,-.0015896852645350262,.016608882932934957,.05500158726927647,.0708679315701417,.013234850523530295,-.0008208370569672135,.03800485787791148,.07357330886595341,-.035371927316790286,-.03169750713706261,-.08624851669394049,.01039022343069513,.020133865530716527,.013595826448211168,.0552947028760203,.009562722633679382,-.021797178139167303,-.009191326998663762,.04272417857533575,.02896574564861093,-.04832930579382462,-.09700007638825506,-.03539209003656582,-.009123052872266751,.04773419441493815,.024899519254075436,.04020178333612377,-.042437436186437194,-.008886511592360535,.0034760730494084874,-.012834489181082792,-.011082107946660119,-.08637361262607073,.010906720579881624,.001585372406144106,.05993404935505266,.039390631946712135,.02593613064547083,.01835246554308609,-.06665498505357999,-.036968952314477735,3689082831739854e-20,-.0376222687795059,-.0877389932717216],[-.009692314530664325,-.014831123980443256,-.020109046114375438,-.04152978353183027,-.07911282329057025,-.028439541923334352,-.04721527776151122,.017919873457542868,-.04373062082547629,-.008307767309284932,.008063761509081668,-.042847844269627344,.015732582480551337,-.035877042331939335,-.02027462063142615,.006001733421295721,-.011038427925582694,-.007932185915453877,.0024669467939925456,-.04717475164878981,.019484888947581012,.03891215822644656,.039176172588516966,.005379757851188924,.01139452493864973,.022134514065384248,.10262246569682075,.06064544842725528,-.004904733554454838,-.026337548147820675,-.00031049715236153297,.02147108917750011,-.02913111856188328,.04902095414621717,.04824653180085528,.08754087282250271,.07299558540439087,.01971113347206911,.05334627599932268,.06871301346372924,.008923541533270477,-.009103604004815954,.00591298440909431,-.012742345396119917,.05621460641390912,.06379056565110597,-.020641135671904988,-.030946926450396303,-.016711976557631042,.1127244564225961,.02689697887910851,-.013567479905524482,-.017090058647780196,.01477668396540264,-.010781920436714542,-.006922091337546267,-.0894284594572852,-.06723257080182707,-.026910735478631764,.03533679397000919,.16956999523533778,-.006545783898859736,-.024077365950438537,.032166605250999306,-.01745920041250612,-.04008884443894074,-.0993011973611247,-.011984969849644441,-.02764133298839496,.012259320892963398,.099469618921912,.030178783959567166,.017806737961083313,-.031243892294941327,.03695296880951856,-.062248228689263954,-.0189666133444367,-.06605621564780957,-.02680077856103967,-.012533495449249166,.024584778032468828,.056249746142491924,.041206463201368705,-.010337287195679248,-.044756156557245824,-.07239119200591854,-.005660051253971912,-.02219153290606332,-.02597985228049178,-.004856931768196144,.00224564954242325,.04804184523060072,.021878224718166694,-.031093682711296713,.03107864582201561,.02861996862032013,-.059947445075684995,.016801646203229784,-.0025822067852190656,.08443882166553197,-.003253904863717641,.02175579697998456,.04439614359960797,-.008178732752852219,.04342802310153146,-.012815929012254187,.014790808529243901,-.028622217225797268,-.048854772240751264,-.035404776408354405,.07088064527850518,.05472466206775853,.08606869484637912,.049869516112302004,.02413461801985961,.016045127809092008,.02140815268480656,-.001959434892235346,-.05275660955271612,-.0464843033251154,-.0680628131201182],[-.04433192523077072,-.054329522119882984,-.051769461081186574,-.01525353279808098,-.01070122111548966,.00928045700858434,-.006241020917187658,.02007158696040288,.0633492605457348,-.04992151146932073,-.02484793573744559,.06107732839719229,.07312670376581512,.034270104298964765,.035888286964653064,.06555881241229555,.005089380157636925,-.01742526677567887,.06410303374113939,.06369099896053182,.011936936642071773,.006555889310454588,.059351618349500423,.036170614252957374,.07314487602014239,.043276296735218094,-.0077362104397021465,-.022748848048502378,.004668960540261835,-.000690026604987154,.06393971290183598,-.014966710082811807,.0030727592791528514,.026662644906728487,.05282034694297989,.017109036507216773,-.022408542987520336,-.08708472499414721,-.09756976542087417,.021721228084129754,.05171241993900287,.03275676867724427,.017819938585971133,-.037825552779906096,-.09990658237408458,-.11007916981172988,-.0630399698323383,-.11065720406183299,-.05646397133191597,.026810997895988217,.075619829451266,.07318402769983712,.03550137712065904,-.023904618994720753,-.017844665146339908,-.1175651419891549,-.12168288991626966,-.08311427985099747,-.034920888410994,.04676645007233282,.05877383374135378,.010496365445282875,-.0022130497808088385,.05109952838941806,.024774714859440425,.023471290407304626,.01563187671646295,.017970346390513474,.0019335540535132985,.03051462142073259,-.031110061550176205,.03360548749067617,.03625821259240384,-.022201080422089837,-.023002827294496608,.014758321300040728,-.007036805867247212,.11790263516593479,.04947434149385239,.06241317330987395,.052777269288969954,.009432637846820961,.03216379281079698,-.007137568055199119,.0032748797229581496,.006789619968039357,.022973239078915367,-.03004403885091666,.09505479220317958,.07791827880929669,.025170796867169457,.03248633395739102,.00548093487382893,.04628843125322531,-.0048346651023809,.010140951369667767,.006405041468368794,-.016192674375299247,-.020769896639595678,.07154315526795414,.041811635752456604,-.0011513813928812448,-.006960922701834835,.016359548418687996,.025002761420305327,.02055238314967053,-.0015891153508810953,.03668826543254401,-.059254810876512506,-.004524146766604867,-.02276489684400551,.05569732283143427,.05883509034932295,-.017695954014236,.01434475115987981,-.020605598415603534,.02101001537229521,-.02247477074116654,-.040296790452836906,-.04055168253818354,-.03657965859200197],[.048679672604873575,-.005221078091748697,.011189809961728723,-.014770773614183955,-.034142207536203256,-.028004372616342227,.005949358010194248,.015102059175930433,.01990083591770852,.03996081933195852,.0038194214559740605,.01388991934048571,.0755029956508474,.05989103883686564,.07551240437243657,.07375628206272977,.10697289779941345,.06874076246956287,.04803132511577131,.04236624977011188,-4202677860609336e-20,-.012109444919293957,-.011318629446975792,-.03738162672947794,-.02154842050017325,.018481632817077147,-.005201334100467268,.02747650575675644,-.013858276037494007,.04372837769145382,-.02503235093554558,-.02968671709465069,-.019073492339460648,.03349151596135548,-.06596389946117143,-.06234163555717752,-.07562432809243196,-.053585585183758444,-.02877361255805902,.00662180701734881,-.10035769919352369,-.08904646094198457,-.04613980400671794,.07297541439744247,.08725084363158328,.04516809237144165,-.05333664579595656,-.08240943925066489,-.09144443337302081,-.07442562311122422,-.092126329411899,-.03767463605174012,-.005652530403660115,.067513154505641,.09393421046986968,.009289669123771788,.018516434326696123,.03729758179933857,-.021567249747191534,-.03481887723122783,-.02178280374647603,-.02580882232156104,-.03685316311758648,.005007242741758529,-.005486535063339473,.03688895314986719,.02030363893313307,.06234970870159195,.0385172311532573,.06730764599156495,.05861634829822531,-.00421777044282462,.054673040661478024,.039230731169713394,.03139249117871078,.04391943445423645,.043292679240196676,.01880512733348403,.017382645623532596,.05966162401002324,.03369867509664016,.013341888531181467,.08421015245705174,.025430986838139963,.012904413846026745,.06543112206508994,.011197289986359183,.029135622794168346,.06254098788565492,.045382776129875506,-.005346260396196623,-.017266787058448405,.02042017407557469,.013123043389498143,.01525904905961481,-.018730258477720974,.023824284687915143,.052818399981128895,.015447226033022343,-.012489602024893638,.01468373434072245,-.02685260219002731,.028989118420292514,-.004895237991038508,.024941536558213226,.08007482591583316,.013282727442137699,-.03041996091693562,-.00770586692939193,.005761503932864273,-.022997491985162988,-.031813252703541905,-.0074071331247387365,.007468576216473739,.06665166960870672,-.04318959412870925,.008748609431892974,.03560748124179862,.009344912969746919,-.060325944063403136,-.02989706486831599],[-.021246880546086595,-.02220383648791282,.08682720127877484,-.025228269953020035,.04697176265078679,-.03203270556745305,-.018784965671998312,-.004315941436901353,-.0418268952943677,-.06928924256853522,-.008166651625465454,-.017438229004257164,-.024335471310471764,.028654380266214648,.07206649188292012,.016590540091147674,.02463322903508903,.07813955636599351,.056622200409004196,.037502807115330446,.03784022947009699,.032000001430608604,.013106472326739116,.012369223564270927,-.02870590297489497,.005065930160656651,.013853418541047425,.0005595304094045961,.02032257178110093,.07527603584001831,.09191264610795653,.11098583412431406,.07821683872330536,.015546123816145365,-.01174475399733392,.05173799606146151,-.012734123174444889,.016768985632801714,-.04436589860231249,-.09955350853381391,-.050100281868429075,-.0572477447691047,.016222179759918118,.06759965716981267,-.008648050879736989,-.003286883309752117,.008592258882527452,.04676794057539935,.07279382616523587,.04529496705079871,-.08482529510287962,-.14860512013508548,-.051316060883006345,-.12479434422523886,-.08507885670469298,-.0057128248462955805,.04416255206378315,-.001048023139082116,.030855043319812047,.035139310135952784,.07227732775752435,.05391764845275339,-.04467152779953301,-.0826848844602535,-.10599899450799834,-.15447137644238773,-.011133194850090913,.028927718717327938,.0038563782177809536,.01624760202616901,.017415917794260313,-.02140723915263775,.026964006691972034,.02813075759211585,.025157803866096017,.037924085124599397,-.004684964387390508,-.027697413203631536,-.041378992383391267,.008761232888241332,.0052052300046328374,.043900410523183886,.07761021177895132,.023415755123284865,.060860467661889836,.03557434378112907,.07192757763022538,.06407092682092731,.013357966646117945,-.04836563617815281,.02979302149043304,.005225453074711478,.001772380719733067,.043271021300702546,.061871883282456325,.06025004123933597,.005922077559217299,.06727505392941442,.10149603554983715,-.030661903793952457,.0008942860474676784,-.05764531131175226,.03329484629877765,.024005678533927544,.004916086291532833,-.018549226060485483,.028088385775127147,.02338236259357804,.034065125172518744,.07678838837073973,-.057670084152690565,-.03452764926869298,.02176016114763074,-.07233366259122359,-.0005361811817523945,.0295464921598111,.004352814521018584,.00500966267528254,.0456723326635872,.027025414018034634,.04757490956660641],[8460801644550719e-20,-.0005145860366282239,-.0006558334416083833,.00020678855120534164,-.0011087422000772406,17282608213937956e-21,-.0006913929945738893,-.0006775346073245893,7461334647233808e-21,-.0007052658429251291,.00036510757807054156,-.0002261258363614252,.0008373312473602332,-.00038556424752306945,-.00020677490024442052,.00010703864033769633,.00015849441156012833,-.00023178848590595102,-.00023816000343533997,-.000420628080187814,-.0003589245103967076,-.0010410723256383952,-.0007099479937469275,.0007230031202940905,-.000247355607939273,.0004891872672126707,.0002492378465157735,.0006066898040272925,.0014982106812944096,.0005361975164212482,.0005008694101298963,.0008980687784829119,.00023875283911756195,.0001569025840717983,-543153422108561e-19,.0005617340799662848,-.00015464198944174475,.0003080961595964592,.0010477498266872332,.0005403071450221222,.0020027631503172446,.0007369621270176263,.0004183775897850378,.0011534221243659493,-.0014158435817800425,-173851858713929e-19,-.00033269545836868853,.00025908994851942674,-6789517531419209e-20,.0020025402967875014,-.0006012096182389272,-.0006372877274755245,.0008852883436926973,.0005138523171237946,.000800769297987905,-.00021374130033396943,-.0001276378298146058,-.0003229920114812129,-5546376125890873e-20,-.00038413195736432953,.0009809574637124063,.0016769261261450272,-.0002368271084003809,-.0004713132716675089,-.0011833841321572391,.00011652969229286516,-.0006978075917232144,-.0008151621640403311,.0003147153846476706,3297776009406636e-20,-.0007426811784148751,928343749358883e-19,.0016276084011049713,.0005203934741388303,.0003285769128429112,-.0009091443157508853,-.0006627394979500014,-.0004942942568035092,.0008178710324047572,-.0002864681649460618,-.0004777482209132834,-.001128700205033445,-.00014958608778612575,.0006772790983836825,.0018426861751217457,.000421274359649379,-.0011897602501548844,-.0021020944752171283,.0002586250187259949,-.00028164777099942,-6787128829004174e-21,.00010673321891338397,-.0008194673362902514,-.0005065578031113356,-.00045739009384393806,.0012233134687435353,.0012483089084911257,.00023366693745787998,-.0004965382203324757,-.000604310399740543,.0004885631208034064,-.00039402287572039285,-.000302829824259096,-.0004829796844154216,-.00045029888856688155,680651548607275e-19,.0002938081340822067,.000807500675520309,.0010027117298195727,.0012117980796380462,-.00031499882641429153,-.0009661544954750814,-.0001652076714513881,-.000259300834581741,.0007044456759483508,-.0005152497160491251,-49950991088697216e-21,.0002326983548252299,.000981280700583384,.0017427389161336626,.0012748954300746823],[-.09216726473640563,.005672874254759814,-.009374512524727896,-.013062003758843106,.02681075417494043,.049001345358430204,-.021651121797821183,.03700115656960461,.004218312740031363,.0018620748056430826,-.00028650345860718393,.0053573451925248185,-.024952282021024397,-.053963168016106317,.02220135440090492,-.013351422685652972,.012385499720994092,-.018031103648731638,.025521909572096997,.01253732595969557,-.011991546378321899,.045186572016900094,-.00943350838844243,-.004418429309194449,-.013784342121793192,.025926061962200528,-.04105356169652366,-.03889277471178329,-.03989567459908096,.03544146116317792,.023677237357549445,-.04102177731015667,-.0576956088544048,-.01762676919993638,-.020216604797755007,.027628137586160582,-.018841264850454086,-.015264367494595166,-.042662519918908834,-.07663188087932943,-.057528782374830695,-.014904729302692682,-.0668977800017137,-.06532989573225445,-.007650565220560346,-.048586565493310384,.08598179761037544,.023144594932235765,.06950258752501162,.023606740362224744,-.03701131089094889,-.08646362985361913,.004859332031582425,-.04793315203337142,-.06520239439795136,-.008308746609917553,.0036048909369455263,-.014176009427905843,.08652450016441214,.025019184064985066,.18351010232889509,.1773063621666941,.05264594509899273,.04629637404986542,.017268040614808,.09174432677718507,-.011476730811934746,-.003109830521472179,-.044720850821788796,.03519498456881187,.035161502690833665,-.08522566129784649,.05912598081096809,.14804082639627478,.09489389797496472,.10021021442994898,.09479988677758025,.016819487190214488,-.001620802251457232,.005698369852643104,.024660235147196684,-.001744068586085468,-.031929007957278016,-.08234588274111157,-.03663187750709784,-.0006056141390904045,-.008492377648402303,.029092555992398725,.02173362039642967,-.019868686758322113,.004937734271252584,.0354455889830066,.03565950713563679,.05730187910824103,-.038291855034349676,-.06160379000151402,-.062081937237464455,-.043689034974759226,-.019286854706340784,-.015927077135257463,.020688030294743746,.006187498022143166,.007954475633681643,.03821008410301443,.017747129076694818,.018299098668275414,-.07199389072103002,-.04880614394384078,-.04147751454154017,-.07419601483953683,-.04357005031946174,-.024269573468651304,.048012036866646256,-.0022007186161765308,-.012800711217039476,.05287613915145286,.06224964320115732,.02534211937322168,.002870857368936025,-.041475224097980136,-.016770635320925542],[.020791522234705886,-.026685059276677248,.005268388136761268,-.034938985350819116,.02160913529503082,.0727598338409123,.04138866266308179,-.022050570784842675,-.03766921280042098,-.038135589145765356,.05613806948326967,.01870086519715047,.02405327287113124,-.04452154836720787,-.0072802659094019905,.02552180649073373,.05589803239066057,.020086252624459025,.022257708387705265,-.04311318573814257,.025460765149070363,-.0419995861067736,-.022103861342994947,.020436961749637446,-.008910414215047568,-.040754212701411704,-.04498911160980137,.014513662447400134,-.024972880286720952,.041775700269714146,-.020617899446434662,-.027451770104515237,-.0581210200819193,-.01972807133154101,-.06486356953178196,-.06542924601752108,-.034021394098613274,-.0701540698146796,-.04718580146287146,-.06686491365147076,-.066928175305741,-.045242116038150926,-.04152718803585803,.009097191551587447,.06656698762341313,.09217912843511486,.035601037862094155,-.03164618371161126,-.08485439852600936,-.07807191845559307,-.05806388905453814,.02743341651791674,.038430683267361994,.09354518012005526,.020820155765660042,.053867582404908895,.08012680497450528,.128232460666299,.10909482374666421,.12328440515687174,.10908470088869585,.12750021442141796,.08982042044320541,.13206669887005298,.04099900325556686,.05858962262336414,-.028140612810618193,.011014387203399659,.010818445027512502,.057563125740994966,.04345415026084731,.0638052153810197,.039304942349605,.014669342715182604,.03107259575721156,-.06425374207488327,-.058945218947391416,.01193269465678194,-.0881162259818974,-.1313024165264915,-.08377233239698005,-.0579417230864853,-.054054451777421325,-.05288439264323012,-.09093972499912327,-.05418126174023175,-.04856626244904953,.04176168440992527,.05250415894531329,.04064045371279662,-.017347415771619662,-.07671975680311054,-.061854859388876034,-.020823169528688797,-.06226645510778999,-.04770321461094979,-.0402273079486973,.04690122089125488,.05752741262783012,.02543790657840345,.0699565285200473,-.008133729840010097,-.020791993788821496,-.04000189041824075,-.05758450686937977,-.023269358988961084,-.04372684111076177,-.025274229592385768,.04788187134166745,.05511309053827109,.04125970130982366,.030577926161307056,.04016185297326795,.07732591022750637,.049074284090185986,.02071832304983759,.05262692548423558,.05760426683492389,.05105831447460146,.023973320452055122,.10154029156391102],[.03864173999025863,-.005024459154197372,.0046136555572029725,-.006758445896816456,.03142115173410135,.04386382071316666,-.0015664513032071729,-.08058753858786455,.023010888007158094,-.031974497946145916,-.045852604775241584,.007332161957744651,.02453823637079698,.026493986359803483,.012817297004288597,.015872668762235975,.010885319603060616,-.02502180918416584,.03751411496590415,-.04629455457646226,.011215007929641349,-.02865689693597509,-.015741373908333564,.010582364969449747,-.006024534095056391,-.002163846321228083,-.012232405683626778,-.038573436738902116,-.03419677992225159,.021758828506470554,.00407014029546543,.03301899444394859,-.05170384121679726,-.05329742286319397,-.08798696523467905,-.03608851783262798,-.024713800986492014,-.04555846893830806,-.06323440947763162,-.007987584469683166,-.0012689882118882348,.04752499078846824,.014455312192059422,-.018256989781913674,-.02767798871819263,-.07330541991854427,-.06217844683471194,-.05604613854841679,-.06158257439478332,-.013981639384921803,.03648613078494939,-.018426595901044535,.07279675111271128,-.0075590705083293415,-.024644110824231222,.06168186724387318,.06066863697443063,.037713982535211056,.07805493494580304,.14418916995002865,.15559892027908628,.06752163228865085,.019945580585251987,.026658612914922927,-.012069655500885873,.00574258404858074,.08314454812010942,.11628270848199979,.05399715261215071,.07440961182737355,.06702872719283837,-.054231046134796825,.003903035068154397,.06243331293519696,.025820518574058156,-.026726551682383845,-.010193345611774624,.02041599398378499,.06039505199175793,.011092152032282707,-.04696569874087772,-.07052421722415371,-.07256180422826489,-.027650589315538845,.06844993348911974,.03300031824163617,.04173629864404055,.011928446975795447,-.054917381191681824,-.05165380226812591,-.028773541890526888,-.03745261687039528,-.0823400638544093,.012374637017067137,-.005892533181481099,.11104715646061467,.016941481040333578,.03319422535043131,-.00183737049680259,-.09505413307978339,-.05896573649709879,-.04023330668704766,-.04640859258616045,.008307685564098832,.04477541249474294,.06358993235538837,-.010508998580612362,.06609405374482503,-.0027753074050847724,-.010075721966416776,-.050323575669113996,-.006844421670559871,-.004147572812252735,-.0038945396282382776,.02836682825451703,.03208501608286404,.029300197945124618,.003228635961192085,.07138559002076088,.02372642976936252,-.07125066539932244],[.10872537789851011,.014278189525074661,.012273877115053775,-.008139254327333888,.05705310470537752,.042321601806311455,.03332397665498274,-.009469624318396694,.022832248497195895,-.0603082173573287,-.02938835381899139,.04786295879347083,-.010046448412779706,-.018988029533582834,-.03988555209026971,-.04050405538359031,-.014328694386006549,.06688800978376946,.054680567071356045,.0364680270877374,.02742606993050216,-.04115664609138166,-.07108379251603708,-.03885814806782932,-.052404651812680655,-.0374397938738891,-.07214155372367853,-.06483198436193927,-.09337089867002601,.012492784149001596,-.012992603451236887,.01282798497239726,.028495833153019318,-.08896741990212789,-.05914492313221364,-.07360362887442543,.0014228258212915287,-.06136558081649521,-.05466289158280074,-.10167804607960763,-.08634908618382056,-.013058338568626704,-.020967276930948797,-.02496861635421278,-.00867806660644585,-.05092789276026935,-.012321465172884127,-.00979595224133116,-.06038602061828513,-.0735660196992905,-.0989009527104654,-.09504491325304382,-.050810313973777735,-.0206393932988607,.00680088067324316,.15285717060929618,.09754537287272631,.11067705492765795,.1122942786041081,.18427633371321137,.11307184167377732,-.004571622066214404,.0064434015987714695,-.052854132609023295,-.02014616037541482,.003623472946206449,.05573667951123913,.046045942922945615,.022877085053644025,.019701551970110434,-.04450996062494739,.026260060577445368,.0012791409413432393,.11282744913606092,.04595573753980184,-.03675626681806435,.013792875001360963,-.00031411118081339784,-.024157026907081533,-.0076891189431453205,-.018310688556061716,-.03692450276609687,.01587681789027176,-.0007429606529948535,.04435085579041969,.0935497347568171,.03410662005005499,.007466695802994673,-.055729238389459056,-.024914950480349144,-.040394064221819,-.014479423659402343,-.021786228199499567,.034462836766090535,.019018078277086774,.019995937468091644,.0572642476760353,.04080735202882977,-.02838261619198605,.012260696627029324,.036426534866617746,-.022902539374817468,.006834027472864906,-.00954080807350638,.021714345796159974,-.002425244709437491,.026186714013621812,.06273849289505809,.013100065944167471,.02184527152625354,-.0064556273106626955,-.018059624197655194,-.011501119699467793,.011069356592404581,-.0076555726632192645,-.06037328929268344,.018730638535199164,.010878747575572504,.03931333070539912,.05053332226780753,.030800301775522385],[.04080290158618271,.06510370589054523,.01571760146393637,-.042967026067333894,.053812288839959845,.0747830215115568,.05711207351435454,-.0020897181911366594,-.03144415500872153,.03665938914354934,.07957790238680498,-.014494517062943354,.023853876703959682,-.08596023447535846,.016421056516635474,.05309898052839089,.04458731931940648,.07578738303768207,-.020575193628669223,-.052303363133645836,-.002712553846978341,-.025364536060143633,-.07556410915497977,-.03984463586009908,-.03550376583444041,-.0319829168047286,.016275057515532626,-.014982688136025823,.008516287958303783,-.010415191123769537,-.08024510767765138,-.06893386941499541,-.08211726615138473,-.10868042731437648,-.11517402154338535,-.052169980652789334,-.07800261880307047,-.08474304362245977,-.09007941227908206,-.04556070531827033,-.09913781973350742,-.08993111954877482,-.07175672338473282,-.1011983905001102,-.026108924802754015,-.02895558848827974,-.052952747867330424,-.04065101127850694,-.06240367564597241,-.06253086782656903,-.04763968385264847,.021549892035432196,.04201174254152587,-.0014168202056091244,-.06001771015393874,.050238665733522286,.09441329210487574,.14252847594850043,.12070740630935128,.11697697498229397,.09897565303720446,.1284055582162842,.1092645611216749,.10934335033079282,.03726929825860131,.022780470067651784,.04447390084024124,-.006059846752864813,.0061609144853983725,-.006476865881617416,.03487043257495687,.039379809714831654,-.001395754383429603,-.028962960938971525,.004656918959700274,.04372751684079228,-.006941018795027367,.018088182930952126,.008202394752377018,-.009919468949588936,-.06030057619660496,-.04961731590236345,.03203327551047325,-.01701144350548291,-.040658744671612526,-.017714249349095157,-.01721059858888459,.05556975142409678,.06473217242560926,.0142514421392548,-.026792644729731044,-.03761980342159445,-.03545401936679521,-.0033597142606219474,-.0018841722971697202,-.03513935986915321,.001299552487248638,-.020445085521288382,.03742804586573839,.02131329253480936,.0546080359405192,.04453808079351196,-.02550264011509991,-.04507200092397022,.014585725040689751,-.03178054387790277,.006885611917918824,.005480883940431572,.010447966359669152,.03600709327755583,.07297766428425097,.008145153264843608,.018677942155355585,.0022220414820895706,.03813396089414066,-.02225646621983918,.01847332467627509,-.019158933928994693,.05386403637184607,.0041178771402385,.042051744426760795],[-.11959471143292481,.0004690887116434485,-.01780653758387274,.06002898783096526,.010482881406572234,.1134097871181696,.06097200177585707,.009557314062262883,.024171870288714075,.011559219957486627,.0740943226841755,-.001533026352483688,-.042433991686828154,.009388770328004534,.054396766959822755,.0498214705214945,.005916311159527968,.023110497561564927,-.025327700927906302,-.07139186295709547,.002811649103161947,.04063973608827068,.023985187089475772,.0008059303536148248,-.01729410430381438,.019318061091531672,-.0517856314075248,-.06040231096160379,-.05163086528262303,-.026410009167490766,-.025387094238179267,-.08670514848433176,-.031667117402875984,-.03259729996049833,.006077775102272545,-.03085014389500896,-.10889563458102586,-.05926434014284302,-.05802675139101486,-.06555094025913953,-.07638820450625015,-.014694324172739949,-.1161029182457609,-.13336448135124818,-.013871869353886061,-.07135491460970073,-.04629579513747036,-.04634125713368373,-.05980389795115816,-.0556899798471754,-.08875207830049796,-.009276685221718137,-.0107658717547462,-.013689713283032208,-.05895359673813014,.01892677396122769,-.02728217897139536,-.039857478520104385,.012549232916158878,.010688241731306974,.08031916593030144,.15262100299518466,.08696066131931049,.15252525992290902,.06946387313667823,.11198174180776471,.01737147006474421,.015812778630970917,.03280600378610399,.017746821396218554,.07354467313923953,-.03211026037791272,.019566763627964195,.029618292548164962,.0387862970556503,.03262787177258765,.0698167755782568,-.006250820231163465,.05145841556046568,.030408800781210513,.04677747957301087,.04000213429652272,-.02008807639444515,-.01263470418907111,-.045249735132798174,-.03425392551351006,-.021875531092695553,-.04599854942342784,-.02416410768080165,.007563653039730833,-.0009142181668628079,.03570271779785687,.08857497469018605,-.013734861595105412,-.009803321130600257,-.04282565326207903,-.0012702256209832369,.012700494745847814,-.043166253351587705,-.03226823345161638,-.0035432592129699403,.006758047102586359,-.005345386242264896,.023287783646401855,.07429272607294657,.01946652710854537,-.017987962764354493,-.001252405687738014,.022263654018090235,.0012391427069160937,.0013565429618937579,-.004671343840151294,.016578328153419922,.03658420847603991,.001097170617763564,.011356767972489225,.05343021429518496,-.0006844437404776721,-.0384483419844764,-.0005838954999276211,.0032910175381761254],[.008713675026964234,.021184676494079766,.044118373966988256,.040648025991879715,.032447241186740375,-.013324459836625741,-.020142424050336942,-.02588248478753286,-.002484057943328691,-.019010478599687353,-.002112799546736252,.009101832461506542,.03962569379787331,.017970409804111777,.03736015107496688,.019343344984558475,.014756799698268486,-.0010528464090698991,-.025961909366916235,-.010285595270832736,-.011165374267784578,-.0019598758278640237,.0087081620119245,.03449410070636509,.02865225471091399,.040299978182407034,.03337434307105071,.05034954230415309,.006362595668959546,-.0240118392919262,-.04223337286626337,.022057516258499003,.0533764435270162,.020620147730700943,.029540439011999847,.057651788173259826,.06797909193338404,.06264674601786877,.04924017393588989,.02116991924721654,.011453866008363397,.010299220942533334,-.0018357416874219962,.05592957343428269,-.011231564367321699,.0320420657742736,.01571280002325131,-.007003925149084272,-.009101648993736014,.016511365940874906,-.01970491139189258,-.03909233124056194,-.0457710811076922,-.007769161612573537,.04986245855355674,-.06736549253306108,-.07696307063309017,-.040595361000206484,-.030389356872258563,-.09251433756943767,-.05721158869646249,-.0009543629800425196,-.045682047502914935,-.03681886436463739,-.06824350943417826,-.027587536268803375,-.041645167478661045,-.04303078919819505,-.05449772220141379,-.06863844729575456,-.09778610861618825,-.06571331208133178,-.052881969043814835,-.01339699229959858,-.019033794283482786,-.023493218289815446,-.036063450059278426,.027782266928957237,.012906654330914466,-.017337278434917267,-.06448794154411731,-.09983538378171773,-.10289791170276469,-.06466355143155102,-.0641236728999387,.010795364389364459,.024949528393138493,.018119888699965225,.10433442726226234,.10219165136667126,.013336681266255849,-.02360008017939873,-.08988775587348374,-.10446013110840585,-.11164381762372182,-.05155176202653143,.04526691930508824,.06967716608314986,.13697123941472913,.0644828886074587,.09855119911738962,.09360636141971522,.037819160682802944,-.0035166197905182836,-.0028484068050251173,-.03160894316546914,.004681194691095181,.017171967845917853,.10536533016879272,.08251439894034036,.010270426109688261,.04723579496187133,.07902270242935786,.07371130315469251,.040152485755633946,.0776647935813626,.04444283404941494,.014455191975205124,.022399756108926826,.01722469965046314,.0647389641188895],[.08617181382542352,.04327634472227127,.03005718229356319,-.012272805932473568,-.008449791937591843,.03319158499140917,-.03472562226898855,.018176702115917775,-.009712778176689849,.008516618232330835,.030226931221559766,.052416098527926294,.05166883783712091,-.013910386317496911,-.014892754899464261,-.030204392408315697,-.023348595772105338,-.039154056656942125,-.020299148174262385,-.026870214226325,-.021026881302678255,-.04834225284189666,.05021602412231759,.0017508003206529706,.01784781112040023,-.035663337208851044,-.05570136182295937,-.03456550109518051,-.0001449409970588969,-.011843034224678937,-.030725274086672746,.03718111537252371,-.014334667924480585,.026402505410657532,-.02157219826244711,-.05078457903014037,-.006759113645949472,-.057082366222224006,.0016645285356211514,-.004154696072890563,-.028755773827423173,-.03714082137578157,-.05896669006968293,-.016029429438384403,-.0031721930051920033,.002307758545402605,-.048021525210782345,-.09337631184167036,-.055542556473841764,-.11398186442053326,-.027456752012806465,.016614108182758672,.0027741155498583747,-.016348951668857664,-.07214697896586968,.0015395126311125717,-.05268283493477871,-.0603787275161702,-.06826686213483847,-.03677188567276046,.11935191252954988,.10244934755298962,.027542982076475292,-.032070419062542696,-.022385148133489435,.05628982360290191,-.034119337486394785,-.06968689573658336,-.04995580272086168,.029733455414129237,.20068856127367213,.1162085020692212,-.04341025186306002,-.003059378302219598,.0006319591891606677,-.001555344046955287,.06527728549440281,.010466423234828076,-.020040852081297265,.06175562983155491,.12136556526370923,.07824718717009237,-.08072517073390352,-.07507741233797936,.012154159684612222,.036821934539862315,.02472102052087196,.040715988579243925,.021622540244536845,.038658271107198355,.05257881832712866,.08363101810624045,.04788200302645329,-.07515681569436888,-.050687783633637906,-.008838972961667177,.09103482074493136,.07844724401290881,.06227592062517176,.060594909680654375,.01693797817353428,.06408103556895299,-.014547815241575009,.0656581964195679,.018129490859442446,-.08798530089434585,-.026622130825924434,.06088617497349924,.0777507074361337,.06643787459889448,.019421765119352175,.04850472328750237,.07041372195878251,.035827424258235,.08354841732227908,.06002781338799555,-.005432499769252413,-.0020892485624801555,-.03051225054284081,-.00047303040700700464,-.023511765584947494],[-.019836270599180916,-.0017613217539587485,.02098070406146591,.03244497729016334,.03548236071638519,.05146391412276292,.01387059443680283,.012773320795543788,-.005608141014861109,-.011615184428147185,-.044318141985502046,-.060123468169623585,-.01477741680790809,-.0053582542779810755,-.054379500064678565,-.04137798510918636,-.048976925694358256,.07695341809096971,.026914330698442304,-.0014016954910277407,.009746101971697257,.004696377813778199,-.0069130491706136665,-.04062847756349136,.03412890824209289,.011113734772594072,.026923522254639856,-.03490197019912518,-.08357245347477754,-.017956322789516803,-.013806163282359438,-.06239361835505905,-.00414268265889578,-.037637167036336384,-.03772452965858855,-.013774694560670805,-.05770481742039068,.004823649887185999,.07228227823302627,.03216188284683628,-.0657449299254947,-.04363528028110784,.0002605629282635656,-.019142520605292868,-.02840783350587329,-.05792903864912054,-.05076593603511028,.034535717074437706,-.09219249976550069,-.10532839199459904,-.012076014852148213,.04751293083194946,.0020511676860901244,-.026304839763800526,.05901448578643173,-.04121884738294615,-.03790851157360316,-.035253683963737445,-.003764225518756617,.1058253214787373,.15061197856457278,-.044965430671133816,-.038672944035853724,.032859085087083864,.03683642309190256,.0915213342846636,.06793034970435255,.001657465766571567,.011255029837672278,.019714575278699853,-.046029623685046345,-.005181960580967995,.13027259585766382,.07624404176215346,-.06253229991188602,-.07358399113535818,.07717453347506542,.04943265060886841,.03586444426375148,.03571967974989257,.020318474287435453,.02861748003954917,-.18444657518134203,-.027969189014098672,.14692467780203242,.14809587852238354,-.03290596643929547,-.022816759205720398,.08164280224260032,.0733194247466878,.09655155843427247,.057497490294592224,.019593324904571427,-.060101281088941985,-.0552897852606532,.07775252392870703,.0822311883213252,.043012682164453975,-.08499854192911704,.04722674641104155,.11708089871954172,.07395783294658849,.0684819210097608,-.025787797068816443,-.04254783349952723,-.028797349310348233,-.028665140255539324,-.05046502523977903,.00992827272845339,.007479525592792906,.035767022417524885,.013422682869269679,.059916646550554516,-.017252353019081054,.0001402545394057625,-.028232578424891228,-.037232130930961754,.03807283410302556,.017200727451423696,.048123699773181455,.08287494291017442],[.00818892304744609,-.05886162055500953,-.043961481598665794,-.06317703541286583,-.018314195969373462,.034878450378990955,.03530417579745773,.014293668892683664,-.02745691650939293,-.06836762892522105,.001669119251847942,-.04096794591587138,-.03943941310209053,-.021637978943057967,-.03768429294580855,-.017747783335439818,-.04228882458473746,-.001817664232848959,.030934243801926706,.011733255516551085,.02708984163398926,.0017191072696037882,.043276004610731736,-.07253261964783098,-.03022383631361848,.021071961346727626,-.007414749749440064,-.04392522954336239,.020288776715248,-.0345272375860235,30471360021155913e-21,.026067397032741996,.0885404647984061,.01413941347644106,.02276639426056372,-.0018480555055750275,.04267579932875725,.017054471283286493,-.09674613723519468,-.10757348404679792,.07075487390653942,.01575558139579953,.00966924786388477,-.0032289840854645077,-.015101060431773538,.05792600561794836,.05010944609735675,.03438493002343132,.05420170443576617,-.15712629885767235,-.107551002318037,.05421585541694029,.15265730024840482,.0558881196453126,-.09594140127704004,.03328672046334586,.09353086897835676,.14384249052592857,.12025171427727349,.055496873043967186,.03628529629636333,.06683307959286867,.0421613826116124,.04758799556553914,.02186765443229803,-.0564119641379216,.06760319433672685,.03133829045722296,.050713005156545185,.05214804595767879,.018648322758803917,-.05075915769330168,-.044588001217457346,-.039312995512573896,-.059936417610193665,-.055184693439938245,-.019957035127630418,.050192754841022036,-717573958276263e-19,-.03309170204885887,-.03442810497427318,-.03441346579020828,-.023267082967762434,.0319018486063799,.020238538810505934,.004222146677161306,.015602237108089854,.06084709170047344,.04140185934666961,-.0034146015221089565,-.007455996106488949,-.015893641385376203,.05639235196240071,.06335454098347429,.008730447744839546,.013014118991186936,-.0020131002441534374,.045231849909967176,.03537820748051668,.08260029968489999,.03371559917052212,.016512586361955336,.015814071825167364,-.01653699310881645,.02238828804819251,-.012153283754204335,.024539743316687932,.02310850403917898,.006706414172729741,.01196006995554437,.01808564781799793,.022564539714186704,.029240080645026825,.007003142285189473,.04281931207220657,.06364628604735939,.07144491169237732,.02500243037116163,-.02988386458099207,-.044839473616139255,.0048106139958749294],[.00760442586653437,-.031647161439197435,-.06317244100977004,-.07449531381563927,-.018994314341887673,.052826629441971945,.03289022542006834,-.013629701917450165,-.06480780603190414,-.029393773930843553,-.03647121361581636,-.00982217686466173,-.03512116201717283,-.03943473473657854,-.028818473185370876,.03850092276204857,-.004932877519617365,-.027624833158639117,-.06784686644599558,-.0011073069182334881,-.05184142360008933,-.055930573972024514,-.01741185166520046,-.05752746679373305,-.05549930480521064,.028375118140619545,.035910848122856304,-.01496101773521763,.011606597964401194,-.007587669429230753,-.004507535673161027,-.008200297874906939,.013779697793775076,-.050073087994743797,-.04908451276428849,.07006315982706533,.04121129065965178,.04422191240489891,-.09251015654230017,-.01724590043261233,.005461449751680551,.0057317904111747475,.03349276507968521,.008614135027589438,.019265007144101023,.009144157843299215,.05844498925238964,.11212586773198896,.007500400004536165,-.14040933702091665,-.13224491934624966,.046900879586457916,.04311888708201805,.0825796852128937,.0686837735057957,.04131767063077158,.08551469441891645,.023787162317564083,.088925450535203,.13628690428327328,.005469777102713718,-.08654310842652521,.025964600319029363,.10587654052203503,.09445961137566042,.08134630023198908,.04159220432646193,.006681788783911099,.07767439441201977,.005668387634230013,.042096017073306194,.03219130381739435,.030452658585607126,-.02598425675341986,.025271063575447547,.03421166569989925,-.011964155896605516,.03707652769480256,.04508649436861286,.005158775637624485,.02880706384910163,.03859972049308148,.02487551579682267,-.01389164075174086,.021755723908671087,-.0653584518175486,-.06105788760631323,-.024592482102494873,-.007532843708099354,.019986689878947826,.0409091362015699,.04043701509160076,.04003479926373195,.018812605341074366,-.030276192569776476,-.030270565458533134,-.016190643318727164,.006809905422805987,.03791648200060191,-.03831931521841855,.010306777237133882,.015829001844016963,.04080028213047039,.05615449330992818,.04786297945430712,.03428833649096044,.06068149198297738,.003270294373098462,.0013152591778692133,.06095459598839015,-.04079173305503802,.01618341575570305,.019528209635753736,.028893550793992792,-.0012918699135948258,.0346180233945956,.04340594035748458,.029089370346889853,.008826828565163286,.018259597579594153,.07537311546675556],[.027450771793035074,.04126282466496694,-.013144559153806662,.012207909150661903,.009247733333020751,-.012848538408191307,.004563559148272107,.010876267701812489,.02890459475433247,.02639180251198528,.010732731929258464,.015032366451770748,-.029908421422182082,.021411606012816192,-.05753677375191925,-.053416159980357834,-.04886557638257496,-.03557046979039176,-.018461415692559838,-.0029790588112649907,.032112270223907544,.05147761207519731,-.005766248282522986,-.01776658852787523,-.028238377182112806,.023528561546172357,-.04216007246124067,-.04103238959388249,-.06680999261373205,-.039632149520821544,-.022226688774540718,-.004114916018868875,.0323023232427716,-.013890604091560638,-.03427627511840174,-.005150274137865634,-.021066308656931813,.022151630661472133,-.0022992341581987014,-.06276963889688388,-.019723620835675727,-.0576912753104453,-.04237889488319811,.028983236593136813,-.019395597488888486,-.02933154219988647,-.010745732705029043,-.013921448513401852,-.029609437928951193,-.12537702206143342,-.09561718838487063,-.0351292415736329,-.03998248182255221,.00909526418711778,-.02208695574404841,.029136077983963546,-.032593887678401656,-.020183882523267208,.06160204188874492,.15458403910635235,.16957224934392182,-.04042793884543613,-.14425377583803428,-.07164309486545244,-.04225318733320568,-.027875249558229672,.058879183410993005,-.00047065192114704134,-.043920137358857254,.05496654067473021,-.06929662538702983,.11118740085537496,.2366565621922726,.12148462555955851,-.011433917074149466,-.048194932808641386,-.07932763811502898,.0017254253058667443,.03770882496384771,.04218216484319646,.03582981578648879,-.07335789881658973,-.14576211923026078,.04829033207796394,.14879922368454307,.10064792412919202,.063705043016025,-.03069261405644226,.05625560599073562,.10255361685355899,.07860427344813493,.0164658420906807,-.005646379854723214,-.13298053803801668,-.028765330682998365,.05939355800317566,.1402292273171811,.011410410356375363,.016039694083752262,.032382125330787596,.10195998512893362,.061382477156473686,.08241173829298107,-.06366641677064028,-.018779258750025916,-.03836593373368899,.07799341786515777,.037853307835213006,.040996995997873285,.011082725441736859,-.005664492210165403,-.014754708114634627,.018864758145484002,.007526786811695066,.014018215345551104,-.010120746615713067,.019767300172685923,.0399406347657522,.09926052195500677,.052915278088062984,.022179211937403773],[-.09716085296718216,.021642032331918873,.029135209902749426,.0139993150458783,.059316507135864754,.03306747497101331,.008564629143824831,.010286012651575784,-.008381755344500467,.018753974201751927,-.03037545805880196,-.041904429008824615,-.0558622557378194,-.010903003336047129,.06826456724824308,.026035515966818988,-.0012923504068929892,-.0017623356640995083,.005468527639103056,-.02175560359369707,-.04950565304410716,-.06611244762583776,-.02225249148492922,-.008198283451731694,-.03736728147972175,.012774986112044792,-.06295062845893304,-.04504525630414451,.04800146300475822,.030007357346820335,-.0018969086500039145,-.015723154153853357,-.05512006118971773,-.012097061948313372,.0026362460701923537,-.0726328280791894,-.06887260163152192,.017772853215430318,.07233870406821721,.018535361160719493,-.045281275098323914,-.011332122576621917,-.02728019910996744,-.05872320891421001,.02632785363513969,-.010818050423826983,-.030610533234455353,-.028512931740957648,.001248886833917797,-.11197453226805695,-.05526985876053357,.01115586891047237,.008222889298059633,-.03230625526930565,-.01502375948544021,.04938277301919282,.015328141296235664,.03766238389185002,-.03501302001666237,-.029449621040367344,.12073107144262626,.022860361772779912,-.023256473556698243,-.083648467631806,.007400232745203489,.010004461021878228,.09937152299723848,-.02522178479106592,-.096640580498929,.05309425060391121,.15893756445998802,.03338710955086838,-.04808482373966641,-.010053840415886486,.037823846526014906,.03970038890881539,.054256090345082275,-.02401468040990247,-.02904286935058728,.04613851723089085,.16216994825276426,.016089864404032872,-.09119867568644617,-.07636051381777006,.03198808484249929,.036454996777462445,.025464944340111234,.07414740914689233,-.046979415183956125,-.04962938048465308,.07977165176758987,.08775810033301915,.049828916696142006,-.03045459513307306,-.024452096514010858,.0670092926908578,.1175218881400763,.11426518181326391,.07406654115835015,.006233837337725742,-.04336603991211384,-.03995007785611442,-.03540950220623382,-.03586378149854876,.01781322399419219,-.024727256297427454,-.022275869771454817,.07676148074438333,.06204546476925031,.06983755172113384,.0730129233663477,.060190713224507614,-.025405925372675192,.023372682335303596,.030477986314785502,-.0002301213960560905,-.026087148164954402,-.019019953457663552,-.036714807308876246,.05881772896990409,.06838115825489645],[-.011512245145694655,-.033323501539032144,-.077599795617108,.03009201405129128,.03689004514712253,.015052871160868519,.02801689936540768,-.01018960630350095,-.07831770420819847,-.05923312270246665,-.01852728410941332,.05396149673771894,-.026974467838019357,-.01804059271627316,.044307115164341854,.015818943834284213,-.03195364072680727,-.02740130304193715,-.04679050712758277,-.020608188350333664,-.026272324411271628,-.08018665485007556,.08384569877970464,.001406750687297384,-.04985438587843697,-.021416757758446515,.06653706541963607,-.007324471755678448,-.018144551509999312,-.015182424540353442,-.04513066121842325,.029947581486485145,.006448139255753105,.04227492146238811,-.07435899494593805,-.014176533090006271,.0776551603970828,-.010551243188291676,-.12637948483078057,-.03358696420876588,.06281707109344425,.005390931035675776,.025794636422243125,.059721803691538844,-.08299531882510713,.004261708705396279,.10584522112949336,.07136431299074256,-.02642202114572798,-.16100970751240665,-.05472031174610798,.04899944688114179,.07543484083260799,.010535530941215229,-.04801657904860415,-.08033971220391747,.03957669524732978,.03663724520181359,.12098760898076155,.1354854848272127,.051194513568370764,.018225873276029245,.08566132389176084,.1862182987423905,.10338152957413216,.023906079145933318,-.004182293635023815,-.10643206407862182,-.07812495961417412,-.07346890364951922,-.04841986347757688,.015108685112589434,-.03264596890745973,.03623561570072251,.008090462198500112,.11267954130800725,.1027865548572389,.04428157837866404,.010681413475295332,.048922714210986845,.05487352908643979,-.01806460573055431,-.01818927045565731,-.0711252113253118,-.10260837121452346,-.05249003437807549,.024031776304340315,.019694437269126286,.04963674997707483,.032195647589762615,.00832803851633843,.07013895478533659,.06754991223551783,.05743363083039805,.020438461876702188,.0032421342973983297,-.050695230761191784,-.015383897879732399,.020203015057404895,-.015662916885770546,.03170906986223389,.012505528157918055,.02862303507568463,.05946324529661641,.011987063839091858,.029655839160397587,-.0016058379565756595,.03292492753503749,.03188121066730852,.050423216186573444,.015557492045852508,.0213857791925983,.009993275366193259,.01435070815322266,.039479442983270135,.0668515978337389,.040296519398888356,.009952641912258808,-.002355765182344302,.01814873401521766,.05911916384839279],[-.015757148978644712,-.04912944067839002,-.023997668342014205,-.0210026283214945,-.0015357942036982875,.0021065236794876874,-.03710704168977974,-.04235159886869101,-.0611627445913864,-.034051484714528485,-.022720119467757083,-.060739564477761535,-.02675700118495956,.000559340708430802,-.022616038258239973,.0070861976821720955,.013566118550461286,-.002811474898052356,-.03858034309904801,-.014823359019323232,-.03483587955987605,-.026656015152450085,-.019477669860262788,-.012106727392046226,.004248376564546172,.016084907645647312,.0006655237990040933,.0016008277659419479,.020524088921093323,.061832709878829155,.0036079221207767423,-.06986160980656743,-.02783330995788613,-.03256885018622636,.04512434936412876,-.020541851129595723,.006225988447318809,-.01720385416905687,-.06713753737721917,-.02151038888391177,.10815002779082451,.037209771283315,-.006027660384665387,-.016395255789040913,.027666465419402944,.07306900117532941,.05057553109701548,.04256763634461724,-.040728282661866906,-.1802492901591394,-.05180382591629118,.06869895308544485,.10468627376672648,.04693052462252774,-.02434541015974845,.0815189305327734,.13437717506819735,.12767282811582661,.05882841794662001,-.06539741332970703,-.010971808997436964,.015964690557018213,.06431634680478986,.09204764475693863,.07992422057278342,.004562532752512838,-.01828690250044819,.017429694084018413,.07614528286643685,.042835485463588514,.08020698114647468,.03611723597888207,.04737929871444622,-.01987491586658268,.03765754444578156,.026115602677467167,.07158768649462971,-.05763808145514107,-.08380678196623717,-.02045709657509112,-.006681593015641724,-.010481709236786138,.009818881432659549,-.018910890692478463,.027174343530639883,.004818683863866094,.008483116250144855,.046647277306884644,.07489629343021029,-.0027052061320910203,-.052390985898152595,-.03581071091088947,-.010963380484187036,.0364724763095067,.015668137547351885,.03188037418272442,.02832097368194242,.029976561112701736,-.0029437318832178684,.03461995990923712,.08572476724245606,.014661848811874373,.057456266218902825,-.007794973525223414,.05696691881728978,.03917385353058908,-4395098862272975e-20,.03952471230120083,.03381510688328952,-.05314846365079247,.04613527931771671,.034368318225618644,.025850606000479254,.04364205260106227,.02891531608990676,-.004655341235198063,.04069494423398308,.050441914764901605,.02337919079391607,-.004367399642211892,-.06782903161035743]]},numPatches:71,patchSize:[11,11],canvasSize:[114,102]},shapeModel:{eigenVectors:[[-.25918455544134117,-.04931221385289683,-.13803814349503365,-.05083560393983639,.0006852696569457589,-.01914373861615092,.02331891505012547,-.016196086952925716,.0036093752391787967,-.2383321108060326,.020657546002336193,-.01593243482310355,.06426160844370692,-.09063482352077187,.022055884293867813,-.09372567433830441,.055117695896951036,-.05323328805615257,.006257448592811872,-.09449546462666385],[-.015370973540248745,-.27558869894124727,.0430574037878506,-.017591738525834334,-.0958668084685409,.0374588242132479,.028917777439805392,.1301742315782318,.0638686652661228,.09335424109281881,.031861264081329624,.020242117972802134,.2729400100293782,-.13041313331164875,-.0031444285383698803,.06521142793320978,.2379656248587965,-.14726562188674308,.036056872536145354,-.1295200257644685],[-.27438982091500397,-.03985289630911698,-.13450394922360476,-.02978745313734707,-.07952584647957826,-.11664515605739997,.0356655181845351,.002417177334119754,.0710000597303379,-.19400193419982176,.047707150663056336,-.06078210547789405,.07525616484982643,-.08653693334002763,-.01049404960505459,.0038623295139433526,.01908859582979215,-.01083309063241543,.01728997572316661,-.04870906293432157],[-6061111652085234e-20,-.29074417421901644,.06116467954949151,-.040564059065553715,-.09617398819178465,-.006241007870184952,.09842193989700587,.1264476506367019,.05233983113179955,.14548890663706876,.019044522282414742,.11593290854472875,.11303783009345467,-.2265378936630382,-.026028516734775083,.14284328457404893,.10352737588140382,-.03149550723619836,-.04763621268401139,-.031405728625543],[-.2806107959809928,-.028500046273409296,-.1334817649766244,-.04822415807050451,-.11475625312727053,-.1635783651687029,.04863973595270925,.01032325713887658,.0443093902362139,-.1122958426982017,.0568967511916407,-.04627032761195426,-.03739712734754509,-.13317587328341315,-.010863704903627043,.03931236487804128,-.010946095593356596,-.012651374705749084,.01110571327997853,.030546324103711924],[.014069445433529164,-.25865071929613004,.06560840664757342,-.045936250949625834,-.07703247533996727,-.012716551912464895,.12470762874060179,.11891551534656634,-.013669877748084244,.1204323060226194,.011009487547689111,.1901284750613571,-.03216941527475374,-.17265241492952857,-.03662652696603341,.11828907037835129,-.07725348751316306,.04910794244586042,-.08836536086848805,.034692232042363554],[-.2648974171296885,-.016037983258916397,-.1547838541397034,-.054519082640759414,-.11072137606892071,-.13806773721053522,.08315118429370677,-.0008468885185206332,-.06665906894307447,-.014543116847374027,.05271355500831918,.02738844249422287,-.14573813333209454,-.06910965137265711,.005871228217577174,.03865302771592445,.035448688300325895,-.027970894206667783,-.005831637288361039,-.01235042135681498],[.04635411462484155,-.20340754175093081,.06744856466562195,-.041981284856941324,-.01392015609749954,-.049310247697232024,.10476409205774134,.16148555792101416,-.05737728700888999,.06871820875111506,-.055874799238903254,.2998824972496839,-.16587089947669748,-.01890180931989857,-.02182405654729836,.010150208790264993,-.15609860291657318,.1312205105925727,-.13142200190156222,.1313708927136652],[-.2018721706545248,.003452715117513173,-.14526611889720326,-.05454907575651035,-.07767045477100726,-.09969321388067381,.1116264829987473,-.02756432531919592,-.1700000991003668,.05281736505253104,.004648604492927665,.1380118729404875,-.22662371465236356,.025099449481837843,.05739022591046723,-.010585092198184265,.06281338928985852,-.06638416983774345,.029034161785279667,-.11014692197967303],[.059919400550257,-.17456494999571195,.04554664255740933,-.02138218670533986,.056054364424078185,-.05575339412174868,.05094992590649308,.14366157895544562,-.05830434414633804,-.0398816952872674,-.02973351520482626,.24120260128368567,-.15389614651721623,.09933711971671486,-.007910583000185822,-.09141327276839976,-.1710858906254885,.07953591180417638,-.07008005745394817,.10304814751540158],[-.11406660762823512,.007700502018058274,-.09712804940172437,-.048797807796913756,-.03468205936351593,-.034999010561767685,.08692061344032842,-.09583558456306268,-.2089628241300515,.08203998264474265,-.0381569881595742,.17097326940727633,-.22949142171270936,.12076557157672954,.08344543200638366,-.06884953856607519,.10657376324662199,-.11111649307286262,.1435668952327873,-.14730065680490895],[.05054877882186063,-.13771378257629774,-.008012026254444051,-.0015714671798822168,.11898190894868126,-.0700331877660314,.016790814058871895,.1115574984393187,-.08231033246619904,-.17681195482737475,.03178525357769123,.1357465923958473,-.030874986613362576,.1405687146519468,.01192742650959086,-.12276147059314364,-.08972329443847898,.026135494001851646,-.012284577171365987,.04545567550038178],[-.010279976005766538,-.0013953711369666941,-.04250049853613809,-.04068397839702466,-37807469383838166e-21,.035049138884785544,.013909369315673437,-.1642247505591371,-.15344312139650054,.06372047045939228,-.0320687619302093,.09303034298428337,-.10431016285986502,.2154786637052996,.06204547742542088,-.09750049571632768,.08237548830734773,-.15217807555912072,.2118769822487803,-.07883323911955112],[.020506937371916202,-.08079193189657265,-.07617795791826983,.048751387201977775,.1609424729661313,-.08489963313109941,.019595650306679674,.04255396611210199,-.09219934929892451,-.29635110512711466,.0682768595628811,.016316501361075333,.0977532232933907,.07815399608961088,.04334270563979929,-.07537621503411897,.0330226721351103,.059877672085514894,.024112321053863524,-.08830590964285157],[.04097243598407362,-.001296706522741144,-.0020002072259834333,.0014908104373190423,.0030002881861055167,-.002144333613859353,.0005611926446298619,-.1961247620118788,-.0017679409974512839,-.005915857570869501,.0012463328686438402,.024610291061966494,.002200697623134684,.22487906560306467,-.0005842334400694704,-.08201329638998145,.0004263328503266717,.0033161283064071234,.27617149440602085,-.00166085916452835],[-.0008069540390004597,-.06583922060661355,-.10155889748442845,.07569468923297812,.15233719604557805,-.10887679778045856,.028494100773441226,.0038626863414954055,-.08976576835949657,-.30037286375515754,.06328153922936575,-.0004847008310964185,.1117386345766342,-.004429003692766997,-.0296639784498839,.001615255700181062,.02164670424041198,.16837372165287368,-.0054392104719929515,-.08432877525660318],[-.011079460967186748,-.0017868787382064,.03946804648529863,.042572005521116126,.006374859062349948,-.038364866443237666,-.013127007549216979,-.16577295084318866,.14969379516837522,-.07533982737812005,.034732282019907856,.09231573967917625,.10807828706143377,.21223426285676972,-.06029075060996268,-.09445696025894304,-.08101134525593526,.1544177357115276,.21076325569431353,.0752950755142149],[-.02008626226383142,-.08078422113609351,-.07779233223816018,.047111656712928704,.16081617519949246,-.0834537408697344,.020128133010894365,-.0360546459811006,-.09816964501888759,-.29361230607088495,.06696120988449666,-.019966901109739643,.09357022285944591,-.08657782214076969,.04575212336071908,.0791568260887245,.0362405834478404,.05383925327288765,-.03243624026590907,-.09134147399314865],[-.11596849930813256,-.013116985772102267,.09673725558367319,.04869808940028006,.0393400550654498,.0322143250507493,-.08619207218565357,-.10015382155604448,.20555982124599514,-.08893830045220195,.03937893647811963,.1654956838827967,.22809775661613474,.11513705136942748,-.08291108072601325,-.06396243569757676,-.11002395504744786,.11205940383716617,.1439392637120111,.14897623582114547],[-.04601822665438996,-.13730378118266232,-.0118302124843483,-.003491653425577487,.11752403995019094,-.07135695754794781,.020200276481911836,-.1076974779384491,-.09047437531377057,-.17344452956176146,.030258179923130457,-.14237336413481283,-.03988722683747409,-.14521482782108197,.015203825792165698,.12537720862495605,-.08545739226748136,.02174003429599114,.0066221299522591405,.03962048827206743],[-.2040749366376528,-.010323501069181723,.14694685748653932,.05366485379883157,.07981735270651405,.09742062303704255,-.10953377373376602,-.033199598310539855,.16757254284815026,-.054346740346640714,-.005815751362438615,.12840753724004372,.2203883373966672,.021168603923268747,-.057657198208393295,-.0069775024105939165,-.06950115435983634,.06946440186485141,.03177103576623686,.11411900652766432],[-.05192425332549107,-.17429362677494198,.039791494349163466,-.02351346509856849,.05295263470542769,-.059635560339677464,.05530568748498563,-.1424648306435416,-.06495285308494027,-.037771093229790866,-.029527419227873053,-.24644974400170233,-.16270006974558165,-.10024837118797988,-.00564471861258968,.0917591688889069,-.16847994951283402,.07686036784407596,.06888249625022595,.09863121958635232],[-.2665171770402687,.008016410626358876,.15731959607269588,.05282379815939611,.1100874092272398,.13601908508035385,-.0789616341987158,-.007204696550471859,.06434815522256038,.01723760592548853,-.054872736396182065,.015559383693739215,.13909397820541167,-.06831180226316255,-.0067259934445731695,.038223390076617916,-.04156755263603501,.03311598708026606,-.0006523972421318067,.017513549002972584],[-.03588787939011167,-.20388129416118475,.061301672646978556,-.04409540790428212,-.01826899542964904,-.05470840045462301,.10795691158419214,-.16132698157729128,-.05995748040329167,.0680922859328138,-.05375588220836991,-.3007283566909435,-.1714806812073083,.021608331263090086,-.021575953678715676,-.011664293426726147,-.15458176445677577,.1300174016145369,.13154970526426454,.13078272042359684],[-.2809471673004571,.0182936192739738,.13596157055287497,.04637802915516615,.11163412106971948,.16295080001590137,-.04369167593532815,.005632974548848547,-.044813277771594974,.11695075889501491,-.05641913180049743,-.053720719978482434,.03610146135197502,-.12627443909954122,.00941311731233499,.03462426771409535,.007895764848072556,.014575180101932733,.014576471105685423,-.029156635373887185],[-.003009535137276059,-.2595723227230726,.06030170757867236,-.04779944544237455,-.08149124432602632,-.019147559060772947,.12652610020709304,-.1192297740743763,-.011914602642074834,.11591728350468518,.013241249151964583,-.18815914671221168,-.03361697340956006,.17776230094115714,-.037025879925952965,-.11974525580807824,-.07762457883395507,.048571714178185676,.0878595490483556,.03586808461577712],[-.27417464809767067,.02837399128775221,.13680799115243847,.02816715077111818,.07567734158786409,.11630896046960627,-.03176251379749978,-.002563550650307844,-.06888412853826736,.1995800873684675,-.046920279658476186,-.06529980704103003,-.07074696030859111,-.07754993610855317,.009461043423144466,-.0017650943059575458,-.014997421039161352,.00958455976071143,.019152234841120983,.04743469468245429],[.010864613936708935,-.2920879059545706,.05582117822092566,-.04170547769442873,-.0992307222245238,-.010829050067781528,.09974993813394109,-.1264447678074067,.05509485674852167,.13773729035274815,.020908213939107564,-.11344971939308535,.11591336845781641,.22976959221520196,-.026421533223327465,-.14288458971934956,.10419870157452782,-.0318976338136387,.046918481646092865,-.033299284419085695],[-.25837833137347876,.03842271734750845,.13962647397057357,.05010350995339694,-.004459476570611037,.02060382732185786,-.02216219920682656,-.021309114011150192,-.00109175900667345,.2418230933395254,-.019386994764398195,-.01671710914915587,-.05346481049776142,-.08542954356253289,-.022162591507878665,-.09622067935685491,-.045705099076477906,.047393448869087945,.004832863142911571,.08932235673299235],[.02556439875212298,-.2773166425060656,.03758878618750905,-.0195797390850621,-.09576548245147003,.03667599404697252,.029813530107823345,-.12943556489477503,.06396125432450847,.0838975619370342,.032649943180716366,-.01959908368042781,.2752586373450451,.13388072923874367,-.0022735435936609982,-.06147042563186522,.23995133451147066,-.14924747016700576,-.03627529674339438,-.13314032633541523],[-.04110387538479548,.03823985303111828,.08930834019775265,.10751656645645798,-.15823655809172577,-.2081598528653469,-.05677978710202773,.03196536669221645,-.03629240144405743,-.01028392045647775,-.22616361790176892,.0035659176428170783,.061194979549606385,-.0773567862337329,.10905509076128247,-.32122938814240976,-.06243655700403694,.04506086146693501,-.13893160149555642,-.0759468655407079],[-.0005862579062122436,-.028013371862265588,.03392532785287907,.09697569952819911,.12885275561493442,-.1343267701212868,-.054634853688639656,-.18670671387006435,.12024253293549851,-.01677588953702981,-.3734412824810212,.16617216199661805,-.04363814603894477,-.021518964566529398,.08833023328257048,-.09997530579514877,.11085010836922597,-.017708386232239637,-.08291421392497902,-.0077088662798213],[.027140406330796465,.023191258515235343,.06843440692624601,.07189320228161639,-.1453985712201588,-.1679215566043099,-.07078122676014931,.06665710841177164,-.07604474746726586,-.03487985529879173,-.27800383194452666,.06132046890789951,.0722998243821418,-.023704580444342142,-.04401851516889442,-.27110695514654515,-.04647618460067813,.0004386993208563873,-.123130650146417,-.15560608030108736],[.007681218407290452,.0270311651114079,.051859835503390045,.09360701705306718,.2370013670211089,-.11818205744677762,.012899446976310756,-.13978186955176913,.10628086971480236,.053511612608857485,-.1084063259342577,.1445311135541517,-.04694817077103547,-.028787155822266295,-.02749509132660138,.054014240557880865,.0703132234635654,-.07864958771126994,-.03376971937642691,.11645995186870747],[.05971892242857174,.019365231759092102,.03976831352431597,.02942996640231346,-.09950279790345937,-.09519241014805034,-.03738531844838366,.08758953030753784,-.06322399644004985,-.02305565651099658,-.11333588796545234,.07063246094544552,.0405198006900155,-.01614026997873407,-.20118930063482968,-.13465123232579196,-.11306409222256064,-.21054801092291384,-.04369413186139849,-.05304245009937468],[.00416447306798594,.07045158874191228,.05700262590304704,.12331122141071403,.2382081456729918,-.13581472991575944,.032580608751462875,-.09217414575442019,.0275635731779782,.12746487446937488,.12378971431383365,.10985577224508172,-.021825682517284502,-.04045649333814317,-.004116490992907022,.06328487073433522,-.00470040076899775,-.052424157462174416,-.018129540228518343,-.030724004702528798],[.07266891410782408,.016043138606478196,.02627369137494614,.003534210656636574,-.05945256813646573,-.049834770359896835,-.02393006915388285,.10364100685763086,-.062651308587343,-.008958036330543139,.013307479894258992,.06849011938054951,.042476545594048995,-.012886684482588185,-.32344815313001357,-.10205399447154681,-.17376613813501907,-.23316498095342783,-.011128358009024508,.008190171875238664],[.0009469143346480003,.08626234990922373,.056561901106857174,.14777082451223772,.20316466873179587,-.1515545848352224,.024606362028327177,-.059727599838801694,-.08160716262828487,.20453126101362504,.20790338659205185,.06122580649716192,.028168686557436835,-.03613120581327809,.026537321190343684,.0399906464556435,-.04902857860256894,-.014036011010793178,-.009633601304497658,-.23758677297853398],[-.04104891598535556,-.03931321992504865,-.08790327889006884,-.10361478783196754,.16318740146031308,.20270933480404102,.05458451747360399,.0392921211662481,.04099878518619077,.009615397758339965,.21128404722349167,-.002979846663574813,-.06286576766890208,-.07644949154564619,-.10549253270595446,-.31704376863591516,.06675284121607748,-.04572318178956142,-.13555912932484426,.07558443436546933],[.002204260966539804,-.026485960470782596,.03741551896175812,.1011339414049796,.12252229572983372,-.14241885794880885,-.05682817886492918,.18530329432091194,.11872027940742755,-.017167807538024354,-.38205683466253854,-.16618370469188254,-.041194763832225485,.02454818638595231,.09255575874027222,.112546125407831,.1083057171416579,-.015920390263162824,.0883203216797128,-.010693282303843322],[.026816912653847814,-.02210892668910878,-.06633936511099109,-.0681516904475716,.154617702418614,.16313793805226023,.07123425010664407,.07210930252339037,.08017056572858236,.036959816474844275,.2735197634770196,.05558202897521595,-.07409233244552756,-.022552708724486555,.042901765024783274,-.27302351570941347,.049208713355905966,-.003535172477924954,-.12170548706792439,.1600709991585626],[-.008743910323026668,.02792335437328952,.05451421123391881,.0963652077516416,.2310925325092242,-.12470228964547822,.010102445531173702,.13704885861179808,.10320420183042034,.05209672692032528,-.1192686088871901,-.1468335137061078,-.04406497040979575,.029698195291400976,-.029206990301820602,-.04329756553833297,.06842870493243854,-.07857132212072095,.03859177852602421,.11024267705524989],[.059508635688315326,-.01657619560715708,-.037493005500270155,-.02455178663568804,.10880503745780122,.08977090893759092,.038639182155073365,.09115094600018875,.06426027766536825,.028056683600415983,.11812219496600855,.06625213499052668,-.041347760355287144,-.014534786232973301,.20087119446951981,-.13703864218459774,.11279133483747732,.20832054150697926,-.04294640016215,.05179156411057094],[-.006512665389769773,.07115945683137398,.05852429118723038,.12437439455627154,.23410551313326314,-.13945759111788802,.03108330266380885,.08865384373124015,.02505276444943745,.12645821454533035,.11923113656771699,-.1125517207508219,-.020213297081514984,.04106064000192025,-.012035091209235904,-.05793392597535264,-.00914863394622596,-.06067379315200663,.019835929550468437,-.03278871550528047],[.07257527558866439,-.012634132825075228,-.024026201740383193,.002286979709104552,.06740603560152444,.04382868954132683,.02488038272750204,.10591239790125603,.059389455848107335,.017004471070657168,-.005111001655184236,.066026250938385,-.0413344685392531,-.011454031274301169,.3242422249180925,-.10354947723779616,.17170089296042518,.23243149868662624,-.010740406772858133,-.01753875692117097],[-.0038075054296584183,.08682715010851387,.057552559849395196,.1477953887839611,.2006661826103431,-.15339929104950317,.023645037900407406,.055600435751653965,-.08401076117981306,.20401992821861864,.20826613944580338,-.06387511268884934,.029819348392480016,.03661059734615513,.013781028965228558,-.035941276484260015,-.05583256790387166,-.02320595540794813,.010064307647554213,-.23708004052505138],[-.02350400788640455,-.039047800473709746,-.08556729731711162,-.07915031598912795,.12465270020306099,.13891518919190615,.02430069949494681,.06699532030239105,-.036811078599646774,-.005887860882593974,-.09078255097052783,-.004298906321624677,.04349610770088338,.06250842952219735,-.07822608214587805,.04300872852810533,-.006916040217430202,-.0426795060067847,-.01902871870181784,-.015975265866074697],[-.007361286688134161,-.021107032591126607,.039763310309730814,.055625685982699735,-.049656312820928236,.08481039531092055,-.11231670001231263,.12600108757905643,-.023631913679965172,-.05717543121609645,-.005958866787098622,-.12646241348822884,-.03442652732340299,.013453138542856213,.017896987050537695,-.07687119815164876,.010909247964377937,-.022517785800987,.008130263599254891,-.03404578703887694],[.016948514923620445,-.02193513643769434,-.06315236305356264,-.05279979640116144,.10435342424836205,.10824853130712549,.03304146282304354,.08633503164767041,-.015563261507495417,.008772425753935562,-.091029953142718,.005261084458105819,.007412848241161983,.12677166922406993,-.010973650363561953,.12218436711438121,-.032292648360242045,-.041307828155396936,.009700151353233284,-.046119921825401256],[-.006683217294495633,.008082220232451908,.046932304539841756,.08099933041329158,-.021246022388930752,.0772230078941733,-.1208024553957209,.09757247134908283,-.09866207854597452,-.08107191872238576,-.0007506507672586803,-.10367608652818795,-.10332194965606889,.018813730318266546,-.010497200676673153,-.06159564107693752,.18741244184973282,-.10373942661667772,.0019642020598160115,.1929668937522638],[.0011332836074734035,-.011108535310006282,-.04417704056170656,-.026937857839190442,.05820274764460316,.06766037897186397,.01252332721829966,.08695531255754345,.014537206052818295,-.0024289122507333647,-.06724654763980466,.010135633490719997,-.021703799990268176,.05966835832133831,.09005908187706498,.0585044326446686,-.09551491170873837,-.06041298882455105,-.017228627814190295,-.06543809100332816],[.0015010210285302467,.012001351176920534,.02645609812127389,.050506276299144316,-.059043613350488425,.09276344680849649,-.05921568788391411,.05144620669628506,-.03372817088174114,-.013303363349763798,.05235516252490016,-.07296649765221105,-.013674015384355876,.03057299590116571,-.00012694541907415412,-.03655941723503952,-.07723897190816445,.0006016884726439031,.005698030644575629,-.09580803262279512],[.004541065833598431,-.029739632923257285,-.06128540584732448,-.05192852768196183,.0958786937872563,.10776669151268725,.0180832314557093,.11656925567843941,-.018095403188716327,.002861865287773076,-.1116403729402848,-.0016145266116992633,.01850727180389117,.08596299115720772,-.004937104428392894,.10296554953916494,-.034908946306265815,-.03202172274005161,.02646311330010434,-.05860910110803266],[-.0038940101674299864,.01249229063887494,.03515328820035927,.021732063618845297,-.07523650302188709,.11222268661870922,-.1223327365171915,.08959785160117353,-.025863497436002837,-.0013532772920339293,.03745243081759851,-.09517239684761403,-.025294237043152014,.00923367703284448,.04519783139010664,-.06078237797232998,-.10825269327067877,.10079245210813292,-.015704918925440504,-.15393418284118934],[-.0022816888324770947,-.024060777904828332,-.06437509391597251,-.051683675703232124,.08258676188205717,.10799981168598963,.011766005324578267,.13475702007336832,-.022040198973617333,.002726563752619001,-.07830784363037409,-.00853731897183721,.018274693017327637,.14968884350468206,.011604584974515436,.2099331657421755,-.039923368624747504,-.05663441481797257,.061774450547349605,-.10280319608126552],[-.004558178911174991,-.0006619892986475887,.030116361303995344,.052015237018933534,-.05714916632688342,.1083237848802445,-.12176894478021971,.09473318141269152,-.05377710718528791,-.06617351532159423,.02667771816372827,-.09680249186577525,-.07370816370860483,.014542543817590731,.007936215535738556,-.062350724930571956,.0114457464518416,-.02293387196898488,-.004556342956946763,-.014345756963712557],[-.02319593145002526,.03818643372697272,.08706661401447259,.08127918717216773,-.1265112417972823,-.13546806794789074,-.02870430442392218,.0619820960237384,.03585202966740395,.0036320225960270566,.09047752080076472,.0006838622073969101,-.04481791526982879,.06193024001847991,.07887010933066001,.046002165330352646,.007340226580411123,.04175977475887194,-.019334089807545696,.014622330486136953],[.008281044172977283,-.022628164438439315,.03636327736876486,.05246601943026026,-.04470962726073305,.09021438636649573,-.11127276398624342,-.12854130381332382,-.02506301698866893,-.057362925765527095,-.009528792360520776,.1265336119507815,-.03268717851914264,-.01590396394734752,.014802970227304249,.07511812444272832,.010628470124414376,-.024180821376674457,-.00737470629516649,-.034648408127107316],[.017198522016467425,.022236361949753605,.06495134014184437,.0559481848037368,-.10510905763267528,-.10512394373069515,-.03777241447816871,.08242618128564466,.011666390781661908,-.011957815046176372,.09092980368390101,.009339231796450277,-.011475382834925737,.12593257195353708,.010551815031581582,.12451493177521945,.03964693694317058,.03719107313677409,.009615288890691314,.05368219305515059],[.006010689808226317,.007212260510108004,.044409296126462966,.07885753384789938,-.017120649032104904,.08142538874871219,-.11940777277719844,-.10089623131434634,-.09919836781869086,-.0806636356622924,-.004334356670504145,.10338853261811562,-.10294994506346151,-.023790752142643957,-.010921145722281386,.05673688687119308,.18599558835956628,-.10528546614138183,-.0023446205569316245,.19100128644165718],[.0010733023256969559,.01157247180697759,.04518448585917075,.028905643369866726,-.060482443709835215,-.06395536507197441,-.014845222571675594,.08486219454505654,-.015853973269866806,.0019032111181755047,.06925587379065506,.013000816134354817,.021148557038695486,.05841827995851137,-.08999424051007307,.059898583580402356,.09239957033302244,.06038983059651247,-.017439626135533855,.06161492044455385],[-.0015444798414713842,.011554647683167758,.0246961186876711,.049406435936464904,-.05670610296740488,.09535562503030176,-.05867666301843687,-.05483016051785776,-.03312961518654288,-.013388684721706963,.04966674096389603,.07251082419700067,-.014517994556078053,-.032898717753508326,.003419213168915555,.03422746430429616,-.08093995640245351,-.0017775286940463495,-.005015237764972166,-.09831034761316851],[.004690870236999971,.03020845186345836,.06262203409143975,.05274395377859436,-.09876676469073391,-.10326437154591862,-.022886037597294896,.11295095822829268,.017062999846528665,-.0029129309928138786,.11302847979225221,.0021341214358619517,-.019488875651691228,.08553275343853213,.006712932236477075,.10527899609166107,.030619444487241902,.03596557491356489,.027060969805652244,.05250251964991225],[.003712186755640158,.011311610311061645,.03271292538767064,.019670534211132365,-.07140295163253443,.11637895325503753,-.12152584485104628,-.0941182629263941,-.026555943824720034,-.0012395424097627105,.03302756727713687,.0951621634032984,-.024545901145632716,-.01261129372682537,.044968383374253566,.056680991926790526,-.10954327798574533,.09945343910769477,.01465075961056534,-.15612253139789609],[-.002100441933665765,.02401605332867479,.0655109980510541,.05369168618318205,-.08477295490379645,-.10365082949147385,-.016551511206833645,.130922415526226,.019905643125049638,-.005330019590833632,.07929754711756351,-.004719117677498937,-.021162766878001702,.14900015141933146,-.011283098688825861,.21222541347290966,.04034308270171196,.05568747837492439,.061905950329526664,.10215861174289849],[.004644485181139972,-.0016088647336668569,.027558248660570186,.04993986434842837,-.05385300889365655,.11249225413654093,-.12121122997047816,-.09996575029680171,-.05460323250314743,-.066014840536623,.02357367263708664,.09706357800429456,-.07293144109531469,-.020425237513237268,.008386989533717706,.05403629200965224,.009864894946713844,-.025146056897783802,.0021204516891783834,-.01838248933492988],[.0818107717532965,.001342850532277235,.0005203400406290814,.001414972820402536,-55785446345156184e-21,.000504368575784418,.00014499662069079183,.05346142833613532,-.002334073438791689,-.0005467394008475256,.002414002081693494,.050804016409159894,.002071714042112216,-.0430360858064023,-.004182462664722441,-.04841097333184587,-.0026616866809261075,-.002867970446906097,.023711183240833517,-.0007790068244093156],[-.0016112669680105572,.06818214521618825,.026419842982680058,.07184409582355218,-.0028324607335239714,.025608904825977018,.0073620856604533986,-.0010529253262692335,-.11851068329922455,-.027760249058210628,.12256899523055254,-.0010005874743438097,.10518959800104026,.0008475977185642829,-.21236114512593507,.0009534563792407331,-.1351449796063358,-.14561887029600593,-.00046699286059298517,-.039553438859890044],[.09316674009473835,-.014400575595609583,-.02425869037887983,-.036742157033356856,.0007812916713546669,.019454205498741453,-.003986132796036599,-.02099317038141546,-.03874682001104751,.02279867800007934,-.026621044116277828,.0015937490043979945,.056984551915887666,-.12002685484945716,-.024167878123722158,-.005287198025886837,-.06641761215588543,.13427170902105776,.12116397276410566,.017717186022320208],[-.004327659423066666,.1093807727502508,.025032360614155796,-.05333428445452004,-.07635819669351286,.04166704372049216,.12200349265013893,.019618940666931924,-.008727487854061071,-.02790569419575932,-.0020209270918830997,-.03717996801526817,.08575667359148514,-.004389545295775843,.1887947157995749,-.013536420311015865,-.08045855718032341,-.09648059255087808,.008728771566323335,.10538650345322242],[.06892578900488278,-.003899487127647576,-.038483088818842055,-.05342164011320723,.020614388358821466,-.02427508186739339,-.033834645110336244,-.0013678098316814412,-.04089425613344534,-.0036977002778182584,-.022243390064701673,-.009291597515035875,.04702887315485192,-.13509260700221762,.039418674703283973,-.023948367571516027,-.17001516730115412,-.07257805759964331,.1202115539637188,.10088447004350533],[-.0035850918142771512,.09858453421023237,.036484755081029566,-.07837007307759138,-.06073816983991062,.02463105313822122,.11530991223411222,.025280805195852688,.02033204974869221,-.017891370222691924,-.012565485446069457,-.029378799703956352,.05681276685286005,.016354624703901362,.17160493997741857,-.027596329561658473,-.05795267939650016,-.014688921034535446,.0048945221808571505,.09628227526338905],[.08202925731595238,-.0074757163649968785,-.024317219559781427,-.059450697624626736,.015388354923859244,-.01775549687860544,-.03100961369215093,.014232679001682458,-.04599765079227785,.014613540618649851,-.02981328303058905,-.025341296256074276,.057084476163641755,-.1335360551189712,.028972212579385332,-.022874981819277038,-.1503536898184119,-.014709236489244142,.1157338033930018,.08744815886606402],[.0031065122369682264,.0973547081543036,.04880340787837155,-.08965678612911407,-.05398145454172343,.01618876328493523,.10550879640444577,.02837997422497177,.02237895245362667,-.012573185226640944,-.023347021041790376,-.0376424379130271,.0678037855468883,.010191767475728952,.14003184385552006,-.021789923937985227,-.031733332445823145,.00744658475369803,.006239298793380935,.02754136582668306],[.1387392468659556,.0029894476997011136,.0009365583024940642,-.00071956529721012,-.0008872730067093457,.0003708364998388767,.003966322287605985,.011515406413235096,-.001605791484448746,-.0005945420494757615,-.00015462731808354332,-.021428183483375163,.0017941691288204662,-.18742897143429363,.0002805266869912275,-.061963185529603594,.0010059641470246006,-.00058911793994807,.18354627085177028,.001104489680699863],[-.0027324759423598926,.15178677915220828,.047552987208318576,-.03653534359011034,-.04505056634058958,.01882892211436552,.2013867930104727,-.00022679646676340305,-.08153275852221158,-.03018738972066408,-.007851076499202527,.0004220290738161797,.0910974804294968,.0036914223402121347,.014243514709650809,.00122036783099561,.05107701259822219,-.029911984964390393,-.0036149523710262976,.056079566555546495],[.08184332617556463,.011303243144873897,.02621998722875813,.055874374446870795,-.017501931484022883,.018379157328786692,.035139955952998056,.013104185338561095,.046843147349681404,-.015097274885653114,.028870878407626664,-.02383948014238998,-.05437044592999857,-.13383379839837584,-.023436016295804645,-.021999268190288232,.1489875979432729,.014991037574045143,.11539838184369516,-.08629590746440328],[-.006333990417209219,.09698485567029196,.04780807523196347,-.09192811880609435,-.05333367881584192,.015477089583819052,.10420597754290616,-.028918375044037915,.020550448601090406,-.01198802932859984,-.02450280834026132,.0386110555995965,.06999889543942399,-.004925905731832455,.1410640263692507,.022673724386324326,-.03762887307935477,.00686163646982988,-.010791457969181364,.030963263322166375],[.06901350016436368,.007778211413319912,.03988982627596954,.05029440469815698,-.022989956636996347,.02522610009548568,.03834871376275443,-.0023621762657445875,.04166311389117782,.002990363269172845,.021731376833849146,-.008127607032354302,-.04475541031321123,-.1356318045872692,-.032631192325708366,-.022843195367171557,.16760144609996055,.07194340049769612,.11992561030559708,-.09701513799193376],[.0008683710760900936,.09835454139243825,.03494119686036181,-.08041276542085886,-.059879380230085794,.02365612504910848,.11388825761211437,-.025207342945575004,.0187060784928821,-.018023091946400036,-.013431570532555042,.02972187175051971,.05862046259958258,-.01102269478220743,.1730239654713163,.028517891577622866,-.06460205435491403,-.01753527789696872,-.009624034838993666,.10017991728015548],[.09326489113124482,.01869625635332417,.025225522728041395,.0346136360445719,-.003787276042848072,-.017798486629238417,.008786907163398989,-.021749382668845366,.03837312901770805,-.02387977956539547,.026520826150974057,.0030564676199522,-.053563707436167715,-.11976093779742616,.03158289416398284,-.004750103748468837,.06319806482279618,-.13796648876910192,.12072631763615553,-.013553871931192441],[.0006558797448037802,.10872892910029817,.024057766727453193,-.05473964012955705,-.07626821853915426,.04240073723063651,.121751927031986,-.018777124089696604,-.010246368849578542,-.026986359795397864,-.0030675587070682357,.03708838178181385,.08793392671900947,.009112177063499604,.18769670173732864,.013734105437928577,-.08301134398793153,-.0911188485393099,-.013492812125432366,.10600238839912123],[.15198329888645534,.0028006329231055624,.0007460050145685713,.0004787757622169838,-.00028276186426712897,.0004654418259249989,.002781026519075897,.014577335068213435,-.002371356163506356,-7439942739839173e-20,.0004280941663997791,.03233535159521067,.00256609990777094,-.11258044828872535,-.001962926139247034,-.06829911172421169,-.0008520359877165982,-.001085913705477137,.13519669471746937,.0003677338024412063],[-.0029933181650393316,.142199862211446,.03787779876667053,.02430945050160827,-.014357004020670722,.023632430715189428,.14120436296966274,-.0002871012945317622,-.12040368336844545,-.0037775705046386573,.0217361336336362,-.0006368462588466816,.13029163882764647,.00221727718347658,-.09966598058221829,.0013451541931120844,-.0432614353180815,-.05513638649975831,-.002662705212454928,.018671385173615346],[.1316377984929808,-.02362242079673707,-.010985661443978204,-.039968343205424334,.011570505836073249,.03320583415069306,-.05117041651417763,-.014142357469543666,-.04007618486496427,.014047529939951571,-.038612435433181186,-.00613412833585751,.019089531531501298,-.16518066221941546,.03038866293059846,-.0032824916332468497,-.11074112146459174,-.013923765545995706,.1752317496164086,.020527889008506092],[-.01333077899561892,.15174038102342471,.050439117821201064,-.03263380297310173,-.024681537713083592,.04784991773686138,.19726449414187786,.024421895341756646,-.1282627459426929,-.009612237481021415,-.05146435191493259,-.034670744528944086,.12764585703241688,.0036731932047622887,.04396417565977026,-.02446006443748495,.038083140431675586,.0069072900028640674,-.004846549920457799,.03826469474709954],[.13206061186311063,.02957885206904237,.012963173373203693,.03865239807839484,-.012533364143145624,-.03129600149373966,.0588979883832714,-.01509299796252376,.0349947836864507,-.01441511635728865,.036556092321482714,-.0047642170603121895,-.014048695159930489,-.16519719776774375,-.028634015353771358,-.002316835461598903,.11215475975367495,.014184941121037223,.17528669136738098,-.01900530438792368],[.00813722649613957,.1506925794712861,.04996744440171988,-.034182242142128616,-.024206810868850334,.04912028440035322,.19509669177023312,-.023846103652028865,-.1297412721720777,-.009051664333769327,-.0529447995773759,.034885387950180834,.12829851595375544,.002833614167307253,.04512663006332879,.024570343445953734,.033693195647928866,.006353687713148018,-.0020569271343593674,.039043302836162586],[-.003830921402813144,-.006327609729933484,-.05208833386129902,-.18060229644188955,.06684987007277836,-.12575488626154094,-.2125060648853131,-.07344308709175597,-.1667756893552831,.0743293387402597,.013077140393708553,-.06246475397064739,.12874919357305487,.012954480511230384,.02946687211277767,.0018815134527229026,.01668552514963443,-.033447189900894674,-.18253121075591622,.06584857593459205],[.004036372412800673,.005428503148933924,-.04455720353183392,-.17695699954660296,.004967027546319846,-.10595366487499482,-.15416871677359822,.05803935953320686,.23028436557624588,-.006514405507088905,.08659076831413696,-.05809701751850893,-.016970687725788164,.018175711463983675,.14783066559284957,-.07800120844134283,-.0976364125907547,-.2323859461771884,.021669545651174356,.02589071093035987],[.06627486215658047,.010935323985695435,.014806079420386867,-.12123528814039794,.02855589378925754,-.03604759801728741,-.10364050007965218,-.07557919019359305,-.14632862610243588,.04639984248265229,-.037991214935095025,-.05285698609791422,.07759231492265808,-.036722314655055044,-.06038133373732392,.04572031489243648,.040593347514767376,.17850961871979443,-.11243932211559991,.010951767221505329],[.0006491756929023383,.0759259631941593,.0174751696005488,-.19376068891082923,.004082831881670145,-.031841460036281556,-.04457696957399678,.03013922313796854,.14151154571182542,-.021340478372072667,.01056532317754733,-.04908329716021143,-.09052129911057401,.01960795277561427,-.10735829803366925,-.035450005106403344,.003388242110440712,-.0017408685781109632,.013726786778436431,-.05291352498113582],[.10398820287198415,.002555304662503209,.009292547536354792,-.03906854966728291,.0011161779327457165,-.0035912785865321356,-.04117959683150901,-.06286831454172338,-.0659480165385318,.030964888548817092,-.014728513450262418,-.04224147605287418,.06467963549955184,-.07396641148239483,-.027365421654483347,.05259956105348689,.011955557066130695,.12005062922777424,-.03260051882859781,-.005169167432061912],[-.0023092618200368058,.1119484805026983,.0462319687195739,-.1654716293732796,.004611369917522586,-.010780969312844432,.05167944750411169,.011460267729800142,.08980407463741813,-.034390966251272775,-.05120050736637161,-.020256685820207513,-.08342543815233526,.0026742274714927723,-.23595294011547635,-.02352057954532685,.05600997204585149,.07581652952992128,.00872736052896747,-.03305849538314876],[.1120645151564317,.002207972950058474,.0009892874293746061,-.003301014092801275,.00025018449162577777,-.00015106332155457444,.0009168430378309936,-.06327976867129217,.0017042671887136874,-.0003217192216187539,-.0013785209562622491,-.052334921761097,-.0015448840382170492,-.05319162518631509,-.004453665178821296,.059985955751636004,.0014679630382097369,.0015595511447703578,-.0197002306480996,-.0008541977941675365],[-.002207115856359185,.1121080333929546,.050230265803129975,-.16760630973155033,.01270291438164515,-.007670117469892792,.04655196065626718,.0012462979974182488,.08653278243185732,-.016335032202010345,-.0699932820251367,.0010307387266987771,-.07844023240410199,.0010476115406416152,-.22613123252942074,-.0011814261982336107,.07453463109816093,.07918494282784612,.00038799696207817563,-.043371199284965904],[.10399848794160393,.0018546282231649443,-.007464965819594654,.032522836809174546,-.0009337404884179358,.0031639948630730577,.04318253145650282,-.06327080684010107,.06943289386154423,-.032295013728537755,.012701080887017291,-.04141111489720675,-.06791433877421127,-.0740143485754068,.01805359551475349,.05348488926394847,-.009740903093521727,-.11697226908769014,-.03291887573788525,.003863486493002626],[-.0017870457628367537,.1119622803578736,.046562008727237675,-.1668816250712966,.0046517431565028695,-.010914014738721261,.05001793145007153,-.008975951846932813,.08713774128849609,-.03314505952341083,-.05174073450705561,.021904227503264234,-.080813993640496,.00024026050450727578,-.23684746977845314,.021431241345078487,.05643728484132754,.0804847065747428,-.007436952995013346,-.03323639392378238],[.0661979055592968,-.007937272624853435,-.014106515811415555,.11351197925830203,-.028372988239404456,.034765891745263566,.10180491786473986,-.07670730585676623,.1517871415225037,-.04720413741476337,.03837776086783885,-.05088335009753632,-.08109640280587968,-.03746589651915293,.056107295015633704,.047080696866891356,-.040428456400197134,-.1784397328755928,-.1128926164266072,-.013026734771989946],[-.003258233035928045,.07629765986523904,.018044604513067886,-.19838404729853476,.005204048870249069,-.03323613502221157,-.04862322666910318,-.02713993349063563,.13564014175458514,-.01949694361924361,.009061232634766674,.05112646792342076,-.08739591740848146,-.018146812493972552,-.10965254701379751,.03362228484853031,.0049839703200505025,.005289265561349878,-.009288863731996493,-.05244126726523317],[-.00398688200314565,.006536449073362947,.050293508064377906,.17349459134769435,-.0666024529234752,.12148545825215637,.20627090330577347,-.07567142212928443,.17571376211231018,-.0745282007063368,-.009657503295460654,-.06012875363561278,-.12931756777555675,.012228769086885426,-.02362321502366381,.004951337906335101,-.020517001886349622,.02427109716174262,-.18324289428534218,-.06477806900966859],[-.003882400409842432,.005175144910402656,-.04657361868699695,-.18393095427827572,.007595377276311068,-.11082307499956565,-.16241654870757216,-.055102542314522565,.22353901984468466,-.003582649320105733,.08703852818268723,.06051150237257773,-.011888050816356367,-.018671696740185807,.14887627733685901,.07786663511492029,-.09690370708444226,-.23352271053475368,-.014465607580724772,.028463408799233134],[.030970322681001344,.004709220001408376,-.00752873811996651,.16357528456660905,-.05268989220248264,.08960366689471912,.1421894043238982,-.10513747604797508,.14519927390557394,-.05472487049871281,-.029363608692248,-.05083875048941685,-.061890285829241144,.044141490765737125,-.05041751729353696,.025015137007616546,-.01642417821720728,.04495069855118941,-.2067799302490973,-.06840409367255838],[-.006191055463654425,.025490142152652336,-.17773317220354787,-.011649348642623007,-.033779282406239355,-.037805216091529065,-.10672838541759473,-.04282099710655823,.11269092441672976,.0873302537477724,.007396804007710175,.043681348504218676,.017817631930504733,-.025762018942079048,.05361678397374794,.05392914604451754,-.045882436605483475,-.054493601747828906,-.018289999358621918,.05079237093191353],[.07254186100615942,.006476680970671134,-.0262706761700722,.11039354583740993,-.03405178897889095,.04818526069419477,.0689569559645124,-.08882207098078765,.08396519465735015,-.03242574490493973,-.026027916755625602,-.06297561449254958,-.03373409233604548,.05017046793957873,-.007156311206931437,.03637730091892877,-.02778547509114236,.04578837784065434,-.16056788078199066,-.04445387867368258],[-.004647950853861937,.04608721702397084,-.27900795030851655,.09806356958982289,-.06190389803238874,.01566087534901769,-.06471769894113007,-.035866374649349185,.014465297947944376,.1561390285208392,-.05640165983776209,.029190158094928927,.06489892032450216,-.01206560593125634,.018024896454018453,.03261829244098303,.02259129326688718,.09812652322448133,-.011371173195259793,.053107627097234475],[.09234819205867092,.001095209688421191,-.005995412608253823,.002549018553761752,-.0015525730855718725,.0006001014754087189,-.0009001683223913687,-.09689390185615408,-.00043212015089025225,.003109771883908815,-.0013362209789642928,-.06851230987229143,.0017057933812730085,.027410918821544273,-.00020315778991813945,.051832972363327026,.0006291507669350983,.003002394757017706,-.1266719885830745,.0010261238764925802],[-.0018188019527347944,.05560838248428354,-.30441220616984355,.12942434694989627,-.07883063753914603,.03046966505748637,-.04570531552177509,.0019083299193569704,-.021940549726592977,.15789614188725432,-.06784553503059583,.0013493531405928255,.08661027361957228,-.0005398593255334993,-.010315171793919409,-.0010208528098808126,.031944619243145525,.1524441554727779,.0024948107272665665,.052100606489871464],[.07266861782530143,-.0046569824991961615,.015264415714518009,-.10644670145937027,.03158792734815054,-.04753124940971025,-.07145172835947106,-.08734095840116375,-.08333051207559468,.03854854525064836,.023786927187687674,-.06407613482372629,.03626331523079535,.0506066423600407,.007860488621277733,.03506475132981223,.028653455870299018,-.041889155266448416,-.1599956242713681,.04651050844387359],[.0017880236959115089,.04630649504564801,-.27982598588173846,.10233424838085241,-.06319667530903234,.01754601648286184,-.06195234335011684,.03933591373503084,.017760194700190777,.15474118656366273,-.05738276551422044,-.026687867962290814,.06352031811550647,.010080796040363754,.0177291398805273,-.03402534699441634,.021479725887446274,.09985333633117191,.017684686388847928,.05131607924740187],[.03119007723378484,-.0037018982930456636,.0005246879936731259,-.16390712475261301,.05131897860862025,-.09102275382470838,-.14628154898705953,-.10336987404471408,-.14064948860692097,.058121044994734826,.029632085365876047,-.05251927083888396,.062543856649475,.04512163438888853,.05248957028845718,.02287228762484818,.014604828763976164,-.04706151554553802,-.20589940927102812,.07035098752152538],[.004966803486139159,.02565579952003115,-.17789178480673115,-.00519956730659319,-.03582774197123851,-.03424777030513781,-.101046936528418,.046927559098234456,.11832072913574611,.08510774817530592,.0062348810597435385,-.04164570745015953,.015366895686711617,.024003977526008316,.05159002408086995,-.05487229110768958,-.046493554346182915,-.05268141689673708,.026417738211326147,.048059583131722365],[.057822167916677866,.0015818691524278872,-.00869893117747943,-.10253564278062774,.025956947528960845,-.05626831082397639,-.10131954273559655,-.10023331381082408,-.11388888765265529,.05842928132354492,.01554666816913432,-.07109520362281166,.06231399292864441,.03685849229563515,-.001099971488174062,.026105216445068306,.0610973107208305,.07730385821428999,-.18755963663306235,.04738941051008427],[.0013806130436272196,.028279785525396724,-.24779758418898035,.0929470784191686,-.03875795733036789,.0028008391133760783,.01252921060623961,.04469681246793483,.0773765752654037,.0719880124480278,.010778528628600051,-.03104564408236475,.001004354860151908,.0066662232244777365,-.126227958007418,-.045083852480253137,-.04480798046001923,.01777639002060223,.016228237723703562,.056646065257650355],[.08743934914534307,.0008025464988402188,-.005778635533273426,.002713673641497987,-.0009180284094331466,.00011137735951005171,.0006418893691596267,-.10811931560815041,.00033513970260685885,.0014622751318325126,-.00028756414198402813,-.0590235498793274,.0006845008297411569,.025379280968380467,-.003329579572640176,.027241769541909207,2540229805648642e-20,.0016213486083215725,-.13466444154822188,.0019403531333068763],[-.0017221220624478687,.04074864671190292,-.29340552623742644,.13778457530947336,-.046612146936721104,.0056550949769633985,.03259141142574971,.0021294149671227474,.017016446225115087,.0742458322710858,-.014600835771580457,.0011624715696626617,.03475497373100909,-.0004998461231932889,-.1690566987716989,-.0005365279225751658,.0012897810540676788,.08232265885247775,.002652222461444711,.09851985453774051],[.05772296607604434,-.00046713096417426854,-.0010648000347449808,.10611590201326676,-.02746290579936882,.05633495790855013,.10173430596600778,-.10191551293463318,.11684725680985987,-.05554945502709519,-.015110209275042964,-.06981765343099541,-.06222612282575619,.03656742760339118,-.003871084659972098,.027860140717788494,-.06281423660104266,-.07654396777058065,-.18805317015343495,-.0451222319210334],[-.003656279850416984,.028320140678325608,-.24794793875814208,.08883767650612258,-.03770585082581788,.000583112480190611,.008530055578990982,-.04071548189035197,.07283221613113564,.07423282898014855,.011382317260704876,.03382092937882256,.0034571782525573127,-.008112350143875848,-.12617338080416468,.04402100225222013,-.04236753675222968,.020806430133868493,-.008830525963181103,.05846808637309852],[.06632787150069476,.0005024945974418921,.0006878973149434453,.09905282710345863,-.027081197212793062,.04396334728031629,.08598592808404903,-.06440210597098371,.11344648894176523,-.04525508361928721,-.0033627481062759495,-.06552658557509186,-.06567409253607301,-.020837968861429697,.024402999253028874,.015466292580588225,-.04932695227870523,-.09954853296559729,-.11056103199623027,-.05203517590855317],[-.0034584653198352355,.08173047614418248,.04205090325492933,-.20673617233092098,-.01918678129153077,-.01770931263598548,-.06296888043841405,-.020672760790206416,.10430012736186442,.004645338455840272,.002347660324921494,.04000959099000892,-.06097507297495692,.0036578431925638182,-.017462918205026205,.022780444868397098,.07817790357546268,.09943192679096242,-.0024518885244070067,-.1259992869397377],[.09712861511917825,.0021091910624301854,.0011487974317803925,-.003664679796444193,-.00020402199216735107,-.0002950630790080626,.00015780066191907344,-.08265038948831736,.0016065974001583869,-.0001559416216270565,-54727904831485806e-21,-.04847362841141357,-.0013575663381852705,-.03754640277422188,-.0016561616161499832,.02671874200492388,.002634292853563667,.002662667103605044,-.04208773082444077,-.0029947917415798823],[-.0019129526080266935,.10709246327169396,.05832925663349231,-.18607114049263718,-.010359050961291636,-.014981588209040738,.008012200455334498,.0016278032784891297,.08157367823787612,-.00791780919430848,-.002778764921927671,.0009546903739577708,-.06892932831009077,.0007394781550306134,-.08409026105263272,-.0005262268708218481,.13375408026912178,.13519475977153123,.0008289198229369799,-.1520581185386175],[.06641261142097908,.0027160178727324764,.0009683828906125248,-.10711621231805085,.02630471998366163,-.044626555190009395,-.08839863528597892,-.06353817661530803,-.10925171370014186,.04540289816921849,.0034525790352214,-.06705114087980064,.06322228047883854,-.020965836164988375,-.025071674259481383,.014557322724614043,.052366940659376415,.1033864484065217,-.11037875047163209,.04703362395594821],[.0008441353133364647,.08168688069996453,.04204537907842565,-.20267566347704935,-.020238219422379647,-.015964530372102555,-.059534368323843435,.02319255062706158,.10868617885682233,.0028598252732636277,.0022134321387772254,-.03739846647971955,-.06351369305742659,-.0028345153014708558,-.016488512201080392,-.023371761373115647,.07617503760772099,.09543511286131451,.0068033078519712,-.12795045157687654],[.20703888776046808,.004095530643884067,.0009182903060256748,-.00029318224193783675,-.0005512778931648725,-.00022805224437934772,.005199505793018393,-.007065030992639071,-.0025937632986591107,-.0002270212592155073,-.0008617330598756051,.003924056428378101,.002760543692760869,-.18348670413797583,-.00045015275908286324,-.021588694232823304,.0009628137692617791,-.00018547586884016306,.23464452882669662,.0015329766435944019],[-.00407764055750579,.20794724236737283,.046625444523509314,-.014886090234270774,-.02799068731984163,-.011579167501817512,.26400068400072507,.00013914611514436953,-.13169622503382422,-.01152682006741342,-.04375379628168578,-7728447450181717e-20,.14016436409825117,.0036137792018137043,-.02285614076293017,.00042519034051920836,.04888608721075643,-.009417386611017492,-.004621334946735389,.0778356441122841],[.001600149798509044,-.02989104961073433,-.07310001697269129,-.058468287694032256,.1185971519249081,.12934983734389552,.03215753387849516,.08257331512863446,-.04110047379745049,-.005708907546473644,-.11638049064707184,-.0053600186457387336,.009802600608769634,.09941862267941132,-.04900808936932794,.09662671233189384,.019636547733371066,-.04365158147420743,.005168663964690456,.007242884103174727],[-.008465579757951636,-.004679603974788934,.045349170381251615,.07574033840789662,-.03463787498038061,.08218501281379953,-.12096517723818774,.11907027593886906,-.07753296600526823,-.07891922561825053,-.012653839329841899,-.11579889444409854,-.08608102129987368,.014700684484061042,-.002279098380736856,-.07263410764392064,.13958423960770075,-.08018956940322698,.002018906461943132,.12988268130836492],[.01424380662597859,-.014200096866361181,-.0561920099033511,-.04317311663853608,.08096201852776987,.08443086283477232,.022292726265859285,.0819540031923333,.021520036248995907,.023644742127952947,-.06997835909879714,.010578253533974168,.005563782613030148,.10753640013705529,.04781691310140064,.10988794493865349,-.10152366815496501,-.038775585391088246,.009852910151646431,-.1047952022831282],[-.0019267548176591992,.008925388714249954,.038395556537414034,.07266518610541649,-.03531648617748426,.08596592469729245,-.095827634585293,.06700091987027884,-.07935901554697893,-.060241496386490526,.02295970146126563,-.08272383650604256,-.07334652213229416,.03440874237491588,-.038907662769628905,-.04699293027458156,.098012549165149,-.06102876784783787,.0007632173685449481,.10756844632916053],[.005981414137877068,-.019986810144644714,-.05215951689245676,-.044470068674562206,.07664611887065512,.09244398527720714,.004678028369475922,.10415240351429292,.004658130909816939,.0051387821644297,-.0964418805037773,.005970694366832435,-.008166219047882154,.0830683128449826,.04768622499627329,.09727061518699626,-.08253946949545786,-.026822366473815737,.008619654678141742,-.09732450372131647],[-.0021942894961033254,.014672723795261092,.0297720048321981,.03261477208134277,-.07029507502464344,.11259463615333912,-.09926869224353085,.06797666360574203,-.030441862025488736,-.007886017458831291,.043349675685024236,-.08512299915576585,-.02423614615027082,.010447936760906771,.03445782607482162,-.043728626489175956,-.10420367455137278,.05165343287807839,-.0020921056059804294,-.13233775532920924],[-.0042059935392670346,-.036744548164445875,-.07115007295919776,-.05527573034541877,.11733258745742503,.12551113047364854,.026702116872438945,.0980022153245705,-.03205801768570977,-.004738953269227426,-.10681090062656813,.0020600345006132207,.03017343074251409,.08161736537031507,-.06051754893182199,.07649898406150994,.010560607875077087,-.04846780838747249,.005835497187277355,-.010407245460860998],[-.004463156445117728,-.0004529515567529345,.03571250577605914,.033807803564813034,-.07212431629752575,.10250509947932059,-.1226494724455383,.11180724612070779,-.025713763387405553,-.018860328071287888,.019240580467794626,-.11284980000963721,-.03012098172110461,.01674742951533516,.05198355650234256,-.06614701624977856,-.08051248382206573,.055429747589261724,-.009107937018239745,-.11890323290806679],[.001932239579702112,.029683610868556625,.07482894414297415,.06140520838054132,-.11986904124223763,-.12601350788764124,-.0368955781539877,.07782090974878496,.038015754250682834,.0025970500443394723,.11579199621960418,-.0007963013793840591,-.013184423524449153,.09876268783296623,.048880345050464534,.09941173430555872,-.014125215491144956,.0404602802909568,.005085161644416435,-.002123160122042064],[.008396009184281595,-.0058529296934387584,.04243570258783502,.07337942430788835,-.02994127217609336,.08721440581663058,-.11960517297381305,-.12222924768386143,-.07909116380924514,-.07908281184066372,-.017226487294788227,.11592014345432393,-.08562829078670565,-.01860387464425463,-.004207015665351812,.06877312128775884,.14024917911015872,-.0818461564464191,-.0022208560358934135,.13006714598651917],[.014308626336015217,.014540520423140585,.05766025175192101,.04600081499215693,-.08228981366777635,-.0809804948204338,-.02604863437175908,.07925229960760558,-.02462809465625529,-.02599840397250559,.07082812577032044,.01382728639225384,-.008447474071878963,.10609816881106175,-.049311813835476996,.11165306622847265,.10530416416182468,.036342518602119435,.009815217782455157,.10894942298282573],[.0013644133178536335,.008359340915330945,.036153230930321134,.07090890135996192,-.03210123372298971,.08922370910650566,-.09487554923131329,-.07017588552785688,-.07845012595494241,-.059263772307063395,.020186511169956366,.08224316825811924,-.0730705697779436,-.03861628518124848,-.036994707959346715,.04262966971973222,.09393906535445655,-.06250822241194857,-.001150582066176832,.10335873595850939],[.006063175371552404,.02054904645401137,.05329133509804422,.04571978341092672,-.07935453658465302,-.08793890245333298,-.008583087504493167,.101395065582099,-.00585316142030631,-.005445307614197795,.09807397657368588,.009317766933803002,.007205592342012423,.08259250865896775,-.04629247415603381,.09891698970206607,.0783724601169794,.028835410650639128,.008695346513225725,.09203825434459922],[.0019570707435616432,.01387436820763277,.027695145380569608,.030838478735115384,-.0672226348344797,.11614728554614781,-.0990075139474608,-.07202493060305075,-.030234841632456377,-.007677563316653203,.039518676801310174,.08482189219689315,-.024538894693039576,-.013710634372263898,.03630874094086521,.03986470245427673,-.10737284251528514,.05055725035991371,.0017510858493843574,-.1360672636873884],[-.00402699585598165,.03669821828848045,.07250107035469582,.056564040810879776,-.12008147931184913,-.12137767813607811,-.03151071058407556,.09352382549573536,.031020682241923343,.0039926562394971814,.10748566435040698,.006501877535294977,-.03133603981647848,.08089464498434797,.06251746142633369,.07904418680908222,-.013722582803368383,.05061275847617297,.0061895952050397204,.005717381357625699],[.004625305555512988,-.0018994102698154198,.032883289803905605,.03160511405202575,-.06744843517174993,.10736758608785574,-.12150296809183195,-.115579360433701,-.02695610132653348,-.01903229752809108,.015019999618782623,.11268117275248012,-.028909549827634367,-.019948111144142567,.04956037623096271,.06308358623985899,-.08003422524829355,.05347835120052562,.008871102262334667,-.11922080818583679]],numEvalues:20,eigenValues:[448.2615028731629,152.88433766749935,77.0794222341117,38.340488190771154,27.7543501208544,15.293153116152746,13.085890189100295,10.196616391772121,7.236467941170144,6.596453707383955,5.738899938129388,5.622321591085375,4.622729198414605,4.393149515511058,3.9714381417641094,3.5791364382171165,3.4263759023353697,3.078849017302407,2.63957985738361,2.4414195196560233],numPtsPerSample:71,nonRegularizedVectors:[0],meanShape:[[25.011254225136952,34.81517356757155],[24.381567267455893,45.62676320390881],[25.830707280728745,56.164927637057076],[28.675368741312013,66.69573595497496],[33.59842962462659,75.54915577841888],[40.33264054159778,82.56185730354144],[48.35930909116706,87.99983611495458],[57.763839129671,89.7833114774977],[67.09085203787197,87.63091750236714],[74.89717655776496,81.88110715348313],[81.35004130814275,74.60868555761579],[85.92068259987741,65.568286826737],[88.34848937446895,54.93363700084711],[89.38156726745592,44.34658517018312],[88.32666422859364,33.56817361245254],[81.56685632624777,27.444862527091914],[76.61977291820983,25.17298033285374],[69.1535485656504,25.74681125128558],[63.33720223541309,27.34067471461259],[31.524715699235657,28.430444822342793],[36.37850774632676,25.96553392858243],[43.861536613791145,26.244938607124027],[49.73613051896211,27.608548456866743],[35.9824349270655,35.44340608432884],[41.74296700227427,32.491136119230305],[48.056933854020826,35.38320009473131],[41.82789333728334,37.01094114500529],[41.96084875111114,34.61071899652552],[77.38872809802479,34.62790720778304],[71.51641815297683,31.904746609209838],[65.3212222111797,35.04317912976654],[71.60952418697246,36.42439053543194],[71.382163563407,34.031264828125074],[56.645668790714296,33.009120609139984],[50.19418940248494,46.94109805231665],[47.45698830892593,51.77099798102398],[50.07251572822895,55.035267306968535],[57.101339593815,56.14543557571483],[64.08100000856956,54.759369555253215],[66.5659690980221,51.39464571251506],[63.64071423300322,46.67626811819429],[56.82612949694652,42.171866411748],[52.14225130369289,53.25579760946124],[61.942803190976235,53.06277528262285],[45.0908704071806,66.45744111296608],[49.30691311256561,63.53596165337137],[54.022310354591866,62.36005547418881],[57.235786373192525,62.97186161124688],[60.42268062019531,62.23399988308512],[65.1807222181198,63.223326242164035],[69.50852815712136,65.97653420394317],[66.69295291154066,69.86104089266809],[62.79690252546874,72.43043738721082],[57.4387936856146,73.2793930325098],[52.05141252402308,72.64207031431033],[48.057213957229465,70.22807264115391],[51.31282628100382,68.33485734485816],[57.355342381712035,69.04222084961435],[63.36532026743049,68.0974829132731],[63.30266650865377,65.1057867536814],[57.28308296345625,65.37330757122123],[51.257633954541575,65.34301423200844],[56.99738460100593,50.86720524009678],[38.34501696780538,33.379866011204456],[45.43217757469057,33.21308405175762],[45.10297717946054,36.387811845290685],[38.61692847161157,36.562115185290565],[74.94672669442139,32.658993629837994],[67.85849509241058,32.77139668154979],[68.31244453197587,35.93070030253472],[74.80032654357314,35.84948147148668]]},hints:{rightEye:[71.382163563407,34.031264828125074],leftEye:[41.96084875111114,34.61071899652552],nose:[56.99738460100593,50.86720524009678]}},e.exports&&(t=e.exports=r),t.pModel=r})),canRenderToFloatTexture=function(e){var t=!1,r=e,n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,2,2,0,r.RGBA,r.FLOAT,null),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST);var o=r.createFramebuffer();return r.bindFramebuffer(r.FRAMEBUFFER,o),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0),r.checkFramebufferStatus(r.FRAMEBUFFER)==r.FRAMEBUFFER_COMPLETE&&(t=!0),r.deleteTexture(n),r.deleteFramebuffer(o),r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),t},version="1.1.2",DEFAULT_MODEL=model_pca_20_svm;index.polyfill(),window.Promise||(window.Promise=promise);var clm={tracker:function(e){e||(e={}),void 0===e.constantVelocity&&(e.constantVelocity=!0),void 0===e.searchWindow&&(e.searchWindow=11),void 0===e.useWebGL&&(e.useWebGL=!0),void 0===e.scoreThreshold&&(e.scoreThreshold=.5),void 0===e.stopOnConvergence&&(e.stopOnConvergence=!1),void 0===e.weightPoints&&(e.weightPoints=void 0),void 0===e.sharpenResponse&&(e.sharpenResponse=!1),void 0===e.faceDetection&&(e.faceDetection={});var t,r,n,o,l,h,f,c,d,v,_,m,y,x,w,M,E,S,T,A,R,C,L=!1,P=!1,O=[],k=[],I=[],N=[],D=[],B=[],F=[],U="single",j=["raw"],V=0,z=[10,5,1],G=!0,H=!1;if("undefined"!=typeof Float64Array)var W=new Float64Array(2),X=new Float64Array(2);else W=new Array(2),X=new Array(2);var Y,Z,J,K,Q,$,ee,te,re,ae,ie,ne,oe,se,le,he,ue=0,fe=document.createElement("canvas"),ce=fe.getContext("2d"),de=[],ve=0,pe=Math.PI/2;this.init=function(k){void 0===k&&(k=DEFAULT_MODEL),o=(y=k).patchModel.patchType,t=y.patchModel.numPatches,r=y.patchModel.patchSize[0],w="MOSSE"==o?r:e.searchWindow,n=y.shapeModel.numEvalues,M=y.patchModel.canvasSize[0],E=y.patchModel.canvasSize[1],_=document.createElement("canvas"),c=_.getContext("2d"),d=_.width=M+(w-1)+r-1,v=_.height=E+(w-1)+r-1,h=numeric1_2_6.rep([2*t,n],0);for(var i=0;i<2*t;i++)for(var I=0;I<n;I++)h[i][I]=y.shapeModel.eigenVectors[i][I];for(i=0;i<t;i++)F[i]=[y.shapeModel.meanShape[i][0],y.shapeModel.meanShape[i][1]];$=ee=0,K=Q=1e6;for(i=0;i<t;i++)F[i][0]<K&&(K=F[i][0]),F[i][1]<Q&&(Q=F[i][1]),F[i][0]>$&&($=F[i][0]),F[i][1]>ee&&(ee=F[i][1]);te=$-K,re=ee-Q,y.scoring&&(ae=new Float64Array(y.scoring.coef),ie=y.scoring.bias,fe.width=y.scoring.size[0],fe.height=y.scoring.size[1]),f=y.shapeModel.eigenValues,m=y.patchModel.weights,x=y.patchModel.bias,l=numeric1_2_6.rep([n+4,n+4],0);for(i=0;i<n;i++)y.shapeModel.nonRegularizedVectors.indexOf(i)>=0?l[i+4][i+4]=1e-7:l[i+4][i+4]=1/f[i];for(i=0;i<n+4;i++)O[i]=0;if("SVM"==o){var N,B=document.createElement("canvas");if(window.WebGLRenderingContext&&((N=B.getContext("webgl")||B.getContext("experimental-webgl"))&&N.getExtension("OES_texture_float")&&canRenderToFloatTexture(N)||(N=null)),N&&e.useWebGL&&void 0!==webglFilter){Y=new webglFilter;try{Y.init(m,x,t,w+r-1,w+r-1,r,r),"lbp"in m&&(P=!0),"sobel"in m&&(L=!0)}catch(e){console.error(e),alert("There was a problem setting up webGL programs, falling back to slightly slower javascript version. :("),Y=void 0,(Z=new svmFilter).init(m.raw,x.raw,t,r,w)}}else{if(void 0===svmFilter)throw new Error("Could not initiate filters, please make sure that svmfilter.js or svmfilter_conv_js.js is loaded.");(Z=new svmFilter).init(m.raw,x.raw,t,r,w)}}else"MOSSE"==o&&(J=new mosseFilterResponses).init(m,t,r,r);if(A=R="SVM"==o?r+w-1:w,C=A*R,(w-1)/2,T=w*w,"undefined"!=typeof Float64Array){S=new Float64Array(T);for(i=0;i<t;i++)D[i]=new Float64Array(C)}else{S=new Array(T);for(i=0;i<t;i++)D[i]=new Array(C)}if(e.weightPoints){le=[];for(i=0;i<t;i++)i in e.weightPoints?(le[2*i]=e.weightPoints[i],le[2*i+1]=e.weightPoints[i]):(le[2*i]=1,le[2*i+1]=1);le=numeric1_2_6.diag(le)}he=new faceDetection(y,e.faceDetection)},this.start=function(element,e){if(void 0===y)return console.log("tracker needs to be initalized before starting to track."),!1;void 0===oe&&(oe=element,se=e),he.init(element),ne=requestAnimationFrame(_e)};var _e=function(){ne=requestAnimationFrame(_e);for(var e=(new Date).getTime();(new Date).getTime()-e<16;){if(!this.track(oe,se))break}}.bind(this);function ge(){G=!0,de=[],I=[],k=[],N=[];for(var i=0;i<O.length;i++)O[i]=0}this.stop=function(){cancelAnimationFrame(ne)},this.track=function(element,r){var _,m,y,x,M,E;if(emitEvent("clmtrackrBeforeTrack"),G)return H||(H=!0,he.getInitialPosition(r).then((function(e){_=e[0],x=e[1],m=e[2],y=e[3],O[0]=_*Math.cos(x)-1,O[1]=_*Math.sin(x),O[2]=m,O[3]=y,k=xe(O,!0),G=!1,H=!1})).catch((function(e){emitEvent("clmtrackrNotFound"),H=!1}))),!1;if(ue+=1,e.constantVelocity&&I.length>=2)for(var i=0;i<O.length;i++)O[i]=.1*I[1][i]+.9*(2*I[1][i]-I[0][i]);(x=pe-Math.atan((O[0]+1)/O[1]))>pe&&(x-=Math.PI),_=O[1]/Math.sin(x),m=O[2],y=O[3],c.save(),c.clearRect(0,0,d,v),c.scale(1/_,1/_),c.rotate(-x),c.translate(-m,-y),c.drawImage(element,0,0,element.width,element.height),c.restore();var T,L,P,F=xe(O,!1);if(ae&&ue%10==0&&!Ee())return ge(),emitEvent("clmtrackrLost"),!1;for(i=0;i<t;i++){M=F[i][0]-A/2,E=F[i][1]-R/2,T=c.getImageData(Math.round(M),Math.round(E),A,R).data,L=D[i];for(var U=0;U<C;U++)P=.3*T[4*U]+.59*T[4*U+1]+.11*T[4*U+2],L[U]=P}if("SVM"==o)if(void 0!==Y)B=ye(D);else{if(void 0===Z)throw new Error("SVM-filters do not seem to be initiated properly.");B=Z.getResponses(D)}else"MOSSE"==o&&(B=J.getResponses(D));if(e.sharpenResponse)for(i=0;i<t;i++)for(U=0;U<B[i].length;U++)B[i][U]=Math.pow(B[i][U],e.sharpenResponse);var j,V=k,K=[];for(i=0;i<z.length;i++){var Q,$;j=be(O,h);for(U=0;U<t;U++){Q=V[U][0]-(w-1)*_/2,$=V[U][1]-(w-1)*_/2;var ee=we(w,k[U],W,S,B,Q,$,U,z[i],_);Me(w,X,W,S,ee,Q,$,_),K[U]=[X[0]-k[U][0],X[1]-k[U][1]]}for(var te=numeric1_2_6.rep([2*t,1],0),re=0;re<t;re++)te[2*re][0]=K[re][0],te[2*re+1][0]=K[re][1];var ie,ne=numeric1_2_6.mul(l,z[i]);ie=e.weightPoints?numeric1_2_6.dot(numeric1_2_6.transpose(j),numeric1_2_6.dot(le,j)):numeric1_2_6.dot(numeric1_2_6.transpose(j),j);for(var oe=numeric1_2_6.rep([n+4,1],0),se=0;se<n+4;se++)oe[se][0]=O[se];var fe,ce=numeric1_2_6.dot(ne,oe);fe=e.weightPoints?numeric1_2_6.dot(numeric1_2_6.transpose(j),numeric1_2_6.dot(le,te)):numeric1_2_6.dot(numeric1_2_6.transpose(j),te);var ve,_e=numeric1_2_6.add(ne,ie),me=numeric1_2_6.sub(ce,fe),Se=numeric1_2_6.dot(numeric1_2_6.inv(_e),me),Te=k;for(re=0;re<n+4;re++)O[re]-=Se[re];for(re=0;re<n;re++)ve=Math.abs(3*Math.sqrt(f[re])),Math.abs(O[re+4])>ve&&(O[re+4]>0?O[re+4]=ve:O[re+4]=-ve);k=xe(O,!0);var Ae,Re,Ce=0;for(re=0;re<k.length;re++)Ce+=(Ae=k[re][0]-Te[re][0])*Ae+(Re=k[re][1]-Te[re][1])*Re;if(Ce<.01)break}return e.constantVelocity&&(I.push(O.slice()),3==I.length&&I.shift()),10==N.length&&N.shift(),N.push(k.slice(0)),emitEvent("clmtrackrIteration"),de.length>=5&&this.getConvergence()<.5&&(e.stopOnConvergence&&this.stop(),emitEvent("clmtrackrConverged")),k},this.reset=function(){ge(),oe=void 0,se=void 0},this.draw=function(canvas,e,path){var t;t=void 0===e?O.slice(0):e.slice(0);var r,n=canvas.getContext("2d");n.fillStyle="rgb(200,200,200)",n.strokeStyle="rgb(130,255,50)",r=void 0===path?y.path.normal:y.path[path];for(var i=0;i<r.length;i++)"number"==typeof r[i]?Te(n,r[i],t):Se(n,r[i],t)},this.getScore=function(){return ve},this.calculatePositions=function(e){return xe(e,!0)},this.getCurrentPosition=function(){return!G&&k},this.getCurrentParameters=function(){return O},this.getConvergence=function(){if(N.length<10)return 999999;for(var e=0,r=0,n=0,o=0,i=0;i<5;i++)for(var l=0;l<t;l++)e+=N[i][l][0],r+=N[i][l][1];e/=5,r/=5;for(i=5;i<10;i++)for(l=0;l<t;l++)n+=N[i][l][0],o+=N[i][l][1];var h=(n/=5)-e,f=(o/=5)-r,c=h*h+f*f;return c/=N.length},this.setResponseMode=function(e,t){if(void 0!==y)if(void 0!==Y)if(["single","blend","cycle"].indexOf(e)<0)console.log('Tried to set an unknown responsemode : "'+e+'". No changes made.');else if(t instanceof Array){for(var i=0;i<t.length;i++)["raw","sobel","lbp"].indexOf(t[i])<0&&console.log('Unknown element in responsemode list : "'+t[i]+'". No changes made.'),"sobel"==t[i]&&0==L&&console.log("The sobel filters have not been initialized! No changes made."),"lbp"==t[i]&&0==P&&console.log("The LBP filters have not been initialized! No changes made.");V=0,U=e,j=t}else console.log("List in setResponseMode must be an array of strings! No changes made.");else console.log('Responsemodes are only allowed when using webGL. In pure JS, only "raw" mode is available.');else console.log("Clmtrackr has not been initialized with a model yet. No changes made.")};var me=function(e,t){return"lbp"==e?Y.getLBPResponses(t):"raw"==e?Y.getRawResponses(t):"sobel"==e?Y.getSobelResponses(t):void 0},ye=function(e){if("single"==U)return me(j[0],e);if("cycle"==U){var r=me(j[V],e);return++V>=j.length&&(V=0),r}for(var n=[],i=0;i<j.length;i++)n[i]=me(j[i],e);var o=[],l=w*w;for(i=0;i<t;i++){r=Array(l);for(var h=0;h<l;h++)r[h]=0;for(var f=0;f<j.length;f++)for(h=0;h<l;h++)r[h]+=n[f][i][h]/j.length;o[i]=r}return o},be=function(e,r){for(var o,l,h=numeric1_2_6.rep([2*t,n+4],0),i=0;i<t;i++){o=F[i][0],l=F[i][1];for(var p=0;p<n;p++)o+=e[p+4]*r[2*i][p],l+=e[p+4]*r[2*i+1][p];h[2*i][0]=o,h[2*i+1][0]=l,o=F[i][1],l=F[i][0];for(p=0;p<n;p++)o+=e[p+4]*r[2*i+1][p],l+=e[p+4]*r[2*i][p];h[2*i][1]=-o,h[2*i+1][1]=l,h[2*i][2]=1,h[2*i+1][2]=0,h[2*i][3]=0,h[2*i+1][3]=1;for(var f=0;f<n;f++)o=e[0]*r[2*i][f]-e[1]*r[2*i+1][f]+r[2*i][f],l=e[0]*r[2*i+1][f]+e[1]*r[2*i][f]+r[2*i+1][f],h[2*i][f+4]=o,h[2*i+1][f+4]=l}return h},xe=function(e,r){for(var n,o,a,b,l=e.length,h=[],i=0;i<t;i++){n=F[i][0],o=F[i][1];for(var f=0;f<l-4;f++)n+=y.shapeModel.eigenVectors[2*i][f]*e[f+4],o+=y.shapeModel.eigenVectors[2*i+1][f]*e[f+4];r&&(a=e[0]*n-e[1]*o+e[2],b=e[0]*o+e[1]*n+e[3],n+=a,o+=b),h[i]=[n,o]}return h},we=function(e,t,r,n,o,l,h,f,c,d){for(var v,_,m=0,y=0,x=0;x<e;x++){r[1]=h+x*d;for(var w=0;w<e;w++)r[0]=l+w*d,v=t[0]-r[0],_=t[1]-r[1],n[m]=o[f][m]*Math.exp(-.5*(v*v+_*_)/(c*d)),y+=n[m],m++}return y},Me=function(e,t,r,n,o,l,h,f){var c=0,d=0;t[0]=0,t[1]=0;for(var v=0;v<e;v++){r[1]=h+v*f;for(var _=0;_<e;_++)r[0]=l+_*f,d=n[c]/o,t[0]+=d*r[0],t[1]+=d*r[1],c++}},Ee=function(){ce.drawImage(_,Math.round(K+te/4.5),Math.round(Q-re/12),Math.round(te-2*te/4.5),Math.round(re-re/12),0,0,20,22);for(var t=ce.getImageData(0,0,20,22),r=new Array(440),n=t.data,o=0,i=0;i<440;i++)r[i]=.3*n[4*i]+.59*n[4*i+1]+.11*n[4*i+2],r[i]=Math.log(r[i]+1),r[i]>o&&(o=r[i]);if(o>0){var l=0;for(i=0;i<440;i++)l+=r[i];l/=440;var h=0;for(i=0;i<440;i++)h+=(r[i]-l)*(r[i]-l);h/=440,h=Math.sqrt(h);var f=0;for(i=0;i<440;i++)r[i]=(r[i]-l)/h,f+=r[i]*ae[i];if(f+=ie,f=1/(1+Math.exp(-f)),5==de.length&&de.shift(),de.push(f),de.length>4){ve=0;for(i=0;i<5;i++)ve+=de[i];if((ve/=5)<e.scoreThreshold)return!1}}return!0},Se=function(e,path,t){var i,r,o,a,b;e.beginPath();for(var p=0;p<path.length;p++){i=2*path[p],r=F[i/2][0],o=F[i/2][1];for(var l=0;l<n;l++)r+=y.shapeModel.eigenVectors[i][l]*t[l+4],o+=y.shapeModel.eigenVectors[i+1][l]*t[l+4];a=t[0]*r-t[1]*o+t[2],b=t[0]*o+t[1]*r+t[3],r+=a,o+=b,0==i?e.moveTo(r,o):e.lineTo(r,o)}e.moveTo(0,0),e.closePath(),e.stroke()};function Te(e,t,r){var i,o,l,a,b;o=F[(i=2*t)/2][0],l=F[i/2][1];for(var h=0;h<n;h++)o+=y.shapeModel.eigenVectors[i][h]*r[h+4],l+=y.shapeModel.eigenVectors[i+1][h]*r[h+4];a=r[0]*o-r[1]*l+r[2],b=r[0]*l+r[1]*o+r[3],o+=a,l+=b,e.beginPath(),e.arc(o,l,1,0,2*Math.PI,!0),e.closePath(),e.fill()}return!0},version:version};__webpack_exports__.a=clm}).call(this,__webpack_require__(19),__webpack_require__(119),__webpack_require__(85).setImmediate,__webpack_require__(182)(module))},185:function(e,t,r){var n;e.exports=((n=function(){function e(a){return r.appendChild(a.dom),a}function u(a){for(var e=0;e<r.children.length;e++)r.children[e].style.display=e===a?"block":"none";t=a}var t=0,r=document.createElement("div");r.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",r.addEventListener("click",(function(a){a.preventDefault(),u(++t%r.children.length)}),!1);var o=(performance||Date).now(),g=o,a=0,l=e(new n.Panel("FPS","#0ff","#002")),h=e(new n.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var f=e(new n.Panel("MB","#f08","#201"));return u(0),{REVISION:16,dom:r,addPanel:e,showPanel:u,begin:function(){o=(performance||Date).now()},end:function(){a++;var e=(performance||Date).now();if(h.update(e-o,200),e>g+1e3&&(l.update(1e3*a/(e-g),100),g=e,a=0,f)){var t=performance.memory;f.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){o=this.end()},domElement:r,setMode:u}}).Panel=function(e,t,r){var n=1/0,o=0,g=Math.round,a=g(window.devicePixelRatio||1),l=80*a,h=48*a,f=3*a,c=2*a,d=3*a,v=15*a,_=74*a,p=30*a,q=document.createElement("canvas");q.width=l,q.height=h,q.style.cssText="width:80px;height:48px";var b=q.getContext("2d");return b.font="bold "+9*a+"px Helvetica,Arial,sans-serif",b.textBaseline="top",b.fillStyle=r,b.fillRect(0,0,l,h),b.fillStyle=t,b.fillText(e,f,c),b.fillRect(d,v,_,p),b.fillStyle=r,b.globalAlpha=.9,b.fillRect(d,v,_,p),{dom:q,update:function(h,m){n=Math.min(n,h),o=Math.max(o,h),b.fillStyle=r,b.globalAlpha=1,b.fillRect(0,0,l,v),b.fillStyle=t,b.fillText(g(h)+" "+e+" ("+g(n)+"-"+g(o)+")",f,c),b.drawImage(q,d+a,v,_-a,p,d,v,_-a,p),b.fillRect(d+_-a,v,a,p),b.fillStyle=r,b.globalAlpha=.9,b.fillRect(d+_-a,v,a,g((1-h/m)*p))}}},n)},191:function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r(157),o=function(){function e(e){n.Loader.call(this,e),this.dracoLoader=null,this.ddsLoader=null}function t(){var e={};return{get:function(t){return e[t]},add:function(t,object){e[t]=object},remove:function(t){delete e[t]},removeAll:function(){e={}}}}e.prototype=Object.assign(Object.create(n.Loader.prototype),{constructor:e,load:function(e,t,r,o){var l,h=this;l=""!==this.resourcePath?this.resourcePath:""!==this.path?this.path:n.LoaderUtils.extractUrlBase(e),h.manager.itemStart(e);var f=function(t){o?o(t):console.error(t),h.manager.itemError(e),h.manager.itemEnd(e)},c=new n.FileLoader(h.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),"use-credentials"===h.crossOrigin&&c.setWithCredentials(!0),c.load(e,(function(data){try{h.parse(data,l,(function(r){t(r),h.manager.itemEnd(e)}),f)}catch(e){f(e)}}),r,f)},setDRACOLoader:function(e){return this.dracoLoader=e,this},setDDSLoader:function(e){return this.ddsLoader=e,this},parse:function(data,path,e,t){var content,d={};if("string"==typeof data)content=data;else if(n.LoaderUtils.decodeText(new Uint8Array(data,0,4))===c){try{d[r.KHR_BINARY_GLTF]=new _(data)}catch(e){return void(t&&t(e))}content=d[r.KHR_BINARY_GLTF].content}else content=n.LoaderUtils.decodeText(new Uint8Array(data));var v=JSON.parse(content);if(void 0===v.asset||v.asset.version[0]<2)t&&t(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));else{if(v.extensionsUsed)for(var i=0;i<v.extensionsUsed.length;++i){var x=v.extensionsUsed[i],E=v.extensionsRequired||[];switch(x){case r.KHR_LIGHTS_PUNCTUAL:d[x]=new l(v);break;case r.KHR_MATERIALS_CLEARCOAT:d[x]=new f;break;case r.KHR_MATERIALS_UNLIT:d[x]=new h;break;case r.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:d[x]=new w;break;case r.KHR_DRACO_MESH_COMPRESSION:d[x]=new m(v,this.dracoLoader);break;case r.MSFT_TEXTURE_DDS:d[x]=new o(this.ddsLoader);break;case r.KHR_TEXTURE_TRANSFORM:d[x]=new y;break;case r.KHR_MESH_QUANTIZATION:d[x]=new M;break;default:E.indexOf(x)>=0&&console.warn('THREE.GLTFLoader: Unknown extension "'+x+'".')}}var S=new Z(v,d,{path:path||this.resourcePath||"",crossOrigin:this.crossOrigin,manager:this.manager});S.fileLoader.setRequestHeader(this.requestHeader),S.parse(e,t)}}});var r={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:"KHR_materials_pbrSpecularGlossiness",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",MSFT_TEXTURE_DDS:"MSFT_texture_dds"};function o(e){if(!e)throw new Error("THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader");this.name=r.MSFT_TEXTURE_DDS,this.ddsLoader=e}function l(e){this.name=r.KHR_LIGHTS_PUNCTUAL;var t=e.extensions&&e.extensions[r.KHR_LIGHTS_PUNCTUAL]||{};this.lightDefs=t.lights||[]}function h(){this.name=r.KHR_MATERIALS_UNLIT}function f(){this.name=r.KHR_MATERIALS_CLEARCOAT}l.prototype.loadLight=function(e){var t,r=this.lightDefs[e],o=new n.Color(16777215);void 0!==r.color&&o.fromArray(r.color);var l=void 0!==r.range?r.range:0;switch(r.type){case"directional":(t=new n.DirectionalLight(o)).target.position.set(0,0,-1),t.add(t.target);break;case"point":(t=new n.PointLight(o)).distance=l;break;case"spot":(t=new n.SpotLight(o)).distance=l,r.spot=r.spot||{},r.spot.innerConeAngle=void 0!==r.spot.innerConeAngle?r.spot.innerConeAngle:0,r.spot.outerConeAngle=void 0!==r.spot.outerConeAngle?r.spot.outerConeAngle:Math.PI/4,t.angle=r.spot.outerConeAngle,t.penumbra=1-r.spot.innerConeAngle/r.spot.outerConeAngle,t.target.position.set(0,0,-1),t.add(t.target);break;default:throw new Error('THREE.GLTFLoader: Unexpected light type, "'+r.type+'".')}return t.position.set(0,0,0),t.decay=2,void 0!==r.intensity&&(t.intensity=r.intensity),t.name=r.name||"light_"+e,Promise.resolve(t)},h.prototype.getMaterialType=function(){return n.MeshBasicMaterial},h.prototype.extendParams=function(e,t,r){var o=[];e.color=new n.Color(1,1,1),e.opacity=1;var l=t.pbrMetallicRoughness;if(l){if(Array.isArray(l.baseColorFactor)){var h=l.baseColorFactor;e.color.fromArray(h),e.opacity=h[3]}void 0!==l.baseColorTexture&&o.push(r.assignTexture(e,"map",l.baseColorTexture))}return Promise.all(o)},f.prototype.getMaterialType=function(){return n.MeshPhysicalMaterial},f.prototype.extendParams=function(e,t,r){var o=[],l=t.extensions[this.name];if(void 0!==l.clearcoatFactor&&(e.clearcoat=l.clearcoatFactor),void 0!==l.clearcoatTexture&&o.push(r.assignTexture(e,"clearcoatMap",l.clearcoatTexture)),void 0!==l.clearcoatRoughnessFactor&&(e.clearcoatRoughness=l.clearcoatRoughnessFactor),void 0!==l.clearcoatRoughnessTexture&&o.push(r.assignTexture(e,"clearcoatRoughnessMap",l.clearcoatRoughnessTexture)),void 0!==l.clearcoatNormalTexture&&(o.push(r.assignTexture(e,"clearcoatNormalMap",l.clearcoatNormalTexture)),void 0!==l.clearcoatNormalTexture.scale)){var h=l.clearcoatNormalTexture.scale;e.clearcoatNormalScale=new n.Vector2(h,h)}return Promise.all(o)};var c="glTF",d=1313821514,v=5130562;function _(data){this.name=r.KHR_BINARY_GLTF,this.content=null,this.body=null;var e=new DataView(data,0,12);if(this.header={magic:n.LoaderUtils.decodeText(new Uint8Array(data.slice(0,4))),version:e.getUint32(4,!0),length:e.getUint32(8,!0)},this.header.magic!==c)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");for(var t=new DataView(data,12),o=0;o<t.byteLength;){var l=t.getUint32(o,!0);o+=4;var h=t.getUint32(o,!0);if(o+=4,h===d){var f=new Uint8Array(data,12+o,l);this.content=n.LoaderUtils.decodeText(f)}else if(h===v){var _=12+o;this.body=data.slice(_,_+l)}o+=l}if(null===this.content)throw new Error("THREE.GLTFLoader: JSON content not found.")}function m(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=r.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}function y(){this.name=r.KHR_TEXTURE_TRANSFORM}function x(e){n.MeshStandardMaterial.call(this),this.isGLTFSpecularGlossinessMaterial=!0;var t=["#ifdef USE_SPECULARMAP","\tuniform sampler2D specularMap;","#endif"].join("\n"),r=["#ifdef USE_GLOSSINESSMAP","\tuniform sampler2D glossinessMap;","#endif"].join("\n"),o=["vec3 specularFactor = specular;","#ifdef USE_SPECULARMAP","\tvec4 texelSpecular = texture2D( specularMap, vUv );","\ttexelSpecular = sRGBToLinear( texelSpecular );","\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture","\tspecularFactor *= texelSpecular.rgb;","#endif"].join("\n"),l=["float glossinessFactor = glossiness;","#ifdef USE_GLOSSINESSMAP","\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );","\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture","\tglossinessFactor *= texelGlossiness.a;","#endif"].join("\n"),h=["PhysicalMaterial material;","material.diffuseColor = diffuseColor.rgb;","vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );","float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );","material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.","material.specularRoughness += geometryRoughness;","material.specularRoughness = min( material.specularRoughness, 1.0 );","material.specularColor = specularFactor.rgb;"].join("\n"),f={specular:{value:(new n.Color).setHex(16777215)},glossiness:{value:1},specularMap:{value:null},glossinessMap:{value:null}};this._extraUniforms=f,this.onBeforeCompile=function(e){for(var n in f)e.uniforms[n]=f[n];e.fragmentShader=e.fragmentShader.replace("uniform float roughness;","uniform vec3 specular;"),e.fragmentShader=e.fragmentShader.replace("uniform float metalness;","uniform float glossiness;"),e.fragmentShader=e.fragmentShader.replace("#include <roughnessmap_pars_fragment>",t),e.fragmentShader=e.fragmentShader.replace("#include <metalnessmap_pars_fragment>",r),e.fragmentShader=e.fragmentShader.replace("#include <roughnessmap_fragment>",o),e.fragmentShader=e.fragmentShader.replace("#include <metalnessmap_fragment>",l),e.fragmentShader=e.fragmentShader.replace("#include <lights_physical_fragment>",h)},Object.defineProperties(this,{specular:{get:function(){return f.specular.value},set:function(e){f.specular.value=e}},specularMap:{get:function(){return f.specularMap.value},set:function(e){f.specularMap.value=e}},glossiness:{get:function(){return f.glossiness.value},set:function(e){f.glossiness.value=e}},glossinessMap:{get:function(){return f.glossinessMap.value},set:function(e){f.glossinessMap.value=e,e?(this.defines.USE_GLOSSINESSMAP="",this.defines.USE_ROUGHNESSMAP=""):(delete this.defines.USE_ROUGHNESSMAP,delete this.defines.USE_GLOSSINESSMAP)}}}),delete this.metalness,delete this.roughness,delete this.metalnessMap,delete this.roughnessMap,this.setValues(e)}function w(){return{name:r.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,specularGlossinessParams:["color","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","displacementMap","displacementScale","displacementBias","specularMap","specular","glossinessMap","glossiness","alphaMap","envMap","envMapIntensity","refractionRatio"],getMaterialType:function(){return x},extendParams:function(e,t,r){var o=t.extensions[this.name];e.color=new n.Color(1,1,1),e.opacity=1;var l=[];if(Array.isArray(o.diffuseFactor)){var h=o.diffuseFactor;e.color.fromArray(h),e.opacity=h[3]}if(void 0!==o.diffuseTexture&&l.push(r.assignTexture(e,"map",o.diffuseTexture)),e.emissive=new n.Color(0,0,0),e.glossiness=void 0!==o.glossinessFactor?o.glossinessFactor:1,e.specular=new n.Color(1,1,1),Array.isArray(o.specularFactor)&&e.specular.fromArray(o.specularFactor),void 0!==o.specularGlossinessTexture){var f=o.specularGlossinessTexture;l.push(r.assignTexture(e,"glossinessMap",f)),l.push(r.assignTexture(e,"specularMap",f))}return Promise.all(l)},createMaterial:function(e){var t=new x(e);return t.fog=!0,t.color=e.color,t.map=void 0===e.map?null:e.map,t.lightMap=null,t.lightMapIntensity=1,t.aoMap=void 0===e.aoMap?null:e.aoMap,t.aoMapIntensity=1,t.emissive=e.emissive,t.emissiveIntensity=1,t.emissiveMap=void 0===e.emissiveMap?null:e.emissiveMap,t.bumpMap=void 0===e.bumpMap?null:e.bumpMap,t.bumpScale=1,t.normalMap=void 0===e.normalMap?null:e.normalMap,t.normalMapType=n.TangentSpaceNormalMap,e.normalScale&&(t.normalScale=e.normalScale),t.displacementMap=null,t.displacementScale=1,t.displacementBias=0,t.specularMap=void 0===e.specularMap?null:e.specularMap,t.specular=e.specular,t.glossinessMap=void 0===e.glossinessMap?null:e.glossinessMap,t.glossiness=e.glossiness,t.alphaMap=null,t.envMap=void 0===e.envMap?null:e.envMap,t.envMapIntensity=1,t.refractionRatio=.98,t}}}function M(){this.name=r.KHR_MESH_QUANTIZATION}function E(e,t,r,o){n.Interpolant.call(this,e,t,r,o)}m.prototype.decodePrimitive=function(e,t){var r=this.json,n=this.dracoLoader,o=e.extensions[this.name].bufferView,l=e.extensions[this.name].attributes,h={},f={},c={};for(var d in l){var v=D[d]||d.toLowerCase();h[v]=l[d]}for(d in e.attributes){v=D[d]||d.toLowerCase();if(void 0!==l[d]){var _=r.accessors[e.attributes[d]],m=O[_.componentType];c[v]=m,f[v]=!0===_.normalized}}return t.getDependency("bufferView",o).then((function(e){return new Promise((function(t){n.decodeDracoFile(e,(function(e){for(var r in e.attributes){var n=e.attributes[r],o=f[r];void 0!==o&&(n.normalized=o)}t(e)}),h,c)}))}))},y.prototype.extendTexture=function(e,t){return e=e.clone(),void 0!==t.offset&&e.offset.fromArray(t.offset),void 0!==t.rotation&&(e.rotation=t.rotation),void 0!==t.scale&&e.repeat.fromArray(t.scale),void 0!==t.texCoord&&console.warn('THREE.GLTFLoader: Custom UV sets in "'+this.name+'" extension not yet supported.'),e.needsUpdate=!0,e},x.prototype=Object.create(n.MeshStandardMaterial.prototype),x.prototype.constructor=x,x.prototype.copy=function(source){return n.MeshStandardMaterial.prototype.copy.call(this,source),this.specularMap=source.specularMap,this.specular.copy(source.specular),this.glossinessMap=source.glossinessMap,this.glossiness=source.glossiness,delete this.metalness,delete this.roughness,delete this.metalnessMap,delete this.roughnessMap,this},E.prototype=Object.create(n.Interpolant.prototype),E.prototype.constructor=E,E.prototype.copySampleValue_=function(e){for(var t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,o=e*n*3+n,i=0;i!==n;i++)t[i]=r[o+i];return t},E.prototype.beforeStart_=E.prototype.copySampleValue_,E.prototype.afterEnd_=E.prototype.copySampleValue_,E.prototype.interpolate_=function(e,t,r,n){for(var o=this.resultBuffer,l=this.sampleValues,h=this.valueSize,f=2*h,c=3*h,td=n-t,p=(r-t)/td,d=p*p,v=d*p,_=e*c,m=_-c,y=-2*v+3*d,x=v-d,w=1-y,M=x-d+p,i=0;i!==h;i++){var E=l[m+i+h],S=l[m+i+f]*td,T=l[_+i+h],A=l[_+i]*td;o[i]=w*E+M*S+y*T+x*A}return o};var S=0,T=1,A=2,R=3,C=4,L=5,P=6,O={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},k={9728:n.NearestFilter,9729:n.LinearFilter,9984:n.NearestMipmapNearestFilter,9985:n.LinearMipmapNearestFilter,9986:n.NearestMipmapLinearFilter,9987:n.LinearMipmapLinearFilter},I={33071:n.ClampToEdgeWrapping,33648:n.MirroredRepeatWrapping,10497:n.RepeatWrapping},N={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},D={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv2",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},B={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},F={CUBICSPLINE:void 0,LINEAR:n.InterpolateLinear,STEP:n.InterpolateDiscrete},U="OPAQUE",j="MASK",V="BLEND",z={"image/png":n.RGBAFormat,"image/jpeg":n.RGBFormat};function G(e,path){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(path)&&/^\//.test(e)&&(path=path.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:path+e)}function H(e,object,t){for(var r in t.extensions)void 0===e[r]&&(object.userData.gltfExtensions=object.userData.gltfExtensions||{},object.userData.gltfExtensions[r]=t.extensions[r])}function W(object,e){void 0!==e.extras&&("object"==typeof e.extras?Object.assign(object.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function X(e,t){if(e.updateMorphTargets(),void 0!==t.weights)for(var i=0,r=t.weights.length;i<r;i++)e.morphTargetInfluences[i]=t.weights[i];if(t.extras&&Array.isArray(t.extras.targetNames)){var n=t.extras.targetNames;if(e.morphTargetInfluences.length===n.length){e.morphTargetDictionary={};for(i=0,r=n.length;i<r;i++)e.morphTargetDictionary[n[i]]=i}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function Y(e){for(var t="",r=Object.keys(e).sort(),i=0,n=r.length;i<n;i++)t+=r[i]+":"+e[r[i]]+";";return t}function Z(e,r,o){this.json=e||{},this.extensions=r||{},this.options=o||{},this.cache=new t,this.associations=new Map,this.primitiveCache={},this.textureLoader=new n.TextureLoader(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.fileLoader=new n.FileLoader(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),"use-credentials"===this.options.crossOrigin&&this.fileLoader.setWithCredentials(!0)}function J(e,t,r){var o=t.attributes,l=[];function h(t,n){return r.getDependency("accessor",t).then((function(t){e.setAttribute(n,t)}))}for(var f in o){var c=D[f]||f.toLowerCase();c in e.attributes||l.push(h(o[f],c))}if(void 0!==t.indices&&!e.index){var d=r.getDependency("accessor",t.indices).then((function(t){e.setIndex(t)}));l.push(d)}return W(e,t),function(e,t,r){var o=t.attributes,l=new n.Box3;if(void 0!==o.POSITION){var h=(y=r.json.accessors[o.POSITION]).min,f=y.max;if(void 0!==h&&void 0!==f){l.set(new n.Vector3(h[0],h[1],h[2]),new n.Vector3(f[0],f[1],f[2]));var c=t.targets;if(void 0!==c){for(var d=new n.Vector3,v=new n.Vector3,i=0,_=c.length;i<_;i++){var m=c[i];if(void 0!==m.POSITION){var y;h=(y=r.json.accessors[m.POSITION]).min,f=y.max;void 0!==h&&void 0!==f?(v.setX(Math.max(Math.abs(h[0]),Math.abs(f[0]))),v.setY(Math.max(Math.abs(h[1]),Math.abs(f[1]))),v.setZ(Math.max(Math.abs(h[2]),Math.abs(f[2]))),d.max(v)):console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}l.expandByVector(d)}e.boundingBox=l;var x=new n.Sphere;l.getCenter(x.center),x.radius=l.min.distanceTo(l.max)/2,e.boundingSphere=x}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}(e,t,r),Promise.all(l).then((function(){return void 0!==t.targets?function(e,t,r){for(var n=!1,o=!1,i=0,l=t.length;i<l;i++){if(void 0!==(c=t[i]).POSITION&&(n=!0),void 0!==c.NORMAL&&(o=!0),n&&o)break}if(!n&&!o)return Promise.resolve(e);var h=[],f=[];for(i=0,l=t.length;i<l;i++){var c=t[i];if(n){var d=void 0!==c.POSITION?r.getDependency("accessor",c.POSITION):e.attributes.position;h.push(d)}if(o){d=void 0!==c.NORMAL?r.getDependency("accessor",c.NORMAL):e.attributes.normal;f.push(d)}}return Promise.all([Promise.all(h),Promise.all(f)]).then((function(t){var r=t[0],l=t[1];return n&&(e.morphAttributes.position=r),o&&(e.morphAttributes.normal=l),e.morphTargetsRelative=!0,e}))}(e,t.targets,r):e}))}function K(e,t){var r=e.getIndex();if(null===r){var o=[],l=e.getAttribute("position");if(void 0===l)return console.error("THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),e;for(var i=0;i<l.count;i++)o.push(i);e.setIndex(o),r=e.getIndex()}var h=r.count-2,f=[];if(t===n.TriangleFanDrawMode)for(i=1;i<=h;i++)f.push(r.getX(0)),f.push(r.getX(i)),f.push(r.getX(i+1));else for(i=0;i<h;i++)i%2==0?(f.push(r.getX(i)),f.push(r.getX(i+1)),f.push(r.getX(i+2))):(f.push(r.getX(i+2)),f.push(r.getX(i+1)),f.push(r.getX(i)));f.length/3!==h&&console.error("THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");var c=e.clone();return c.setIndex(f),c}return Z.prototype.parse=function(e,t){var r=this,n=this.json,o=this.extensions;this.cache.removeAll(),this.markDefs(),Promise.all([this.getDependencies("scene"),this.getDependencies("animation"),this.getDependencies("camera")]).then((function(t){var l={scene:t[0][n.scene||0],scenes:t[0],animations:t[1],cameras:t[2],asset:n.asset,parser:r,userData:{}};H(o,l,n),W(l,n),e(l)})).catch(t)},Z.prototype.markDefs=function(){for(var e=this.json.nodes||[],t=this.json.skins||[],r=this.json.meshes||[],n={},o={},l=0,h=t.length;l<h;l++)for(var f=t[l].joints,i=0,c=f.length;i<c;i++)e[f[i]].isBone=!0;for(var d=0,v=e.length;d<v;d++){var _=e[d];void 0!==_.mesh&&(void 0===n[_.mesh]&&(n[_.mesh]=o[_.mesh]=0),n[_.mesh]++,void 0!==_.skin&&(r[_.mesh].isSkinnedMesh=!0))}this.json.meshReferences=n,this.json.meshUses=o},Z.prototype.getDependency=function(e,t){var n=e+":"+t,o=this.cache.get(n);if(!o){switch(e){case"scene":o=this.loadScene(t);break;case"node":o=this.loadNode(t);break;case"mesh":o=this.loadMesh(t);break;case"accessor":o=this.loadAccessor(t);break;case"bufferView":o=this.loadBufferView(t);break;case"buffer":o=this.loadBuffer(t);break;case"material":o=this.loadMaterial(t);break;case"texture":o=this.loadTexture(t);break;case"skin":o=this.loadSkin(t);break;case"animation":o=this.loadAnimation(t);break;case"camera":o=this.loadCamera(t);break;case"light":o=this.extensions[r.KHR_LIGHTS_PUNCTUAL].loadLight(t);break;default:throw new Error("Unknown type: "+e)}this.cache.add(n,o)}return o},Z.prototype.getDependencies=function(e){var t=this.cache.get(e);if(!t){var r=this,defs=this.json[e+("mesh"===e?"es":"s")]||[];t=Promise.all(defs.map((function(t,n){return r.getDependency(e,n)}))),this.cache.add(e,t)}return t},Z.prototype.loadBuffer=function(e){var t=this.json.buffers[e],n=this.fileLoader;if(t.type&&"arraybuffer"!==t.type)throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(void 0===t.uri&&0===e)return Promise.resolve(this.extensions[r.KHR_BINARY_GLTF].body);var o=this.options;return new Promise((function(e,r){n.load(G(t.uri,o.path),e,void 0,(function(){r(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))}))}))},Z.prototype.loadBufferView=function(e){var t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then((function(e){var r=t.byteLength||0,n=t.byteOffset||0;return e.slice(n,n+r)}))},Z.prototype.loadAccessor=function(e){var t=this,r=this.json,o=this.json.accessors[e];if(void 0===o.bufferView&&void 0===o.sparse)return Promise.resolve(null);var l=[];return void 0!==o.bufferView?l.push(this.getDependency("bufferView",o.bufferView)):l.push(null),void 0!==o.sparse&&(l.push(this.getDependency("bufferView",o.sparse.indices.bufferView)),l.push(this.getDependency("bufferView",o.sparse.values.bufferView))),Promise.all(l).then((function(e){var l,h,f=e[0],c=N[o.type],d=O[o.componentType],v=d.BYTES_PER_ELEMENT,_=v*c,m=o.byteOffset||0,y=void 0!==o.bufferView?r.bufferViews[o.bufferView].byteStride:void 0,x=!0===o.normalized;if(y&&y!==_){var w=Math.floor(m/y),M="InterleavedBuffer:"+o.bufferView+":"+o.componentType+":"+w+":"+o.count,E=t.cache.get(M);E||(l=new d(f,w*y,o.count*y/v),E=new n.InterleavedBuffer(l,y/v),t.cache.add(M,E)),h=new n.InterleavedBufferAttribute(E,c,m%y/v,x)}else l=null===f?new d(o.count*c):new d(f,m,o.count*c),h=new n.BufferAttribute(l,c,x);if(void 0!==o.sparse){var S=N.SCALAR,T=O[o.sparse.indices.componentType],A=o.sparse.indices.byteOffset||0,R=o.sparse.values.byteOffset||0,C=new T(e[1],A,o.sparse.count*S),L=new d(e[2],R,o.sparse.count*c);null!==f&&(h=new n.BufferAttribute(h.array.slice(),h.itemSize,h.normalized));for(var i=0,P=C.length;i<P;i++){var k=C[i];if(h.setX(k,L[i*c]),c>=2&&h.setY(k,L[i*c+1]),c>=3&&h.setZ(k,L[i*c+2]),c>=4&&h.setW(k,L[i*c+3]),c>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}}return h}))},Z.prototype.loadTexture=function(e){var source,t=this,o=this.json,l=this.options,h=this.textureLoader,f=self.URL||self.webkitURL,c=o.textures[e],d=c.extensions||{},v=(source=d[r.MSFT_TEXTURE_DDS]?o.images[d[r.MSFT_TEXTURE_DDS].source]:o.images[c.source]).uri,_=!1;return void 0!==source.bufferView&&(v=t.getDependency("bufferView",source.bufferView).then((function(e){_=!0;var t=new Blob([e],{type:source.mimeType});return v=f.createObjectURL(t)}))),Promise.resolve(v).then((function(e){var n=l.manager.getHandler(e);return n||(n=d[r.MSFT_TEXTURE_DDS]?t.extensions[r.MSFT_TEXTURE_DDS].ddsLoader:h),new Promise((function(t,r){n.load(G(e,l.path),t,void 0,r)}))})).then((function(r){!0===_&&f.revokeObjectURL(v),r.flipY=!1,c.name&&(r.name=c.name),source.mimeType in z&&(r.format=z[source.mimeType]);var l=(o.samplers||{})[c.sampler]||{};return r.magFilter=k[l.magFilter]||n.LinearFilter,r.minFilter=k[l.minFilter]||n.LinearMipmapLinearFilter,r.wrapS=I[l.wrapS]||n.RepeatWrapping,r.wrapT=I[l.wrapT]||n.RepeatWrapping,t.associations.set(r,{type:"textures",index:e}),r}))},Z.prototype.assignTexture=function(e,t,o){var l=this;return this.getDependency("texture",o.index).then((function(h){if(!h.isCompressedTexture)switch(t){case"aoMap":case"emissiveMap":case"metalnessMap":case"normalMap":case"roughnessMap":h.format=n.RGBFormat}if(void 0===o.texCoord||0==o.texCoord||"aoMap"===t&&1==o.texCoord||console.warn("THREE.GLTFLoader: Custom UV set "+o.texCoord+" for texture "+t+" not yet supported."),l.extensions[r.KHR_TEXTURE_TRANSFORM]){var f=void 0!==o.extensions?o.extensions[r.KHR_TEXTURE_TRANSFORM]:void 0;if(f){var c=l.associations.get(h);h=l.extensions[r.KHR_TEXTURE_TRANSFORM].extendTexture(h,f),l.associations.set(h,c)}}e[t]=h}))},Z.prototype.assignFinalMaterial=function(e){var t=e.geometry,r=e.material,o=void 0!==t.attributes.tangent,l=void 0!==t.attributes.color,h=void 0===t.attributes.normal,f=!0===e.isSkinnedMesh,c=Object.keys(t.morphAttributes).length>0,d=c&&void 0!==t.morphAttributes.normal;if(e.isPoints){var v="PointsMaterial:"+r.uuid,_=this.cache.get(v);_||(_=new n.PointsMaterial,n.Material.prototype.copy.call(_,r),_.color.copy(r.color),_.map=r.map,_.sizeAttenuation=!1,this.cache.add(v,_)),r=_}else if(e.isLine){v="LineBasicMaterial:"+r.uuid;var m=this.cache.get(v);m||(m=new n.LineBasicMaterial,n.Material.prototype.copy.call(m,r),m.color.copy(r.color),this.cache.add(v,m)),r=m}if(o||l||h||f||c){v="ClonedMaterial:"+r.uuid+":";r.isGLTFSpecularGlossinessMaterial&&(v+="specular-glossiness:"),f&&(v+="skinning:"),o&&(v+="vertex-tangents:"),l&&(v+="vertex-colors:"),h&&(v+="flat-shading:"),c&&(v+="morph-targets:"),d&&(v+="morph-normals:");var y=this.cache.get(v);y||(y=r.clone(),f&&(y.skinning=!0),o&&(y.vertexTangents=!0),l&&(y.vertexColors=!0),h&&(y.flatShading=!0),c&&(y.morphTargets=!0),d&&(y.morphNormals=!0),this.cache.add(v,y),this.associations.set(y,this.associations.get(r))),r=y}r.aoMap&&void 0===t.attributes.uv2&&void 0!==t.attributes.uv&&t.setAttribute("uv2",t.attributes.uv),r.normalScale&&!o&&(r.normalScale.y=-r.normalScale.y),r.clearcoatNormalScale&&!o&&(r.clearcoatNormalScale.y=-r.clearcoatNormalScale.y),e.material=r},Z.prototype.loadMaterial=function(e){var t,o=this,l=this.json,h=this.extensions,f=l.materials[e],c={},d=f.extensions||{},v=[];if(d[r.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]){var _=h[r.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];t=_.getMaterialType(),v.push(_.extendParams(c,f,o))}else if(d[r.KHR_MATERIALS_UNLIT]){var m=h[r.KHR_MATERIALS_UNLIT];t=m.getMaterialType(),v.push(m.extendParams(c,f,o))}else{t=n.MeshStandardMaterial;var y=f.pbrMetallicRoughness||{};if(c.color=new n.Color(1,1,1),c.opacity=1,Array.isArray(y.baseColorFactor)){var w=y.baseColorFactor;c.color.fromArray(w),c.opacity=w[3]}void 0!==y.baseColorTexture&&v.push(o.assignTexture(c,"map",y.baseColorTexture)),c.metalness=void 0!==y.metallicFactor?y.metallicFactor:1,c.roughness=void 0!==y.roughnessFactor?y.roughnessFactor:1,void 0!==y.metallicRoughnessTexture&&(v.push(o.assignTexture(c,"metalnessMap",y.metallicRoughnessTexture)),v.push(o.assignTexture(c,"roughnessMap",y.metallicRoughnessTexture)))}!0===f.doubleSided&&(c.side=n.DoubleSide);var M=f.alphaMode||U;if(M===V?(c.transparent=!0,c.depthWrite=!1):(c.transparent=!1,M===j&&(c.alphaTest=void 0!==f.alphaCutoff?f.alphaCutoff:.5)),void 0!==f.normalTexture&&t!==n.MeshBasicMaterial&&(v.push(o.assignTexture(c,"normalMap",f.normalTexture)),c.normalScale=new n.Vector2(1,1),void 0!==f.normalTexture.scale&&c.normalScale.set(f.normalTexture.scale,f.normalTexture.scale)),void 0!==f.occlusionTexture&&t!==n.MeshBasicMaterial&&(v.push(o.assignTexture(c,"aoMap",f.occlusionTexture)),void 0!==f.occlusionTexture.strength&&(c.aoMapIntensity=f.occlusionTexture.strength)),void 0!==f.emissiveFactor&&t!==n.MeshBasicMaterial&&(c.emissive=(new n.Color).fromArray(f.emissiveFactor)),void 0!==f.emissiveTexture&&t!==n.MeshBasicMaterial&&v.push(o.assignTexture(c,"emissiveMap",f.emissiveTexture)),d[r.KHR_MATERIALS_CLEARCOAT]){var E=h[r.KHR_MATERIALS_CLEARCOAT];t=E.getMaterialType(),v.push(E.extendParams(c,{extensions:d},o))}return Promise.all(v).then((function(){var l;return l=t===x?h[r.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(c):new t(c),f.name&&(l.name=f.name),l.map&&(l.map.encoding=n.sRGBEncoding),l.emissiveMap&&(l.emissiveMap.encoding=n.sRGBEncoding),W(l,f),o.associations.set(l,{type:"materials",index:e}),f.extensions&&H(h,l,f),l}))},Z.prototype.loadGeometries=function(e){var t=this,o=this.extensions,l=this.primitiveCache;function h(e){return o[r.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(e,t).then((function(r){return J(r,e,t)}))}for(var f,c,d=[],i=0,v=e.length;i<v;i++){var _,m=e[i],y=(c=void 0,(c=(f=m).extensions&&f.extensions[r.KHR_DRACO_MESH_COMPRESSION])?"draco:"+c.bufferView+":"+c.indices+":"+Y(c.attributes):f.indices+":"+Y(f.attributes)+":"+f.mode),x=l[y];if(x)d.push(x.promise);else _=m.extensions&&m.extensions[r.KHR_DRACO_MESH_COMPRESSION]?h(m):J(new n.BufferGeometry,m,t),l[y]={primitive:m,promise:_},d.push(_)}return Promise.all(d)},Z.prototype.loadMesh=function(e){for(var t,r=this,o=this.json.meshes[e],l=o.primitives,h=[],i=0,f=l.length;i<f;i++){var c=void 0===l[i].material?(void 0===(t=this.cache).DefaultMaterial&&(t.DefaultMaterial=new n.MeshStandardMaterial({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:n.FrontSide})),t.DefaultMaterial):this.getDependency("material",l[i].material);h.push(c)}return h.push(r.loadGeometries(l)),Promise.all(h).then((function(t){for(var h=t.slice(0,t.length-1),f=t[t.length-1],c=[],i=0,d=f.length;i<d;i++){var v,_=f[i],m=l[i],y=h[i];if(m.mode===C||m.mode===L||m.mode===P||void 0===m.mode)!0!==(v=!0===o.isSkinnedMesh?new n.SkinnedMesh(_,y):new n.Mesh(_,y)).isSkinnedMesh||v.geometry.attributes.skinWeight.normalized||v.normalizeSkinWeights(),m.mode===L?v.geometry=K(v.geometry,n.TriangleStripDrawMode):m.mode===P&&(v.geometry=K(v.geometry,n.TriangleFanDrawMode));else if(m.mode===T)v=new n.LineSegments(_,y);else if(m.mode===R)v=new n.Line(_,y);else if(m.mode===A)v=new n.LineLoop(_,y);else{if(m.mode!==S)throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+m.mode);v=new n.Points(_,y)}Object.keys(v.geometry.morphAttributes).length>0&&X(v,o),v.name=o.name||"mesh_"+e,f.length>1&&(v.name+="_"+i),W(v,o),r.assignFinalMaterial(v),c.push(v)}if(1===c.length)return c[0];var x=new n.Group;for(i=0,d=c.length;i<d;i++)x.add(c[i]);return x}))},Z.prototype.loadCamera=function(e){var t,r=this.json.cameras[e],o=r[r.type];if(o)return"perspective"===r.type?t=new n.PerspectiveCamera(n.MathUtils.radToDeg(o.yfov),o.aspectRatio||1,o.znear||1,o.zfar||2e6):"orthographic"===r.type&&(t=new n.OrthographicCamera(-o.xmag,o.xmag,o.ymag,-o.ymag,o.znear,o.zfar)),r.name&&(t.name=r.name),W(t,r),Promise.resolve(t);console.warn("THREE.GLTFLoader: Missing camera parameters.")},Z.prototype.loadSkin=function(e){var t=this.json.skins[e],r={joints:t.joints};return void 0===t.inverseBindMatrices?Promise.resolve(r):this.getDependency("accessor",t.inverseBindMatrices).then((function(e){return r.inverseBindMatrices=e,r}))},Z.prototype.loadAnimation=function(e){for(var t=this.json.animations[e],r=[],o=[],l=[],h=[],f=[],i=0,c=t.channels.length;i<c;i++){var d=t.channels[i],v=t.samplers[d.sampler],_=d.target,m=void 0!==_.node?_.node:_.id,input=void 0!==t.parameters?t.parameters[v.input]:v.input,output=void 0!==t.parameters?t.parameters[v.output]:v.output;r.push(this.getDependency("node",m)),o.push(this.getDependency("accessor",input)),l.push(this.getDependency("accessor",output)),h.push(v),f.push(_)}return Promise.all([Promise.all(r),Promise.all(o),Promise.all(l),Promise.all(h),Promise.all(f)]).then((function(r){for(var o=r[0],l=r[1],h=r[2],f=r[3],c=r[4],d=[],i=0,v=o.length;i<v;i++){var _=o[i],m=l[i],y=h[i],x=f[i],w=c[i];if(void 0!==_){var M;switch(_.updateMatrix(),_.matrixAutoUpdate=!0,B[w.path]){case B.weights:M=n.NumberKeyframeTrack;break;case B.rotation:M=n.QuaternionKeyframeTrack;break;case B.position:case B.scale:default:M=n.VectorKeyframeTrack}var S=_.name?_.name:_.uuid,T=void 0!==x.interpolation?F[x.interpolation]:n.InterpolateLinear,A=[];B[w.path]===B.weights?_.traverse((function(object){!0===object.isMesh&&object.morphTargetInfluences&&A.push(object.name?object.name:object.uuid)})):A.push(S);var R=y.array;if(y.normalized){var C;if(R.constructor===Int8Array)C=1/127;else if(R.constructor===Uint8Array)C=1/255;else if(R.constructor==Int16Array)C=1/32767;else{if(R.constructor!==Uint16Array)throw new Error("THREE.GLTFLoader: Unsupported output accessor component type.");C=1/65535}for(var L=new Float32Array(R.length),P=0,O=R.length;P<O;P++)L[P]=R[P]*C;R=L}for(P=0,O=A.length;P<O;P++){var track=new M(A[P]+"."+B[w.path],m.array,R,T);"CUBICSPLINE"===x.interpolation&&(track.createInterpolant=function(e){return new E(this.times,this.values,this.getValueSize()/3,e)},track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0),d.push(track)}}}var k=t.name?t.name:"animation_"+e;return new n.AnimationClip(k,void 0,d)}))},Z.prototype.loadNode=function(e){var t,o=this.json,l=this.extensions,h=this,f=o.meshReferences,c=o.meshUses,d=o.nodes[e];return(t=[],void 0!==d.mesh&&t.push(h.getDependency("mesh",d.mesh).then((function(e){var t;if(f[d.mesh]>1){var r=c[d.mesh]++;(t=e.clone()).name+="_instance_"+r}else t=e;return void 0!==d.weights&&t.traverse((function(e){if(e.isMesh)for(var i=0,t=d.weights.length;i<t;i++)e.morphTargetInfluences[i]=d.weights[i]})),t}))),void 0!==d.camera&&t.push(h.getDependency("camera",d.camera)),d.extensions&&d.extensions[r.KHR_LIGHTS_PUNCTUAL]&&void 0!==d.extensions[r.KHR_LIGHTS_PUNCTUAL].light&&t.push(h.getDependency("light",d.extensions[r.KHR_LIGHTS_PUNCTUAL].light)),Promise.all(t)).then((function(t){var r;if((r=!0===d.isBone?new n.Bone:t.length>1?new n.Group:1===t.length?t[0]:new n.Object3D)!==t[0])for(var i=0,o=t.length;i<o;i++)r.add(t[i]);if(d.name&&(r.userData.name=d.name,r.name=n.PropertyBinding.sanitizeNodeName(d.name)),W(r,d),d.extensions&&H(l,r,d),void 0!==d.matrix){var f=new n.Matrix4;f.fromArray(d.matrix),r.applyMatrix4(f)}else void 0!==d.translation&&r.position.fromArray(d.translation),void 0!==d.rotation&&r.quaternion.fromArray(d.rotation),void 0!==d.scale&&r.scale.fromArray(d.scale);return h.associations.set(r,{type:"nodes",index:e}),r}))},Z.prototype.loadScene=function(){function e(t,r,o,l){var h=o.nodes[t];return l.getDependency("node",t).then((function(e){return void 0===h.skin?e:l.getDependency("skin",h.skin).then((function(e){for(var r=[],i=0,n=(t=e).joints.length;i<n;i++)r.push(l.getDependency("node",t.joints[i]));return Promise.all(r)})).then((function(r){return e.traverse((function(e){if(e.isMesh){for(var o=[],l=[],h=0,f=r.length;h<f;h++){var c=r[h];if(c){o.push(c);var d=new n.Matrix4;void 0!==t.inverseBindMatrices&&d.fromArray(t.inverseBindMatrices.array,16*h),l.push(d)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[h])}e.bind(new n.Skeleton(o,l),e.matrixWorld)}})),e}));var t})).then((function(t){r.add(t);var n=[];if(h.children)for(var f=h.children,i=0,c=f.length;i<c;i++){var d=f[i];n.push(e(d,t,o,l))}return Promise.all(n)}))}return function(t){var r=this.json,o=this.extensions,l=this.json.scenes[t],h=new n.Group;l.name&&(h.name=l.name),W(h,l),l.extensions&&H(o,h,l);for(var f=l.nodes||[],c=[],i=0,d=f.length;i<d;i++)c.push(e(f[i],h,r,this));return Promise.all(c).then((function(){return h}))}}(),e}()},192:function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r(157),o=function(object,e){var t,r,o,l,h;void 0===e&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),e===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=object,this.domElement=e,this.enabled=!0,this.target=new n.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!1,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:n.MOUSE.ROTATE,MIDDLE:n.MOUSE.DOLLY,RIGHT:n.MOUSE.PAN},this.touches={ONE:n.TOUCH.ROTATE,TWO:n.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return x.phi},this.getAzimuthalAngle=function(){return x.theta},this.saveState=function(){f.target0.copy(f.target),f.position0.copy(f.object.position),f.zoom0=f.object.zoom},this.reset=function(){f.target.copy(f.target0),f.object.position.copy(f.position0),f.object.zoom=f.zoom0,f.object.updateProjectionMatrix(),f.dispatchEvent(c),f.update(),m=_.NONE},this.update=(t=new n.Vector3,r=(new n.Quaternion).setFromUnitVectors(object.up,new n.Vector3(0,1,0)),o=r.clone().inverse(),l=new n.Vector3,h=new n.Quaternion,function(){var e=f.object.position;return t.copy(e).sub(f.target),t.applyQuaternion(r),x.setFromVector3(t),f.autoRotate&&m===_.NONE&&D(2*Math.PI/60/60*f.autoRotateSpeed),f.enableDamping?(x.theta+=w.theta*f.dampingFactor,x.phi+=w.phi*f.dampingFactor):(x.theta+=w.theta,x.phi+=w.phi),x.theta=Math.max(f.minAzimuthAngle,Math.min(f.maxAzimuthAngle,x.theta)),x.phi=Math.max(f.minPolarAngle,Math.min(f.maxPolarAngle,x.phi)),x.makeSafe(),x.radius*=M,x.radius=Math.max(f.minDistance,Math.min(f.maxDistance,x.radius)),!0===f.enableDamping?f.target.addScaledVector(E,f.dampingFactor):f.target.add(E),t.setFromSpherical(x),t.applyQuaternion(o),e.copy(f.target).add(t),f.object.lookAt(f.target),!0===f.enableDamping?(w.theta*=1-f.dampingFactor,w.phi*=1-f.dampingFactor,E.multiplyScalar(1-f.dampingFactor)):(w.set(0,0,0),E.set(0,0,0)),M=1,!!(S||l.distanceToSquared(f.object.position)>y||8*(1-h.dot(f.object.quaternion))>y)&&(f.dispatchEvent(c),l.copy(f.object.position),h.copy(f.object.quaternion),S=!1,!0)}),this.dispose=function(){f.domElement.removeEventListener("contextmenu",se,!1),f.domElement.removeEventListener("mousedown",$,!1),f.domElement.removeEventListener("wheel",re,!1),f.domElement.removeEventListener("touchstart",ie,!1),f.domElement.removeEventListener("touchend",oe,!1),f.domElement.removeEventListener("touchmove",ne,!1),document.removeEventListener("mousemove",ee,!1),document.removeEventListener("mouseup",te,!1),f.domElement.removeEventListener("keydown",ae,!1)};var f=this,c={type:"change"},d={type:"start"},v={type:"end"},_={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},m=_.NONE,y=1e-6,x=new n.Spherical,w=new n.Spherical,M=1,E=new n.Vector3,S=!1,T=new n.Vector2,A=new n.Vector2,R=new n.Vector2,C=new n.Vector2,L=new n.Vector2,P=new n.Vector2,O=new n.Vector2,k=new n.Vector2,I=new n.Vector2;function N(){return Math.pow(.95,f.zoomSpeed)}function D(e){w.theta-=e}function B(e){w.phi-=e}var F,U=(F=new n.Vector3,function(e,t){F.setFromMatrixColumn(t,0),F.multiplyScalar(-e),E.add(F)}),j=function(){var e=new n.Vector3;return function(t,r){!0===f.screenSpacePanning?e.setFromMatrixColumn(r,1):(e.setFromMatrixColumn(r,0),e.crossVectors(f.object.up,e)),e.multiplyScalar(t),E.add(e)}}(),V=function(){var e=new n.Vector3;return function(t,r){var element=f.domElement;if(f.object.isPerspectiveCamera){var n=f.object.position;e.copy(n).sub(f.target);var o=e.length();o*=Math.tan(f.object.fov/2*Math.PI/180),U(2*t*o/element.clientHeight,f.object.matrix),j(2*r*o/element.clientHeight,f.object.matrix)}else f.object.isOrthographicCamera?(U(t*(f.object.right-f.object.left)/f.object.zoom/element.clientWidth,f.object.matrix),j(r*(f.object.top-f.object.bottom)/f.object.zoom/element.clientHeight,f.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),f.enablePan=!1)}}();function z(e){f.object.isPerspectiveCamera?M/=e:f.object.isOrthographicCamera?(f.object.zoom=Math.max(f.minZoom,Math.min(f.maxZoom,f.object.zoom*e)),f.object.updateProjectionMatrix(),S=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),f.enableZoom=!1)}function G(e){f.object.isPerspectiveCamera?M*=e:f.object.isOrthographicCamera?(f.object.zoom=Math.max(f.minZoom,Math.min(f.maxZoom,f.object.zoom/e)),f.object.updateProjectionMatrix(),S=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),f.enableZoom=!1)}function H(e){T.set(e.clientX,e.clientY)}function W(e){C.set(e.clientX,e.clientY)}function X(e){if(1==e.touches.length)T.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),r=.5*(e.touches[0].pageY+e.touches[1].pageY);T.set(t,r)}}function Y(e){if(1==e.touches.length)C.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),r=.5*(e.touches[0].pageY+e.touches[1].pageY);C.set(t,r)}}function Z(e){var t=e.touches[0].pageX-e.touches[1].pageX,r=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+r*r);O.set(0,n)}function J(e){if(1==e.touches.length)A.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),r=.5*(e.touches[0].pageY+e.touches[1].pageY);A.set(t,r)}R.subVectors(A,T).multiplyScalar(f.rotateSpeed);var element=f.domElement;D(2*Math.PI*R.x/element.clientHeight),B(2*Math.PI*R.y/element.clientHeight),T.copy(A)}function K(e){if(1==e.touches.length)L.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),r=.5*(e.touches[0].pageY+e.touches[1].pageY);L.set(t,r)}P.subVectors(L,C).multiplyScalar(f.panSpeed),V(P.x,P.y),C.copy(L)}function Q(e){var t=e.touches[0].pageX-e.touches[1].pageX,r=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+r*r);k.set(0,n),I.set(0,Math.pow(k.y/O.y,f.zoomSpeed)),z(I.y),O.copy(k)}function $(e){if(!1!==f.enabled){var t;switch(e.preventDefault(),f.domElement.focus?f.domElement.focus():window.focus(),e.button){case 0:t=f.mouseButtons.LEFT;break;case 1:t=f.mouseButtons.MIDDLE;break;case 2:t=f.mouseButtons.RIGHT;break;default:t=-1}switch(t){case n.MOUSE.DOLLY:if(!1===f.enableZoom)return;!function(e){O.set(e.clientX,e.clientY)}(e),m=_.DOLLY;break;case n.MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===f.enablePan)return;W(e),m=_.PAN}else{if(!1===f.enableRotate)return;H(e),m=_.ROTATE}break;case n.MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===f.enableRotate)return;H(e),m=_.ROTATE}else{if(!1===f.enablePan)return;W(e),m=_.PAN}break;default:m=_.NONE}m!==_.NONE&&(document.addEventListener("mousemove",ee,!1),document.addEventListener("mouseup",te,!1),f.dispatchEvent(d))}}function ee(e){if(!1!==f.enabled)switch(e.preventDefault(),m){case _.ROTATE:if(!1===f.enableRotate)return;!function(e){A.set(e.clientX,e.clientY),R.subVectors(A,T).multiplyScalar(f.rotateSpeed);var element=f.domElement;D(2*Math.PI*R.x/element.clientHeight),B(2*Math.PI*R.y/element.clientHeight),T.copy(A),f.update()}(e);break;case _.DOLLY:if(!1===f.enableZoom)return;!function(e){k.set(e.clientX,e.clientY),I.subVectors(k,O),I.y>0?z(N()):I.y<0&&G(N()),O.copy(k),f.update()}(e);break;case _.PAN:if(!1===f.enablePan)return;!function(e){L.set(e.clientX,e.clientY),P.subVectors(L,C).multiplyScalar(f.panSpeed),V(P.x,P.y),C.copy(L),f.update()}(e)}}function te(e){!1!==f.enabled&&(document.removeEventListener("mousemove",ee,!1),document.removeEventListener("mouseup",te,!1),f.dispatchEvent(v),m=_.NONE)}function re(e){!1===f.enabled||!1===f.enableZoom||m!==_.NONE&&m!==_.ROTATE||(e.preventDefault(),e.stopPropagation(),f.dispatchEvent(d),function(e){e.deltaY<0?G(N()):e.deltaY>0&&z(N()),f.update()}(e),f.dispatchEvent(v))}function ae(e){!1!==f.enabled&&!1!==f.enableKeys&&!1!==f.enablePan&&function(e){var t=!1;switch(e.keyCode){case f.keys.UP:V(0,f.keyPanSpeed),t=!0;break;case f.keys.BOTTOM:V(0,-f.keyPanSpeed),t=!0;break;case f.keys.LEFT:V(f.keyPanSpeed,0),t=!0;break;case f.keys.RIGHT:V(-f.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),f.update())}(e)}function ie(e){if(!1!==f.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(f.touches.ONE){case n.TOUCH.ROTATE:if(!1===f.enableRotate)return;X(e),m=_.TOUCH_ROTATE;break;case n.TOUCH.PAN:if(!1===f.enablePan)return;Y(e),m=_.TOUCH_PAN;break;default:m=_.NONE}break;case 2:switch(f.touches.TWO){case n.TOUCH.DOLLY_PAN:if(!1===f.enableZoom&&!1===f.enablePan)return;!function(e){f.enableZoom&&Z(e),f.enablePan&&Y(e)}(e),m=_.TOUCH_DOLLY_PAN;break;case n.TOUCH.DOLLY_ROTATE:if(!1===f.enableZoom&&!1===f.enableRotate)return;!function(e){f.enableZoom&&Z(e),f.enableRotate&&X(e)}(e),m=_.TOUCH_DOLLY_ROTATE;break;default:m=_.NONE}break;default:m=_.NONE}m!==_.NONE&&f.dispatchEvent(d)}}function ne(e){if(!1!==f.enabled)switch(e.preventDefault(),e.stopPropagation(),m){case _.TOUCH_ROTATE:if(!1===f.enableRotate)return;J(e),f.update();break;case _.TOUCH_PAN:if(!1===f.enablePan)return;K(e),f.update();break;case _.TOUCH_DOLLY_PAN:if(!1===f.enableZoom&&!1===f.enablePan)return;!function(e){f.enableZoom&&Q(e),f.enablePan&&K(e)}(e),f.update();break;case _.TOUCH_DOLLY_ROTATE:if(!1===f.enableZoom&&!1===f.enableRotate)return;!function(e){f.enableZoom&&Q(e),f.enableRotate&&J(e)}(e),f.update();break;default:m=_.NONE}}function oe(e){!1!==f.enabled&&(f.dispatchEvent(v),m=_.NONE)}function se(e){!1!==f.enabled&&e.preventDefault()}f.domElement.addEventListener("contextmenu",se,!1),f.domElement.addEventListener("mousedown",$,!1),f.domElement.addEventListener("wheel",re,!1),f.domElement.addEventListener("touchstart",ie,!1),f.domElement.addEventListener("touchend",oe,!1),f.domElement.addEventListener("touchmove",ne,!1),f.domElement.addEventListener("keydown",ae,!1),-1===f.domElement.tabIndex&&(f.domElement.tabIndex=0),this.update()};o.prototype=Object.create(n.EventDispatcher.prototype),o.prototype.constructor=o;var l=function(object,e){o.call(this,object,e),this.mouseButtons.LEFT=n.MOUSE.PAN,this.mouseButtons.RIGHT=n.MOUSE.ROTATE,this.touches.ONE=n.TOUCH.PAN,this.touches.TWO=n.TOUCH.DOLLY_ROTATE};(l.prototype=Object.create(n.EventDispatcher.prototype)).constructor=l},193:function(e,t,r){var n;e.exports=(n=r(157),function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=29)}([function(e,t){e.exports=n},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(33),t),i(r(34),t),i(r(35),t)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getWorldQuaternionLite=t.getWorldScaleLite=t.getWorldPositionLite=t.linstep=t.saturate=void 0;var n=r(0);t.saturate=function(e){return Math.max(Math.min(e,1),0)},t.linstep=function(e,t,r){return e<=t?0:e>=r?1:(e-t)/(r-t)};var i=new n.Vector3,o=new n.Vector3,a=new n.Quaternion;t.getWorldPositionLite=function(e,t){return e.matrixWorld.decompose(t,a,o),t},t.getWorldScaleLite=function(e,t){return e.matrixWorld.decompose(i,a,t),t},t.getWorldQuaternionLite=function(e,t){return e.matrixWorld.decompose(i,t,o),t}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VRMLookAtHead=void 0;var n=r(0),i=r(2),o=Object.freeze(new n.Vector3(0,0,-1)),a=new n.Vector3,s=new n.Vector3,l=new n.Vector3,u=new n.Quaternion,h=function(){function e(t,r){this.autoUpdate=!0,this._euler=new n.Euler(0,0,0,e.EULER_ORDER),this.firstPerson=t,this.applyer=r}return e.prototype.getLookAtWorldDirection=function(e){var t=i.getWorldQuaternionLite(this.firstPerson.firstPersonBone,u);return e.copy(o).applyEuler(this._euler).applyQuaternion(t)},e.prototype.lookAt=function(e){this._calcEuler(this._euler,e),this.applyer&&this.applyer.lookAt(this._euler)},e.prototype.update=function(e){this.target&&this.autoUpdate&&(this.lookAt(this.target.getWorldPosition(a)),this.applyer&&this.applyer.lookAt(this._euler))},e.prototype._calcEuler=function(e,t){var r=this.firstPerson.getFirstPersonWorldPosition(s),n=l.copy(t).sub(r).normalize();return n.applyQuaternion(i.getWorldQuaternionLite(this.firstPerson.firstPersonBone,u).inverse()),e.x=Math.atan2(n.y,Math.sqrt(n.x*n.x+n.z*n.z)),e.y=Math.atan2(-n.x,-n.z),e},e.EULER_ORDER="YXZ",e}();t.VRMLookAtHead=h},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{l(n.next(e))}catch(e){o(e)}}function s(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.VRMDebug=t.VRM_GIZMO_RENDER_ORDER=void 0;var s=r(0),l=r(5),u=r(48);t.VRM_GIZMO_RENDER_ORDER=1e4;var h=function(e){function t(t,r){void 0===r&&(r={});var n=e.call(this,t)||this;return r.disableBoxHelper||n.scene.add(new s.BoxHelper(n.scene)),r.disableSkeletonHelper||n.scene.add(new s.SkeletonHelper(n.scene)),n}return i(t,e),t.from=function(e,t,r){return void 0===t&&(t={}),void 0===r&&(r={}),o(this,void 0,Promise,(function(){return a(this,(function(n){switch(n.label){case 0:return[4,new u.VRMImporterDebug(t).import(e,r)];case 1:return[2,n.sent()]}}))}))},t.prototype.update=function(t){e.prototype.update.call(this,t)},t}(l.VRM);t.VRMDebug=h},function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{l(n.next(e))}catch(e){o(e)}}function s(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.VRM=void 0;var o=r(31),a=r(6),s=function(){function e(e){this.scene=e.scene,this.humanoid=e.humanoid,this.blendShapeProxy=e.blendShapeProxy,this.firstPerson=e.firstPerson,this.lookAt=e.lookAt,this.materials=e.materials,this.springBoneManager=e.springBoneManager,this.meta=e.meta}return e.from=function(e,t){return void 0===t&&(t={}),n(this,void 0,Promise,(function(){return i(this,(function(r){switch(r.label){case 0:return[4,new a.VRMImporter(t).import(e)];case 1:return[2,r.sent()]}}))}))},e.prototype.update=function(e){this.lookAt&&this.lookAt.update(e),this.blendShapeProxy&&this.blendShapeProxy.update(),this.springBoneManager&&this.springBoneManager.lateUpdate(e),this.materials&&this.materials.forEach((function(t){t.updateVRMMaterials&&t.updateVRMMaterials(e)}))},e.prototype.dispose=function(){var e=this.scene;e&&o.deepDispose(e)},e}();t.VRM=s},function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{l(n.next(e))}catch(e){o(e)}}function s(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.VRMImporter=void 0;var o=r(11),a=r(14),s=r(16),l=r(7),u=r(22),h=r(9),f=r(5),c=function(){function e(e){void 0===e&&(e={}),this._blendShapeImporter=e.blendShapeImporter||new o.VRMBlendShapeImporter,this._lookAtImporter=e.lookAtImporter||new l.VRMLookAtImporter,this._humanoidImporter=e.humanoidImporter||new s.VRMHumanoidImporter,this._firstPersonImporter=e.firstPersonImporter||new a.VRMFirstPersonImporter,this._materialImporter=e.materialImporter||new u.VRMMaterialImporter,this._springBoneImporter=e.springBoneImporter||new h.VRMSpringBoneImporter}return e.prototype.import=function(e){return n(this,void 0,Promise,(function(){var t,r,n,o,a,s,l,u,h,c;return i(this,(function(i){switch(i.label){case 0:if(void 0===e.parser.json.extensions||void 0===e.parser.json.extensions.VRM)throw new Error("Could not find VRM extension on the GLTF");return t=e.parser.json.extensions.VRM,(r=e.scene).updateMatrixWorld(!1),r.traverse((function(e){e.isMesh&&(e.frustumCulled=!1)})),[4,this._materialImporter.convertGLTFMaterials(e)];case 1:return n=i.sent()||void 0,[4,this._humanoidImporter.import(e)];case 2:return(o=i.sent()||void 0)?[4,this._firstPersonImporter.import(e,o)]:[3,4];case 3:return s=i.sent()||void 0,[3,5];case 4:s=void 0,i.label=5;case 5:return a=s,[4,this._blendShapeImporter.import(e)];case 6:return l=i.sent()||void 0,a&&l&&o?[4,this._lookAtImporter.import(e,a,l,o)]:[3,8];case 7:return h=i.sent()||void 0,[3,9];case 8:h=void 0,i.label=9;case 9:return u=h,[4,this._springBoneImporter.import(e)];case 10:return c=i.sent()||void 0,[2,new f.VRM({scene:e.scene,meta:t.meta,materials:n,humanoid:o,firstPerson:a,blendShapeProxy:l,lookAt:u,springBoneManager:c})]}}))}))},e}();t.VRMImporter=c},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VRMLookAtImporter=void 0;var n=r(1),i=r(19),o=r(20),a=r(21),s=r(3),l=Math.PI/180,u=function(){function e(){}return e.prototype.import=function(e,t,r,n){var i=e.parser.json.extensions&&e.parser.json.extensions.VRM;if(!i)return null;var o=i.firstPerson;if(!o)return null;var a=this._importApplyer(o,r,n);return new s.VRMLookAtHead(t,a||void 0)},e.prototype._importApplyer=function(e,t,r){var i=e.lookAtHorizontalInner,s=e.lookAtHorizontalOuter,l=e.lookAtVerticalDown,u=e.lookAtVerticalUp;switch(e.lookAtTypeName){case n.VRMSchema.FirstPersonLookAtTypeName.Bone:return void 0===i||void 0===s||void 0===l||void 0===u?null:new a.VRMLookAtBoneApplyer(r,this._importCurveMapperBone(i),this._importCurveMapperBone(s),this._importCurveMapperBone(l),this._importCurveMapperBone(u));case n.VRMSchema.FirstPersonLookAtTypeName.BlendShape:return void 0===s||void 0===l||void 0===u?null:new o.VRMLookAtBlendShapeApplyer(t,this._importCurveMapperBlendShape(s),this._importCurveMapperBlendShape(l),this._importCurveMapperBlendShape(u));default:return null}},e.prototype._importCurveMapperBone=function(e){return new i.VRMCurveMapper("number"==typeof e.xRange?l*e.xRange:void 0,"number"==typeof e.yRange?l*e.yRange:void 0,e.curve)},e.prototype._importCurveMapperBlendShape=function(e){return new i.VRMCurveMapper("number"==typeof e.xRange?l*e.xRange:void 0,e.yRange,e.curve)},e}();t.VRMLookAtImporter=u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VRMLookAtApplyer=void 0,t.VRMLookAtApplyer=function(){}},function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{l(n.next(e))}catch(e){o(e)}}function s(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.VRMSpringBoneImporter=void 0;var o=r(0),a=r(25),s=r(26),l=new o.Vector3,u=new o.MeshBasicMaterial({visible:!1}),h=function(){function e(){}return e.prototype.import=function(e){var t;return n(this,void 0,Promise,(function(){var r,n,o,a;return i(this,(function(i){switch(i.label){case 0:return(r=null===(t=e.parser.json.extensions)||void 0===t?void 0:t.VRM)&&(n=r.secondaryAnimation)?[4,this._importColliderMeshGroups(e,n)]:[2,null];case 1:return o=i.sent(),[4,this._importSpringBoneGroupList(e,n,o)];case 2:return a=i.sent(),[2,new s.VRMSpringBoneManager(o,a)]}}))}))},e.prototype._createSpringBone=function(e,t,r,n,i,o,s){return void 0===s&&(s=[]),new a.VRMSpringBone(e,t,r,n,i,o,s)},e.prototype._importSpringBoneGroupList=function(e,t,r){return n(this,void 0,Promise,(function(){var a,s,l=this;return i(this,(function(u){switch(u.label){case 0:return a=t.boneGroups||[],s=[],[4,Promise.all(a.map((function(t){return n(l,void 0,void 0,(function(){var a,l,u,h,f,c,p,d=this;return i(this,(function(v){switch(v.label){case 0:return void 0===t.stiffiness||void 0===t.gravityDir||void 0===t.gravityDir.x||void 0===t.gravityDir.y||void 0===t.gravityDir.z||void 0===t.gravityPower||void 0===t.dragForce||void 0===t.hitRadius||void 0===t.colliderGroups||void 0===t.bones?[2]:(a=t.stiffiness,l=new o.Vector3(t.gravityDir.x,t.gravityDir.y,-t.gravityDir.z),u=t.gravityPower,h=t.dragForce,f=t.hitRadius,c=[],t.colliderGroups.forEach((function(e){c.push.apply(c,r[e].colliders)})),p=[],[4,Promise.all(t.bones.map((function(t){return n(d,void 0,void 0,(function(){var r,n=this;return i(this,(function(i){switch(i.label){case 0:return[4,e.parser.getDependency("node",t)];case 1:return(r=i.sent())?(r.traverse((function(e){var t=n._createSpringBone(e,f,a,l,u,h,c);p.push(t)})),[2]):[2]}}))}))})))]);case 1:return v.sent(),s.push(p),[2]}}))}))})))];case 1:return u.sent(),[2,s]}}))}))},e.prototype._importColliderMeshGroups=function(e,t){return n(this,void 0,Promise,(function(){var r,o,a=this;return i(this,(function(s){return void 0===(r=t.colliderGroups)?[2,[]]:(o=[],r.forEach((function(t){return n(a,void 0,void 0,(function(){var r,n,a,s=this;return i(this,(function(i){switch(i.label){case 0:return void 0===t.node||void 0===t.colliders?[2]:[4,e.parser.getDependency("node",t.node)];case 1:return r=i.sent(),n=[],t.colliders.forEach((function(e){if(void 0!==e.offset&&void 0!==e.offset.x&&void 0!==e.offset.y&&void 0!==e.offset.z&&void 0!==e.radius){var t=l.set(e.offset.x,e.offset.y,-e.offset.z),i=s._createColliderMesh(e.radius,t);r.add(i),n.push(i)}})),a={node:t.node,colliders:n},o.push(a),[2]}}))}))})),[2,o])}))}))},e.prototype._createColliderMesh=function(e,t){var r=new o.Mesh(new o.SphereBufferGeometry(e,8,4),u);return r.position.copy(t),r.name="vrmColliderSphere",r.geometry.computeBoundingSphere(),r},e}();t.VRMSpringBoneImporter=h},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(25),t),i(r(52),t),i(r(9),t),i(r(26),t)},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(12),t),i(r(32),t),i(r(13),t)},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.VRMBlendShapeGroup=void 0;var o,a=r(0);!function(e){e[e.NUMBER=0]="NUMBER",e[e.VECTOR2=1]="VECTOR2",e[e.VECTOR3=2]="VECTOR3",e[e.VECTOR4=3]="VECTOR4",e[e.COLOR=4]="COLOR"}(o||(o={}));var s=new a.Vector2,l=new a.Vector3,u=new a.Vector4,h=new a.Color,f=function(e){function t(t){var r=e.call(this)||this;return r.weight=0,r.isBinary=!1,r._binds=[],r._materialValues=[],r.name="BlendShapeController_"+t,r.type="BlendShapeController",r.visible=!1,r}return i(t,e),t.prototype.addBind=function(e){var t=e.weight/100;this._binds.push({meshes:e.meshes,morphTargetIndex:e.morphTargetIndex,weight:t})},t.prototype.addMaterialValue=function(e){var t,r,n,i,s=e.material,l=e.propertyName,u=s[l];u&&((u=e.defaultValue||u).isVector2?(t=o.VECTOR2,r=u.clone(),i=(n=(new a.Vector2).fromArray(e.targetValue)).clone().sub(r)):u.isVector3?(t=o.VECTOR3,r=u.clone(),i=(n=(new a.Vector3).fromArray(e.targetValue)).clone().sub(r)):u.isVector4?(t=o.VECTOR4,r=u.clone(),i=(n=(new a.Vector4).fromArray([e.targetValue[2],e.targetValue[3],e.targetValue[0],e.targetValue[1]])).clone().sub(r)):u.isColor?(t=o.COLOR,r=u.clone(),i=(n=(new a.Color).fromArray(e.targetValue)).clone().sub(r)):(t=o.NUMBER,r=u,i=(n=e.targetValue[0])-r),this._materialValues.push({material:s,propertyName:l,defaultValue:r,targetValue:n,deltaValue:i,type:t}))},t.prototype.applyWeight=function(){var e=this.isBinary?this.weight<.5?0:1:this.weight;this._binds.forEach((function(t){t.meshes.forEach((function(r){r.morphTargetInfluences&&(r.morphTargetInfluences[t.morphTargetIndex]+=e*t.weight)}))})),this._materialValues.forEach((function(t){if(void 0!==t.material[t.propertyName]){if(t.type===o.NUMBER){var r=t.deltaValue;t.material[t.propertyName]+=r*e}else t.type===o.VECTOR2?(r=t.deltaValue,t.material[t.propertyName].add(s.copy(r).multiplyScalar(e))):t.type===o.VECTOR3?(r=t.deltaValue,t.material[t.propertyName].add(l.copy(r).multiplyScalar(e))):t.type===o.VECTOR4?(r=t.deltaValue,t.material[t.propertyName].add(u.copy(r).multiplyScalar(e))):t.type===o.COLOR&&(r=t.deltaValue,t.material[t.propertyName].add(h.copy(r).multiplyScalar(e)));"boolean"==typeof t.material.shouldApplyUniforms&&(t.material.shouldApplyUniforms=!0)}}))},t.prototype.clearAppliedWeight=function(){this._binds.forEach((function(e){e.meshes.forEach((function(t){t.morphTargetInfluences&&(t.morphTargetInfluences[e.morphTargetIndex]=0)}))})),this._materialValues.forEach((function(e){if(void 0!==e.material[e.propertyName]){if(e.type===o.NUMBER){var t=e.defaultValue;e.material[e.propertyName]=t}else(e.type===o.VECTOR2||e.type===o.VECTOR3||e.type===o.VECTOR4||e.type===o.COLOR)&&(t=e.defaultValue,e.material[e.propertyName].copy(t));"boolean"==typeof e.material.shouldApplyUniforms&&(e.material.shouldApplyUniforms=!0)}}))},t}(a.Object3D);t.VRMBlendShapeGroup=f},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VRMBlendShapeProxy=void 0;var n=r(2),i=function(){function e(){this._blendShapeGroups={},this._blendShapePresetMap={}}return Object.defineProperty(e.prototype,"expressions",{get:function(){return Object.keys(this._blendShapeGroups)},enumerable:!1,configurable:!0}),e.prototype.getBlendShapeGroup=function(e){var t=this._blendShapePresetMap[e],r=t?this._blendShapeGroups[t]:this._blendShapeGroups[e];if(r)return r;console.warn("no blend shape found by "+e)},e.prototype.registerBlendShapeGroup=function(e,t,r){this._blendShapeGroups[e]=r,t&&(this._blendShapePresetMap[t]=e)},e.prototype.getValue=function(e){var t=this.getBlendShapeGroup(e);return t&&t.weight||null},e.prototype.setValue=function(e,t){var r=this.getBlendShapeGroup(e);r&&(r.weight=n.saturate(t))},e.prototype.getBlendShapeTrackName=function(e){var t=this.getBlendShapeGroup(e);return t?t.name+".weight":null},e.prototype.update=function(){var e=this;Object.keys(this._blendShapeGroups).forEach((function(t){e._blendShapeGroups[t].clearAppliedWeight()})),Object.keys(this._blendShapeGroups).forEach((function(t){e._blendShapeGroups[t].applyWeight()}))},e}();t.VRMBlendShapeProxy=i},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(15),t),i(r(37),t)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VRMFirstPerson=t.VRMRendererFirstPersonFlags=void 0;var n,i=r(0),o=r(2),a=Object.freeze(new i.Vector3(0,0,-1)),s=new i.Quaternion;!function(e){e[e.Auto=0]="Auto",e[e.Both=1]="Both",e[e.ThirdPersonOnly=2]="ThirdPersonOnly",e[e.FirstPersonOnly=3]="FirstPersonOnly"}(n||(n={}));var l=function(){function e(t,r){this.firstPersonFlag=e._parseFirstPersonFlag(t),this.mesh=r}return e._parseFirstPersonFlag=function(e){switch(e){case"Both":return n.Both;case"ThirdPersonOnly":return n.ThirdPersonOnly;case"FirstPersonOnly":return n.FirstPersonOnly;default:return n.Auto}},e}();t.VRMRendererFirstPersonFlags=l;var u=function(){function e(t,r,n){this._meshAnnotations=[],this._firstPersonOnlyLayer=e._DEFAULT_FIRSTPERSON_ONLY_LAYER,this._thirdPersonOnlyLayer=e._DEFAULT_THIRDPERSON_ONLY_LAYER,this._initialized=!1,this._firstPersonBone=t,this._firstPersonBoneOffset=r,this._meshAnnotations=n}return Object.defineProperty(e.prototype,"firstPersonBone",{get:function(){return this._firstPersonBone},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"meshAnnotations",{get:function(){return this._meshAnnotations},enumerable:!1,configurable:!0}),e.prototype.getFirstPersonWorldDirection=function(e){return e.copy(a).applyQuaternion(o.getWorldQuaternionLite(this._firstPersonBone,s))},Object.defineProperty(e.prototype,"firstPersonOnlyLayer",{get:function(){return this._firstPersonOnlyLayer},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thirdPersonOnlyLayer",{get:function(){return this._thirdPersonOnlyLayer},enumerable:!1,configurable:!0}),e.prototype.getFirstPersonBoneOffset=function(e){return e.copy(this._firstPersonBoneOffset)},e.prototype.getFirstPersonWorldPosition=function(e){var t=this._firstPersonBoneOffset,r=new i.Vector4(t.x,t.y,t.z,1);return r.applyMatrix4(this._firstPersonBone.matrixWorld),e.set(r.x,r.y,r.z)},e.prototype.setup=function(t){var r=this,i=void 0===t?{}:t,o=i.firstPersonOnlyLayer,a=void 0===o?e._DEFAULT_FIRSTPERSON_ONLY_LAYER:o,s=i.thirdPersonOnlyLayer,l=void 0===s?e._DEFAULT_THIRDPERSON_ONLY_LAYER:s;this._initialized||(this._initialized=!0,this._firstPersonOnlyLayer=a,this._thirdPersonOnlyLayer=l,this._meshAnnotations.forEach((function(e){e.firstPersonFlag===n.FirstPersonOnly?(e.mesh.layers.set(r._firstPersonOnlyLayer),e.mesh.traverse((function(e){return e.layers.set(r._firstPersonOnlyLayer)}))):e.firstPersonFlag===n.ThirdPersonOnly?(e.mesh.layers.set(r._thirdPersonOnlyLayer),e.mesh.traverse((function(e){return e.layers.set(r._thirdPersonOnlyLayer)}))):e.firstPersonFlag===n.Auto&&r._createHeadlessModel(e.mesh)})))},e.prototype._excludeTriangles=function(e,t,r,n){var i=0;if(null!=t&&t.length>0)for(var o=0;o<e.length;o+=3){var a=e[o],s=e[o+1],l=e[o+2],u=t[a],h=r[a];if(!(u[0]>0&&n.includes(h[0])||u[1]>0&&n.includes(h[1])||u[2]>0&&n.includes(h[2])||u[3]>0&&n.includes(h[3]))){var f=t[s],c=r[s];if(!(f[0]>0&&n.includes(c[0])||f[1]>0&&n.includes(c[1])||f[2]>0&&n.includes(c[2])||f[3]>0&&n.includes(c[3]))){var p=t[l],d=r[l];p[0]>0&&n.includes(d[0])||p[1]>0&&n.includes(d[1])||p[2]>0&&n.includes(d[2])||p[3]>0&&n.includes(d[3])||(e[i++]=a,e[i++]=s,e[i++]=l)}}}return i},e.prototype._createErasedMesh=function(e,t){var r=new i.SkinnedMesh(e.geometry.clone(),e.material);r.name=e.name+"(erase)",r.frustumCulled=e.frustumCulled,r.layers.set(this._firstPersonOnlyLayer);for(var n=r.geometry,o=n.getAttribute("skinIndex").array,a=[],s=0;s<o.length;s+=4)a.push([o[s],o[s+1],o[s+2],o[s+3]]);var l=n.getAttribute("skinWeight").array,u=[];for(s=0;s<l.length;s+=4)u.push([l[s],l[s+1],l[s+2],l[s+3]]);var h=n.getIndex();if(!h)throw new Error("The geometry doesn't have an index buffer");var f=Array.from(h.array),c=this._excludeTriangles(f,u,a,t),p=[];for(s=0;s<c;s++)p[s]=f[s];return n.setIndex(p),e.onBeforeRender&&(r.onBeforeRender=e.onBeforeRender),r.bind(new i.Skeleton(e.skeleton.bones,e.skeleton.boneInverses),new i.Matrix4),r},e.prototype._createHeadlessModelForSkinnedMesh=function(e,t){var r=this,n=[];if(t.skeleton.bones.forEach((function(e,t){r._isEraseTarget(e)&&n.push(t)})),!n.length)return t.layers.enable(this._thirdPersonOnlyLayer),void t.layers.enable(this._firstPersonOnlyLayer);t.layers.set(this._thirdPersonOnlyLayer);var i=this._createErasedMesh(t,n);e.add(i)},e.prototype._createHeadlessModel=function(e){var t=this;if("Group"===e.type)if(e.layers.set(this._thirdPersonOnlyLayer),this._isEraseTarget(e))e.traverse((function(e){return e.layers.set(t._thirdPersonOnlyLayer)}));else{var r=new i.Group;r.name="_headless_"+e.name,r.layers.set(this._firstPersonOnlyLayer),e.parent.add(r),e.children.filter((function(e){return"SkinnedMesh"===e.type})).forEach((function(e){t._createHeadlessModelForSkinnedMesh(r,e)}))}else"SkinnedMesh"===e.type?this._createHeadlessModelForSkinnedMesh(e.parent,e):this._isEraseTarget(e)&&(e.layers.set(this._thirdPersonOnlyLayer),e.traverse((function(e){return e.layers.set(t._thirdPersonOnlyLayer)})))},e.prototype._isEraseTarget=function(e){return e.name===this._firstPersonBone.name||!!e.parent&&this._isEraseTarget(e.parent)},e._DEFAULT_FIRSTPERSON_ONLY_LAYER=9,e._DEFAULT_THIRDPERSON_ONLY_LAYER=10,e}();t.VRMFirstPerson=u},function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{l(n.next(e))}catch(e){o(e)}}function s(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.VRMHumanoidImporter=void 0;var o=r(0),a=r(17),s=r(18),l=function(){function e(){}return e.prototype.import=function(e){return n(this,void 0,Promise,(function(){var t,r,l,u,h=this;return i(this,(function(f){switch(f.label){case 0:return(t=e.parser.json.extensions&&e.parser.json.extensions.VRM)&&(r=t.humanoid)?(l=[],r.humanBones?[4,Promise.all(r.humanBones.map((function(t){return n(h,void 0,void 0,(function(){var r;return i(this,(function(n){switch(n.label){case 0:return t.bone&&t.node?[4,e.parser.getDependency("node",t.node)]:[2];case 1:return r=n.sent(),l.push({name:t.bone,bone:new a.VRMHumanBone(r,{axisLength:t.axisLength,center:t.center&&new o.Vector3(t.center.x,t.center.y,t.center.z),max:t.max&&new o.Vector3(t.max.x,t.max.y,t.max.z),min:t.min&&new o.Vector3(t.min.x,t.min.y,t.min.z),useDefaultValues:t.useDefaultValues})}),[2]}}))}))})))]:[3,2]):[2,null];case 1:f.sent(),f.label=2;case 2:return u={armStretch:r.armStretch,legStretch:r.legStretch,upperArmTwist:r.upperArmTwist,lowerArmTwist:r.lowerArmTwist,upperLegTwist:r.upperLegTwist,lowerLegTwist:r.lowerLegTwist,feetSpacing:r.feetSpacing,hasTranslationDoF:r.hasTranslationDoF},[2,new s.VRMHumanoid(l,u)]}}))}))},e}();t.VRMHumanoidImporter=l},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VRMHumanBone=void 0,t.VRMHumanBone=function(e,t){this.node=e,this.humanLimit=t}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VRMHumanoid=void 0;var n=r(1),i=function(){function e(e,t){this.humanBones=this._createHumanBones(e),this.humanDescription=t,this.restPose=this.getPose()}return e.prototype.getPose=function(){var e=this,t={};return Object.keys(this.humanBones).forEach((function(r){var n=e.getBoneNode(r);n&&(t[r]||(t[r]={position:n.position.toArray(),rotation:n.quaternion.toArray()}))}),{}),t},e.prototype.setPose=function(e){var t=this;Object.keys(e).forEach((function(r){var n=e[r],i=t.getBoneNode(r);if(i){var o=t.restPose[r];o&&(n.position&&i.position.set(o.position[0]+n.position[0],o.position[1]+n.position[1],o.position[2]+n.position[2]),n.rotation&&i.quaternion.fromArray(n.rotation))}}))},e.prototype.getBone=function(e){return this.humanBones[e][0]||void 0},e.prototype.getBones=function(e){return this.humanBones[e]},e.prototype.getBoneNode=function(e){return this.humanBones[e][0]&&this.humanBones[e][0].node||null},e.prototype.getBoneNodes=function(e){return this.humanBones[e].map((function(e){return e.node}))},e.prototype._createHumanBones=function(e){var t=Object.values(n.VRMSchema.HumanoidBoneName).reduce((function(e,t){return e[t]=[],e}),{});return e.forEach((function(e){t[e.name].push(e.bone)})),t},e}();t.VRMHumanoid=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VRMCurveMapper=void 0;var n=function(){function e(e,t,r){this.curve=[0,0,0,1,1,1,1,0],this.curveXRangeDegree=90,this.curveYRangeDegree=10,void 0!==e&&(this.curveXRangeDegree=e),void 0!==t&&(this.curveYRangeDegree=t),void 0!==r&&(this.curve=r)}return e.prototype.map=function(e){var t=Math.min(Math.max(e,0),this.curveXRangeDegree)/this.curveXRangeDegree;return this.curveYRangeDegree*function(e,t){if(e.length<8)throw new Error("evaluateCurve: Invalid curve detected! (Array length must be 8 at least)");if(e.length%4!=0)throw new Error("evaluateCurve: Invalid curve detected! (Array length must be multiples of 4");var r;for(r=0;;r++){if(e.length<=4*r)return e[4*r-3];if(t<=e[4*r])break}var n=r-1;if(n<0)return e[4*n+5];var i=e[4*n],o=(t-i)/(e[4*r]-i);return function(e,t,r,n,i){var o=i*i*i,a=i*i;return e+(t-e)*(-2*o+3*a)+r*(o-2*a+i)+n*(o-a)}(e[4*n+1],e[4*r+1],e[4*n+3],e[4*r+2],o)}(this.curve,t)},e}();t.VRMCurveMapper=n},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.VRMLookAtBlendShapeApplyer=void 0;var o=r(1),a=function(e){function t(t,r,n,i){var a=e.call(this)||this;return a.type=o.VRMSchema.FirstPersonLookAtTypeName.BlendShape,a._curveHorizontal=r,a._curveVerticalDown=n,a._curveVerticalUp=i,a._blendShapeProxy=t,a}return i(t,e),t.prototype.name=function(){return o.VRMSchema.FirstPersonLookAtTypeName.BlendShape},t.prototype.lookAt=function(e){var t=e.x,r=e.y;t<0?(this._blendShapeProxy.setValue(o.VRMSchema.BlendShapePresetName.Lookup,0),this._blendShapeProxy.setValue(o.VRMSchema.BlendShapePresetName.Lookdown,this._curveVerticalDown.map(-t))):(this._blendShapeProxy.setValue(o.VRMSchema.BlendShapePresetName.Lookdown,0),this._blendShapeProxy.setValue(o.VRMSchema.BlendShapePresetName.Lookup,this._curveVerticalUp.map(t))),r<0?(this._blendShapeProxy.setValue(o.VRMSchema.BlendShapePresetName.Lookleft,0),this._blendShapeProxy.setValue(o.VRMSchema.BlendShapePresetName.Lookright,this._curveHorizontal.map(-r))):(this._blendShapeProxy.setValue(o.VRMSchema.BlendShapePresetName.Lookright,0),this._blendShapeProxy.setValue(o.VRMSchema.BlendShapePresetName.Lookleft,this._curveHorizontal.map(r)))},t}(r(8).VRMLookAtApplyer);t.VRMLookAtBlendShapeApplyer=a},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.VRMLookAtBoneApplyer=void 0;var o=r(0),a=r(1),s=r(8),l=r(3),u=new o.Euler(0,0,0,l.VRMLookAtHead.EULER_ORDER),h=function(e){function t(t,r,n,i,o){var s=e.call(this)||this;return s.type=a.VRMSchema.FirstPersonLookAtTypeName.Bone,s._curveHorizontalInner=r,s._curveHorizontalOuter=n,s._curveVerticalDown=i,s._curveVerticalUp=o,s._leftEye=t.getBoneNode(a.VRMSchema.HumanoidBoneName.LeftEye),s._rightEye=t.getBoneNode(a.VRMSchema.HumanoidBoneName.RightEye),s}return i(t,e),t.prototype.lookAt=function(e){var t=e.x,r=e.y;this._leftEye&&(u.x=t<0?-this._curveVerticalDown.map(-t):this._curveVerticalUp.map(t),u.y=r<0?-this._curveHorizontalInner.map(-r):this._curveHorizontalOuter.map(r),this._leftEye.quaternion.setFromEuler(u)),this._rightEye&&(u.x=t<0?-this._curveVerticalDown.map(-t):this._curveVerticalUp.map(t),u.y=r<0?-this._curveHorizontalOuter.map(-r):this._curveHorizontalInner.map(r),this._rightEye.quaternion.setFromEuler(u))},t}(s.VRMLookAtApplyer);t.VRMLookAtBoneApplyer=h},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(23),t),i(r(41),t),i(r(24),t)},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.MToonMaterial=t.MToonMaterialRenderMode=t.MToonMaterialOutlineWidthMode=t.MToonMaterialOutlineColorMode=t.MToonMaterialDebugMode=t.MToonMaterialCullMode=void 0;var o,a,s,l,u,h=r(0),f=r(38),c=r(39),p=r(40),d=2*Math.PI;!function(e){e[e.Off=0]="Off",e[e.Front=1]="Front",e[e.Back=2]="Back"}(o=t.MToonMaterialCullMode||(t.MToonMaterialCullMode={})),function(e){e[e.None=0]="None",e[e.Normal=1]="Normal",e[e.LitShadeRate=2]="LitShadeRate",e[e.UV=3]="UV"}(a=t.MToonMaterialDebugMode||(t.MToonMaterialDebugMode={})),function(e){e[e.FixedColor=0]="FixedColor",e[e.MixedLighting=1]="MixedLighting"}(s=t.MToonMaterialOutlineColorMode||(t.MToonMaterialOutlineColorMode={})),function(e){e[e.None=0]="None",e[e.WorldCoordinates=1]="WorldCoordinates",e[e.ScreenCoordinates=2]="ScreenCoordinates"}(l=t.MToonMaterialOutlineWidthMode||(t.MToonMaterialOutlineWidthMode={})),function(e){e[e.Opaque=0]="Opaque",e[e.Cutout=1]="Cutout",e[e.Transparent=2]="Transparent",e[e.TransparentWithZWrite=3]="TransparentWithZWrite"}(u=t.MToonMaterialRenderMode||(t.MToonMaterialRenderMode={}));var v=function(e){function t(t){void 0===t&&(t={});var r=e.call(this)||this;return r.isMToonMaterial=!0,r.cutoff=.5,r.color=new h.Vector4(1,1,1,1),r.shadeColor=new h.Vector4(.97,.81,.86,1),r.map=null,r.mainTex_ST=new h.Vector4(0,0,1,1),r.shadeTexture=null,r.normalMap=null,r.normalMapType=h.TangentSpaceNormalMap,r.normalScale=new h.Vector2(1,1),r.receiveShadowRate=1,r.receiveShadowTexture=null,r.shadingGradeRate=1,r.shadingGradeTexture=null,r.shadeShift=0,r.shadeToony=.9,r.lightColorAttenuation=0,r.indirectLightIntensity=.1,r.rimTexture=null,r.rimColor=new h.Vector4(0,0,0,1),r.rimLightingMix=0,r.rimFresnelPower=1,r.rimLift=0,r.sphereAdd=null,r.emissionColor=new h.Vector4(0,0,0,1),r.emissiveMap=null,r.outlineWidthTexture=null,r.outlineWidth=.5,r.outlineScaledMaxDistance=1,r.outlineColor=new h.Vector4(0,0,0,1),r.outlineLightingMix=1,r.uvAnimMaskTexture=null,r.uvAnimScrollX=0,r.uvAnimScrollY=0,r.uvAnimRotation=0,r.shouldApplyUniforms=!0,r._debugMode=a.None,r._blendMode=u.Opaque,r._outlineWidthMode=l.None,r._outlineColorMode=s.FixedColor,r._cullMode=o.Back,r._outlineCullMode=o.Front,r._isOutline=!1,r._uvAnimOffsetX=0,r._uvAnimOffsetY=0,r._uvAnimPhase=0,r.encoding=t.encoding||h.LinearEncoding,r.encoding!==h.LinearEncoding&&r.encoding!==h.sRGBEncoding&&console.warn("The specified color encoding does not work properly with MToonMaterial. You might want to use THREE.sRGBEncoding instead."),["mToonVersion","shadeTexture_ST","bumpMap_ST","receiveShadowTexture_ST","shadingGradeTexture_ST","rimTexture_ST","sphereAdd_ST","emissionMap_ST","outlineWidthTexture_ST","uvAnimMaskTexture_ST","srcBlend","dstBlend"].forEach((function(e){void 0!==t[e]&&delete t[e]})),t.fog=!0,t.lights=!0,t.clipping=!0,t.skinning=t.skinning||!1,t.morphTargets=t.morphTargets||!1,t.morphNormals=t.morphNormals||!1,t.uniforms=h.UniformsUtils.merge([h.UniformsLib.common,h.UniformsLib.normalmap,h.UniformsLib.emissivemap,h.UniformsLib.fog,h.UniformsLib.lights,{cutoff:{value:.5},color:{value:new h.Color(1,1,1)},colorAlpha:{value:1},shadeColor:{value:new h.Color(.97,.81,.86)},mainTex_ST:{value:new h.Vector4(0,0,1,1)},shadeTexture:{value:null},receiveShadowRate:{value:1},receiveShadowTexture:{value:null},shadingGradeRate:{value:1},shadingGradeTexture:{value:null},shadeShift:{value:0},shadeToony:{value:.9},lightColorAttenuation:{value:0},indirectLightIntensity:{value:.1},rimTexture:{value:null},rimColor:{value:new h.Color(0,0,0)},rimLightingMix:{value:0},rimFresnelPower:{value:1},rimLift:{value:0},sphereAdd:{value:null},emissionColor:{value:new h.Color(0,0,0)},outlineWidthTexture:{value:null},outlineWidth:{value:.5},outlineScaledMaxDistance:{value:1},outlineColor:{value:new h.Color(0,0,0)},outlineLightingMix:{value:1},uvAnimMaskTexture:{value:null},uvAnimOffsetX:{value:0},uvAnimOffsetY:{value:0},uvAnimTheta:{value:0}}]),r.setValues(t),r._updateShaderCode(),r._applyUniforms(),r}return i(t,e),Object.defineProperty(t.prototype,"mainTex",{get:function(){return this.map},set:function(e){this.map=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"bumpMap",{get:function(){return this.normalMap},set:function(e){this.normalMap=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"bumpScale",{get:function(){return this.normalScale.x},set:function(e){this.normalScale.set(e,e)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"emissionMap",{get:function(){return this.emissiveMap},set:function(e){this.emissiveMap=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"blendMode",{get:function(){return this._blendMode},set:function(e){this._blendMode=e,this.depthWrite=this._blendMode!==u.Transparent,this.transparent=this._blendMode===u.Transparent||this._blendMode===u.TransparentWithZWrite,this._updateShaderCode()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"debugMode",{get:function(){return this._debugMode},set:function(e){this._debugMode=e,this._updateShaderCode()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"outlineWidthMode",{get:function(){return this._outlineWidthMode},set:function(e){this._outlineWidthMode=e,this._updateShaderCode()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"outlineColorMode",{get:function(){return this._outlineColorMode},set:function(e){this._outlineColorMode=e,this._updateShaderCode()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"cullMode",{get:function(){return this._cullMode},set:function(e){this._cullMode=e,this._updateCullFace()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"outlineCullMode",{get:function(){return this._outlineCullMode},set:function(e){this._outlineCullMode=e,this._updateCullFace()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"zWrite",{get:function(){return this.depthWrite?1:0},set:function(e){this.depthWrite=.5<=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isOutline",{get:function(){return this._isOutline},set:function(e){this._isOutline=e,this._updateShaderCode(),this._updateCullFace()},enumerable:!1,configurable:!0}),t.prototype.updateVRMMaterials=function(e){this._uvAnimOffsetX=this._uvAnimOffsetX+e*this.uvAnimScrollX,this._uvAnimOffsetY=this._uvAnimOffsetY+e*this.uvAnimScrollY,this._uvAnimPhase=this._uvAnimPhase+e*this.uvAnimRotation,this._applyUniforms()},t.prototype.copy=function(t){return e.prototype.copy.call(this,t),this.cutoff=t.cutoff,this.color.copy(t.color),this.shadeColor.copy(t.shadeColor),this.map=t.map,this.mainTex_ST.copy(t.mainTex_ST),this.shadeTexture=t.shadeTexture,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(this.normalScale),this.receiveShadowRate=t.receiveShadowRate,this.receiveShadowTexture=t.receiveShadowTexture,this.shadingGradeRate=t.shadingGradeRate,this.shadingGradeTexture=t.shadingGradeTexture,this.shadeShift=t.shadeShift,this.shadeToony=t.shadeToony,this.lightColorAttenuation=t.lightColorAttenuation,this.indirectLightIntensity=t.indirectLightIntensity,this.rimTexture=t.rimTexture,this.rimColor.copy(t.rimColor),this.rimLightingMix=t.rimLightingMix,this.rimFresnelPower=t.rimFresnelPower,this.rimLift=t.rimLift,this.sphereAdd=t.sphereAdd,this.emissionColor.copy(t.emissionColor),this.emissiveMap=t.emissiveMap,this.outlineWidthTexture=t.outlineWidthTexture,this.outlineWidth=t.outlineWidth,this.outlineScaledMaxDistance=t.outlineScaledMaxDistance,this.outlineColor.copy(t.outlineColor),this.outlineLightingMix=t.outlineLightingMix,this.uvAnimMaskTexture=t.uvAnimMaskTexture,this.uvAnimScrollX=t.uvAnimScrollX,this.uvAnimScrollY=t.uvAnimScrollY,this.uvAnimRotation=t.uvAnimRotation,this.debugMode=t.debugMode,this.blendMode=t.blendMode,this.outlineWidthMode=t.outlineWidthMode,this.outlineColorMode=t.outlineColorMode,this.cullMode=t.cullMode,this.outlineCullMode=t.outlineCullMode,this.isOutline=t.isOutline,this},t.prototype._applyUniforms=function(){this.uniforms.uvAnimOffsetX.value=this._uvAnimOffsetX,this.uniforms.uvAnimOffsetY.value=this._uvAnimOffsetY,this.uniforms.uvAnimTheta.value=d*this._uvAnimPhase,this.shouldApplyUniforms&&(this.shouldApplyUniforms=!1,this.uniforms.cutoff.value=this.cutoff,this.uniforms.color.value.setRGB(this.color.x,this.color.y,this.color.z),this.uniforms.colorAlpha.value=this.color.w,this.uniforms.shadeColor.value.setRGB(this.shadeColor.x,this.shadeColor.y,this.shadeColor.z),this.uniforms.map.value=this.map,this.uniforms.mainTex_ST.value.copy(this.mainTex_ST),this.uniforms.shadeTexture.value=this.shadeTexture,this.uniforms.normalMap.value=this.normalMap,this.uniforms.normalScale.value.copy(this.normalScale),this.uniforms.receiveShadowRate.value=this.receiveShadowRate,this.uniforms.receiveShadowTexture.value=this.receiveShadowTexture,this.uniforms.shadingGradeRate.value=this.shadingGradeRate,this.uniforms.shadingGradeTexture.value=this.shadingGradeTexture,this.uniforms.shadeShift.value=this.shadeShift,this.uniforms.shadeToony.value=this.shadeToony,this.uniforms.lightColorAttenuation.value=this.lightColorAttenuation,this.uniforms.indirectLightIntensity.value=this.indirectLightIntensity,this.uniforms.rimTexture.value=this.rimTexture,this.uniforms.rimColor.value.setRGB(this.rimColor.x,this.rimColor.y,this.rimColor.z),this.uniforms.rimLightingMix.value=this.rimLightingMix,this.uniforms.rimFresnelPower.value=this.rimFresnelPower,this.uniforms.rimLift.value=this.rimLift,this.uniforms.sphereAdd.value=this.sphereAdd,this.uniforms.emissionColor.value.setRGB(this.emissionColor.x,this.emissionColor.y,this.emissionColor.z),this.uniforms.emissiveMap.value=this.emissiveMap,this.uniforms.outlineWidthTexture.value=this.outlineWidthTexture,this.uniforms.outlineWidth.value=this.outlineWidth,this.uniforms.outlineScaledMaxDistance.value=this.outlineScaledMaxDistance,this.uniforms.outlineColor.value.setRGB(this.outlineColor.x,this.outlineColor.y,this.outlineColor.z),this.uniforms.outlineLightingMix.value=this.outlineLightingMix,this.uniforms.uvAnimMaskTexture.value=this.uvAnimMaskTexture,this.encoding===h.sRGBEncoding&&(this.uniforms.color.value.convertSRGBToLinear(),this.uniforms.shadeColor.value.convertSRGBToLinear(),this.uniforms.rimColor.value.convertSRGBToLinear(),this.uniforms.emissionColor.value.convertSRGBToLinear(),this.uniforms.outlineColor.value.convertSRGBToLinear()),this._updateCullFace())},t.prototype._updateShaderCode=function(){this.defines={OUTLINE:this._isOutline,BLENDMODE_OPAQUE:this._blendMode===u.Opaque,BLENDMODE_CUTOUT:this._blendMode===u.Cutout,BLENDMODE_TRANSPARENT:this._blendMode===u.Transparent||this._blendMode===u.TransparentWithZWrite,USE_SHADETEXTURE:null!==this.shadeTexture,USE_RECEIVESHADOWTEXTURE:null!==this.receiveShadowTexture,USE_SHADINGGRADETEXTURE:null!==this.shadingGradeTexture,USE_RIMTEXTURE:null!==this.rimTexture,USE_SPHEREADD:null!==this.sphereAdd,USE_OUTLINEWIDTHTEXTURE:null!==this.outlineWidthTexture,USE_UVANIMMASKTEXTURE:null!==this.uvAnimMaskTexture,DEBUG_NORMAL:this._debugMode===a.Normal,DEBUG_LITSHADERATE:this._debugMode===a.LitShadeRate,DEBUG_UV:this._debugMode===a.UV,OUTLINE_WIDTH_WORLD:this._outlineWidthMode===l.WorldCoordinates,OUTLINE_WIDTH_SCREEN:this._outlineWidthMode===l.ScreenCoordinates,OUTLINE_COLOR_FIXED:this._outlineColorMode===s.FixedColor,OUTLINE_COLOR_MIXED:this._outlineColorMode===s.MixedLighting};var e=(null!==this.shadeTexture?f.getTexelDecodingFunction("shadeTextureTexelToLinear",this.shadeTexture.encoding)+"\n":"")+(null!==this.sphereAdd?f.getTexelDecodingFunction("sphereAddTexelToLinear",this.sphereAdd.encoding)+"\n":"")+(null!==this.rimTexture?f.getTexelDecodingFunction("rimTextureTexelToLinear",this.rimTexture.encoding)+"\n":"");this.vertexShader=c.default,this.fragmentShader=e+p.default,this.needsUpdate=!0},t.prototype._updateCullFace=function(){this.isOutline?this.outlineCullMode===o.Off?this.side=h.DoubleSide:this.outlineCullMode===o.Front?this.side=h.BackSide:this.outlineCullMode===o.Back&&(this.side=h.FrontSide):this.cullMode===o.Off?this.side=h.DoubleSide:this.cullMode===o.Front?this.side=h.BackSide:this.cullMode===o.Back&&(this.side=h.FrontSide)},t}(h.ShaderMaterial);t.MToonMaterial=v},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.VRMUnlitMaterial=t.VRMUnlitMaterialRenderType=void 0;var o,a=r(0),s=r(42),l=r(43);!function(e){e[e.Opaque=0]="Opaque",e[e.Cutout=1]="Cutout",e[e.Transparent=2]="Transparent",e[e.TransparentWithZWrite=3]="TransparentWithZWrite"}(o=t.VRMUnlitMaterialRenderType||(t.VRMUnlitMaterialRenderType={}));var u=function(e){function t(t){var r=e.call(this)||this;return r.isVRMUnlitMaterial=!0,r.cutoff=.5,r.map=null,r.mainTex_ST=new a.Vector4(0,0,1,1),r._renderType=o.Opaque,r.shouldApplyUniforms=!0,void 0===t&&(t={}),t.fog=!0,t.clipping=!0,t.skinning=t.skinning||!1,t.morphTargets=t.morphTargets||!1,t.morphNormals=t.morphNormals||!1,t.uniforms=a.UniformsUtils.merge([a.UniformsLib.common,a.UniformsLib.fog,{cutoff:{value:.5},mainTex_ST:{value:new a.Vector4(0,0,1,1)}}]),r.setValues(t),r._updateShaderCode(),r._applyUniforms(),r}return i(t,e),Object.defineProperty(t.prototype,"mainTex",{get:function(){return this.map},set:function(e){this.map=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"renderType",{get:function(){return this._renderType},set:function(e){this._renderType=e,this.depthWrite=this._renderType!==o.Transparent,this.transparent=this._renderType===o.Transparent||this._renderType===o.TransparentWithZWrite,this._updateShaderCode()},enumerable:!1,configurable:!0}),t.prototype.updateVRMMaterials=function(e){this._applyUniforms()},t.prototype.copy=function(t){return e.prototype.copy.call(this,t),this.cutoff=t.cutoff,this.map=t.map,this.mainTex_ST.copy(t.mainTex_ST),this.renderType=t.renderType,this},t.prototype._applyUniforms=function(){this.shouldApplyUniforms&&(this.shouldApplyUniforms=!1,this.uniforms.cutoff.value=this.cutoff,this.uniforms.map.value=this.map,this.uniforms.mainTex_ST.value.copy(this.mainTex_ST))},t.prototype._updateShaderCode=function(){this.defines={RENDERTYPE_OPAQUE:this._renderType===o.Opaque,RENDERTYPE_CUTOUT:this._renderType===o.Cutout,RENDERTYPE_TRANSPARENT:this._renderType===o.Transparent||this._renderType===o.TransparentWithZWrite},this.vertexShader=s.default,this.fragmentShader=l.default,this.needsUpdate=!0},t}(a.ShaderMaterial);t.VRMUnlitMaterial=u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VRMSpringBone=void 0;var n=r(0),i=r(2),o=Object.freeze(new n.Matrix4),a=Object.freeze(new n.Quaternion),s=new n.Vector3,l=new n.Vector3,u=new n.Vector3,h=new n.Quaternion,f=new n.Matrix4,c=new n.Matrix4,p=function(){function e(e,t,r,i,o,a,l){var u=this;void 0===l&&(l=[]),this.bone=e,this.bone.matrixAutoUpdate=!1,this.radius=t,this.stiffnessForce=r,this.gravityDir=(new n.Vector3).copy(i),this.gravityPower=o,this.dragForce=a,this.colliders=l,this._worldPosition=(new n.Vector3).setFromMatrixPosition(this.bone.matrixWorld),this._parentWorldRotation=new n.Quaternion,this._initialLocalMatrix=this.bone.matrix.clone(),this._initialLocalRotation=this.bone.quaternion.clone(),this._initialLocalChildPosition=0===u.bone.children.length?u.bone.position.clone().normalize().multiplyScalar(.07):u.bone.children[0].position.clone(),this._currentTail=this.bone.localToWorld(this._initialLocalChildPosition.clone()),this._prevTail=this._currentTail.clone(),this._nextTail=this._currentTail.clone(),this._boneAxis=this._initialLocalChildPosition.clone().normalize(),this._worldBoneLength=this.bone.localToWorld(s.copy(this._initialLocalChildPosition)).sub(this._worldPosition).length()}return e.prototype.reset=function(){this.bone.quaternion.copy(this._initialLocalRotation),this.bone.updateMatrix(),this.bone.matrixWorld.multiplyMatrices(this._getParentMatrixWorld(),this.bone.matrix),this._worldPosition.setFromMatrixPosition(this.bone.matrixWorld),this.bone.localToWorld(this._currentTail.copy(this._initialLocalChildPosition)),this._prevTail.copy(this._currentTail),this._nextTail.copy(this._currentTail)},e.prototype.update=function(e){if(!(e<=0)){this.bone.matrixWorld.multiplyMatrices(this._getParentMatrixWorld(),this.bone.matrix),this.bone.parent?i.getWorldQuaternionLite(this.bone.parent,this._parentWorldRotation):this._parentWorldRotation.copy(a),this._worldPosition.setFromMatrixPosition(this.bone.matrixWorld);var t=this.stiffnessForce*e,r=l.copy(this.gravityDir).multiplyScalar(this.gravityPower*e);this._nextTail.copy(this._currentTail).add(s.copy(this._currentTail).sub(this._prevTail).multiplyScalar(1-this.dragForce)).add(s.copy(this._boneAxis).applyMatrix4(this._initialLocalMatrix).applyMatrix4(this._getParentMatrixWorld()).sub(this._worldPosition).normalize().multiplyScalar(t)).add(r),this._nextTail.sub(this._worldPosition).normalize().multiplyScalar(this._worldBoneLength).add(this._worldPosition),this._collision(this._nextTail),this._prevTail.copy(this._currentTail),this._currentTail.copy(this._nextTail);var n=f.getInverse(c.copy(this._getParentMatrixWorld()).multiply(this._initialLocalMatrix)),o=h.setFromUnitVectors(this._boneAxis,s.copy(this._nextTail).applyMatrix4(n).normalize());this.bone.quaternion.copy(this._initialLocalRotation).multiply(o),this.bone.updateMatrix(),this.bone.matrixWorld.multiplyMatrices(this._getParentMatrixWorld(),this.bone.matrix)}},e.prototype._collision=function(e){var t=this;this.colliders.forEach((function(r){var n=s.setFromMatrixPosition(r.matrixWorld),i=r.geometry.boundingSphere.radius,o=t.radius+i;if(e.distanceToSquared(n)<=o*o){var a=l.subVectors(e,n).normalize(),h=u.addVectors(n,a.multiplyScalar(o));e.copy(h.sub(t._worldPosition).normalize().multiplyScalar(t._worldBoneLength).add(t._worldPosition))}}))},e.prototype._getParentMatrixWorld=function(){return this.bone.parent?this.bone.parent.matrixWorld:o},e}();t.VRMSpringBone=p},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VRMSpringBoneManager=void 0;var n=function(){function e(e,t){this.colliderGroups=[],this.springBoneGroupList=[],this.colliderGroups=e,this.springBoneGroupList=t}return e.prototype.lateUpdate=function(e){this.springBoneGroupList.forEach((function(t){t.forEach((function(t){t.update(e)}))}))},e.prototype.reset=function(){this.springBoneGroupList.forEach((function(e){e.forEach((function(e){e.reset()}))}))},e}();t.VRMSpringBoneManager=n},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{l(n.next(e))}catch(e){o(e)}}function s(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.VRMSpringBoneImporterDebug=void 0;var s=r(9),l=r(51),u=r(28),h=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.import=function(e){return o(this,void 0,Promise,(function(){var t,r,n,i;return a(this,(function(o){switch(o.label){case 0:return(t=e.parser.json.extensions&&e.parser.json.extensions.VRM)&&(r=t.secondaryAnimation)?[4,this._importColliderMeshGroups(e,r)]:[2,null];case 1:return n=o.sent(),[4,this._importSpringBoneGroupList(e,r,n)];case 2:return i=o.sent(),[2,new l.VRMSpringBoneManagerDebug(n,i)]}}))}))},t.prototype._createSpringBone=function(e,t,r,n,i,o,a){return void 0===a&&(a=[]),new u.VRMSpringBoneDebug(e,t,r,n,i,o,a)},t}(s.VRMSpringBoneImporter);t.VRMSpringBoneImporterDebug=h},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.VRMSpringBoneDebug=void 0;var o=r(0),a=r(10),s=r(4),l=new o.Vector3,u=function(e){function t(t,r,n,i,o,a,s){return void 0===s&&(s=[]),e.call(this,t,r,n,i,o,a,s)||this}return i(t,e),t.prototype.getGizmo=function(){if(this._gizmo)return this._gizmo;var e=l.copy(this._nextTail).sub(this._worldPosition),t=e.length();return this._gizmo=new o.ArrowHelper(e.normalize(),this._worldPosition,t,16776960,this.radius,this.radius),this._gizmo.line.renderOrder=s.VRM_GIZMO_RENDER_ORDER,this._gizmo.cone.renderOrder=s.VRM_GIZMO_RENDER_ORDER,this._gizmo.line.material.depthTest=!1,this._gizmo.line.material.transparent=!0,this._gizmo.cone.material.depthTest=!1,this._gizmo.cone.material.transparent=!0,this._gizmo},t.prototype.update=function(t){e.prototype.update.call(this,t),this._updateGizmo()},t.prototype._updateGizmo=function(){if(this._gizmo){var e=l.copy(this._currentTail).sub(this._worldPosition),t=e.length();this._gizmo.setDirection(e.normalize()),this._gizmo.setLength(t,this.radius,this.radius),this._gizmo.position.copy(this._worldPosition)}},t}(a.VRMSpringBone);t.VRMSpringBoneDebug=u},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(30),t)},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(5),t),i(r(6),t),i(r(44),t),i(r(11),t),i(r(46),t),i(r(14),t),i(r(53),t),i(r(57),t),i(r(10),t),i(r(1),t),i(r(22),t)},function(e,t,r){"use strict";function n(e){Object.keys(e).forEach((function(t){var r=e[t];r&&r.isTexture&&r.dispose()})),e.dispose()}function i(e){var t=e.geometry;t&&t.dispose();var r=e.material;r&&(Array.isArray(r)?r.forEach((function(e){return n(e)})):r&&n(r))}Object.defineProperty(t,"__esModule",{value:!0}),t.deepDispose=void 0,t.deepDispose=function(e){e.traverse(i)}},function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{l(n.next(e))}catch(e){o(e)}}function s(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.VRMBlendShapeImporter=void 0;var o=r(1),a=r(36),s=r(12),l=r(13),u=function(){function e(){}return e.prototype.import=function(e){return n(this,void 0,Promise,(function(){var t,r,u,h,f,c=this;return i(this,(function(p){switch(p.label){case 0:return(t=e.parser.json.extensions&&e.parser.json.extensions.VRM)&&(r=t.blendShapeMaster)?(u=new l.VRMBlendShapeProxy,(h=r.blendShapeGroups)?(f={},[4,Promise.all(h.map((function(t){return n(c,void 0,void 0,(function(){var r,l,h,c,p=this;return i(this,(function(d){return void 0===(r=t.name)?(console.warn("VRMBlendShapeImporter: One of blendShapeGroups has no name"),[2]):(t.presetName&&t.presetName!==o.VRMSchema.BlendShapePresetName.Unknown&&!f[t.presetName]&&(l=t.presetName,f[t.presetName]=r),h=new s.VRMBlendShapeGroup(r),e.scene.add(h),h.isBinary=t.isBinary||!1,t.binds&&t.binds.forEach((function(r){return n(p,void 0,void 0,(function(){var n,o,a;return i(this,(function(i){switch(i.label){case 0:return void 0===r.mesh||void 0===r.index?[2]:[4,e.parser.getDependency("mesh",r.mesh)];case 1:return n=i.sent(),o="Group"===n.type?n.children:[n],a=r.index,o.every((function(e){return Array.isArray(e.morphTargetInfluences)&&a<e.morphTargetInfluences.length}))?(h.addBind({meshes:o,morphTargetIndex:a,weight:r.weight||100}),[2]):(console.warn("VRMBlendShapeImporter: "+t.name+" attempts to index "+a+"th morph but not found."),[2])}}))}))})),(c=t.materialValues)&&c.forEach((function(t){if(void 0!==t.materialName&&void 0!==t.propertyName&&void 0!==t.targetValue){var r=[];e.scene.traverse((function(e){if(e.material){var n=e.material;Array.isArray(n)?r.push.apply(r,n.filter((function(e){return e.name===t.materialName&&-1===r.indexOf(e)}))):n.name===t.materialName&&-1===r.indexOf(n)&&r.push(n)}})),r.forEach((function(e){h.addMaterialValue({material:e,propertyName:a.renameMaterialProperty(t.propertyName),targetValue:t.targetValue})}))}})),u.registerBlendShapeGroup(r,l,h),[2])}))}))})))]):[2,u]):[2,null];case 1:return p.sent(),[2,u]}}))}))},e}();t.VRMBlendShapeImporter=u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VRMSchema=void 0,function(e){!function(e){e.A="a",e.Angry="angry",e.Blink="blink",e.BlinkL="blink_l",e.BlinkR="blink_r",e.E="e",e.Fun="fun",e.I="i",e.Joy="joy",e.Lookdown="lookdown",e.Lookleft="lookleft",e.Lookright="lookright",e.Lookup="lookup",e.Neutral="neutral",e.O="o",e.Sorrow="sorrow",e.U="u",e.Unknown="unknown"}(e.BlendShapePresetName||(e.BlendShapePresetName={})),function(e){e.BlendShape="BlendShape",e.Bone="Bone"}(e.FirstPersonLookAtTypeName||(e.FirstPersonLookAtTypeName={})),function(e){e.Chest="chest",e.Head="head",e.Hips="hips",e.Jaw="jaw",e.LeftEye="leftEye",e.LeftFoot="leftFoot",e.LeftHand="leftHand",e.LeftIndexDistal="leftIndexDistal",e.LeftIndexIntermediate="leftIndexIntermediate",e.LeftIndexProximal="leftIndexProximal",e.LeftLittleDistal="leftLittleDistal",e.LeftLittleIntermediate="leftLittleIntermediate",e.LeftLittleProximal="leftLittleProximal",e.LeftLowerArm="leftLowerArm",e.LeftLowerLeg="leftLowerLeg",e.LeftMiddleDistal="leftMiddleDistal",e.LeftMiddleIntermediate="leftMiddleIntermediate",e.LeftMiddleProximal="leftMiddleProximal",e.LeftRingDistal="leftRingDistal",e.LeftRingIntermediate="leftRingIntermediate",e.LeftRingProximal="leftRingProximal",e.LeftShoulder="leftShoulder",e.LeftThumbDistal="leftThumbDistal",e.LeftThumbIntermediate="leftThumbIntermediate",e.LeftThumbProximal="leftThumbProximal",e.LeftToes="leftToes",e.LeftUpperArm="leftUpperArm",e.LeftUpperLeg="leftUpperLeg",e.Neck="neck",e.RightEye="rightEye",e.RightFoot="rightFoot",e.RightHand="rightHand",e.RightIndexDistal="rightIndexDistal",e.RightIndexIntermediate="rightIndexIntermediate",e.RightIndexProximal="rightIndexProximal",e.RightLittleDistal="rightLittleDistal",e.RightLittleIntermediate="rightLittleIntermediate",e.RightLittleProximal="rightLittleProximal",e.RightLowerArm="rightLowerArm",e.RightLowerLeg="rightLowerLeg",e.RightMiddleDistal="rightMiddleDistal",e.RightMiddleIntermediate="rightMiddleIntermediate",e.RightMiddleProximal="rightMiddleProximal",e.RightRingDistal="rightRingDistal",e.RightRingIntermediate="rightRingIntermediate",e.RightRingProximal="rightRingProximal",e.RightShoulder="rightShoulder",e.RightThumbDistal="rightThumbDistal",e.RightThumbIntermediate="rightThumbIntermediate",e.RightThumbProximal="rightThumbProximal",e.RightToes="rightToes",e.RightUpperArm="rightUpperArm",e.RightUpperLeg="rightUpperLeg",e.Spine="spine",e.UpperChest="upperChest"}(e.HumanoidBoneName||(e.HumanoidBoneName={})),function(e){e.Everyone="Everyone",e.ExplicitlyLicensedPerson="ExplicitlyLicensedPerson",e.OnlyAuthor="OnlyAuthor"}(e.MetaAllowedUserName||(e.MetaAllowedUserName={})),function(e){e.Allow="Allow",e.Disallow="Disallow"}(e.MetaUssageName||(e.MetaUssageName={})),function(e){e.Cc0="CC0",e.CcBy="CC_BY",e.CcByNc="CC_BY_NC",e.CcByNcNd="CC_BY_NC_ND",e.CcByNcSa="CC_BY_NC_SA",e.CcByNd="CC_BY_ND",e.CcBySa="CC_BY_SA",e.Other="Other",e.RedistributionProhibited="Redistribution_Prohibited"}(e.MetaLicenseName||(e.MetaLicenseName={}))}(t.VRMSchema||(t.VRMSchema={}))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.renameMaterialProperty=void 0,t.renameMaterialProperty=function(e){return"_"!==e[0]?(console.warn('renameMaterialProperty: Given property name "'+e+'" might be invalid'),e):(e=e.substring(1),/[A-Z]/.test(e[0])?e[0].toLowerCase()+e.substring(1):(console.warn('renameMaterialProperty: Given property name "'+e+'" might be invalid'),e))}},function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{l(n.next(e))}catch(e){o(e)}}function s(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.VRMFirstPersonImporter=void 0;var o=r(0),a=r(1),s=r(15),l=function(){function e(){}return e.prototype.import=function(e,t){return n(this,void 0,Promise,(function(){var r,n,l,u,h,f;return i(this,(function(i){switch(i.label){case 0:return(r=e.parser.json.extensions&&e.parser.json.extensions.VRM)&&(n=r.firstPerson)?void 0!==(l=n.firstPersonBone)&&-1!==l?[3,1]:(u=t.getBoneNode(a.VRMSchema.HumanoidBoneName.Head),[3,3]):[2,null];case 1:return[4,e.parser.getDependency("node",l)];case 2:u=i.sent(),i.label=3;case 3:return u?(h=n.firstPersonBoneOffset?new o.Vector3(n.firstPersonBoneOffset.x,n.firstPersonBoneOffset.y,-n.firstPersonBoneOffset.z):new o.Vector3(0,.06,0),f=[],[4,e.parser.getDependencies("mesh")]):(console.warn("VRMFirstPersonImporter: Could not find firstPersonBone of the VRM"),[2,null]);case 4:return i.sent().forEach((function(e,t){var r=n.meshAnnotations?n.meshAnnotations.find((function(e){return e.mesh===t})):void 0;f.push(new s.VRMRendererFirstPersonFlags(r&&r.firstPersonFlag,e))})),[2,new s.VRMFirstPerson(u,h,f)]}}))}))},e}();t.VRMFirstPersonImporter=l},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getTexelDecodingFunction=t.getEncodingComponents=void 0;var n=r(0);t.getEncodingComponents=function(e){switch(e){case n.LinearEncoding:return["Linear","( value )"];case n.sRGBEncoding:return["sRGB","( value )"];case n.RGBEEncoding:return["RGBE","( value )"];case n.RGBM7Encoding:return["RGBM","( value, 7.0 )"];case n.RGBM16Encoding:return["RGBM","( value, 16.0 )"];case n.RGBDEncoding:return["RGBD","( value, 256.0 )"];case n.GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+e)}},t.getTexelDecodingFunction=function(e,r){var n=t.getEncodingComponents(r);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}},function(e,t,r){"use strict";r.r(t),t.default="// #define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n  varying vec3 vNormal;\n#endif\n\n#include <common>\n\n// #include <uv_pars_vertex>\n#if defined( USE_MAP ) || defined( USE_SHADETEXTURE ) || defined( USE_NORMALMAP ) || defined( USE_RECEIVESHADOWTEXTURE ) || defined( USE_SHADINGGRADETEXTURE ) || defined( USE_RIMTEXTURE ) || defined( USE_EMISSIVEMAP ) || defined( USE_OUTLINEWIDTHTEXTURE ) || defined( USE_UVANIMMASKTEXTURE )\n  varying vec2 vUv;\n  uniform vec4 mainTex_ST;\n#endif\n\n#include <uv2_pars_vertex>\n// #include <displacementmap_pars_vertex>\n// #include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n#ifdef USE_OUTLINEWIDTHTEXTURE\n  uniform sampler2D outlineWidthTexture;\n#endif\n\nuniform float outlineWidth;\nuniform float outlineScaledMaxDistance;\n\nvoid main() {\n\n  // #include <uv_vertex>\n  #if defined( USE_MAP ) || defined( USE_SHADETEXTURE ) || defined( USE_NORMALMAP ) || defined( USE_RECEIVESHADOWTEXTURE ) || defined( USE_SHADINGGRADETEXTURE ) || defined( USE_RIMTEXTURE ) || defined( USE_EMISSIVEMAP ) || defined( USE_OUTLINEWIDTHTEXTURE ) || defined( USE_UVANIMMASKTEXTURE )\n    vUv = vec2( mainTex_ST.p * uv.x + mainTex_ST.s, mainTex_ST.q * uv.y + mainTex_ST.t );\n  #endif\n\n  #include <uv2_vertex>\n  #include <color_vertex>\n\n  #include <beginnormal_vertex>\n  #include <morphnormal_vertex>\n  #include <skinbase_vertex>\n  #include <skinnormal_vertex>\n\n  // we need this to compute the outline properly\n  objectNormal = normalize( objectNormal );\n\n  #include <defaultnormal_vertex>\n\n  #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n    vNormal = normalize( transformedNormal );\n  #endif\n\n  #include <begin_vertex>\n\n  #include <morphtarget_vertex>\n  #include <skinning_vertex>\n  // #include <displacementmap_vertex>\n  #include <project_vertex>\n  #include <logdepthbuf_vertex>\n  #include <clipping_planes_vertex>\n\n  vViewPosition = - mvPosition.xyz;\n\n  float outlineTex = 1.0;\n\n  #ifdef OUTLINE\n    #ifdef USE_OUTLINEWIDTHTEXTURE\n      outlineTex = texture2D( outlineWidthTexture, vUv ).r;\n    #endif\n\n    #ifdef OUTLINE_WIDTH_WORLD\n      float worldNormalLength = length( transformedNormal );\n      vec3 outlineOffset = 0.01 * outlineWidth * outlineTex * worldNormalLength * objectNormal;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( outlineOffset + transformed, 1.0 );\n    #endif\n\n    #ifdef OUTLINE_WIDTH_SCREEN\n      vec3 clipNormal = ( projectionMatrix * modelViewMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n      vec2 projectedNormal = normalize( clipNormal.xy );\n      projectedNormal *= min( gl_Position.w, outlineScaledMaxDistance );\n      projectedNormal.x *= projectionMatrix[ 0 ].x / projectionMatrix[ 1 ].y;\n      gl_Position.xy += 0.01 * outlineWidth * outlineTex * projectedNormal.xy;\n    #endif\n\n    gl_Position.z += 1E-6 * gl_Position.w; // anti-artifact magic\n  #endif\n\n  #include <worldpos_vertex>\n  // #include <envmap_vertex>\n  #include <shadowmap_vertex>\n  #include <fog_vertex>\n\n}"},function(e,t,r){"use strict";r.r(t),t.default="// #define PHONG\n\n#ifdef BLENDMODE_CUTOUT\n  uniform float cutoff;\n#endif\n\nuniform vec3 color;\nuniform float colorAlpha;\nuniform vec3 shadeColor;\n#ifdef USE_SHADETEXTURE\n  uniform sampler2D shadeTexture;\n#endif\n\nuniform float receiveShadowRate;\n#ifdef USE_RECEIVESHADOWTEXTURE\n  uniform sampler2D receiveShadowTexture;\n#endif\n\nuniform float shadingGradeRate;\n#ifdef USE_SHADINGGRADETEXTURE\n  uniform sampler2D shadingGradeTexture;\n#endif\n\nuniform float shadeShift;\nuniform float shadeToony;\nuniform float lightColorAttenuation;\nuniform float indirectLightIntensity;\n\n#ifdef USE_RIMTEXTURE\n  uniform sampler2D rimTexture;\n#endif\nuniform vec3 rimColor;\nuniform float rimLightingMix;\nuniform float rimFresnelPower;\nuniform float rimLift;\n\n#ifdef USE_SPHEREADD\n  uniform sampler2D sphereAdd;\n#endif\n\nuniform vec3 emissionColor;\n\nuniform vec3 outlineColor;\nuniform float outlineLightingMix;\n\n#ifdef USE_UVANIMMASKTEXTURE\n  uniform sampler2D uvAnimMaskTexture;\n#endif\n\nuniform float uvAnimOffsetX;\nuniform float uvAnimOffsetY;\nuniform float uvAnimTheta;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n\n// #include <uv_pars_fragment>\n#if defined( USE_MAP ) || defined( USE_SHADETEXTURE ) || defined( USE_NORMALMAP ) || defined( USE_RECEIVESHADOWTEXTURE ) || defined( USE_SHADINGGRADETEXTURE ) || defined( USE_RIMTEXTURE ) || defined( USE_EMISSIVEMAP ) || defined( USE_OUTLINEWIDTHTEXTURE ) || defined( USE_UVANIMMASKTEXTURE )\n  varying vec2 vUv;\n#endif\n\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n// #include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n// #include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n// #include <envmap_pars_fragment>\n// #include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n\n// #include <lights_phong_pars_fragment>\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n  varying vec3 vNormal;\n#endif\n\n#define Material_LightProbeLOD( material ) (0)\n\n#include <shadowmap_pars_fragment>\n// #include <bumpmap_pars_fragment>\n\n// #include <normalmap_pars_fragment>\n#ifdef USE_NORMALMAP\n\n  uniform sampler2D normalMap;\n  uniform vec2 normalScale;\n\n#endif\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n  uniform mat3 normalMatrix;\n\n#endif\n\n#if ! defined ( USE_TANGENT ) && defined ( TANGENTSPACE_NORMALMAP )\n\n  // Per-Pixel Tangent Space Normal Mapping\n  // http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n  // three-vrm specific change: it requires `uv` as an input in order to support uv scrolls\n\n  vec3 perturbNormal2Arb( vec2 uv, vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\n    // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n    vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n    vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n    vec2 st0 = dFdx( uv.st );\n    vec2 st1 = dFdy( uv.st );\n\n    float scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n    vec3 S = ( q0 * st1.t - q1 * st0.t ) * scale;\n    vec3 T = ( - q0 * st1.s + q1 * st0.s ) * scale;\n\n    // three-vrm specific change: Workaround for the issue that happens when delta of uv = 0.0\n    // TODO: Is this still required? Or shall I make a PR about it?\n\n    if ( length( S ) == 0.0 || length( T ) == 0.0 ) {\n      return surf_norm;\n    }\n\n    S = normalize( S );\n    T = normalize( T );\n    vec3 N = normalize( surf_norm );\n\n    #ifdef DOUBLE_SIDED\n\n      // Workaround for Adreno GPUs gl_FrontFacing bug. See #15850 and #10331\n\n      bool frontFacing = dot( cross( S, T ), N ) > 0.0;\n\n      mapN.xy *= ( float( frontFacing ) * 2.0 - 1.0 );\n\n    #else\n\n      mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n    #endif\n\n    mat3 tsn = mat3( S, T, N );\n    return normalize( tsn * mapN );\n\n  }\n\n#endif\n\n// #include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\n// == lighting stuff ===========================================================\nfloat getLightIntensity(\n  const in IncidentLight directLight,\n  const in GeometricContext geometry,\n  const in float shadow,\n  const in float shadingGrade\n) {\n  float lightIntensity = dot( geometry.normal, directLight.direction );\n  lightIntensity = 0.5 + 0.5 * lightIntensity;\n  lightIntensity = lightIntensity * shadow;\n  lightIntensity = lightIntensity * shadingGrade;\n  lightIntensity = lightIntensity * 2.0 - 1.0;\n  return shadeToony == 1.0\n    ? step( shadeShift, lightIntensity )\n    : smoothstep( shadeShift, shadeShift + ( 1.0 - shadeToony ), lightIntensity );\n}\n\nvec3 getLighting( const in vec3 lightColor ) {\n  vec3 lighting = lightColor;\n  lighting = mix(\n    lighting,\n    vec3( max( 0.001, max( lighting.x, max( lighting.y, lighting.z ) ) ) ),\n    lightColorAttenuation\n  );\n\n  #ifndef PHYSICALLY_CORRECT_LIGHTS\n    lighting *= PI;\n  #endif\n\n  return lighting;\n}\n\nvec3 getDiffuse(\n  const in vec3 lit,\n  const in vec3 shade,\n  const in float lightIntensity,\n  const in vec3 lighting\n) {\n  #ifdef DEBUG_LITSHADERATE\n    return vec3( BRDF_Diffuse_Lambert( lightIntensity * lighting ) );\n  #endif\n\n  return lighting * BRDF_Diffuse_Lambert( mix( shade, lit, lightIntensity ) );\n}\n\nvec3 calcDirectDiffuse(\n  const in vec2 uv,\n  const in vec3 lit,\n  const in vec3 shade,\n  in GeometricContext geometry,\n  inout ReflectedLight reflectedLight\n) {\n  IncidentLight directLight;\n  vec3 lightingSum = vec3( 0.0 );\n\n  float shadingGrade = 1.0;\n  #ifdef USE_SHADINGGRADETEXTURE\n    shadingGrade = 1.0 - shadingGradeRate * ( 1.0 - texture2D( shadingGradeTexture, uv ).r );\n  #endif\n\n  float receiveShadow = receiveShadowRate;\n  #ifdef USE_RECEIVESHADOWTEXTURE\n    receiveShadow *= texture2D( receiveShadowTexture, uv ).a;\n  #endif\n\n  #if ( NUM_POINT_LIGHTS > 0 )\n    PointLight pointLight;\n\n    #pragma unroll_loop\n    for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n      pointLight = pointLights[ i ];\n      getPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n      float atten = 1.0;\n      #ifdef USE_SHADOWMAP\n        atten = all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n      #endif\n\n      float shadow = 1.0 - receiveShadow * ( 1.0 - ( 0.5 + 0.5 * atten ) );\n      float lightIntensity = getLightIntensity( directLight, geometry, shadow, shadingGrade );\n      vec3 lighting = getLighting( directLight.color );\n      reflectedLight.directDiffuse += getDiffuse( lit, shade, lightIntensity, lighting );\n      lightingSum += lighting;\n    }\n  #endif\n\n  #if ( NUM_SPOT_LIGHTS > 0 )\n    SpotLight spotLight;\n\n    #pragma unroll_loop\n    for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n      spotLight = spotLights[ i ];\n      getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n      float atten = 1.0;\n      #ifdef USE_SHADOWMAP\n        atten = all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n      #endif\n\n      float shadow = 1.0 - receiveShadow * ( 1.0 - ( 0.5 + 0.5 * atten ) );\n      float lightIntensity = getLightIntensity( directLight, geometry, shadow, shadingGrade );\n      vec3 lighting = getLighting( directLight.color );\n      reflectedLight.directDiffuse += getDiffuse( lit, shade, lightIntensity, lighting );\n      lightingSum += lighting;\n    }\n  #endif\n\n  #if ( NUM_DIR_LIGHTS > 0 )\n    DirectionalLight directionalLight;\n\n    #pragma unroll_loop\n    for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n      directionalLight = directionalLights[ i ];\n      getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n      float atten = 1.0;\n      #ifdef USE_SHADOWMAP\n        atten = all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n      #endif\n\n      float shadow = 1.0 - receiveShadow * ( 1.0 - ( 0.5 + 0.5 * atten ) );\n      float lightIntensity = getLightIntensity( directLight, geometry, shadow, shadingGrade );\n      vec3 lighting = getLighting( directLight.color );\n      reflectedLight.directDiffuse += getDiffuse( lit, shade, lightIntensity, lighting );\n      lightingSum += lighting;\n    }\n  #endif\n\n  return lightingSum;\n}\n\n// == post correction ==========================================================\nvoid postCorrection() {\n  #include <tonemapping_fragment>\n  #include <encodings_fragment>\n  #include <fog_fragment>\n  #include <premultiplied_alpha_fragment>\n  #include <dithering_fragment>\n}\n\n// == main procedure ===========================================================\nvoid main() {\n  #include <clipping_planes_fragment>\n\n  vec2 uv = vec2(0.5, 0.5);\n\n  #if defined( USE_MAP ) || defined( USE_SHADETEXTURE ) || defined( USE_NORMALMAP ) || defined( USE_RECEIVESHADOWTEXTURE ) || defined( USE_SHADINGGRADETEXTURE ) || defined( USE_RIMTEXTURE ) || defined( USE_EMISSIVEMAP ) || defined( USE_OUTLINEWIDTHTEXTURE ) || defined( USE_UVANIMMASKTEXTURE )\n    uv = vUv;\n\n    float uvAnimMask = 1.0;\n    #ifdef USE_UVANIMMASKTEXTURE\n      uvAnimMask = texture2D( uvAnimMaskTexture, uv ).x;\n    #endif\n\n    uv = uv + vec2( uvAnimOffsetX, uvAnimOffsetY ) * uvAnimMask;\n    float uvRotCos = cos( uvAnimTheta * uvAnimMask );\n    float uvRotSin = sin( uvAnimTheta * uvAnimMask );\n    uv = mat2( uvRotCos, uvRotSin, -uvRotSin, uvRotCos ) * ( uv - 0.5 ) + 0.5;\n  #endif\n\n  #ifdef DEBUG_UV\n    gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n    #if defined( USE_MAP ) || defined( USE_SHADETEXTURE ) || defined( USE_NORMALMAP ) || defined( USE_RECEIVESHADOWTEXTURE ) || defined( USE_SHADINGGRADETEXTURE ) || defined( USE_RIMTEXTURE ) || defined( USE_EMISSIVEMAP ) || defined( USE_OUTLINEWIDTHTEXTURE ) || defined( USE_UVANIMMASKTEXTURE )\n      gl_FragColor = vec4( uv, 0.0, 1.0 );\n    #endif\n    return;\n  #endif\n\n  vec4 diffuseColor = vec4( color, colorAlpha );\n  ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n  vec3 totalEmissiveRadiance = emissionColor;\n\n  #include <logdepthbuf_fragment>\n\n  // #include <map_fragment>\n  #ifdef USE_MAP\n    diffuseColor *= mapTexelToLinear( texture2D( map, uv ) );\n  #endif\n\n  #include <color_fragment>\n  // #include <alphamap_fragment>\n\n  // -- MToon: alpha -----------------------------------------------------------\n  // #include <alphatest_fragment>\n  #ifdef BLENDMODE_CUTOUT\n    if ( diffuseColor.a <= cutoff ) { discard; }\n    diffuseColor.a = 1.0;\n  #endif\n\n  #ifdef BLENDMODE_OPAQUE\n    diffuseColor.a = 1.0;\n  #endif\n\n  #if defined( OUTLINE ) && defined( OUTLINE_COLOR_FIXED ) // omitting DebugMode\n    gl_FragColor = vec4( outlineColor, diffuseColor.a );\n    postCorrection();\n    return;\n  #endif\n\n  // #include <specularmap_fragment>\n  #include <normal_fragment_begin>\n\n  #ifdef OUTLINE\n    normal *= -1.0;\n  #endif\n\n  // #include <normal_fragment_maps>\n\n  #ifdef OBJECTSPACE_NORMALMAP\n\n    normal = texture2D( normalMap, uv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n    #ifdef FLIP_SIDED\n\n      normal = - normal;\n\n    #endif\n\n    #ifdef DOUBLE_SIDED\n\n      normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n    #endif\n\n    normal = normalize( normalMatrix * normal );\n\n  #elif defined( TANGENTSPACE_NORMALMAP )\n\n    vec3 mapN = texture2D( normalMap, uv ).xyz * 2.0 - 1.0;\n    mapN.xy *= normalScale;\n\n    #ifdef USE_TANGENT\n\n      normal = normalize( vTBN * mapN );\n\n    #else\n\n      normal = perturbNormal2Arb( uv, -vViewPosition, normal, mapN );\n\n    #endif\n\n  #endif\n\n  // #include <emissivemap_fragment>\n  #ifdef USE_EMISSIVEMAP\n    totalEmissiveRadiance *= emissiveMapTexelToLinear( texture2D( emissiveMap, uv ) ).rgb;\n  #endif\n\n  #ifdef DEBUG_NORMAL\n    gl_FragColor = vec4( 0.5 + 0.5 * normal, 1.0 );\n    return;\n  #endif\n\n  // -- MToon: lighting --------------------------------------------------------\n  // accumulation\n  // #include <lights_phong_fragment>\n  // #include <lights_fragment_begin>\n  vec3 lit = diffuseColor.rgb;\n  vec3 shade = shadeColor;\n  #ifdef USE_SHADETEXTURE\n    shade *= shadeTextureTexelToLinear( texture2D( shadeTexture, uv ) ).rgb;\n  #endif\n\n  GeometricContext geometry;\n\n  geometry.position = - vViewPosition;\n  geometry.normal = normal;\n  geometry.viewDir = normalize( vViewPosition );\n\n  vec3 lighting = calcDirectDiffuse( uv, diffuseColor.rgb, shade, geometry, reflectedLight );\n\n  vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n  #if ( NUM_HEMI_LIGHTS > 0 )\n    #pragma unroll_loop\n    for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n      irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n    }\n  #endif\n\n  // #include <lights_fragment_maps>\n  #ifdef USE_LIGHTMAP\n    vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).rgb * lightMapIntensity;\n    #ifndef PHYSICALLY_CORRECT_LIGHTS\n      lightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n    #endif\n    irradiance += lightMapIrradiance;\n  #endif\n\n  // #include <lights_fragment_end>\n  reflectedLight.indirectDiffuse += indirectLightIntensity * irradiance * BRDF_Diffuse_Lambert( lit );\n\n  // modulation\n  #include <aomap_fragment>\n\n  vec3 col = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\n  #if defined( OUTLINE ) && defined( OUTLINE_COLOR_MIXED )\n    gl_FragColor = vec4(\n      outlineColor.rgb * mix( vec3( 1.0 ), col, outlineLightingMix ),\n      diffuseColor.a\n    );\n    postCorrection();\n    return;\n  #endif\n\n  #ifdef DEBUG_LITSHADERATE\n    gl_FragColor = vec4( col, diffuseColor.a );\n    postCorrection();\n    return;\n  #endif\n\n  // -- MToon: parametric rim lighting -----------------------------------------\n  vec3 viewDir = normalize( vViewPosition );\n  vec3 rimMix = mix(vec3(1.0), lighting + indirectLightIntensity * irradiance, rimLightingMix);\n  vec3 rim = rimColor * pow( saturate( 1.0 - dot( viewDir, normal ) + rimLift ), rimFresnelPower );\n  #ifdef USE_RIMTEXTURE\n    rim *= rimTextureTexelToLinear( texture2D( rimTexture, uv ) ).rgb;\n  #endif\n  col += rim;\n\n  // -- MToon: additive matcap -------------------------------------------------\n  #ifdef USE_SPHEREADD\n    {\n      vec3 x = normalize( vec3( viewDir.z, 0.0, -viewDir.x ) );\n      vec3 y = cross( viewDir, x ); // guaranteed to be normalized\n      vec2 sphereUv = 0.5 + 0.5 * vec2( dot( x, normal ), -dot( y, normal ) );\n      vec3 matcap = sphereAddTexelToLinear( texture2D( sphereAdd, sphereUv ) ).xyz;\n      col += matcap;\n    }\n  #endif\n\n  // -- MToon: Emission --------------------------------------------------------\n  col += totalEmissiveRadiance;\n\n  // #include <envmap_fragment>\n\n  // -- Almost done! -----------------------------------------------------------\n  gl_FragColor = vec4( col, diffuseColor.a );\n  postCorrection();\n}"},function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{l(n.next(e))}catch(e){o(e)}}function s(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},o=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var o=arguments[t],a=0,s=o.length;a<s;a++,i++)n[i]=o[a];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.VRMMaterialImporter=void 0;var a=r(0),s=r(23),l=r(24),u=function(){function e(e){void 0===e&&(e={}),this._encoding=e.encoding||a.LinearEncoding,this._encoding!==a.LinearEncoding&&this._encoding!==a.sRGBEncoding&&console.warn("The specified color encoding might not work properly with VRMMaterialImporter. You might want to use THREE.sRGBEncoding instead."),this._requestEnvMap=e.requestEnvMap}return e.prototype.convertGLTFMaterials=function(e){return n(this,void 0,Promise,(function(){var t,r,o,a,s,l=this;return i(this,(function(u){switch(u.label){case 0:return(t=e.parser.json.extensions&&e.parser.json.extensions.VRM)&&(r=t.materialProperties)?[4,e.parser.getDependencies("mesh")]:[2,null];case 1:return o=u.sent(),a={},s=[],[4,Promise.all(o.map((function(t,o){return n(l,void 0,void 0,(function(){var l,u,h=this;return i(this,(function(f){switch(f.label){case 0:return l=e.parser.json.meshes[o],u="Group"===t.type?t.children:[t],[4,Promise.all(u.map((function(t,o){return n(h,void 0,void 0,(function(){var n,u,h,f,c,p;return i(this,(function(i){switch(i.label){case 0:return(n=l.primitives[o])?(u=t.geometry,h=u.index?u.index.count:u.attributes.position.count/3,Array.isArray(t.material)||(t.material=[t.material],u.addGroup(0,h,0)),f=n.material,(c=r[f])||(console.warn("VRMMaterialImporter: There are no material definition for material #"+f+" on VRM extension."),c={shader:"VRM_USE_GLTFSHADER"}),a[f]?(p=a[f],[3,3]):[3,1]):[2];case 1:return[4,this.createVRMMaterials(t.material[0],c,e)];case 2:p=i.sent(),a[f]=p,s.push(p.surface),p.outline&&s.push(p.outline),i.label=3;case 3:return t.material[0]=p.surface,this._requestEnvMap&&p.surface.isMeshStandardMaterial&&this._requestEnvMap().then((function(e){p.surface.envMap=e,p.surface.needsUpdate=!0})),t.renderOrder=c.renderQueue||2e3,p.outline&&(t.material[1]=p.outline,u.addGroup(0,h,1)),[2]}}))}))})))];case 1:return f.sent(),[2]}}))}))})))];case 2:return u.sent(),[2,s]}}))}))},e.prototype.createVRMMaterials=function(e,t,r){return n(this,void 0,Promise,(function(){var n,o,a,u,h=this;return i(this,(function(i){switch(i.label){case 0:return"VRM/MToon"!==t.shader?[3,2]:[4,this._extractMaterialProperties(e,t,r)];case 1:return a=i.sent(),["srcBlend","dstBlend","isFirstSetup"].forEach((function(e){void 0!==a[e]&&delete a[e]})),["mainTex","shadeTexture","emissionMap","sphereAdd","rimTexture"].forEach((function(e){void 0!==a[e]&&(a[e].encoding=h._encoding)})),a.encoding=this._encoding,n=new s.MToonMaterial(a),a.outlineWidthMode!==s.MToonMaterialOutlineWidthMode.None&&(a.isOutline=!0,o=new s.MToonMaterial(a)),[3,11];case 2:return"VRM/UnlitTexture"!==t.shader?[3,4]:[4,this._extractMaterialProperties(e,t,r)];case 3:return(u=i.sent()).renderType=l.VRMUnlitMaterialRenderType.Opaque,n=new l.VRMUnlitMaterial(u),[3,11];case 4:return"VRM/UnlitCutout"!==t.shader?[3,6]:[4,this._extractMaterialProperties(e,t,r)];case 5:return(u=i.sent()).renderType=l.VRMUnlitMaterialRenderType.Cutout,n=new l.VRMUnlitMaterial(u),[3,11];case 6:return"VRM/UnlitTransparent"!==t.shader?[3,8]:[4,this._extractMaterialProperties(e,t,r)];case 7:return(u=i.sent()).renderType=l.VRMUnlitMaterialRenderType.Transparent,n=new l.VRMUnlitMaterial(u),[3,11];case 8:return"VRM/UnlitTransparentZWrite"!==t.shader?[3,10]:[4,this._extractMaterialProperties(e,t,r)];case 9:return(u=i.sent()).renderType=l.VRMUnlitMaterialRenderType.TransparentWithZWrite,n=new l.VRMUnlitMaterial(u),[3,11];case 10:"VRM_USE_GLTFSHADER"!==t.shader&&console.warn('Unknown shader detected: "'+t.shader+'"'),n=this._convertGLTFMaterial(e.clone()),i.label=11;case 11:return n.name=e.name,n.userData=JSON.parse(JSON.stringify(e.userData)),n.userData.vrmMaterialProperties=t,o&&(o.name=e.name+" (Outline)",o.userData=JSON.parse(JSON.stringify(e.userData)),o.userData.vrmMaterialProperties=t),[2,{surface:n,outline:o}]}}))}))},e.prototype._renameMaterialProperty=function(e){return"_"!==e[0]?(console.warn('VRMMaterials: Given property name "'+e+'" might be invalid'),e):(e=e.substring(1),/[A-Z]/.test(e[0])?e[0].toLowerCase()+e.substring(1):(console.warn('VRMMaterials: Given property name "'+e+'" might be invalid'),e))},e.prototype._convertGLTFMaterial=function(e){var t;return e.isMeshStandardMaterial&&((t=e).map&&(t.map.encoding=this._encoding),t.emissiveMap&&(t.emissiveMap.encoding=this._encoding),this._encoding===a.LinearEncoding&&(t.color.convertLinearToSRGB(),t.emissive.convertLinearToSRGB())),e.isMeshBasicMaterial&&((t=e).map&&(t.map.encoding=this._encoding),this._encoding===a.LinearEncoding&&t.color.convertLinearToSRGB()),e},e.prototype._extractMaterialProperties=function(e,t,r){var n=[],i={};if(t.textureProperties)for(var l=function(e){var o=u._renameMaterialProperty(e),a=t.textureProperties[e];n.push(r.parser.getDependency("texture",a).then((function(e){i[o]=e})))},u=this,h=0,f=Object.keys(t.textureProperties);h<f.length;h++)l(d=f[h]);if(t.floatProperties)for(var c=0,p=Object.keys(t.floatProperties);c<p.length;c++){var d=p[c],v=this._renameMaterialProperty(d);i[v]=t.floatProperties[d]}if(t.vectorProperties)for(var _=function(e){var r,n=m._renameMaterialProperty(e);["_MainTex","_ShadeTexture","_BumpMap","_ReceiveShadowTexture","_ShadingGradeTexture","_RimTexture","_SphereAdd","_EmissionMap","_OutlineWidthTexture","_UvAnimMaskTexture"].some((function(t){return e===t}))&&(n+="_ST"),i[n]=new((r=a.Vector4).bind.apply(r,o([void 0],t.vectorProperties[e])))},m=this,g=0,y=Object.keys(t.vectorProperties);g<y.length;g++)_(d=y[g]);return t.keywordMap._ALPHATEST_ON&&i.blendMode===s.MToonMaterialRenderMode.Opaque&&(i.blendMode=s.MToonMaterialRenderMode.Cutout),i.skinning=e.skinning||!1,i.morphTargets=e.morphTargets||!1,i.morphNormals=e.morphNormals||!1,Promise.all(n).then((function(){return i}))},e}();t.VRMMaterialImporter=u},function(e,t,r){"use strict";r.r(t),t.default="#include <common>\n\n// #include <uv_pars_vertex>\n#ifdef USE_MAP\n  varying vec2 vUv;\n  uniform vec4 mainTex_ST;\n#endif\n\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n  // #include <uv_vertex>\n  #ifdef USE_MAP\n    vUv = vec2( mainTex_ST.p * uv.x + mainTex_ST.s, mainTex_ST.q * uv.y + mainTex_ST.t );\n  #endif\n\n  #include <uv2_vertex>\n  #include <color_vertex>\n  #include <skinbase_vertex>\n\n  #ifdef USE_ENVMAP\n\n  #include <beginnormal_vertex>\n  #include <morphnormal_vertex>\n  #include <skinnormal_vertex>\n  #include <defaultnormal_vertex>\n\n  #endif\n\n  #include <begin_vertex>\n  #include <morphtarget_vertex>\n  #include <skinning_vertex>\n  #include <project_vertex>\n  #include <logdepthbuf_vertex>\n\n  #include <worldpos_vertex>\n  #include <clipping_planes_vertex>\n  #include <envmap_vertex>\n  #include <fog_vertex>\n\n}"},function(e,t,r){"use strict";r.r(t),t.default="#ifdef RENDERTYPE_CUTOUT\n  uniform float cutoff;\n#endif\n\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n// #include <alphamap_pars_fragment>\n// #include <aomap_pars_fragment>\n// #include <lightmap_pars_fragment>\n// #include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n// #include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\n// == main procedure ===========================================================\nvoid main() {\n  #include <clipping_planes_fragment>\n\n  vec4 diffuseColor = vec4( 1.0 );\n\n  #include <logdepthbuf_fragment>\n\n  // #include <map_fragment>\n  #ifdef USE_MAP\n    diffuseColor *= mapTexelToLinear( texture2D( map, vUv ) );\n  #endif\n\n  #include <color_fragment>\n  // #include <alphamap_fragment>\n\n  // MToon: alpha\n  // #include <alphatest_fragment>\n  #ifdef RENDERTYPE_CUTOUT\n    if ( diffuseColor.a <= cutoff ) { discard; }\n    diffuseColor.a = 1.0;\n  #endif\n\n  #ifdef RENDERTYPE_OPAQUE\n    diffuseColor.a = 1.0;\n  #endif\n\n  // #include <specularmap_fragment>\n\n  ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n  // accumulation (baked indirect lighting only)\n  #ifdef USE_LIGHTMAP\n    reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n  #else\n    reflectedLight.indirectDiffuse += vec3( 1.0 );\n  #endif\n\n  // modulation\n  // #include <aomap_fragment>\n\n  reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n  vec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n  // #include <envmap_fragment>\n\n  gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n  #include <premultiplied_alpha_fragment>\n  #include <tonemapping_fragment>\n  #include <encodings_fragment>\n  #include <fog_fragment>\n}"},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VRMUtils=void 0;var n=r(45),i=function(){function e(){}return e.removeUnnecessaryJoints=n.removeUnnecessaryJoints,e}();t.VRMUtils=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.removeUnnecessaryJoints=void 0;var n=r(0);t.removeUnnecessaryJoints=function(e){var t=new Map;e.traverse((function(e){if("SkinnedMesh"===e.type){var r=e,i=r.geometry.getAttribute("skinIndex"),o=t.get(i);if(!o){for(var a=[],s=[],l={},u=i.array,h=0;h<u.length;h++){var f=u[h];void 0===l[f]&&(l[f]=a.length,a.push(r.skeleton.bones[f]),s.push(r.skeleton.boneInverses[f])),u[h]=l[f]}i.copyArray(u),i.needsUpdate=!0,o=new n.Skeleton(a,s),t.set(i,o)}r.bind(o,new n.Matrix4)}}))}},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(47),t),i(r(4),t),i(r(28),t),i(r(27),t)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{l(n.next(e))}catch(e){o(e)}}function s(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var r,n,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,n=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.VRMImporterDebug=void 0;var s=r(6),l=r(4),u=r(49),h=r(27),f=function(e){function t(t){return void 0===t&&(t={}),t.lookAtImporter=t.lookAtImporter||new u.VRMLookAtImporterDebug,t.springBoneImporter=t.springBoneImporter||new h.VRMSpringBoneImporterDebug,e.call(this,t)||this}return i(t,e),t.prototype.import=function(e,t){return void 0===t&&(t={}),o(this,void 0,Promise,(function(){var r,n,i,o,s,u,h,f,c,p;return a(this,(function(a){switch(a.label){case 0:if(void 0===e.parser.json.extensions||void 0===e.parser.json.extensions.VRM)throw new Error("Could not find VRM extension on the GLTF");return r=e.parser.json.extensions.VRM,(n=e.scene).updateMatrixWorld(!1),n.traverse((function(e){e.isMesh&&(e.frustumCulled=!1)})),[4,this._materialImporter.convertGLTFMaterials(e)];case 1:return i=a.sent()||void 0,[4,this._humanoidImporter.import(e)];case 2:return(o=a.sent()||void 0)?[4,this._firstPersonImporter.import(e,o)]:[3,4];case 3:return u=a.sent()||void 0,[3,5];case 4:u=void 0,a.label=5;case 5:return s=u,[4,this._blendShapeImporter.import(e)];case 6:return h=a.sent()||void 0,s&&h&&o?[4,this._lookAtImporter.import(e,s,h,o)]:[3,8];case 7:return c=a.sent()||void 0,[3,9];case 8:c=void 0,a.label=9;case 9:return(f=c).setupHelper&&f.setupHelper(n,t),[4,this._springBoneImporter.import(e)];case 10:return(p=a.sent()||void 0).setupHelper&&p.setupHelper(n,t),[2,new l.VRMDebug({scene:e.scene,meta:r.meta,materials:i,humanoid:o,firstPerson:s,blendShapeProxy:h,lookAt:f,springBoneManager:p},t)]}}))}))},t}(s.VRMImporter);t.VRMImporterDebug=f},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.VRMLookAtImporterDebug=void 0;var o=r(7),a=r(50),s=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.import=function(e,t,r,n){var i=e.parser.json.extensions&&e.parser.json.extensions.VRM;if(!i)return null;var o=i.firstPerson;if(!o)return null;var s=this._importApplyer(o,r,n);return new a.VRMLookAtHeadDebug(t,s||void 0)},t}(o.VRMLookAtImporter);t.VRMLookAtImporterDebug=s},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.VRMLookAtHeadDebug=void 0;var o=r(0),a=r(3),s=new o.Vector3,l=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.setupHelper=function(e,t){t.disableFaceDirectionHelper||(this._faceDirectionHelper=new o.ArrowHelper(new o.Vector3(0,0,-1),new o.Vector3(0,0,0),.5,16711935),e.add(this._faceDirectionHelper))},t.prototype.update=function(t){e.prototype.update.call(this,t),this._faceDirectionHelper&&(this.firstPerson.getFirstPersonWorldPosition(this._faceDirectionHelper.position),this._faceDirectionHelper.setDirection(this.getLookAtWorldDirection(s)))},t}(a.VRMLookAtHead);t.VRMLookAtHeadDebug=l},function(e,t,r){"use strict";var n,i=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.VRMSpringBoneManagerDebug=void 0;var o=r(0),a=r(10),s=r(4),l=new o.MeshBasicMaterial({color:16711935,wireframe:!0,transparent:!0,depthTest:!1}),u=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.setupHelper=function(e,t){t.disableSpringBoneHelper||(this.springBoneGroupList.forEach((function(t){t.forEach((function(t){if(t.getGizmo){var r=t.getGizmo();e.add(r)}}))})),this.colliderGroups.forEach((function(e){e.colliders.forEach((function(e){e.material=l,e.renderOrder=s.VRM_GIZMO_RENDER_ORDER}))})))},t}(a.VRMSpringBoneManager);t.VRMSpringBoneManagerDebug=u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(17),t),i(r(54),t),i(r(55),t),i(r(56),t),i(r(18),t),i(r(16),t)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(19),t),i(r(8),t),i(r(20),t),i(r(21),t),i(r(3),t),i(r(7),t)}]))},196:function(e,t,r){var n;window,n=function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(object,e){return Object.prototype.hasOwnProperty.call(object,e)},r.p="",r(r.s="./src/peer.js")}({"./node_modules/after/index.js":function(e,t){function r(){}e.exports=function(e,t,n){var o=!1;return n=n||r,l.count=e,0===e?t():l;function l(e,r){if(l.count<=0)throw new Error("after called too many times");--l.count,e?(o=!0,t(e),t=n):0!==l.count||o||t(null,r)}}},"./node_modules/arraybuffer.slice/index.js":function(e,t){e.exports=function(e,t,r){var n=e.byteLength;if(t=t||0,r=r||n,e.slice)return e.slice(t,r);if(t<0&&(t+=n),r<0&&(r+=n),r>n&&(r=n),t>=n||t>=r||0===n)return new ArrayBuffer(0);for(var o=new Uint8Array(e),l=new Uint8Array(r-t),i=t,h=0;i<r;i++,h++)l[h]=o[i];return l.buffer}},"./node_modules/backo2/index.js":function(e,t){function r(e){e=e||{},this.ms=e.min||100,this.max=e.max||1e4,this.factor=e.factor||2,this.jitter=e.jitter>0&&e.jitter<=1?e.jitter:0,this.attempts=0}e.exports=r,r.prototype.duration=function(){var e=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var t=Math.random(),r=Math.floor(t*this.jitter*e);e=0==(1&Math.floor(10*t))?e-r:e+r}return 0|Math.min(e,this.max)},r.prototype.reset=function(){this.attempts=0},r.prototype.setMin=function(e){this.ms=e},r.prototype.setMax=function(e){this.max=e},r.prototype.setJitter=function(e){this.jitter=e}},"./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js":function(e,t){!function(){"use strict";for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r=new Uint8Array(256),i=0;i<e.length;i++)r[e.charCodeAt(i)]=i;t.encode=function(t){var i,r=new Uint8Array(t),n=r.length,o="";for(i=0;i<n;i+=3)o+=e[r[i]>>2],o+=e[(3&r[i])<<4|r[i+1]>>4],o+=e[(15&r[i+1])<<2|r[i+2]>>6],o+=e[63&r[i+2]];return n%3==2?o=o.substring(0,o.length-1)+"=":n%3==1&&(o=o.substring(0,o.length-2)+"=="),o},t.decode=function(e){var i,t,n,o,l,h=.75*e.length,f=e.length,p=0;"="===e[e.length-1]&&(h--,"="===e[e.length-2]&&h--);var c=new ArrayBuffer(h),d=new Uint8Array(c);for(i=0;i<f;i+=4)t=r[e.charCodeAt(i)],n=r[e.charCodeAt(i+1)],o=r[e.charCodeAt(i+2)],l=r[e.charCodeAt(i+3)],d[p++]=t<<2|n>>4,d[p++]=(15&n)<<4|o>>2,d[p++]=(3&o)<<6|63&l;return c}}()},"./node_modules/base64-js/index.js":function(e,t,r){"use strict";t.byteLength=function(e){var t=f(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,i,r=f(e),n=r[0],h=r[1],c=new l(function(e,t,r){return 3*(t+r)/4-r}(0,n,h)),d=0,v=h>0?n-4:n;for(i=0;i<v;i+=4)t=o[e.charCodeAt(i)]<<18|o[e.charCodeAt(i+1)]<<12|o[e.charCodeAt(i+2)]<<6|o[e.charCodeAt(i+3)],c[d++]=t>>16&255,c[d++]=t>>8&255,c[d++]=255&t;return 2===h&&(t=o[e.charCodeAt(i)]<<2|o[e.charCodeAt(i+1)]>>4,c[d++]=255&t),1===h&&(t=o[e.charCodeAt(i)]<<10|o[e.charCodeAt(i+1)]<<4|o[e.charCodeAt(i+2)]>>2,c[d++]=t>>8&255,c[d++]=255&t),c},t.fromByteArray=function(e){for(var t,r=e.length,o=r%3,l=[],i=0,h=r-o;i<h;i+=16383)l.push(c(e,i,i+16383>h?h:i+16383));return 1===o?(t=e[r-1],l.push(n[t>>2]+n[t<<4&63]+"==")):2===o&&(t=(e[r-2]<<8)+e[r-1],l.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"=")),l.join("")};for(var n=[],o=[],l="undefined"!=typeof Uint8Array?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,h=code.length;i<h;++i)n[i]=code[i],o[code.charCodeAt(i)]=i;function f(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function c(e,t,r){for(var o,l,output=[],i=t;i<r;i+=3)o=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),output.push(n[(l=o)>>18&63]+n[l>>12&63]+n[l>>6&63]+n[63&l]);return output.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63},"./node_modules/blob/index.js":function(e,t){var r=void 0!==r?r:"undefined"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:"undefined"!=typeof MSBlobBuilder?MSBlobBuilder:"undefined"!=typeof MozBlobBuilder&&MozBlobBuilder,n=function(){try{return 2===new Blob(["hi"]).size}catch(e){return!1}}(),o=n&&function(){try{return 2===new Blob([new Uint8Array([1,2])]).size}catch(e){return!1}}(),l=r&&r.prototype.append&&r.prototype.getBlob;function h(e){return e.map((function(e){if(e.buffer instanceof ArrayBuffer){var t=e.buffer;if(e.byteLength!==t.byteLength){var r=new Uint8Array(e.byteLength);r.set(new Uint8Array(t,e.byteOffset,e.byteLength)),t=r.buffer}return t}return e}))}function f(e,t){t=t||{};var n=new r;return h(e).forEach((function(e){n.append(e)})),t.type?n.getBlob(t.type):n.getBlob()}function c(e,t){return new Blob(h(e),t||{})}"undefined"!=typeof Blob&&(f.prototype=Blob.prototype,c.prototype=Blob.prototype),e.exports=n?o?Blob:c:l?f:void 0},"./node_modules/component-bind/index.js":function(e,t){var r=[].slice;e.exports=function(e,t){if("string"==typeof t&&(t=e[t]),"function"!=typeof t)throw new Error("bind() requires a function");var n=r.call(arguments,2);return function(){return t.apply(e,n.concat(r.call(arguments)))}}},"./node_modules/component-emitter/index.js":function(e,t,r){function n(e){if(e)return function(e){for(var t in n.prototype)e[t]=n.prototype[t];return e}(e)}e.exports=n,n.prototype.on=n.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},n.prototype.once=function(e,t){function r(){this.off(e,r),t.apply(this,arguments)}return r.fn=t,this.on(e,r),this},n.prototype.off=n.prototype.removeListener=n.prototype.removeAllListeners=n.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var r,n=this._callbacks["$"+e];if(!n)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var i=0;i<n.length;i++)if((r=n[i])===t||r.fn===t){n.splice(i,1);break}return this},n.prototype.emit=function(e){this._callbacks=this._callbacks||{};var t=[].slice.call(arguments,1),r=this._callbacks["$"+e];if(r)for(var i=0,n=(r=r.slice(0)).length;i<n;++i)r[i].apply(this,t);return this},n.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},n.prototype.hasListeners=function(e){return!!this.listeners(e).length}},"./node_modules/component-inherit/index.js":function(e,t){e.exports=function(a,b){var e=function(){};e.prototype=b.prototype,a.prototype=new e,a.prototype.constructor=a}},"./node_modules/debug/src/browser.js":function(e,t,r){(function(n){t.log=function(...e){return"object"==typeof console&&console.log&&console.log(...e)},t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const r="color: "+this.color;t.splice(1,0,r,"color: inherit");let n=0,o=0;t[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(n++,"%c"===e&&(o=n))}),t.splice(o,0,r)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&void 0!==n&&"env"in n&&(e=n.env.DEBUG),e},t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.exports=r("./node_modules/debug/src/common.js")(t);const{formatters:o}=e.exports;o.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}}).call(this,r("./node_modules/process/browser.js"))},"./node_modules/debug/src/common.js":function(e,t,r){e.exports=function(e){function t(e){let t=0;for(let i=0;i<e.length;i++)t=(t<<5)-t+e.charCodeAt(i),t|=0;return n.colors[Math.abs(t)%n.colors.length]}function n(e){let r;function h(...e){if(!h.enabled)return;const t=h,o=Number(new Date),l=o-(r||o);t.diff=l,t.prev=r,t.curr=o,r=o,e[0]=n.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let f=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(r,o)=>{if("%%"===r)return r;f++;const l=n.formatters[o];if("function"==typeof l){const n=e[f];r=l.call(t,n),e.splice(f,1),f--}return r}),n.formatArgs.call(t,e),(t.log||n.log).apply(t,e)}return h.namespace=e,h.enabled=n.enabled(e),h.useColors=n.useColors(),h.color=t(e),h.destroy=o,h.extend=l,"function"==typeof n.init&&n.init(h),n.instances.push(h),h}function o(){const e=n.instances.indexOf(this);return-1!==e&&(n.instances.splice(e,1),!0)}function l(e,t){const r=n(this.namespace+(void 0===t?":":t)+e);return r.log=this.log,r}function h(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return n.debug=n,n.default=n,n.coerce=function(e){return e instanceof Error?e.stack||e.message:e},n.disable=function(){const e=[...n.names.map(h),...n.skips.map(h).map(e=>"-"+e)].join(",");return n.enable(""),e},n.enable=function(e){let i;n.save(e),n.names=[],n.skips=[];const t=("string"==typeof e?e:"").split(/[\s,]+/),r=t.length;for(i=0;i<r;i++)t[i]&&("-"===(e=t[i].replace(/\*/g,".*?"))[0]?n.skips.push(new RegExp("^"+e.substr(1)+"$")):n.names.push(new RegExp("^"+e+"$")));for(i=0;i<n.instances.length;i++){const e=n.instances[i];e.enabled=n.enabled(e.namespace)}},n.enabled=function(e){if("*"===e[e.length-1])return!0;let i,t;for(i=0,t=n.skips.length;i<t;i++)if(n.skips[i].test(e))return!1;for(i=0,t=n.names.length;i<t;i++)if(n.names[i].test(e))return!0;return!1},n.humanize=r("./node_modules/ms/index.js"),Object.keys(e).forEach(t=>{n[t]=e[t]}),n.instances=[],n.names=[],n.skips=[],n.formatters={},n.selectColor=t,n.enable(n.load()),n}},"./node_modules/decode-uri-component/index.js":function(e,t,r){"use strict";var n=new RegExp("%[a-f0-9]{2}","gi"),o=new RegExp("(%[a-f0-9]{2})+","gi");function l(e,t){try{return decodeURIComponent(e.join(""))}catch(e){}if(1===e.length)return e;t=t||1;var r=e.slice(0,t),n=e.slice(t);return Array.prototype.concat.call([],l(r),l(n))}function h(input){try{return decodeURIComponent(input)}catch(t){for(var e=input.match(n),i=1;i<e.length;i++)e=(input=l(e,i).join("")).match(n);return input}}e.exports=function(e){if("string"!=typeof e)throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof e+"`");try{return e=e.replace(/\+/g," "),decodeURIComponent(e)}catch(t){return function(input){for(var e={"%FE%FF":"��","%FF%FE":"��"},t=o.exec(input);t;){try{e[t[0]]=decodeURIComponent(t[0])}catch(n){var r=h(t[0]);r!==t[0]&&(e[t[0]]=r)}t=o.exec(input)}e["%C2"]="�";for(var n=Object.keys(e),i=0;i<n.length;i++){var l=n[i];input=input.replace(new RegExp(l,"g"),e[l])}return input}(e)}}},"./node_modules/detect-browser/index.js":function(e,t,r){"use strict";(function(e){var r=this&&this.__spreadArrays||function(){for(var s=0,i=0,e=arguments.length;i<e;i++)s+=arguments[i].length;var t=Array(s),r=0;for(i=0;i<e;i++)for(var a=arguments[i],n=0,o=a.length;n<o;n++,r++)t[r]=a[n];return t};Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t,r){this.name=e,this.version=t,this.os=r};t.BrowserInfo=n;var o=function(t){this.version=t,this.name="node",this.os=e.platform};t.NodeInfo=o;var l=function(){this.bot=!0,this.name="bot",this.version=null,this.os=null};t.BotInfo=l;var h=[["aol",/AOLShield\/([0-9\._]+)/],["edge",/Edge\/([0-9\._]+)/],["edge-ios",/EdgiOS\/([0-9\._]+)/],["yandexbrowser",/YaBrowser\/([0-9\._]+)/],["vivaldi",/Vivaldi\/([0-9\.]+)/],["kakaotalk",/KAKAOTALK\s([0-9\.]+)/],["samsung",/SamsungBrowser\/([0-9\.]+)/],["silk",/\bSilk\/([0-9._-]+)\b/],["miui",/MiuiBrowser\/([0-9\.]+)$/],["beaker",/BeakerBrowser\/([0-9\.]+)/],["edge-chromium",/Edg\/([0-9\.]+)/],["chromium-webview",/(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["chrome",/(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["phantomjs",/PhantomJS\/([0-9\.]+)(:?\s|$)/],["crios",/CriOS\/([0-9\.]+)(:?\s|$)/],["firefox",/Firefox\/([0-9\.]+)(?:\s|$)/],["fxios",/FxiOS\/([0-9\.]+)/],["opera-mini",/Opera Mini.*Version\/([0-9\.]+)/],["opera",/Opera\/([0-9\.]+)(?:\s|$)/],["opera",/OPR\/([0-9\.]+)(:?\s|$)/],["ie",/Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],["ie",/MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],["ie",/MSIE\s(7\.0)/],["bb10",/BB10;\sTouch.*Version\/([0-9\.]+)/],["android",/Android\s([0-9\.]+)/],["ios",/Version\/([0-9\._]+).*Mobile.*Safari.*/],["safari",/Version\/([0-9\._]+).*Safari/],["facebook",/FBAV\/([0-9\.]+)/],["instagram",/Instagram\s([0-9\.]+)/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Mobile/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Gecko\)$/],["searchbot",/alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/]],f=[["iOS",/iP(hone|od|ad)/],["Android OS",/Android/],["BlackBerry OS",/BlackBerry|BB10/],["Windows Mobile",/IEMobile/],["Amazon OS",/Kindle/],["Windows 3.11",/Win16/],["Windows 95",/(Windows 95)|(Win95)|(Windows_95)/],["Windows 98",/(Windows 98)|(Win98)/],["Windows 2000",/(Windows NT 5.0)|(Windows 2000)/],["Windows XP",/(Windows NT 5.1)|(Windows XP)/],["Windows Server 2003",/(Windows NT 5.2)/],["Windows Vista",/(Windows NT 6.0)/],["Windows 7",/(Windows NT 6.1)/],["Windows 8",/(Windows NT 6.2)/],["Windows 8.1",/(Windows NT 6.3)/],["Windows 10",/(Windows NT 10.0)/],["Windows ME",/Windows ME/],["Open BSD",/OpenBSD/],["Sun OS",/SunOS/],["Chrome OS",/CrOS/],["Linux",/(Linux)|(X11)/],["Mac OS",/(Mac_PowerPC)|(Macintosh)/],["QNX",/QNX/],["BeOS",/BeOS/],["OS/2",/OS\/2/],["Search Bot",/(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\/Teoma)|(ia_archiver)/]];function c(e){var t=""!==e&&h.reduce((function(t,r){var n=r[0],o=r[1];if(t)return t;var l=o.exec(e);return!!l&&[n,l]}),!1);if(!t)return null;var o=t[0],f=t[1];if("searchbot"===o)return new l;var c=f[1]&&f[1].split(/[._]/).slice(0,3);return c?c.length<3&&(c=r(c,function(e){for(var output=[],t=0;t<e;t++)output.push("0");return output}(3-c.length))):c=[],new n(o,c.join("."),d(e))}function d(e){for(var t=0,r=f.length;t<r;t++){var n=f[t],o=n[0];if(n[1].test(e))return o}return null}function v(){return void 0!==e&&e.version?new o(e.version.slice(1)):null}t.detect=function(e){return e?c(e):"undefined"!=typeof navigator?c(navigator.userAgent):v()},t.parseUserAgent=c,t.detectOS=d,t.getNodeVersion=v}).call(this,r("./node_modules/process/browser.js"))},"./node_modules/engine.io-client/lib/globalThis.browser.js":function(e,t){e.exports="undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this")()},"./node_modules/engine.io-client/lib/index.js":function(e,t,r){e.exports=r("./node_modules/engine.io-client/lib/socket.js"),e.exports.parser=r("./node_modules/engine.io-parser/lib/browser.js")},"./node_modules/engine.io-client/lib/socket.js":function(e,t,r){var n=r("./node_modules/engine.io-client/lib/transports/index.js"),o=r("./node_modules/engine.io-client/node_modules/component-emitter/index.js"),l=r("./node_modules/debug/src/browser.js")("engine.io-client:socket"),h=r("./node_modules/indexof/index.js"),f=r("./node_modules/engine.io-parser/lib/browser.js"),c=r("./node_modules/parseuri/index.js"),d=r("./node_modules/parseqs/index.js");function v(e,t){if(!(this instanceof v))return new v(e,t);t=t||{},e&&"object"==typeof e&&(t=e,e=null),e?(e=c(e),t.hostname=e.host,t.secure="https"===e.protocol||"wss"===e.protocol,t.port=e.port,e.query&&(t.query=e.query)):t.host&&(t.hostname=c(t.host).host),this.secure=null!=t.secure?t.secure:"undefined"!=typeof location&&"https:"===location.protocol,t.hostname&&!t.port&&(t.port=this.secure?"443":"80"),this.agent=t.agent||!1,this.hostname=t.hostname||("undefined"!=typeof location?location.hostname:"localhost"),this.port=t.port||("undefined"!=typeof location&&location.port?location.port:this.secure?443:80),this.query=t.query||{},"string"==typeof this.query&&(this.query=d.decode(this.query)),this.upgrade=!1!==t.upgrade,this.path=(t.path||"/engine.io").replace(/\/$/,"")+"/",this.forceJSONP=!!t.forceJSONP,this.jsonp=!1!==t.jsonp,this.forceBase64=!!t.forceBase64,this.enablesXDR=!!t.enablesXDR,this.withCredentials=!1!==t.withCredentials,this.timestampParam=t.timestampParam||"t",this.timestampRequests=t.timestampRequests,this.transports=t.transports||["polling","websocket"],this.transportOptions=t.transportOptions||{},this.readyState="",this.writeBuffer=[],this.prevBufferLen=0,this.policyPort=t.policyPort||843,this.rememberUpgrade=t.rememberUpgrade||!1,this.binaryType=null,this.onlyBinaryUpgrades=t.onlyBinaryUpgrades,this.perMessageDeflate=!1!==t.perMessageDeflate&&(t.perMessageDeflate||{}),!0===this.perMessageDeflate&&(this.perMessageDeflate={}),this.perMessageDeflate&&null==this.perMessageDeflate.threshold&&(this.perMessageDeflate.threshold=1024),this.pfx=t.pfx||null,this.key=t.key||null,this.passphrase=t.passphrase||null,this.cert=t.cert||null,this.ca=t.ca||null,this.ciphers=t.ciphers||null,this.rejectUnauthorized=void 0===t.rejectUnauthorized||t.rejectUnauthorized,this.forceNode=!!t.forceNode,this.isReactNative="undefined"!=typeof navigator&&"string"==typeof navigator.product&&"reactnative"===navigator.product.toLowerCase(),("undefined"==typeof self||this.isReactNative)&&(t.extraHeaders&&Object.keys(t.extraHeaders).length>0&&(this.extraHeaders=t.extraHeaders),t.localAddress&&(this.localAddress=t.localAddress)),this.id=null,this.upgrades=null,this.pingInterval=null,this.pingTimeout=null,this.pingIntervalTimer=null,this.pingTimeoutTimer=null,this.open()}e.exports=v,v.priorWebsocketSuccess=!1,o(v.prototype),v.protocol=f.protocol,v.Socket=v,v.Transport=r("./node_modules/engine.io-client/lib/transport.js"),v.transports=r("./node_modules/engine.io-client/lib/transports/index.js"),v.parser=r("./node_modules/engine.io-parser/lib/browser.js"),v.prototype.createTransport=function(e){l('creating transport "%s"',e);var t=function(e){var t={};for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t}(this.query);t.EIO=f.protocol,t.transport=e;var r=this.transportOptions[e]||{};return this.id&&(t.sid=this.id),new n[e]({query:t,socket:this,agent:r.agent||this.agent,hostname:r.hostname||this.hostname,port:r.port||this.port,secure:r.secure||this.secure,path:r.path||this.path,forceJSONP:r.forceJSONP||this.forceJSONP,jsonp:r.jsonp||this.jsonp,forceBase64:r.forceBase64||this.forceBase64,enablesXDR:r.enablesXDR||this.enablesXDR,withCredentials:r.withCredentials||this.withCredentials,timestampRequests:r.timestampRequests||this.timestampRequests,timestampParam:r.timestampParam||this.timestampParam,policyPort:r.policyPort||this.policyPort,pfx:r.pfx||this.pfx,key:r.key||this.key,passphrase:r.passphrase||this.passphrase,cert:r.cert||this.cert,ca:r.ca||this.ca,ciphers:r.ciphers||this.ciphers,rejectUnauthorized:r.rejectUnauthorized||this.rejectUnauthorized,perMessageDeflate:r.perMessageDeflate||this.perMessageDeflate,extraHeaders:r.extraHeaders||this.extraHeaders,forceNode:r.forceNode||this.forceNode,localAddress:r.localAddress||this.localAddress,requestTimeout:r.requestTimeout||this.requestTimeout,protocols:r.protocols||void 0,isReactNative:this.isReactNative})},v.prototype.open=function(){var e;if(this.rememberUpgrade&&v.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket"))e="websocket";else{if(0===this.transports.length){var t=this;return void setTimeout((function(){t.emit("error","No transports available")}),0)}e=this.transports[0]}this.readyState="opening";try{e=this.createTransport(e)}catch(e){return this.transports.shift(),void this.open()}e.open(),this.setTransport(e)},v.prototype.setTransport=function(e){l("setting transport %s",e.name);var t=this;this.transport&&(l("clearing existing transport %s",this.transport.name),this.transport.removeAllListeners()),this.transport=e,e.on("drain",(function(){t.onDrain()})).on("packet",(function(e){t.onPacket(e)})).on("error",(function(e){t.onError(e)})).on("close",(function(){t.onClose("transport close")}))},v.prototype.probe=function(e){l('probing transport "%s"',e);var t=this.createTransport(e,{probe:1}),r=!1,n=this;function o(){if(n.onlyBinaryUpgrades){var o=!this.supportsBinary&&n.transport.supportsBinary;r=r||o}r||(l('probe transport "%s" opened',e),t.send([{type:"ping",data:"probe"}]),t.once("packet",(function(o){if(!r)if("pong"===o.type&&"probe"===o.data){if(l('probe transport "%s" pong',e),n.upgrading=!0,n.emit("upgrading",t),!t)return;v.priorWebsocketSuccess="websocket"===t.name,l('pausing current transport "%s"',n.transport.name),n.transport.pause((function(){r||"closed"!==n.readyState&&(l("changing transport and sending upgrade packet"),m(),n.setTransport(t),t.send([{type:"upgrade"}]),n.emit("upgrade",t),t=null,n.upgrading=!1,n.flush())}))}else{l('probe transport "%s" failed',e);var h=new Error("probe error");h.transport=t.name,n.emit("upgradeError",h)}})))}function h(){r||(r=!0,m(),t.close(),t=null)}function f(r){var o=new Error("probe error: "+r);o.transport=t.name,h(),l('probe transport "%s" failed because of error: %s',e,r),n.emit("upgradeError",o)}function c(){f("transport closed")}function d(){f("socket closed")}function _(e){t&&e.name!==t.name&&(l('"%s" works - aborting "%s"',e.name,t.name),h())}function m(){t.removeListener("open",o),t.removeListener("error",f),t.removeListener("close",c),n.removeListener("close",d),n.removeListener("upgrading",_)}v.priorWebsocketSuccess=!1,t.once("open",o),t.once("error",f),t.once("close",c),this.once("close",d),this.once("upgrading",_),t.open()},v.prototype.onOpen=function(){if(l("socket open"),this.readyState="open",v.priorWebsocketSuccess="websocket"===this.transport.name,this.emit("open"),this.flush(),"open"===this.readyState&&this.upgrade&&this.transport.pause){l("starting upgrade probes");for(var i=0,e=this.upgrades.length;i<e;i++)this.probe(this.upgrades[i])}},v.prototype.onPacket=function(e){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(l('socket receive: type "%s", data "%s"',e.type,e.data),this.emit("packet",e),this.emit("heartbeat"),e.type){case"open":this.onHandshake(JSON.parse(e.data));break;case"pong":this.setPing(),this.emit("pong");break;case"error":var t=new Error("server error");t.code=e.data,this.onError(t);break;case"message":this.emit("data",e.data),this.emit("message",e.data)}else l('packet received with socket readyState "%s"',this.readyState)},v.prototype.onHandshake=function(data){this.emit("handshake",data),this.id=data.sid,this.transport.query.sid=data.sid,this.upgrades=this.filterUpgrades(data.upgrades),this.pingInterval=data.pingInterval,this.pingTimeout=data.pingTimeout,this.onOpen(),"closed"!==this.readyState&&(this.setPing(),this.removeListener("heartbeat",this.onHeartbeat),this.on("heartbeat",this.onHeartbeat))},v.prototype.onHeartbeat=function(e){clearTimeout(this.pingTimeoutTimer);var t=this;t.pingTimeoutTimer=setTimeout((function(){"closed"!==t.readyState&&t.onClose("ping timeout")}),e||t.pingInterval+t.pingTimeout)},v.prototype.setPing=function(){var e=this;clearTimeout(e.pingIntervalTimer),e.pingIntervalTimer=setTimeout((function(){l("writing ping packet - expecting pong within %sms",e.pingTimeout),e.ping(),e.onHeartbeat(e.pingTimeout)}),e.pingInterval)},v.prototype.ping=function(){var e=this;this.sendPacket("ping",(function(){e.emit("ping")}))},v.prototype.onDrain=function(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,0===this.writeBuffer.length?this.emit("drain"):this.flush()},v.prototype.flush=function(){"closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length&&(l("flushing %d packets in socket",this.writeBuffer.length),this.transport.send(this.writeBuffer),this.prevBufferLen=this.writeBuffer.length,this.emit("flush"))},v.prototype.write=v.prototype.send=function(e,t,r){return this.sendPacket("message",e,t,r),this},v.prototype.sendPacket=function(e,data,t,r){if("function"==typeof data&&(r=data,data=void 0),"function"==typeof t&&(r=t,t=null),"closing"!==this.readyState&&"closed"!==this.readyState){(t=t||{}).compress=!1!==t.compress;var n={type:e,data:data,options:t};this.emit("packetCreate",n),this.writeBuffer.push(n),r&&this.once("flush",r),this.flush()}},v.prototype.close=function(){if("opening"===this.readyState||"open"===this.readyState){this.readyState="closing";var e=this;this.writeBuffer.length?this.once("drain",(function(){this.upgrading?n():t()})):this.upgrading?n():t()}function t(){e.onClose("forced close"),l("socket closing - telling transport to close"),e.transport.close()}function r(){e.removeListener("upgrade",r),e.removeListener("upgradeError",r),t()}function n(){e.once("upgrade",r),e.once("upgradeError",r)}return this},v.prototype.onError=function(e){l("socket error %j",e),v.priorWebsocketSuccess=!1,this.emit("error",e),this.onClose("transport error",e)},v.prototype.onClose=function(e,desc){"opening"!==this.readyState&&"open"!==this.readyState&&"closing"!==this.readyState||(l('socket close with reason: "%s"',e),clearTimeout(this.pingIntervalTimer),clearTimeout(this.pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),this.readyState="closed",this.id=null,this.emit("close",e,desc),this.writeBuffer=[],this.prevBufferLen=0)},v.prototype.filterUpgrades=function(e){for(var t=[],i=0,r=e.length;i<r;i++)~h(this.transports,e[i])&&t.push(e[i]);return t}},"./node_modules/engine.io-client/lib/transport.js":function(e,t,r){var n=r("./node_modules/engine.io-parser/lib/browser.js"),o=r("./node_modules/engine.io-client/node_modules/component-emitter/index.js");function l(e){this.path=e.path,this.hostname=e.hostname,this.port=e.port,this.secure=e.secure,this.query=e.query,this.timestampParam=e.timestampParam,this.timestampRequests=e.timestampRequests,this.readyState="",this.agent=e.agent||!1,this.socket=e.socket,this.enablesXDR=e.enablesXDR,this.withCredentials=e.withCredentials,this.pfx=e.pfx,this.key=e.key,this.passphrase=e.passphrase,this.cert=e.cert,this.ca=e.ca,this.ciphers=e.ciphers,this.rejectUnauthorized=e.rejectUnauthorized,this.forceNode=e.forceNode,this.isReactNative=e.isReactNative,this.extraHeaders=e.extraHeaders,this.localAddress=e.localAddress}e.exports=l,o(l.prototype),l.prototype.onError=function(e,desc){var t=new Error(e);return t.type="TransportError",t.description=desc,this.emit("error",t),this},l.prototype.open=function(){return"closed"!==this.readyState&&""!==this.readyState||(this.readyState="opening",this.doOpen()),this},l.prototype.close=function(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this},l.prototype.send=function(e){if("open"!==this.readyState)throw new Error("Transport not open");this.write(e)},l.prototype.onOpen=function(){this.readyState="open",this.writable=!0,this.emit("open")},l.prototype.onData=function(data){var e=n.decodePacket(data,this.socket.binaryType);this.onPacket(e)},l.prototype.onPacket=function(e){this.emit("packet",e)},l.prototype.onClose=function(){this.readyState="closed",this.emit("close")}},"./node_modules/engine.io-client/lib/transports/index.js":function(e,t,r){var n=r("./node_modules/engine.io-client/lib/xmlhttprequest.js"),o=r("./node_modules/engine.io-client/lib/transports/polling-xhr.js"),l=r("./node_modules/engine.io-client/lib/transports/polling-jsonp.js"),h=r("./node_modules/engine.io-client/lib/transports/websocket.js");t.polling=function(e){var t=!1,r=!1,h=!1!==e.jsonp;if("undefined"!=typeof location){var f="https:"===location.protocol,c=location.port;c||(c=f?443:80),t=e.hostname!==location.hostname||c!==e.port,r=e.secure!==f}if(e.xdomain=t,e.xscheme=r,"open"in new n(e)&&!e.forceJSONP)return new o(e);if(!h)throw new Error("JSONP disabled");return new l(e)},t.websocket=h},"./node_modules/engine.io-client/lib/transports/polling-jsonp.js":function(e,t,r){var n=r("./node_modules/engine.io-client/lib/transports/polling.js"),o=r("./node_modules/component-inherit/index.js"),l=r("./node_modules/engine.io-client/lib/globalThis.browser.js");e.exports=v;var h,f=/\n/g,c=/\\n/g;function d(){}function v(e){n.call(this,e),this.query=this.query||{},h||(h=l.___eio=l.___eio||[]),this.index=h.length;var t=this;h.push((function(e){t.onData(e)})),this.query.j=this.index,"function"==typeof addEventListener&&addEventListener("beforeunload",(function(){t.script&&(t.script.onerror=d)}),!1)}o(v,n),v.prototype.supportsBinary=!1,v.prototype.doClose=function(){this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),this.form&&(this.form.parentNode.removeChild(this.form),this.form=null,this.iframe=null),n.prototype.doClose.call(this)},v.prototype.doPoll=function(){var e=this,script=document.createElement("script");this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),script.async=!0,script.src=this.uri(),script.onerror=function(t){e.onError("jsonp poll error",t)};var t=document.getElementsByTagName("script")[0];t?t.parentNode.insertBefore(script,t):(document.head||document.body).appendChild(script),this.script=script,"undefined"!=typeof navigator&&/gecko/i.test(navigator.userAgent)&&setTimeout((function(){var iframe=document.createElement("iframe");document.body.appendChild(iframe),document.body.removeChild(iframe)}),100)},v.prototype.doWrite=function(data,e){var t=this;if(!this.form){var iframe,form=document.createElement("form"),area=document.createElement("textarea"),r=this.iframeId="eio_iframe_"+this.index;form.className="socketio",form.style.position="absolute",form.style.top="-1000px",form.style.left="-1000px",form.target=r,form.method="POST",form.setAttribute("accept-charset","utf-8"),area.name="d",form.appendChild(area),document.body.appendChild(form),this.form=form,this.area=area}function n(){o(),e()}function o(){if(t.iframe)try{t.form.removeChild(t.iframe)}catch(e){t.onError("jsonp polling iframe removal error",e)}try{var html='<iframe src="javascript:0" name="'+t.iframeId+'">';iframe=document.createElement(html)}catch(e){(iframe=document.createElement("iframe")).name=t.iframeId,iframe.src="javascript:0"}iframe.id=t.iframeId,t.form.appendChild(iframe),t.iframe=iframe}this.form.action=this.uri(),o(),data=data.replace(c,"\\\n"),this.area.value=data.replace(f,"\\n");try{this.form.submit()}catch(e){}this.iframe.attachEvent?this.iframe.onreadystatechange=function(){"complete"===t.iframe.readyState&&n()}:this.iframe.onload=n}},"./node_modules/engine.io-client/lib/transports/polling-xhr.js":function(e,t,r){var n=r("./node_modules/engine.io-client/lib/xmlhttprequest.js"),o=r("./node_modules/engine.io-client/lib/transports/polling.js"),l=r("./node_modules/engine.io-client/node_modules/component-emitter/index.js"),h=r("./node_modules/component-inherit/index.js"),f=r("./node_modules/debug/src/browser.js")("engine.io-client:polling-xhr"),c=r("./node_modules/engine.io-client/lib/globalThis.browser.js");function d(){}function v(e){if(o.call(this,e),this.requestTimeout=e.requestTimeout,this.extraHeaders=e.extraHeaders,"undefined"!=typeof location){var t="https:"===location.protocol,r=location.port;r||(r=t?443:80),this.xd="undefined"!=typeof location&&e.hostname!==location.hostname||r!==e.port,this.xs=e.secure!==t}}function _(e){this.method=e.method||"GET",this.uri=e.uri,this.xd=!!e.xd,this.xs=!!e.xs,this.async=!1!==e.async,this.data=void 0!==e.data?e.data:null,this.agent=e.agent,this.isBinary=e.isBinary,this.supportsBinary=e.supportsBinary,this.enablesXDR=e.enablesXDR,this.withCredentials=e.withCredentials,this.requestTimeout=e.requestTimeout,this.pfx=e.pfx,this.key=e.key,this.passphrase=e.passphrase,this.cert=e.cert,this.ca=e.ca,this.ciphers=e.ciphers,this.rejectUnauthorized=e.rejectUnauthorized,this.extraHeaders=e.extraHeaders,this.create()}function m(){for(var i in _.requests)_.requests.hasOwnProperty(i)&&_.requests[i].abort()}e.exports=v,e.exports.Request=_,h(v,o),v.prototype.supportsBinary=!0,v.prototype.request=function(e){return(e=e||{}).uri=this.uri(),e.xd=this.xd,e.xs=this.xs,e.agent=this.agent||!1,e.supportsBinary=this.supportsBinary,e.enablesXDR=this.enablesXDR,e.withCredentials=this.withCredentials,e.pfx=this.pfx,e.key=this.key,e.passphrase=this.passphrase,e.cert=this.cert,e.ca=this.ca,e.ciphers=this.ciphers,e.rejectUnauthorized=this.rejectUnauthorized,e.requestTimeout=this.requestTimeout,e.extraHeaders=this.extraHeaders,new _(e)},v.prototype.doWrite=function(data,e){var t="string"!=typeof data&&void 0!==data,r=this.request({method:"POST",data:data,isBinary:t}),n=this;r.on("success",e),r.on("error",(function(e){n.onError("xhr post error",e)})),this.sendXhr=r},v.prototype.doPoll=function(){f("xhr poll");var e=this.request(),t=this;e.on("data",(function(data){t.onData(data)})),e.on("error",(function(e){t.onError("xhr poll error",e)})),this.pollXhr=e},l(_.prototype),_.prototype.create=function(){var e={agent:this.agent,xdomain:this.xd,xscheme:this.xs,enablesXDR:this.enablesXDR};e.pfx=this.pfx,e.key=this.key,e.passphrase=this.passphrase,e.cert=this.cert,e.ca=this.ca,e.ciphers=this.ciphers,e.rejectUnauthorized=this.rejectUnauthorized;var t=this.xhr=new n(e),r=this;try{f("xhr open %s: %s",this.method,this.uri),t.open(this.method,this.uri,this.async);try{if(this.extraHeaders)for(var i in t.setDisableHeaderCheck&&t.setDisableHeaderCheck(!0),this.extraHeaders)this.extraHeaders.hasOwnProperty(i)&&t.setRequestHeader(i,this.extraHeaders[i])}catch(e){}if("POST"===this.method)try{this.isBinary?t.setRequestHeader("Content-type","application/octet-stream"):t.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(e){}try{t.setRequestHeader("Accept","*/*")}catch(e){}"withCredentials"in t&&(t.withCredentials=this.withCredentials),this.requestTimeout&&(t.timeout=this.requestTimeout),this.hasXDR()?(t.onload=function(){r.onLoad()},t.onerror=function(){r.onError(t.responseText)}):t.onreadystatechange=function(){if(2===t.readyState)try{var e=t.getResponseHeader("Content-Type");(r.supportsBinary&&"application/octet-stream"===e||"application/octet-stream; charset=UTF-8"===e)&&(t.responseType="arraybuffer")}catch(e){}4===t.readyState&&(200===t.status||1223===t.status?r.onLoad():setTimeout((function(){r.onError("number"==typeof t.status?t.status:0)}),0))},f("xhr data %s",this.data),t.send(this.data)}catch(e){return void setTimeout((function(){r.onError(e)}),0)}"undefined"!=typeof document&&(this.index=_.requestsCount++,_.requests[this.index]=this)},_.prototype.onSuccess=function(){this.emit("success"),this.cleanup()},_.prototype.onData=function(data){this.emit("data",data),this.onSuccess()},_.prototype.onError=function(e){this.emit("error",e),this.cleanup(!0)},_.prototype.cleanup=function(e){if(void 0!==this.xhr&&null!==this.xhr){if(this.hasXDR()?this.xhr.onload=this.xhr.onerror=d:this.xhr.onreadystatechange=d,e)try{this.xhr.abort()}catch(e){}"undefined"!=typeof document&&delete _.requests[this.index],this.xhr=null}},_.prototype.onLoad=function(){var data;try{var e;try{e=this.xhr.getResponseHeader("Content-Type")}catch(e){}data=("application/octet-stream"===e||"application/octet-stream; charset=UTF-8"===e)&&this.xhr.response||this.xhr.responseText}catch(e){this.onError(e)}null!=data&&this.onData(data)},_.prototype.hasXDR=function(){return"undefined"!=typeof XDomainRequest&&!this.xs&&this.enablesXDR},_.prototype.abort=function(){this.cleanup()},_.requestsCount=0,_.requests={},"undefined"!=typeof document&&("function"==typeof attachEvent?attachEvent("onunload",m):"function"==typeof addEventListener&&addEventListener("onpagehide"in c?"pagehide":"unload",m,!1))},"./node_modules/engine.io-client/lib/transports/polling.js":function(e,t,r){var n=r("./node_modules/engine.io-client/lib/transport.js"),o=r("./node_modules/parseqs/index.js"),l=r("./node_modules/engine.io-parser/lib/browser.js"),h=r("./node_modules/component-inherit/index.js"),f=r("./node_modules/yeast/index.js"),c=r("./node_modules/debug/src/browser.js")("engine.io-client:polling");e.exports=v;var d=null!=new(r("./node_modules/engine.io-client/lib/xmlhttprequest.js"))({xdomain:!1}).responseType;function v(e){var t=e&&e.forceBase64;d&&!t||(this.supportsBinary=!1),n.call(this,e)}h(v,n),v.prototype.name="polling",v.prototype.doOpen=function(){this.poll()},v.prototype.pause=function(e){var t=this;function r(){c("paused"),t.readyState="paused",e()}if(this.readyState="pausing",this.polling||!this.writable){var n=0;this.polling&&(c("we are currently polling - waiting to pause"),n++,this.once("pollComplete",(function(){c("pre-pause polling complete"),--n||r()}))),this.writable||(c("we are currently writing - waiting to pause"),n++,this.once("drain",(function(){c("pre-pause writing complete"),--n||r()})))}else r()},v.prototype.poll=function(){c("polling"),this.polling=!0,this.doPoll(),this.emit("poll")},v.prototype.onData=function(data){var e=this;c("polling got data %s",data),l.decodePayload(data,this.socket.binaryType,(function(t,r,n){if("opening"===e.readyState&&e.onOpen(),"close"===t.type)return e.onClose(),!1;e.onPacket(t)})),"closed"!==this.readyState&&(this.polling=!1,this.emit("pollComplete"),"open"===this.readyState?this.poll():c('ignoring poll - transport state "%s"',this.readyState))},v.prototype.doClose=function(){var e=this;function t(){c("writing close packet"),e.write([{type:"close"}])}"open"===this.readyState?(c("transport open - closing"),t()):(c("transport not open - deferring close"),this.once("open",t))},v.prototype.write=function(e){var t=this;this.writable=!1;var r=function(){t.writable=!0,t.emit("drain")};l.encodePayload(e,this.supportsBinary,(function(data){t.doWrite(data,r)}))},v.prototype.uri=function(){var e=this.query||{},t=this.secure?"https":"http",r="";return!1!==this.timestampRequests&&(e[this.timestampParam]=f()),this.supportsBinary||e.sid||(e.b64=1),e=o.encode(e),this.port&&("https"===t&&443!==Number(this.port)||"http"===t&&80!==Number(this.port))&&(r=":"+this.port),e.length&&(e="?"+e),t+"://"+(-1!==this.hostname.indexOf(":")?"["+this.hostname+"]":this.hostname)+r+this.path+e}},"./node_modules/engine.io-client/lib/transports/websocket.js":function(e,t,r){(function(t){var n,o,l=r("./node_modules/engine.io-client/lib/transport.js"),h=r("./node_modules/engine.io-parser/lib/browser.js"),f=r("./node_modules/parseqs/index.js"),c=r("./node_modules/component-inherit/index.js"),d=r("./node_modules/yeast/index.js"),v=r("./node_modules/debug/src/browser.js")("engine.io-client:websocket");if("undefined"!=typeof WebSocket?n=WebSocket:"undefined"!=typeof self&&(n=self.WebSocket||self.MozWebSocket),"undefined"==typeof window)try{o=r(0)}catch(e){}var _=n||o;function m(e){e&&e.forceBase64&&(this.supportsBinary=!1),this.perMessageDeflate=e.perMessageDeflate,this.usingBrowserWebSocket=n&&!e.forceNode,this.protocols=e.protocols,this.usingBrowserWebSocket||(_=o),l.call(this,e)}e.exports=m,c(m,l),m.prototype.name="websocket",m.prototype.supportsBinary=!0,m.prototype.doOpen=function(){if(this.check()){var e=this.uri(),t=this.protocols,r={agent:this.agent,perMessageDeflate:this.perMessageDeflate};r.pfx=this.pfx,r.key=this.key,r.passphrase=this.passphrase,r.cert=this.cert,r.ca=this.ca,r.ciphers=this.ciphers,r.rejectUnauthorized=this.rejectUnauthorized,this.extraHeaders&&(r.headers=this.extraHeaders),this.localAddress&&(r.localAddress=this.localAddress);try{this.ws=this.usingBrowserWebSocket&&!this.isReactNative?t?new _(e,t):new _(e):new _(e,t,r)}catch(e){return this.emit("error",e)}void 0===this.ws.binaryType&&(this.supportsBinary=!1),this.ws.supports&&this.ws.supports.binary?(this.supportsBinary=!0,this.ws.binaryType="nodebuffer"):this.ws.binaryType="arraybuffer",this.addEventListeners()}},m.prototype.addEventListeners=function(){var e=this;this.ws.onopen=function(){e.onOpen()},this.ws.onclose=function(){e.onClose()},this.ws.onmessage=function(t){e.onData(t.data)},this.ws.onerror=function(t){e.onError("websocket error",t)}},m.prototype.write=function(e){var r=this;this.writable=!1;for(var n=e.length,i=0,o=n;i<o;i++)!function(e){h.encodePacket(e,r.supportsBinary,(function(data){if(!r.usingBrowserWebSocket){var o={};e.options&&(o.compress=e.options.compress),r.perMessageDeflate&&("string"==typeof data?t.byteLength(data):data.length)<r.perMessageDeflate.threshold&&(o.compress=!1)}try{r.usingBrowserWebSocket?r.ws.send(data):r.ws.send(data,o)}catch(e){v("websocket closed before onclose event")}--n||(r.emit("flush"),setTimeout((function(){r.writable=!0,r.emit("drain")}),0))}))}(e[i])},m.prototype.onClose=function(){l.prototype.onClose.call(this)},m.prototype.doClose=function(){void 0!==this.ws&&this.ws.close()},m.prototype.uri=function(){var e=this.query||{},t=this.secure?"wss":"ws",r="";return this.port&&("wss"===t&&443!==Number(this.port)||"ws"===t&&80!==Number(this.port))&&(r=":"+this.port),this.timestampRequests&&(e[this.timestampParam]=d()),this.supportsBinary||(e.b64=1),(e=f.encode(e)).length&&(e="?"+e),t+"://"+(-1!==this.hostname.indexOf(":")?"["+this.hostname+"]":this.hostname)+r+this.path+e},m.prototype.check=function(){return!(!_||"__initialize"in _&&this.name===m.prototype.name)}}).call(this,r("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./node_modules/engine.io-client/lib/xmlhttprequest.js":function(e,t,r){var n=r("./node_modules/has-cors/index.js"),o=r("./node_modules/engine.io-client/lib/globalThis.browser.js");e.exports=function(e){var t=e.xdomain,r=e.xscheme,l=e.enablesXDR;try{if("undefined"!=typeof XMLHttpRequest&&(!t||n))return new XMLHttpRequest}catch(e){}try{if("undefined"!=typeof XDomainRequest&&!r&&l)return new XDomainRequest}catch(e){}if(!t)try{return new(o[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")}catch(e){}}},"./node_modules/engine.io-client/node_modules/component-emitter/index.js":function(e,t,r){function n(e){if(e)return function(e){for(var t in n.prototype)e[t]=n.prototype[t];return e}(e)}e.exports=n,n.prototype.on=n.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},n.prototype.once=function(e,t){function r(){this.off(e,r),t.apply(this,arguments)}return r.fn=t,this.on(e,r),this},n.prototype.off=n.prototype.removeListener=n.prototype.removeAllListeners=n.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var r,n=this._callbacks["$"+e];if(!n)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var i=0;i<n.length;i++)if((r=n[i])===t||r.fn===t){n.splice(i,1);break}return 0===n.length&&delete this._callbacks["$"+e],this},n.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),r=this._callbacks["$"+e],i=1;i<arguments.length;i++)t[i-1]=arguments[i];if(r){i=0;for(var n=(r=r.slice(0)).length;i<n;++i)r[i].apply(this,t)}return this},n.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},n.prototype.hasListeners=function(e){return!!this.listeners(e).length}},"./node_modules/engine.io-parser/lib/browser.js":function(e,t,r){var n,o=r("./node_modules/engine.io-parser/lib/keys.js"),l=r("./node_modules/has-binary2/index.js"),h=r("./node_modules/arraybuffer.slice/index.js"),f=r("./node_modules/after/index.js"),c=r("./node_modules/engine.io-parser/lib/utf8.js");"undefined"!=typeof ArrayBuffer&&(n=r("./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js"));var d="undefined"!=typeof navigator&&/Android/i.test(navigator.userAgent),v="undefined"!=typeof navigator&&/PhantomJS/i.test(navigator.userAgent),_=d||v;t.protocol=3;var m=t.packets={open:0,close:1,ping:2,pong:3,message:4,upgrade:5,noop:6},y=o(m),x={type:"error",data:"parser error"},w=r("./node_modules/blob/index.js");function map(e,t,r){for(var n=new Array(e.length),o=f(e.length,r),l=function(i,e,r){t(e,(function(e,t){n[i]=t,r(e,n)}))},i=0;i<e.length;i++)l(i,e[i],o)}t.encodePacket=function(e,r,n,o){"function"==typeof r&&(o=r,r=!1),"function"==typeof n&&(o=n,n=null);var data=void 0===e.data?void 0:e.data.buffer||e.data;if("undefined"!=typeof ArrayBuffer&&data instanceof ArrayBuffer)return function(e,r,n){if(!r)return t.encodeBase64Packet(e,n);var data=e.data,o=new Uint8Array(data),l=new Uint8Array(1+data.byteLength);l[0]=m[e.type];for(var i=0;i<o.length;i++)l[i+1]=o[i];return n(l.buffer)}(e,r,o);if(void 0!==w&&data instanceof w)return function(e,r,n){if(!r)return t.encodeBase64Packet(e,n);if(_)return function(e,r,n){if(!r)return t.encodeBase64Packet(e,n);var o=new FileReader;return o.onload=function(){t.encodePacket({type:e.type,data:o.result},r,!0,n)},o.readAsArrayBuffer(e.data)}(e,r,n);var o=new Uint8Array(1);o[0]=m[e.type];var l=new w([o.buffer,e.data]);return n(l)}(e,r,o);if(data&&data.base64)return function(e,r){var n="b"+t.packets[e.type]+e.data.data;return r(n)}(e,o);var l=m[e.type];return void 0!==e.data&&(l+=n?c.encode(String(e.data),{strict:!1}):String(e.data)),o(""+l)},t.encodeBase64Packet=function(e,r){var n,o="b"+t.packets[e.type];if(void 0!==w&&e.data instanceof w){var l=new FileReader;return l.onload=function(){var e=l.result.split(",")[1];r(o+e)},l.readAsDataURL(e.data)}try{n=String.fromCharCode.apply(null,new Uint8Array(e.data))}catch(t){for(var h=new Uint8Array(e.data),f=new Array(h.length),i=0;i<h.length;i++)f[i]=h[i];n=String.fromCharCode.apply(null,f)}return o+=btoa(n),r(o)},t.decodePacket=function(data,e,r){if(void 0===data)return x;if("string"==typeof data){if("b"===data.charAt(0))return t.decodeBase64Packet(data.substr(1),e);if(r&&!1===(data=function(data){try{data=c.decode(data,{strict:!1})}catch(e){return!1}return data}(data)))return x;var n=data.charAt(0);return Number(n)==n&&y[n]?data.length>1?{type:y[n],data:data.substring(1)}:{type:y[n]}:x}n=new Uint8Array(data)[0];var o=h(data,1);return w&&"blob"===e&&(o=new w([o])),{type:y[n],data:o}},t.decodeBase64Packet=function(e,t){var r=y[e.charAt(0)];if(!n)return{type:r,data:{base64:!0,data:e.substr(1)}};var data=n.decode(e.substr(1));return"blob"===t&&w&&(data=new w([data])),{type:r,data:data}},t.encodePayload=function(e,r,n){"function"==typeof r&&(n=r,r=null);var o=l(e);return r&&o?w&&!_?t.encodePayloadAsBlob(e,n):t.encodePayloadAsArrayBuffer(e,n):e.length?void map(e,(function(e,n){t.encodePacket(e,!!o&&r,!1,(function(e){n(null,function(e){return e.length+":"+e}(e))}))}),(function(e,t){return n(t.join(""))})):n("0:")},t.decodePayload=function(data,e,r){if("string"!=typeof data)return t.decodePayloadAsBinary(data,e,r);var n;if("function"==typeof e&&(r=e,e=null),""===data)return r(x,0,1);for(var o,l,h="",i=0,f=data.length;i<f;i++){var c=data.charAt(i);if(":"===c){if(""===h||h!=(o=Number(h)))return r(x,0,1);if(h!=(l=data.substr(i+1,o)).length)return r(x,0,1);if(l.length){if(n=t.decodePacket(l,e,!1),x.type===n.type&&x.data===n.data)return r(x,0,1);if(!1===r(n,i+o,f))return}i+=o,h=""}else h+=c}return""!==h?r(x,0,1):void 0},t.encodePayloadAsArrayBuffer=function(e,r){if(!e.length)return r(new ArrayBuffer(0));map(e,(function(e,r){t.encodePacket(e,!0,!0,(function(data){return r(null,data)}))}),(function(e,t){var n=t.reduce((function(e,p){var t;return e+(t="string"==typeof p?p.length:p.byteLength).toString().length+t+2}),0),o=new Uint8Array(n),l=0;return t.forEach((function(p){var e="string"==typeof p,t=p;if(e){for(var view=new Uint8Array(p.length),i=0;i<p.length;i++)view[i]=p.charCodeAt(i);t=view.buffer}o[l++]=e?0:1;var r=t.byteLength.toString();for(i=0;i<r.length;i++)o[l++]=parseInt(r[i]);for(o[l++]=255,view=new Uint8Array(t),i=0;i<view.length;i++)o[l++]=view[i]})),r(o.buffer)}))},t.encodePayloadAsBlob=function(e,r){map(e,(function(e,r){t.encodePacket(e,!0,!0,(function(e){var t=new Uint8Array(1);if(t[0]=1,"string"==typeof e){for(var view=new Uint8Array(e.length),i=0;i<e.length;i++)view[i]=e.charCodeAt(i);e=view.buffer,t[0]=0}var n=(e instanceof ArrayBuffer?e.byteLength:e.size).toString(),o=new Uint8Array(n.length+1);for(i=0;i<n.length;i++)o[i]=parseInt(n[i]);if(o[n.length]=255,w){var l=new w([t.buffer,o.buffer,e]);r(null,l)}}))}),(function(e,t){return r(new w(t))}))},t.decodePayloadAsBinary=function(data,e,r){"function"==typeof e&&(r=e,e=null);for(var n=data,o=[];n.byteLength>0;){for(var l=new Uint8Array(n),f=0===l[0],c="",i=1;255!==l[i];i++){if(c.length>310)return r(x,0,1);c+=l[i]}n=h(n,2+c.length),c=parseInt(c);var d=h(n,0,c);if(f)try{d=String.fromCharCode.apply(null,new Uint8Array(d))}catch(e){var v=new Uint8Array(d);for(d="",i=0;i<v.length;i++)d+=String.fromCharCode(v[i])}o.push(d),n=h(n,c)}var _=o.length;o.forEach((function(n,i){r(t.decodePacket(n,e,!0),i,_)}))}},"./node_modules/engine.io-parser/lib/keys.js":function(e,t){e.exports=Object.keys||function(e){var t=[],r=Object.prototype.hasOwnProperty;for(var i in e)r.call(e,i)&&t.push(i);return t}},"./node_modules/engine.io-parser/lib/utf8.js":function(e,t){var r,n,o,l=String.fromCharCode;function h(e){for(var t,r,output=[],n=0,o=e.length;n<o;)(t=e.charCodeAt(n++))>=55296&&t<=56319&&n<o?56320==(64512&(r=e.charCodeAt(n++)))?output.push(((1023&t)<<10)+(1023&r)+65536):(output.push(t),n--):output.push(t);return output}function f(e,t){if(e>=55296&&e<=57343){if(t)throw Error("Lone surrogate U+"+e.toString(16).toUpperCase()+" is not a scalar value");return!1}return!0}function c(e,t){return l(e>>t&63|128)}function d(e,t){if(0==(4294967168&e))return l(e);var symbol="";return 0==(4294965248&e)?symbol=l(e>>6&31|192):0==(4294901760&e)?(f(e,t)||(e=65533),symbol=l(e>>12&15|224),symbol+=c(e,6)):0==(4292870144&e)&&(symbol=l(e>>18&7|240),symbol+=c(e,12),symbol+=c(e,6)),symbol+=l(63&e|128)}function v(){if(o>=n)throw Error("Invalid byte index");var e=255&r[o];if(o++,128==(192&e))return 63&e;throw Error("Invalid continuation byte")}function _(e){var t,l;if(o>n)throw Error("Invalid byte index");if(o==n)return!1;if(t=255&r[o],o++,0==(128&t))return t;if(192==(224&t)){if((l=(31&t)<<6|v())>=128)return l;throw Error("Invalid continuation byte")}if(224==(240&t)){if((l=(15&t)<<12|v()<<6|v())>=2048)return f(l,e)?l:65533;throw Error("Invalid continuation byte")}if(240==(248&t)&&(l=(7&t)<<18|v()<<12|v()<<6|v())>=65536&&l<=1114111)return l;throw Error("Invalid UTF-8 detected")}e.exports={version:"2.1.2",encode:function(e,t){for(var r=!1!==(t=t||{}).strict,n=h(e),o=n.length,l=-1,f="";++l<o;)f+=d(n[l],r);return f},decode:function(e,t){var f=!1!==(t=t||{}).strict;r=h(e),n=r.length,o=0;for(var c,d=[];!1!==(c=_(f));)d.push(c);return function(e){for(var t,r=e.length,n=-1,output="";++n<r;)(t=e[n])>65535&&(output+=l((t-=65536)>>>10&1023|55296),t=56320|1023&t),output+=l(t);return output}(d)}}},"./node_modules/enum/dist/enum.js":function(e,t,r){"use strict";(function(t){var n=function(e){return e&&e.__esModule?e.default:e},o=n(r("./node_modules/enum/dist/enumItem.js")),l=r("./node_modules/enum/dist/isType.js").isString,h=r("./node_modules/enum/dist/indexOf.js").indexOf,f=n(r("./node_modules/is-buffer/index.js")),c=function(){function e(map,t){var r=this;if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.size=4,this.indirection=1,t&&l(t)&&(t={name:t}),this._options=t||{},this._options.separator=this._options.separator||" | ",this._options.endianness=this._options.endianness||"LE",this._options.ignoreCase=this._options.ignoreCase||!1,this._options.freez=this._options.freez||!1,this.enums=[],map.length){this._enumLastIndex=map.length;var n=map;map={};for(var i=0;i<n.length;i++)map[n[i]]=Math.pow(2,i)}for(var h in map)v(this._options.name,h),this[h]=new o(h,map[h],{ignoreCase:this._options.ignoreCase}),this.enums.push(this[h]);this._enumMap=map,this._options.ignoreCase&&(this.getLowerCaseEnums=function(){for(var e={},i=0,t=this.enums.length;i<t;i++)e[this.enums[i].key.toLowerCase()]=this.enums[i];return e}),this._options.name&&(this.name=this._options.name),this.isFlaggable=function(){for(var i=0,e=r.enums.length;i<e;i++){var t=r.enums[i];if(0===t.value||t.value&t.value-1)return!1}return!0}(),this._options.freez&&this.freezeEnums()}return e.prototype.getKey=function(e){var t=this.get(e);if(t)return t.key},e.prototype.getValue=function(e){var t=this.get(e);if(t)return t.value},e.prototype.get=function(e,t){if(null!=e){if(f(e)&&(e=e["readUInt32"+this._options.endianness](t||0)),o.isEnumItem(e)){if(h.call(this.enums,e)>=0)return e;if(!this.isFlaggable||this.isFlaggable&&e.key.indexOf(this._options.separator)<0)return;return this.get(e.key)}if(l(e)){var r=this;if(this._options.ignoreCase&&(r=this.getLowerCaseEnums(),e=e.toLowerCase()),e.indexOf(this._options.separator)>0){for(var n=e.split(this._options.separator),c=0,i=0;i<n.length;i++)c|=r[n[i]].value;return new o(e,c)}return r[e]}for(var d in this)if(this.hasOwnProperty(d)&&this[d].value===e)return this[d];var v=null;if(this.isFlaggable)for(var _ in this)this.hasOwnProperty(_)&&0!=(e&this[_].value)&&(v?v+=this._options.separator:v="",v+=_);return this.get(v||null)}},e.prototype.set=function(e,t,r){var n=this.get(r);if(n)return e["writeUInt32"+this._options.endianness](n.value,t||0)},e.prototype.freezeEnums=function(){function e(e){return e}return Object.isFrozen&&Object.isSealed&&Object.getOwnPropertyNames&&Object.getOwnPropertyDescriptor&&Object.defineProperties&&Object.__defineGetter__&&Object.__defineSetter__&&function t(r){if("object"==typeof r&&null!==r&&!Object.isFrozen(r)&&!Object.isSealed(r)){for(var n in r)r.hasOwnProperty(n)&&(r.__defineGetter__(n,e.bind(null,r[n])),r.__defineSetter__(n,(function(e){throw TypeError("Cannot redefine property; Enum Type is not extensible.")})),t(r[n]));Object.freeze?Object.freeze(r):function(e){Object.getOwnPropertyNames(e).forEach((function(p){Object.getOwnPropertyDescriptor(e,p).configurable&&Object.defineProperties(e,p,{writable:!1,configurable:!1})}))}(r)}}(this),this},e.prototype.toJSON=function(){return this._enumMap},e.prototype.extend=function(map){if(map.length){var e=map;map={};for(var i=0;i<e.length;i++){var t=this._enumLastIndex+i;map[e[i]]=Math.pow(2,t)}for(var r in map)v(this._options.name,r),this[r]=new o(r,map[r],{ignoreCase:this._options.ignoreCase}),this.enums.push(this[r]);for(var n in this._enumMap)map[n]=this._enumMap[n];this._enumLastIndex+=map.length,this._enumMap=map,this._options.freez&&this.freezeEnums()}},e.register=function(){var r=void 0===arguments[0]?"Enum":arguments[0];t[r]||(t[r]=e)},e}();e.exports=c;var d=["_options","get","getKey","getValue","enums","isFlaggable","_enumMap","toJSON","_enumLastIndex"];function v(e,t){if(e&&"name"===t||h.call(d,t)>=0)throw new Error("Enum key "+t+" is a reserved word!")}}).call(this,r("./node_modules/webpack/buildin/global.js"))},"./node_modules/enum/dist/enumItem.js":function(e,t,r){"use strict";var n=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},o=r("./node_modules/enum/dist/isType.js"),l=o.isObject,h=o.isString,f=function(){function e(t,r){var o=void 0===arguments[2]?{}:arguments[2];n(this,e),this.key=t,this.value=r,this._options=o,this._options.ignoreCase=this._options.ignoreCase||!1}return e.prototype.has=function(t){return e.isEnumItem(t)?0!=(this.value&t.value):h(t)?this._options.ignoreCase?this.key.toLowerCase().indexOf(t.toLowerCase())>=0:this.key.indexOf(t)>=0:0!=(this.value&t)},e.prototype.is=function(t){return e.isEnumItem(t)?this.key===t.key:h(t)?this._options.ignoreCase?this.key.toLowerCase()===t.toLowerCase():this.key===t:this.value===t},e.prototype.toString=function(){return this.key},e.prototype.toJSON=function(){return this.key},e.prototype.valueOf=function(){return this.value},e.isEnumItem=function(t){return t instanceof e||l(t)&&void 0!==t.key&&void 0!==t.value},e}();e.exports=f},"./node_modules/enum/dist/indexOf.js":function(e,t,r){"use strict";t.__esModule=!0;var n=Array.prototype.indexOf||function(e,i){void 0===i&&(i=0),i<0&&(i+=this.length),i<0&&(i=0);for(var t=this.length;i<t;i++)if(i in this&&this[i]===e)return i;return-1};t.indexOf=n},"./node_modules/enum/dist/isType.js":function(e,t,r){"use strict";t.__esModule=!0;var n=function(e,t){return typeof t===e};t.isType=n,t.isObject=function(e){return n("object",e)},t.isString=function(e){return n("string",e)}},"./node_modules/enum/index.js":function(e,t,r){e.exports=r("./node_modules/enum/dist/enum.js")},"./node_modules/events/events.js":function(e,t,r){"use strict";var n,o="object"==typeof Reflect?Reflect:null,l=o&&"function"==typeof o.apply?o.apply:function(e,t,r){return Function.prototype.apply.call(e,t,r)};n=o&&"function"==typeof o.ownKeys?o.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var h=Number.isNaN||function(e){return e!=e};function f(){f.init.call(this)}e.exports=f,f.EventEmitter=f,f.prototype._events=void 0,f.prototype._eventsCount=0,f.prototype._maxListeners=void 0;var c=10;function d(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function v(e){return void 0===e._maxListeners?f.defaultMaxListeners:e._maxListeners}function _(e,t,r,n){var o,l,h,f;if(d(r),void 0===(l=e._events)?(l=e._events=Object.create(null),e._eventsCount=0):(void 0!==l.newListener&&(e.emit("newListener",t,r.listener?r.listener:r),l=e._events),h=l[t]),void 0===h)h=l[t]=r,++e._eventsCount;else if("function"==typeof h?h=l[t]=n?[r,h]:[h,r]:n?h.unshift(r):h.push(r),(o=v(e))>0&&h.length>o&&!h.warned){h.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+h.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=e,c.type=t,c.count=h.length,f=c,console&&console.warn&&console.warn(f)}return e}function m(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function y(e,t,r){var n={fired:!1,wrapFn:void 0,target:e,type:t,listener:r},o=m.bind(n);return o.listener=r,n.wrapFn=o,o}function x(e,t,r){var n=e._events;if(void 0===n)return[];var o=n[t];return void 0===o?[]:"function"==typeof o?r?[o.listener||o]:[o]:r?function(e){for(var t=new Array(e.length),i=0;i<t.length;++i)t[i]=e[i].listener||e[i];return t}(o):M(o,o.length)}function w(e){var t=this._events;if(void 0!==t){var r=t[e];if("function"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function M(e,t){for(var r=new Array(t),i=0;i<t;++i)r[i]=e[i];return r}Object.defineProperty(f,"defaultMaxListeners",{enumerable:!0,get:function(){return c},set:function(e){if("number"!=typeof e||e<0||h(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");c=e}}),f.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},f.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||h(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},f.prototype.getMaxListeners=function(){return v(this)},f.prototype.emit=function(e){for(var t=[],i=1;i<arguments.length;i++)t.push(arguments[i]);var r="error"===e,n=this._events;if(void 0!==n)r=r&&void 0===n.error;else if(!r)return!1;if(r){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var h=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw h.context=o,h}var f=n[e];if(void 0===f)return!1;if("function"==typeof f)l(f,this,t);else{var c=f.length,d=M(f,c);for(i=0;i<c;++i)l(d[i],this,t)}return!0},f.prototype.addListener=function(e,t){return _(this,e,t,!1)},f.prototype.on=f.prototype.addListener,f.prototype.prependListener=function(e,t){return _(this,e,t,!0)},f.prototype.once=function(e,t){return d(t),this.on(e,y(this,e,t)),this},f.prototype.prependOnceListener=function(e,t){return d(t),this.prependListener(e,y(this,e,t)),this},f.prototype.removeListener=function(e,t){var r,n,o,i,l;if(d(t),void 0===(n=this._events))return this;if(void 0===(r=n[e]))return this;if(r===t||r.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete n[e],n.removeListener&&this.emit("removeListener",e,r.listener||t));else if("function"!=typeof r){for(o=-1,i=r.length-1;i>=0;i--)if(r[i]===t||r[i].listener===t){l=r[i].listener,o=i;break}if(o<0)return this;0===o?r.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(r,o),1===r.length&&(n[e]=r[0]),void 0!==n.removeListener&&this.emit("removeListener",e,l||t)}return this},f.prototype.off=f.prototype.removeListener,f.prototype.removeAllListeners=function(e){var t,r,i;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[e]),this;if(0===arguments.length){var n,o=Object.keys(r);for(i=0;i<o.length;++i)"removeListener"!==(n=o[i])&&this.removeAllListeners(n);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=r[e]))this.removeListener(e,t);else if(void 0!==t)for(i=t.length-1;i>=0;i--)this.removeListener(e,t[i]);return this},f.prototype.listeners=function(e){return x(this,e,!0)},f.prototype.rawListeners=function(e){return x(this,e,!1)},f.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):w.call(e,t)},f.prototype.listenerCount=w,f.prototype.eventNames=function(){return this._eventsCount>0?n(this._events):[]}},"./node_modules/has-binary2/index.js":function(e,t,r){(function(t){var n=r("./node_modules/isarray/index.js"),o=Object.prototype.toString,l="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===o.call(Blob),h="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===o.call(File);e.exports=function e(r){if(!r||"object"!=typeof r)return!1;if(n(r)){for(var i=0,o=r.length;i<o;i++)if(e(r[i]))return!0;return!1}if("function"==typeof t&&t.isBuffer&&t.isBuffer(r)||"function"==typeof ArrayBuffer&&r instanceof ArrayBuffer||l&&r instanceof Blob||h&&r instanceof File)return!0;if(r.toJSON&&"function"==typeof r.toJSON&&1===arguments.length)return e(r.toJSON(),!0);for(var f in r)if(Object.prototype.hasOwnProperty.call(r,f)&&e(r[f]))return!0;return!1}}).call(this,r("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./node_modules/has-cors/index.js":function(e,t){try{e.exports="undefined"!=typeof XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}catch(t){e.exports=!1}},"./node_modules/ieee754/index.js":function(e,t){t.read=function(e,t,r,n,o){var l,h,f=8*o-n-1,c=(1<<f)-1,d=c>>1,v=-7,i=r?o-1:0,_=r?-1:1,s=e[t+i];for(i+=_,l=s&(1<<-v)-1,s>>=-v,v+=f;v>0;l=256*l+e[t+i],i+=_,v-=8);for(h=l&(1<<-v)-1,l>>=-v,v+=n;v>0;h=256*h+e[t+i],i+=_,v-=8);if(0===l)l=1-d;else{if(l===c)return h?NaN:1/0*(s?-1:1);h+=Math.pow(2,n),l-=d}return(s?-1:1)*h*Math.pow(2,l-n)},t.write=function(e,t,r,n,o,l){var h,f,c,d=8*l-o-1,v=(1<<d)-1,_=v>>1,rt=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,i=n?0:l-1,m=n?1:-1,s=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(f=isNaN(t)?1:0,h=v):(h=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-h))<1&&(h--,c*=2),(t+=h+_>=1?rt/c:rt*Math.pow(2,1-_))*c>=2&&(h++,c/=2),h+_>=v?(f=0,h=v):h+_>=1?(f=(t*c-1)*Math.pow(2,o),h+=_):(f=t*Math.pow(2,_-1)*Math.pow(2,o),h=0));o>=8;e[r+i]=255&f,i+=m,f/=256,o-=8);for(h=h<<o|f,d+=o;d>0;e[r+i]=255&h,i+=m,h/=256,d-=8);e[r+i-m]|=128*s}},"./node_modules/indexof/index.js":function(e,t){var r=[].indexOf;e.exports=function(e,t){if(r)return e.indexOf(t);for(var i=0;i<e.length;++i)if(e[i]===t)return i;return-1}},"./node_modules/is-buffer/index.js":function(e,t){function r(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}e.exports=function(e){return null!=e&&(r(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&r(e.slice(0,0))}(e)||!!e._isBuffer)}},"./node_modules/isarray/index.js":function(e,t){var r={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==r.call(e)}},"./node_modules/js-binarypack/lib/binarypack.js":function(e,t,r){var n=r("./node_modules/js-binarypack/lib/bufferbuilder.js").BufferBuilder,o=r("./node_modules/js-binarypack/lib/bufferbuilder.js").binaryFeatures,l={unpack:function(data){return new h(data).unpack()},pack:function(data){var e=new f;return e.pack(data),e.getBuffer()}};function h(data){this.index=0,this.dataBuffer=data,this.dataView=new Uint8Array(this.dataBuffer),this.length=this.dataBuffer.byteLength}function f(){this.bufferBuilder=new n}function c(e){var code=e.charCodeAt(0);return code<=2047?"00":code<=65535?"000":code<=2097151?"0000":code<=67108863?"00000":"000000"}e.exports=l,h.prototype.unpack=function(){var e,t=this.unpack_uint8();if(t<128)return t;if((224^t)<32)return(224^t)-32;if((e=160^t)<=15)return this.unpack_raw(e);if((e=176^t)<=15)return this.unpack_string(e);if((e=144^t)<=15)return this.unpack_array(e);if((e=128^t)<=15)return this.unpack_map(e);switch(t){case 192:return null;case 193:return;case 194:return!1;case 195:return!0;case 202:return this.unpack_float();case 203:return this.unpack_double();case 204:return this.unpack_uint8();case 205:return this.unpack_uint16();case 206:return this.unpack_uint32();case 207:return this.unpack_uint64();case 208:return this.unpack_int8();case 209:return this.unpack_int16();case 210:return this.unpack_int32();case 211:return this.unpack_int64();case 212:case 213:case 214:case 215:return;case 216:return e=this.unpack_uint16(),this.unpack_string(e);case 217:return e=this.unpack_uint32(),this.unpack_string(e);case 218:return e=this.unpack_uint16(),this.unpack_raw(e);case 219:return e=this.unpack_uint32(),this.unpack_raw(e);case 220:return e=this.unpack_uint16(),this.unpack_array(e);case 221:return e=this.unpack_uint32(),this.unpack_array(e);case 222:return e=this.unpack_uint16(),this.unpack_map(e);case 223:return e=this.unpack_uint32(),this.unpack_map(e)}},h.prototype.unpack_uint8=function(){var e=255&this.dataView[this.index];return this.index++,e},h.prototype.unpack_uint16=function(){var e=this.read(2),t=256*(255&e[0])+(255&e[1]);return this.index+=2,t},h.prototype.unpack_uint32=function(){var e=this.read(4),t=256*(256*(256*e[0]+e[1])+e[2])+e[3];return this.index+=4,t},h.prototype.unpack_uint64=function(){var e=this.read(8),t=256*(256*(256*(256*(256*(256*(256*e[0]+e[1])+e[2])+e[3])+e[4])+e[5])+e[6])+e[7];return this.index+=8,t},h.prototype.unpack_int8=function(){var e=this.unpack_uint8();return e<128?e:e-256},h.prototype.unpack_int16=function(){var e=this.unpack_uint16();return e<32768?e:e-65536},h.prototype.unpack_int32=function(){var e=this.unpack_uint32();return e<Math.pow(2,31)?e:e-Math.pow(2,32)},h.prototype.unpack_int64=function(){var e=this.unpack_uint64();return e<Math.pow(2,63)?e:e-Math.pow(2,64)},h.prototype.unpack_raw=function(e){if(this.length<this.index+e)throw new Error("BinaryPackFailure: index is out of range "+this.index+" "+e+" "+this.length);var t=this.dataBuffer.slice(this.index,this.index+e);return this.index+=e,t},h.prototype.unpack_string=function(e){for(var t,code,r=this.read(e),i=0,n="";i<e;)(t=r[i])<128?(n+=String.fromCharCode(t),i++):(192^t)<32?(code=(192^t)<<6|63&r[i+1],n+=String.fromCharCode(code),i+=2):(code=(15&t)<<12|(63&r[i+1])<<6|63&r[i+2],n+=String.fromCharCode(code),i+=3);return this.index+=e,n},h.prototype.unpack_array=function(e){for(var t=new Array(e),i=0;i<e;i++)t[i]=this.unpack();return t},h.prototype.unpack_map=function(e){for(var map={},i=0;i<e;i++){var t=this.unpack(),r=this.unpack();map[t]=r}return map},h.prototype.unpack_float=function(){var e=this.unpack_uint32(),t=(e>>23&255)-127;return(0==e>>31?1:-1)*(8388607&e|8388608)*Math.pow(2,t-23)},h.prototype.unpack_double=function(){var e=this.unpack_uint32(),t=this.unpack_uint32(),r=(e>>20&2047)-1023;return(0==e>>31?1:-1)*((1048575&e|1048576)*Math.pow(2,r-20)+t*Math.pow(2,r-52))},h.prototype.read=function(e){var t=this.index;if(t+e<=this.length)return this.dataView.subarray(t,t+e);throw new Error("BinaryPackFailure: read index out of range")},f.prototype.getBuffer=function(){return this.bufferBuilder.getBuffer()},f.prototype.pack=function(e){var t=typeof e;if("string"==t)this.pack_string(e);else if("number"==t)Math.floor(e)===e?this.pack_integer(e):this.pack_double(e);else if("boolean"==t)!0===e?this.bufferBuilder.append(195):!1===e&&this.bufferBuilder.append(194);else if("undefined"==t)this.bufferBuilder.append(192);else{if("object"!=t)throw new Error('Type "'+t+'" not yet supported');if(null===e)this.bufferBuilder.append(192);else{var r=e.constructor;if(r==Array)this.pack_array(e);else if(r==Blob||r==File)this.pack_bin(e);else if(r==ArrayBuffer)o.useArrayBufferView?this.pack_bin(new Uint8Array(e)):this.pack_bin(e);else if("BYTES_PER_ELEMENT"in e)o.useArrayBufferView?this.pack_bin(new Uint8Array(e.buffer)):this.pack_bin(e.buffer);else if(r==Object)this.pack_object(e);else if(r==Date)this.pack_string(e.toString());else{if("function"!=typeof e.toBinaryPack)throw new Error('Type "'+r.toString()+'" not yet supported');this.bufferBuilder.append(e.toBinaryPack())}}}this.bufferBuilder.flush()},f.prototype.pack_bin=function(e){var t=e.length||e.byteLength||e.size;if(t<=15)this.pack_uint8(160+t);else if(t<=65535)this.bufferBuilder.append(218),this.pack_uint16(t);else{if(!(t<=4294967295))throw new Error("Invalid length");this.bufferBuilder.append(219),this.pack_uint32(t)}this.bufferBuilder.append(e)},f.prototype.pack_string=function(e){var t=function(e){return e.length>600?new Blob([e]).size:e.replace(/[^\u0000-\u007F]/g,c).length}(e);if(t<=15)this.pack_uint8(176+t);else if(t<=65535)this.bufferBuilder.append(216),this.pack_uint16(t);else{if(!(t<=4294967295))throw new Error("Invalid length");this.bufferBuilder.append(217),this.pack_uint32(t)}this.bufferBuilder.append(e)},f.prototype.pack_array=function(e){var t=e.length;if(t<=15)this.pack_uint8(144+t);else if(t<=65535)this.bufferBuilder.append(220),this.pack_uint16(t);else{if(!(t<=4294967295))throw new Error("Invalid length");this.bufferBuilder.append(221),this.pack_uint32(t)}for(var i=0;i<t;i++)this.pack(e[i])},f.prototype.pack_integer=function(e){if(-32<=e&&e<=127)this.bufferBuilder.append(255&e);else if(0<=e&&e<=255)this.bufferBuilder.append(204),this.pack_uint8(e);else if(-128<=e&&e<=127)this.bufferBuilder.append(208),this.pack_int8(e);else if(0<=e&&e<=65535)this.bufferBuilder.append(205),this.pack_uint16(e);else if(-32768<=e&&e<=32767)this.bufferBuilder.append(209),this.pack_int16(e);else if(0<=e&&e<=4294967295)this.bufferBuilder.append(206),this.pack_uint32(e);else if(-2147483648<=e&&e<=2147483647)this.bufferBuilder.append(210),this.pack_int32(e);else if(-0x8000000000000000<=e&&e<=0x8000000000000000)this.bufferBuilder.append(211),this.pack_int64(e);else{if(!(0<=e&&e<=0x10000000000000000))throw new Error("Invalid integer");this.bufferBuilder.append(207),this.pack_uint64(e)}},f.prototype.pack_double=function(e){var t=0;e<0&&(t=1,e=-e);var r=Math.floor(Math.log(e)/Math.LN2),n=e/Math.pow(2,r)-1,o=Math.floor(n*Math.pow(2,52)),l=Math.pow(2,32),h=t<<31|r+1023<<20|o/l&1048575,f=o%l;this.bufferBuilder.append(203),this.pack_int32(h),this.pack_int32(f)},f.prototype.pack_object=function(e){var t=Object.keys(e).length;if(t<=15)this.pack_uint8(128+t);else if(t<=65535)this.bufferBuilder.append(222),this.pack_uint16(t);else{if(!(t<=4294967295))throw new Error("Invalid length");this.bufferBuilder.append(223),this.pack_uint32(t)}for(var r in e)e.hasOwnProperty(r)&&(this.pack(r),this.pack(e[r]))},f.prototype.pack_uint8=function(e){this.bufferBuilder.append(e)},f.prototype.pack_uint16=function(e){this.bufferBuilder.append(e>>8),this.bufferBuilder.append(255&e)},f.prototype.pack_uint32=function(e){var t=4294967295&e;this.bufferBuilder.append((4278190080&t)>>>24),this.bufferBuilder.append((16711680&t)>>>16),this.bufferBuilder.append((65280&t)>>>8),this.bufferBuilder.append(255&t)},f.prototype.pack_uint64=function(e){var t=e/Math.pow(2,32),r=e%Math.pow(2,32);this.bufferBuilder.append((4278190080&t)>>>24),this.bufferBuilder.append((16711680&t)>>>16),this.bufferBuilder.append((65280&t)>>>8),this.bufferBuilder.append(255&t),this.bufferBuilder.append((4278190080&r)>>>24),this.bufferBuilder.append((16711680&r)>>>16),this.bufferBuilder.append((65280&r)>>>8),this.bufferBuilder.append(255&r)},f.prototype.pack_int8=function(e){this.bufferBuilder.append(255&e)},f.prototype.pack_int16=function(e){this.bufferBuilder.append((65280&e)>>8),this.bufferBuilder.append(255&e)},f.prototype.pack_int32=function(e){this.bufferBuilder.append(e>>>24&255),this.bufferBuilder.append((16711680&e)>>>16),this.bufferBuilder.append((65280&e)>>>8),this.bufferBuilder.append(255&e)},f.prototype.pack_int64=function(e){var t=Math.floor(e/Math.pow(2,32)),r=e%Math.pow(2,32);this.bufferBuilder.append((4278190080&t)>>>24),this.bufferBuilder.append((16711680&t)>>>16),this.bufferBuilder.append((65280&t)>>>8),this.bufferBuilder.append(255&t),this.bufferBuilder.append((4278190080&r)>>>24),this.bufferBuilder.append((16711680&r)>>>16),this.bufferBuilder.append((65280&r)>>>8),this.bufferBuilder.append(255&r)}},"./node_modules/js-binarypack/lib/bufferbuilder.js":function(e,t){var r={};r.useBlobBuilder=function(){try{return new Blob([]),!1}catch(e){return!0}}(),r.useArrayBufferView=!r.useBlobBuilder&&function(){try{return 0===new Blob([new Uint8Array([])]).size}catch(e){return!0}}(),e.exports.binaryFeatures=r;var n=e.exports.BlobBuilder;function o(){this._pieces=[],this._parts=[]}"undefined"!=typeof window&&(n=e.exports.BlobBuilder=window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder||window.BlobBuilder),o.prototype.append=function(data){"number"==typeof data?this._pieces.push(data):(this.flush(),this._parts.push(data))},o.prototype.flush=function(){if(this._pieces.length>0){var e=new Uint8Array(this._pieces);r.useArrayBufferView||(e=e.buffer),this._parts.push(e),this._pieces=[]}},o.prototype.getBuffer=function(){if(this.flush(),r.useBlobBuilder){for(var e=new n,i=0,t=this._parts.length;i<t;i++)e.append(this._parts[i]);return e.getBlob()}return new Blob(this._parts)},e.exports.BufferBuilder=o},"./node_modules/ms/index.js":function(e,t){var s=1e3,r=6e4,n=60*r,o=24*n;function l(e,t,r,n){var o=t>=1.5*r;return Math.round(e/r)+" "+n+(o?"s":"")}e.exports=function(e,t){t=t||{};var h,f,c=typeof e;if("string"===c&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var l=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*l;case"weeks":case"week":case"w":return 6048e5*l;case"days":case"day":case"d":return l*o;case"hours":case"hour":case"hrs":case"hr":case"h":return l*n;case"minutes":case"minute":case"mins":case"min":case"m":return l*r;case"seconds":case"second":case"secs":case"sec":case"s":return l*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return l;default:return}}}}(e);if("number"===c&&isFinite(e))return t.long?(h=e,(f=Math.abs(h))>=o?l(h,f,o,"day"):f>=n?l(h,f,n,"hour"):f>=r?l(h,f,r,"minute"):f>=s?l(h,f,s,"second"):h+" ms"):function(e){var t=Math.abs(e);return t>=o?Math.round(e/o)+"d":t>=n?Math.round(e/n)+"h":t>=r?Math.round(e/r)+"m":t>=s?Math.round(e/s)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},"./node_modules/node-libs-browser/node_modules/buffer/index.js":function(e,t,r){"use strict";(function(e){var n=r("./node_modules/base64-js/index.js"),o=r("./node_modules/ieee754/index.js"),l=r("./node_modules/node-libs-browser/node_modules/isarray/index.js");function h(){return c.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function f(e,t){if(h()<t)throw new RangeError("Invalid typed array length");return c.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=c.prototype:(null===e&&(e=new c(t)),e.length=t),e}function c(e,t,r){if(!(c.TYPED_ARRAY_SUPPORT||this instanceof c))return new c(e,t,r);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return _(this,e)}return d(this,e,t,r)}function d(e,t,r,n){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,r,n){if(t.byteLength,r<0||t.byteLength<r)throw new RangeError("'offset' is out of bounds");if(t.byteLength<r+(n||0))throw new RangeError("'length' is out of bounds");return t=void 0===r&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,r):new Uint8Array(t,r,n),c.TYPED_ARRAY_SUPPORT?(e=t).__proto__=c.prototype:e=m(e,t),e}(e,t,r,n):"string"==typeof t?function(e,t,r){if("string"==typeof r&&""!==r||(r="utf8"),!c.isEncoding(r))throw new TypeError('"encoding" must be a valid string encoding');var n=0|x(t,r),o=(e=f(e,n)).write(t,r);return o!==n&&(e=e.slice(0,o)),e}(e,t,r):function(e,t){if(c.isBuffer(t)){var r=0|y(t.length);return 0===(e=f(e,r)).length||t.copy(e,0,0,r),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(n=t.length)!=n?f(e,0):m(e,t);if("Buffer"===t.type&&l(t.data))return m(e,t.data)}var n;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function v(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function _(e,t){if(v(t),e=f(e,t<0?0:0|y(t)),!c.TYPED_ARRAY_SUPPORT)for(var i=0;i<t;++i)e[i]=0;return e}function m(e,t){var r=t.length<0?0:0|y(t.length);e=f(e,r);for(var i=0;i<r;i+=1)e[i]=255&t[i];return e}function y(e){if(e>=h())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+h().toString(16)+" bytes");return 0|e}function x(e,t){if(c.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var r=e.length;if(0===r)return 0;for(var n=!1;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return X(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return Y(e).length;default:if(n)return X(e).length;t=(""+t).toLowerCase(),n=!0}}function w(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return D(this,t,r);case"utf8":case"utf-8":return k(this,t,r);case"ascii":return I(this,t,r);case"latin1":case"binary":return N(this,t,r);case"base64":return O(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return B(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function M(b,e,t){var i=b[e];b[e]=b[t],b[t]=i}function E(e,t,r,n,o){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,isNaN(r)&&(r=o?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(o)return-1;r=e.length-1}else if(r<0){if(!o)return-1;r=0}if("string"==typeof t&&(t=c.from(t,n)),c.isBuffer(t))return 0===t.length?-1:S(e,t,r,n,o);if("number"==typeof t)return t&=255,c.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):S(e,[t],r,n,o);throw new TypeError("val must be string, number or Buffer")}function S(e,t,r,n,o){var i,l=1,h=e.length,f=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;l=2,h/=2,f/=2,r/=2}function c(e,i){return 1===l?e[i]:e.readUInt16BE(i*l)}if(o){var d=-1;for(i=r;i<h;i++)if(c(e,i)===c(t,-1===d?0:i-d)){if(-1===d&&(d=i),i-d+1===f)return d*l}else-1!==d&&(i-=i-d),d=-1}else for(r+f>h&&(r=h-f),i=r;i>=0;i--){for(var v=!0,_=0;_<f;_++)if(c(e,i+_)!==c(t,_)){v=!1;break}if(v)return i}return-1}function T(e,t,r,n){r=Number(r)||0;var o=e.length-r;n?(n=Number(n))>o&&(n=o):n=o;var l=t.length;if(l%2!=0)throw new TypeError("Invalid hex string");n>l/2&&(n=l/2);for(var i=0;i<n;++i){var h=parseInt(t.substr(2*i,2),16);if(isNaN(h))return i;e[r+i]=h}return i}function A(e,t,r,n){return Z(X(t,e.length-r),e,r,n)}function R(e,t,r,n){return Z(function(e){for(var t=[],i=0;i<e.length;++i)t.push(255&e.charCodeAt(i));return t}(t),e,r,n)}function C(e,t,r,n){return R(e,t,r,n)}function L(e,t,r,n){return Z(Y(t),e,r,n)}function P(e,t,r,n){return Z(function(e,t){for(var r,n,o,l=[],i=0;i<e.length&&!((t-=2)<0);++i)r=e.charCodeAt(i),n=r>>8,o=r%256,l.push(o),l.push(n);return l}(t,e.length-r),e,r,n)}function O(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function k(e,t,r){r=Math.min(e.length,r);for(var n=[],i=t;i<r;){var o,l,h,f,c=e[i],d=null,v=c>239?4:c>223?3:c>191?2:1;if(i+v<=r)switch(v){case 1:c<128&&(d=c);break;case 2:128==(192&(o=e[i+1]))&&(f=(31&c)<<6|63&o)>127&&(d=f);break;case 3:o=e[i+1],l=e[i+2],128==(192&o)&&128==(192&l)&&(f=(15&c)<<12|(63&o)<<6|63&l)>2047&&(f<55296||f>57343)&&(d=f);break;case 4:o=e[i+1],l=e[i+2],h=e[i+3],128==(192&o)&&128==(192&l)&&128==(192&h)&&(f=(15&c)<<18|(63&o)<<12|(63&l)<<6|63&h)>65535&&f<1114112&&(d=f)}null===d?(d=65533,v=1):d>65535&&(d-=65536,n.push(d>>>10&1023|55296),d=56320|1023&d),n.push(d),i+=v}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);for(var r="",i=0;i<t;)r+=String.fromCharCode.apply(String,e.slice(i,i+=4096));return r}(n)}function I(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function N(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function D(e,t,r){var n,o=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>o)&&(r=o);for(var l="",i=t;i<r;++i)l+=(n=e[i])<16?"0"+n.toString(16):n.toString(16);return l}function B(e,t,r){for(var n=e.slice(t,r),o="",i=0;i<n.length;i+=2)o+=String.fromCharCode(n[i]+256*n[i+1]);return o}function F(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function U(e,t,r,n,o,l){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<l)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function j(e,t,r,n){t<0&&(t=65535+t+1);for(var i=0,o=Math.min(e.length-r,2);i<o;++i)e[r+i]=(t&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function V(e,t,r,n){t<0&&(t=4294967295+t+1);for(var i=0,o=Math.min(e.length-r,4);i<o;++i)e[r+i]=t>>>8*(n?i:3-i)&255}function z(e,t,r,n,o,l){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function G(e,t,r,n,l){return l||z(e,0,r,4),o.write(e,t,r,n,23,4),r+4}function H(e,t,r,n,l){return l||z(e,0,r,8),o.write(e,t,r,n,52,8),r+8}t.Buffer=c,t.SlowBuffer=function(e){return+e!=e&&(e=0),c.alloc(+e)},t.INSPECT_MAX_BYTES=50,c.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=h(),c.poolSize=8192,c._augment=function(e){return e.__proto__=c.prototype,e},c.from=function(e,t,r){return d(null,e,t,r)},c.TYPED_ARRAY_SUPPORT&&(c.prototype.__proto__=Uint8Array.prototype,c.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&c[Symbol.species]===c&&Object.defineProperty(c,Symbol.species,{value:null,configurable:!0})),c.alloc=function(e,t,r){return function(e,t,r,n){return v(t),t<=0?f(e,t):void 0!==r?"string"==typeof n?f(e,t).fill(r,n):f(e,t).fill(r):f(e,t)}(null,e,t,r)},c.allocUnsafe=function(e){return _(null,e)},c.allocUnsafeSlow=function(e){return _(null,e)},c.isBuffer=function(b){return!(null==b||!b._isBuffer)},c.compare=function(a,b){if(!c.isBuffer(a)||!c.isBuffer(b))throw new TypeError("Arguments must be Buffers");if(a===b)return 0;for(var e=a.length,t=b.length,i=0,r=Math.min(e,t);i<r;++i)if(a[i]!==b[i]){e=a[i],t=b[i];break}return e<t?-1:t<e?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!l(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);var i;if(void 0===t)for(t=0,i=0;i<e.length;++i)t+=e[i].length;var r=c.allocUnsafe(t),n=0;for(i=0;i<e.length;++i){var o=e[i];if(!c.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(r,n),n+=o.length}return r},c.byteLength=x,c.prototype._isBuffer=!0,c.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var i=0;i<e;i+=2)M(this,i,i+1);return this},c.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var i=0;i<e;i+=4)M(this,i,i+3),M(this,i+1,i+2);return this},c.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var i=0;i<e;i+=8)M(this,i,i+7),M(this,i+1,i+6),M(this,i+2,i+5),M(this,i+3,i+4);return this},c.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?k(this,0,e):w.apply(this,arguments)},c.prototype.equals=function(b){if(!c.isBuffer(b))throw new TypeError("Argument must be a Buffer");return this===b||0===c.compare(this,b)},c.prototype.inspect=function(){var e="",r=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,r).match(/.{2}/g).join(" "),this.length>r&&(e+=" ... ")),"<Buffer "+e+">"},c.prototype.compare=function(e,t,r,n,o){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError("out of range index");if(n>=o&&t>=r)return 0;if(n>=o)return-1;if(t>=r)return 1;if(this===e)return 0;for(var l=(o>>>=0)-(n>>>=0),h=(r>>>=0)-(t>>>=0),f=Math.min(l,h),d=this.slice(n,o),v=e.slice(t,r),i=0;i<f;++i)if(d[i]!==v[i]){l=d[i],h=v[i];break}return l<h?-1:h<l?1:0},c.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},c.prototype.indexOf=function(e,t,r){return E(this,e,t,r,!0)},c.prototype.lastIndexOf=function(e,t,r){return E(this,e,t,r,!1)},c.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var o=this.length-t;if((void 0===r||r>o)&&(r=o),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var l=!1;;)switch(n){case"hex":return T(this,e,t,r);case"utf8":case"utf-8":return A(this,e,t,r);case"ascii":return R(this,e,t,r);case"latin1":case"binary":return C(this,e,t,r);case"base64":return L(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return P(this,e,t,r);default:if(l)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),l=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},c.prototype.slice=function(e,t){var r,n=this.length;if((e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e),c.TYPED_ARRAY_SUPPORT)(r=this.subarray(e,t)).__proto__=c.prototype;else{var o=t-e;r=new c(o,void 0);for(var i=0;i<o;++i)r[i]=this[i+e]}return r},c.prototype.readUIntLE=function(e,t,r){e|=0,t|=0,r||F(e,t,this.length);for(var n=this[e],o=1,i=0;++i<t&&(o*=256);)n+=this[e+i]*o;return n},c.prototype.readUIntBE=function(e,t,r){e|=0,t|=0,r||F(e,t,this.length);for(var n=this[e+--t],o=1;t>0&&(o*=256);)n+=this[e+--t]*o;return n},c.prototype.readUInt8=function(e,t){return t||F(e,1,this.length),this[e]},c.prototype.readUInt16LE=function(e,t){return t||F(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUInt16BE=function(e,t){return t||F(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUInt32LE=function(e,t){return t||F(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUInt32BE=function(e,t){return t||F(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readIntLE=function(e,t,r){e|=0,t|=0,r||F(e,t,this.length);for(var n=this[e],o=1,i=0;++i<t&&(o*=256);)n+=this[e+i]*o;return n>=(o*=128)&&(n-=Math.pow(2,8*t)),n},c.prototype.readIntBE=function(e,t,r){e|=0,t|=0,r||F(e,t,this.length);for(var i=t,n=1,o=this[e+--i];i>0&&(n*=256);)o+=this[e+--i]*n;return o>=(n*=128)&&(o-=Math.pow(2,8*t)),o},c.prototype.readInt8=function(e,t){return t||F(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){t||F(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt16BE=function(e,t){t||F(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt32LE=function(e,t){return t||F(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return t||F(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readFloatLE=function(e,t){return t||F(e,4,this.length),o.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return t||F(e,4,this.length),o.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return t||F(e,8,this.length),o.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return t||F(e,8,this.length),o.read(this,e,!1,52,8)},c.prototype.writeUIntLE=function(e,t,r,n){e=+e,t|=0,r|=0,n||U(this,e,t,r,Math.pow(2,8*r)-1,0);var o=1,i=0;for(this[t]=255&e;++i<r&&(o*=256);)this[t+i]=e/o&255;return t+r},c.prototype.writeUIntBE=function(e,t,r,n){e=+e,t|=0,r|=0,n||U(this,e,t,r,Math.pow(2,8*r)-1,0);var i=r-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+r},c.prototype.writeUInt8=function(e,t,r){return e=+e,t|=0,r||U(this,e,t,1,255,0),c.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},c.prototype.writeUInt16LE=function(e,t,r){return e=+e,t|=0,r||U(this,e,t,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):j(this,e,t,!0),t+2},c.prototype.writeUInt16BE=function(e,t,r){return e=+e,t|=0,r||U(this,e,t,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):j(this,e,t,!1),t+2},c.prototype.writeUInt32LE=function(e,t,r){return e=+e,t|=0,r||U(this,e,t,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):V(this,e,t,!0),t+4},c.prototype.writeUInt32BE=function(e,t,r){return e=+e,t|=0,r||U(this,e,t,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):V(this,e,t,!1),t+4},c.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t|=0,!n){var o=Math.pow(2,8*r-1);U(this,e,t,r,o-1,-o)}var i=0,l=1,sub=0;for(this[t]=255&e;++i<r&&(l*=256);)e<0&&0===sub&&0!==this[t+i-1]&&(sub=1),this[t+i]=(e/l>>0)-sub&255;return t+r},c.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t|=0,!n){var o=Math.pow(2,8*r-1);U(this,e,t,r,o-1,-o)}var i=r-1,l=1,sub=0;for(this[t+i]=255&e;--i>=0&&(l*=256);)e<0&&0===sub&&0!==this[t+i+1]&&(sub=1),this[t+i]=(e/l>>0)-sub&255;return t+r},c.prototype.writeInt8=function(e,t,r){return e=+e,t|=0,r||U(this,e,t,1,127,-128),c.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,r){return e=+e,t|=0,r||U(this,e,t,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):j(this,e,t,!0),t+2},c.prototype.writeInt16BE=function(e,t,r){return e=+e,t|=0,r||U(this,e,t,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):j(this,e,t,!1),t+2},c.prototype.writeInt32LE=function(e,t,r){return e=+e,t|=0,r||U(this,e,t,4,2147483647,-2147483648),c.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):V(this,e,t,!0),t+4},c.prototype.writeInt32BE=function(e,t,r){return e=+e,t|=0,r||U(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):V(this,e,t,!1),t+4},c.prototype.writeFloatLE=function(e,t,r){return G(this,e,t,!0,r)},c.prototype.writeFloatBE=function(e,t,r){return G(this,e,t,!1,r)},c.prototype.writeDoubleLE=function(e,t,r){return H(this,e,t,!0,r)},c.prototype.writeDoubleBE=function(e,t,r){return H(this,e,t,!1,r)},c.prototype.copy=function(e,t,r,n){if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);var i,o=n-r;if(this===e&&r<t&&t<n)for(i=o-1;i>=0;--i)e[i+t]=this[i+r];else if(o<1e3||!c.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)e[i+t]=this[i+r];else Uint8Array.prototype.set.call(e,this.subarray(r,r+o),t);return o},c.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===e.length){var code=e.charCodeAt(0);code<256&&(e=code)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!c.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;var i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(i=t;i<r;++i)this[i]=e;else{var o=c.isBuffer(e)?e:X(new c(e,n).toString()),l=o.length;for(i=0;i<r-t;++i)this[i+t]=o[i%l]}return this};var W=/[^+\/0-9A-Za-z-_]/g;function X(e,t){var r;t=t||1/0;for(var n=e.length,o=null,l=[],i=0;i<n;++i){if((r=e.charCodeAt(i))>55295&&r<57344){if(!o){if(r>56319){(t-=3)>-1&&l.push(239,191,189);continue}if(i+1===n){(t-=3)>-1&&l.push(239,191,189);continue}o=r;continue}if(r<56320){(t-=3)>-1&&l.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&(t-=3)>-1&&l.push(239,191,189);if(o=null,r<128){if((t-=1)<0)break;l.push(r)}else if(r<2048){if((t-=2)<0)break;l.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;l.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;l.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return l}function Y(e){return n.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(W,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function Z(e,t,r,n){for(var i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}}).call(this,r("./node_modules/webpack/buildin/global.js"))},"./node_modules/node-libs-browser/node_modules/isarray/index.js":function(e,t){var r={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==r.call(e)}},"./node_modules/object-sizeof/byte_size.js":function(e,t){e.exports={STRING:2,BOOLEAN:4,NUMBER:8}},"./node_modules/object-sizeof/index.js":function(e,t,r){"use strict";var n=r("./node_modules/object-sizeof/byte_size.js"),o=r("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer;function l(e,object){if(null==object)return 0;for(var t=0,r=function(e){const t=[];for(var r in e)t.push(r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);Array.prototype.push.apply(t,n)}return t}(object),i=0;i<r.length;i++){var n=r[i];if("object"==typeof object[n]&&null!==object[n]){if(e.has(object[n]))continue;e.add(object[n])}t+=h(e)(n);try{t+=h(e)(object[n])}catch(e){e instanceof RangeError&&(t=0)}}return t}function h(e){return function(object){if(o.isBuffer(object))return object.length;switch(typeof object){case"string":return object.length*n.STRING;case"boolean":return n.BOOLEAN;case"number":return n.NUMBER;case"symbol":return Symbol.keyFor&&Symbol.keyFor(object)?Symbol.keyFor(object).length*n.STRING:(object.toString().length-8)*n.STRING;case"object":return Array.isArray(object)?object.map(h(e)).reduce((function(e,t){return e+t}),0):l(e,object);default:return 0}}}e.exports=function(object){return h(new WeakSet)(object)}},"./node_modules/parseqs/index.js":function(e,t){t.encode=function(e){var t="";for(var i in e)e.hasOwnProperty(i)&&(t.length&&(t+="&"),t+=encodeURIComponent(i)+"="+encodeURIComponent(e[i]));return t},t.decode=function(e){for(var t={},r=e.split("&"),i=0,n=r.length;i<n;i++){var o=r[i].split("=");t[decodeURIComponent(o[0])]=decodeURIComponent(o[1])}return t}},"./node_modules/parseuri/index.js":function(e,t){var r=/^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,n=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];e.exports=function(e){var t=e,b=e.indexOf("["),o=e.indexOf("]");-1!=b&&-1!=o&&(e=e.substring(0,b)+e.substring(b,o).replace(/:/g,";")+e.substring(o,e.length));for(var l=r.exec(e||""),h={},i=14;i--;)h[n[i]]=l[i]||"";return-1!=b&&-1!=o&&(h.source=t,h.host=h.host.substring(1,h.host.length-1).replace(/;/g,":"),h.authority=h.authority.replace("[","").replace("]","").replace(/;/g,":"),h.ipv6uri=!0),h}},"./node_modules/process/browser.js":function(e,t){var r,n,o=e.exports={};function l(){throw new Error("setTimeout has not been defined")}function h(){throw new Error("clearTimeout has not been defined")}function f(e){if(r===setTimeout)return setTimeout(e,0);if((r===l||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:l}catch(e){r=l}try{n="function"==typeof clearTimeout?clearTimeout:h}catch(e){n=h}}();var c,d=[],v=!1,_=-1;function m(){v&&c&&(v=!1,c.length?d=c.concat(d):_=-1,d.length&&y())}function y(){if(!v){var e=f(m);v=!0;for(var t=d.length;t;){for(c=d,d=[];++_<t;)c&&c[_].run();_=-1,t=d.length}c=null,v=!1,function(marker){if(n===clearTimeout)return clearTimeout(marker);if((n===h||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(marker);try{n(marker)}catch(e){try{return n.call(null,marker)}catch(e){return n.call(this,marker)}}}(e)}}function x(e,t){this.fun=e,this.array=t}function w(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)t[i-1]=arguments[i];d.push(new x(e,t)),1!==d.length||v||f(y)},x.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=w,o.addListener=w,o.once=w,o.off=w,o.removeListener=w,o.removeAllListeners=w,o.emit=w,o.prependListener=w,o.prependOnceListener=w,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},"./node_modules/query-string/index.js":function(e,t,r){"use strict";const n=r("./node_modules/strict-uri-encode/index.js"),o=r("./node_modules/decode-uri-component/index.js"),l=r("./node_modules/split-on-first/index.js");function h(e){if("string"!=typeof e||1!==e.length)throw new TypeError("arrayFormatSeparator must be single character string")}function f(e,t){return t.encode?t.strict?n(e):encodeURIComponent(e):e}function c(e,t){return t.decode?o(e):e}function d(input){const e=input.indexOf("#");return-1!==e&&(input=input.slice(0,e)),input}function v(input){const e=(input=d(input)).indexOf("?");return-1===e?"":input.slice(e+1)}function _(e,t){return t.parseNumbers&&!Number.isNaN(Number(e))&&"string"==typeof e&&""!==e.trim()?e=Number(e):!t.parseBooleans||null===e||"true"!==e.toLowerCase()&&"false"!==e.toLowerCase()||(e="true"===e.toLowerCase()),e}function m(input,e){h((e=Object.assign({decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1},e)).arrayFormatSeparator);const t=function(e){let t;switch(e.arrayFormat){case"index":return(e,r,n)=>{t=/\[(\d*)\]$/.exec(e),e=e.replace(/\[\d*\]$/,""),t?(void 0===n[e]&&(n[e]={}),n[e][t[1]]=r):n[e]=r};case"bracket":return(e,r,n)=>{t=/(\[\])$/.exec(e),e=e.replace(/\[\]$/,""),t?void 0!==n[e]?n[e]=[].concat(n[e],r):n[e]=[r]:n[e]=r};case"comma":case"separator":return(t,r,n)=>{const o="string"==typeof r&&r.split("").indexOf(e.arrayFormatSeparator)>-1?r.split(e.arrayFormatSeparator).map(t=>c(t,e)):null===r?r:c(r,e);n[t]=o};default:return(e,t,r)=>{void 0!==r[e]?r[e]=[].concat(r[e],t):r[e]=t}}}(e),r=Object.create(null);if("string"!=typeof input)return r;if(!(input=input.trim().replace(/^[?#&]/,"")))return r;for(const param of input.split("&")){let[n,o]=l(e.decode?param.replace(/\+/g," "):param,"=");o=void 0===o?null:["comma","separator"].includes(e.arrayFormat)?o:c(o,e),t(c(n,e),o,r)}for(const t of Object.keys(r)){const n=r[t];if("object"==typeof n&&null!==n)for(const t of Object.keys(n))n[t]=_(n[t],e);else r[t]=_(n,e)}return!1===e.sort?r:(!0===e.sort?Object.keys(r).sort():Object.keys(r).sort(e.sort)).reduce((e,t)=>{const n=r[t];return Boolean(n)&&"object"==typeof n&&!Array.isArray(n)?e[t]=function e(input){return Array.isArray(input)?input.sort():"object"==typeof input?e(Object.keys(input)).sort((a,b)=>Number(a)-Number(b)).map(e=>input[e]):input}(n):e[t]=n,e},Object.create(null))}t.extract=v,t.parse=m,t.stringify=(object,e)=>{if(!object)return"";h((e=Object.assign({encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:","},e)).arrayFormatSeparator);const t=t=>e.skipNull&&null==object[t]||e.skipEmptyString&&""===object[t],r=function(e){switch(e.arrayFormat){case"index":return t=>(r,n)=>{const o=r.length;return void 0===n||e.skipNull&&null===n||e.skipEmptyString&&""===n?r:null===n?[...r,[f(t,e),"[",o,"]"].join("")]:[...r,[f(t,e),"[",f(o,e),"]=",f(n,e)].join("")]};case"bracket":return t=>(r,n)=>void 0===n||e.skipNull&&null===n||e.skipEmptyString&&""===n?r:null===n?[...r,[f(t,e),"[]"].join("")]:[...r,[f(t,e),"[]=",f(n,e)].join("")];case"comma":case"separator":return t=>(r,n)=>null==n||0===n.length?r:0===r.length?[[f(t,e),"=",f(n,e)].join("")]:[[r,f(n,e)].join(e.arrayFormatSeparator)];default:return t=>(r,n)=>void 0===n||e.skipNull&&null===n||e.skipEmptyString&&""===n?r:null===n?[...r,f(t,e)]:[...r,[f(t,e),"=",f(n,e)].join("")]}}(e),n={};for(const e of Object.keys(object))t(e)||(n[e]=object[e]);const o=Object.keys(n);return!1!==e.sort&&o.sort(e.sort),o.map(t=>{const n=object[t];return void 0===n?"":null===n?f(t,e):Array.isArray(n)?n.reduce(r(t),[]).join("&"):f(t,e)+"="+f(n,e)}).filter(e=>e.length>0).join("&")},t.parseUrl=(input,e)=>({url:d(input).split("?")[0]||"",query:m(v(input),e)}),t.stringifyUrl=(input,e)=>{const r=d(input.url).split("?")[0]||"",n=t.extract(input.url),o=t.parse(n),l=function(e){let t="";const r=e.indexOf("#");return-1!==r&&(t=e.slice(r)),t}(input.url),h=Object.assign(o,input.query);let f=t.stringify(h,e);return f&&(f="?"+f),`${r}${f}${l}`}},"./node_modules/sdp-interop/lib/array-equals.js":function(e,t){e.exports=function e(t){if(!t)return!1;if(this.length!=t.length)return!1;for(var i=0,r=this.length;i<r;i++)if(this[i]instanceof Array&&t[i]instanceof Array){if(!e.apply(this[i],[t[i]]))return!1}else if(this[i]!=t[i])return!1;return!0}},"./node_modules/sdp-interop/lib/index.js":function(e,t,r){t.Interop=r("./node_modules/sdp-interop/lib/interop.js")},"./node_modules/sdp-interop/lib/interop.js":function(e,t,r){"use strict";var n=r("./node_modules/sdp-interop/lib/transform.js"),o=r("./node_modules/sdp-interop/lib/array-equals.js");function l(){this.cache={mlB2UMap:{},mlU2BMap:{}}}e.exports=l,l.prototype.candidateToUnifiedPlan=function(e){var t=new RTCIceCandidate(e);return t.sdpMLineIndex=this.cache.mlB2UMap[t.sdpMLineIndex],t},l.prototype.candidateToPlanB=function(e){var t=new RTCIceCandidate(e);if(0===t.sdpMid.indexOf("audio"))t.sdpMid="audio";else{if(0!==t.sdpMid.indexOf("video"))throw new Error("candidate with "+t.sdpMid+" not allowed");t.sdpMid="video"}return t.sdpMLineIndex=this.cache.mlU2BMap[t.sdpMLineIndex],t},l.prototype.getFirstSendingIndexFromAnswer=function(e){if(!this.cache.answer)return null;var t=n.parse(this.cache.answer);if(t&&t.media&&Array.isArray(t.media))for(var i=0;i<t.media.length;i++)if(t.media[i].type==e&&(!t.media[i].direction||"sendrecv"===t.media[i].direction||"sendonly"===t.media[i].direction))return i;return null},l.prototype.toPlanB=function(desc){var e=this;if("object"!=typeof desc||null===desc||"string"!=typeof desc.sdp)return console.warn("An empty description was passed as an argument."),desc;var t=n.parse(desc.sdp);if(void 0===t.media||!Array.isArray(t.media)||0===t.media.length)return console.warn("The description has no media."),desc;if(t.media.length<=3&&t.media.every((function(e){return-1!==["video","audio","data"].indexOf(e.mid)})))return console.warn("This description does not look like Unified Plan."),desc;for(var r=desc.sdp,o=!1,i=0;i<t.media.length;i++)t.media[i].rtp.forEach((function(t){if("NULL"===t.codec){o=!0;var r=n.parse(e.cache.offer);t.codec=r.media[i].rtp[0].codec}}));o&&(r=n.write(t)),this.cache[desc.type]=r;var l=t.media;t.media=[];var f={},c=[],d={};l.forEach((function(e){if(("string"!=typeof e.rtcpMux||"rtcp-mux"!==e.rtcpMux)&&"inactive"!==e.direction)throw new Error("Cannot convert to Plan B because m-lines without the rtcp-mux attribute were found.");void 0!==f[e.type]&&"inactive"!==f[e.type].direction||(f[e.type]=e)})),l.forEach((function(e){var r=e.type;if("application"===r)return t.media.push(e),void c.push(e.mid);"object"==typeof e.sources&&Object.keys(e.sources).forEach((function(t){"object"!=typeof f[r].sources&&(f[r].sources={}),f[r].sources[t]=e.sources[t],void 0!==e.msid&&(f[r].sources[t].msid=e.msid)})),void 0!==e.ssrcGroups&&Array.isArray(e.ssrcGroups)&&(void 0!==f[r].ssrcGroups&&Array.isArray(f[r].ssrcGroups)||(f[r].ssrcGroups=[]),f[r].ssrcGroups=f[r].ssrcGroups.concat(e.ssrcGroups));var n=e.direction;d[r]=(d[r]||0)|h[n||"inactive"],f[r]===e&&(e.mid=r,delete e.bundleOnly,delete e.msid,"inactive"!==n&&c.push(r),t.media.push(e))})),t.groups.some((function(e){if("BUNDLE"===e.type)return e.mids=c.join(" "),!0})),t.msidSemantic={semantic:"WMS",token:"*"};var v=n.write(t);return new RTCSessionDescription({type:desc.type,sdp:v})},l.prototype.toUnifiedPlan=function(desc){var e=this;if("object"!=typeof desc||null===desc||"string"!=typeof desc.sdp)return console.warn("An empty description was passed as an argument."),desc;var t=n.parse(desc.sdp);if(void 0===t.media||!Array.isArray(t.media)||0===t.media.length)return console.warn("The description has no media."),desc;if(t.media.length>3||!t.media.every((function(e){return-1!==["video","audio","data"].indexOf(e.mid)})))return console.warn("This description does not look like Plan B."),desc;var r=[];t.media.forEach((function(e){r.push(e.mid)}));var l,h=!1;if(void 0!==t.groups&&Array.isArray(t.groups)&&(h=t.groups.every((function(g){return"BUNDLE"!==g.type||o.apply(g.mids.sort(),[r.sort()])}))),!h)throw new Error("Cannot convert to Unified Plan because m-lines that are not bundled were found.");void 0!==this.cache[desc.type]&&(l=n.parse(this.cache[desc.type]));var f={audio:{},video:{}},c={},d=0,v=0;if(t.media.forEach((function(t){if(("string"!=typeof t.rtcpMux||"rtcp-mux"!==t.rtcpMux)&&"inactive"!==t.direction)throw new Error("Cannot convert to Unified Plan because m-lines without the rtcp-mux attribute were found.");if("application"!==t.type){var r=t.sources,n=t.ssrcGroups,o=t.candidates,h=t.iceUfrag,_=t.icePwd,m=t.fingerprint,y=t.port;delete t.sources,delete t.ssrcGroups,delete t.candidates,delete t.iceUfrag,delete t.icePwd,delete t.fingerprint,delete t.port,delete t.mid;var x={};void 0!==n&&Array.isArray(n)&&n.forEach((function(e){"SIM"!==e.semantics&&void 0!==e.ssrcs&&Array.isArray(e.ssrcs)&&e.ssrcs.forEach((function(t){void 0===x[t]&&(x[t]=[]),x[t].push(e)}))}));var w={};"object"==typeof r&&Object.keys(r).forEach((function(n){var M;if("offer"!==desc.type||r[n].msid)if(void 0!==x[n]&&Array.isArray(x[n])&&x[n].some((function(e){return e.ssrcs.some((function(e){if("object"==typeof w[e])return M=w[e],!0}))})),"object"==typeof M)M.sources[n]=r[n],delete r[n].msid;else{if(M=Object.create(t),w[n]=M,void 0!==r[n].msid&&(M.msid=r[n].msid,delete r[n].msid),M.sources={},M.sources[n]=r[n],M.ssrcGroups=x[n],void 0!==l&&void 0!==l.media&&Array.isArray(l.media)&&l.media.forEach((function(e){"object"==typeof e.sources&&Object.keys(e.sources).forEach((function(s){s===n&&(M.mid=e.mid)}))})),void 0===M.mid){if("answer"===desc.type)throw new Error("An unmapped SSRC was found.");M.mid=[t.type,"-",n].join("")}M.candidates=o,M.iceUfrag=h,M.icePwd=_,M.fingerprint=m,M.port=y,c[M.mid]=M,e.cache.mlU2BMap[v]=d,void 0===e.cache.mlB2UMap[d]&&(e.cache.mlB2UMap[d]=v),v++}else f[t.type][n]=r[n]})),d++}else c[t.mid]=t})),t.media=[],r=[],"answer"===desc.type)for(var i=0;i<l.media.length;i++){var _=l.media[i];void 0===c[_.mid]&&(delete _.msid,delete _.sources,delete _.ssrcGroups,_.direction&&"sendrecv"!==_.direction?"sendonly"===_.direction&&(_.direction="inactive"):_.direction="recvonly"),t.media.push(_),"string"==typeof _.mid&&r.push(_.mid)}else void 0!==l&&void 0!==l.media&&Array.isArray(l.media)&&l.media.forEach((function(e){r.push(e.mid),void 0!==c[e.mid]?t.media.push(c[e.mid]):(delete e.msid,delete e.sources,delete e.ssrcGroups,e.direction&&"sendrecv"!==e.direction||(e.direction="recvonly"),e.direction&&"sendonly"!==e.direction||(e.direction="inactive"),t.media.push(e))})),Object.keys(c).forEach((function(e){-1===r.indexOf(e)&&(r.push(e),"recvonly"===c[e].direction?t.media.some((function(t){if(("sendrecv"===t.direction||"sendonly"===t.direction)&&t.type===c[e].type)return Object.keys(c[e].sources).forEach((function(r){t.sources[r]=c[e].sources[r]})),!0})):t.media.push(c[e]))}));["audio","video"].forEach((function(r){if(t&&t.media&&Array.isArray(t.media)){var n=null;if(Object.keys(f[r]).length>0&&null===(n=e.getFirstSendingIndexFromAnswer(r)))for(var i=0;i<t.media.length;i++)if(t.media[i].type===r){n=i;break}if(n&&t.media.length>n){var o=t.media[n];Object.keys(f[r]).forEach((function(e){o.sources&&o.sources[e]&&console.warn("Replacing an existing SSRC."),o.sources||(o.sources={}),o.sources[e]=f[r][e]}))}}})),t.groups.some((function(e){if("BUNDLE"===e.type)return e.mids=r.join(" "),!0})),t.msidSemantic={semantic:"WMS",token:"*"};var m=n.write(t);return this.cache[desc.type]=m,new RTCSessionDescription({type:desc.type,sdp:m})};var h={inactive:0,recvonly:1,sendonly:2,sendrecv:3}},"./node_modules/sdp-interop/lib/transform.js":function(e,t,r){var n=r("./node_modules/sdp-interop/node_modules/sdp-transform/lib/index.js");t.write=function(e,t){return void 0!==e&&void 0!==e.media&&Array.isArray(e.media)&&e.media.forEach((function(e){void 0!==e.sources&&0!==Object.keys(e.sources).length&&(e.ssrcs=[],Object.keys(e.sources).forEach((function(t){var source=e.sources[t];Object.keys(source).forEach((function(r){e.ssrcs.push({id:t,attribute:r,value:source[r]})}))})),delete e.sources),void 0!==e.ssrcGroups&&Array.isArray(e.ssrcGroups)&&e.ssrcGroups.forEach((function(e){void 0!==e.ssrcs&&Array.isArray(e.ssrcs)&&(e.ssrcs=e.ssrcs.join(" "))}))})),void 0!==e&&void 0!==e.groups&&Array.isArray(e.groups)&&e.groups.forEach((function(g){void 0!==g.mids&&Array.isArray(g.mids)&&(g.mids=g.mids.join(" "))})),n.write(e,t)},t.parse=function(e){var t=n.parse(e);return void 0!==t&&void 0!==t.media&&Array.isArray(t.media)&&t.media.forEach((function(e){void 0!==e.ssrcs&&Array.isArray(e.ssrcs)&&(e.sources={},e.ssrcs.forEach((function(t){e.sources[t.id]||(e.sources[t.id]={}),e.sources[t.id][t.attribute]=t.value})),delete e.ssrcs),void 0!==e.ssrcGroups&&Array.isArray(e.ssrcGroups)&&e.ssrcGroups.forEach((function(e){"string"==typeof e.ssrcs&&(e.ssrcs=e.ssrcs.split(" "))}))})),void 0!==t&&void 0!==t.groups&&Array.isArray(t.groups)&&t.groups.forEach((function(g){"string"==typeof g.mids&&(g.mids=g.mids.split(" "))})),t}},"./node_modules/sdp-interop/node_modules/sdp-transform/lib/grammar.js":function(e,t){var r=e.exports={v:[{name:"version",reg:/^(\d*)$/}],o:[{name:"origin",reg:/^(\S*) (\d*) (\d*) (\S*) IP(\d) (\S*)/,names:["username","sessionId","sessionVersion","netType","ipVer","address"],format:"%s %s %d %s IP%d %s"}],s:[{name:"name"}],i:[{name:"description"}],u:[{name:"uri"}],e:[{name:"email"}],p:[{name:"phone"}],z:[{name:"timezones"}],r:[{name:"repeats"}],t:[{name:"timing",reg:/^(\d*) (\d*)/,names:["start","stop"],format:"%d %d"}],c:[{name:"connection",reg:/^IN IP(\d) (\S*)/,names:["version","ip"],format:"IN IP%d %s"}],b:[{push:"bandwidth",reg:/^(TIAS|AS|CT|RR|RS):(\d*)/,names:["type","limit"],format:"%s:%s"}],m:[{reg:/^(\w*) (\d*) ([\w\/]*)(?: (.*))?/,names:["type","port","protocol","payloads"],format:"%s %d %s %s"}],a:[{push:"rtp",reg:/^rtpmap:(\d*) ([\w\-\.]*)(?:\s*\/(\d*)(?:\s*\/(\S*))?)?/,names:["payload","codec","rate","encoding"],format:function(e){return e.encoding?"rtpmap:%d %s/%s/%s":e.rate?"rtpmap:%d %s/%s":"rtpmap:%d %s"}},{push:"fmtp",reg:/^fmtp:(\d*) ([\S| ]*)/,names:["payload","config"],format:"fmtp:%d %s"},{name:"control",reg:/^control:(.*)/,format:"control:%s"},{name:"rtcp",reg:/^rtcp:(\d*)(?: (\S*) IP(\d) (\S*))?/,names:["port","netType","ipVer","address"],format:function(e){return null!=e.address?"rtcp:%d %s IP%d %s":"rtcp:%d"}},{push:"rtcpFbTrrInt",reg:/^rtcp-fb:(\*|\d*) trr-int (\d*)/,names:["payload","value"],format:"rtcp-fb:%d trr-int %d"},{push:"rtcpFb",reg:/^rtcp-fb:(\*|\d*) ([\w-_]*)(?: ([\w-_]*))?/,names:["payload","type","subtype"],format:function(e){return null!=e.subtype?"rtcp-fb:%s %s %s":"rtcp-fb:%s %s"}},{push:"ext",reg:/^extmap:(\d+)(?:\/(\w+))? (\S*)(?: (\S*))?/,names:["value","direction","uri","config"],format:function(e){return"extmap:%d"+(e.direction?"/%s":"%v")+" %s"+(e.config?" %s":"")}},{push:"crypto",reg:/^crypto:(\d*) ([\w_]*) (\S*)(?: (\S*))?/,names:["id","suite","config","sessionConfig"],format:function(e){return null!=e.sessionConfig?"crypto:%d %s %s %s":"crypto:%d %s %s"}},{name:"setup",reg:/^setup:(\w*)/,format:"setup:%s"},{name:"mid",reg:/^mid:([^\s]*)/,format:"mid:%s"},{name:"msid",reg:/^msid:(.*)/,format:"msid:%s"},{name:"ptime",reg:/^ptime:(\d*)/,format:"ptime:%d"},{name:"maxptime",reg:/^maxptime:(\d*)/,format:"maxptime:%d"},{name:"direction",reg:/^(sendrecv|recvonly|sendonly|inactive)/},{name:"icelite",reg:/^(ice-lite)/},{name:"iceUfrag",reg:/^ice-ufrag:(\S*)/,format:"ice-ufrag:%s"},{name:"icePwd",reg:/^ice-pwd:(\S*)/,format:"ice-pwd:%s"},{name:"fingerprint",reg:/^fingerprint:(\S*) (\S*)/,names:["type","hash"],format:"fingerprint:%s %s"},{push:"candidates",reg:/^candidate:(\S*) (\d*) (\S*) (\d*) (\S*) (\d*) typ (\S*)(?: raddr (\S*) rport (\d*))?(?: tcptype (\S*))?(?: generation (\d*))?(?: network-id (\d*))?(?: network-cost (\d*))?/,names:["foundation","component","transport","priority","ip","port","type","raddr","rport","tcptype","generation","network-id","network-cost"],format:function(e){var t="candidate:%s %d %s %d %s %d typ %s";return t+=null!=e.raddr?" raddr %s rport %d":"%v%v",t+=null!=e.tcptype?" tcptype %s":"%v",null!=e.generation&&(t+=" generation %d"),t+=null!=e["network-id"]?" network-id %d":"%v",t+=null!=e["network-cost"]?" network-cost %d":"%v"}},{name:"endOfCandidates",reg:/^(end-of-candidates)/},{name:"remoteCandidates",reg:/^remote-candidates:(.*)/,format:"remote-candidates:%s"},{name:"iceOptions",reg:/^ice-options:(\S*)/,format:"ice-options:%s"},{push:"ssrcs",reg:/^ssrc:(\d*) ([\w_]*)(?::(.*))?/,names:["id","attribute","value"],format:function(e){var t="ssrc:%d";return null!=e.attribute&&(t+=" %s",null!=e.value&&(t+=":%s")),t}},{push:"ssrcGroups",reg:/^ssrc-group:([\x21\x23\x24\x25\x26\x27\x2A\x2B\x2D\x2E\w]*) (.*)/,names:["semantics","ssrcs"],format:"ssrc-group:%s %s"},{name:"msidSemantic",reg:/^msid-semantic:\s?(\w*) (\S*)/,names:["semantic","token"],format:"msid-semantic: %s %s"},{push:"groups",reg:/^group:(\w*) (.*)/,names:["type","mids"],format:"group:%s %s"},{name:"rtcpMux",reg:/^(rtcp-mux)/},{name:"rtcpRsize",reg:/^(rtcp-rsize)/},{name:"sctpmap",reg:/^sctpmap:([\w_\/]*) (\S*)(?: (\S*))?/,names:["sctpmapNumber","app","maxMessageSize"],format:function(e){return null!=e.maxMessageSize?"sctpmap:%s %s %s":"sctpmap:%s %s"}},{name:"xGoogleFlag",reg:/^x-google-flag:([^\s]*)/,format:"x-google-flag:%s"},{push:"rids",reg:/^rid:([\d\w]+) (\w+)(?: ([\S| ]*))?/,names:["id","direction","params"],format:function(e){return e.params?"rid:%s %s %s":"rid:%s %s"}},{push:"imageattrs",reg:new RegExp("^imageattr:(\\d+|\\*)[\\s\\t]+(send|recv)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*)(?:[\\s\\t]+(recv|send)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*))?"),names:["pt","dir1","attrs1","dir2","attrs2"],format:function(e){return"imageattr:%s %s %s"+(e.dir2?" %s %s":"")}},{name:"simulcast",reg:new RegExp("^simulcast:(send|recv) ([a-zA-Z0-9\\-_~;,]+)(?:\\s?(send|recv) ([a-zA-Z0-9\\-_~;,]+))?$"),names:["dir1","list1","dir2","list2"],format:function(e){return"simulcast:%s %s"+(e.dir2?" %s %s":"")}},{name:"simulcast_03",reg:/^simulcast:[\s\t]+([\S+\s\t]+)$/,names:["value"],format:"simulcast: %s"},{name:"framerate",reg:/^framerate:(\d+(?:$|\.\d+))/,format:"framerate:%s"},{push:"invalid",names:["value"]}]};Object.keys(r).forEach((function(e){r[e].forEach((function(e){e.reg||(e.reg=/(.*)/),e.format||(e.format="%s")}))}))},"./node_modules/sdp-interop/node_modules/sdp-transform/lib/index.js":function(e,t,r){var n=r("./node_modules/sdp-interop/node_modules/sdp-transform/lib/parser.js"),o=r("./node_modules/sdp-interop/node_modules/sdp-transform/lib/writer.js");t.write=o,t.parse=n.parse,t.parseFmtpConfig=n.parseFmtpConfig,t.parseParams=n.parseParams,t.parsePayloads=n.parsePayloads,t.parseRemoteCandidates=n.parseRemoteCandidates,t.parseImageAttributes=n.parseImageAttributes,t.parseSimulcastStreamList=n.parseSimulcastStreamList},"./node_modules/sdp-interop/node_modules/sdp-transform/lib/parser.js":function(e,t,r){var n=function(e){return String(Number(e))===e?Number(e):e},o=function(e,t,content){var r=e.name&&e.names;e.push&&!t[e.push]?t[e.push]=[]:r&&!t[e.name]&&(t[e.name]={});var o=e.push?{}:r?t[e.name]:t;!function(e,t,r,o){if(o&&!r)t[o]=n(e[1]);else for(var i=0;i<r.length;i+=1)null!=e[i+1]&&(t[r[i]]=n(e[i+1]))}(content.match(e.reg),o,e.names,e.name),e.push&&t[e.push].push(o)},l=r("./node_modules/sdp-interop/node_modules/sdp-transform/lib/grammar.js"),h=RegExp.prototype.test.bind(/^([a-z])=(.*)/);t.parse=function(e){var t={},r=[],n=t;return e.split(/(\r\n|\r|\n)/).filter(h).forEach((function(e){var t=e[0],content=e.slice(2);"m"===t&&(r.push({rtp:[],fmtp:[]}),n=r[r.length-1]);for(var h=0;h<(l[t]||[]).length;h+=1){var f=l[t][h];if(f.reg.test(content))return o(f,n,content)}})),t.media=r,t};var f=function(e,t){var s=t.split(/=(.+)/,2);return 2===s.length&&(e[s[0]]=n(s[1])),e};t.parseParams=function(e){return e.split(/\;\s?/).reduce(f,{})},t.parseFmtpConfig=t.parseParams,t.parsePayloads=function(e){return e.split(" ").map(Number)},t.parseRemoteCandidates=function(e){for(var t=[],r=e.split(" ").map(n),i=0;i<r.length;i+=3)t.push({component:r[i],ip:r[i+1],port:r[i+2]});return t},t.parseImageAttributes=function(e){return e.split(" ").map((function(e){return e.substring(1,e.length-1).split(",").reduce(f,{})}))},t.parseSimulcastStreamList=function(e){return e.split(";").map((function(e){return e.split(",").map((function(e){var t,r=!1;return"~"!==e[0]?t=n(e):(t=n(e.substring(1,e.length)),r=!0),{scid:t,paused:r}}))}))}},"./node_modules/sdp-interop/node_modules/sdp-transform/lib/writer.js":function(e,t,r){var n=r("./node_modules/sdp-interop/node_modules/sdp-transform/lib/grammar.js"),o=/%[sdv%]/g,l=function(e){var i=1,t=arguments,r=t.length;return e.replace(o,(function(e){if(i>=r)return e;var n=t[i];switch(i+=1,e){case"%%":return"%";case"%s":return String(n);case"%d":return Number(n);case"%v":return""}}))},h=function(e,t,r){var n=[e+"="+(t.format instanceof Function?t.format(t.push?r:r[t.name]):t.format)];if(t.names)for(var i=0;i<t.names.length;i+=1){var o=t.names[i];t.name?n.push(r[t.name][o]):n.push(r[t.names[i]])}else n.push(r[t.name]);return l.apply(null,n)},f=["v","o","s","i","u","e","p","c","b","t","r","z","a"],c=["i","c","b","a"];e.exports=function(e,t){t=t||{},null==e.version&&(e.version=0),null==e.name&&(e.name=" "),e.media.forEach((function(e){null==e.payloads&&(e.payloads="")}));var r=t.outerOrder||f,o=t.innerOrder||c,l=[];return r.forEach((function(t){n[t].forEach((function(r){r.name in e&&null!=e[r.name]?l.push(h(t,r,e)):r.push in e&&null!=e[r.push]&&e[r.push].forEach((function(e){l.push(h(t,r,e))}))}))})),e.media.forEach((function(e){l.push(h("m",n.m[0],e)),o.forEach((function(t){n[t].forEach((function(r){r.name in e&&null!=e[r.name]?l.push(h(t,r,e)):r.push in e&&null!=e[r.push]&&e[r.push].forEach((function(e){l.push(h(t,r,e))}))}))}))})),l.join("\r\n")+"\r\n"}},"./node_modules/sdp-transform/lib/grammar.js":function(e,t){var r=e.exports={v:[{name:"version",reg:/^(\d*)$/}],o:[{name:"origin",reg:/^(\S*) (\d*) (\d*) (\S*) IP(\d) (\S*)/,names:["username","sessionId","sessionVersion","netType","ipVer","address"],format:"%s %s %d %s IP%d %s"}],s:[{name:"name"}],i:[{name:"description"}],u:[{name:"uri"}],e:[{name:"email"}],p:[{name:"phone"}],z:[{name:"timezones"}],r:[{name:"repeats"}],t:[{name:"timing",reg:/^(\d*) (\d*)/,names:["start","stop"],format:"%d %d"}],c:[{name:"connection",reg:/^IN IP(\d) (\S*)/,names:["version","ip"],format:"IN IP%d %s"}],b:[{push:"bandwidth",reg:/^(TIAS|AS|CT|RR|RS):(\d*)/,names:["type","limit"],format:"%s:%s"}],m:[{reg:/^(\w*) (\d*) ([\w/]*)(?: (.*))?/,names:["type","port","protocol","payloads"],format:"%s %d %s %s"}],a:[{push:"rtp",reg:/^rtpmap:(\d*) ([\w\-.]*)(?:\s*\/(\d*)(?:\s*\/(\S*))?)?/,names:["payload","codec","rate","encoding"],format:function(e){return e.encoding?"rtpmap:%d %s/%s/%s":e.rate?"rtpmap:%d %s/%s":"rtpmap:%d %s"}},{push:"fmtp",reg:/^fmtp:(\d*) ([\S| ]*)/,names:["payload","config"],format:"fmtp:%d %s"},{name:"control",reg:/^control:(.*)/,format:"control:%s"},{name:"rtcp",reg:/^rtcp:(\d*)(?: (\S*) IP(\d) (\S*))?/,names:["port","netType","ipVer","address"],format:function(e){return null!=e.address?"rtcp:%d %s IP%d %s":"rtcp:%d"}},{push:"rtcpFbTrrInt",reg:/^rtcp-fb:(\*|\d*) trr-int (\d*)/,names:["payload","value"],format:"rtcp-fb:%d trr-int %d"},{push:"rtcpFb",reg:/^rtcp-fb:(\*|\d*) ([\w-_]*)(?: ([\w-_]*))?/,names:["payload","type","subtype"],format:function(e){return null!=e.subtype?"rtcp-fb:%s %s %s":"rtcp-fb:%s %s"}},{push:"ext",reg:/^extmap:(\d+)(?:\/(\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\S*)(?: (\S*))?/,names:["value","direction","encrypt-uri","uri","config"],format:function(e){return"extmap:%d"+(e.direction?"/%s":"%v")+(e["encrypt-uri"]?" %s":"%v")+" %s"+(e.config?" %s":"")}},{name:"extmapAllowMixed",reg:/^(extmap-allow-mixed)/},{push:"crypto",reg:/^crypto:(\d*) ([\w_]*) (\S*)(?: (\S*))?/,names:["id","suite","config","sessionConfig"],format:function(e){return null!=e.sessionConfig?"crypto:%d %s %s %s":"crypto:%d %s %s"}},{name:"setup",reg:/^setup:(\w*)/,format:"setup:%s"},{name:"connectionType",reg:/^connection:(new|existing)/,format:"connection:%s"},{name:"mid",reg:/^mid:([^\s]*)/,format:"mid:%s"},{name:"msid",reg:/^msid:(.*)/,format:"msid:%s"},{name:"ptime",reg:/^ptime:(\d*(?:\.\d*)*)/,format:"ptime:%d"},{name:"maxptime",reg:/^maxptime:(\d*(?:\.\d*)*)/,format:"maxptime:%d"},{name:"direction",reg:/^(sendrecv|recvonly|sendonly|inactive)/},{name:"icelite",reg:/^(ice-lite)/},{name:"iceUfrag",reg:/^ice-ufrag:(\S*)/,format:"ice-ufrag:%s"},{name:"icePwd",reg:/^ice-pwd:(\S*)/,format:"ice-pwd:%s"},{name:"fingerprint",reg:/^fingerprint:(\S*) (\S*)/,names:["type","hash"],format:"fingerprint:%s %s"},{push:"candidates",reg:/^candidate:(\S*) (\d*) (\S*) (\d*) (\S*) (\d*) typ (\S*)(?: raddr (\S*) rport (\d*))?(?: tcptype (\S*))?(?: generation (\d*))?(?: network-id (\d*))?(?: network-cost (\d*))?/,names:["foundation","component","transport","priority","ip","port","type","raddr","rport","tcptype","generation","network-id","network-cost"],format:function(e){var t="candidate:%s %d %s %d %s %d typ %s";return t+=null!=e.raddr?" raddr %s rport %d":"%v%v",t+=null!=e.tcptype?" tcptype %s":"%v",null!=e.generation&&(t+=" generation %d"),t+=null!=e["network-id"]?" network-id %d":"%v",t+=null!=e["network-cost"]?" network-cost %d":"%v"}},{name:"endOfCandidates",reg:/^(end-of-candidates)/},{name:"remoteCandidates",reg:/^remote-candidates:(.*)/,format:"remote-candidates:%s"},{name:"iceOptions",reg:/^ice-options:(\S*)/,format:"ice-options:%s"},{push:"ssrcs",reg:/^ssrc:(\d*) ([\w_-]*)(?::(.*))?/,names:["id","attribute","value"],format:function(e){var t="ssrc:%d";return null!=e.attribute&&(t+=" %s",null!=e.value&&(t+=":%s")),t}},{push:"ssrcGroups",reg:/^ssrc-group:([\x21\x23\x24\x25\x26\x27\x2A\x2B\x2D\x2E\w]*) (.*)/,names:["semantics","ssrcs"],format:"ssrc-group:%s %s"},{name:"msidSemantic",reg:/^msid-semantic:\s?(\w*) (\S*)/,names:["semantic","token"],format:"msid-semantic: %s %s"},{push:"groups",reg:/^group:(\w*) (.*)/,names:["type","mids"],format:"group:%s %s"},{name:"rtcpMux",reg:/^(rtcp-mux)/},{name:"rtcpRsize",reg:/^(rtcp-rsize)/},{name:"sctpmap",reg:/^sctpmap:([\w_/]*) (\S*)(?: (\S*))?/,names:["sctpmapNumber","app","maxMessageSize"],format:function(e){return null!=e.maxMessageSize?"sctpmap:%s %s %s":"sctpmap:%s %s"}},{name:"xGoogleFlag",reg:/^x-google-flag:([^\s]*)/,format:"x-google-flag:%s"},{push:"rids",reg:/^rid:([\d\w]+) (\w+)(?: ([\S| ]*))?/,names:["id","direction","params"],format:function(e){return e.params?"rid:%s %s %s":"rid:%s %s"}},{push:"imageattrs",reg:new RegExp("^imageattr:(\\d+|\\*)[\\s\\t]+(send|recv)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*)(?:[\\s\\t]+(recv|send)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*))?"),names:["pt","dir1","attrs1","dir2","attrs2"],format:function(e){return"imageattr:%s %s %s"+(e.dir2?" %s %s":"")}},{name:"simulcast",reg:new RegExp("^simulcast:(send|recv) ([a-zA-Z0-9\\-_~;,]+)(?:\\s?(send|recv) ([a-zA-Z0-9\\-_~;,]+))?$"),names:["dir1","list1","dir2","list2"],format:function(e){return"simulcast:%s %s"+(e.dir2?" %s %s":"")}},{name:"simulcast_03",reg:/^simulcast:[\s\t]+([\S+\s\t]+)$/,names:["value"],format:"simulcast: %s"},{name:"framerate",reg:/^framerate:(\d+(?:$|\.\d+))/,format:"framerate:%s"},{name:"sourceFilter",reg:/^source-filter: *(excl|incl) (\S*) (IP4|IP6|\*) (\S*) (.*)/,names:["filterMode","netType","addressTypes","destAddress","srcList"],format:"source-filter: %s %s %s %s %s"},{name:"bundleOnly",reg:/^(bundle-only)/},{name:"label",reg:/^label:(.+)/,format:"label:%s"},{name:"sctpPort",reg:/^sctp-port:(\d+)$/,format:"sctp-port:%s"},{name:"maxMessageSize",reg:/^max-message-size:(\d+)$/,format:"max-message-size:%s"},{push:"tsRefClocks",reg:/^ts-refclk:([^\s=]*)(?:=(\S*))?/,names:["clksrc","clksrcExt"],format:function(e){return"ts-refclk:%s"+(null!=e.clksrcExt?"=%s":"")}},{name:"mediaClk",reg:/^mediaclk:(?:id=(\S*))? *([^\s=]*)(?:=(\S*))?(?: *rate=(\d+)\/(\d+))?/,names:["id","mediaClockName","mediaClockValue","rateNumerator","rateDenominator"],format:function(e){var t="mediaclk:";return t+=null!=e.id?"id=%s %s":"%v%s",t+=null!=e.mediaClockValue?"=%s":"",t+=null!=e.rateNumerator?" rate=%s":"",t+=null!=e.rateDenominator?"/%s":""}},{name:"keywords",reg:/^keywds:(.+)$/,format:"keywds:%s"},{name:"content",reg:/^content:(.+)/,format:"content:%s"},{name:"bfcpFloorCtrl",reg:/^floorctrl:(c-only|s-only|c-s)/,format:"floorctrl:%s"},{name:"bfcpConfId",reg:/^confid:(\d+)/,format:"confid:%s"},{name:"bfcpUserId",reg:/^userid:(\d+)/,format:"userid:%s"},{name:"bfcpFloorId",reg:/^floorid:(.+) (?:m-stream|mstrm):(.+)/,names:["id","mStream"],format:"floorid:%s mstrm:%s"},{push:"invalid",names:["value"]}]};Object.keys(r).forEach((function(e){r[e].forEach((function(e){e.reg||(e.reg=/(.*)/),e.format||(e.format="%s")}))}))},"./node_modules/sdp-transform/lib/index.js":function(e,t,r){var n=r("./node_modules/sdp-transform/lib/parser.js"),o=r("./node_modules/sdp-transform/lib/writer.js");t.write=o,t.parse=n.parse,t.parseParams=n.parseParams,t.parseFmtpConfig=n.parseFmtpConfig,t.parsePayloads=n.parsePayloads,t.parseRemoteCandidates=n.parseRemoteCandidates,t.parseImageAttributes=n.parseImageAttributes,t.parseSimulcastStreamList=n.parseSimulcastStreamList},"./node_modules/sdp-transform/lib/parser.js":function(e,t,r){var n=function(e){return String(Number(e))===e?Number(e):e},o=function(e,t,content){var r=e.name&&e.names;e.push&&!t[e.push]?t[e.push]=[]:r&&!t[e.name]&&(t[e.name]={});var o=e.push?{}:r?t[e.name]:t;!function(e,t,r,o){if(o&&!r)t[o]=n(e[1]);else for(var i=0;i<r.length;i+=1)null!=e[i+1]&&(t[r[i]]=n(e[i+1]))}(content.match(e.reg),o,e.names,e.name),e.push&&t[e.push].push(o)},l=r("./node_modules/sdp-transform/lib/grammar.js"),h=RegExp.prototype.test.bind(/^([a-z])=(.*)/);t.parse=function(e){var t={},r=[],n=t;return e.split(/(\r\n|\r|\n)/).filter(h).forEach((function(e){var t=e[0],content=e.slice(2);"m"===t&&(r.push({rtp:[],fmtp:[]}),n=r[r.length-1]);for(var h=0;h<(l[t]||[]).length;h+=1){var f=l[t][h];if(f.reg.test(content))return o(f,n,content)}})),t.media=r,t};var f=function(e,t){var s=t.split(/=(.+)/,2);return 2===s.length?e[s[0]]=n(s[1]):1===s.length&&t.length>1&&(e[s[0]]=void 0),e};t.parseParams=function(e){return e.split(/;\s?/).reduce(f,{})},t.parseFmtpConfig=t.parseParams,t.parsePayloads=function(e){return e.toString().split(" ").map(Number)},t.parseRemoteCandidates=function(e){for(var t=[],r=e.split(" ").map(n),i=0;i<r.length;i+=3)t.push({component:r[i],ip:r[i+1],port:r[i+2]});return t},t.parseImageAttributes=function(e){return e.split(" ").map((function(e){return e.substring(1,e.length-1).split(",").reduce(f,{})}))},t.parseSimulcastStreamList=function(e){return e.split(";").map((function(e){return e.split(",").map((function(e){var t,r=!1;return"~"!==e[0]?t=n(e):(t=n(e.substring(1,e.length)),r=!0),{scid:t,paused:r}}))}))}},"./node_modules/sdp-transform/lib/writer.js":function(e,t,r){var n=r("./node_modules/sdp-transform/lib/grammar.js"),o=/%[sdv%]/g,l=function(e){var i=1,t=arguments,r=t.length;return e.replace(o,(function(e){if(i>=r)return e;var n=t[i];switch(i+=1,e){case"%%":return"%";case"%s":return String(n);case"%d":return Number(n);case"%v":return""}}))},h=function(e,t,r){var n=[e+"="+(t.format instanceof Function?t.format(t.push?r:r[t.name]):t.format)];if(t.names)for(var i=0;i<t.names.length;i+=1){var o=t.names[i];t.name?n.push(r[t.name][o]):n.push(r[t.names[i]])}else n.push(r[t.name]);return l.apply(null,n)},f=["v","o","s","i","u","e","p","c","b","t","r","z","a"],c=["i","c","b","a"];e.exports=function(e,t){t=t||{},null==e.version&&(e.version=0),null==e.name&&(e.name=" "),e.media.forEach((function(e){null==e.payloads&&(e.payloads="")}));var r=t.outerOrder||f,o=t.innerOrder||c,l=[];return r.forEach((function(t){n[t].forEach((function(r){r.name in e&&null!=e[r.name]?l.push(h(t,r,e)):r.push in e&&null!=e[r.push]&&e[r.push].forEach((function(e){l.push(h(t,r,e))}))}))})),e.media.forEach((function(e){l.push(h("m",n.m[0],e)),o.forEach((function(t){n[t].forEach((function(r){r.name in e&&null!=e[r.name]?l.push(h(t,r,e)):r.push in e&&null!=e[r.push]&&e[r.push].forEach((function(e){l.push(h(t,r,e))}))}))}))})),l.join("\r\n")+"\r\n"}},"./node_modules/socket.io-client/lib/index.js":function(e,t,r){var n=r("./node_modules/socket.io-client/lib/url.js"),o=r("./node_modules/socket.io-parser/index.js"),l=r("./node_modules/socket.io-client/lib/manager.js"),h=r("./node_modules/debug/src/browser.js")("socket.io-client");e.exports=t=c;var f=t.managers={};function c(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var r,o=n(e),source=o.source,c=o.id,path=o.path,d=f[c]&&path in f[c].nsps;return t.forceNew||t["force new connection"]||!1===t.multiplex||d?(h("ignoring socket cache for %s",source),r=l(source,t)):(f[c]||(h("new io instance for %s",source),f[c]=l(source,t)),r=f[c]),o.query&&!t.query&&(t.query=o.query),r.socket(o.path,t)}t.protocol=o.protocol,t.connect=c,t.Manager=r("./node_modules/socket.io-client/lib/manager.js"),t.Socket=r("./node_modules/socket.io-client/lib/socket.js")},"./node_modules/socket.io-client/lib/manager.js":function(e,t,r){var n=r("./node_modules/engine.io-client/lib/index.js"),o=r("./node_modules/socket.io-client/lib/socket.js"),l=r("./node_modules/component-emitter/index.js"),h=r("./node_modules/socket.io-parser/index.js"),f=r("./node_modules/socket.io-client/lib/on.js"),c=r("./node_modules/component-bind/index.js"),d=r("./node_modules/debug/src/browser.js")("socket.io-client:manager"),v=r("./node_modules/indexof/index.js"),_=r("./node_modules/backo2/index.js"),m=Object.prototype.hasOwnProperty;function y(e,t){if(!(this instanceof y))return new y(e,t);e&&"object"==typeof e&&(t=e,e=void 0),(t=t||{}).path=t.path||"/socket.io",this.nsps={},this.subs=[],this.opts=t,this.reconnection(!1!==t.reconnection),this.reconnectionAttempts(t.reconnectionAttempts||1/0),this.reconnectionDelay(t.reconnectionDelay||1e3),this.reconnectionDelayMax(t.reconnectionDelayMax||5e3),this.randomizationFactor(t.randomizationFactor||.5),this.backoff=new _({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==t.timeout?2e4:t.timeout),this.readyState="closed",this.uri=e,this.connecting=[],this.lastPing=null,this.encoding=!1,this.packetBuffer=[];var r=t.parser||h;this.encoder=new r.Encoder,this.decoder=new r.Decoder,this.autoConnect=!1!==t.autoConnect,this.autoConnect&&this.open()}e.exports=y,y.prototype.emitAll=function(){for(var e in this.emit.apply(this,arguments),this.nsps)m.call(this.nsps,e)&&this.nsps[e].emit.apply(this.nsps[e],arguments)},y.prototype.updateSocketIds=function(){for(var e in this.nsps)m.call(this.nsps,e)&&(this.nsps[e].id=this.generateId(e))},y.prototype.generateId=function(e){return("/"===e?"":e+"#")+this.engine.id},l(y.prototype),y.prototype.reconnection=function(e){return arguments.length?(this._reconnection=!!e,this):this._reconnection},y.prototype.reconnectionAttempts=function(e){return arguments.length?(this._reconnectionAttempts=e,this):this._reconnectionAttempts},y.prototype.reconnectionDelay=function(e){return arguments.length?(this._reconnectionDelay=e,this.backoff&&this.backoff.setMin(e),this):this._reconnectionDelay},y.prototype.randomizationFactor=function(e){return arguments.length?(this._randomizationFactor=e,this.backoff&&this.backoff.setJitter(e),this):this._randomizationFactor},y.prototype.reconnectionDelayMax=function(e){return arguments.length?(this._reconnectionDelayMax=e,this.backoff&&this.backoff.setMax(e),this):this._reconnectionDelayMax},y.prototype.timeout=function(e){return arguments.length?(this._timeout=e,this):this._timeout},y.prototype.maybeReconnectOnOpen=function(){!this.reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()},y.prototype.open=y.prototype.connect=function(e,t){if(d("readyState %s",this.readyState),~this.readyState.indexOf("open"))return this;d("opening %s",this.uri),this.engine=n(this.uri,this.opts);var r=this.engine,o=this;this.readyState="opening",this.skipReconnect=!1;var l=f(r,"open",(function(){o.onopen(),e&&e()})),h=f(r,"error",(function(data){if(d("connect_error"),o.cleanup(),o.readyState="closed",o.emitAll("connect_error",data),e){var t=new Error("Connection error");t.data=data,e(t)}else o.maybeReconnectOnOpen()}));if(!1!==this._timeout){var c=this._timeout;d("connect attempt will timeout after %d",c);var v=setTimeout((function(){d("connect attempt timed out after %d",c),l.destroy(),r.close(),r.emit("error","timeout"),o.emitAll("connect_timeout",c)}),c);this.subs.push({destroy:function(){clearTimeout(v)}})}return this.subs.push(l),this.subs.push(h),this},y.prototype.onopen=function(){d("open"),this.cleanup(),this.readyState="open",this.emit("open");var e=this.engine;this.subs.push(f(e,"data",c(this,"ondata"))),this.subs.push(f(e,"ping",c(this,"onping"))),this.subs.push(f(e,"pong",c(this,"onpong"))),this.subs.push(f(e,"error",c(this,"onerror"))),this.subs.push(f(e,"close",c(this,"onclose"))),this.subs.push(f(this.decoder,"decoded",c(this,"ondecoded")))},y.prototype.onping=function(){this.lastPing=new Date,this.emitAll("ping")},y.prototype.onpong=function(){this.emitAll("pong",new Date-this.lastPing)},y.prototype.ondata=function(data){this.decoder.add(data)},y.prototype.ondecoded=function(e){this.emit("packet",e)},y.prototype.onerror=function(e){d("error",e),this.emitAll("error",e)},y.prototype.socket=function(e,t){var r=this.nsps[e];if(!r){r=new o(this,e,t),this.nsps[e]=r;var n=this;r.on("connecting",l),r.on("connect",(function(){r.id=n.generateId(e)})),this.autoConnect&&l()}function l(){~v(n.connecting,r)||n.connecting.push(r)}return r},y.prototype.destroy=function(e){var t=v(this.connecting,e);~t&&this.connecting.splice(t,1),this.connecting.length||this.close()},y.prototype.packet=function(e){d("writing packet %j",e);var t=this;e.query&&0===e.type&&(e.nsp+="?"+e.query),t.encoding?t.packetBuffer.push(e):(t.encoding=!0,this.encoder.encode(e,(function(r){for(var i=0;i<r.length;i++)t.engine.write(r[i],e.options);t.encoding=!1,t.processPacketQueue()})))},y.prototype.processPacketQueue=function(){if(this.packetBuffer.length>0&&!this.encoding){var e=this.packetBuffer.shift();this.packet(e)}},y.prototype.cleanup=function(){d("cleanup");for(var e=this.subs.length,i=0;i<e;i++)this.subs.shift().destroy();this.packetBuffer=[],this.encoding=!1,this.lastPing=null,this.decoder.destroy()},y.prototype.close=y.prototype.disconnect=function(){d("disconnect"),this.skipReconnect=!0,this.reconnecting=!1,"opening"===this.readyState&&this.cleanup(),this.backoff.reset(),this.readyState="closed",this.engine&&this.engine.close()},y.prototype.onclose=function(e){d("onclose"),this.cleanup(),this.backoff.reset(),this.readyState="closed",this.emit("close",e),this._reconnection&&!this.skipReconnect&&this.reconnect()},y.prototype.reconnect=function(){if(this.reconnecting||this.skipReconnect)return this;var e=this;if(this.backoff.attempts>=this._reconnectionAttempts)d("reconnect failed"),this.backoff.reset(),this.emitAll("reconnect_failed"),this.reconnecting=!1;else{var t=this.backoff.duration();d("will wait %dms before reconnect attempt",t),this.reconnecting=!0;var r=setTimeout((function(){e.skipReconnect||(d("attempting reconnect"),e.emitAll("reconnect_attempt",e.backoff.attempts),e.emitAll("reconnecting",e.backoff.attempts),e.skipReconnect||e.open((function(t){t?(d("reconnect attempt error"),e.reconnecting=!1,e.reconnect(),e.emitAll("reconnect_error",t.data)):(d("reconnect success"),e.onreconnect())})))}),t);this.subs.push({destroy:function(){clearTimeout(r)}})}},y.prototype.onreconnect=function(){var e=this.backoff.attempts;this.reconnecting=!1,this.backoff.reset(),this.updateSocketIds(),this.emitAll("reconnect",e)}},"./node_modules/socket.io-client/lib/on.js":function(e,t){e.exports=function(e,t,r){return e.on(t,r),{destroy:function(){e.removeListener(t,r)}}}},"./node_modules/socket.io-client/lib/socket.js":function(e,t,r){var n=r("./node_modules/socket.io-parser/index.js"),o=r("./node_modules/component-emitter/index.js"),l=r("./node_modules/to-array/index.js"),h=r("./node_modules/socket.io-client/lib/on.js"),f=r("./node_modules/component-bind/index.js"),c=r("./node_modules/debug/src/browser.js")("socket.io-client:socket"),d=r("./node_modules/parseqs/index.js"),v=r("./node_modules/has-binary2/index.js");e.exports=y;var _={connect:1,connect_error:1,connect_timeout:1,connecting:1,disconnect:1,error:1,reconnect:1,reconnect_attempt:1,reconnect_failed:1,reconnect_error:1,reconnecting:1,ping:1,pong:1},m=o.prototype.emit;function y(e,t,r){this.io=e,this.nsp=t,this.json=this,this.ids=0,this.acks={},this.receiveBuffer=[],this.sendBuffer=[],this.connected=!1,this.disconnected=!0,this.flags={},r&&r.query&&(this.query=r.query),this.io.autoConnect&&this.open()}o(y.prototype),y.prototype.subEvents=function(){if(!this.subs){var e=this.io;this.subs=[h(e,"open",f(this,"onopen")),h(e,"packet",f(this,"onpacket")),h(e,"close",f(this,"onclose"))]}},y.prototype.open=y.prototype.connect=function(){return this.connected||(this.subEvents(),this.io.open(),"open"===this.io.readyState&&this.onopen(),this.emit("connecting")),this},y.prototype.send=function(){var e=l(arguments);return e.unshift("message"),this.emit.apply(this,e),this},y.prototype.emit=function(e){if(_.hasOwnProperty(e))return m.apply(this,arguments),this;var t=l(arguments),r={type:(void 0!==this.flags.binary?this.flags.binary:v(t))?n.BINARY_EVENT:n.EVENT,data:t,options:{}};return r.options.compress=!this.flags||!1!==this.flags.compress,"function"==typeof t[t.length-1]&&(c("emitting packet with ack id %d",this.ids),this.acks[this.ids]=t.pop(),r.id=this.ids++),this.connected?this.packet(r):this.sendBuffer.push(r),this.flags={},this},y.prototype.packet=function(e){e.nsp=this.nsp,this.io.packet(e)},y.prototype.onopen=function(){if(c("transport is open - connecting"),"/"!==this.nsp)if(this.query){var e="object"==typeof this.query?d.encode(this.query):this.query;c("sending connect packet with query %s",e),this.packet({type:n.CONNECT,query:e})}else this.packet({type:n.CONNECT})},y.prototype.onclose=function(e){c("close (%s)",e),this.connected=!1,this.disconnected=!0,delete this.id,this.emit("disconnect",e)},y.prototype.onpacket=function(e){var t=e.nsp===this.nsp,r=e.type===n.ERROR&&"/"===e.nsp;if(t||r)switch(e.type){case n.CONNECT:this.onconnect();break;case n.EVENT:case n.BINARY_EVENT:this.onevent(e);break;case n.ACK:case n.BINARY_ACK:this.onack(e);break;case n.DISCONNECT:this.ondisconnect();break;case n.ERROR:this.emit("error",e.data)}},y.prototype.onevent=function(e){var t=e.data||[];c("emitting event %j",t),null!=e.id&&(c("attaching ack callback to event"),t.push(this.ack(e.id))),this.connected?m.apply(this,t):this.receiveBuffer.push(t)},y.prototype.ack=function(e){var t=this,r=!1;return function(){if(!r){r=!0;var o=l(arguments);c("sending ack %j",o),t.packet({type:v(o)?n.BINARY_ACK:n.ACK,id:e,data:o})}}},y.prototype.onack=function(e){var t=this.acks[e.id];"function"==typeof t?(c("calling ack %s with %j",e.id,e.data),t.apply(this,e.data),delete this.acks[e.id]):c("bad ack %s",e.id)},y.prototype.onconnect=function(){this.connected=!0,this.disconnected=!1,this.emit("connect"),this.emitBuffered()},y.prototype.emitBuffered=function(){var i;for(i=0;i<this.receiveBuffer.length;i++)m.apply(this,this.receiveBuffer[i]);for(this.receiveBuffer=[],i=0;i<this.sendBuffer.length;i++)this.packet(this.sendBuffer[i]);this.sendBuffer=[]},y.prototype.ondisconnect=function(){c("server disconnect (%s)",this.nsp),this.destroy(),this.onclose("io server disconnect")},y.prototype.destroy=function(){if(this.subs){for(var i=0;i<this.subs.length;i++)this.subs[i].destroy();this.subs=null}this.io.destroy(this)},y.prototype.close=y.prototype.disconnect=function(){return this.connected&&(c("performing disconnect (%s)",this.nsp),this.packet({type:n.DISCONNECT})),this.destroy(),this.connected&&this.onclose("io client disconnect"),this},y.prototype.compress=function(e){return this.flags.compress=e,this},y.prototype.binary=function(e){return this.flags.binary=e,this}},"./node_modules/socket.io-client/lib/url.js":function(e,t,r){var n=r("./node_modules/parseuri/index.js"),o=r("./node_modules/debug/src/browser.js")("socket.io-client:url");e.exports=function(e,t){var r=e;t=t||"undefined"!=typeof location&&location,null==e&&(e=t.protocol+"//"+t.host),"string"==typeof e&&("/"===e.charAt(0)&&(e="/"===e.charAt(1)?t.protocol+e:t.host+e),/^(https?|wss?):\/\//.test(e)||(o("protocol-less url %s",e),e=void 0!==t?t.protocol+"//"+e:"https://"+e),o("parse %s",e),r=n(e)),r.port||(/^(http|ws)$/.test(r.protocol)?r.port="80":/^(http|ws)s$/.test(r.protocol)&&(r.port="443")),r.path=r.path||"/";var l=-1!==r.host.indexOf(":")?"["+r.host+"]":r.host;return r.id=r.protocol+"://"+l+":"+r.port,r.href=r.protocol+"://"+l+(t&&t.port===r.port?"":":"+r.port),r}},"./node_modules/socket.io-parser/binary.js":function(e,t,r){var n=r("./node_modules/isarray/index.js"),o=r("./node_modules/socket.io-parser/is-buffer.js"),l=Object.prototype.toString,h="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===l.call(Blob),f="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===l.call(File);t.deconstructPacket=function(e){var t=[],r=e.data,l=e;return l.data=function e(data,t){if(!data)return data;if(o(data)){var r={_placeholder:!0,num:t.length};return t.push(data),r}if(n(data)){for(var l=new Array(data.length),i=0;i<data.length;i++)l[i]=e(data[i],t);return l}if("object"==typeof data&&!(data instanceof Date)){for(var h in l={},data)l[h]=e(data[h],t);return l}return data}(r,t),l.attachments=t.length,{packet:l,buffers:t}},t.reconstructPacket=function(e,t){return e.data=function e(data,t){if(!data)return data;if(data&&data._placeholder)return t[data.num];if(n(data))for(var i=0;i<data.length;i++)data[i]=e(data[i],t);else if("object"==typeof data)for(var r in data)data[r]=e(data[r],t);return data}(e.data,t),e.attachments=void 0,e},t.removeBlobs=function(data,e){var t=0,r=data;!function l(c,d,v){if(!c)return c;if(h&&c instanceof Blob||f&&c instanceof File){t++;var _=new FileReader;_.onload=function(){v?v[d]=this.result:r=this.result,--t||e(r)},_.readAsArrayBuffer(c)}else if(n(c))for(var i=0;i<c.length;i++)l(c[i],i,c);else if("object"==typeof c&&!o(c))for(var m in c)l(c[m],m,c)}(r),t||e(r)}},"./node_modules/socket.io-parser/index.js":function(e,t,r){var n=r("./node_modules/socket.io-parser/node_modules/debug/src/browser.js")("socket.io-parser"),o=r("./node_modules/component-emitter/index.js"),l=r("./node_modules/socket.io-parser/binary.js"),h=r("./node_modules/isarray/index.js"),f=r("./node_modules/socket.io-parser/is-buffer.js");function c(){}t.protocol=4,t.types=["CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK"],t.CONNECT=0,t.DISCONNECT=1,t.EVENT=2,t.ACK=3,t.ERROR=4,t.BINARY_EVENT=5,t.BINARY_ACK=6,t.Encoder=c,t.Decoder=_;var d=t.ERROR+'"encode error"';function v(e){var r=""+e.type;if(t.BINARY_EVENT!==e.type&&t.BINARY_ACK!==e.type||(r+=e.attachments+"-"),e.nsp&&"/"!==e.nsp&&(r+=e.nsp+","),null!=e.id&&(r+=e.id),null!=e.data){var o=function(e){try{return JSON.stringify(e)}catch(e){return!1}}(e.data);if(!1===o)return d;r+=o}return n("encoded %j as %s",e,r),r}function _(){this.reconstructor=null}function m(e){this.reconPack=e,this.buffers=[]}function y(e){return{type:t.ERROR,data:"parser error: "+e}}c.prototype.encode=function(e,r){n("encoding packet %j",e),t.BINARY_EVENT===e.type||t.BINARY_ACK===e.type?function(e,t){l.removeBlobs(e,(function(e){var r=l.deconstructPacket(e),n=v(r.packet),o=r.buffers;o.unshift(n),t(o)}))}(e,r):r([v(e)])},o(_.prototype),_.prototype.add=function(e){var r;if("string"==typeof e)r=function(e){var i=0,p={type:Number(e.charAt(0))};if(null==t.types[p.type])return y("unknown packet type "+p.type);if(t.BINARY_EVENT===p.type||t.BINARY_ACK===p.type){for(var r="";"-"!==e.charAt(++i)&&(r+=e.charAt(i),i!=e.length););if(r!=Number(r)||"-"!==e.charAt(i))throw new Error("Illegal attachments");p.attachments=Number(r)}if("/"===e.charAt(i+1))for(p.nsp="";++i&&","!==(l=e.charAt(i))&&(p.nsp+=l,i!==e.length););else p.nsp="/";var o=e.charAt(i+1);if(""!==o&&Number(o)==o){for(p.id="";++i;){var l;if(null==(l=e.charAt(i))||Number(l)!=l){--i;break}if(p.id+=e.charAt(i),i===e.length)break}p.id=Number(p.id)}if(e.charAt(++i)){var f=function(e){try{return JSON.parse(e)}catch(e){return!1}}(e.substr(i));if(!1===f||p.type!==t.ERROR&&!h(f))return y("invalid payload");p.data=f}return n("decoded %s as %j",e,p),p}(e),t.BINARY_EVENT===r.type||t.BINARY_ACK===r.type?(this.reconstructor=new m(r),0===this.reconstructor.reconPack.attachments&&this.emit("decoded",r)):this.emit("decoded",r);else{if(!f(e)&&!e.base64)throw new Error("Unknown type: "+e);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");(r=this.reconstructor.takeBinaryData(e))&&(this.reconstructor=null,this.emit("decoded",r))}},_.prototype.destroy=function(){this.reconstructor&&this.reconstructor.finishedReconstruction()},m.prototype.takeBinaryData=function(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){var t=l.reconstructPacket(this.reconPack,this.buffers);return this.finishedReconstruction(),t}return null},m.prototype.finishedReconstruction=function(){this.reconPack=null,this.buffers=[]}},"./node_modules/socket.io-parser/is-buffer.js":function(e,t,r){(function(t){e.exports=function(e){return r&&t.isBuffer(e)||n&&(e instanceof ArrayBuffer||function(e){return"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e.buffer instanceof ArrayBuffer}(e))};var r="function"==typeof t&&"function"==typeof t.isBuffer,n="function"==typeof ArrayBuffer}).call(this,r("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./node_modules/socket.io-parser/node_modules/debug/src/browser.js":function(e,t,r){(function(n){function o(){var e;try{e=t.storage.debug}catch(e){}return!e&&void 0!==n&&"env"in n&&(e=n.env.DEBUG),e}(t=e.exports=r("./node_modules/socket.io-parser/node_modules/debug/src/debug.js")).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var r=this.useColors;if(e[0]=(r?"%c":"")+this.namespace+(r?" %c":" ")+e[0]+(r?"%c ":" ")+"+"+t.humanize(this.diff),r){var n="color: "+this.color;e.splice(1,0,n,"color: inherit");var o=0,l=0;e[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(o++,"%c"===e&&(l=o))})),e.splice(l,0,n)}},t.save=function(e){try{null==e?t.storage.removeItem("debug"):t.storage.debug=e}catch(e){}},t.load=o,t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},t.enable(o())}).call(this,r("./node_modules/process/browser.js"))},"./node_modules/socket.io-parser/node_modules/debug/src/debug.js":function(e,t,r){function n(e){var r;function n(){if(n.enabled){var e=n,o=+new Date,l=o-(r||o);e.diff=l,e.prev=r,e.curr=o,r=o;for(var h=new Array(arguments.length),i=0;i<h.length;i++)h[i]=arguments[i];h[0]=t.coerce(h[0]),"string"!=typeof h[0]&&h.unshift("%O");var f=0;h[0]=h[0].replace(/%([a-zA-Z%])/g,(function(r,n){if("%%"===r)return r;f++;var o=t.formatters[n];if("function"==typeof o){var l=h[f];r=o.call(e,l),h.splice(f,1),f--}return r})),t.formatArgs.call(e,h);var c=n.log||t.log||console.log.bind(console);c.apply(e,h)}}return n.namespace=e,n.enabled=t.enabled(e),n.useColors=t.useColors(),n.color=function(e){var i,r=0;for(i in e)r=(r<<5)-r+e.charCodeAt(i),r|=0;return t.colors[Math.abs(r)%t.colors.length]}(e),n.destroy=o,"function"==typeof t.init&&t.init(n),t.instances.push(n),n}function o(){var e=t.instances.indexOf(this);return-1!==e&&(t.instances.splice(e,1),!0)}(t=e.exports=n.debug=n.default=n).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable("")},t.enable=function(e){var i;t.save(e),t.names=[],t.skips=[];var r=("string"==typeof e?e:"").split(/[\s,]+/),n=r.length;for(i=0;i<n;i++)r[i]&&("-"===(e=r[i].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")));for(i=0;i<t.instances.length;i++){var o=t.instances[i];o.enabled=t.enabled(o.namespace)}},t.enabled=function(e){if("*"===e[e.length-1])return!0;var i,r;for(i=0,r=t.skips.length;i<r;i++)if(t.skips[i].test(e))return!1;for(i=0,r=t.names.length;i<r;i++)if(t.names[i].test(e))return!0;return!1},t.humanize=r("./node_modules/socket.io-parser/node_modules/ms/index.js"),t.instances=[],t.names=[],t.skips=[],t.formatters={}},"./node_modules/socket.io-parser/node_modules/ms/index.js":function(e,t){var s=1e3,r=6e4,n=60*r,o=24*n;function l(e,t,r){if(!(e<t))return e<1.5*t?Math.floor(e/t)+" "+r:Math.ceil(e/t)+" "+r+"s"}e.exports=function(e,t){t=t||{};var h,f=typeof e;if("string"===f&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var t=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(t){var l=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*l;case"days":case"day":case"d":return l*o;case"hours":case"hour":case"hrs":case"hr":case"h":return l*n;case"minutes":case"minute":case"mins":case"min":case"m":return l*r;case"seconds":case"second":case"secs":case"sec":case"s":return l*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return l;default:return}}}}(e);if("number"===f&&!1===isNaN(e))return t.long?l(h=e,o,"day")||l(h,n,"hour")||l(h,r,"minute")||l(h,s,"second")||h+" ms":function(e){return e>=o?Math.round(e/o)+"d":e>=n?Math.round(e/n)+"h":e>=r?Math.round(e/r)+"m":e>=s?Math.round(e/s)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},"./node_modules/split-on-first/index.js":function(e,t,r){"use strict";e.exports=(e,t)=>{if("string"!=typeof e||"string"!=typeof t)throw new TypeError("Expected the arguments to be of type `string`");if(""===t)return[e];const r=e.indexOf(t);return-1===r?[e]:[e.slice(0,r),e.slice(r+t.length)]}},"./node_modules/strict-uri-encode/index.js":function(e,t,r){"use strict";e.exports=e=>encodeURIComponent(e).replace(/[!'()*]/g,e=>"%"+e.charCodeAt(0).toString(16).toUpperCase())},"./node_modules/to-array/index.js":function(e,t){e.exports=function(e,t){for(var r=[],i=(t=t||0)||0;i<e.length;i++)r[i-t]=e[i];return r}},"./node_modules/webpack/buildin/global.js":function(e,t){var g;g=function(){return this}();try{g=g||new Function("return this")()}catch(e){"object"==typeof window&&(g=window)}e.exports=g},"./node_modules/yeast/index.js":function(e,t,r){"use strict";var n,o="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""),map={},l=0,i=0;function h(e){var t="";do{t=o[e%64]+t,e=Math.floor(e/64)}while(e>0);return t}function f(){var e=h(+new Date);return e!==n?(l=0,n=e):e+"."+h(l++)}for(;i<64;i++)map[o[i]]=i;f.encode=h,f.decode=function(e){var t=0;for(i=0;i<e.length;i++)t=64*t+map[e.charAt(i)];return t},e.exports=f},"./package.json":function(e){e.exports=JSON.parse('{"name":"skyway-js","version":"3.0.1","description":"The official JavaScript SDK for SkyWay","main":"dist/skyway.js","module":"src/peer.js","types":"skyway-js.d.ts","scripts":{"test":"karma start ./karma.conf.js","clean":"del ./dist","lint":"eslint .","build":"NODE_ENV=production webpack","dev":"webpack -w"},"repository":{"type":"git","url":"git+https://github.com/skyway/skyway-js-sdk"},"files":["dist/skyway.js","skyway-js.d.ts","LICENSE","CHANGELOG.md","README.md"],"author":"NTT Communications Corp.","license":"Apache-2.0","devDependencies":{"babel-loader":"7.1.5","babel-plugin-espower":"2.4.0","babel-plugin-istanbul":"4.1.6","babel-preset-es2015":"^6.24.1","del-cli":"^2.0.0","eslint":"^6.1.0","eslint-config-prettier":"^6.0.0","eslint-plugin-prettier":"^3.1.0","inject-loader":"^4.0.1","karma":"^4.2.0","karma-chrome-launcher":"^3.0.0","karma-coverage":"^1.1.2","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^4.0.2","mocha":"^6.2.0","power-assert":"^1.6.1","prettier":"^1.18.2","sinon":"^7.3.2","webpack":"^4.38.0","webpack-cli":"^3.3.6"},"dependencies":{"@types/node":"^12.6.8","detect-browser":"^4.6.0","enum":"git+https://github.com/eastandwest/enum.git#react-native","events":"^3.0.0","js-binarypack":"0.0.9","object-sizeof":"^1.4.0","query-string":"^6.8.2","sdp-interop":"^0.1.13","sdp-transform":"^2.11.0","socket.io-client":"^2.2.0","socket.io-parser":"~3.3.0"}}')},"./src/peer.js":function(e,t,r){"use strict";r.r(t);var n=r("./node_modules/events/events.js"),o=r.n(n),l=r("./node_modules/enum/index.js"),h=r.n(l),f=r("./node_modules/socket.io-client/lib/index.js"),c=r.n(f),d=r("./node_modules/query-string/index.js"),v=r.n(d),_={DISPATCHER_HOST:"dispatcher.webrtc.ecl.ntt.com",DISPATCHER_PORT:443,DISPATCHER_SECURE:!0,DISPATCHER_TIMEOUT:1e4,TURN_HOST:"turn.webrtc.ecl.ntt.com",TURN_PORT:443,MESSAGE_TYPES:{CLIENT:new h.a(["SEND_OFFER","SEND_ANSWER","SEND_CANDIDATE","SEND_LEAVE","ROOM_JOIN","ROOM_LEAVE","ROOM_GET_LOGS","ROOM_GET_USERS","ROOM_SEND_DATA","SFU_GET_OFFER","SFU_ANSWER","SFU_CANDIDATE","PING","UPDATE_CREDENTIAL","SEND_FORCE_CLOSE"]),SERVER:new h.a(["OPEN","ERROR","OFFER","ANSWER","CANDIDATE","LEAVE","AUTH_EXPIRES_IN","ROOM_LOGS","ROOM_USERS","ROOM_DATA","ROOM_USER_JOIN","ROOM_USER_LEAVE","SFU_OFFER","FORCE_CLOSE"])},maxChunkSize:16300,maxDataSize:20971520,minBroadcastIntervalMs:100,reconnectionAttempts:2,numberServersToTry:3,sendInterval:1,pingInterval:25e3,defaultConfig:{iceServers:[{urls:"stun:stun.webrtc.ecl.ntt.com:3478",url:"stun:stun.webrtc.ecl.ntt.com:3478"}],iceTransportPolicy:"all"}};const m=new h.a({NONE:0,ERROR:1,WARN:2,FULL:3});var y=new class{constructor(){this._logLevel=m.NONE.value,this.LOG_LEVELS=m}setLogLevel(e){switch(e.value&&(e=e.value),parseInt(e,10)){case 0:this._logLevel=m.NONE.value;break;case 1:this._logLevel=m.ERROR.value;break;case 2:this._logLevel=m.WARN.value;break;case 3:this._logLevel=m.FULL.value;break;default:this._logLevel=m.NONE.value}}warn(...e){this._logLevel>=m.WARN.value&&console.warn("SkyWay: ",...e)}error(...e){this._logLevel>=m.ERROR.value&&console.error("SkyWay: ",...e)}log(...e){this._logLevel>=m.FULL.value&&console.log("SkyWay: ",...e)}},x=r("./package.json");class w extends o.a{constructor(e,t){if(super(),this._isOpen=!1,this._isPeerIdSet=!1,this._queue=[],this._io=null,this._key=e,this._reconnectAttempts=0,t.host&&t.port){const e=t.secure?"https://":"http://";this.signalingServerUrl=`${e}${t.host}:${t.port}`}else{const e=t.dispatcherHost||_.DISPATCHER_HOST,r=t.dispatcherPort||_.DISPATCHER_PORT,n=t.dispatcherSecure||_.DISPATCHER_SECURE?"https://":"http://";this._dispatcherUrl=`${n}${e}:${r}/signaling`}}get isOpen(){return Boolean(this._io&&this._io.connected&&this._isOpen)}async start(e,t,r){let n=`apiKey=${this._key}&token=${t}&platform=javascript&sdk_version=`+x.version;if(e&&(n+="&peerId="+e,this._isPeerIdSet=!0),r&&(n+="&credential="+encodeURIComponent(JSON.stringify(r))),this._dispatcherUrl){let e;try{e=await this._getSignalingServer()}catch(e){return void this.emit("error",e)}const t=e.secure?"https://":"http://";this.signalingServerUrl=`${t}${e.host}:${e.port}`}this._io=c()(this.signalingServerUrl,{"force new connection":!0,query:n,reconnectionAttempts:_.reconnectionAttempts}),this._io.on("reconnect_failed",()=>{this._stopPings(),this._connectToNewServer()}),this._io.on("error",e=>{y.error(e)}),this._setupMessageHandlers()}async _connectToNewServer(e=0){if(e>=10||this._reconnectAttempts>=_.numberServersToTry)return void this.emit("error","Could not connect to server.");let t;try{t=await this._getSignalingServer()}catch(e){return void this.emit("error",e)}if(-1===this.signalingServerUrl.indexOf(t.host)){const e=t.secure?"https://":"http://";this.signalingServerUrl=`${e}${t.host}:${t.port}`,this._io.io.uri=this.signalingServerUrl,this._io.connect(),this._reconnectAttempts++}else this._connectToNewServer(++e)}_getSignalingServer(){return new Promise((e,t)=>{const r=new XMLHttpRequest;r.timeout=_.DISPATCHER_TIMEOUT,r.open("GET",this._dispatcherUrl,!0),r.onerror=()=>{t(new Error("There was a problem with the request for the dispatcher. Check your peer options and network connections."))},r.onabort=()=>{t(new Error("The request for the dispatcher was aborted."))},r.ontimeout=()=>{t(new Error("The request for the dispatcher timed out. Check your firewall, network speed, SkyWay failure information"))},r.onload=()=>{if(200===r.status)try{const n=JSON.parse(r.responseText);if(n&&n.domain)return void e({host:n.domain,port:443,secure:!0});t(new Error("The dispatcher server returned an invalid JSON response. have no signaling server domain in JSON."))}catch(e){t(new Error("The dispatcher server returned an invalid JSON response."))}else t(new Error("Connection failed. Unexpected response: "+r.status))},r.send(null)})}send(e,t){e?this.isOpen?!0===this._io.connected&&this._io.emit(e,t):this._queue.push({type:e,message:t}):this._io.emit("error","Invalid message")}close(){this.isOpen&&(this._stopPings(),this._io.disconnect(),this._isOpen=!1)}reconnect(){this._io.connect()}updateCredential(e){const t=v.a.parse(this._io.io.opts.query);t.credential?t.credential=encodeURIComponent(JSON.stringify(e)):y.warn("Adding a credential when one wasn't specified before."),this._io.io.opts.query=v.a.stringify(t),this.send(_.MESSAGE_TYPES.CLIENT.UPDATE_CREDENTIAL.key,e)}_setupMessageHandlers(){_.MESSAGE_TYPES.SERVER.enums.forEach(e=>{e.key===_.MESSAGE_TYPES.SERVER.OPEN.key?this._io.on(e.key,t=>{t&&t.peerId&&(this._isPeerIdSet||(this._io.io.opts.query+="&peerId="+t.peerId,this._isPeerIdSet=!0),this._reconnectAttempts=0,this._startPings(),this._sendQueuedMessages(),this._isOpen||(this._isOpen=!0,this.emit(e.key,t)))}):this._io.on(e.key,t=>{this.emit(e.key,t)})})}_sendQueuedMessages(){for(const data of this._queue)this.send(data.type,data.message);this._queue=[]}_startPings(){this._pingIntervalId||(this._pingIntervalId=setInterval(()=>{this.send(_.MESSAGE_TYPES.CLIENT.PING.key)},_.pingInterval))}_stopPings(){clearInterval(this._pingIntervalId),this._pingIntervalId=void 0}}var M=w,E=r("./node_modules/sdp-transform/lib/index.js"),S=r.n(E),T=r("./node_modules/sdp-interop/lib/index.js"),A=new class{unifiedToPlanB(e){const t=(new T.Interop).toPlanB(e).sdp,r=new Set,n=/a=ssrc:\d+ msid:(\w+)/g;let o;for(;o=n.exec(t);)r.add(o[1]);const l=t.replace("a=msid-semantic:WMS *","a=msid-semantic:WMS "+Array.from(r).join(" "));return new RTCSessionDescription({type:"offer",sdp:l})}addVideoBandwidth(e,t){return this._validateBandwidth(t),this._addBandwidth(e,t,"video")}addAudioBandwidth(e,t){return this._validateBandwidth(t),this._addBandwidth(e,t,"audio")}filterVideoCodec(e,t){return this._filterCodec(e,t,"video")}filterAudioCodec(e,t){return this._filterCodec(e,t,"audio")}ensureUnifiedPlan(e){return e.split("\r\n").map(line=>line.startsWith("a=msid-semantic")?"a=msid-semantic:WMS *":line).join("\r\n")}_filterCodec(e,t,r){if(void 0===t)throw new Error("codec is not passed");const n=S.a.parse(e);return n.media=n.media.map(e=>{if(e.type===r){e.rtp=e.rtp.filter(e=>e.codec===t);const r=e.rtp.reduce((e,t)=>[...e,t.payload],[]);if(0===e.rtp.length)throw new Error(t+" does not exist");e.fmtp&&(e.fmtp=e.fmtp.filter(e=>r.includes(e.payload))),e.rtcpFb&&(e.rtcpFb=e.rtcpFb.filter(e=>r.includes(e.payload))),e.payloads=r.join(" ")}return e}),S.a.write(n)}_addBandwidth(e,t,r){const n=S.a.parse(e);return n.media=n.media.map(e=>(e.type===r&&(e.bandwidth=[{type:"AS",limit:t.toString()},{type:"TIAS",limit:(1e3*t).toString()}]),e)),S.a.write(n)}_validateBandwidth(e){if(void 0===e)throw new Error("bandwidth is not passed");if(!/^\d+$/.test(e))throw new Error(e+" is not a number")}};const R=new h.a(["addStream","dcCreated","offerCreated","answerCreated","iceCandidate","iceConnectionFailed","negotiationNeeded","error"]);class C extends o.a{constructor(){super(),this._offerQueue=[],this._isExpectingAnswer=!1,this._replaceStreamCalled=!1,this._isNegotiationAllowed=!0,this.hasRemoteDescription=!1}async startConnection(e={}){if(this._pc=this._createPeerConnection(e.pcConfig),this._setupPCListeners(),this.originator=e.originator,this._audioBandwidth=e.audioBandwidth,this._videoBandwidth=e.videoBandwidth,this._audioCodec=e.audioCodec,this._videoCodec=e.videoCodec,this._type=e.type,"media"===this._type)if(e.stream){const t=e.stream.getVideoTracks(),r=e.stream.getAudioTracks(),n=this._getReceiveOnlyState(e);t.length>0?t.forEach(track=>this._pc.addTrack(track,e.stream)):n.video&&this._pc.addTransceiver("video",{direction:"recvonly"}),r.length>0?r.forEach(track=>this._pc.addTrack(track,e.stream)):n.audio&&this._pc.addTransceiver("audio",{direction:"recvonly"})}else this.originator&&(this._pc.addTransceiver("audio",{direction:"recvonly"}),this._pc.addTransceiver("video",{direction:"recvonly"}));if(this.originator){if("data"===this._type){const label=e.label||"",t=e.dcInit||{},r=this._pc.createDataChannel(label,t);this.emit(C.EVENTS.dcCreated.key,r)}}else await this.handleOffer(e.offer)}replaceStream(e){if(!this._pc)return;this._isNegotiationAllowed=!0;const t=this,r=e.getVideoTracks(),n=e.getAudioTracks(),o=this._pc.getSenders(),l=o.find(e=>e.track&&"video"===e.track.kind),h=o.find(e=>e.track&&"audio"===e.track.kind);function f(e,track,r){void 0===track&&void 0===e||(void 0!==track?void 0!==e?e.track.id!==track.id&&e.replaceTrack(track):t._pc.addTrack(track,r):t._pc.removeTrack(e))}f(l,r[0],e),f(h,n[0],e)}async handleOffer(e){if(this._lastOffer&&e&&this._lastOffer.sdp===e.sdp)return;if(this._isNegotiationAllowed=!0,e||(e=this._lastOffer),this._lastOffer=e,"have-remote-offer"===this._pc.signalingState)return void this._offerQueue.push(e);await this._setRemoteDescription(e);const t=await this._makeAnswerSdp().catch(e=>y.error(e));this.emit(C.EVENTS.answerCreated.key,t)}async handleAnswer(e){this._isNegotiationAllowed=!0,this._isExpectingAnswer?(await this._setRemoteDescription(e),this._isExpectingAnswer=!1):this._pc.onnegotiationneeded&&this._pc.onnegotiationneeded()}async handleCandidate(e){await this._pc.addIceCandidate(new RTCIceCandidate(e)).then(()=>y.log("Successfully added ICE candidate")).catch(e=>y.error("Failed to add ICE candidate",e))}cleanup(){y.log("Cleaning up PeerConnection"),!this._pc||"closed"===this._pc.readyState&&"closed"===this._pc.signalingState||this._pc.close(),this._pc=null}_createPeerConnection(e={}){return y.log("Creating RTCPeerConnection"),e.sdpSemantics="unified-plan",new RTCPeerConnection(e)}_setupPCListeners(){const e=this._pc;e.ontrack=e=>{y.log("Received remote media stream track"),e.streams.forEach(e=>{this.emit(C.EVENTS.addStream.key,e)})},e.ondatachannel=e=>{y.log("Received data channel");const t=e.channel;this.emit(C.EVENTS.dcCreated.key,t)},e.onicecandidate=e=>{e.candidate&&""!==e.candidate.candidate?(y.log("Generated ICE candidate for:",e.candidate),this.emit(C.EVENTS.iceCandidate.key,e.candidate)):y.log("ICE candidates gathering complete")},e.oniceconnectionstatechange=()=>{switch(e.iceConnectionState){case"completed":y.log("iceConnectionState is completed"),e.onicecandidate=()=>{};break;case"disconnected":y.log("iceConnectionState is disconnected, trying reconnect by browser");break;case"failed":y.log("iceConnectionState is failed, closing connection"),this.emit(C.EVENTS.iceConnectionFailed.key);break;default:y.log("iceConnectionState is "+e.iceConnectionState)}},e.onconnectionstatechange=()=>{y.log("connectionState is "+e.connectionState),"failed"===e.connectionState&&"disconnected"===e.iceConnectionState&&(y.log("connectionState is failed, closing connection"),this.emit(C.EVENTS.iceConnectionFailed.key))},e.onnegotiationneeded=async()=>{if(y.log("`negotiationneeded` triggered"),"stable"===e.signalingState&&this._isNegotiationAllowed){if(this._isNegotiationAllowed=!1,this.originator){const e=await this._makeOfferSdp();this._setLocalDescription(e),this.emit(C.EVENTS.negotiationNeeded.key)}else this._replaceStreamCalled&&this.handleOffer();this._replaceStreamCalled=!1}},e.onsignalingstatechange=()=>{if(y.log("signalingState is "+e.signalingState),"stable"===e.signalingState){const e=this._offerQueue.shift();e&&this.handleOffer(e)}}}async _makeOfferSdp(){let e;try{e=await this._pc.createOffer()}catch(e){throw e.type="webrtc",y.error(e),this.emit(C.EVENTS.error.key,e),y.log("Failed to createOffer, ",e),e}return y.log("Created offer."),this._audioBandwidth&&(e.sdp=A.addAudioBandwidth(e.sdp,this._audioBandwidth)),this._videoBandwidth&&(e.sdp=A.addVideoBandwidth(e.sdp,this._videoBandwidth)),this._audioCodec&&(e.sdp=A.filterAudioCodec(e.sdp,this._audioCodec)),this._videoCodec&&(e.sdp=A.filterVideoCodec(e.sdp,this._videoCodec)),e}async _makeAnswerSdp(){let e;try{e=await this._pc.createAnswer()}catch(e){throw e.type="webrtc",y.error(e),this.emit(C.EVENTS.error.key,e),y.log("Failed to createAnswer, ",e),e}y.log("Created answer."),this._audioBandwidth&&(e.sdp=A.addAudioBandwidth(e.sdp,this._audioBandwidth)),this._videoBandwidth&&(e.sdp=A.addVideoBandwidth(e.sdp,this._videoBandwidth)),this._audioCodec&&(e.sdp=A.filterAudioCodec(e.sdp,this._audioCodec)),this._videoCodec&&(e.sdp=A.filterVideoCodec(e.sdp,this._videoCodec));try{await this._pc.setLocalDescription(e)}catch(e){throw e.type="webrtc",y.error(e),this.emit(C.EVENTS.error.key,e),y.log("Failed to setLocalDescription, ",e),e}return y.log("Set localDescription: answer"),y.log("Setting local description "+JSON.stringify(e.sdp)),e}async _setLocalDescription(e){y.log("Setting local description "+JSON.stringify(e.sdp));try{await this._pc.setLocalDescription(e)}catch(e){throw e.type="webrtc",y.error(e),this.emit(C.EVENTS.error.key,e),y.log("Failed to setLocalDescription, ",e),e}y.log("Set localDescription: offer"),this._isExpectingAnswer=!0,this.emit(C.EVENTS.offerCreated.key,e)}async _setRemoteDescription(e){y.log("Setting remote description "+JSON.stringify(e));try{await this._pc.setRemoteDescription(new RTCSessionDescription(e)),this.hasRemoteDescription=!0}catch(e){throw e.type="webrtc",y.error(e),this.emit(C.EVENTS.error.key,e),y.log("Failed to setRemoteDescription: ",e),e}y.log("Set remoteDescription:",e.type)}_getReceiveOnlyState(e={}){const t={audio:!1,video:!1},r=e.stream instanceof MediaStream,n=!!r&&0!==e.stream.getAudioTracks().length,o=!!r&&0!==e.stream.getVideoTracks().length;return!1===r&&void 0===e.audioReceiveEnabled&&void 0===e.videoReceiveEnabled?(t.audio=!0,t.video=!0,t):(e.audioReceiveEnabled&&!1===n&&(t.audio=!0),e.videoReceiveEnabled&&!1===o&&(t.video=!0),!1===e.audioReceiveEnabled&&n&&y.warn("Option audioReceiveEnabled will be treated as true, because passed stream has MediaStreamTrack(kind = audio)"),!1===e.videoReceiveEnabled&&o&&y.warn("Option videoReceiveEnabled will be treated as true, because passed stream has MediaStreamTrack(kind = video)"),t)}static get EVENTS(){return R}}var L=C,P=r("./node_modules/detect-browser/index.js"),O={validateId:function(e){return!e||/^[A-Za-z0-9_-]+(?:[ _-][A-Za-z0-9]+)*$/.exec(e)},validateKey:function(e){return!e||/^[a-z0-9]{8}(-[a-z0-9]{4}){3}-[a-z0-9]{12}$/.exec(e)},randomId:function(){return(Math.random().toString(36)+"0000000000000000000").substr(2,16)},randomToken:function(){return Math.random().toString(36).substr(2)},joinArrayBuffers:function(e){const t=e.reduce((e,t)=>e+t.byteLength,0),r=new Uint8Array(t);let n=0;for(const t of e)r.set(new Uint8Array(t),n),n+=t.byteLength;return r.buffer},blobToArrayBuffer:function(e,t){const r=new FileReader;r.onload=e=>{t(e.target.result)},r.readAsArrayBuffer(e)},isSecure:function(){return"https:"===location.protocol},detectBrowser:function(){const{name:e,version:t}=Object(P.detect)(),[r,n,o]=t.split(".").map(i=>parseInt(i));return{name:e,major:r,minor:n,patch:o}},isPlanBSafari:function(){const{name:e}=Object(P.detect)();return("safari"===e||"ios"===e)&&!RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection")}};const k=new h.a(["candidate","offer","answer","close","forceClose"]);class I extends o.a{constructor(e,t){if(super(),t=t||{},this.constructor===I)throw new TypeError("Cannot construct Connection instances directly");this._options=t,this.open=!1,this.type=void 0,this.metadata=this._options.metadata,this.remoteId=e,this._negotiator=new L,this._idPrefix="c_",this._randomIdSuffix=O.randomToken(),this._setupNegotiatorMessageHandlers()}get id(){return this._options.connectionId||this._idPrefix+this._randomIdSuffix}async handleAnswer(e){this._pcAvailable?(await this._negotiator.handleAnswer(e.answer),this.open=!0,this._handleQueuedMessages()):(y.log(`Queuing ANSWER message in ${this.id} from ${this.remoteId}`),this._queuedMessages.push({type:_.MESSAGE_TYPES.SERVER.ANSWER.key,payload:e}))}handleCandidate(e){!this._negotiator.originator||this._negotiator.hasRemoteDescription?this._pcAvailable?this._negotiator.handleCandidate(e.candidate):(y.log(`Queuing CANDIDATE message in ${this.id} from ${this.remoteId}`),this._queuedMessages.push({type:_.MESSAGE_TYPES.SERVER.CANDIDATE.key,payload:e})):this._queuedMessages.push({type:_.MESSAGE_TYPES.SERVER.CANDIDATE.key,payload:e})}updateOffer(e){this.open?this._negotiator.handleOffer(e.offer):this._options.payload=e}getPeerConnection(){return this.open?this._negotiator._pc:null}_handleQueuedMessages(){for(const e of this._queuedMessages)switch(e.type){case _.MESSAGE_TYPES.SERVER.ANSWER.key:this.handleAnswer(e.payload);break;case _.MESSAGE_TYPES.SERVER.CANDIDATE.key:this.handleCandidate(e.payload);break;default:y.warn("Unrecognized message type:",e.type,"from peer:",this.remoteId)}this._queuedMessages=[]}close(e=!1){this.open&&(this.open=!1,this._negotiator.cleanup(),this.emit(I.EVENTS.close.key),e&&this.emit(I.EVENTS.forceClose.key))}_setupNegotiatorMessageHandlers(){this._negotiator.on(L.EVENTS.answerCreated.key,e=>{const t={answer:e,dst:this.remoteId,connectionId:this.id,connectionType:this.type};this.emit(I.EVENTS.answer.key,t)}),this._negotiator.on(L.EVENTS.offerCreated.key,e=>{const t={offer:e,dst:this.remoteId,connectionId:this.id,connectionType:this.type,metadata:this.metadata};this.serialization&&(t.serialization=this.serialization),this.label&&(t.label=this.label),this.dcInit&&(t.dcInit=this.dcInit),this.emit(I.EVENTS.offer.key,t)}),this._negotiator.on(L.EVENTS.iceCandidate.key,e=>{const t={candidate:e,dst:this.remoteId,connectionId:this.id,connectionType:this.type};this.emit(I.EVENTS.candidate.key,t)}),this._negotiator.on(L.EVENTS.iceConnectionFailed.key,()=>{this.close()})}get peer(){return y.warn(this.constructor.name+".peer is deprecated and may be removed from a future version."+` Please use ${this.constructor.name}.remoteId instead.`),this.remoteId}static get EVENTS(){return k}}var N=I,D=r("./node_modules/js-binarypack/lib/binarypack.js"),B=r.n(D),F=r("./node_modules/object-sizeof/index.js"),U=r.n(F);const j=new h.a(["open","data","error"]);j.extend(N.EVENTS.enums);const V=new h.a(["binary","binary-utf8","json","none"]);class z extends N{constructor(e,t){if(super(e,t),this._idPrefix="dc_",this.type="data",this._isOnOpenCalled=!1,this.label=this._options.label||this.id,this.dcInit=this._options.dcInit||{},this.serialization=z.SERIALIZATIONS.binary.key,this._options.serialization){if(!z.SERIALIZATIONS.get(this._options.serialization))throw new Error("Invalid serialization");this.serialization=this._options.serialization,this._isUnreliableDCInit(this.dcInit)&&(y.warn("You can not specify serialization with unreliable mode enabled."),this.serialization=z.SERIALIZATIONS.binary.key)}this._sendBuffer=[],this._receivedData={},this._queuedMessages=this._options.queuedMessages||[],this._negotiator.on(L.EVENTS.dcCreated.key,e=>{this._dc=e,this._dc.binaryType="arraybuffer",this._setupMessageHandlers(),this._isOnOpenCalled||"open"!==this._dc.readyState||this._dc.onopen()}),this._options.payload&&(this._options.payload.pcConfig=this._options.pcConfig)}async startConnection(){await this._negotiator.startConnection(this._options.payload||{originator:!0,type:"data",label:this.label,dcInit:this.dcInit,pcConfig:this._options.pcConfig}),this._pcAvailable=!0,this._handleQueuedMessages()}_setupMessageHandlers(){this._dc.onopen=()=>{this._isOnOpenCalled||(y.log("Data channel connection success"),this.open=!0,this._isOnOpenCalled=!0,this.emit(z.EVENTS.open.key))},this._dc.onmessage=e=>{this._handleDataMessage(e)},this._dc.onclose=()=>{y.log("DataChannel closed for:",this.id),this.close()},this._dc.onerror=e=>{y.error(e)}}_handleDataMessage(e){if(this.serialization===z.SERIALIZATIONS.none.key)return void this.emit(z.EVENTS.data.key,e.data);if(this.serialization===z.SERIALIZATIONS.json.key)return void this.emit(z.EVENTS.data.key,JSON.parse(e.data));const t=B.a.unpack(e.data);let r=this._receivedData[t.id];if(r||(r=this._receivedData[t.id]={size:t.size,type:t.type,name:t.name,mimeType:t.mimeType,totalParts:t.totalParts,parts:new Array(t.totalParts),receivedParts:0}),r.receivedParts++,r.parts[t.index]=t.data,r.receivedParts===r.totalParts){delete this._receivedData[t.id];const e=O.joinArrayBuffers(r.parts),n=B.a.unpack(e);let o;switch(r.type){case"Blob":o=new Blob([new Uint8Array(n)],{type:r.mimeType});break;case"File":o=new File([new Uint8Array(n)],r.name,{type:r.mimeType});break;default:o=n}this.emit(z.EVENTS.data.key,o)}}send(data){if(!this.open)return void this.emit(z.EVENTS.error.key,new Error("Connection is not open. You should listen for the `open` event before sending messages."));if(null==data)return;if(this.serialization===z.SERIALIZATIONS.none.key)return this._sendBuffer.push(data),void this._startSendLoop();if(this.serialization===z.SERIALIZATIONS.json.key)return this._sendBuffer.push(JSON.stringify(data)),void this._startSendLoop();const e=B.a.pack(data),t=e.size,r=data.constructor.name,n={id:O.randomId(),type:r,size:t,totalParts:0};"File"===r&&(n.name=data.name),data instanceof Blob&&(n.mimeType=data.type);const o=_.maxChunkSize-U()(n),l=Math.ceil(t/o);n.totalParts=l;for(let t=0;t<l;t++){const r=e.slice(t*o,(t+1)*o);n.index=t,n.data=r,O.blobToArrayBuffer(B.a.pack(n),e=>{this._sendBuffer.push(e),this._startSendLoop()})}}close(e){super.close(e),this._isOnOpenCalled=!1}_startSendLoop(){this.sendInterval||(this.sendInterval=setInterval(()=>{const e=this._sendBuffer.shift();try{this._dc.send(e)}catch(t){this._sendBuffer.push(e)}0===this._sendBuffer.length&&(clearInterval(this.sendInterval),this.sendInterval=void 0)},_.sendInterval))}_isUnreliableDCInit(e){return!!e&&("maxRetransmits"in e||"maxPacketLifeTime"in e)}static get SERIALIZATIONS(){return V}static get EVENTS(){return j}}var G=z;const H=new h.a(["stream"]);H.extend(N.EVENTS.enums);class W extends N{constructor(e,t){super(e,t),this._idPrefix="mc_",this.type="media",this.localStream=this._options.stream,this._queuedMessages=this._options.queuedMessages||[],this._pcAvailable=!1}async startConnection(){this._options.originator&&(await this._negotiator.startConnection({type:"media",stream:this.localStream,originator:this._options.originator,pcConfig:this._options.pcConfig,videoBandwidth:this._options.videoBandwidth,audioBandwidth:this._options.audioBandwidth,videoCodec:this._options.videoCodec,audioCodec:this._options.audioCodec,videoReceiveEnabled:this._options.videoReceiveEnabled,audioReceiveEnabled:this._options.audioReceiveEnabled}),this._pcAvailable=!0,this._handleQueuedMessages())}answer(e,t={}){this.localStream?y.warn("localStream already exists on this MediaConnection. Are you answering a call twice?"):(this._options.payload.stream=e,this.localStream=e,this._negotiator.startConnection({type:"media",stream:this.localStream,originator:!1,offer:this._options.payload.offer,pcConfig:this._options.pcConfig,audioBandwidth:t.audioBandwidth,videoBandwidth:t.videoBandwidth,videoCodec:t.videoCodec,audioCodec:t.audioCodec}),this._pcAvailable=!0,this._handleQueuedMessages(),this.open=!0)}replaceStream(e){this._negotiator.replaceStream(e),this.localStream=e}_setupNegotiatorMessageHandlers(){super._setupNegotiatorMessageHandlers(),this._negotiator.on(L.EVENTS.addStream.key,e=>{y.log("Receiving stream",e),this.remoteStream&&this.remoteStream.id===e.id||(this.remoteStream=e,this.emit(W.EVENTS.stream.key,e))})}static get EVENTS(){return H}}var X=W,Y=r("./node_modules/socket.io-parser/index.js"),Z=r.n(Y),J=r("./node_modules/has-binary2/index.js"),K=r.n(J);const Q=new h.a(["stream","open","close","peerJoin","peerLeave","error","data","log"]),$=new h.a(["offer","answer","candidate","leave","close","getLog","broadcast"]);class ee extends o.a{constructor(e,t,r={}){if(super(),this.constructor===ee)throw new TypeError("Cannot construct Room instances directly");this.name=e,this._options=r,this._peerId=t,this._localStream=this._options.stream,this._pcConfig=this._options.pcConfig,this.lastSent=0,this.messageQueue=[],this.sendIntervalID=null}validateSendDataSize(data){const e=K()([data]),t={type:e?Z.a.BINARY_EVENT:Z.a.EVENT,data:[data]};let r;(new Z.a.Encoder).encode(t,t=>{r=e?t[1].byteLength:t[0].length});const n=_.maxDataSize;if(r>n)throw new Error("The size of data to send must be less than 20 MB");return!0}_sendData(e,t){const r=_.minBroadcastIntervalMs,n=Date.now(),o=n-this.lastsend;if(0==this.messageQueue.length&&o>=r)return this.lastsend=n,void this.emit(t,e);this.messageQueue.push({msg:e,key:t}),null===this.sendIntervalID&&(this.sendIntervalID=setInterval(()=>{if(0===this.messageQueue.length)return clearInterval(this.sendIntervalID),void(this.sendIntervalID=null);const e=this.messageQueue.shift();this.lastsend=Date.now(),this.emit(e.key,e.msg)},r))}handleData(e){const t={data:e.data,src:e.src};this.emit(ee.EVENTS.data.key,t)}handleLog(e){this.emit(ee.EVENTS.log.key,e)}getLog(){const e={roomName:this.name};this.emit(ee.MESSAGE_EVENTS.getLog.key,e)}static get EVENTS(){return Q}static get MESSAGE_EVENTS(){return $}}var te=ee;const re=new h.a([]);re.extend(te.EVENTS.enums);const ae=new h.a(["offerRequest","candidate"]);ae.extend(te.MESSAGE_EVENTS.enums);class ie extends te{constructor(e,t,r){super(e,t,r),this.remoteStreams={},this.members=[],this._open=!1,this._msidMap={},this._unknownStreams={},this._negotiator=new L}call(e){e&&(this._localStream=e);const data={roomName:this.name};this.emit(ie.MESSAGE_EVENTS.offerRequest.key,data)}handleOffer(e){let t=e.offer;O.isPlanBSafari()&&(t=A.unifiedToPlanB(t)),this._connectionStarted?this._negotiator.handleOffer(t):(this._negotiator.startConnection({type:"media",stream:this._localStream,pcConfig:this._options.pcConfig,offer:t}),this._setupNegotiatorMessageHandlers(),this._connectionStarted=!0)}_setupNegotiatorMessageHandlers(){this._negotiator.on(L.EVENTS.addStream.key,e=>{const t=e;if(this._msidMap[t.id]){if(t.peerId=this._msidMap[t.id],t.peerId===this._peerId)return;const e=this.remoteStreams[t.id];if(e&&e.id===t.id)return;this.remoteStreams[t.id]=t,this.emit(ie.EVENTS.stream.key,t),y.log(`Received remote media stream for ${t.peerId} in ${this.name}`)}else this._unknownStreams[t.id]=t}),this._negotiator.on(L.EVENTS.negotiationNeeded.key,()=>{const e={roomName:this.name};this.emit(ie.MESSAGE_EVENTS.offerRequest.key,e)}),this._negotiator.on(L.EVENTS.answerCreated.key,e=>{O.isPlanBSafari()||(e.sdp=A.ensureUnifiedPlan(e.sdp));const t={roomName:this.name,answer:e};this.emit(ie.MESSAGE_EVENTS.answer.key,t)}),this._negotiator.on(L.EVENTS.iceConnectionFailed.key,()=>{this.close()}),this._negotiator.on(L.EVENTS.iceCandidate.key,e=>{const t={roomName:this.name,candidate:e};this.emit(ie.MESSAGE_EVENTS.candidate.key,t)})}handleJoin(e){const{src:t,roomMembers:r}=e;if(t===this._peerId)return this._open=!0,this.members=r.filter(e=>e!==t),this.call(this._localStream),void this.emit(ie.EVENTS.open.key);this.members.push(t),this.emit(ie.EVENTS.peerJoin.key,t)}handleLeave(e){if(!this._open)return;const t=e.src,r=this.members.indexOf(t);r>=0&&this.members.splice(r,1);for(const e in this.remoteStreams)this.remoteStreams[e].peerId===t&&(delete this.remoteStreams[e],delete this._msidMap[e],delete this._unknownStreams[e]);this.emit(ie.EVENTS.peerLeave.key,t)}send(data){if(!this._open)return;if(!this.validateSendDataSize(data))return;const e={roomName:this.name,data:data};this._sendData(e,ie.MESSAGE_EVENTS.broadcast.key)}close(){if(!this._open)return;this._negotiator&&this._negotiator.cleanup(),this._open=!1;const e={roomName:this.name};this.emit(ie.MESSAGE_EVENTS.leave.key,e),this.emit(ie.EVENTS.close.key)}replaceStream(e){this._localStream=e,this._negotiator.replaceStream(e)}updateMsidMap(e={}){this._msidMap=e;for(const e of Object.keys(this._unknownStreams))if(this._msidMap[e]){const t=this._unknownStreams[e];if(t.peerId=this._msidMap[t.id],delete this._unknownStreams[e],t.peerId===this._peerId)return;this.remoteStreams[t.id]=t,this.emit(ie.EVENTS.stream.key,t)}}static get EVENTS(){return re}static get MESSAGE_EVENTS(){return ae}}var ne=ie;const oe=new h.a([]);oe.extend(te.EVENTS.enums);const se=new h.a(["broadcastByDC","getPeers"]);se.extend(te.MESSAGE_EVENTS.enums);class le extends te{constructor(e,t,r){super(e,t,r),this.connections={},this._queuedMessages={}}call(e){e&&(this._localStream=e);const data={roomName:this.name,type:"media"};this.emit(le.MESSAGE_EVENTS.getPeers.key,data)}connect(){const data={roomName:this.name,type:"data"};this.emit(le.MESSAGE_EVENTS.getPeers.key,data)}makeMediaConnections(e){const t={stream:this._localStream,pcConfig:this._pcConfig,originator:!0,videoBandwidth:this._options.videoBandwidth,audioBandwidth:this._options.audioBandwidth,videoCodec:this._options.videoCodec,audioCodec:this._options.audioCodec,videoReceiveEnabled:this._options.videoReceiveEnabled,audioReceiveEnabled:this._options.audioReceiveEnabled};this._makeConnections(e,"media",t)}makeDataConnections(e){const t={pcConfig:this._pcConfig};this._makeConnections(e,"data",t)}handleJoin(e){const t=e.src;if(t===this._peerId)return this.call(this._localStream),void this.emit(le.EVENTS.open.key);this.emit(le.EVENTS.peerJoin.key,t)}handleLeave(e){const t=e.src;this._deleteConnections(t),this.emit(le.EVENTS.peerLeave.key,t)}handleOffer(e){const t=e.connectionId;let r=this._getConnection(e.src,t);if(r)r.updateOffer(e);else if("media"===e.connectionType){if(this._hasConnection(e.src)&&this._peerId>e.src)return;r=new X(e.src,{connectionId:t,payload:e,metadata:e.metadata,queuedMessages:this._queuedMessages[t],pcConfig:this._pcConfig}),r.startConnection(),y.log("MediaConnection created in OFFER"),this._addConnection(e.src,r),this._setupMessageHandlers(r),r.answer(this._localStream,{videoBandwidth:this._options.videoBandwidth,audioBandwidth:this._options.audioBandwidth,videoCodec:this._options.videoCodec,audioCodec:this._options.audioCodec,videoReceiveEnabled:this._options.videoReceiveEnabled,audioReceiveEnabled:this._options.audioReceiveEnabled})}else y.warn("Received malformed connection type: "+e.connectionType)}handleAnswer(e){const t=this._getConnection(e.src,e.connectionId);t&&t.handleAnswer(e)}handleCandidate(e){const t=this._getConnection(e.src,e.connectionId);t?t.handleCandidate(e):(void 0===this._queuedMessages[e.connectionId]&&(this._queuedMessages[e.connectionId]=[]),this._queuedMessages[e.connectionId].push({type:_.MESSAGE_TYPES.SERVER.CANDIDATE.key,payload:e}))}send(data){if(!this.validateSendDataSize(data))return;const e={roomName:this.name,data:data};this._sendData(e,le.MESSAGE_EVENTS.broadcast.key)}close(){for(const e in this.connections)this.connections.hasOwnProperty(e)&&this.connections[e].forEach(e=>{e.close()});const e={roomName:this.name};this.emit(le.MESSAGE_EVENTS.leave.key,e),this.emit(le.EVENTS.close.key)}replaceStream(e){this._localStream=e;for(const t in this.connections)this.connections.hasOwnProperty(t)&&this.connections[t].forEach(t=>{"media"===t.type&&t.replaceStream(e)})}_addConnection(e,t){this.connections[e]||(this.connections[e]=[]),this.connections[e].push(t)}_makeConnections(e,t,r){e.filter(e=>e!==this._peerId).filter(e=>!this._hasConnection(e)).forEach(e=>{let n;switch(t){case"data":n=new G(e,r);break;case"media":n=new X(e,r);break;default:return}n.startConnection(),this._addConnection(e,n),this._setupMessageHandlers(n),y.log(`${t} connection to ${e} created in ${this.name}`)})}_deleteConnections(e){this.connections[e]&&delete this.connections[e]}_getConnection(e,t){return this.connections&&this.connections[e]?this.connections[e].filter(e=>e.id===t)[0]:null}_hasConnection(e){return this.connections[e]&&this.connections[e].length>0}_setupMessageHandlers(e){e.on(N.EVENTS.offer.key,e=>{e.roomName=this.name,this.emit(le.MESSAGE_EVENTS.offer.key,e)}),e.on(N.EVENTS.answer.key,e=>{e.roomName=this.name,this.emit(le.MESSAGE_EVENTS.answer.key,e)}),e.on(N.EVENTS.candidate.key,e=>{e.roomName=this.name,this.emit(le.MESSAGE_EVENTS.candidate.key,e)}),"media"===e.type&&e.on(X.EVENTS.stream.key,t=>{t.peerId=e.remoteId,this.emit(le.EVENTS.stream.key,t)})}static get EVENTS(){return oe}static get MESSAGE_EVENTS(){return se}}var he=le;const ue=new h.a(["open","error","call","connection","expiresin","close","disconnected"]);class fe extends o.a{constructor(e,t){super(),this.connections={},this.rooms={},this._queuedMessages={},e&&e.constructor===Object?(t=e,e=void 0):e&&(e=e.toString());const r={debug:y.LOG_LEVELS.NONE,secure:!0,config:_.defaultConfig,turn:!0,dispatcherSecure:_.DISPATCHER_SECURE,dispatcherHost:_.DISPATCHER_HOST,dispatcherPort:_.DISPATCHER_PORT};this.options=Object.assign({},r,t),this.options.token=O.randomToken(),y.setLogLevel(this.options.debug),O.validateId(e)?O.validateKey(t.key)?("/"===this.options.host&&(this.options.host=window.location.hostname),void 0===t.secure&&443!==this.options.port&&(this.options.secure=void 0),this._initializeServerConnection(e)):this._abort("invalid-key",`API KEY "${this.options.key}" is invalid`):this._abort("invalid-id",`ID "${e}" is invalid`)}call(e,t,r={}){if(!this._checkOpenStatus())return;r.originator=!0,r.stream=t,r.pcConfig=this._pcConfig;const n=new X(e,r);return n.startConnection(),y.log("MediaConnection created in call method"),this._addConnection(e,n),n}connect(e,t={}){if(!this._checkOpenStatus())return;t.pcConfig=this._pcConfig;const r=new G(e,t);return r.startConnection(),y.log("DataConnection created in connect method"),this._addConnection(e,r),r}joinRoom(e,t={}){if(this._checkOpenStatus()){if(!e){const e=new Error("Room name must be defined.");return e.type="room-error",y.error(e),this.emit(fe.EVENTS.error.key,e),null}return t.pcConfig=this._pcConfig,t.peerId=this.id,"sfu"===t.mode?this._initializeSfuRoom(e,t):this._initializeFullMeshRoom(e,t)}}getConnection(e,t){if(this._checkOpenStatus()){if(this.connections[e])for(const r of this.connections[e])if(r.id===t)return r;return null}}get open(){return this.socket&&this.socket.isOpen}destroy(){this._cleanup(),this.disconnect()}disconnect(){this.open&&(this.socket.close(),this.emit(fe.EVENTS.disconnected.key,this.id))}reconnect(){this.open||this.socket.reconnect()}updateCredential(e){this.socket.updateCredential(e)}listAllPeers(e){if(!this._checkOpenStatus())return;e=e||function(){};const t=this,r=new XMLHttpRequest,n=`${this.socket.signalingServerUrl}/api/apikeys/${this.options.key}/clients/`;r.open("get",n,!0),r.onerror=function(){t._abort("server-error","Could not get peers from the server."),e([])},r.onreadystatechange=function(){if(4===r.readyState)if(401===r.status){e([]);const r=new Error("It doesn't look like you have permission to list peers IDs. Please enable the SkyWay REST API on dashboard");r.type="list-error",y.error(r),t.emit(fe.EVENTS.error.key,r)}else 200===r.status?e(JSON.parse(r.responseText)):e([])},r.send(null)}_checkOpenStatus(){return this.open||this._emitNotConnectedError(),this.open}_emitNotConnectedError(){y.warn("You cannot connect to a new Peer because you are not connecting to SkyWay server now.You can create a new Peer to reconnect, or call reconnect() on this peer if you believe its ID to still be available.");const e=new Error("Cannot connect to new Peer before connecting to SkyWay server or after disconnecting from the server.");e.type="disconnected",y.error(e),this.emit(fe.EVENTS.error.key,e)}_initializeServerConnection(e){this.socket=new M(this.options.key,{secure:this.options.secure,host:this.options.host,port:this.options.port,dispatcherSecure:this.options.dispatcherSecure,dispatcherHost:this.options.dispatcherHost,dispatcherPort:this.options.dispatcherPort}),this._setupMessageHandlers(),this.socket.on("error",e=>{this._abort("socket-error",e)}),this.socket.on("disconnect",()=>{this.disconnect();const e=new Error("Lost connection to server.");e.type="socket-error",y.error(e),this.emit(fe.EVENTS.error.key,e)}),this.socket.start(e,this.options.token,this.options.credential)}_initializeSfuRoom(e,t={}){if(this.rooms[e])return this.rooms[e];const r=new ne(e,this.id,t);this.rooms[e]=r,this._setupSFURoomMessageHandlers(r);const data={roomName:e,roomType:"sfu"};return this.socket.send(_.MESSAGE_TYPES.CLIENT.ROOM_JOIN.key,data),r}_initializeFullMeshRoom(e,t={}){if(this.rooms[e])return this.rooms[e];const r=new he(e,this.id,t);this.rooms[e]=r,this._setupMeshRoomMessageHandlers(r);const data={roomName:e,roomType:"mesh"};return this.socket.send(_.MESSAGE_TYPES.CLIENT.ROOM_JOIN.key,data),r}_setupMessageHandlers(){this.socket.on(_.MESSAGE_TYPES.SERVER.OPEN.key,e=>{this.id=e.peerId,this._pcConfig=Object.assign({},this.options.config);const t=this._pcConfig.iceServers;this._pcConfig.iceServers=t?t.slice():[];const r=e.turnCredential;let n,o;if("object"==typeof r?(n=r.username,o=r.credential):"string"==typeof r&&(n=`${this.options.key}$${this.id}`,o=r),!0===this.options.turn&&n&&o){const e=[{protocol:"turn",transport:"tcp"},{protocol:"turn",transport:"udp"}];"edge"!==O.detectBrowser().name&&e.push({protocol:"turns",transport:"tcp"});for(const t of e){const e=t.protocol,r=t.transport,l={urls:`${e}:${_.TURN_HOST}:${_.TURN_PORT}?transport=${r}`,url:`${e}:${_.TURN_HOST}:${_.TURN_PORT}?transport=${r}`,username:n,credential:o};this._pcConfig.iceServers.push(l)}y.log("SkyWay TURN Server is available")}else y.log("SkyWay TURN Server is unavailable");this.emit(fe.EVENTS.open.key,this.id)}),this.socket.on(_.MESSAGE_TYPES.SERVER.ERROR.key,e=>{const t=new Error(e.message);t.type=e.type,y.error(t),this.emit(fe.EVENTS.error.key,t)}),this.socket.on(_.MESSAGE_TYPES.SERVER.LEAVE.key,e=>{y.log("Received leave message from "+e),this._cleanupPeer(e)}),this.socket.on(_.MESSAGE_TYPES.SERVER.FORCE_CLOSE.key,({src:e,connectionId:t})=>{const r=this.getConnection(e,t);r&&r.close(!1)}),this.socket.on(_.MESSAGE_TYPES.SERVER.AUTH_EXPIRES_IN.key,e=>{y.log("Credential expires in "+e),this.emit(fe.EVENTS.expiresin.key,e)}),this.socket.on(_.MESSAGE_TYPES.SERVER.OFFER.key,e=>{const t=e.roomName;if(t){const r=this.rooms[t];return void(r&&r.handleOffer(e))}const r=e.connectionId;let n=this.getConnection(e.src,r);n?n.updateOffer(e):("media"===e.connectionType?(n=new X(e.src,{connectionId:r,payload:e,metadata:e.metadata,originator:!1,queuedMessages:this._queuedMessages[r],pcConfig:this._pcConfig}),n.startConnection(),y.log("MediaConnection created in OFFER"),this._addConnection(e.src,n),this.emit(fe.EVENTS.call.key,n)):"data"===e.connectionType?(n=new G(e.src,{connectionId:r,payload:e,metadata:e.metadata,label:e.label,dcInit:e.dcInit,serialization:e.serialization,queuedMessages:this._queuedMessages[r],pcConfig:this._pcConfig}),n.startConnection(),y.log("DataConnection created in OFFER"),this._addConnection(e.src,n),this.emit(fe.EVENTS.connection.key,n)):y.warn("Received malformed connection type: ",e.connectionType),delete this._queuedMessages[r])}),this.socket.on(_.MESSAGE_TYPES.SERVER.ANSWER.key,e=>{const t=e.roomName;if(t){const r=this.rooms[t];return void(r&&r.handleAnswer(e))}const r=this.getConnection(e.src,e.connectionId);r?r.handleAnswer(e):this._storeMessage(_.MESSAGE_TYPES.SERVER.ANSWER.key,e)}),this.socket.on(_.MESSAGE_TYPES.SERVER.CANDIDATE.key,e=>{const t=e.roomName;if(t){const r=this.rooms[t];return void(r&&r.handleCandidate(e))}const r=this.getConnection(e.src,e.connectionId);r?r.handleCandidate(e):this._storeMessage(_.MESSAGE_TYPES.SERVER.CANDIDATE.key,e)}),this.socket.on(_.MESSAGE_TYPES.SERVER.ROOM_USER_JOIN.key,e=>{const t=this.rooms[e.roomName];t&&t.handleJoin(e)}),this.socket.on(_.MESSAGE_TYPES.SERVER.ROOM_USER_LEAVE.key,e=>{const t=this.rooms[e.roomName];t&&t.handleLeave(e)}),this.socket.on(_.MESSAGE_TYPES.SERVER.ROOM_DATA.key,e=>{const t=this.rooms[e.roomName];t&&t.handleData(e)}),this.socket.on(_.MESSAGE_TYPES.SERVER.ROOM_LOGS.key,e=>{const t=this.rooms[e.roomName];t&&t.handleLog(e.log)}),this.socket.on(_.MESSAGE_TYPES.SERVER.ROOM_USERS.key,e=>{const t=this.rooms[e.roomName];t&&("media"===e.type?t.makeMediaConnections(e.userList):t.makeDataConnections(e.userList))}),this.socket.on(_.MESSAGE_TYPES.SERVER.SFU_OFFER.key,e=>{const t=this.rooms[e.roomName];t&&(t.updateMsidMap(e.msids),t.handleOffer(e))})}_setupConnectionMessageHandlers(e){e.on(N.EVENTS.candidate.key,e=>{this.socket.send(_.MESSAGE_TYPES.CLIENT.SEND_CANDIDATE.key,e)}),e.on(N.EVENTS.answer.key,e=>{this.socket.send(_.MESSAGE_TYPES.CLIENT.SEND_ANSWER.key,e)}),e.on(N.EVENTS.offer.key,e=>{this.socket.send(_.MESSAGE_TYPES.CLIENT.SEND_OFFER.key,e)}),e.on(N.EVENTS.forceClose.key,()=>{const t={dst:e.remoteId,connectionId:e.id};this.socket.send(_.MESSAGE_TYPES.CLIENT.SEND_FORCE_CLOSE.key,t)})}_setupRoomMessageHandlers(e){e.on(ne.MESSAGE_EVENTS.broadcast.key,e=>{this.socket.send(_.MESSAGE_TYPES.CLIENT.ROOM_SEND_DATA.key,e)}),e.on(ne.MESSAGE_EVENTS.getLog.key,e=>{this.socket.send(_.MESSAGE_TYPES.CLIENT.ROOM_GET_LOGS.key,e)}),e.on(ne.MESSAGE_EVENTS.leave.key,t=>{delete this.rooms[e.name],this.socket.send(_.MESSAGE_TYPES.CLIENT.ROOM_LEAVE.key,t)})}_setupSFURoomMessageHandlers(e){this._setupRoomMessageHandlers(e),e.on(ne.MESSAGE_EVENTS.offerRequest.key,e=>{this.socket.send(_.MESSAGE_TYPES.CLIENT.SFU_GET_OFFER.key,e)}),e.on(ne.MESSAGE_EVENTS.answer.key,e=>{this.socket.send(_.MESSAGE_TYPES.CLIENT.SFU_ANSWER.key,e)}),e.on(ne.MESSAGE_EVENTS.candidate.key,e=>{this.socket.send(_.MESSAGE_TYPES.CLIENT.SFU_CANDIDATE.key,e)})}_setupMeshRoomMessageHandlers(e){this._setupRoomMessageHandlers(e),e.on(he.MESSAGE_EVENTS.offer.key,e=>{this.socket.send(_.MESSAGE_TYPES.CLIENT.SEND_OFFER.key,e)}),e.on(he.MESSAGE_EVENTS.answer.key,e=>{this.socket.send(_.MESSAGE_TYPES.CLIENT.SEND_ANSWER.key,e)}),e.on(he.MESSAGE_EVENTS.candidate.key,e=>{this.socket.send(_.MESSAGE_TYPES.CLIENT.SEND_CANDIDATE.key,e)}),e.on(he.MESSAGE_EVENTS.getPeers.key,e=>{this.socket.send(_.MESSAGE_TYPES.CLIENT.ROOM_GET_USERS.key,e)})}_abort(e,t){y.error("Aborting!"),this.disconnect();const r=new Error(t);r.type=e,y.error(r),this.emit(fe.EVENTS.error.key,r)}_addConnection(e,t){this.connections[e]||(this.connections[e]=[]),this.connections[e].push(t),this._setupConnectionMessageHandlers(t)}_storeMessage(e,t){this._queuedMessages[t.connectionId]||(this._queuedMessages[t.connectionId]=[]),this._queuedMessages[t.connectionId].push({type:e,payload:t})}_cleanup(){if(this.connections)for(const e of Object.keys(this.connections))this._cleanupPeer(e);this.emit(fe.EVENTS.close.key)}_cleanupPeer(e){if(this.connections[e])for(const t of this.connections[e])t.close()}static get EVENTS(){return ue}}t.default=fe},0:function(e,t){}}).default},e.exports=n()}}]);